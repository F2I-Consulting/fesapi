/* gsoap_witsml1_4_1_1Stub.h
   Generated by gSOAP 2.8.66 for witsml1_4_1_1ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use, no resale/redistribution.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_witsml1	"http://www.witsml.org/schemas/1series"
#define SOAP_NAMESPACE_OF_abstract	"http://www.energistics.org/schemas/abstract"
#define SOAP_NAMESPACE_OF_gml	"http://www.opengis.net/gml/3.2"
#define SOAP_NAMESPACE_OF_xlink	"http://www.w3.org/1999/xlink"
#define SOAP_NAMESPACE_OF_gmd	"http://www.isotc211.org/2005/gmd"
#define SOAP_NAMESPACE_OF_gts	"http://www.isotc211.org/2005/gts"
#define SOAP_NAMESPACE_OF_gco	"http://www.isotc211.org/2005/gco"
#define SOAP_NAMESPACE_OF_gsr	"http://www.isotc211.org/2005/gsr"
#include <time.h>

#ifndef gsoap_witsml1_4_1_1Stub_H
#define gsoap_witsml1_4_1_1Stub_H
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20866
# error "GSOAP VERSION 20866 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


namespace gsoap_witsml1_4_1_1 {

/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* witsml1_4_1_1ForGsoap.h:1058 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType (-237)

/* gml:AggregationType */
enum gml__AggregationType {
	gml__AggregationType__set = 0,
	gml__AggregationType__bag = 1,
	gml__AggregationType__sequence = 2,
	gml__AggregationType__array = 3,
	gml__AggregationType__record = 4,
	gml__AggregationType__table = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:1085 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show (-238)

/* xlink:show */
enum _xlink__show {
	_xlink__show__new_ = 0,
	_xlink__show__replace = 1,
	_xlink__show__embed = 2,
	_xlink__show__other = 3,
	_xlink__show__none = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:1101 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate (-239)

/* xlink:actuate */
enum _xlink__actuate {
	_xlink__actuate__onLoad = 0,
	_xlink__actuate__onRequest = 1,
	_xlink__actuate__other = 2,
	_xlink__actuate__none = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:1576 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom (-284)

/* witsml1:PercentUom */
enum witsml1__PercentUom {
	witsml1__PercentUom___x0025 = 0
};
#endif

/* witsml1_4_1_1ForGsoap.h:1587 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom (-285)

/* witsml1:MeasuredDepthUom */
enum witsml1__MeasuredDepthUom {
	witsml1__MeasuredDepthUom__m = 'm',
	witsml1__MeasuredDepthUom__ft = 'n',
	witsml1__MeasuredDepthUom__ftUS = 'o'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1609 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom (-286)

/* witsml1:WellVerticalCoordinateUom */
enum witsml1__WellVerticalCoordinateUom {
	witsml1__WellVerticalCoordinateUom__m = 'm',
	witsml1__WellVerticalCoordinateUom__ft = 'n',
	witsml1__WellVerticalCoordinateUom__ftUS = 'o',
	witsml1__WellVerticalCoordinateUom__ftBr_x002865_x0029 = 'p'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1632 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom (-287)

/* witsml1:AccelerationLinearUom */
enum witsml1__AccelerationLinearUom {
	witsml1__AccelerationLinearUom__m_x002fs2 = 0,
	witsml1__AccelerationLinearUom__cm_x002fs2 = 1,
	witsml1__AccelerationLinearUom__ft_x002fs2 = 2,
	witsml1__AccelerationLinearUom__Gal = 3,
	witsml1__AccelerationLinearUom__mgn = 4,
	witsml1__AccelerationLinearUom__gn = 5,
	witsml1__AccelerationLinearUom__mGal = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:1646 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom (-288)

/* witsml1:AnglePerLengthUom */
enum witsml1__AnglePerLengthUom {
	witsml1__AnglePerLengthUom__rad_x002fm = 0,
	witsml1__AnglePerLengthUom__dega_x002f30ft = 1,
	witsml1__AnglePerLengthUom__dega_x002fft = 2,
	witsml1__AnglePerLengthUom__dega_x002f100ft = 3,
	witsml1__AnglePerLengthUom__dega_x002fm = 4,
	witsml1__AnglePerLengthUom__dega_x002f30m = 5,
	witsml1__AnglePerLengthUom__rad_x002fft = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:1660 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom (-289)

/* witsml1:AnglePerTimeUom */
enum witsml1__AnglePerTimeUom {
	witsml1__AnglePerTimeUom__rad_x002fs = 0,
	witsml1__AnglePerTimeUom__c_x002fs = 1,
	witsml1__AnglePerTimeUom__dega_x002fh = 2,
	witsml1__AnglePerTimeUom__dega_x002fmin = 3,
	witsml1__AnglePerTimeUom__dega_x002fs = 4,
	witsml1__AnglePerTimeUom__rev_x002fs = 5,
	witsml1__AnglePerTimeUom__rpm = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:1674 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom (-290)

/* witsml1:AreaUom */
enum witsml1__AreaUom {
	witsml1__AreaUom__b = 'b',
	witsml1__AreaUom__m2 = 'c',
	witsml1__AreaUom__acre = 'd',
	witsml1__AreaUom__cm2 = 'e',
	witsml1__AreaUom__ft2 = 'f',
	witsml1__AreaUom__ha = 'g',
	witsml1__AreaUom__in2 = 'h',
	witsml1__AreaUom__km2 = 'i',
	witsml1__AreaUom__mi2 = 'j',
	witsml1__AreaUom__miUS2 = 'k',
	witsml1__AreaUom__mm2 = 'l',
	witsml1__AreaUom__um2 = 'm',
	witsml1__AreaUom__yd2 = 'n'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1694 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom (-291)

/* witsml1:AreaPerAreaUom */
enum witsml1__AreaPerAreaUom {
	witsml1__AreaPerAreaUom__Euc = 0,
	witsml1__AreaPerAreaUom___x0025 = 1,
	witsml1__AreaPerAreaUom__in2_x002fft2 = 2,
	witsml1__AreaPerAreaUom__in2_x002fin2 = 3,
	witsml1__AreaPerAreaUom__m2_x002fm2 = 4,
	witsml1__AreaPerAreaUom__mm2_x002fmm2 = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:1707 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom (-292)

/* witsml1:CompressibilityUom */
enum witsml1__CompressibilityUom {
	witsml1__CompressibilityUom__1_x002fpsi = 0,
	witsml1__CompressibilityUom__1_x002fupsi = 1,
	witsml1__CompressibilityUom__1_x002fPa = 2,
	witsml1__CompressibilityUom__1_x002fbar = 3,
	witsml1__CompressibilityUom__1_x002fkPa = 4,
	witsml1__CompressibilityUom__1_x002fpPa = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:1720 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom (-293)

/* witsml1:DensityUom */
enum witsml1__DensityUom {
	witsml1__DensityUom__kg_x002fm3 = 0,
	witsml1__DensityUom__10Mg_x002fm3 = 1,
	witsml1__DensityUom__dAPI = 2,
	witsml1__DensityUom__g_x002fcm3 = 3,
	witsml1__DensityUom__g_x002fdm3 = 4,
	witsml1__DensityUom__g_x002fgalUK = 5,
	witsml1__DensityUom__g_x002fgalUS = 6,
	witsml1__DensityUom__g_x002fL = 7,
	witsml1__DensityUom__g_x002fm3 = 8,
	witsml1__DensityUom__grain_x002fft3 = 9,
	witsml1__DensityUom__grain_x002fgalUS = 10,
	witsml1__DensityUom__grain_x002f100ft3 = 11,
	witsml1__DensityUom__kg_x002fdm3 = 12,
	witsml1__DensityUom__kg_x002fL = 13,
	witsml1__DensityUom__Mg_x002fm3 = 14,
	witsml1__DensityUom__lbm_x002f10bbl = 15,
	witsml1__DensityUom__lbm_x002fbbl = 16,
	witsml1__DensityUom__lbm_x002fft3 = 17,
	witsml1__DensityUom__lbm_x002fgalUK = 18,
	witsml1__DensityUom__lbm_x002f1000galUK = 19,
	witsml1__DensityUom__lbm_x002fgalUS = 20,
	witsml1__DensityUom__lbm_x002f1000galUS = 21,
	witsml1__DensityUom__lbm_x002fin3 = 22,
	witsml1__DensityUom__lbm_x002fMbbl = 23,
	witsml1__DensityUom__mg_x002fdm3 = 24,
	witsml1__DensityUom__mg_x002fgalUS = 25,
	witsml1__DensityUom__mg_x002fL = 26,
	witsml1__DensityUom__mg_x002fm3 = 27,
	witsml1__DensityUom__ug_x002fcm3 = 28
};
#endif

/* witsml1_4_1_1ForGsoap.h:1756 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom (-294)

/* witsml1:DimensionlessUom */
enum witsml1__DimensionlessUom {
	witsml1__DimensionlessUom__Euc = 0,
	witsml1__DimensionlessUom___x0025 = 1,
	witsml1__DimensionlessUom__cEuc = 2,
	witsml1__DimensionlessUom__mEuc = 3,
	witsml1__DimensionlessUom__nEuc = 4,
	witsml1__DimensionlessUom__uEuc = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:1769 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom (-295)

/* witsml1:DynamicViscosityUom */
enum witsml1__DynamicViscosityUom {
	witsml1__DynamicViscosityUom__P = 'P',
	witsml1__DynamicViscosityUom__Pa_x002es = 'Q',
	witsml1__DynamicViscosityUom__cP = 'R',
	witsml1__DynamicViscosityUom__psi_x002es = 'S',
	witsml1__DynamicViscosityUom__dyne_x002es_x002fcm2 = 'T',
	witsml1__DynamicViscosityUom__kgf_x002es_x002fm2 = 'U',
	witsml1__DynamicViscosityUom__lbf_x002es_x002fft2 = 'V',
	witsml1__DynamicViscosityUom__lbf_x002es_x002fin2 = 'W',
	witsml1__DynamicViscosityUom__mPa_x002es = 'X',
	witsml1__DynamicViscosityUom__N_x002es_x002fm2 = 'Y'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1786 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom (-296)

/* witsml1:ElectricCurrentUom */
enum witsml1__ElectricCurrentUom {
	witsml1__ElectricCurrentUom__A = 'A',
	witsml1__ElectricCurrentUom__MA = 'B',
	witsml1__ElectricCurrentUom__kA = 'C',
	witsml1__ElectricCurrentUom__mA = 'D',
	witsml1__ElectricCurrentUom__nA = 'E',
	witsml1__ElectricCurrentUom__pA = 'F',
	witsml1__ElectricCurrentUom__uA = 'G'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1800 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom (-297)

/* witsml1:ElectricPotentialUom */
enum witsml1__ElectricPotentialUom {
	witsml1__ElectricPotentialUom__V = 'V',
	witsml1__ElectricPotentialUom__kV = 'W',
	witsml1__ElectricPotentialUom__mV = 'X',
	witsml1__ElectricPotentialUom__MV = 'Y',
	witsml1__ElectricPotentialUom__uV = 'Z'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1812 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom (-298)

/* witsml1:EquivalentPerMassUom */
enum witsml1__EquivalentPerMassUom {
	witsml1__EquivalentPerMassUom__eq_x002fkg = 0,
	witsml1__EquivalentPerMassUom__meq_x002fg = 1,
	witsml1__EquivalentPerMassUom__meq_x002f100g = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:1822 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom (-299)

/* witsml1:ForceUom */
enum witsml1__ForceUom {
	witsml1__ForceUom__N = 'N',
	witsml1__ForceUom__daN = 'O',
	witsml1__ForceUom__dyne = 'P',
	witsml1__ForceUom__gf = 'Q',
	witsml1__ForceUom__kdyne = 'R',
	witsml1__ForceUom__kgf = 'S',
	witsml1__ForceUom__klbf = 'T',
	witsml1__ForceUom__kN = 'U',
	witsml1__ForceUom__lbf = 'V',
	witsml1__ForceUom__Mgf = 'W',
	witsml1__ForceUom__mN = 'X',
	witsml1__ForceUom__MN = 'Y',
	witsml1__ForceUom__ozf = 'Z',
	witsml1__ForceUom__pdl = 91,
	witsml1__ForceUom__tonfUK = 92,
	witsml1__ForceUom__tonfUS = 93,
	witsml1__ForceUom__uN = 94
};
#endif

/* witsml1_4_1_1ForGsoap.h:1846 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom (-300)

/* witsml1:ForcePerLengthUom */
enum witsml1__ForcePerLengthUom {
	witsml1__ForcePerLengthUom__N_x002f30m = 0,
	witsml1__ForcePerLengthUom__N_x002fm = 1,
	witsml1__ForcePerLengthUom__dyne_x002fcm = 2,
	witsml1__ForcePerLengthUom__kN_x002fm = 3,
	witsml1__ForcePerLengthUom__kgf_x002fcm = 4,
	witsml1__ForcePerLengthUom__lbf_x002f100ft = 5,
	witsml1__ForcePerLengthUom__lbf_x002f30m = 6,
	witsml1__ForcePerLengthUom__lbf_x002fft = 7,
	witsml1__ForcePerLengthUom__lbf_x002fin = 8,
	witsml1__ForcePerLengthUom__mN_x002fkm = 9,
	witsml1__ForcePerLengthUom__mN_x002fm = 10,
	witsml1__ForcePerLengthUom__pdl_x002fcm = 11,
	witsml1__ForcePerLengthUom__tonfUK_x002fft = 12,
	witsml1__ForcePerLengthUom__tonfUS_x002fft = 13
};
#endif

/* witsml1_4_1_1ForGsoap.h:1867 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom (-301)

/* witsml1:ForcePerVolumeUom */
enum witsml1__ForcePerVolumeUom {
	witsml1__ForcePerVolumeUom__N_x002fm3 = 0,
	witsml1__ForcePerVolumeUom__atm_x002f100m = 1,
	witsml1__ForcePerVolumeUom__atm_x002fm = 2,
	witsml1__ForcePerVolumeUom__bar_x002fkm = 3,
	witsml1__ForcePerVolumeUom__bar_x002fm = 4,
	witsml1__ForcePerVolumeUom__GPa_x002fcm = 5,
	witsml1__ForcePerVolumeUom__kPa_x002f100m = 6,
	witsml1__ForcePerVolumeUom__kPa_x002fm = 7,
	witsml1__ForcePerVolumeUom__lbf_x002fft3 = 8,
	witsml1__ForcePerVolumeUom__lbf_x002fgalUS = 9,
	witsml1__ForcePerVolumeUom__MPa_x002fm = 10,
	witsml1__ForcePerVolumeUom__psi_x002fft = 11,
	witsml1__ForcePerVolumeUom__psi_x002f100ft = 12,
	witsml1__ForcePerVolumeUom__psi_x002fkft = 13,
	witsml1__ForcePerVolumeUom__psi_x002fm = 14,
	witsml1__ForcePerVolumeUom__Pa_x002fm = 15,
	witsml1__ForcePerVolumeUom__atm_x002fft = 16
};
#endif

/* witsml1_4_1_1ForGsoap.h:1891 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom (-302)

/* witsml1:IlluminanceUom */
enum witsml1__IlluminanceUom {
	witsml1__IlluminanceUom__lx = 0,
	witsml1__IlluminanceUom__lm_x002fm2 = 1,
	witsml1__IlluminanceUom__footcandle = 2,
	witsml1__IlluminanceUom__klx = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:1902 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom (-303)

/* witsml1:LengthUom */
enum witsml1__LengthUom {
	witsml1__LengthUom__m = 'm',
	witsml1__LengthUom__angstrom = 'n',
	witsml1__LengthUom__chBnA = 'o',
	witsml1__LengthUom__chBnB = 'p',
	witsml1__LengthUom__chCla = 'q',
	witsml1__LengthUom__chSe = 'r',
	witsml1__LengthUom__chUS = 's',
	witsml1__LengthUom__cm = 't',
	witsml1__LengthUom__dm = 'u',
	witsml1__LengthUom__fathom = 'v',
	witsml1__LengthUom__fm = 'w',
	witsml1__LengthUom__ft = 'x',
	witsml1__LengthUom__ftBnA = 'y',
	witsml1__LengthUom__ftBnB = 'z',
	witsml1__LengthUom__ftBr_x002865_x0029 = 123,
	witsml1__LengthUom__ftCla = 124,
	witsml1__LengthUom__ftGC = 125,
	witsml1__LengthUom__ftInd = 126,
	witsml1__LengthUom__ftInd_x002837_x0029 = 127,
	witsml1__LengthUom__ftInd_x002862_x0029 = 128,
	witsml1__LengthUom__ftInd_x002875_x0029 = 129,
	witsml1__LengthUom__ftMA = 130,
	witsml1__LengthUom__ftSe = 131,
	witsml1__LengthUom__ftUS = 132,
	witsml1__LengthUom__in = 133,
	witsml1__LengthUom__in_x002f10 = 134,
	witsml1__LengthUom__in_x002f16 = 135,
	witsml1__LengthUom__in_x002f32 = 136,
	witsml1__LengthUom__in_x002f64 = 137,
	witsml1__LengthUom__inUS = 138,
	witsml1__LengthUom__km = 139,
	witsml1__LengthUom__lkBnA = 140,
	witsml1__LengthUom__lkBnB = 141,
	witsml1__LengthUom__lkCla = 142,
	witsml1__LengthUom__lkSe = 143,
	witsml1__LengthUom__lkUS = 144,
	witsml1__LengthUom__mGer = 145,
	witsml1__LengthUom__mi = 146,
	witsml1__LengthUom__mil = 147,
	witsml1__LengthUom__miUS = 148,
	witsml1__LengthUom__mm = 149,
	witsml1__LengthUom__Mm = 150,
	witsml1__LengthUom__nautmi = 151,
	witsml1__LengthUom__nm = 152,
	witsml1__LengthUom__pm = 153,
	witsml1__LengthUom__um = 154,
	witsml1__LengthUom__yd = 155,
	witsml1__LengthUom__ydBnA = 156,
	witsml1__LengthUom__ydBnB = 157,
	witsml1__LengthUom__ydCla = 158,
	witsml1__LengthUom__ydIm = 159,
	witsml1__LengthUom__ydInd = 160,
	witsml1__LengthUom__ydInd_x002837_x0029 = 161,
	witsml1__LengthUom__ydInd_x002862_x0029 = 162,
	witsml1__LengthUom__ydInd_x002875_x0029 = 163,
	witsml1__LengthUom__ydSe = 164
};
#endif

/* witsml1_4_1_1ForGsoap.h:1965 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom (-304)

/* witsml1:LengthPerLengthUom */
enum witsml1__LengthPerLengthUom {
	witsml1__LengthPerLengthUom___x0025 = 0,
	witsml1__LengthPerLengthUom__ft_x002f100ft = 1,
	witsml1__LengthPerLengthUom__ft_x002fft = 2,
	witsml1__LengthPerLengthUom__ft_x002fin = 3,
	witsml1__LengthPerLengthUom__ft_x002fm = 4,
	witsml1__LengthPerLengthUom__ft_x002fmi = 5,
	witsml1__LengthPerLengthUom__km_x002fcm = 6,
	witsml1__LengthPerLengthUom__m_x002f30m = 7,
	witsml1__LengthPerLengthUom__m_x002fcm = 8,
	witsml1__LengthPerLengthUom__m_x002fkm = 9,
	witsml1__LengthPerLengthUom__m_x002fm = 10,
	witsml1__LengthPerLengthUom__mi_x002fin = 11
};
#endif

/* witsml1_4_1_1ForGsoap.h:1984 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom (-305)

/* witsml1:MagneticInductionUom */
enum witsml1__MagneticInductionUom {
	witsml1__MagneticInductionUom__T = 'T',
	witsml1__MagneticInductionUom__gauss = 'U',
	witsml1__MagneticInductionUom__mT = 'V',
	witsml1__MagneticInductionUom__mgauss = 'W',
	witsml1__MagneticInductionUom__nT = 'X',
	witsml1__MagneticInductionUom__uT = 'Y'
};
#endif

/* witsml1_4_1_1ForGsoap.h:1997 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom (-306)

/* witsml1:MassConcentrationUom */
enum witsml1__MassConcentrationUom {
	witsml1__MassConcentrationUom__Euc = 0,
	witsml1__MassConcentrationUom___x0025 = 1,
	witsml1__MassConcentrationUom__g_x002fkg = 2,
	witsml1__MassConcentrationUom__kg_x002fkg = 3,
	witsml1__MassConcentrationUom__kg_x002fsack94 = 4,
	witsml1__MassConcentrationUom__mg_x002fkg = 5,
	witsml1__MassConcentrationUom__permil = 6,
	witsml1__MassConcentrationUom__ppdk = 7,
	witsml1__MassConcentrationUom__ppk = 8,
	witsml1__MassConcentrationUom__ppm = 9
};
#endif

/* witsml1_4_1_1ForGsoap.h:2014 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom (-307)

/* witsml1:MassUom */
enum witsml1__MassUom {
	witsml1__MassUom__g = 'g',
	witsml1__MassUom__t = 't',
	witsml1__MassUom__kg = 'u',
	witsml1__MassUom__ag = 'v',
	witsml1__MassUom__ct = 'w',
	witsml1__MassUom__cwtUK = 'x',
	witsml1__MassUom__cwtUS = 'y',
	witsml1__MassUom__grain = 'z',
	witsml1__MassUom__klbm = 123,
	witsml1__MassUom__lbm = 124,
	witsml1__MassUom__Mg = 125,
	witsml1__MassUom__mg = 126,
	witsml1__MassUom__oz_x0028av_x0029 = 127,
	witsml1__MassUom__oz_x0028troy_x0029 = 128,
	witsml1__MassUom__ozm = 129,
	witsml1__MassUom__sack94 = 130,
	witsml1__MassUom__tonUK = 131,
	witsml1__MassUom__tonUS = 132,
	witsml1__MassUom__ug = 133
};
#endif

/* witsml1_4_1_1ForGsoap.h:2040 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom (-308)

/* witsml1:MassPerLengthUom */
enum witsml1__MassPerLengthUom {
	witsml1__MassPerLengthUom__kg_x002fm = 0,
	witsml1__MassPerLengthUom__klbm_x002fin = 1,
	witsml1__MassPerLengthUom__lbm_x002fft = 2,
	witsml1__MassPerLengthUom__Mg_x002fin = 3,
	witsml1__MassPerLengthUom__kg_x002em_x002fcm2 = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:2052 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom (-309)

/* witsml1:MomentOfForceUom */
enum witsml1__MomentOfForceUom {
	witsml1__MomentOfForceUom__J = 'J',
	witsml1__MomentOfForceUom__dN_x002em = 'K',
	witsml1__MomentOfForceUom__daN_x002em = 'L',
	witsml1__MomentOfForceUom__ft_x002elbf = 'M',
	witsml1__MomentOfForceUom__kft_x002elbf = 'N',
	witsml1__MomentOfForceUom__kgf_x002em = 'O',
	witsml1__MomentOfForceUom__kN_x002em = 'P',
	witsml1__MomentOfForceUom__lbf_x002eft = 'Q',
	witsml1__MomentOfForceUom__lbf_x002ein = 'R',
	witsml1__MomentOfForceUom__lbm_x002eft2_x002fs2 = 'S',
	witsml1__MomentOfForceUom__N_x002em = 'T',
	witsml1__MomentOfForceUom__pdl_x002eft = 'U',
	witsml1__MomentOfForceUom__tonfUS_x002eft = 'V',
	witsml1__MomentOfForceUom__tonfUS_x002emi = 'W'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2073 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom (-310)

/* witsml1:PerLengthUom */
enum witsml1__PerLengthUom {
	witsml1__PerLengthUom__1_x002fm = 0,
	witsml1__PerLengthUom__1_x002fangstrom = 1,
	witsml1__PerLengthUom__1_x002fcm = 2,
	witsml1__PerLengthUom__1_x002fft = 3,
	witsml1__PerLengthUom__1_x002fin = 4,
	witsml1__PerLengthUom__1_x002fmi = 5,
	witsml1__PerLengthUom__1_x002fmm = 6,
	witsml1__PerLengthUom__1_x002fnm = 7,
	witsml1__PerLengthUom__1_x002fyd = 8
};
#endif

/* witsml1_4_1_1ForGsoap.h:2089 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom (-311)

/* witsml1:PermeabilityRockUom */
enum witsml1__PermeabilityRockUom {
	witsml1__PermeabilityRockUom__D = 'D',
	witsml1__PermeabilityRockUom__mD = 'E'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2098 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom (-312)

/* witsml1:PlaneAngleUom */
enum witsml1__PlaneAngleUom {
	witsml1__PlaneAngleUom__c = 'c',
	witsml1__PlaneAngleUom__rad = 'd',
	witsml1__PlaneAngleUom__ccgr = 'e',
	witsml1__PlaneAngleUom__cgr = 'f',
	witsml1__PlaneAngleUom__dega = 'g',
	witsml1__PlaneAngleUom__gon = 'h',
	witsml1__PlaneAngleUom__gr = 'i',
	witsml1__PlaneAngleUom__Grad = 'j',
	witsml1__PlaneAngleUom__krad = 'k',
	witsml1__PlaneAngleUom__mila = 'l',
	witsml1__PlaneAngleUom__mina = 'm',
	witsml1__PlaneAngleUom__mrad = 'n',
	witsml1__PlaneAngleUom__Mrad = 'o',
	witsml1__PlaneAngleUom__mseca = 'p',
	witsml1__PlaneAngleUom__seca = 'q',
	witsml1__PlaneAngleUom__urad = 'r'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2121 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom (-313)

/* witsml1:PowerUom */
enum witsml1__PowerUom {
	witsml1__PowerUom__W = 'W',
	witsml1__PowerUom__ch = 'X',
	witsml1__PowerUom__CV = 'Y',
	witsml1__PowerUom__ehp = 'Z',
	witsml1__PowerUom__GW = 91,
	witsml1__PowerUom__hhp = 92,
	witsml1__PowerUom__hp = 93,
	witsml1__PowerUom__kcal_x002fh = 94,
	witsml1__PowerUom__kW = 95,
	witsml1__PowerUom__MJ_x002fa = 96,
	witsml1__PowerUom__MW = 'a',
	witsml1__PowerUom__mW = 'b',
	witsml1__PowerUom__nW = 'c',
	witsml1__PowerUom__ton_x0020of_x0020refrig = 'd',
	witsml1__PowerUom__TW = 'e',
	witsml1__PowerUom__uW = 'f'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2144 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom (-314)

/* witsml1:PressureUom */
enum witsml1__PressureUom {
	witsml1__PressureUom__Pa = 0,
	witsml1__PressureUom__at = 1,
	witsml1__PressureUom__atm = 2,
	witsml1__PressureUom__bar = 3,
	witsml1__PressureUom__cmH2O_x00284degC_x0029 = 4,
	witsml1__PressureUom__dyne_x002fcm2 = 5,
	witsml1__PressureUom__GPa = 6,
	witsml1__PressureUom__hbar = 7,
	witsml1__PressureUom__inH2O_x002839_x002e2F_x0029 = 8,
	witsml1__PressureUom__inH2O_x002860F_x0029 = 9,
	witsml1__PressureUom__inHg_x002832F_x0029 = 10,
	witsml1__PressureUom__inHg_x002860F_x0029 = 11,
	witsml1__PressureUom__kgf_x002fcm2 = 12,
	witsml1__PressureUom__kgf_x002fmm2 = 13,
	witsml1__PressureUom__kN_x002fm2 = 14,
	witsml1__PressureUom__kPa = 15,
	witsml1__PressureUom__kpsi = 16,
	witsml1__PressureUom__lbf_x002fft2 = 17,
	witsml1__PressureUom__lbf_x002f100ft2 = 18,
	witsml1__PressureUom__lbf_x002fin2 = 19,
	witsml1__PressureUom__mbar = 20,
	witsml1__PressureUom__mmHg_x00280C_x0029 = 21,
	witsml1__PressureUom__mPa = 22,
	witsml1__PressureUom__MPa = 23,
	witsml1__PressureUom__Mpsi = 24,
	witsml1__PressureUom__N_x002fm2 = 25,
	witsml1__PressureUom__N_x002fmm2 = 26,
	witsml1__PressureUom__Pa_x0028g_x0029 = 27,
	witsml1__PressureUom__pPa = 28,
	witsml1__PressureUom__psi = 29,
	witsml1__PressureUom__psia = 30,
	witsml1__PressureUom__psig = 31,
	witsml1__PressureUom__tonfUS_x002fft2 = 32,
	witsml1__PressureUom__tonfUS_x002fin2 = 33,
	witsml1__PressureUom__torr = 34,
	witsml1__PressureUom__ubar = 35,
	witsml1__PressureUom__umHg_x00280C_x0029 = 36,
	witsml1__PressureUom__uPa = 37,
	witsml1__PressureUom__upsi = 38
};
#endif

/* witsml1_4_1_1ForGsoap.h:2190 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom (-315)

/* witsml1:RelativePowerUom */
enum witsml1__RelativePowerUom {
	witsml1__RelativePowerUom___x0025 = 0,
	witsml1__RelativePowerUom__Btu_x002fbhp_x002ehr = 1,
	witsml1__RelativePowerUom__W_x002fkW = 2,
	witsml1__RelativePowerUom__W_x002fW = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:2201 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom (-316)

/* witsml1:SpecificHeatCapacityUom */
enum witsml1__SpecificHeatCapacityUom {
	witsml1__SpecificHeatCapacityUom__J_x002fkg_x002eK = 0,
	witsml1__SpecificHeatCapacityUom__Btu_x002flbm_x002edegF = 1,
	witsml1__SpecificHeatCapacityUom__Btu_x002flbm_x002edegR = 2,
	witsml1__SpecificHeatCapacityUom__cal_x002fg_x002eK = 3,
	witsml1__SpecificHeatCapacityUom__J_x002fg_x002eK = 4,
	witsml1__SpecificHeatCapacityUom__kcal_x002fkg_x002edegC = 5,
	witsml1__SpecificHeatCapacityUom__kJ_x002fkg_x002eK = 6,
	witsml1__SpecificHeatCapacityUom__kW_x002eh_x002fkg_x002edegC = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:2216 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom (-317)

/* witsml1:SpecificVolumeUom */
enum witsml1__SpecificVolumeUom {
	witsml1__SpecificVolumeUom__m3_x002fkg = 0,
	witsml1__SpecificVolumeUom__bbl_x002ftonUK = 1,
	witsml1__SpecificVolumeUom__bbl_x002ftonUS = 2,
	witsml1__SpecificVolumeUom__cm3_x002fg = 3,
	witsml1__SpecificVolumeUom__dm3_x002fkg = 4,
	witsml1__SpecificVolumeUom__dm3_x002ft = 5,
	witsml1__SpecificVolumeUom__ft3_x002fkg = 6,
	witsml1__SpecificVolumeUom__ft3_x002flbm = 7,
	witsml1__SpecificVolumeUom__ft3_x002fsack94 = 8,
	witsml1__SpecificVolumeUom__galUS_x002fsack94 = 9,
	witsml1__SpecificVolumeUom__galUK_x002flbm = 10,
	witsml1__SpecificVolumeUom__galUS_x002flbm = 11,
	witsml1__SpecificVolumeUom__galUS_x002ftonUK = 12,
	witsml1__SpecificVolumeUom__galUS_x002ftonUS = 13,
	witsml1__SpecificVolumeUom__L_x002f100kg = 14,
	witsml1__SpecificVolumeUom__L_x002fkg = 15,
	witsml1__SpecificVolumeUom__L_x002ft = 16,
	witsml1__SpecificVolumeUom__L_x002ftonUK = 17,
	witsml1__SpecificVolumeUom__m3_x002fg = 18,
	witsml1__SpecificVolumeUom__m3_x002ft = 19,
	witsml1__SpecificVolumeUom__m3_x002ftonUK = 20,
	witsml1__SpecificVolumeUom__m3_x002ftonUS = 21
};
#endif

/* witsml1_4_1_1ForGsoap.h:2245 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom (-318)

/* witsml1:StandardVolumeUom */
enum witsml1__StandardVolumeUom {
	witsml1__StandardVolumeUom__scm_x002815C_x0029 = 0,
	witsml1__StandardVolumeUom__scm_x00280C_x0029 = 1,
	witsml1__StandardVolumeUom__Gsm3 = 2,
	witsml1__StandardVolumeUom__ksm3 = 3,
	witsml1__StandardVolumeUom__MMscf_x002860F_x0029 = 4,
	witsml1__StandardVolumeUom__MMscm_x002815C_x0029 = 5,
	witsml1__StandardVolumeUom__MMstb_x002860F_x0029 = 6,
	witsml1__StandardVolumeUom__Mscf_x002860F_x0029 = 7,
	witsml1__StandardVolumeUom__Mstb_x002860F_x0029 = 8,
	witsml1__StandardVolumeUom__scf_x002860F_x0029 = 9,
	witsml1__StandardVolumeUom__stb_x002860F_x0029 = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:2263 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom (-319)

/* witsml1:StandardVolumePerTimeUom */
enum witsml1__StandardVolumePerTimeUom {
	witsml1__StandardVolumePerTimeUom__scf_x002860F_x0029_x002fd = 0,
	witsml1__StandardVolumePerTimeUom__scm_x002815C_x0029_x002fs = 1,
	witsml1__StandardVolumePerTimeUom__scm_x002815C_x0029_x002fd = 2,
	witsml1__StandardVolumePerTimeUom__stb_x002860F_x0029_x002fd = 3,
	witsml1__StandardVolumePerTimeUom__ksm3_x002fd = 4,
	witsml1__StandardVolumePerTimeUom__Mscm_x002815C_x0029_x002fd = 5,
	witsml1__StandardVolumePerTimeUom__MMscm_x002815C_x0029_x002fd = 6,
	witsml1__StandardVolumePerTimeUom__Mstb_x002860F_x0029_x002fd = 7,
	witsml1__StandardVolumePerTimeUom__MMstb_x002860F_x0029_x002fd = 8,
	witsml1__StandardVolumePerTimeUom__Mscf_x002860F_x0029_x002fd = 9,
	witsml1__StandardVolumePerTimeUom__MMscf_x002860F_x0029_x002fd = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:2281 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom (-320)

/* witsml1:ThermalConductivityUom */
enum witsml1__ThermalConductivityUom {
	witsml1__ThermalConductivityUom__W_x002fm_x002eK = 0,
	witsml1__ThermalConductivityUom__Btu_x002fhr_x002eft_x002edegF = 1,
	witsml1__ThermalConductivityUom__cal_x002fh_x002ecm_x002edegC = 2,
	witsml1__ThermalConductivityUom__kcal_x002fh_x002em_x002edegC = 3,
	witsml1__ThermalConductivityUom__cal_x002fs_x002ecm_x002edegC = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:2293 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom (-321)

/* witsml1:ThermalVolumetricExpansionUom */
enum witsml1__ThermalVolumetricExpansionUom {
	witsml1__ThermalVolumetricExpansionUom__1_x002fK = 0,
	witsml1__ThermalVolumetricExpansionUom__ppm_x002fdegC = 1,
	witsml1__ThermalVolumetricExpansionUom__ppm_x002fdegF = 2,
	witsml1__ThermalVolumetricExpansionUom__1_x002fdegC = 3,
	witsml1__ThermalVolumetricExpansionUom__1_x002fdegF = 4,
	witsml1__ThermalVolumetricExpansionUom__1_x002fdegR = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:2306 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom (-322)

/* witsml1:ThermodynamicTemperatureUom */
enum witsml1__ThermodynamicTemperatureUom {
	witsml1__ThermodynamicTemperatureUom__K = 'K',
	witsml1__ThermodynamicTemperatureUom__degC = 'L',
	witsml1__ThermodynamicTemperatureUom__degF = 'M',
	witsml1__ThermodynamicTemperatureUom__degR = 'N'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2317 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom (-323)

/* witsml1:TimeUom */
enum witsml1__TimeUom {
	witsml1__TimeUom__s = 's',
	witsml1__TimeUom__a = 'a',
	witsml1__TimeUom__d = 'd',
	witsml1__TimeUom__h = 'h',
	witsml1__TimeUom__cs = 't',
	witsml1__TimeUom__Ga = 'u',
	witsml1__TimeUom__100s = 'v',
	witsml1__TimeUom__Ma = 'w',
	witsml1__TimeUom__min_ = 'x',
	witsml1__TimeUom__ms = 'y',
	witsml1__TimeUom__ms_x002f2 = 'z',
	witsml1__TimeUom__ns = 123,
	witsml1__TimeUom__ps = 124,
	witsml1__TimeUom__us = 125,
	witsml1__TimeUom__wk = 126,
	witsml1__TimeUom__100ka = 127
};
#endif

/* witsml1_4_1_1ForGsoap.h:2340 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom (-324)

/* witsml1:VelocityUom */
enum witsml1__VelocityUom {
	witsml1__VelocityUom__m_x002fs = 0,
	witsml1__VelocityUom__cm_x002fa = 1,
	witsml1__VelocityUom__cm_x002fs = 2,
	witsml1__VelocityUom__dm_x002fs = 3,
	witsml1__VelocityUom__ft_x002fd = 4,
	witsml1__VelocityUom__ft_x002fh = 5,
	witsml1__VelocityUom__ft_x002fmin = 6,
	witsml1__VelocityUom__ft_x002fms = 7,
	witsml1__VelocityUom__ft_x002fs = 8,
	witsml1__VelocityUom__ft_x002fus = 9,
	witsml1__VelocityUom__in_x002fa = 10,
	witsml1__VelocityUom__in_x002fmin = 11,
	witsml1__VelocityUom__in_x002fs = 12,
	witsml1__VelocityUom__kft_x002fh = 13,
	witsml1__VelocityUom__kft_x002fs = 14,
	witsml1__VelocityUom__km_x002fh = 15,
	witsml1__VelocityUom__km_x002fs = 16,
	witsml1__VelocityUom__knot = 17,
	witsml1__VelocityUom__m_x002fd = 18,
	witsml1__VelocityUom__m_x002fh = 19,
	witsml1__VelocityUom__m_x002fmin = 20,
	witsml1__VelocityUom__m_x002fms = 21,
	witsml1__VelocityUom__mi_x002fh = 22,
	witsml1__VelocityUom__mil_x002fyr = 23,
	witsml1__VelocityUom__mm_x002fa = 24,
	witsml1__VelocityUom__mm_x002fs = 25,
	witsml1__VelocityUom__nm_x002fs = 26,
	witsml1__VelocityUom__um_x002fs = 27
};
#endif

/* witsml1_4_1_1ForGsoap.h:2375 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom (-325)

/* witsml1:VolumeUom */
enum witsml1__VolumeUom {
	witsml1__VolumeUom__L = 'L',
	witsml1__VolumeUom__m3 = 'M',
	witsml1__VolumeUom__acre_x002eft = 'N',
	witsml1__VolumeUom__bbl = 'O',
	witsml1__VolumeUom__bcf = 'P',
	witsml1__VolumeUom__cm3 = 'Q',
	witsml1__VolumeUom__dm3 = 'R',
	witsml1__VolumeUom__flozUK = 'S',
	witsml1__VolumeUom__flozUS = 'T',
	witsml1__VolumeUom__ft3 = 'U',
	witsml1__VolumeUom__galUK = 'V',
	witsml1__VolumeUom__galUS = 'W',
	witsml1__VolumeUom__ha_x002em = 'X',
	witsml1__VolumeUom__hL = 'Y',
	witsml1__VolumeUom__in3 = 'Z',
	witsml1__VolumeUom__1000ft3 = 91,
	witsml1__VolumeUom__km3 = 92,
	witsml1__VolumeUom__Mbbl = 93,
	witsml1__VolumeUom__Mcf = 94,
	witsml1__VolumeUom__M_x0028ft3_x0029 = 95,
	witsml1__VolumeUom__mi3 = 96,
	witsml1__VolumeUom__mL = 'a',
	witsml1__VolumeUom__M_x0028m3_x0029 = 'b',
	witsml1__VolumeUom__mm3 = 'c',
	witsml1__VolumeUom__MMbbl = 'd',
	witsml1__VolumeUom__ptUK = 'e',
	witsml1__VolumeUom__ptUS = 'f',
	witsml1__VolumeUom__qtUK = 'g',
	witsml1__VolumeUom__qtUS = 'h',
	witsml1__VolumeUom__tcf = 'i',
	witsml1__VolumeUom__um2_x002em = 'j',
	witsml1__VolumeUom__yd3 = 'k'
};
#endif

/* witsml1_4_1_1ForGsoap.h:2414 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom (-326)

/* witsml1:VolumeFlowRateUom */
enum witsml1__VolumeFlowRateUom {
	witsml1__VolumeFlowRateUom__m3_x002fs = 0,
	witsml1__VolumeFlowRateUom__bbl_x002fd = 1,
	witsml1__VolumeFlowRateUom__bbl_x002fhr = 2,
	witsml1__VolumeFlowRateUom__bbl_x002fmin = 3,
	witsml1__VolumeFlowRateUom__cm3_x002f30min = 4,
	witsml1__VolumeFlowRateUom__cm3_x002fh = 5,
	witsml1__VolumeFlowRateUom__cm3_x002fmin = 6,
	witsml1__VolumeFlowRateUom__cm3_x002fs = 7,
	witsml1__VolumeFlowRateUom__dm3_x002fs = 8,
	witsml1__VolumeFlowRateUom__ft3_x002fd = 9,
	witsml1__VolumeFlowRateUom__ft3_x002fh = 10,
	witsml1__VolumeFlowRateUom__ft3_x002fmin = 11,
	witsml1__VolumeFlowRateUom__ft3_x002fs = 12,
	witsml1__VolumeFlowRateUom__galUK_x002fd = 13,
	witsml1__VolumeFlowRateUom__galUK_x002fhr = 14,
	witsml1__VolumeFlowRateUom__galUK_x002fmin = 15,
	witsml1__VolumeFlowRateUom__galUS_x002fd = 16,
	witsml1__VolumeFlowRateUom__galUS_x002fhr = 17,
	witsml1__VolumeFlowRateUom__galUS_x002fmin = 18,
	witsml1__VolumeFlowRateUom__kbbl_x002fd = 19,
	witsml1__VolumeFlowRateUom__1000ft3_x002fd = 20,
	witsml1__VolumeFlowRateUom__1000m3_x002fd = 21,
	witsml1__VolumeFlowRateUom__1000m3_x002fh = 22,
	witsml1__VolumeFlowRateUom__L_x002fh = 23,
	witsml1__VolumeFlowRateUom__L_x002fmin = 24,
	witsml1__VolumeFlowRateUom__L_x002fs = 25,
	witsml1__VolumeFlowRateUom__m3_x002fd = 26,
	witsml1__VolumeFlowRateUom__m3_x002fh = 27,
	witsml1__VolumeFlowRateUom__m3_x002fmin = 28,
	witsml1__VolumeFlowRateUom__Mbbl_x002fd = 29,
	witsml1__VolumeFlowRateUom__M_x0028ft3_x0029_x002fd = 30,
	witsml1__VolumeFlowRateUom__M_x0028m3_x0029_x002fd = 31
};
#endif

/* witsml1_4_1_1ForGsoap.h:2453 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom (-327)

/* witsml1:VolumePerLengthUom */
enum witsml1__VolumePerLengthUom {
	witsml1__VolumePerLengthUom__bblPft = 0,
	witsml1__VolumePerLengthUom__bblPin = 1,
	witsml1__VolumePerLengthUom__bblPmi = 2,
	witsml1__VolumePerLengthUom__dm3P100km = 3,
	witsml1__VolumePerLengthUom__dm3Pkm_x0028100_x0029 = 4,
	witsml1__VolumePerLengthUom__dm3Pm = 5,
	witsml1__VolumePerLengthUom__ft3Pft = 6,
	witsml1__VolumePerLengthUom__galUKPmi = 7,
	witsml1__VolumePerLengthUom__galUSPft = 8,
	witsml1__VolumePerLengthUom__galUSPmi = 9,
	witsml1__VolumePerLengthUom__in3Pft = 10,
	witsml1__VolumePerLengthUom__LP100km = 11,
	witsml1__VolumePerLengthUom__LPkm_x0028100_x0029 = 12,
	witsml1__VolumePerLengthUom__LPm = 13,
	witsml1__VolumePerLengthUom__m3Pkm = 14,
	witsml1__VolumePerLengthUom__m3Pm = 15
};
#endif

/* witsml1_4_1_1ForGsoap.h:2476 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom (-328)

/* witsml1:VolumePerVolumeUom */
enum witsml1__VolumePerVolumeUom {
	witsml1__VolumePerVolumeUom__Euc = 0,
	witsml1__VolumePerVolumeUom___x0025 = 1,
	witsml1__VolumePerVolumeUom__permil = 2,
	witsml1__VolumePerVolumeUom__ppdk = 3,
	witsml1__VolumePerVolumeUom__ppk = 4,
	witsml1__VolumePerVolumeUom__ppm = 5,
	witsml1__VolumePerVolumeUom__bbl_x002facre_x002eft = 6,
	witsml1__VolumePerVolumeUom__bbl_x002fbbl = 7,
	witsml1__VolumePerVolumeUom__bbl_x002fft3 = 8,
	witsml1__VolumePerVolumeUom__bbl_x002f100bbl = 9,
	witsml1__VolumePerVolumeUom__bbl_x002fk_x0028ft3_x0029 = 10,
	witsml1__VolumePerVolumeUom__bbl_x002fM_x0028ft3_x0029 = 11,
	witsml1__VolumePerVolumeUom__cm3_x002fcm3 = 12,
	witsml1__VolumePerVolumeUom__cm3_x002fm3 = 13,
	witsml1__VolumePerVolumeUom__dm3_x002fm3 = 14,
	witsml1__VolumePerVolumeUom__ft3_x002fbbl = 15,
	witsml1__VolumePerVolumeUom__ft3_x002fft3 = 16,
	witsml1__VolumePerVolumeUom__galUS_x002fkgalUS = 17,
	witsml1__VolumePerVolumeUom__galUK_x002fkgalUK = 18,
	witsml1__VolumePerVolumeUom__galUK_x002fft3 = 19,
	witsml1__VolumePerVolumeUom__galUK_x002fMbbl = 20,
	witsml1__VolumePerVolumeUom__galUS_x002fbbl = 21,
	witsml1__VolumePerVolumeUom__galUS_x002f10bbl = 22,
	witsml1__VolumePerVolumeUom__galUS_x002fft3 = 23,
	witsml1__VolumePerVolumeUom__galUS_x002fMbbl = 24,
	witsml1__VolumePerVolumeUom__1000ft3_x002fbbl = 25,
	witsml1__VolumePerVolumeUom__ksm3_x002fsm3 = 26,
	witsml1__VolumePerVolumeUom__L_x002f10bbl = 27,
	witsml1__VolumePerVolumeUom__L_x002fm3 = 28,
	witsml1__VolumePerVolumeUom__m3_x002fha_x002em = 29,
	witsml1__VolumePerVolumeUom__m3_x002fm3 = 30,
	witsml1__VolumePerVolumeUom__M_x0028ft3_x0029_x002facre_x002eft = 31,
	witsml1__VolumePerVolumeUom__mL_x002fgalUK = 32,
	witsml1__VolumePerVolumeUom__mL_x002fgalUS = 33,
	witsml1__VolumePerVolumeUom__mL_x002fmL = 34,
	witsml1__VolumePerVolumeUom__MMbbl_x002facre_x002eft = 35,
	witsml1__VolumePerVolumeUom__MMscf60_x002fstb60 = 36,
	witsml1__VolumePerVolumeUom__Mscf60_x002fstb60 = 37,
	witsml1__VolumePerVolumeUom__ptUK_x002fMbbl = 38,
	witsml1__VolumePerVolumeUom__ptUS_x002f10bbl = 39,
	witsml1__VolumePerVolumeUom__pu = 40,
	witsml1__VolumePerVolumeUom__scm15_x002fstb60 = 41,
	witsml1__VolumePerVolumeUom__sm3_x002fksm3 = 42,
	witsml1__VolumePerVolumeUom__sm3_x002fsm3 = 43,
	witsml1__VolumePerVolumeUom__stb60_x002fMMscf60 = 44,
	witsml1__VolumePerVolumeUom__stb60_x002fMMscm15 = 45,
	witsml1__VolumePerVolumeUom__stb60_x002fMscf60 = 46,
	witsml1__VolumePerVolumeUom__stb60_x002fMscm15 = 47,
	witsml1__VolumePerVolumeUom__stb60_x002fscm15 = 48
};
#endif

/* witsml1_4_1_1ForGsoap.h:2539 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType (-330)

/* witsml1:ActivityClassType */
enum witsml1__ActivityClassType {
	witsml1__ActivityClassType__planned = 0,
	witsml1__ActivityClassType__unplanned = 1,
	witsml1__ActivityClassType__downtime = 2,
	witsml1__ActivityClassType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:2569 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus (-332)

/* witsml1:AuthorizationStatus */
enum witsml1__AuthorizationStatus {
	witsml1__AuthorizationStatus__draft = 0,
	witsml1__AuthorizationStatus__authorized = 1,
	witsml1__AuthorizationStatus__superceded = 2,
	witsml1__AuthorizationStatus__withdrawn = 3,
	witsml1__AuthorizationStatus__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:2598 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef (-333)

/* witsml1:AziRef */
enum witsml1__AziRef {
	witsml1__AziRef__magnetic_x0020north = 0,
	witsml1__AziRef__grid_x0020north = 1,
	witsml1__AziRef__true_x0020north = 2,
	witsml1__AziRef__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:2623 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType (-334)

/* witsml1:BearingType */
enum witsml1__BearingType {
	witsml1__BearingType__oil_x0020seal = 0,
	witsml1__BearingType__mud_x0020lube = 1,
	witsml1__BearingType__other = 2,
	witsml1__BearingType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:2648 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode (-335)

/* witsml1:BitDullCode */
enum witsml1__BitDullCode {
	witsml1__BitDullCode__BC = 0,
	witsml1__BitDullCode__BT = 1,
	witsml1__BitDullCode__BU = 2,
	witsml1__BitDullCode__CC = 3,
	witsml1__BitDullCode__CD = 4,
	witsml1__BitDullCode__CI = 5,
	witsml1__BitDullCode__CR = 6,
	witsml1__BitDullCode__CT = 7,
	witsml1__BitDullCode__ER = 8,
	witsml1__BitDullCode__FC = 9,
	witsml1__BitDullCode__HC = 10,
	witsml1__BitDullCode__JD = 11,
	witsml1__BitDullCode__LC = 12,
	witsml1__BitDullCode__LN = 13,
	witsml1__BitDullCode__LT = 14,
	witsml1__BitDullCode__NO = 15,
	witsml1__BitDullCode__OC = 16,
	witsml1__BitDullCode__PB = 17,
	witsml1__BitDullCode__PN = 18,
	witsml1__BitDullCode__RG = 19,
	witsml1__BitDullCode__RO = 20,
	witsml1__BitDullCode__SD = 21,
	witsml1__BitDullCode__SS = 22,
	witsml1__BitDullCode__TR = 23,
	witsml1__BitDullCode__WO = 24,
	witsml1__BitDullCode__WT = 25,
	witsml1__BitDullCode__unknown = 26
};
#endif

/* witsml1_4_1_1ForGsoap.h:2768 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled (-336)

/* witsml1:BitReasonPulled */
enum witsml1__BitReasonPulled {
	witsml1__BitReasonPulled__BHA = 0,
	witsml1__BitReasonPulled__CM = 1,
	witsml1__BitReasonPulled__CP = 2,
	witsml1__BitReasonPulled__DMF = 3,
	witsml1__BitReasonPulled__DP = 4,
	witsml1__BitReasonPulled__DST = 5,
	witsml1__BitReasonPulled__DTF = 6,
	witsml1__BitReasonPulled__FM = 7,
	witsml1__BitReasonPulled__HP = 8,
	witsml1__BitReasonPulled__HR = 9,
	witsml1__BitReasonPulled__LOG = 10,
	witsml1__BitReasonPulled__PP = 11,
	witsml1__BitReasonPulled__PR = 12,
	witsml1__BitReasonPulled__RIG = 13,
	witsml1__BitReasonPulled__TD = 14,
	witsml1__BitReasonPulled__TQ = 15,
	witsml1__BitReasonPulled__TW = 16,
	witsml1__BitReasonPulled__WC = 17,
	witsml1__BitReasonPulled__unknown = 18
};
#endif

/* witsml1_4_1_1ForGsoap.h:2856 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType (-337)

/* witsml1:BitType */
enum witsml1__BitType {
	witsml1__BitType__diamond = 0,
	witsml1__BitType__diamond_x0020core = 1,
	witsml1__BitType__insert_x0020roller_x0020cone = 2,
	witsml1__BitType__PDC = 3,
	witsml1__BitType__PDC_x0020core = 4,
	witsml1__BitType__roller_x0020cone = 5,
	witsml1__BitType__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:2893 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus (-338)

/* witsml1:BhaStatus */
enum witsml1__BhaStatus {
	witsml1__BhaStatus__final_ = 0,
	witsml1__BhaStatus__progress = 1,
	witsml1__BhaStatus__plan = 2,
	witsml1__BhaStatus__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:2915 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType (-339)

/* witsml1:BladeShapeType */
enum witsml1__BladeShapeType {
	witsml1__BladeShapeType__dynamic = 0,
	witsml1__BladeShapeType__melon = 1,
	witsml1__BladeShapeType__spiral = 2,
	witsml1__BladeShapeType__straight = 3,
	witsml1__BladeShapeType__variable = 4,
	witsml1__BladeShapeType__unknown = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:2943 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType (-340)

/* witsml1:BladeType */
enum witsml1__BladeType {
	witsml1__BladeType__clamp_on = 0,
	witsml1__BladeType__integral = 1,
	witsml1__BladeType__sleeve = 2,
	witsml1__BladeType__welded = 3,
	witsml1__BladeType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:2968 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType (-341)

/* witsml1:BopType */
enum witsml1__BopType {
	witsml1__BopType__annular_x0020preventer = 0,
	witsml1__BopType__shear_x0020ram = 1,
	witsml1__BopType__blind_x0020ram = 2,
	witsml1__BopType__pipe_x0020ram = 3,
	witsml1__BopType__drilling_x0020spool = 4,
	witsml1__BopType__flexible_x0020joint = 5,
	witsml1__BopType__connector = 6,
	witsml1__BopType__unknown = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:3005 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig (-342)

/* witsml1:BoxPinConfig */
enum witsml1__BoxPinConfig {
	witsml1__BoxPinConfig__bottom_x0020box_x002c_x0020top_x0020box = 0,
	witsml1__BoxPinConfig__bottom_x0020box_x002c_x0020top_x0020pin = 1,
	witsml1__BoxPinConfig__bottom_x0020pin_x0020top_x0020box = 2,
	witsml1__BoxPinConfig__bottom_x0020pin = 3,
	witsml1__BoxPinConfig__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:3034 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType (-343)

/* witsml1:CementJobType */
enum witsml1__CementJobType {
	witsml1__CementJobType__primary = 0,
	witsml1__CementJobType__plug = 1,
	witsml1__CementJobType__squeeze = 2,
	witsml1__CementJobType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:3056 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType (-344)

/* witsml1:ChangeInfoType */
enum witsml1__ChangeInfoType {
	witsml1__ChangeInfoType__add = 0,
	witsml1__ChangeInfoType__update = 1,
	witsml1__ChangeInfoType__delete_ = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:3078 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit (-345)

/* witsml1:ChronostratigraphyUnit */
enum witsml1__ChronostratigraphyUnit {
	witsml1__ChronostratigraphyUnit__era = 0,
	witsml1__ChronostratigraphyUnit__period = 1,
	witsml1__ChronostratigraphyUnit__epoch = 2,
	witsml1__ChronostratigraphyUnit__stage = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:3113 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition (-346)

/* witsml1:ConnectionPosition */
enum witsml1__ConnectionPosition {
	witsml1__ConnectionPosition__both = 0,
	witsml1__ConnectionPosition__bottom = 1,
	witsml1__ConnectionPosition__top = 2,
	witsml1__ConnectionPosition__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:3141 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod (-347)

/* witsml1:DeflectionMethod */
enum witsml1__DeflectionMethod {
	witsml1__DeflectionMethod__point_x0020bit = 0,
	witsml1__DeflectionMethod__push_x0020bit = 1
};
#endif

/* witsml1_4_1_1ForGsoap.h:3159 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType (-348)

/* witsml1:DerrickType */
enum witsml1__DerrickType {
	witsml1__DerrickType__double_ = 0,
	witsml1__DerrickType__quadruple = 1,
	witsml1__DerrickType__slant = 2,
	witsml1__DerrickType__triple = 3,
	witsml1__DerrickType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:3188 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType (-349)

/* witsml1:DrawWorksType */
enum witsml1__DrawWorksType {
	witsml1__DrawWorksType__mechanical = 0,
	witsml1__DrawWorksType__standard_x0020electric = 1,
	witsml1__DrawWorksType__diesel_x0020electric = 2,
	witsml1__DrawWorksType__ram_x0020rig = 3,
	witsml1__DrawWorksType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:3216 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType (-350)

/* witsml1:DriveType */
enum witsml1__DriveType {
	witsml1__DriveType__coiled_x0020tubing = 0,
	witsml1__DriveType__rotary_x0020kelly_x0020drive = 1,
	witsml1__DriveType__top_x0020drive = 2,
	witsml1__DriveType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:3241 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest (-351)

/* witsml1:EastOrWest */
enum witsml1__EastOrWest {
	witsml1__EastOrWest__east = 0,
	witsml1__EastOrWest__west = 1,
	witsml1__EastOrWest__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:3266 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum (-352)

/* witsml1:ElevCodeEnum */
enum witsml1__ElevCodeEnum {
	witsml1__ElevCodeEnum__CF = 0,
	witsml1__ElevCodeEnum__CV = 1,
	witsml1__ElevCodeEnum__DF = 2,
	witsml1__ElevCodeEnum__GL = 3,
	witsml1__ElevCodeEnum__KB = 4,
	witsml1__ElevCodeEnum__RB = 5,
	witsml1__ElevCodeEnum__RT = 6,
	witsml1__ElevCodeEnum__SF = 7,
	witsml1__ElevCodeEnum__LAT = 8,
	witsml1__ElevCodeEnum__SL = 9,
	witsml1__ElevCodeEnum__MHHW = 10,
	witsml1__ElevCodeEnum__MHW = 11,
	witsml1__ElevCodeEnum__MLLW = 12,
	witsml1__ElevCodeEnum__MLW = 13,
	witsml1__ElevCodeEnum__MTL = 14,
	witsml1__ElevCodeEnum__KO = 15,
	witsml1__ElevCodeEnum__unknown = 16
};
#endif

/* witsml1_4_1_1ForGsoap.h:3347 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid (-353)

/* witsml1:Ellipsoid */
enum witsml1__Ellipsoid {
	witsml1__Ellipsoid__AGD66 = 0,
	witsml1__Ellipsoid__AIRY_USCOREMOD = 1,
	witsml1__Ellipsoid__AIRY30 = 2,
	witsml1__Ellipsoid__AIRY49 = 3,
	witsml1__Ellipsoid__AUST_USCORENAT = 4,
	witsml1__Ellipsoid__BESL_DHD = 5,
	witsml1__Ellipsoid__BESL_NGL = 6,
	witsml1__Ellipsoid__BESL_RT9 = 7,
	witsml1__Ellipsoid__BESS41 = 8,
	witsml1__Ellipsoid__BESSNAM = 9,
	witsml1__Ellipsoid__BOGOTA = 10,
	witsml1__Ellipsoid__CL58 = 11,
	witsml1__Ellipsoid__CL58_1 = 12,
	witsml1__Ellipsoid__CL66 = 13,
	witsml1__Ellipsoid__CL66_M = 14,
	witsml1__Ellipsoid__CL80 = 15,
	witsml1__Ellipsoid__CL80_A = 16,
	witsml1__Ellipsoid__CL80_B = 17,
	witsml1__Ellipsoid__CL80_I = 18,
	witsml1__Ellipsoid__CL80_J = 19,
	witsml1__Ellipsoid__CL80_M = 20,
	witsml1__Ellipsoid__CL80_P = 21,
	witsml1__Ellipsoid__CMPOINCH = 22,
	witsml1__Ellipsoid__DAN = 23,
	witsml1__Ellipsoid__DELA = 24,
	witsml1__Ellipsoid__ED50 = 25,
	witsml1__Ellipsoid__EGYPT07 = 26,
	witsml1__Ellipsoid__EVER = 27,
	witsml1__Ellipsoid__EVER48 = 28,
	witsml1__Ellipsoid__EVER56 = 29,
	witsml1__Ellipsoid__EVER69 = 30,
	witsml1__Ellipsoid__EVER_BR = 31,
	witsml1__Ellipsoid__EVERMOD = 32,
	witsml1__Ellipsoid__EVER_P = 33,
	witsml1__Ellipsoid__EVER_TM = 34,
	witsml1__Ellipsoid__EVTM = 35,
	witsml1__Ellipsoid__FISC60 = 36,
	witsml1__Ellipsoid__FISC60MOD = 37,
	witsml1__Ellipsoid__FISC68 = 38,
	witsml1__Ellipsoid__FISCMOD = 39,
	witsml1__Ellipsoid__GDA94 = 40,
	witsml1__Ellipsoid__GRS67 = 41,
	witsml1__Ellipsoid__GRS80 = 42,
	witsml1__Ellipsoid__HAY09 = 43,
	witsml1__Ellipsoid__HEIS = 44,
	witsml1__Ellipsoid__HEL06 = 45,
	witsml1__Ellipsoid__HEL07 = 46,
	witsml1__Ellipsoid__HOUG = 47,
	witsml1__Ellipsoid__IAG_75 = 48,
	witsml1__Ellipsoid__INDIAN75 = 49,
	witsml1__Ellipsoid__INDO_74 = 50,
	witsml1__Ellipsoid__INT24 = 51,
	witsml1__Ellipsoid__IUGG67 = 52,
	witsml1__Ellipsoid__IUGG75 = 53,
	witsml1__Ellipsoid__JEFF48 = 54,
	witsml1__Ellipsoid__KAU63 = 55,
	witsml1__Ellipsoid__KRSV = 56,
	witsml1__Ellipsoid__MERIT83 = 57,
	witsml1__Ellipsoid__NAD27 = 58,
	witsml1__Ellipsoid__NAHRAN = 59,
	witsml1__Ellipsoid__NEWINT67 = 60,
	witsml1__Ellipsoid__NWL_10D = 61,
	witsml1__Ellipsoid__NWL_9D = 62,
	witsml1__Ellipsoid__OSGB36 = 63,
	witsml1__Ellipsoid__OSU86F = 64,
	witsml1__Ellipsoid__OSU91A = 'A',
	witsml1__Ellipsoid__PLESSIS_1817 = 'B',
	witsml1__Ellipsoid__PSAD56 = 'C',
	witsml1__Ellipsoid__PTNOIRE = 'D',
	witsml1__Ellipsoid__SA69 = 'E',
	witsml1__Ellipsoid__SPHR = 'F',
	witsml1__Ellipsoid__STRU = 'G',
	witsml1__Ellipsoid__WALB = 'H',
	witsml1__Ellipsoid__WAR24 = 'I',
	witsml1__Ellipsoid__WGS60 = 'J',
	witsml1__Ellipsoid__WGS66 = 'K',
	witsml1__Ellipsoid__WGS72 = 'L',
	witsml1__Ellipsoid__WGS84 = 'M',
	witsml1__Ellipsoid__unknown = 'N'
};
#endif

/* witsml1_4_1_1ForGsoap.h:3675 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource (-354)

/* witsml1:ErrorTermSource */
enum witsml1__ErrorTermSource {
	witsml1__ErrorTermSource__sensor = 0,
	witsml1__ErrorTermSource__azimuth_x0020reference = 1,
	witsml1__ErrorTermSource__magnetic = 2,
	witsml1__ErrorTermSource__alignment = 3,
	witsml1__ErrorTermSource__misalignment = 4,
	witsml1__ErrorTermSource__depth = 5,
	witsml1__ErrorTermSource__reference = 6,
	witsml1__ErrorTermSource__unknown = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:3721 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode (-355)

/* witsml1:ErrorPropagationMode */
enum witsml1__ErrorPropagationMode {
	witsml1__ErrorPropagationMode__B = 'B',
	witsml1__ErrorPropagationMode__R = 'R',
	witsml1__ErrorPropagationMode__S = 'S',
	witsml1__ErrorPropagationMode__W = 'W',
	witsml1__ErrorPropagationMode__G = 'G',
	witsml1__ErrorPropagationMode__unknown = 'X'
};
#endif

/* witsml1_4_1_1ForGsoap.h:3757 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode (-356)

/* witsml1:ErrorModelMisalignmentMode */
enum witsml1__ErrorModelMisalignmentMode {
	witsml1__ErrorModelMisalignmentMode__1 = 1,
	witsml1__ErrorModelMisalignmentMode__2 = 2,
	witsml1__ErrorModelMisalignmentMode__3 = 3,
	witsml1__ErrorModelMisalignmentMode__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:3790 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType (-358)

/* witsml1:GasPeakType */
enum witsml1__GasPeakType {
	witsml1__GasPeakType__circulating_x0020background_x0020gas = 0,
	witsml1__GasPeakType__connection_x0020gas = 1,
	witsml1__GasPeakType__drilling_x0020background_x0020gas = 2,
	witsml1__GasPeakType__drilling_x0020gas_x0020peak = 3,
	witsml1__GasPeakType__flow_x0020check_x0020gas = 4,
	witsml1__GasPeakType__no_x0020readings = 5,
	witsml1__GasPeakType__other = 6,
	witsml1__GasPeakType__shut_x0020down_x0020gas = 7,
	witsml1__GasPeakType__trip_x0020gas = 8,
	witsml1__GasPeakType__unknown = 9
};
#endif

/* witsml1_4_1_1ForGsoap.h:3833 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum (-359)

/* witsml1:GeodeticDatum */
enum witsml1__GeodeticDatum {
	witsml1__GeodeticDatum__ADND = 0,
	witsml1__GeodeticDatum__ARC50 = 1,
	witsml1__GeodeticDatum__AUSG = 2,
	witsml1__GeodeticDatum__CAA = 3,
	witsml1__GeodeticDatum__CHAS = 4,
	witsml1__GeodeticDatum__CORAL = 5,
	witsml1__GeodeticDatum__ED50 = 6,
	witsml1__GeodeticDatum__ED87 = 7,
	witsml1__GeodeticDatum__ERIN65 = 8,
	witsml1__GeodeticDatum__GD49 = 9,
	witsml1__GeodeticDatum__GHANA = 10,
	witsml1__GeodeticDatum__GUAM63 = 11,
	witsml1__GeodeticDatum__HJRS55 = 12,
	witsml1__GeodeticDatum__HTS = 13,
	witsml1__GeodeticDatum__INCH = 14,
	witsml1__GeodeticDatum__INDIA1 = 15,
	witsml1__GeodeticDatum__INDIA2 = 16,
	witsml1__GeodeticDatum__INDNS74 = 17,
	witsml1__GeodeticDatum__LIB64 = 18,
	witsml1__GeodeticDatum__LUZON = 19,
	witsml1__GeodeticDatum__MRCH = 20,
	witsml1__GeodeticDatum__NAD27 = 21,
	witsml1__GeodeticDatum__NAD83 = 22,
	witsml1__GeodeticDatum__NGRA = 23,
	witsml1__GeodeticDatum__None = 24,
	witsml1__GeodeticDatum__NPRM = 25,
	witsml1__GeodeticDatum__OSGB36 = 26,
	witsml1__GeodeticDatum__POTS1 = 27,
	witsml1__GeodeticDatum__PULK1 = 28,
	witsml1__GeodeticDatum__PULK2 = 29,
	witsml1__GeodeticDatum__QRNQ = 30,
	witsml1__GeodeticDatum__SA56 = 31,
	witsml1__GeodeticDatum__SRL60 = 32,
	witsml1__GeodeticDatum__TNRV25 = 33,
	witsml1__GeodeticDatum__TOKYO = 34,
	witsml1__GeodeticDatum__UserDefined = 35,
	witsml1__GeodeticDatum__VROL = 36,
	witsml1__GeodeticDatum__WGS72 = 37,
	witsml1__GeodeticDatum__WGS84 = 38,
	witsml1__GeodeticDatum__YACR = 39,
	witsml1__GeodeticDatum__unknown = 40
};
#endif

/* witsml1_4_1_1ForGsoap.h:4005 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres (-360)

/* witsml1:Hemispheres */
enum witsml1__Hemispheres {
	witsml1__Hemispheres__northern = 0,
	witsml1__Hemispheres__southern = 1,
	witsml1__Hemispheres__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:4026 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType (-361)

/* witsml1:HoleCasingType */
enum witsml1__HoleCasingType {
	witsml1__HoleCasingType__blow_x0020out_x0020preventer = 0,
	witsml1__HoleCasingType__casing = 1,
	witsml1__HoleCasingType__conductor = 2,
	witsml1__HoleCasingType__curved_x0020conductor = 3,
	witsml1__HoleCasingType__liner = 4,
	witsml1__HoleCasingType__open_x0020hole = 5,
	witsml1__HoleCasingType__riser = 6,
	witsml1__HoleCasingType__tubing = 7,
	witsml1__HoleCasingType__unknown = 8
};
#endif

/* witsml1_4_1_1ForGsoap.h:4063 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType (-362)

/* witsml1:HoleOpenerType */
enum witsml1__HoleOpenerType {
	witsml1__HoleOpenerType__under_reamer = 0,
	witsml1__HoleOpenerType__fixed_x0020blade = 1,
	witsml1__HoleOpenerType__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:4082 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType (-363)

/* witsml1:InnerBarrelType */
enum witsml1__InnerBarrelType {
	witsml1__InnerBarrelType__undifferented = 0,
	witsml1__InnerBarrelType__aluminum = 1,
	witsml1__InnerBarrelType__gel = 2,
	witsml1__InnerBarrelType__fiberglass = 3,
	witsml1__InnerBarrelType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:4114 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState (-364)

/* witsml1:ItemState */
enum witsml1__ItemState {
	witsml1__ItemState__actual = 0,
	witsml1__ItemState__model = 1,
	witsml1__ItemState__plan = 2,
	witsml1__ItemState__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:4139 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType (-365)

/* witsml1:JarType */
enum witsml1__JarType {
	witsml1__JarType__mechanical = 0,
	witsml1__JarType__hydraulic = 1,
	witsml1__JarType__hydro_x0020mechanical = 2,
	witsml1__JarType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:4161 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction (-366)

/* witsml1:JarAction */
enum witsml1__JarAction {
	witsml1__JarAction__up = 0,
	witsml1__JarAction__down = 1,
	witsml1__JarAction__both = 2,
	witsml1__JarAction__vibrating = 3,
	witsml1__JarAction__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:4189 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource (-367)

/* witsml1:LithologySource */
enum witsml1__LithologySource {
	witsml1__LithologySource__interpreted = 0,
	witsml1__LithologySource__core = 1,
	witsml1__LithologySource__cuttings = 2,
	witsml1__LithologySource__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:4227 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit (-369)

/* witsml1:LithostratigraphyUnit */
enum witsml1__LithostratigraphyUnit {
	witsml1__LithostratigraphyUnit__group = 0,
	witsml1__LithostratigraphyUnit__formation = 1,
	witsml1__LithostratigraphyUnit__member = 2,
	witsml1__LithostratigraphyUnit__bed = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:4271 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType (-370)

/* witsml1:LogDataType */
enum witsml1__LogDataType {
	witsml1__LogDataType__byte = 0,
	witsml1__LogDataType__date_x0020time = 1,
	witsml1__LogDataType__double_ = 2,
	witsml1__LogDataType__float_ = 3,
	witsml1__LogDataType__int_ = 4,
	witsml1__LogDataType__long_ = 5,
	witsml1__LogDataType__short_ = 6,
	witsml1__LogDataType__string = 7,
	witsml1__LogDataType__string40 = 8,
	witsml1__LogDataType__string16 = 9,
	witsml1__LogDataType__unknown = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:4338 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection (-371)

/* witsml1:LogIndexDirection */
enum witsml1__LogIndexDirection {
	witsml1__LogIndexDirection__decreasing = 0,
	witsml1__LogIndexDirection__increasing = 1,
	witsml1__LogIndexDirection__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:4362 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType (-372)

/* witsml1:LogIndexType */
enum witsml1__LogIndexType {
	witsml1__LogIndexType__date_x0020time = 0,
	witsml1__LogIndexType__elapsed_x0020time = 1,
	witsml1__LogIndexType__length = 2,
	witsml1__LogIndexType__measured_x0020depth = 3,
	witsml1__LogIndexType__vertical_x0020depth = 4,
	witsml1__LogIndexType__other = 5,
	witsml1__LogIndexType__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:4399 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin (-373)

/* witsml1:LogTraceOrigin */
enum witsml1__LogTraceOrigin {
	witsml1__LogTraceOrigin__realtime = 0,
	witsml1__LogTraceOrigin__modeled = 1,
	witsml1__LogTraceOrigin__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:4420 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState (-374)

/* witsml1:LogTraceState */
enum witsml1__LogTraceState {
	witsml1__LogTraceState__depth_x0020adjusted = 0,
	witsml1__LogTraceState__edited = 1,
	witsml1__LogTraceState__joined = 2,
	witsml1__LogTraceState__processed = 3,
	witsml1__LogTraceState__raw = 4,
	witsml1__LogTraceState__unknown = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:4448 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType (-375)

/* witsml1:MaterialType */
enum witsml1__MaterialType {
	witsml1__MaterialType__aluminum = 0,
	witsml1__MaterialType__beryllium_x0020copper = 1,
	witsml1__MaterialType__chrome_x0020alloy = 2,
	witsml1__MaterialType__composite = 3,
	witsml1__MaterialType__other = 4,
	witsml1__MaterialType__non_magnetic_x0020steel = 5,
	witsml1__MaterialType__plastic = 6,
	witsml1__MaterialType__steel = 7,
	witsml1__MaterialType__steel_x0020alloy = 8,
	witsml1__MaterialType__titanium = 9,
	witsml1__MaterialType__unknown = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:4511 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType (-378)

/* witsml1:MeasurementType */
enum witsml1__MeasurementType {
	witsml1__MeasurementType__acceleration = 0,
	witsml1__MeasurementType__acoustic_x0020caliper = 1,
	witsml1__MeasurementType__acoustic_x0020casing_x0020collar_x0020locator = 2,
	witsml1__MeasurementType__acoustic_x0020impedance = 3,
	witsml1__MeasurementType__acoustic_x0020porosity = 4,
	witsml1__MeasurementType__acoustic_x0020velocity = 5,
	witsml1__MeasurementType__acoustic_x0020wave_x0020matrix_x0020travel_x0020time = 6,
	witsml1__MeasurementType__acoustic_x0020wave_x0020travel_x0020time = 7,
	witsml1__MeasurementType__amplitude = 8,
	witsml1__MeasurementType__amplitude_x0020of_x0020acoustic_x0020wave = 9,
	witsml1__MeasurementType__amplitude_x0020of_x0020E_M_x0020wave = 10,
	witsml1__MeasurementType__amplitude_x0020ratio = 11,
	witsml1__MeasurementType__area = 12,
	witsml1__MeasurementType__attenuation = 13,
	witsml1__MeasurementType__attenuation_x0020of_x0020acoustic_x0020wave = 14,
	witsml1__MeasurementType__attenuation_x0020of_x0020E_M_x0020wave = 15,
	witsml1__MeasurementType__auxiliary = 16,
	witsml1__MeasurementType__average_x0020porosity = 17,
	witsml1__MeasurementType__azimuth = 18,
	witsml1__MeasurementType__barite_x0020mud_x0020correction = 19,
	witsml1__MeasurementType__bed_x0020thickness_x0020correction = 20,
	witsml1__MeasurementType__bit_x0020size = 21,
	witsml1__MeasurementType__blocked = 22,
	witsml1__MeasurementType__borehole_x0020environment_x0020correction = 23,
	witsml1__MeasurementType__borehole_x0020fluid_x0020composition_x0020correction = 24,
	witsml1__MeasurementType__borehole_x0020fluid_x0020correction = 25,
	witsml1__MeasurementType__borehole_x0020size_x0020correction = 26,
	witsml1__MeasurementType__bromide_x0020mud_x0020correction = 27,
	witsml1__MeasurementType__bulk_x0020compressibility = 28,
	witsml1__MeasurementType__bulk_x0020density = 29,
	witsml1__MeasurementType__bulk_x0020volume = 30,
	witsml1__MeasurementType__bulk_x0020volume_x0020gas = 31,
	witsml1__MeasurementType__bulk_x0020volume_x0020hydrocarbon = 32,
	witsml1__MeasurementType__bulk_x0020volume_x0020oil = 33,
	witsml1__MeasurementType__bulk_x0020volume_x0020water = 34,
	witsml1__MeasurementType__C_x002fO_x0020ratio = 35,
	witsml1__MeasurementType__caliper = 36,
	witsml1__MeasurementType__cased_x0020hole_x0020correction = 37,
	witsml1__MeasurementType__casing_x0020collar_x0020locator = 38,
	witsml1__MeasurementType__casing_x0020correction = 39,
	witsml1__MeasurementType__casing_x0020diameter_x0020correction = 40,
	witsml1__MeasurementType__casing_x0020inspection = 41,
	witsml1__MeasurementType__casing_x0020thickness_x0020correction = 42,
	witsml1__MeasurementType__casing_x0020weight_x0020correction = 43,
	witsml1__MeasurementType__cement_x0020correction = 44,
	witsml1__MeasurementType__cement_x0020density_x0020correction = 45,
	witsml1__MeasurementType__cement_x0020evaluation = 46,
	witsml1__MeasurementType__cement_x0020thickness_x0020correction = 47,
	witsml1__MeasurementType__cement_x0020type_x0020correction = 48,
	witsml1__MeasurementType__CH_x0020density_x0020porosity = 49,
	witsml1__MeasurementType__CH_x0020dolomite_x0020density_x0020porosity = 50,
	witsml1__MeasurementType__CH_x0020dolomite_x0020neutron_x0020porosity = 51,
	witsml1__MeasurementType__CH_x0020limestone_x0020density_x0020porosity = 52,
	witsml1__MeasurementType__CH_x0020limestone_x0020neutron_x0020porosity = 53,
	witsml1__MeasurementType__CH_x0020neutron_x0020porosity = 54,
	witsml1__MeasurementType__CH_x0020sandstone_x0020density_x0020porosity = 55,
	witsml1__MeasurementType__CH_x0020sandstone_x0020neutron_x0020porosity = 56,
	witsml1__MeasurementType__compressional_x0020wave_x0020dolomite_x0020porosity = 57,
	witsml1__MeasurementType__compressional_x0020wave_x0020limestone_x0020porosity = 58,
	witsml1__MeasurementType__compressional_x0020wave_x0020matrix_x0020travel_x0020time = 59,
	witsml1__MeasurementType__compressional_x0020wave_x0020sandstone_x0020porosity = 60,
	witsml1__MeasurementType__compressional_x0020wave_x0020travel_x0020time = 61,
	witsml1__MeasurementType__conductivity = 62,
	witsml1__MeasurementType__conductivity_x0020from_x0020attenuation = 63,
	witsml1__MeasurementType__conductivity_x0020from_x0020phase_x0020shift = 64,
	witsml1__MeasurementType__connate_x0020water_x0020conductivity = 'A',
	witsml1__MeasurementType__connate_x0020water_x0020resistivity = 'B',
	witsml1__MeasurementType__conventional_x0020core_x0020porosity = 'C',
	witsml1__MeasurementType__core_x0020matrix_x0020density = 'D',
	witsml1__MeasurementType__core_x0020permeability = 'E',
	witsml1__MeasurementType__core_x0020porosity = 'F',
	witsml1__MeasurementType__corrected = 'G',
	witsml1__MeasurementType__count_x0020rate = 'H',
	witsml1__MeasurementType__count_x0020rate_x0020ratio = 'I',
	witsml1__MeasurementType__cross_x0020plot_x0020porosity = 'J',
	witsml1__MeasurementType__decay_x0020time = 'K',
	witsml1__MeasurementType__deep_x0020conductivity = 'L',
	witsml1__MeasurementType__deep_x0020induction_x0020conductivity = 'M',
	witsml1__MeasurementType__deep_x0020induction_x0020resistivity = 'N',
	witsml1__MeasurementType__deep_x0020laterolog_x0020conductivity = 'O',
	witsml1__MeasurementType__deep_x0020laterolog_x0020resistivity = 'P',
	witsml1__MeasurementType__deep_x0020resistivity = 'Q',
	witsml1__MeasurementType__density = 'R',
	witsml1__MeasurementType__density_x0020porosity = 'S',
	witsml1__MeasurementType__depth = 'T',
	witsml1__MeasurementType__depth_x0020adjusted = 'U',
	witsml1__MeasurementType__depth_x0020derived_x0020from_x0020velocity = 'V',
	witsml1__MeasurementType__deviation = 'W',
	witsml1__MeasurementType__dielectric = 'X',
	witsml1__MeasurementType__diffusion_x0020correction = 'Y',
	witsml1__MeasurementType__dip = 'Z',
	witsml1__MeasurementType__dipmeter = 91,
	witsml1__MeasurementType__dipmeter_x0020conductivity = 92,
	witsml1__MeasurementType__dipmeter_x0020resistivity = 93,
	witsml1__MeasurementType__dolomite_x0020acoustic_x0020porosity = 94,
	witsml1__MeasurementType__dolomite_x0020density_x0020porosity = 95,
	witsml1__MeasurementType__dolomite_x0020neutron_x0020porosity = 96,
	witsml1__MeasurementType__edited = 'a',
	witsml1__MeasurementType__effective_x0020porosity = 'b',
	witsml1__MeasurementType__electric_x0020current = 'c',
	witsml1__MeasurementType__electric_x0020potential = 'd',
	witsml1__MeasurementType__electromagnetic_x0020wave_x0020matrix_x0020travel_x0020time = 'e',
	witsml1__MeasurementType__electromagnetic_x0020wave_x0020travel_x0020time = 'f',
	witsml1__MeasurementType__element = 'g',
	witsml1__MeasurementType__elemental_x0020ratio = 'h',
	witsml1__MeasurementType__enhanced = 'i',
	witsml1__MeasurementType__filtered = 'j',
	witsml1__MeasurementType__flowmeter = 'k',
	witsml1__MeasurementType__fluid_x0020density = 'l',
	witsml1__MeasurementType__fluid_x0020velocity = 'm',
	witsml1__MeasurementType__fluid_x0020viscosity = 'n',
	witsml1__MeasurementType__flushed_x0020zone_x0020conductivity = 'o',
	witsml1__MeasurementType__flushed_x0020zone_x0020resistivity = 'p',
	witsml1__MeasurementType__flushed_x0020zone_x0020saturation = 'q',
	witsml1__MeasurementType__force = 'r',
	witsml1__MeasurementType__formation_x0020density_x0020correction = 's',
	witsml1__MeasurementType__formation_x0020properties_x0020correction = 't',
	witsml1__MeasurementType__formation_x0020salinity_x0020correction = 'u',
	witsml1__MeasurementType__formation_x0020saturation_x0020correction = 'v',
	witsml1__MeasurementType__formation_x0020volume_x0020factor_x0020correction = 'w',
	witsml1__MeasurementType__formation_x0020water_x0020density_x0020correction = 'x',
	witsml1__MeasurementType__formation_x0020water_x0020saturation_x0020correction = 'y',
	witsml1__MeasurementType__free_x0020fluid_x0020index = 'z',
	witsml1__MeasurementType__friction_x0020effect_x0020correction = 123,
	witsml1__MeasurementType__gamma_x0020ray = 124,
	witsml1__MeasurementType__gamma_x0020ray_x0020minus_x0020uranium = 125,
	witsml1__MeasurementType__gas_x0020saturation = 126,
	witsml1__MeasurementType__gradiomanometer = 127,
	witsml1__MeasurementType__high_x0020frequency_x0020conductivity = 128,
	witsml1__MeasurementType__high_x0020frequency_x0020electromagnetic = 129,
	witsml1__MeasurementType__high_x0020frequency_x0020electromagnetic_x0020porosity = 130,
	witsml1__MeasurementType__high_x0020frequency_x0020E_M_x0020phase_x0020shift = 131,
	witsml1__MeasurementType__high_x0020frequency_x0020resistivity = 132,
	witsml1__MeasurementType__hydrocarbon_x0020correction = 133,
	witsml1__MeasurementType__hydrocarbon_x0020density_x0020correction = 134,
	witsml1__MeasurementType__hydrocarbon_x0020gravity_x0020correction = 135,
	witsml1__MeasurementType__hydrocarbon_x0020saturation = 136,
	witsml1__MeasurementType__hydrocarbon_x0020viscosity_x0020correction = 137,
	witsml1__MeasurementType__image = 138,
	witsml1__MeasurementType__interpretation_x0020variable = 139,
	witsml1__MeasurementType__iron_x0020mud_x0020correction = 140,
	witsml1__MeasurementType__joined = 141,
	witsml1__MeasurementType__KCl_x0020mud_x0020correction = 142,
	witsml1__MeasurementType__length = 143,
	witsml1__MeasurementType__limestone_x0020acoustic_x0020porosity = 144,
	witsml1__MeasurementType__limestone_x0020density_x0020porosity = 145,
	witsml1__MeasurementType__limestone_x0020neutron_x0020porosity = 146,
	witsml1__MeasurementType__lithology_x0020correction = 147,
	witsml1__MeasurementType__log_x0020derived_x0020permeability = 148,
	witsml1__MeasurementType__log_x0020matrix_x0020density = 149,
	witsml1__MeasurementType__magnetic_x0020casing_x0020collar_x0020locator = 150,
	witsml1__MeasurementType__matrix_x0020density = 151,
	witsml1__MeasurementType__matrix_x0020travel_x0020time = 152,
	witsml1__MeasurementType__measured_x0020depth = 153,
	witsml1__MeasurementType__mechanical_x0020caliper = 154,
	witsml1__MeasurementType__mechanical_x0020casing_x0020collar_x0020locator = 155,
	witsml1__MeasurementType__medium_x0020conductivity = 156,
	witsml1__MeasurementType__medium_x0020induction_x0020conductivity = 157,
	witsml1__MeasurementType__medium_x0020induction_x0020resistivity = 158,
	witsml1__MeasurementType__medium_x0020laterolog_x0020conductivity = 159,
	witsml1__MeasurementType__medium_x0020laterolog_x0020resistivity = 160,
	witsml1__MeasurementType__medium_x0020resistivity = 161,
	witsml1__MeasurementType__micro_x0020conductivity = 162,
	witsml1__MeasurementType__micro_x0020inverse_x0020conductivity = 163,
	witsml1__MeasurementType__micro_x0020inverse_x0020resistivity = 164,
	witsml1__MeasurementType__micro_x0020laterolog_x0020conductivity = 165,
	witsml1__MeasurementType__micro_x0020laterolog_x0020resistivity = 166,
	witsml1__MeasurementType__micro_x0020normal_x0020conductivity = 167,
	witsml1__MeasurementType__micro_x0020normal_x0020resistivity = 168,
	witsml1__MeasurementType__micro_x0020resistivity = 169,
	witsml1__MeasurementType__micro_x0020spherically_x0020focused_x0020conductivity = 170,
	witsml1__MeasurementType__micro_x0020spherically_x0020focused_x0020resistivity = 171,
	witsml1__MeasurementType__mineral = 172,
	witsml1__MeasurementType__mud_x0020cake_x0020conductivity = 173,
	witsml1__MeasurementType__mud_x0020cake_x0020correction = 174,
	witsml1__MeasurementType__mud_x0020cake_x0020density_x0020correction = 175,
	witsml1__MeasurementType__mud_x0020cake_x0020resistivity = 176,
	witsml1__MeasurementType__mud_x0020cake_x0020resistivity_x0020correction = 177,
	witsml1__MeasurementType__mud_x0020cake_x0020thickness_x0020correction = 178,
	witsml1__MeasurementType__mud_x0020composition_x0020correction = 179,
	witsml1__MeasurementType__mud_x0020conductivity = 180,
	witsml1__MeasurementType__mud_x0020filtrate_x0020conductivity = 181,
	witsml1__MeasurementType__mud_x0020filtrate_x0020correction = 182,
	witsml1__MeasurementType__mud_x0020filtrate_x0020density_x0020correction = 183,
	witsml1__MeasurementType__mud_x0020filtrate_x0020resistivity = 184,
	witsml1__MeasurementType__mud_x0020filtrate_x0020resistivity_x0020correction = 185,
	witsml1__MeasurementType__mud_x0020filtrate_x0020salinity_x0020correction = 186,
	witsml1__MeasurementType__mud_x0020resistivity = 187,
	witsml1__MeasurementType__mud_x0020salinity_x0020correction = 188,
	witsml1__MeasurementType__mud_x0020viscosity_x0020correction = 189,
	witsml1__MeasurementType__mud_x0020weight_x0020correction = 190,
	witsml1__MeasurementType__neutron_x0020die_x0020away_x0020time = 191,
	witsml1__MeasurementType__neutron_x0020porosity = 192,
	witsml1__MeasurementType__nuclear_x0020caliper = 193,
	witsml1__MeasurementType__nuclear_x0020magnetic_x0020decay_x0020time = 194,
	witsml1__MeasurementType__nuclear_x0020magnetism_x0020log_x0020permeability = 195,
	witsml1__MeasurementType__nuclear_x0020magnetism_x0020porosity = 196,
	witsml1__MeasurementType__OH_x0020density_x0020porosity = 197,
	witsml1__MeasurementType__OH_x0020dolomite_x0020density_x0020porosity = 198,
	witsml1__MeasurementType__OH_x0020dolomite_x0020neutron_x0020porosity = 199,
	witsml1__MeasurementType__OH_x0020limestone_x0020density_x0020porosity = 200,
	witsml1__MeasurementType__OH_x0020limestone_x0020neutron_x0020porosity = 201,
	witsml1__MeasurementType__OH_x0020neutron_x0020porosity = 202,
	witsml1__MeasurementType__OH_x0020sandstone_x0020density_x0020porosity = 203,
	witsml1__MeasurementType__OH_x0020sandstone_x0020neutron_x0020porosity = 204,
	witsml1__MeasurementType__oil_x0020based_x0020mud_x0020correction = 205,
	witsml1__MeasurementType__oil_x0020saturation = 206,
	witsml1__MeasurementType__perforating = 207,
	witsml1__MeasurementType__permeability = 208,
	witsml1__MeasurementType__phase_x0020shift = 209,
	witsml1__MeasurementType__photoelectric_x0020absorption = 210,
	witsml1__MeasurementType__photoelectric_x0020absorption_x0020correction = 211,
	witsml1__MeasurementType__physical_x0020measurement_x0020correction = 212,
	witsml1__MeasurementType__plane_x0020angle = 213,
	witsml1__MeasurementType__porosity = 214,
	witsml1__MeasurementType__porosity_x0020correction = 215,
	witsml1__MeasurementType__potassium = 216,
	witsml1__MeasurementType__pressure = 217,
	witsml1__MeasurementType__pressure_x0020correction = 218,
	witsml1__MeasurementType__processed = 219,
	witsml1__MeasurementType__pulsed_x0020neutron_x0020porosity = 220,
	witsml1__MeasurementType__quality = 221,
	witsml1__MeasurementType__ratio = 222,
	witsml1__MeasurementType__raw = 223,
	witsml1__MeasurementType__relative_x0020bearing = 224,
	witsml1__MeasurementType__resistivity = 225,
	witsml1__MeasurementType__resistivity_x0020factor_x0020correction = 226,
	witsml1__MeasurementType__resistivity_x0020from_x0020attenuation = 227,
	witsml1__MeasurementType__resistivity_x0020from_x0020phase_x0020shift = 228,
	witsml1__MeasurementType__resistivity_x0020phase_x0020shift = 229,
	witsml1__MeasurementType__resistivity_x0020ratio = 230,
	witsml1__MeasurementType__salinity = 231,
	witsml1__MeasurementType__sampling = 232,
	witsml1__MeasurementType__sandstone_x0020acoustic_x0020porosity = 233,
	witsml1__MeasurementType__sandstone_x0020density_x0020porosity = 234,
	witsml1__MeasurementType__sandstone_x0020neutron_x0020porosity = 235,
	witsml1__MeasurementType__saturation = 236,
	witsml1__MeasurementType__shale_x0020volume = 237,
	witsml1__MeasurementType__shallow_x0020conductivity = 238,
	witsml1__MeasurementType__shallow_x0020induction_x0020conductivity = 239,
	witsml1__MeasurementType__shallow_x0020induction_x0020resistivity = 240,
	witsml1__MeasurementType__shallow_x0020laterolog_x0020conductivity = 241,
	witsml1__MeasurementType__shallow_x0020laterolog_x0020resistivity = 242,
	witsml1__MeasurementType__shallow_x0020resistivity = 243,
	witsml1__MeasurementType__shear_x0020wave_x0020dolomite_x0020porosity = 244,
	witsml1__MeasurementType__shear_x0020wave_x0020limestone_x0020porosity = 245,
	witsml1__MeasurementType__shear_x0020wave_x0020matrix_x0020travel_x0020time = 246,
	witsml1__MeasurementType__shear_x0020wave_x0020sandstone_x0020porosity = 247,
	witsml1__MeasurementType__shear_x0020wave_x0020travel_x0020time = 248,
	witsml1__MeasurementType__shifted = 249,
	witsml1__MeasurementType__sidewall_x0020core_x0020porosity = 250,
	witsml1__MeasurementType__sigma = 251,
	witsml1__MeasurementType__sigma_x0020formation = 252,
	witsml1__MeasurementType__sigma_x0020gas = 253,
	witsml1__MeasurementType__sigma_x0020hydrocarbon = 254,
	witsml1__MeasurementType__sigma_x0020matrix = 255,
	witsml1__MeasurementType__sigma_x0020oil = 256,
	witsml1__MeasurementType__sigma_x0020water = 257,
	witsml1__MeasurementType__slippage_x0020velocity_x0020correction = 258,
	witsml1__MeasurementType__smoothed = 259,
	witsml1__MeasurementType__spectral_x0020gamma_x0020ray = 260,
	witsml1__MeasurementType__spherically_x0020focused_x0020conductivity = 261,
	witsml1__MeasurementType__spherically_x0020focused_x0020resistivity = 262,
	witsml1__MeasurementType__spontaneous_x0020potential = 263,
	witsml1__MeasurementType__spreading_x0020loss_x0020correction = 264,
	witsml1__MeasurementType__synthetic_x0020well_x0020log_x0020trace = 265,
	witsml1__MeasurementType__temperature = 266,
	witsml1__MeasurementType__temperature_x0020correction = 267,
	witsml1__MeasurementType__tension = 268,
	witsml1__MeasurementType__Th_x002fK_x0020ratio = 269,
	witsml1__MeasurementType__thorium = 270,
	witsml1__MeasurementType__time = 271,
	witsml1__MeasurementType__tool_x0020diameter_x0020correction = 272,
	witsml1__MeasurementType__tool_x0020eccentricity_x0020correction = 273,
	witsml1__MeasurementType__total_x0020gamma_x0020ray = 274,
	witsml1__MeasurementType__total_x0020porosity = 275,
	witsml1__MeasurementType__tracer_x0020survey = 276,
	witsml1__MeasurementType__travel_x0020time = 277,
	witsml1__MeasurementType__true_x0020conductivity = 278,
	witsml1__MeasurementType__true_x0020resistivity = 279,
	witsml1__MeasurementType__true_x0020vertical_x0020depth = 280,
	witsml1__MeasurementType__tube_x0020wave_x0020dolomite_x0020porosity = 281,
	witsml1__MeasurementType__tube_x0020wave_x0020limestone_x0020porosity = 282,
	witsml1__MeasurementType__tube_x0020wave_x0020matrix_x0020travel_x0020time = 283,
	witsml1__MeasurementType__tube_x0020wave_x0020sandstone_x0020porosity = 284,
	witsml1__MeasurementType__tube_x0020wave_x0020travel_x0020time = 285,
	witsml1__MeasurementType__uranium = 286,
	witsml1__MeasurementType__velocity = 287,
	witsml1__MeasurementType__volume = 288,
	witsml1__MeasurementType__water_x0020based_x0020fluid_x0020correction = 289,
	witsml1__MeasurementType__water_x0020holdup_x0020correction = 290,
	witsml1__MeasurementType__water_x0020saturated_x0020conductivity = 291,
	witsml1__MeasurementType__water_x0020saturated_x0020resistivity = 292,
	witsml1__MeasurementType__water_x0020saturation = 293,
	witsml1__MeasurementType__unknown = 294
};
#endif

/* witsml1_4_1_1ForGsoap.h:5696 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability (-379)

/* witsml1:MessageProbability */
enum witsml1__MessageProbability {
	witsml1__MessageProbability__low = 0,
	witsml1__MessageProbability__medium = 1,
	witsml1__MessageProbability__high = 2,
	witsml1__MessageProbability__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:5718 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity (-380)

/* witsml1:MessageSeverity */
enum witsml1__MessageSeverity {
	witsml1__MessageSeverity__catastrophic = 0,
	witsml1__MessageSeverity__major = 1,
	witsml1__MessageSeverity__minor = 2,
	witsml1__MessageSeverity__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:5743 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType (-381)

/* witsml1:MessageType */
enum witsml1__MessageType {
	witsml1__MessageType__alarm = 0,
	witsml1__MessageType__event = 1,
	witsml1__MessageType__informational = 2,
	witsml1__MessageType__warning = 3,
	witsml1__MessageType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:5775 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass (-382)

/* witsml1:MudClass */
enum witsml1__MudClass {
	witsml1__MudClass__water_x0020based = 0,
	witsml1__MudClass__oil_x0020based = 1,
	witsml1__MudClass__other = 2,
	witsml1__MudClass__pneumatic = 3,
	witsml1__MudClass__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:5811 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType (-383)

/* witsml1:MudLogParameterType */
enum witsml1__MudLogParameterType {
	witsml1__MudLogParameterType__bit_x0020parameters = 0,
	witsml1__MudLogParameterType__bit_x0020type_x0020comment = 1,
	witsml1__MudLogParameterType__casing_x0020point_x0020comment = 2,
	witsml1__MudLogParameterType__chromatograph_x0020comment = 3,
	witsml1__MudLogParameterType__circulation_x0020system_x0020comment = 4,
	witsml1__MudLogParameterType__core_x0020interval_x0020comment = 5,
	witsml1__MudLogParameterType__cuttings_x0020gas = 6,
	witsml1__MudLogParameterType__direct_x0020fracture_x0020pressure = 7,
	witsml1__MudLogParameterType__direct_x0020pore_x0020pressure_x0020measurements = 8,
	witsml1__MudLogParameterType__drilling_x0020data_x0020comment = 9,
	witsml1__MudLogParameterType__fracture_x0020PG_x0020estimate_x0020most_x0020likely = 10,
	witsml1__MudLogParameterType__gas_x0020peaks_x0020comment = 11,
	witsml1__MudLogParameterType__gas_x0020ratio_x0020comment = 12,
	witsml1__MudLogParameterType__general_x0020engineering_x0020comment = 13,
	witsml1__MudLogParameterType__kicks_x0020and_x0020flows = 14,
	witsml1__MudLogParameterType__lithlog_x0020comment = 15,
	witsml1__MudLogParameterType__lost_x0020returns = 16,
	witsml1__MudLogParameterType__LWD_x0020comment = 17,
	witsml1__MudLogParameterType__marker_x0020or_x0020formation_x0020top_x0020comment = 18,
	witsml1__MudLogParameterType__midnight_x0020depth_x0020date = 19,
	witsml1__MudLogParameterType__mud_x0020check_x0020comment = 20,
	witsml1__MudLogParameterType__mud_x0020data_x0020comment = 21,
	witsml1__MudLogParameterType__mudlog_x0020comment = 22,
	witsml1__MudLogParameterType__overburden_x0020gradient = 23,
	witsml1__MudLogParameterType__overpull_x0020on_x0020connection = 24,
	witsml1__MudLogParameterType__overpull_x0020on_x0020trip = 25,
	witsml1__MudLogParameterType__pore_x0020PG_x0020estimate_x0020most_x0020likely = 26,
	witsml1__MudLogParameterType__pore_x0020pressure_x0020estimate_x0020while_x0020drilling = 27,
	witsml1__MudLogParameterType__pressure_x0020data_x0020comment = 28,
	witsml1__MudLogParameterType__shale_x0020density_x0020comment = 29,
	witsml1__MudLogParameterType__short_x0020trip_x0020comment = 30,
	witsml1__MudLogParameterType__show_x0020report_x0020comment = 31,
	witsml1__MudLogParameterType__sidewall_x0020core_x0020comment = 32,
	witsml1__MudLogParameterType__sliding_x0020Interval = 33,
	witsml1__MudLogParameterType__steam_x0020still_x0020results_x0020comment = 34,
	witsml1__MudLogParameterType__survey_x0020comment = 35,
	witsml1__MudLogParameterType__temperature_x0020data_x0020comment = 36,
	witsml1__MudLogParameterType__temperature_x0020trend_x0020comment = 37,
	witsml1__MudLogParameterType__wireline_x0020log_x0020comment = 38,
	witsml1__MudLogParameterType__unknown = 39
};
#endif

/* witsml1_4_1_1ForGsoap.h:5989 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes (-385)

/* witsml1:NADTypes */
enum witsml1__NADTypes {
	witsml1__NADTypes__NAD27 = 0,
	witsml1__NADTypes__NAD83 = 1,
	witsml1__NADTypes__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:6032 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth (-389)

/* witsml1:NorthOrSouth */
enum witsml1__NorthOrSouth {
	witsml1__NorthOrSouth__north = 0,
	witsml1__NorthOrSouth__south = 1,
	witsml1__NorthOrSouth__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:6053 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType (-390)

/* witsml1:NozzleType */
enum witsml1__NozzleType {
	witsml1__NozzleType__extended = 0,
	witsml1__NozzleType__normal = 1,
	witsml1__NozzleType__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:6072 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion (-391)

/* witsml1:OpsReportVersion */
enum witsml1__OpsReportVersion {
	witsml1__OpsReportVersion__preliminary = 0,
	witsml1__OpsReportVersion__normal = 1,
	witsml1__OpsReportVersion__final_ = 2,
	witsml1__OpsReportVersion__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:6102 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode (-392)

/* witsml1:PIDXCommodityCode */
enum witsml1__PIDXCommodityCode {
	witsml1__PIDXCommodityCode__71131001 = 71131001LL,
	witsml1__PIDXCommodityCode__71131002 = 71131002LL,
	witsml1__PIDXCommodityCode__71131003 = 71131003LL,
	witsml1__PIDXCommodityCode__71131004 = 71131004LL,
	witsml1__PIDXCommodityCode__71131005 = 71131005LL,
	witsml1__PIDXCommodityCode__71131006 = 71131006LL,
	witsml1__PIDXCommodityCode__71131007 = 71131007LL,
	witsml1__PIDXCommodityCode__71131008 = 71131008LL,
	witsml1__PIDXCommodityCode__71131009 = 71131009LL,
	witsml1__PIDXCommodityCode__71131010 = 71131010LL,
	witsml1__PIDXCommodityCode__71131011 = 71131011LL,
	witsml1__PIDXCommodityCode__71131012 = 71131012LL,
	witsml1__PIDXCommodityCode__71131013 = 71131013LL,
	witsml1__PIDXCommodityCode__71131014 = 71131014LL,
	witsml1__PIDXCommodityCode__71131015 = 71131015LL,
	witsml1__PIDXCommodityCode__71131016 = 71131016LL,
	witsml1__PIDXCommodityCode__71131018 = 71131018LL,
	witsml1__PIDXCommodityCode__71131019 = 71131019LL
};
#endif

/* witsml1_4_1_1ForGsoap.h:6181 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType (-393)

/* witsml1:PitType */
enum witsml1__PitType {
	witsml1__PitType__bulk = 0,
	witsml1__PitType__chemical = 1,
	witsml1__PitType__drilling = 2,
	witsml1__PitType__mix = 3,
	witsml1__PitType__mud_x0020cleaning = 4,
	witsml1__PitType__sand_x0020trap = 5,
	witsml1__PitType__slug = 6,
	witsml1__PitType__storage = 7,
	witsml1__PitType__surge_x0020tank = 8,
	witsml1__PitType__trip_x0020tank = 9,
	witsml1__PitType__unknown = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:6229 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType (-394)

/* witsml1:PrimitiveType */
enum witsml1__PrimitiveType {
	witsml1__PrimitiveType__string = 0,
	witsml1__PrimitiveType__boolean = 1,
	witsml1__PrimitiveType__float_ = 2,
	witsml1__PrimitiveType__double_ = 3,
	witsml1__PrimitiveType__duration = 4,
	witsml1__PrimitiveType__dateTime = 5,
	witsml1__PrimitiveType__time = 6,
	witsml1__PrimitiveType__date = 7,
	witsml1__PrimitiveType__gYearMonth = 8,
	witsml1__PrimitiveType__gYear = 9,
	witsml1__PrimitiveType__gMonthDay = 10,
	witsml1__PrimitiveType__gDay = 11,
	witsml1__PrimitiveType__gMonth = 12,
	witsml1__PrimitiveType__base64Binary = 13,
	witsml1__PrimitiveType__anyURI = 14,
	witsml1__PrimitiveType__unknown = 15
};
#endif

/* witsml1_4_1_1ForGsoap.h:6261 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection (-395)

/* witsml1:Projection */
enum witsml1__Projection {
	witsml1__Projection__Albers_x0020equal_x0020area = 0,
	witsml1__Projection__azimuthal_x0020equidistant = 1,
	witsml1__Projection__Cassini = 2,
	witsml1__Projection__equidistant_x0020conic = 3,
	witsml1__Projection__equirectangular = 4,
	witsml1__Projection__gnomonic = 5,
	witsml1__Projection__Lambert_x0020azimuthal = 6,
	witsml1__Projection__Lambert_x0020conformal_x0020conic = 7,
	witsml1__Projection__Mercator = 8,
	witsml1__Projection__Miller = 9,
	witsml1__Projection__oblique_x0020Mercator = 10,
	witsml1__Projection__orthographic = 11,
	witsml1__Projection__perspective = 12,
	witsml1__Projection__polar_x0020stereographic = 13,
	witsml1__Projection__polyconic = 14,
	witsml1__Projection__sinusoidal = 15,
	witsml1__Projection__state_x0020plane = 16,
	witsml1__Projection__stereographic = 17,
	witsml1__Projection__transverse_x0020Mercator = 18,
	witsml1__Projection__universal_x0020transverse_x0020Mercator = 19,
	witsml1__Projection__user_x0020defined = 20,
	witsml1__Projection__Van_x0020der_x0020Grinten = 21,
	witsml1__Projection__unknown = 22
};
#endif

/* witsml1_4_1_1ForGsoap.h:6361 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator (-396)

/* witsml1:ProjectionVariantsObliqueMercator */
enum witsml1__ProjectionVariantsObliqueMercator {
	witsml1__ProjectionVariantsObliqueMercator__default_ = 0,
	witsml1__ProjectionVariantsObliqueMercator__rectified = 1,
	witsml1__ProjectionVariantsObliqueMercator__rectified_x0020skew = 2,
	witsml1__ProjectionVariantsObliqueMercator__rectified_x0020skew_x0020center_x0020origin = 3,
	witsml1__ProjectionVariantsObliqueMercator__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:6386 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType (-397)

/* witsml1:PresTestType */
enum witsml1__PresTestType {
	witsml1__PresTestType__leak_x0020off_x0020test = 0,
	witsml1__PresTestType__formation_x0020integrity_x0020test = 1,
	witsml1__PresTestType__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:6410 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian (-398)

/* witsml1:PrincipalMeridian */
enum witsml1__PrincipalMeridian {
	witsml1__PrincipalMeridian__1st_x0020Principal_x0020Meridian = 0,
	witsml1__PrincipalMeridian__2nd_x0020Principal_x0020Meridian = 1,
	witsml1__PrincipalMeridian__3rd_x0020Principal_x0020Meridian = 2,
	witsml1__PrincipalMeridian__4th_x0020Principal_x0020Meridian = 3,
	witsml1__PrincipalMeridian__5th_x0020Principal_x0020Meridian = 4,
	witsml1__PrincipalMeridian__6th_x0020Principal_x0020Meridian = 5,
	witsml1__PrincipalMeridian__Black_x0020Hills_x0020Meridian = 6,
	witsml1__PrincipalMeridian__Boise_x0020Meridian = 7,
	witsml1__PrincipalMeridian__Choctaw_x0020Meridian = 8,
	witsml1__PrincipalMeridian__Chickasaw_x0020Meridian = 9,
	witsml1__PrincipalMeridian__Cimarron_x0020Meridian = 10,
	witsml1__PrincipalMeridian__Copper_x0020River_x0020Meridian = 11,
	witsml1__PrincipalMeridian__Fairbanks_x0020Meridian = 12,
	witsml1__PrincipalMeridian__Gila_x0020and_x0020Salt_x0020River_x0020Meridian = 13,
	witsml1__PrincipalMeridian__Humboldt_x0020Meridian = 14,
	witsml1__PrincipalMeridian__Huntsville_x0020Meridian = 15,
	witsml1__PrincipalMeridian__Indian_x0020Meridian = 16,
	witsml1__PrincipalMeridian__Kateel_x0020River_x0020Meridian = 17,
	witsml1__PrincipalMeridian__Lousiana_x0020Meridian = 18,
	witsml1__PrincipalMeridian__Michigan_x0020Meridian = 19,
	witsml1__PrincipalMeridian__Mount_x0020Diablo_x0020Meridian = 20,
	witsml1__PrincipalMeridian__New_x0020Mexico_x0020Meridian = 21,
	witsml1__PrincipalMeridian__Saint_x0020Stephens_x0020Meridian = 22,
	witsml1__PrincipalMeridian__Saint_x0020Helena_x0020Meridian = 23,
	witsml1__PrincipalMeridian__Salt_x0020Lake_x0020Meridian = 24,
	witsml1__PrincipalMeridian__San_x0020Bernardo_x0020Meridian = 25,
	witsml1__PrincipalMeridian__Seward_x0020Meridian = 26,
	witsml1__PrincipalMeridian__Tallahassee_x0020Meridian = 27,
	witsml1__PrincipalMeridian__Uintah_x0020Meridian = 28,
	witsml1__PrincipalMeridian__Umiat_x0020Meridian = 29,
	witsml1__PrincipalMeridian__Ute_x0020Meridian = 30,
	witsml1__PrincipalMeridian__Washington_x0020Meridian = 31,
	witsml1__PrincipalMeridian__Williamette_x0020Meridian = 32,
	witsml1__PrincipalMeridian__Wind_x0020River_x0020Meridian = 33,
	witsml1__PrincipalMeridian__unknown = 34
};
#endif

/* witsml1_4_1_1ForGsoap.h:6562 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType (-399)

/* witsml1:PumpType */
enum witsml1__PumpType {
	witsml1__PumpType__centrifugal = 0,
	witsml1__PumpType__duplex = 1,
	witsml1__PumpType__triplex = 2,
	witsml1__PumpType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:6587 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType (-400)

/* witsml1:PumpOpType */
enum witsml1__PumpOpType {
	witsml1__PumpOpType__drilling = 0,
	witsml1__PumpOpType__reaming = 1,
	witsml1__PumpOpType__circulating = 2,
	witsml1__PumpOpType__slow_x0020pump = 3,
	witsml1__PumpOpType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:6620 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind (-402)

/* witsml1:ReadingKind */
enum witsml1__ReadingKind {
	witsml1__ReadingKind__measured = 0,
	witsml1__ReadingKind__estimated = 1,
	witsml1__ReadingKind__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:6644 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType (-403)

/* witsml1:RigType */
enum witsml1__RigType {
	witsml1__RigType__barge = 0,
	witsml1__RigType__coiled_x0020tubing = 1,
	witsml1__RigType__floater = 2,
	witsml1__RigType__jackup = 3,
	witsml1__RigType__land = 4,
	witsml1__RigType__platform = 5,
	witsml1__RigType__semi_submersible = 6,
	witsml1__RigType__unknown = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:6688 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel (-404)

/* witsml1:RiskAffectedPersonnel */
enum witsml1__RiskAffectedPersonnel {
	witsml1__RiskAffectedPersonnel__cementer = 0,
	witsml1__RiskAffectedPersonnel__company_x0020man = 1,
	witsml1__RiskAffectedPersonnel__contractor = 2,
	witsml1__RiskAffectedPersonnel__directional_x0020driller = 3,
	witsml1__RiskAffectedPersonnel__driller = 4,
	witsml1__RiskAffectedPersonnel__drilling_x0020engineer = 5,
	witsml1__RiskAffectedPersonnel__drilling_x0020superintendent = 6,
	witsml1__RiskAffectedPersonnel__drilling_x0020team = 7,
	witsml1__RiskAffectedPersonnel__facility_x0020engineer = 8,
	witsml1__RiskAffectedPersonnel__field_x0020service_x0020manager = 9,
	witsml1__RiskAffectedPersonnel__foreman = 10,
	witsml1__RiskAffectedPersonnel__general_x0020service_x0020supervisor = 11,
	witsml1__RiskAffectedPersonnel__geologist = 12,
	witsml1__RiskAffectedPersonnel__member = 13,
	witsml1__RiskAffectedPersonnel__mud_x0020engineer = 14,
	witsml1__RiskAffectedPersonnel__mud_x0020logger = 15,
	witsml1__RiskAffectedPersonnel__MWD_x0020or_x0020LWD_x0020engineer = 16,
	witsml1__RiskAffectedPersonnel__perform_x0020engineer = 17,
	witsml1__RiskAffectedPersonnel__petrophysicist = 18,
	witsml1__RiskAffectedPersonnel__production_x0020engineer = 19,
	witsml1__RiskAffectedPersonnel__remotely_x0020operated_x0020vehicle_x0020engineer = 20,
	witsml1__RiskAffectedPersonnel__safety_x0020manger = 21,
	witsml1__RiskAffectedPersonnel__sales_x0020engineer = 22,
	witsml1__RiskAffectedPersonnel__service_x0020supervisor = 23,
	witsml1__RiskAffectedPersonnel__technical_x0020support = 24,
	witsml1__RiskAffectedPersonnel__tool_x0020pusher = 25,
	witsml1__RiskAffectedPersonnel__wireline_x0020engineer = 26
};
#endif

/* witsml1_4_1_1ForGsoap.h:6780 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory (-405)

/* witsml1:RiskCategory */
enum witsml1__RiskCategory {
	witsml1__RiskCategory__hydraulics = 0,
	witsml1__RiskCategory__mechanical = 1,
	witsml1__RiskCategory__time_x0020related = 2,
	witsml1__RiskCategory__wellbore_x0020stability = 3,
	witsml1__RiskCategory__directional_x0020drilling = 4,
	witsml1__RiskCategory__bit = 5,
	witsml1__RiskCategory__equipment_x0020failure = 6,
	witsml1__RiskCategory__completion = 7,
	witsml1__RiskCategory__casing = 8,
	witsml1__RiskCategory__other = 9,
	witsml1__RiskCategory__HSE = 10,
	witsml1__RiskCategory__unknown = 11
};
#endif

/* witsml1_4_1_1ForGsoap.h:6830 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory (-406)

/* witsml1:RiskSubCategory */
enum witsml1__RiskSubCategory {
	witsml1__RiskSubCategory__gas_x0020kick = 0,
	witsml1__RiskSubCategory__shallow_x0020water_x0020influx = 1,
	witsml1__RiskSubCategory__other_x0020influx_x0020or_x0020kicks = 2,
	witsml1__RiskSubCategory__loss_x0020circulation = 3,
	witsml1__RiskSubCategory__poor_x0020hole_x0020cleaning = 4,
	witsml1__RiskSubCategory__good_x0020hole_x0020cleaning_x0020at_x0020high_x0020ROP = 5,
	witsml1__RiskSubCategory__high_x0020mud_x0020weight = 6,
	witsml1__RiskSubCategory__special_x0020additives_x0020needed = 7,
	witsml1__RiskSubCategory__gumbo_x0020problems = 8,
	witsml1__RiskSubCategory__high_x0020ECD_x0020__x0020rheology_x0020related = 9,
	witsml1__RiskSubCategory__excessive_x0020circulation = 10,
	witsml1__RiskSubCategory__performing_x0020a_x0020kill = 11,
	witsml1__RiskSubCategory__mud_x0020weight_x0020change = 12,
	witsml1__RiskSubCategory__excessive_x0020pipe_x0020cement_x0020scaling = 13,
	witsml1__RiskSubCategory__pit_x0020gain_x0020or_x0020loss = 14,
	witsml1__RiskSubCategory__mud_x0020stability_x0020problems = 15,
	witsml1__RiskSubCategory__shallow_x0020gas_x0020flow = 16,
	witsml1__RiskSubCategory__twist_x0020off = 17,
	witsml1__RiskSubCategory__stuck_x0020pipe = 18,
	witsml1__RiskSubCategory__wireline_x0020stuck_x0020in_x0020hole = 19,
	witsml1__RiskSubCategory__stick_x0020and_x0020slip = 20,
	witsml1__RiskSubCategory__vibration_x0020__x0020axial = 21,
	witsml1__RiskSubCategory__vibration_x0020__x0020torsional = 22,
	witsml1__RiskSubCategory__vibration_x0020__x0020transverse = 23,
	witsml1__RiskSubCategory__vibration_x0020unknown_x0020or_x0020rough_x0020drilling = 24,
	witsml1__RiskSubCategory__uneven_x0020wear_x0020of_x0020BHA = 25,
	witsml1__RiskSubCategory__uneven_x0020wear_x0020of_x0020drillstring = 26,
	witsml1__RiskSubCategory__excessive_x0020torque = 27,
	witsml1__RiskSubCategory__excessive_x0020drag = 28,
	witsml1__RiskSubCategory__reaming_x0020greater_x0020than_x00202_x0020hours = 29,
	witsml1__RiskSubCategory__washouts = 30,
	witsml1__RiskSubCategory__tight_x0020hole_x0020or_x0020overPull = 31,
	witsml1__RiskSubCategory__failed_x0020inspections_x0020or_x0020fatigue_x0020wear = 32,
	witsml1__RiskSubCategory__mechanical = 33,
	witsml1__RiskSubCategory__drilling_x0020greater_x0020than_x00201000_x0020feet_x002fday = 34,
	witsml1__RiskSubCategory__drilling_x0020greater_x0020than_x00202000_x0020feet_x002fday = 35,
	witsml1__RiskSubCategory__drilling_x0020less_x0020than_x002020_x0020feet_x002fday = 36,
	witsml1__RiskSubCategory__trips_x0020greater_x0020than_x002024_x0020hours = 37,
	witsml1__RiskSubCategory__excessive_x0020time_x0020for_x0020BHA_x0020makeup = 38,
	witsml1__RiskSubCategory__waiting_x0020on_x0020decisions = 39,
	witsml1__RiskSubCategory__waiting_x0020on_x0020weather = 40,
	witsml1__RiskSubCategory__waiting_x0020on_x0020tools = 41,
	witsml1__RiskSubCategory__sloughing_x0020or_x0020packoffs = 42,
	witsml1__RiskSubCategory__ballooning = 43,
	witsml1__RiskSubCategory__fracture_x0020problems = 44,
	witsml1__RiskSubCategory__unstable_x0020zones = 45,
	witsml1__RiskSubCategory__formation_x0020integrity_x0020test = 46,
	witsml1__RiskSubCategory__leak_off_x0020test = 47,
	witsml1__RiskSubCategory__tectonics = 48,
	witsml1__RiskSubCategory__pore_x0020pressure = 49,
	witsml1__RiskSubCategory__breakouts = 50,
	witsml1__RiskSubCategory__bed_x0020parallel = 51,
	witsml1__RiskSubCategory__wellbore_x0020stability = 52,
	witsml1__RiskSubCategory__excessive_x0020doglegs = 53,
	witsml1__RiskSubCategory__sidetrack = 54,
	witsml1__RiskSubCategory__BHA_x0020change_x0020for_x0020directional = 55,
	witsml1__RiskSubCategory__wrong_x0020total_x0020flow_x0020area = 56,
	witsml1__RiskSubCategory__well_x0020collision_x0020__x0020actual = 57,
	witsml1__RiskSubCategory__well_x0020collision_x0020__x0020technical = 58,
	witsml1__RiskSubCategory__geosteering = 59,
	witsml1__RiskSubCategory__abnormal_x0020tendency_x0020changes = 60,
	witsml1__RiskSubCategory__resurveying = 61,
	witsml1__RiskSubCategory__in_field_x0020referencing_x0020_x0028IFR_x0029_x0020actions = 62,
	witsml1__RiskSubCategory__bit_x0020or_x0020BHA_x0020performance = 63,
	witsml1__RiskSubCategory__drilling_x0020optimization = 64,
	witsml1__RiskSubCategory__bit_x0020balling = 'A',
	witsml1__RiskSubCategory__lost_x0020cones_x0020or_x0020broken_x0020cutters = 'B',
	witsml1__RiskSubCategory__excessive_x0020bit_x0020wear_x0020or_x0020gauge = 'C',
	witsml1__RiskSubCategory__low_x0020rate_x0020of_x0020bit_x0020penetration = 'D',
	witsml1__RiskSubCategory__high_x0020rate_x0020of_x0020bit_x0020penetration = 'E',
	witsml1__RiskSubCategory__downhole_x0020tool = 'F',
	witsml1__RiskSubCategory__surface_x0020system = 'G',
	witsml1__RiskSubCategory__motor_x0020or_x0020rotary_x0020steerable_x0020system_x0020failure = 'H',
	witsml1__RiskSubCategory__topdrive_x0020failure = 'I',
	witsml1__RiskSubCategory__hoisting_x0020equipment_x0020failure = 'J',
	witsml1__RiskSubCategory__circulating_x0020equipment_x0020failure = 'K',
	witsml1__RiskSubCategory__electrical_x0020system_x0020failure = 'L',
	witsml1__RiskSubCategory__blow_x0020out_x0020preventer_x0020events = 'M',
	witsml1__RiskSubCategory__surface_x0020instrumentation_x0020problems = 'N',
	witsml1__RiskSubCategory__rig_x0020communications = 'O',
	witsml1__RiskSubCategory__completion_x0020equipment_x0020failure = 'P',
	witsml1__RiskSubCategory__miscellaneous_x0020rig_x0020equipment = 'Q',
	witsml1__RiskSubCategory__tool_x0020or_x0020equipment_x0020failure = 'R',
	witsml1__RiskSubCategory__squeeze_x0020jobs = 'S',
	witsml1__RiskSubCategory__casing_x0020surge_x0020losses = 'T',
	witsml1__RiskSubCategory__stuck_x0020casing_x0020or_x0020completion = 'U',
	witsml1__RiskSubCategory__shoe_x0020failures = 'V',
	witsml1__RiskSubCategory__early_x0020cement_x0020setup = 'W',
	witsml1__RiskSubCategory__casing_x0020collapse = 'X',
	witsml1__RiskSubCategory__milling = 'Y',
	witsml1__RiskSubCategory__excessive_x0020casing_x0020wear_x0020or_x0020cuttings = 'Z',
	witsml1__RiskSubCategory__excessive_x0020formation_x0020damage_x0020or_x0020skin = 91,
	witsml1__RiskSubCategory__casing_x0020rotation_x0020or_x0020reciprocation_x0020rqd = 92,
	witsml1__RiskSubCategory__broaching = 93,
	witsml1__RiskSubCategory__completion_x0020or_x0020casing = 94,
	witsml1__RiskSubCategory__stratigraphy = 95,
	witsml1__RiskSubCategory__fishing = 96,
	witsml1__RiskSubCategory__junk_x0020in_x0020hole = 'a',
	witsml1__RiskSubCategory__delay_x0020due_x0020to_x0020political_x0020unrest = 'b',
	witsml1__RiskSubCategory__rig_x0020move = 'c',
	witsml1__RiskSubCategory__gas_x0020hydrates = 'd',
	witsml1__RiskSubCategory__pending_x0020analysis = 'e',
	witsml1__RiskSubCategory__riser_x0020disconnect = 'f',
	witsml1__RiskSubCategory__other = 'g',
	witsml1__RiskSubCategory__personnel = 'h',
	witsml1__RiskSubCategory__environmental = 'i',
	witsml1__RiskSubCategory__automotive = 'j',
	witsml1__RiskSubCategory__asset = 'k',
	witsml1__RiskSubCategory__information = 'l',
	witsml1__RiskSubCategory__time = 'm',
	witsml1__RiskSubCategory__HSE = 'n'
};
#endif

/* witsml1_4_1_1ForGsoap.h:7188 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType (-407)

/* witsml1:RiskType */
enum witsml1__RiskType {
	witsml1__RiskType__risk = 0,
	witsml1__RiskType__event = 1,
	witsml1__RiskType__near_x0020miss = 2,
	witsml1__RiskType__best_x0020practice = 3,
	witsml1__RiskType__lessons_x0020learned = 4,
	witsml1__RiskType__other = 5,
	witsml1__RiskType__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:7222 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType (-408)

/* witsml1:ScrType */
enum witsml1__ScrType {
	witsml1__ScrType__string_x0020annulus = 0,
	witsml1__ScrType__string_x0020kill_x0020line = 1,
	witsml1__ScrType__string_x0020choke_x0020line = 2,
	witsml1__ScrType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:7244 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence (-409)

/* witsml1:ShowFluorescence */
enum witsml1__ShowFluorescence {
	witsml1__ShowFluorescence__faint = 0,
	witsml1__ShowFluorescence__bright = 1,
	witsml1__ShowFluorescence__none = 2,
	witsml1__ShowFluorescence__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:7266 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel (-410)

/* witsml1:ShowLevel */
enum witsml1__ShowLevel {
	witsml1__ShowLevel__blooming = 0,
	witsml1__ShowLevel__streaming = 1,
	witsml1__ShowLevel__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:7285 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating (-411)

/* witsml1:ShowRating */
enum witsml1__ShowRating {
	witsml1__ShowRating__none = 0,
	witsml1__ShowRating__very_x0020poor = 1,
	witsml1__ShowRating__poor = 2,
	witsml1__ShowRating__fair = 3,
	witsml1__ShowRating__good = 4,
	witsml1__ShowRating__very_x0020good = 5,
	witsml1__ShowRating__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:7316 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed (-412)

/* witsml1:ShowSpeed */
enum witsml1__ShowSpeed {
	witsml1__ShowSpeed__slow = 0,
	witsml1__ShowSpeed__moderately_x0020fast = 1,
	witsml1__ShowSpeed__fast = 2,
	witsml1__ShowSpeed__instantaneous = 3,
	witsml1__ShowSpeed__none = 4,
	witsml1__ShowSpeed__unknown = 5
};
#endif

/* witsml1_4_1_1ForGsoap.h:7344 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity (-413)

/* witsml1:StateDetailActivity */
enum witsml1__StateDetailActivity {
	witsml1__StateDetailActivity__injury = 0,
	witsml1__StateDetailActivity__operation_x0020failed = 1,
	witsml1__StateDetailActivity__kick = 2,
	witsml1__StateDetailActivity__circulation_x0020loss = 3,
	witsml1__StateDetailActivity__mud_x0020loss = 4,
	witsml1__StateDetailActivity__stuck_x0020equipment = 5,
	witsml1__StateDetailActivity__equipment_x0020failure = 6,
	witsml1__StateDetailActivity__equipment_x0020hang = 7,
	witsml1__StateDetailActivity__success = 8,
	witsml1__StateDetailActivity__unknown = 9
};
#endif

/* witsml1_4_1_1ForGsoap.h:7396 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType (-414)

/* witsml1:StimAdditiveType */
enum witsml1__StimAdditiveType {
	witsml1__StimAdditiveType__abrasive = 0,
	witsml1__StimAdditiveType__accelerator = 1,
	witsml1__StimAdditiveType__acid_x0020inhibitor_x002fretarder = 2,
	witsml1__StimAdditiveType__acid_x0020material = 3,
	witsml1__StimAdditiveType__acid_x0020soluble_x0020additive = 4,
	witsml1__StimAdditiveType__acid_x0020source = 5,
	witsml1__StimAdditiveType__activator = 6,
	witsml1__StimAdditiveType__additive_x0020material = 7,
	witsml1__StimAdditiveType__alcohol = 8,
	witsml1__StimAdditiveType__anti_Sludge = 9,
	witsml1__StimAdditiveType__anti_sulfide_x0020cracker = 10,
	witsml1__StimAdditiveType__aromatic_x0020solvent = 11,
	witsml1__StimAdditiveType__biocide = 12,
	witsml1__StimAdditiveType__borehole_x0020stabilizer = 13,
	witsml1__StimAdditiveType__breaker = 14,
	witsml1__StimAdditiveType__bridging_x0020agent = 15,
	witsml1__StimAdditiveType__buffer = 16,
	witsml1__StimAdditiveType__calcium_x0020remover = 17,
	witsml1__StimAdditiveType__carrying_x0020agent = 18,
	witsml1__StimAdditiveType__catalyst = 19,
	witsml1__StimAdditiveType__clay = 20,
	witsml1__StimAdditiveType__clay_x0020control = 21,
	witsml1__StimAdditiveType__conductivity_x0020enhancer = 22,
	witsml1__StimAdditiveType__conformance_x0020control = 23,
	witsml1__StimAdditiveType__conformance_x0020caterial = 24,
	witsml1__StimAdditiveType__corrosion_x0020inhibitor = 25,
	witsml1__StimAdditiveType__crosslink_x0020enhancer = 26,
	witsml1__StimAdditiveType__crosslinker = 27,
	witsml1__StimAdditiveType__curing_x0020agent = 28,
	witsml1__StimAdditiveType__defoamer = 29,
	witsml1__StimAdditiveType__demulsifier = 30,
	witsml1__StimAdditiveType__diluent = 31,
	witsml1__StimAdditiveType__dispersant = 32,
	witsml1__StimAdditiveType__diverter = 33,
	witsml1__StimAdditiveType__elastomeric_x0020additive = 34,
	witsml1__StimAdditiveType__emulsifier = 35,
	witsml1__StimAdditiveType__epoxy_x0020resin = 36,
	witsml1__StimAdditiveType__expoxy_x0020resin_x0020agent = 37,
	witsml1__StimAdditiveType__expander = 38,
	witsml1__StimAdditiveType__filtration_x0020control = 39,
	witsml1__StimAdditiveType__flocculant = 40,
	witsml1__StimAdditiveType__fluid_x0020loss_x0020control = 41,
	witsml1__StimAdditiveType__flush_x002fspacer_x0020additive = 42,
	witsml1__StimAdditiveType__foamer = 43,
	witsml1__StimAdditiveType__formation_x0020sealer = 44,
	witsml1__StimAdditiveType__free_x0020water_x0020control = 45,
	witsml1__StimAdditiveType__friction_x0020reducer = 46,
	witsml1__StimAdditiveType__gas = 47,
	witsml1__StimAdditiveType__gas_x0020migration_x0020control = 48,
	witsml1__StimAdditiveType__gel_x0020stabilizer = 49,
	witsml1__StimAdditiveType__gelling_x0020agent = 50,
	witsml1__StimAdditiveType__H2S_x0020scavenger = 51,
	witsml1__StimAdditiveType__intensifier = 52,
	witsml1__StimAdditiveType__iron_x0020control = 53,
	witsml1__StimAdditiveType__lost_x0020circulation_x0020additive = 54,
	witsml1__StimAdditiveType__low_x0020fluid_x0020loss_x0020control = 55,
	witsml1__StimAdditiveType__lubricant = 56,
	witsml1__StimAdditiveType__misc_x0020additive = 57,
	witsml1__StimAdditiveType__mixing_x0020fluid = 58,
	witsml1__StimAdditiveType__mud_x0020removal_x0020additive = 59,
	witsml1__StimAdditiveType__mud_x0020thinner = 60,
	witsml1__StimAdditiveType__mutual_x0020solvent = 61,
	witsml1__StimAdditiveType__oxydizer = 62,
	witsml1__StimAdditiveType__oxygen_x0020scavenger = 63,
	witsml1__StimAdditiveType__parafin_x0020control = 64,
	witsml1__StimAdditiveType__penetrating_x0020agent = 'A',
	witsml1__StimAdditiveType__polymer = 'B',
	witsml1__StimAdditiveType__proppant_x0020stabilizer = 'C',
	witsml1__StimAdditiveType__radioactive_x0020tracer = 'D',
	witsml1__StimAdditiveType__raw_x0020acid = 'E',
	witsml1__StimAdditiveType__relative_x0020perm_x0020modifier = 'F',
	witsml1__StimAdditiveType__retarder = 'G',
	witsml1__StimAdditiveType__salt = 'H',
	witsml1__StimAdditiveType__sand = 'I',
	witsml1__StimAdditiveType__sand_x0020control_x0020material = 'J',
	witsml1__StimAdditiveType__scale_x0020control_x0020additive = 'K',
	witsml1__StimAdditiveType__stabilizer = 'L',
	witsml1__StimAdditiveType__strength_x0020retrogression = 'M',
	witsml1__StimAdditiveType__sulfide_x0020scavenger = 'N',
	witsml1__StimAdditiveType__surfactant = 'O',
	witsml1__StimAdditiveType__suspension_x0020agent = 'P',
	witsml1__StimAdditiveType__tactifier = 'Q',
	witsml1__StimAdditiveType__viscosifier = 'R',
	witsml1__StimAdditiveType__water_x0020additive = 'S',
	witsml1__StimAdditiveType__water_x0020management_x0020material = 'T',
	witsml1__StimAdditiveType__pH_x0020control = 'U',
	witsml1__StimAdditiveType__unknown = 'V'
};
#endif

/* witsml1_4_1_1ForGsoap.h:7775 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod (-415)

/* witsml1:StimAnalysisMethod */
enum witsml1__StimAnalysisMethod {
	witsml1__StimAnalysisMethod__average = 0,
	witsml1__StimAnalysisMethod__delta_x0020pressure_x0020over_x0020g_time = 1,
	witsml1__StimAnalysisMethod__delta_x0020pressure_x0020over_x0020linear_x0020time = 2,
	witsml1__StimAnalysisMethod__delta_x0020pressure_x0020over_x0020radial_x0020time = 3,
	witsml1__StimAnalysisMethod__gdk_x00202_d = 4,
	witsml1__StimAnalysisMethod__horner = 5,
	witsml1__StimAnalysisMethod__linear = 6,
	witsml1__StimAnalysisMethod__log_log = 7,
	witsml1__StimAnalysisMethod__nolte = 8,
	witsml1__StimAnalysisMethod__pdl_x0020coefficient = 9,
	witsml1__StimAnalysisMethod__perkins_x0020and_x0020kern_x00202_d = 10,
	witsml1__StimAnalysisMethod__radial_x00202_d = 11,
	witsml1__StimAnalysisMethod__square_x0020root = 12,
	witsml1__StimAnalysisMethod__third_party_x0020software = 13,
	witsml1__StimAnalysisMethod__other = 14,
	witsml1__StimAnalysisMethod__unknown = 15
};
#endif

/* witsml1_4_1_1ForGsoap.h:7850 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype (-416)

/* witsml1:StimFluidSubtype */
enum witsml1__StimFluidSubtype {
	witsml1__StimFluidSubtype__acid = 0,
	witsml1__StimFluidSubtype__base = 1,
	witsml1__StimFluidSubtype__carbon_x0020dioxide = 2,
	witsml1__StimFluidSubtype__carbon_x0020dioxide_x0020and_x0020nitrogen = 3,
	witsml1__StimFluidSubtype__carbon_x0020dioxide_x0020and_x0020water = 4,
	witsml1__StimFluidSubtype__condensate = 5,
	witsml1__StimFluidSubtype__cross_linked_x0020gel = 6,
	witsml1__StimFluidSubtype__crude_x0020oil = 7,
	witsml1__StimFluidSubtype__diesel = 8,
	witsml1__StimFluidSubtype__foam = 9,
	witsml1__StimFluidSubtype__fracturing_x0020oil = 10,
	witsml1__StimFluidSubtype__fresh_x0020water = 11,
	witsml1__StimFluidSubtype__gelled_x0020acid = 12,
	witsml1__StimFluidSubtype__gelled_x0020condensate = 13,
	witsml1__StimFluidSubtype__gelled_x0020crude = 14,
	witsml1__StimFluidSubtype__gelled_x0020diesel = 15,
	witsml1__StimFluidSubtype__gelled_x0020oil = 16,
	witsml1__StimFluidSubtype__gelled_x0020salt_x0020water = 17,
	witsml1__StimFluidSubtype__hot_x0020condensate = 18,
	witsml1__StimFluidSubtype__hot_x0020fresh_x0020water = 19,
	witsml1__StimFluidSubtype__hot_x0020oil = 20,
	witsml1__StimFluidSubtype__hot_x0020salt_x0020water = 21,
	witsml1__StimFluidSubtype__hybrid = 22,
	witsml1__StimFluidSubtype__linear_x0020gel = 23,
	witsml1__StimFluidSubtype__liquefied_x0020petroleum_x0020gas = 24,
	witsml1__StimFluidSubtype__nitrogen = 25,
	witsml1__StimFluidSubtype__oil = 26,
	witsml1__StimFluidSubtype__produced_x0020water = 27,
	witsml1__StimFluidSubtype__salt_x0020water = 28,
	witsml1__StimFluidSubtype__slick_x0020water = 29,
	witsml1__StimFluidSubtype__other = 30
};
#endif

/* witsml1_4_1_1ForGsoap.h:7984 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType (-417)

/* witsml1:StimFluidType */
enum witsml1__StimFluidType {
	witsml1__StimFluidType__acid_based = 0,
	witsml1__StimFluidType__gas = 1,
	witsml1__StimFluidType__oil_based = 2,
	witsml1__StimFluidType__water_based = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:8013 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType (-418)

/* witsml1:StimProppantType */
enum witsml1__StimProppantType {
	witsml1__StimProppantType__sand = 0,
	witsml1__StimProppantType__manmade_x0020proppant = 1,
	witsml1__StimProppantType__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:8037 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType (-419)

/* witsml1:StimStageFlowPathType */
enum witsml1__StimStageFlowPathType {
	witsml1__StimStageFlowPathType__annulus = 0,
	witsml1__StimStageFlowPathType__casing = 1,
	witsml1__StimStageFlowPathType__coiled_x0020tubing = 2,
	witsml1__StimStageFlowPathType__drill_x0020pipe = 3,
	witsml1__StimStageFlowPathType__open_x0020hole = 4,
	witsml1__StimStageFlowPathType__tubing = 5,
	witsml1__StimStageFlowPathType__tubing_x0020and_x0020annulus = 6,
	witsml1__StimStageFlowPathType__unknown = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:8081 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType (-420)

/* witsml1:StimStageType */
enum witsml1__StimStageType {
	witsml1__StimStageType__acid = 0,
	witsml1__StimStageType__acid_x0020spearhead = 1,
	witsml1__StimStageType__acid_x0020ball_x0020out = 2,
	witsml1__StimStageType__acid_x0020breakdown = 3,
	witsml1__StimStageType__ball_x0020out = 4,
	witsml1__StimStageType__breakdown = 5,
	witsml1__StimStageType__chemical_x0020wash = 6,
	witsml1__StimStageType__circulate = 7,
	witsml1__StimStageType__displacement = 8,
	witsml1__StimStageType__diverter = 9,
	witsml1__StimStageType__fluid_x0020efficiency_x0020test = 10,
	witsml1__StimStageType__flowback = 11,
	witsml1__StimStageType__flush = 12,
	witsml1__StimStageType__foamed_x0020acid = 13,
	witsml1__StimStageType__hydrajet = 14,
	witsml1__StimStageType__load_x0020well = 15,
	witsml1__StimStageType__load_x0020annulus = 16,
	witsml1__StimStageType__overflush = 17,
	witsml1__StimStageType__pad = 18,
	witsml1__StimStageType__pump_in = 19,
	witsml1__StimStageType__pre_Job = 20,
	witsml1__StimStageType__pre_flush = 21,
	witsml1__StimStageType__pre_pad = 22,
	witsml1__StimStageType__shut_in = 23,
	witsml1__StimStageType__shut_in_x0020for_x0020FET_x0020analysis = 24,
	witsml1__StimStageType__proppant_x0020laden_x0020fluid = 25,
	witsml1__StimStageType__slurry = 26,
	witsml1__StimStageType__sand_x0020slug = 27,
	witsml1__StimStageType__spacer = 28,
	witsml1__StimStageType__spot_x0020acid = 29,
	witsml1__StimStageType__step_x0020rate_x0020test = 30,
	witsml1__StimStageType__treatment = 31,
	witsml1__StimStageType__other = 32,
	witsml1__StimStageType__unknown = 33
};
#endif

/* witsml1_4_1_1ForGsoap.h:8235 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft (-421)

/* witsml1:SupportCraft */
enum witsml1__SupportCraft {
	witsml1__SupportCraft__barge = 0,
	witsml1__SupportCraft__standby_x0020boat = 1,
	witsml1__SupportCraft__helicopter = 2,
	witsml1__SupportCraft__supply_x0020boat = 3,
	witsml1__SupportCraft__truck = 4,
	witsml1__SupportCraft__crew_x0020vehicle = 5,
	witsml1__SupportCraft__tug_x0020boat = 6,
	witsml1__SupportCraft__unknown = 7
};
#endif

/* witsml1_4_1_1ForGsoap.h:8272 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType (-422)

/* witsml1:SurfEquipType */
enum witsml1__SurfEquipType {
	witsml1__SurfEquipType__IADC = 0,
	witsml1__SurfEquipType__custom = 1,
	witsml1__SurfEquipType__coiled_x0020tubing = 2,
	witsml1__SurfEquipType__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:8297 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode (-423)

/* witsml1:SurveyToolOperatingMode */
enum witsml1__SurveyToolOperatingMode {
	witsml1__SurveyToolOperatingMode__stationary = 0,
	witsml1__SurveyToolOperatingMode__continuous_x0020XY = 1,
	witsml1__SurveyToolOperatingMode__continuous_x0020Z = 2,
	witsml1__SurveyToolOperatingMode__continuous_x0020XYZ = 3,
	witsml1__SurveyToolOperatingMode__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:8329 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory (-424)

/* witsml1:TargetCategory */
enum witsml1__TargetCategory {
	witsml1__TargetCategory__geological = 0,
	witsml1__TargetCategory__unknown = 1
};
#endif

/* witsml1_4_1_1ForGsoap.h:8348 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope (-425)

/* witsml1:TargetScope */
enum witsml1__TargetScope {
	witsml1__TargetScope__3D_x0020volume = 0,
	witsml1__TargetScope__ellipsoid = 1,
	witsml1__TargetScope__elliptical = 2,
	witsml1__TargetScope__hardLine = 3,
	witsml1__TargetScope__irregular = 4,
	witsml1__TargetScope__lease_x0020line = 5,
	witsml1__TargetScope__line = 6,
	witsml1__TargetScope__plane = 7,
	witsml1__TargetScope__point = 8,
	witsml1__TargetScope__rectangular = 9,
	witsml1__TargetScope__unknown = 10
};
#endif

/* witsml1_4_1_1ForGsoap.h:8404 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope (-426)

/* witsml1:TargetSectionScope */
enum witsml1__TargetSectionScope {
	witsml1__TargetSectionScope__arc = 0,
	witsml1__TargetSectionScope__line = 1,
	witsml1__TargetSectionScope__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:8436 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus (-428)

/* witsml1:TrajStationStatus */
enum witsml1__TrajStationStatus {
	witsml1__TrajStationStatus__open = 0,
	witsml1__TrajStationStatus__rejected = 1,
	witsml1__TrajStationStatus__position = 2,
	witsml1__TrajStationStatus__unknown = 3
};
#endif

/* witsml1_4_1_1ForGsoap.h:8464 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType (-429)

/* witsml1:TrajStationType */
enum witsml1__TrajStationType {
	witsml1__TrajStationType__azimuth_x0020on_x0020plane = 0,
	witsml1__TrajStationType__buildrate_x0020to_x0020delta_MD = 1,
	witsml1__TrajStationType__buildrate_x0020to_x0020INCL = 2,
	witsml1__TrajStationType__buildrate_x0020to_x0020MD = 3,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020AZI = 4,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020delta_MD = 5,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020INCL = 6,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020INCL_x0020and_x0020AZI = 7,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020MD = 8,
	witsml1__TrajStationType__buildrate_x0020and_x0020turnrate_x0020to_x0020TVD = 9,
	witsml1__TrajStationType__buildrate_x0020TVD = 10,
	witsml1__TrajStationType__casing_x0020MD = 11,
	witsml1__TrajStationType__casing_x0020TVD = 12,
	witsml1__TrajStationType__DLS = 13,
	witsml1__TrajStationType__DLS_x0020to_x0020AZI_x0020and_x0020MD = 14,
	witsml1__TrajStationType__DLS_x0020to_x0020AZI_TVD = 15,
	witsml1__TrajStationType__DLS_x0020to_x0020INCL = 16,
	witsml1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020AZI = 17,
	witsml1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020MD = 18,
	witsml1__TrajStationType__DLS_x0020to_x0020INCL_x0020and_x0020TVD = 19,
	witsml1__TrajStationType__DLS_x0020to_x0020NS_x002c_x0020EW_x0020and_x0020TVD = 20,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020AZI = 21,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020delta_MD = 22,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020INCL = 23,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020INCL_AZI = 24,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020MD = 25,
	witsml1__TrajStationType__DLS_x0020and_x0020toolface_x0020to_x0020TVD = 26,
	witsml1__TrajStationType__formation_x0020MD = 27,
	witsml1__TrajStationType__formation_x0020TVD = 28,
	witsml1__TrajStationType__gyro_x0020inertial = 29,
	witsml1__TrajStationType__gyro_x0020MWD = 30,
	witsml1__TrajStationType__gyro_x0020north_x0020seeking = 31,
	witsml1__TrajStationType__hold_x0020to_x0020delta_MD = 32,
	witsml1__TrajStationType__hold_x0020to_x0020MD = 33,
	witsml1__TrajStationType__hold_x0020to_x0020TVD = 34,
	witsml1__TrajStationType__INCL_x002c_x0020AZI_x0020and_x0020TVD = 35,
	witsml1__TrajStationType__magnetic_x0020multi_shot = 36,
	witsml1__TrajStationType__magnetic_x0020MWD = 37,
	witsml1__TrajStationType__magnetic_x0020single_x0020shot = 38,
	witsml1__TrajStationType__marker_x0020MD = 39,
	witsml1__TrajStationType__marker_x0020TVD = 40,
	witsml1__TrajStationType__NS_x002c_x0020EW_x0020and_x0020TVD = 41,
	witsml1__TrajStationType__target_x0020center = 42,
	witsml1__TrajStationType__target_x0020offset = 43,
	witsml1__TrajStationType__tie_x0020in_x0020point = 44,
	witsml1__TrajStationType__turnrate_x0020to_x0020AZI = 45,
	witsml1__TrajStationType__turnrate_x0020to_x0020delta_MD = 46,
	witsml1__TrajStationType__turnrate_x0020to_x0020MD = 47,
	witsml1__TrajStationType__turnrate_x0020to_x0020TVD = 48,
	witsml1__TrajStationType__unknown = 49
};
#endif

/* witsml1_4_1_1ForGsoap.h:8673 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly (-430)

/* witsml1:TubularAssembly */
enum witsml1__TubularAssembly {
	witsml1__TubularAssembly__drilling = 0,
	witsml1__TubularAssembly__directional_x0020drilling = 1,
	witsml1__TubularAssembly__fishing = 2,
	witsml1__TubularAssembly__condition_x0020mud = 3,
	witsml1__TubularAssembly__tubing_x0020conveyed_x0020logging = 4,
	witsml1__TubularAssembly__cementing = 5,
	witsml1__TubularAssembly__casing = 6,
	witsml1__TubularAssembly__clean_x0020out = 7,
	witsml1__TubularAssembly__completion_x0020or_x0020testing = 8,
	witsml1__TubularAssembly__coring = 9,
	witsml1__TubularAssembly__hole_x0020opening_x0020or_x0020underreaming = 10,
	witsml1__TubularAssembly__milling_x0020or_x0020dressing_x0020or_x0020cutting = 11,
	witsml1__TubularAssembly__wiper_x0020or_x0020check_x0020or_x0020reaming = 12,
	witsml1__TubularAssembly__unknown = 13
};
#endif

/* witsml1_4_1_1ForGsoap.h:8725 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent (-431)

/* witsml1:TubularComponent */
enum witsml1__TubularComponent {
	witsml1__TubularComponent__non_magnetic_x0020stabilizer = 0,
	witsml1__TubularComponent__non_magnetic_x0020collar = 1,
	witsml1__TubularComponent__stabilizer = 2,
	witsml1__TubularComponent__adjustable_x0020kickoff = 3,
	witsml1__TubularComponent__accelerator = 4,
	witsml1__TubularComponent__rotary_x0020steering_x0020tool = 5,
	witsml1__TubularComponent__sub_bar_x0020catcher = 6,
	witsml1__TubularComponent__sub_bent = 7,
	witsml1__TubularComponent__bit_x0020core_x0020diamond = 8,
	witsml1__TubularComponent__bit_x0020core_x0020PDC = 9,
	witsml1__TubularComponent__bit_x0020diamond_x0020fixed_x0020cut = 10,
	witsml1__TubularComponent__bit_x0020insert_x0020roller_x0020cone = 11,
	witsml1__TubularComponent__bit_x0020mill_x0020tooth_x0020roller_x0020cone = 12,
	witsml1__TubularComponent__bit_x0020PDC_x0020fixed_x0020cutter = 13,
	witsml1__TubularComponent__sub_bit = 14,
	witsml1__TubularComponent__bridge_x0020plug = 15,
	witsml1__TubularComponent__bullnose = 16,
	witsml1__TubularComponent__bull_x0020plug = 17,
	witsml1__TubularComponent__sub_bumper = 18,
	witsml1__TubularComponent__casing = 19,
	witsml1__TubularComponent__casing_x0020cutter = 20,
	witsml1__TubularComponent__hanger_x0020casing_x0020subsea = 21,
	witsml1__TubularComponent__hanger_x0020casing_x0020surface = 22,
	witsml1__TubularComponent__casing_x0020head = 23,
	witsml1__TubularComponent__catch_x0020assembly = 24,
	witsml1__TubularComponent__sub_catcher = 25,
	witsml1__TubularComponent__sub_circulation = 26,
	witsml1__TubularComponent__coiled_x0020tubing_x0020in_x0020hole = 27,
	witsml1__TubularComponent__coiled_x0020tubing_x0020on_x0020coil = 28,
	witsml1__TubularComponent__drill_x0020pipe_x0020compressive = 29,
	witsml1__TubularComponent__sub_cone = 30,
	witsml1__TubularComponent__core_x0020barrel = 31,
	witsml1__TubularComponent__core_x0020orientation_x0020barrel = 32,
	witsml1__TubularComponent__sub_crossover = 33,
	witsml1__TubularComponent__casing_x0020crossover = 34,
	witsml1__TubularComponent__sub_dart = 35,
	witsml1__TubularComponent__die_x0020collar = 36,
	witsml1__TubularComponent__die_x0020collar_x0020LH = 37,
	witsml1__TubularComponent__directional_x0020guidance_x0020system = 38,
	witsml1__TubularComponent__drill_x0020collar = 39,
	witsml1__TubularComponent__drill_x0020pipe = 40,
	witsml1__TubularComponent__drill_x0020pipe_x0020LH = 41,
	witsml1__TubularComponent__drill_x0020stem_x0020test_x0020BHA = 42,
	witsml1__TubularComponent__drive_x0020pipe = 43,
	witsml1__TubularComponent__dual_x0020catch_x0020assembly = 44,
	witsml1__TubularComponent__extension_x0020bowl_x0020overshot = 45,
	witsml1__TubularComponent__extension_x0020sub_overshot = 46,
	witsml1__TubularComponent__float_x0020collar = 47,
	witsml1__TubularComponent__float_x0020shoe = 48,
	witsml1__TubularComponent__sub_float = 49,
	witsml1__TubularComponent__flow_x0020head = 50,
	witsml1__TubularComponent__guide_x0020shoe = 51,
	witsml1__TubularComponent__MWD_x0020hang_x0020off_x0020sub = 52,
	witsml1__TubularComponent__heavy_x0020weight_x0020drill_x0020pipe = 53,
	witsml1__TubularComponent__heavy_x0020weight_x0020drill_x0020pipe_x0020LH = 54,
	witsml1__TubularComponent__riser_x0020high_x0020pressure = 55,
	witsml1__TubularComponent__bit_x0020hole_x0020opener = 56,
	witsml1__TubularComponent__casing_x0020inflatable_x0020packer = 57,
	witsml1__TubularComponent__motor_x0020instrumented = 58,
	witsml1__TubularComponent__jar = 59,
	witsml1__TubularComponent__sub_jetting = 60,
	witsml1__TubularComponent__junk_x0020basket = 61,
	witsml1__TubularComponent__junk_x0020basket_x0020reverse_x0020circulation = 62,
	witsml1__TubularComponent__sub_junk = 63,
	witsml1__TubularComponent__kelly = 64,
	witsml1__TubularComponent__keyseat_x0020wiper_x0020tool = 'A',
	witsml1__TubularComponent__landing_x0020float_x0020collar = 'B',
	witsml1__TubularComponent__lead_x0020impression_x0020block = 'C',
	witsml1__TubularComponent__liner = 'D',
	witsml1__TubularComponent__hanger_x0020liner = 'E',
	witsml1__TubularComponent__magnet = 'F',
	witsml1__TubularComponent__riser_x0020marine = 'G',
	witsml1__TubularComponent__mill_x0020dress = 'H',
	witsml1__TubularComponent__mill_x0020flat_x0020bottom = 'I',
	witsml1__TubularComponent__mill_x0020hollow = 'J',
	witsml1__TubularComponent__mill_x0020polish = 'K',
	witsml1__TubularComponent__mill_x0020section = 'L',
	witsml1__TubularComponent__mill_x0020taper = 'M',
	witsml1__TubularComponent__mill_x0020washover = 'N',
	witsml1__TubularComponent__mill_x0020packer_x0020picker_x0020assembly = 'O',
	witsml1__TubularComponent__millout_x0020extension = 'P',
	witsml1__TubularComponent__multilateral_x0020hanger_x0020running_x0020tool = 'Q',
	witsml1__TubularComponent__hanger_x0020mud_x0020line = 'R',
	witsml1__TubularComponent__motor = 'S',
	witsml1__TubularComponent__mule_x0020shoe = 'T',
	witsml1__TubularComponent__logging_x0020while_x0020drilling_x0020tool = 'U',
	witsml1__TubularComponent__stabilizer_x0020near_x0020bit_x0020roller_x0020reamer = 'V',
	witsml1__TubularComponent__stabilizer_x0020near_x0020bit = 'W',
	witsml1__TubularComponent__stabilizer_x0020non_rotating = 'X',
	witsml1__TubularComponent__sub_orienting = 'Y',
	witsml1__TubularComponent__other = 'Z',
	witsml1__TubularComponent__overshot = 91,
	witsml1__TubularComponent__overshot_x0020LH = 92,
	witsml1__TubularComponent__oversize_x0020lip_x0020guide_x0020overshot = 93,
	witsml1__TubularComponent__packer = 94,
	witsml1__TubularComponent__polished_x0020bore_x0020receptacle = 95,
	witsml1__TubularComponent__mill_x0020pilot = 96,
	witsml1__TubularComponent__pipe_x0020cutter = 'a',
	witsml1__TubularComponent__ported_x0020stinger = 'b',
	witsml1__TubularComponent__sub_ported = 'c',
	witsml1__TubularComponent__prepacked_x0020screens = 'd',
	witsml1__TubularComponent__sub_pressure_x0020relief = 'e',
	witsml1__TubularComponent__riser_x0020production = 'f',
	witsml1__TubularComponent__MWD_x0020pulser = 'g',
	witsml1__TubularComponent__sub_pump_x0020out = 'h',
	witsml1__TubularComponent__sub_restrictor = 'i',
	witsml1__TubularComponent__packer_x0020retrieve_x0020TT_x0020squeeze = 'j',
	witsml1__TubularComponent__reversing_x0020tool = 'k',
	witsml1__TubularComponent__stabilizer_x0020string_x0020roller_x0020reamer = 'l',
	witsml1__TubularComponent__packer_x0020RTTS = 'm',
	witsml1__TubularComponent__running_x0020tool = 'n',
	witsml1__TubularComponent__safety_x0020joint = 'o',
	witsml1__TubularComponent__safety_x0020joint_x0020LH = 'p',
	witsml1__TubularComponent__sub_saver = 'q',
	witsml1__TubularComponent__scab_x0020liner_x0020bit_x0020guide = 'r',
	witsml1__TubularComponent__scraper = 's',
	witsml1__TubularComponent__scratchers = 't',
	witsml1__TubularComponent__casing_x0020shoe_x0020screw_in = 'u',
	witsml1__TubularComponent__sub_shock = 'v',
	witsml1__TubularComponent__drill_x0020collar_x0020short = 'w',
	witsml1__TubularComponent__sub_side_x0020entry = 'x',
	witsml1__TubularComponent__slotted_x0020liner = 'y',
	witsml1__TubularComponent__spear = 'z',
	witsml1__TubularComponent__stage_x0020cement_x0020collar = 123,
	witsml1__TubularComponent__motor_x0020steerable = 124,
	witsml1__TubularComponent__packer_x0020storm_x0020valve_x0020RTTS = 125,
	witsml1__TubularComponent__stabilizer_x0020string = 126,
	witsml1__TubularComponent__surface_x0020pipe = 127,
	witsml1__TubularComponent__taper_x0020tap = 128,
	witsml1__TubularComponent__taper_x0020tap_x0020LH = 129,
	witsml1__TubularComponent__tubing_conveyed_x0020perforating_x0020gun = 130,
	witsml1__TubularComponent__thruster = 131,
	witsml1__TubularComponent__tieback_x0020polished_x0020bore_x0020receptacle = 132,
	witsml1__TubularComponent__tieback_x0020stinger = 133,
	witsml1__TubularComponent__tubing = 134,
	witsml1__TubularComponent__hanger_x0020tubing = 135,
	witsml1__TubularComponent__turbine = 136,
	witsml1__TubularComponent__bit_x0020under_x0020reamer = 137,
	witsml1__TubularComponent__stabilizer_x0020variable_x0020blade = 138,
	witsml1__TubularComponent__washover_x0020pipe = 139,
	witsml1__TubularComponent__mill_x0020watermelon = 140,
	witsml1__TubularComponent__whipstock = 141,
	witsml1__TubularComponent__whipstock_x0020anchor = 142,
	witsml1__TubularComponent__stabilizer_x0020turbo_x0020back = 143,
	witsml1__TubularComponent__stabilizer_x0020inline = 144,
	witsml1__TubularComponent__stabilizer_x0020steerable = 145,
	witsml1__TubularComponent__sub_stop = 146,
	witsml1__TubularComponent__sub_filter = 147,
	witsml1__TubularComponent__mill_x0020casing_x0020cutting = 148,
	witsml1__TubularComponent__reamer = 149,
	witsml1__TubularComponent__unknown = 150
};
#endif

/* witsml1_4_1_1ForGsoap.h:9337 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType (-433)

/* witsml1:WellControlIncidentType */
enum witsml1__WellControlIncidentType {
	witsml1__WellControlIncidentType__shallow_x0020gas_x0020kick = 0,
	witsml1__WellControlIncidentType__water_x0020kick = 1,
	witsml1__WellControlIncidentType__oil_x0020kick = 2,
	witsml1__WellControlIncidentType__gas_x0020kick = 3,
	witsml1__WellControlIncidentType__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:9370 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection (-434)

/* witsml1:WellDirection */
enum witsml1__WellDirection {
	witsml1__WellDirection__huff_n_puff = 0,
	witsml1__WellDirection__injector = 1,
	witsml1__WellDirection__producer = 2,
	witsml1__WellDirection__uncertain = 3,
	witsml1__WellDirection__unknown = 4
};
#endif

/* witsml1_4_1_1ForGsoap.h:9402 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid (-435)

/* witsml1:WellFluid */
enum witsml1__WellFluid {
	witsml1__WellFluid__air = 0,
	witsml1__WellFluid__condensate = 1,
	witsml1__WellFluid__dry = 2,
	witsml1__WellFluid__gas = 3,
	witsml1__WellFluid__gas_water = 4,
	witsml1__WellFluid__non_x0020HC_x0020gas = 5,
	witsml1__WellFluid__non_x0020HC_x0020gas_x0020_x002d__x0020CO2 = 6,
	witsml1__WellFluid__oil = 7,
	witsml1__WellFluid__oil_gas = 8,
	witsml1__WellFluid__oil_water = 9,
	witsml1__WellFluid__steam = 10,
	witsml1__WellFluid__water = 11,
	witsml1__WellFluid__water_x0020_x002d__x0020brine = 12,
	witsml1__WellFluid__water_x0020_x002d__x0020fresh_x0020water = 13,
	witsml1__WellFluid__unknown = 14
};
#endif

/* witsml1_4_1_1ForGsoap.h:9471 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType (-436)

/* witsml1:WellKillingProcedureType */
enum witsml1__WellKillingProcedureType {
	witsml1__WellKillingProcedureType__drillers_x0020method = 0,
	witsml1__WellKillingProcedureType__wait_x0020and_x0020weight = 1,
	witsml1__WellKillingProcedureType__bullheading = 2,
	witsml1__WellKillingProcedureType__lubricate_x0020and_x0020bleed = 3,
	witsml1__WellKillingProcedureType__forward_x0020circulation = 4,
	witsml1__WellKillingProcedureType__reverse_x0020circulation = 5,
	witsml1__WellKillingProcedureType__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:9511 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem (-437)

/* witsml1:WellNamingSystem */
enum witsml1__WellNamingSystem {
	witsml1__WellNamingSystem__DTI = 0,
	witsml1__WellNamingSystem__API = 1,
	witsml1__WellNamingSystem__NPD_x0020code = 2,
	witsml1__WellNamingSystem__NPD_x0020number = 3,
	witsml1__WellNamingSystem__local_x0020field = 4,
	witsml1__WellNamingSystem__prospect = 5,
	witsml1__WellNamingSystem__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:9546 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType (-438)

/* witsml1:WellTestType */
enum witsml1__WellTestType {
	witsml1__WellTestType__drill_x0020stem_x0020test = 0,
	witsml1__WellTestType__production_x0020test = 1,
	witsml1__WellTestType__unknown = 2
};
#endif

/* witsml1_4_1_1ForGsoap.h:9570 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape (-439)

/* witsml1:WellboreShape */
enum witsml1__WellboreShape {
	witsml1__WellboreShape__build_x0020and_x0020hold = 0,
	witsml1__WellboreShape__deviated = 1,
	witsml1__WellboreShape__double_x0020kickoff = 2,
	witsml1__WellboreShape__horizontal = 3,
	witsml1__WellboreShape__S_shaped = 4,
	witsml1__WellboreShape__vertical = 5,
	witsml1__WellboreShape__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:9610 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType (-440)

/* witsml1:WellboreType */
enum witsml1__WellboreType {
	witsml1__WellboreType__bypass = 0,
	witsml1__WellboreType__initial = 1,
	witsml1__WellboreType__redrill = 2,
	witsml1__WellboreType__reentry = 3,
	witsml1__WellboreType__respud = 4,
	witsml1__WellboreType__sidetrack = 5,
	witsml1__WellboreType__unknown = 6
};
#endif

/* witsml1_4_1_1ForGsoap.h:9650 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose (-441)

/* witsml1:WellPurpose */
enum witsml1__WellPurpose {
	witsml1__WellPurpose__appraisal = 0,
	witsml1__WellPurpose__appraisal_x0020_x002d__x0020confirmation_x0020appraisal = 1,
	witsml1__WellPurpose__appraisal_x0020_x002d__x0020exploratory_x0020appraisal = 2,
	witsml1__WellPurpose__exploration = 3,
	witsml1__WellPurpose__exploration_x0020_x002d__x0020deeper_pool_x0020wildcat = 4,
	witsml1__WellPurpose__exploration_x0020_x002d__x0020new_field_x0020wildcat = 5,
	witsml1__WellPurpose__exploration_x0020_x002d__x0020new_pool_x0020wildcat = 6,
	witsml1__WellPurpose__exploration_x0020_x002d__x0020outpost_x0020wildcat = 7,
	witsml1__WellPurpose__exploration_x0020_x002d__x0020shallower_pool_x0020wildcat = 8,
	witsml1__WellPurpose__development = 9,
	witsml1__WellPurpose__development_x0020_x002d__x0020infill_x0020development = 10,
	witsml1__WellPurpose__development_x0020_x002d__x0020injector = 11,
	witsml1__WellPurpose__development_x0020_x002d__x0020producer = 12,
	witsml1__WellPurpose__fluid_x0020storage = 13,
	witsml1__WellPurpose__fluid_x0020storage_x0020_x002d__x0020gas_x0020storage = 14,
	witsml1__WellPurpose__general_x0020srvc = 15,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020borehole_x0020re_acquisition = 16,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020observation = 17,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020relief = 18,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research = 19,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020drill_x0020test = 20,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020strat_x0020test = 21,
	witsml1__WellPurpose__general_x0020srvc_x0020_x002d__x0020waste_x0020disposal = 22,
	witsml1__WellPurpose__mineral = 23,
	witsml1__WellPurpose__unknown = 24
};
#endif

/* witsml1_4_1_1ForGsoap.h:9762 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus (-442)

/* witsml1:WellStatus */
enum witsml1__WellStatus {
	witsml1__WellStatus__abandoned = 0,
	witsml1__WellStatus__active = 1,
	witsml1__WellStatus__active_x0020_x002d__x0020injecting = 2,
	witsml1__WellStatus__active_x0020_x002d__x0020producing = 3,
	witsml1__WellStatus__completed = 4,
	witsml1__WellStatus__drilling = 5,
	witsml1__WellStatus__partially_x0020plugged = 6,
	witsml1__WellStatus__permitted = 7,
	witsml1__WellStatus__plugged_x0020and_x0020abandoned = 8,
	witsml1__WellStatus__proposed = 9,
	witsml1__WellStatus__sold = 10,
	witsml1__WellStatus__suspended = 11,
	witsml1__WellStatus__temporarily_x0020abandoned = 12,
	witsml1__WellStatus__testing = 13,
	witsml1__WellStatus__tight = 14,
	witsml1__WellStatus__working_x0020over = 15,
	witsml1__WellStatus__unknown = 16
};
#endif

/* witsml1_4_1_1ForGsoap.h:16207 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition (-731)

/* gml:RelatedTimeType-relativePosition */
enum _gml__RelatedTimeType_relativePosition {
	_gml__RelatedTimeType_relativePosition__Before = 0,
	_gml__RelatedTimeType_relativePosition__After = 1,
	_gml__RelatedTimeType_relativePosition__Begins = 2,
	_gml__RelatedTimeType_relativePosition__Ends = 3,
	_gml__RelatedTimeType_relativePosition__During = 4,
	_gml__RelatedTimeType_relativePosition__Equals = 5,
	_gml__RelatedTimeType_relativePosition__Contains = 6,
	_gml__RelatedTimeType_relativePosition__Overlaps = 7,
	_gml__RelatedTimeType_relativePosition__Meets = 8,
	_gml__RelatedTimeType_relativePosition__OverlappedBy = 9,
	_gml__RelatedTimeType_relativePosition__MetBy = 10,
	_gml__RelatedTimeType_relativePosition__BegunBy = 11,
	_gml__RelatedTimeType_relativePosition__EndedBy = 12
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/* custom/struct_tm.h:80 */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

typedef struct tm xsd__dateTime;
#endif

/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class __witsml1__obj_USCOREformationMarker_sequence;	/* witsml1_4_1_1ForGsoap.h:10076 */
class witsml1__obj_USCOREformationMarker;	/* witsml1_4_1_1ForGsoap.h:241 */
class witsml1__cs_USCOREdocumentInfo;	/* witsml1_4_1_1ForGsoap.h:244 */
class witsml1__cs_USCOREdocumentFileCreation;	/* witsml1_4_1_1ForGsoap.h:247 */
class witsml1__cs_USCOREdocumentSecurityInfo;	/* witsml1_4_1_1ForGsoap.h:451 */
class witsml1__cs_USCOREextensionNameValue;	/* witsml1_4_1_1ForGsoap.h:454 */
class witsml1__cs_USCOREdocumentAudit;	/* witsml1_4_1_1ForGsoap.h:457 */
class witsml1__cs_USCOREdocumentEvent;	/* witsml1_4_1_1ForGsoap.h:460 */
class witsml1__cs_USCOREcommonData;	/* witsml1_4_1_1ForGsoap.h:463 */
class witsml1__cs_USCOREextensionAny;	/* witsml1_4_1_1ForGsoap.h:466 */
class witsml1__cs_USCOREcustomData;	/* witsml1_4_1_1ForGsoap.h:469 */
union _witsml1__union_obj_USCOREcoordinateReferenceSystem;	/* witsml1_4_1_1ForGsoap.h:10708 */
class __witsml1__obj_USCOREcoordinateReferenceSystem_sequence;	/* witsml1_4_1_1ForGsoap.h:10687 */
class witsml1__obj_USCOREcoordinateReferenceSystem;	/* witsml1_4_1_1ForGsoap.h:475 */
union _witsml1__union_cs_USCOREstandardGeodeticCRS;	/* witsml1_4_1_1ForGsoap.h:10769 */
class witsml1__cs_USCOREstandardGeodeticCRS;	/* witsml1_4_1_1ForGsoap.h:478 */
union _witsml1__union_cs_USCOREstandardProjectedCRS;	/* witsml1_4_1_1ForGsoap.h:10808 */
class witsml1__cs_USCOREstandardProjectedCRS;	/* witsml1_4_1_1ForGsoap.h:481 */
union _witsml1__union_cs_USCOREstandardVerticalCRS;	/* witsml1_4_1_1ForGsoap.h:10847 */
class witsml1__cs_USCOREstandardVerticalCRS;	/* witsml1_4_1_1ForGsoap.h:484 */
class __witsml1__obj_USCORElog_sequence;	/* witsml1_4_1_1ForGsoap.h:10891 */
class witsml1__obj_USCORElog;	/* witsml1_4_1_1ForGsoap.h:490 */
class witsml1__cs_USCORElogCurveInfo;	/* witsml1_4_1_1ForGsoap.h:493 */
union _witsml1__union_cs_USCOREaxisDefinition;	/* witsml1_4_1_1ForGsoap.h:11322 */
class witsml1__cs_USCOREaxisDefinition;	/* witsml1_4_1_1ForGsoap.h:496 */
class witsml1__cs_USCORElogData;	/* witsml1_4_1_1ForGsoap.h:499 */
class __witsml1__obj_USCOREtrajectory_sequence;	/* witsml1_4_1_1ForGsoap.h:11424 */
class witsml1__obj_USCOREtrajectory;	/* witsml1_4_1_1ForGsoap.h:505 */
class witsml1__cs_USCOREtrajectoryStation;	/* witsml1_4_1_1ForGsoap.h:508 */
class witsml1__cs_USCOREstnTrajRawData;	/* witsml1_4_1_1ForGsoap.h:511 */
class witsml1__cs_USCOREstnTrajCorUsed;	/* witsml1_4_1_1ForGsoap.h:514 */
class witsml1__cs_USCOREstnTrajValid;	/* witsml1_4_1_1ForGsoap.h:517 */
class witsml1__cs_USCOREstnTrajMatrixCov;	/* witsml1_4_1_1ForGsoap.h:520 */
class witsml1__cs_USCORElocation;	/* witsml1_4_1_1ForGsoap.h:523 */
class witsml1__cs_USCORErefWellboreTrajectoryStation;	/* witsml1_4_1_1ForGsoap.h:526 */
class witsml1__cs_USCORErefWellboreTrajectory;	/* witsml1_4_1_1ForGsoap.h:529 */
class __witsml1__obj_USCOREwellbore_sequence;	/* witsml1_4_1_1ForGsoap.h:12321 */
class witsml1__obj_USCOREwellbore;	/* witsml1_4_1_1ForGsoap.h:535 */
class __witsml1__obj_USCOREwell_sequence;	/* witsml1_4_1_1ForGsoap.h:12495 */
class witsml1__obj_USCOREwell;	/* witsml1_4_1_1ForGsoap.h:541 */
union _witsml1__union_cs_USCOREwellDatum;	/* witsml1_4_1_1ForGsoap.h:12724 */
class witsml1__cs_USCOREwellDatum;	/* witsml1_4_1_1ForGsoap.h:544 */
class witsml1__cs_USCORErefWellWellbore;	/* witsml1_4_1_1ForGsoap.h:547 */
class witsml1__cs_USCORErefWellWellboreRig;	/* witsml1_4_1_1ForGsoap.h:550 */
class witsml1__cs_USCOREpublicLandSurveySystem;	/* witsml1_4_1_1ForGsoap.h:553 */
class witsml1__cs_USCOREreferencePoint;	/* witsml1_4_1_1ForGsoap.h:556 */
union _witsml1__union_cs_USCOREwellCRS;	/* witsml1_4_1_1ForGsoap.h:13057 */
class witsml1__cs_USCOREwellCRS;	/* witsml1_4_1_1ForGsoap.h:559 */
class witsml1__cs_USCOREgeodeticModel;	/* witsml1_4_1_1ForGsoap.h:562 */
class witsml1__cs_USCOREprojectionx;	/* witsml1_4_1_1ForGsoap.h:565 */
union _witsml1__union_cs_USCORElocalCRS;	/* witsml1_4_1_1ForGsoap.h:13369 */
class witsml1__cs_USCORElocalCRS;	/* witsml1_4_1_1ForGsoap.h:568 */
class abstract__abstractObject;	/* witsml1_4_1_1ForGsoap.h:571 */
class gml__AbstractGMLType;	/* witsml1_4_1_1ForGsoap.h:589 */
class gml__ReferenceType;	/* witsml1_4_1_1ForGsoap.h:595 */
union _gml__union_TimePrimitivePropertyType;	/* witsml1_4_1_1ForGsoap.h:13564 */
class __gml__TimePrimitivePropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13553 */
class gml__TimePrimitivePropertyType;	/* witsml1_4_1_1ForGsoap.h:613 */
class __gml__EllipsoidalCSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13623 */
class gml__EllipsoidalCSPropertyType;	/* witsml1_4_1_1ForGsoap.h:616 */
class __gml__CoordinateSystemAxisPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13683 */
class gml__CoordinateSystemAxisPropertyType;	/* witsml1_4_1_1ForGsoap.h:625 */
class __gml__CartesianCSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13743 */
class gml__CartesianCSPropertyType;	/* witsml1_4_1_1ForGsoap.h:631 */
class __gml__SphericalCSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13803 */
class gml__SphericalCSPropertyType;	/* witsml1_4_1_1ForGsoap.h:637 */
class __gml__GeodeticDatumPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13863 */
class gml__GeodeticDatumPropertyType;	/* witsml1_4_1_1ForGsoap.h:643 */
class __gml__PrimeMeridianPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13923 */
class gml__PrimeMeridianPropertyType;	/* witsml1_4_1_1ForGsoap.h:652 */
class __gml__EllipsoidPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:13983 */
class gml__EllipsoidPropertyType;	/* witsml1_4_1_1ForGsoap.h:664 */
union _gml__union_GeneralConversionPropertyType;	/* witsml1_4_1_1ForGsoap.h:14055 */
class __gml__GeneralConversionPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14043 */
class gml__GeneralConversionPropertyType;	/* witsml1_4_1_1ForGsoap.h:679 */
union _gml__union_CRSPropertyType;	/* witsml1_4_1_1ForGsoap.h:14121 */
class __gml__CRSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14110 */
class gml__CRSPropertyType;	/* witsml1_4_1_1ForGsoap.h:688 */
class __gml__GeodeticCRSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14176 */
class gml__GeodeticCRSPropertyType;	/* witsml1_4_1_1ForGsoap.h:691 */
class __gml__VerticalCSPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14233 */
class gml__VerticalCSPropertyType;	/* witsml1_4_1_1ForGsoap.h:697 */
class __gml__VerticalDatumPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14293 */
class gml__VerticalDatumPropertyType;	/* witsml1_4_1_1ForGsoap.h:703 */
class __gml__domainOfValidity_sequence;	/* witsml1_4_1_1ForGsoap.h:14354 */
class _gml__domainOfValidity;	/* witsml1_4_1_1ForGsoap.h:709 */
class _gml__secondDefiningParameter;	/* witsml1_4_1_1ForGsoap.h:712 */
union _gml__union_SecondDefiningParameter;	/* witsml1_4_1_1ForGsoap.h:14444 */
class _gml__SecondDefiningParameter;	/* witsml1_4_1_1ForGsoap.h:715 */
union _gml__union_coordinateOperationAccuracy;	/* witsml1_4_1_1ForGsoap.h:14476 */
class __gml__coordinateOperationAccuracy_sequence;	/* witsml1_4_1_1ForGsoap.h:14468 */
class _gml__coordinateOperationAccuracy;	/* witsml1_4_1_1ForGsoap.h:718 */
union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:14552 */
class __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14544 */
class gmd__EX_USCOREGeographicExtent_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:724 */
class __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14606 */
class gmd__EX_USCORETemporalExtent_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:730 */
class __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14662 */
class gmd__EX_USCOREVerticalExtent_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:736 */
class __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14718 */
class gmd__MD_USCOREIdentifier_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:748 */
class __gmd__CI_USCORECitation_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14774 */
class gmd__CI_USCORECitation_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:754 */
class __gmd__CI_USCOREDate_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14830 */
class gmd__CI_USCOREDate_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:760 */
class __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14886 */
class gmd__CI_USCOREDateTypeCode_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:766 */
class __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14912 */
class gmd__CI_USCOREResponsibleParty_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:769 */
class __gmd__CI_USCOREContact_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:14968 */
class gmd__CI_USCOREContact_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:775 */
class __gmd__CI_USCORETelephone_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15024 */
class gmd__CI_USCORETelephone_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:781 */
class __gmd__CI_USCOREAddress_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15080 */
class gmd__CI_USCOREAddress_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:787 */
class __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15136 */
class gmd__CI_USCOREOnlineResource_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:793 */
class __gmd__URL_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15192 */
class gmd__URL_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:799 */
class __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15218 */
class gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:802 */
class __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15244 */
class gmd__CI_USCORERoleCode_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:805 */
class __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15270 */
class gmd__CI_USCOREPresentationFormCode_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:808 */
class __gmd__CI_USCORESeries_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15296 */
class gmd__CI_USCORESeries_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:811 */
class __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15352 */
class gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:817 */
union _gmd__union_DQ_USCOREResult_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:15386 */
class __gmd__DQ_USCOREResult_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15378 */
class gmd__DQ_USCOREResult_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:820 */
union _gts__union_TM_USCOREPrimitive_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:15459 */
class __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15448 */
class gts__TM_USCOREPrimitive_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:826 */
class gco__AbstractObject_USCOREType;	/* witsml1_4_1_1ForGsoap.h:829 */
union _gco__union_CharacterString_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:15573 */
class __gco__CharacterString_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15544 */
class gco__CharacterString_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:832 */
class __gco__Boolean_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15597 */
class gco__Boolean_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:835 */
class __gco__Real_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15623 */
class gco__Real_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:838 */
union _gco__union_Date_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:15657 */
class gco__Date_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:841 */
class __gco__DateTime_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15679 */
class gco__DateTime_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:847 */
union _gsr__union_SC_USCORECRS_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:15724 */
class __gsr__SC_USCORECRS_USCOREPropertyType_sequence;	/* witsml1_4_1_1ForGsoap.h:15713 */
class gsr__SC_USCORECRS_USCOREPropertyType;	/* witsml1_4_1_1ForGsoap.h:850 */
class witsml1__obj_USCOREformationMarkers;	/* witsml1_4_1_1ForGsoap.h:238 */
class witsml1__obj_USCOREcoordinateReferenceSystems;	/* witsml1_4_1_1ForGsoap.h:472 */
class witsml1__obj_USCORElogs;	/* witsml1_4_1_1ForGsoap.h:487 */
class witsml1__obj_USCOREtrajectorys;	/* witsml1_4_1_1ForGsoap.h:502 */
class witsml1__obj_USCOREwellbores;	/* witsml1_4_1_1ForGsoap.h:532 */
class witsml1__obj_USCOREwells;	/* witsml1_4_1_1ForGsoap.h:538 */
class gml__DefinitionBaseType;	/* witsml1_4_1_1ForGsoap.h:586 */
class gml__StringOrRefType;	/* witsml1_4_1_1ForGsoap.h:592 */
class gml__CodeType;	/* witsml1_4_1_1ForGsoap.h:601 */
class gml__AbstractTimeObjectType;	/* witsml1_4_1_1ForGsoap.h:607 */
class gml__RelatedTimeType;	/* witsml1_4_1_1ForGsoap.h:610 */
class gml__MeasureType;	/* witsml1_4_1_1ForGsoap.h:661 */
class gmd__EX_USCOREExtent_USCOREType;	/* witsml1_4_1_1ForGsoap.h:721 */
class gmd__AbstractEX_USCOREGeographicExtent_USCOREType;	/* witsml1_4_1_1ForGsoap.h:727 */
class gmd__EX_USCORETemporalExtent_USCOREType;	/* witsml1_4_1_1ForGsoap.h:733 */
class gmd__EX_USCOREVerticalExtent_USCOREType;	/* witsml1_4_1_1ForGsoap.h:739 */
class gmd__AbstractDQ_USCOREElement_USCOREType;	/* witsml1_4_1_1ForGsoap.h:745 */
class gmd__MD_USCOREIdentifier_USCOREType;	/* witsml1_4_1_1ForGsoap.h:751 */
class gmd__CI_USCORECitation_USCOREType;	/* witsml1_4_1_1ForGsoap.h:757 */
class gmd__CI_USCOREDate_USCOREType;	/* witsml1_4_1_1ForGsoap.h:763 */
class gmd__CI_USCOREResponsibleParty_USCOREType;	/* witsml1_4_1_1ForGsoap.h:772 */
class gmd__CI_USCOREContact_USCOREType;	/* witsml1_4_1_1ForGsoap.h:778 */
class gmd__CI_USCORETelephone_USCOREType;	/* witsml1_4_1_1ForGsoap.h:784 */
class gmd__CI_USCOREAddress_USCOREType;	/* witsml1_4_1_1ForGsoap.h:790 */
class gmd__CI_USCOREOnlineResource_USCOREType;	/* witsml1_4_1_1ForGsoap.h:796 */
class gmd__CI_USCORESeries_USCOREType;	/* witsml1_4_1_1ForGsoap.h:814 */
class gmd__AbstractDQ_USCOREResult_USCOREType;	/* witsml1_4_1_1ForGsoap.h:823 */
class gco__CodeListValue_USCOREType;	/* witsml1_4_1_1ForGsoap.h:844 */
class witsml1__cost;	/* witsml1_4_1_1ForGsoap.h:316 */
class witsml1__abstractMeasure;	/* witsml1_4_1_1ForGsoap.h:448 */
class gml__DefinitionType;	/* witsml1_4_1_1ForGsoap.h:583 */
class gml__CodeWithAuthorityType;	/* witsml1_4_1_1ForGsoap.h:598 */
class gml__AbstractTimePrimitiveType;	/* witsml1_4_1_1ForGsoap.h:604 */
class gml__AngleType;	/* witsml1_4_1_1ForGsoap.h:658 */
class gml__LengthType;	/* witsml1_4_1_1ForGsoap.h:670 */
class gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType;	/* witsml1_4_1_1ForGsoap.h:742 */
class witsml1__timestampedTimeZone;	/* witsml1_4_1_1ForGsoap.h:250 */
class witsml1__yAxisAzimuth;	/* witsml1_4_1_1ForGsoap.h:253 */
class witsml1__volumePerVolumeMeasurePercent;	/* witsml1_4_1_1ForGsoap.h:256 */
class witsml1__measureOrQuantity;	/* witsml1_4_1_1ForGsoap.h:259 */
class witsml1__genericMeasure;	/* witsml1_4_1_1ForGsoap.h:262 */
class witsml1__ratioGenericMeasure;	/* witsml1_4_1_1ForGsoap.h:265 */
class witsml1__refNameString;	/* witsml1_4_1_1ForGsoap.h:268 */
class witsml1__refObjectString;	/* witsml1_4_1_1ForGsoap.h:271 */
class witsml1__refPositiveCount;	/* witsml1_4_1_1ForGsoap.h:274 */
class witsml1__extensionvalue;	/* witsml1_4_1_1ForGsoap.h:280 */
class witsml1__nameStruct;	/* witsml1_4_1_1ForGsoap.h:283 */
class witsml1__shortNameStruct;	/* witsml1_4_1_1ForGsoap.h:286 */
class witsml1__wellKnownNameStruct;	/* witsml1_4_1_1ForGsoap.h:289 */
class witsml1__objectSequence;	/* witsml1_4_1_1ForGsoap.h:292 */
class witsml1__lithostratigraphyStruct;	/* witsml1_4_1_1ForGsoap.h:295 */
class witsml1__chronostratigraphyStruct;	/* witsml1_4_1_1ForGsoap.h:298 */
class witsml1__measuredDepthCoord;	/* witsml1_4_1_1ForGsoap.h:301 */
class witsml1__wellVerticalDepthCoord;	/* witsml1_4_1_1ForGsoap.h:304 */
class witsml1__wellElevationCoord;	/* witsml1_4_1_1ForGsoap.h:307 */
class witsml1__footageNorthSouth;	/* witsml1_4_1_1ForGsoap.h:310 */
class witsml1__footageEastWest;	/* witsml1_4_1_1ForGsoap.h:313 */
class witsml1__indexedObject;	/* witsml1_4_1_1ForGsoap.h:319 */
class witsml1__accelerationLinearMeasure;	/* witsml1_4_1_1ForGsoap.h:322 */
class witsml1__anglePerLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:325 */
class witsml1__anglePerTimeMeasure;	/* witsml1_4_1_1ForGsoap.h:328 */
class witsml1__areaMeasure;	/* witsml1_4_1_1ForGsoap.h:331 */
class witsml1__areaPerAreaMeasure;	/* witsml1_4_1_1ForGsoap.h:334 */
class witsml1__compressibilityMeasure;	/* witsml1_4_1_1ForGsoap.h:337 */
class witsml1__densityMeasure;	/* witsml1_4_1_1ForGsoap.h:340 */
class witsml1__dimensionlessMeasure;	/* witsml1_4_1_1ForGsoap.h:343 */
class witsml1__dynamicViscosityMeasure;	/* witsml1_4_1_1ForGsoap.h:346 */
class witsml1__electricCurrentMeasure;	/* witsml1_4_1_1ForGsoap.h:349 */
class witsml1__electricPotentialMeasure;	/* witsml1_4_1_1ForGsoap.h:352 */
class witsml1__equivalentPerMassMeasure;	/* witsml1_4_1_1ForGsoap.h:355 */
class witsml1__forceMeasure;	/* witsml1_4_1_1ForGsoap.h:358 */
class witsml1__forcePerLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:361 */
class witsml1__forcePerVolumeMeasure;	/* witsml1_4_1_1ForGsoap.h:364 */
class witsml1__illuminanceMeasure;	/* witsml1_4_1_1ForGsoap.h:367 */
class witsml1__lengthMeasure;	/* witsml1_4_1_1ForGsoap.h:370 */
class witsml1__lengthPerLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:373 */
class witsml1__magneticInductionMeasure;	/* witsml1_4_1_1ForGsoap.h:376 */
class witsml1__massConcentrationMeasure;	/* witsml1_4_1_1ForGsoap.h:379 */
class witsml1__massMeasure;	/* witsml1_4_1_1ForGsoap.h:382 */
class witsml1__massPerLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:385 */
class witsml1__momentOfForceMeasure;	/* witsml1_4_1_1ForGsoap.h:388 */
class witsml1__perLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:391 */
class witsml1__permeabilityRockMeasure;	/* witsml1_4_1_1ForGsoap.h:394 */
class witsml1__planeAngleMeasure;	/* witsml1_4_1_1ForGsoap.h:397 */
class witsml1__powerMeasure;	/* witsml1_4_1_1ForGsoap.h:400 */
class witsml1__pressureMeasure;	/* witsml1_4_1_1ForGsoap.h:403 */
class witsml1__relativePowerMeasure;	/* witsml1_4_1_1ForGsoap.h:406 */
class witsml1__specificHeatCapacityMeasure;	/* witsml1_4_1_1ForGsoap.h:409 */
class witsml1__specificVolumeMeasure;	/* witsml1_4_1_1ForGsoap.h:412 */
class witsml1__standardVolumeMeasure;	/* witsml1_4_1_1ForGsoap.h:415 */
class witsml1__standardVolumePerTimeMeasure;	/* witsml1_4_1_1ForGsoap.h:418 */
class witsml1__thermalConductivityMeasure;	/* witsml1_4_1_1ForGsoap.h:421 */
class witsml1__thermalVolumetricExpansionMeasure;	/* witsml1_4_1_1ForGsoap.h:424 */
class witsml1__thermodynamicTemperatureMeasure;	/* witsml1_4_1_1ForGsoap.h:427 */
class witsml1__timeMeasure;	/* witsml1_4_1_1ForGsoap.h:430 */
class witsml1__velocityMeasure;	/* witsml1_4_1_1ForGsoap.h:433 */
class witsml1__volumeMeasure;	/* witsml1_4_1_1ForGsoap.h:436 */
class witsml1__volumeFlowRateMeasure;	/* witsml1_4_1_1ForGsoap.h:439 */
class witsml1__volumePerLengthMeasure;	/* witsml1_4_1_1ForGsoap.h:442 */
class witsml1__volumePerVolumeMeasure;	/* witsml1_4_1_1ForGsoap.h:445 */
class gml__IdentifiedObjectType;	/* witsml1_4_1_1ForGsoap.h:580 */
class witsml1__timestampedCommentString;	/* witsml1_4_1_1ForGsoap.h:277 */
class gml__AbstractCRSType;	/* witsml1_4_1_1ForGsoap.h:577 */
class gml__AbstractCoordinateSystemType;	/* witsml1_4_1_1ForGsoap.h:622 */
class gml__CoordinateSystemAxisType;	/* witsml1_4_1_1ForGsoap.h:628 */
class gml__AbstractDatumType;	/* witsml1_4_1_1ForGsoap.h:649 */
class gml__PrimeMeridianType;	/* witsml1_4_1_1ForGsoap.h:655 */
class gml__EllipsoidType;	/* witsml1_4_1_1ForGsoap.h:667 */
class gml__AbstractCoordinateOperationType;	/* witsml1_4_1_1ForGsoap.h:685 */
union _gml__union_GeodeticCRSType;	/* witsml1_4_1_1ForGsoap.h:18802 */
class gml__GeodeticCRSType;	/* witsml1_4_1_1ForGsoap.h:574 */
class gml__EllipsoidalCSType;	/* witsml1_4_1_1ForGsoap.h:619 */
class gml__CartesianCSType;	/* witsml1_4_1_1ForGsoap.h:634 */
class gml__SphericalCSType;	/* witsml1_4_1_1ForGsoap.h:640 */
class gml__GeodeticDatumType;	/* witsml1_4_1_1ForGsoap.h:646 */
class gml__AbstractGeneralDerivedCRSType;	/* witsml1_4_1_1ForGsoap.h:676 */
class gml__AbstractGeneralConversionType;	/* witsml1_4_1_1ForGsoap.h:682 */
class gml__VerticalCRSType;	/* witsml1_4_1_1ForGsoap.h:694 */
class gml__VerticalCSType;	/* witsml1_4_1_1ForGsoap.h:700 */
class gml__VerticalDatumType;	/* witsml1_4_1_1ForGsoap.h:706 */
union _gml__union_ProjectedCRSType;	/* witsml1_4_1_1ForGsoap.h:19277 */
class gml__ProjectedCRSType;	/* witsml1_4_1_1ForGsoap.h:673 */

/* custom/struct_tm.h:70 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_tm
#define SOAP_TYPE_gsoap_witsml1_4_1_1_tm (-8)
#if 0 /* Volatile: declared external of the data binding interface and not redeclared here */
struct SOAP_CMAC tm {
      public:
        /** Required element 'tm-sec' of XSD type 'xsd:int' */
        int tm_sec;
        /** Required element 'tm-min' of XSD type 'xsd:int' */
        int tm_min;
        /** Required element 'tm-hour' of XSD type 'xsd:int' */
        int tm_hour;
        /** Required element 'tm-mday' of XSD type 'xsd:int' */
        int tm_mday;
        /** Required element 'tm-mon' of XSD type 'xsd:int' */
        int tm_mon;
        /** Required element 'tm-year' of XSD type 'xsd:int' */
        int tm_year;
        /** Required element 'tm-isdst' of XSD type 'xsd:int' */
        int tm_isdst;
};
#endif
#endif

/* witsml1_4_1_1ForGsoap.h:10076 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence (-444)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCOREformationMarker_sequence {
      public:
        /// Optional element 'witsml1:mdPrognosed' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdPrognosed;
        /// Optional element 'witsml1:tvdPrognosed' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdPrognosed;
        /// Required element 'witsml1:mdTopSample' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdTopSample;
        /// Optional element 'witsml1:tvdTopSample' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdTopSample;
        /// Optional element 'witsml1:thicknessBed' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *thicknessBed;
        /// Optional element 'witsml1:thicknessApparent' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *thicknessApparent;
        /// Optional element 'witsml1:thicknessPerpen' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *thicknessPerpen;
        /// Optional element 'witsml1:mdLogSample' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdLogSample;
        /// Optional element 'witsml1:tvdLogSample' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdLogSample;
        /// Optional element 'witsml1:dip' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *dip;
        /// Optional element 'witsml1:dipDirection' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *dipDirection;
        /// Optional element 'witsml1:lithostratigraphic' of XSD type 'witsml1:lithostratigraphyStruct'
        witsml1__lithostratigraphyStruct *lithostratigraphic;
        /// Optional element 'witsml1:chronostratigraphic' of XSD type 'witsml1:chronostratigraphyStruct'
        witsml1__chronostratigraphyStruct *chronostratigraphic;
        /// Optional element 'witsml1:nameFormation' of XSD type 'witsml1:nameString'
        std::string *nameFormation;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:commentString'
        std::string *description;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCOREformationMarker_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCOREformationMarker_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCOREformationMarker_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCOREformationMarker_sequence() : mdPrognosed(), tvdPrognosed(), mdTopSample(), tvdTopSample(), thicknessBed(), thicknessApparent(), thicknessPerpen(), mdLogSample(), tvdLogSample(), dip(), dipDirection(), lithostratigraphic(), chronostratigraphic(), nameFormation(), description() { }
        virtual ~__witsml1__obj_USCOREformationMarker_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCOREformationMarker_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCOREformationMarker_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREformationMarker_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:241 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker (-15)
/* complex XSD type 'witsml1:obj_formationMarker': */
class SOAP_CMAC witsml1__obj_USCOREformationMarker {
      public:
        /// Required element 'witsml1:nameWell' of XSD type 'witsml1:nameString'
        std::string nameWell;
        /// Required element 'witsml1:nameWellbore' of XSD type 'witsml1:nameString'
        std::string nameWellbore;
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCOREformationMarker_sequence *__obj_USCOREformationMarker_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uidWell' of XSD type 'witsml1:uidParentString'
        std::string *uidWell;
        /// optional attribute 'uidWellbore' of XSD type 'witsml1:uidParentString'
        std::string *uidWellbore;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREformationMarker, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREformationMarker *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREformationMarker); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREformationMarker() : nameWell(), nameWellbore(), name(), __obj_USCOREformationMarker_sequence(), commonData(), customData(), uidWell(), uidWellbore(), uid(), soap() { }
        virtual ~witsml1__obj_USCOREformationMarker() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREformationMarker(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREformationMarker * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREformationMarker(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:244 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo (-16)
/* complex XSD type 'witsml1:cs_documentInfo': */
class SOAP_CMAC witsml1__cs_USCOREdocumentInfo {
      public:
        /// Required element 'witsml1:documentName' of XSD type 'witsml1:nameStruct'
        witsml1__nameStruct *documentName;
        /// Optional element 'witsml1:documentAlias' of XSD type 'witsml1:nameStruct'
        std::vector<witsml1__nameStruct *> documentAlias;
        /// Optional element 'witsml1:documentDate' of XSD type 'witsml1:timestamp'
        struct tm *documentDate;
        /// Optional element 'witsml1:documentClass' of XSD type 'witsml1:nameStruct'
        std::vector<witsml1__nameStruct *> documentClass;
        /// Optional element 'witsml1:fileCreationInformation' of XSD type 'witsml1:cs_documentFileCreation'
        witsml1__cs_USCOREdocumentFileCreation *fileCreationInformation;
        /// Sequence of 0 to 5 elements 'witsml1:securityInformation' of XSD type 'witsml1:cs_documentSecurityInfo'
        std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> securityInformation;
        /// Optional element 'witsml1:disclaimer' of XSD type 'witsml1:commentString'
        std::string *disclaimer;
        /// Optional element 'witsml1:auditTrail' of XSD type 'witsml1:cs_documentAudit'
        witsml1__cs_USCOREdocumentAudit *auditTrail;
        /// Optional element 'witsml1:owner' of XSD type 'witsml1:nameString'
        std::string *owner;
        /// Optional element 'witsml1:comment' of XSD type 'witsml1:commentString'
        std::string *comment;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREdocumentInfo, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREdocumentInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREdocumentInfo); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREdocumentInfo() : documentName(), documentAlias(), documentDate(), documentClass(), fileCreationInformation(), securityInformation(), disclaimer(), auditTrail(), owner(), comment(), soap() { }
        virtual ~witsml1__cs_USCOREdocumentInfo() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREdocumentInfo(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREdocumentInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:247 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation (-17)
/* complex XSD type 'witsml1:cs_documentFileCreation': */
class SOAP_CMAC witsml1__cs_USCOREdocumentFileCreation {
      public:
        /// Typedef witsml1__timestamp with custom serializer for struct tm
        struct tm fileCreationDate;
        /// Optional element 'witsml1:softwareName' of XSD type 'witsml1:nameString'
        std::string *softwareName;
        /// Optional element 'witsml1:fileCreator' of XSD type 'witsml1:nameString'
        std::string *fileCreator;
        /// Optional element 'witsml1:comment' of XSD type 'witsml1:commentString'
        std::string *comment;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREdocumentFileCreation, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREdocumentFileCreation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREdocumentFileCreation); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREdocumentFileCreation() : fileCreationDate(), softwareName(), fileCreator(), comment(), soap() { }
        virtual ~witsml1__cs_USCOREdocumentFileCreation() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREdocumentFileCreation(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREdocumentFileCreation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentFileCreation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:451 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo (-85)
/* complex XSD type 'witsml1:cs_documentSecurityInfo': */
class SOAP_CMAC witsml1__cs_USCOREdocumentSecurityInfo {
      public:
        /// Optional element 'witsml1:class' of XSD type 'witsml1:kindString'
        std::string *class_;
        /// Optional element 'witsml1:securitySystem' of XSD type 'witsml1:kindString'
        std::string *securitySystem;
        /// Optional element 'witsml1:endDate' of XSD type 'witsml1:timestamp'
        struct tm *endDate;
        /// Optional element 'witsml1:comment' of XSD type 'witsml1:commentString'
        std::string *comment;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREdocumentSecurityInfo, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREdocumentSecurityInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREdocumentSecurityInfo); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREdocumentSecurityInfo() : class_(), securitySystem(), endDate(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREdocumentSecurityInfo() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREdocumentSecurityInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:454 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue (-86)
/* complex XSD type 'witsml1:cs_extensionNameValue': */
class SOAP_CMAC witsml1__cs_USCOREextensionNameValue {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:ExtensionName'
        std::string name;
        /// Required element 'witsml1:value' of XSD type 'witsml1:extensionvalue'
        witsml1__extensionvalue *value;
        /// Required element 'witsml1:dataType' of XSD type 'witsml1:PrimitiveType'
        enum witsml1__PrimitiveType dataType;
        /// Optional element 'witsml1:dTim' of XSD type 'witsml1:timestamp'
        struct tm *dTim;
        /// Optional element 'witsml1:md' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *md;
        /// Optional element 'witsml1:index' of XSD type 'witsml1:positiveCount'
        short *index;
        /// Optional element 'witsml1:measureClass' of XSD type 'witsml1:MeasureClass'
        std::string *measureClass;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:descriptionString'
        std::string *description;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREextensionNameValue, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREextensionNameValue *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREextensionNameValue); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREextensionNameValue() : name(), value(), dataType(), dTim(), md(), index(), measureClass(), description(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREextensionNameValue() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREextensionNameValue(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREextensionNameValue * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREextensionNameValue(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:457 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit (-87)
/* complex XSD type 'witsml1:cs_documentAudit': */
class SOAP_CMAC witsml1__cs_USCOREdocumentAudit {
      public:
        /// Required element 'witsml1:event' of XSD type 'witsml1:cs_documentEvent'
        std::vector<witsml1__cs_USCOREdocumentEvent *> event;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREdocumentAudit, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREdocumentAudit *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREdocumentAudit); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREdocumentAudit() : event(), soap() { }
        virtual ~witsml1__cs_USCOREdocumentAudit() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREdocumentAudit(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREdocumentAudit * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentAudit(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:460 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent (-88)
/* complex XSD type 'witsml1:cs_documentEvent': */
class SOAP_CMAC witsml1__cs_USCOREdocumentEvent {
      public:
        /// Typedef witsml1__timestamp with custom serializer for struct tm
        struct tm eventDate;
        /// Optional element 'witsml1:eventType' of XSD type 'witsml1:nameString'
        std::string *eventType;
        /// Optional element 'witsml1:responsibleParty' of XSD type 'witsml1:nameString'
        std::string *responsibleParty;
        /// Optional element 'witsml1:comment' of XSD type 'witsml1:commentString'
        std::string *comment;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREdocumentEvent, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREdocumentEvent *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREdocumentEvent); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREdocumentEvent() : eventDate(), eventType(), responsibleParty(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREdocumentEvent() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREdocumentEvent(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREdocumentEvent * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentEvent(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:463 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData (-89)
/* complex XSD type 'witsml1:cs_commonData': */
class SOAP_CMAC witsml1__cs_USCOREcommonData {
      public:
        /// Optional element 'witsml1:sourceName' of XSD type 'witsml1:nameString'
        std::string *sourceName;
        /// Optional element 'witsml1:dTimCreation' of XSD type 'witsml1:timestamp'
        struct tm *dTimCreation;
        /// Optional element 'witsml1:dTimLastChange' of XSD type 'witsml1:timestamp'
        struct tm *dTimLastChange;
        /// Optional element 'witsml1:itemState' of XSD type 'witsml1:ItemState'
        enum witsml1__ItemState *itemState;
        /// Optional element 'witsml1:serviceCategory' of XSD type 'witsml1:kindString'
        std::string *serviceCategory;
        /// Optional element 'witsml1:comments' of XSD type 'witsml1:commentString'
        std::string *comments;
        /// Optional element 'witsml1:acquisitionTimeZone' of XSD type 'witsml1:timestampedTimeZone'
        std::vector<witsml1__timestampedTimeZone *> acquisitionTimeZone;
        /// Optional element 'witsml1:defaultDatum' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *defaultDatum;
        /// Optional element 'witsml1:privateGroupOnly' of XSD type 'xsd:boolean'
        bool *privateGroupOnly;
        /// Optional element 'witsml1:extensionAny' of XSD type 'witsml1:cs_extensionAny'
        witsml1__cs_USCOREextensionAny *extensionAny;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREcommonData, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREcommonData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREcommonData); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREcommonData() : sourceName(), dTimCreation(), dTimLastChange(), itemState(), serviceCategory(), comments(), acquisitionTimeZone(), defaultDatum(), privateGroupOnly(), extensionAny(), extensionNameValue(), soap() { }
        virtual ~witsml1__cs_USCOREcommonData() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREcommonData(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREcommonData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREcommonData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:466 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny (-90)
/* complex XSD type 'witsml1:cs_extensionAny': */
class SOAP_CMAC witsml1__cs_USCOREextensionAny {
      public:
        std::vector<char *> __any;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREextensionAny, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREextensionAny *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREextensionAny); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREextensionAny() : __any(), soap() { }
        virtual ~witsml1__cs_USCOREextensionAny() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREextensionAny(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREextensionAny * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREextensionAny(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:469 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData (-91)
/* complex XSD type 'witsml1:cs_customData': */
class SOAP_CMAC witsml1__cs_USCOREcustomData {
      public:
        std::vector<char *> __any;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREcustomData, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREcustomData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREcustomData); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREcustomData() : __any(), soap() { }
        virtual ~witsml1__cs_USCOREcustomData() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREcustomData(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREcustomData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREcustomData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:10708 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem (-486)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_obj_USCOREcoordinateReferenceSystem
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_geodeticCRS	(1)	/**< union variant selector value for member geodeticCRS */
        witsml1__cs_USCOREstandardGeodeticCRS *geodeticCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_projectedCRS	(2)	/**< union variant selector value for member projectedCRS */
        witsml1__cs_USCOREstandardProjectedCRS *projectedCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_verticalCRS	(3)	/**< union variant selector value for member verticalCRS */
        witsml1__cs_USCOREstandardVerticalCRS *verticalCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:10687 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence (-482)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCOREcoordinateReferenceSystem_sequence {
      public:
        /// Union with union _witsml1__union_obj_USCOREcoordinateReferenceSystem variant selector __union_obj_USCOREcoordinateReferenceSystem set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_geodeticCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_projectedCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_verticalCRS
        int __union_obj_USCOREcoordinateReferenceSystem;
        union _witsml1__union_obj_USCOREcoordinateReferenceSystem union_obj_USCOREcoordinateReferenceSystem;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCOREcoordinateReferenceSystem_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCOREcoordinateReferenceSystem_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCOREcoordinateReferenceSystem_sequence() : __union_obj_USCOREcoordinateReferenceSystem() { }
        virtual ~__witsml1__obj_USCOREcoordinateReferenceSystem_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:475 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem (-93)
/* complex XSD type 'witsml1:obj_coordinateReferenceSystem': */
class SOAP_CMAC witsml1__obj_USCOREcoordinateReferenceSystem {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *__obj_USCOREcoordinateReferenceSystem_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREcoordinateReferenceSystem, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREcoordinateReferenceSystem *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREcoordinateReferenceSystem); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREcoordinateReferenceSystem() : name(), __obj_USCOREcoordinateReferenceSystem_sequence(), commonData(), customData(), uid(), soap() { }
        virtual ~witsml1__obj_USCOREcoordinateReferenceSystem() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREcoordinateReferenceSystem * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:10769 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS (-490)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREstandardGeodeticCRS
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_nameCRS	(1)	/**< union variant selector value for member nameCRS */
        witsml1__wellKnownNameStruct *nameCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_gml__GeodeticCRS	(2)	/**< union variant selector value for member gml__GeodeticCRS */
        gml__GeodeticCRSType *gml__GeodeticCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:478 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS (-94)
/* Choice: */
class SOAP_CMAC witsml1__cs_USCOREstandardGeodeticCRS {
      public:
        /// Union with union _witsml1__union_cs_USCOREstandardGeodeticCRS variant selector __union_cs_USCOREstandardGeodeticCRS set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_nameCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_gml__GeodeticCRS
        int __union_cs_USCOREstandardGeodeticCRS;
        union _witsml1__union_cs_USCOREstandardGeodeticCRS union_cs_USCOREstandardGeodeticCRS;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstandardGeodeticCRS, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstandardGeodeticCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstandardGeodeticCRS); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstandardGeodeticCRS() : __union_cs_USCOREstandardGeodeticCRS(), soap() { }
        virtual ~witsml1__cs_USCOREstandardGeodeticCRS() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstandardGeodeticCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:10808 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS (-492)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREstandardProjectedCRS
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_nameCRS	(1)	/**< union variant selector value for member nameCRS */
        witsml1__wellKnownNameStruct *nameCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_gml__ProjectedCRS	(2)	/**< union variant selector value for member gml__ProjectedCRS */
        gml__ProjectedCRSType *gml__ProjectedCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:481 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS (-95)
/* Choice: */
class SOAP_CMAC witsml1__cs_USCOREstandardProjectedCRS {
      public:
        /// Union with union _witsml1__union_cs_USCOREstandardProjectedCRS variant selector __union_cs_USCOREstandardProjectedCRS set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_nameCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_gml__ProjectedCRS
        int __union_cs_USCOREstandardProjectedCRS;
        union _witsml1__union_cs_USCOREstandardProjectedCRS union_cs_USCOREstandardProjectedCRS;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstandardProjectedCRS, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstandardProjectedCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstandardProjectedCRS); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstandardProjectedCRS() : __union_cs_USCOREstandardProjectedCRS(), soap() { }
        virtual ~witsml1__cs_USCOREstandardProjectedCRS() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstandardProjectedCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:10847 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS (-494)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREstandardVerticalCRS
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_nameCRS	(1)	/**< union variant selector value for member nameCRS */
        witsml1__wellKnownNameStruct *nameCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_gml__VerticalCRS	(2)	/**< union variant selector value for member gml__VerticalCRS */
        gml__VerticalCRSType *gml__VerticalCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:484 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS (-96)
/* complex XSD type 'witsml1:cs_standardVerticalCRS': */
class SOAP_CMAC witsml1__cs_USCOREstandardVerticalCRS {
      public:
        /// Union with union _witsml1__union_cs_USCOREstandardVerticalCRS variant selector __union_cs_USCOREstandardVerticalCRS set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_nameCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_gml__VerticalCRS
        int __union_cs_USCOREstandardVerticalCRS;
        union _witsml1__union_cs_USCOREstandardVerticalCRS union_cs_USCOREstandardVerticalCRS;
        /// Optional element 'witsml1:ellipsoidalDatum' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *ellipsoidalDatum;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstandardVerticalCRS, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstandardVerticalCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstandardVerticalCRS); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstandardVerticalCRS() : __union_cs_USCOREstandardVerticalCRS(), ellipsoidalDatum(), soap() { }
        virtual ~witsml1__cs_USCOREstandardVerticalCRS() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstandardVerticalCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:10891 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence (-495)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCORElog_sequence {
      public:
        /// Optional element 'witsml1:objectGrowing' of XSD type 'witsml1:logicalBoolean'
        bool *objectGrowing;
        /// Optional element 'witsml1:dataUpateRate' of XSD type 'witsml1:positiveBigCount'
        int *dataUpateRate;
        /// Optional element 'witsml1:curveSensorsAligned' of XSD type 'witsml1:logicalBoolean'
        bool *curveSensorsAligned;
        /// Optional element 'witsml1:dataGroup' of XSD type 'witsml1:kindString'
        std::string *dataGroup;
        /// Optional element 'witsml1:serviceCompany' of XSD type 'witsml1:nameString'
        std::string *serviceCompany;
        /// Optional element 'witsml1:runNumber' of XSD type 'witsml1:str16'
        std::string *runNumber;
        /// Optional element 'witsml1:bhaRunNumber' of XSD type 'witsml1:positiveCount'
        short *bhaRunNumber;
        /// Optional element 'witsml1:pass' of XSD type 'witsml1:str16'
        std::string *pass;
        /// Optional element 'witsml1:creationDate' of XSD type 'witsml1:timestamp'
        struct tm *creationDate;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:commentString'
        std::string *description;
        /// Optional element 'witsml1:dataDelimiter' of XSD type 'witsml1:str2'
        std::string *dataDelimiter;
        /// Required element 'witsml1:indexType' of XSD type 'witsml1:LogIndexType'
        enum witsml1__LogIndexType indexType;
        /// Optional element 'witsml1:startIndex' of XSD type 'witsml1:genericMeasure'
        witsml1__genericMeasure *startIndex;
        /// Optional element 'witsml1:endIndex' of XSD type 'witsml1:genericMeasure'
        witsml1__genericMeasure *endIndex;
        /// Optional element 'witsml1:stepIncrement' of XSD type 'witsml1:ratioGenericMeasure'
        witsml1__ratioGenericMeasure *stepIncrement;
        /// Optional element 'witsml1:startDateTimeIndex' of XSD type 'witsml1:timestamp'
        struct tm *startDateTimeIndex;
        /// Optional element 'witsml1:endDateTimeIndex' of XSD type 'witsml1:timestamp'
        struct tm *endDateTimeIndex;
        /// Optional element 'witsml1:direction' of XSD type 'witsml1:LogIndexDirection'
        enum witsml1__LogIndexDirection *direction;
        /// Required element 'witsml1:indexCurve' of XSD type 'witsml1:str32'
        std::string indexCurve;
        /// Optional element 'witsml1:nullValue' of XSD type 'witsml1:encodedValueString'
        std::string *nullValue;
        /// Optional element 'witsml1:logParam' of XSD type 'witsml1:indexedObject'
        std::vector<witsml1__indexedObject *> logParam;
        /// Optional element 'witsml1:logCurveInfo' of XSD type 'witsml1:cs_logCurveInfo'
        std::vector<witsml1__cs_USCORElogCurveInfo *> logCurveInfo;
        /// Optional element 'witsml1:logData' of XSD type 'witsml1:cs_logData'
        std::vector<witsml1__cs_USCORElogData *> logData;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCORElog_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCORElog_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCORElog_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCORElog_sequence() : objectGrowing(), dataUpateRate(), curveSensorsAligned(), dataGroup(), serviceCompany(), runNumber(), bhaRunNumber(), pass(), creationDate(), description(), dataDelimiter(), indexType(), startIndex(), endIndex(), stepIncrement(), startDateTimeIndex(), endDateTimeIndex(), direction(), indexCurve(), nullValue(), logParam(), logCurveInfo(), logData() { }
        virtual ~__witsml1__obj_USCORElog_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCORElog_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCORElog_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCORElog_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:490 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog (-98)
/* complex XSD type 'witsml1:obj_log': */
class SOAP_CMAC witsml1__obj_USCORElog {
      public:
        /// Required element 'witsml1:nameWell' of XSD type 'witsml1:nameString'
        std::string nameWell;
        /// Required element 'witsml1:nameWellbore' of XSD type 'witsml1:nameString'
        std::string nameWellbore;
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCORElog_sequence *__obj_USCORElog_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uidWell' of XSD type 'witsml1:uidParentString'
        std::string *uidWell;
        /// optional attribute 'uidWellbore' of XSD type 'witsml1:uidParentString'
        std::string *uidWellbore;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCORElog, default initialized and not managed by a soap context
        virtual witsml1__obj_USCORElog *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCORElog); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCORElog() : nameWell(), nameWellbore(), name(), __obj_USCORElog_sequence(), commonData(), customData(), uidWell(), uidWellbore(), uid(), soap() { }
        virtual ~witsml1__obj_USCORElog() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCORElog(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCORElog * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCORElog(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:493 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo (-99)
/* complex XSD type 'witsml1:cs_logCurveInfo': */
class SOAP_CMAC witsml1__cs_USCORElogCurveInfo {
      public:
        /// Required element 'witsml1:mnemonic' of XSD type 'witsml1:shortNameStruct'
        witsml1__shortNameStruct *mnemonic;
        /// Optional element 'witsml1:classWitsml' of XSD type 'witsml1:descriptionString'
        std::string *classWitsml;
        /// Optional element 'witsml1:classIndex' of XSD type 'witsml1:positiveCount'
        short *classIndex;
        /// Optional element 'witsml1:unit' of XSD type 'witsml1:uomString'
        std::string *unit;
        /// Optional element 'witsml1:mnemAlias' of XSD type 'witsml1:shortNameStruct'
        witsml1__shortNameStruct *mnemAlias;
        /// Optional element 'witsml1:nullValue' of XSD type 'witsml1:encodedValueString'
        std::string *nullValue;
        /// Optional element 'witsml1:alternateIndex' of XSD type 'witsml1:logicalBoolean'
        bool *alternateIndex;
        /// Optional element 'witsml1:wellDatum' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellDatum;
        /// Optional element 'witsml1:minIndex' of XSD type 'witsml1:genericMeasure'
        witsml1__genericMeasure *minIndex;
        /// Optional element 'witsml1:maxIndex' of XSD type 'witsml1:genericMeasure'
        witsml1__genericMeasure *maxIndex;
        /// Optional element 'witsml1:minDateTimeIndex' of XSD type 'witsml1:timestamp'
        struct tm *minDateTimeIndex;
        /// Optional element 'witsml1:maxDateTimeIndex' of XSD type 'witsml1:timestamp'
        struct tm *maxDateTimeIndex;
        /// Optional element 'witsml1:curveDescription' of XSD type 'witsml1:descriptionString'
        std::string *curveDescription;
        /// Optional element 'witsml1:sensorOffset' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *sensorOffset;
        /// Optional element 'witsml1:dataSource' of XSD type 'witsml1:str32'
        std::string *dataSource;
        /// Optional element 'witsml1:densData' of XSD type 'witsml1:perLengthMeasure'
        witsml1__perLengthMeasure *densData;
        /// Optional element 'witsml1:traceState' of XSD type 'witsml1:LogTraceState'
        enum witsml1__LogTraceState *traceState;
        /// Optional element 'witsml1:traceOrigin' of XSD type 'witsml1:LogTraceOrigin'
        enum witsml1__LogTraceOrigin *traceOrigin;
        /// Required element 'witsml1:typeLogData' of XSD type 'witsml1:LogDataType'
        enum witsml1__LogDataType typeLogData;
        /// Optional element 'witsml1:axisDefinition' of XSD type 'witsml1:cs_axisDefinition'
        std::vector<witsml1__cs_USCOREaxisDefinition *> axisDefinition;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORElogCurveInfo, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORElogCurveInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORElogCurveInfo); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORElogCurveInfo() : mnemonic(), classWitsml(), classIndex(), unit(), mnemAlias(), nullValue(), alternateIndex(), wellDatum(), minIndex(), maxIndex(), minDateTimeIndex(), maxDateTimeIndex(), curveDescription(), sensorOffset(), dataSource(), densData(), traceState(), traceOrigin(), typeLogData(), axisDefinition(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCORElogCurveInfo() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORElogCurveInfo(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORElogCurveInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElogCurveInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:11322 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition (-520)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREaxisDefinition
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_doubleValues	(1)	/**< union variant selector value for member doubleValues */
        std::string *doubleValues;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_stringValues	(2)	/**< union variant selector value for member stringValues */
        std::string *stringValues;
};
#endif

/* witsml1_4_1_1ForGsoap.h:496 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition (-100)
/* complex XSD type 'witsml1:cs_axisDefinition': */
class SOAP_CMAC witsml1__cs_USCOREaxisDefinition {
      public:
        /// Required element 'witsml1:order' of XSD type 'witsml1:positiveCount'
        short order;
        /// Required element 'witsml1:count' of XSD type 'witsml1:positiveCount'
        short count;
        /// Optional element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string *name;
        /// Optional element 'witsml1:propertyType' of XSD type 'witsml1:nameString'
        std::string *propertyType;
        /// Optional element 'witsml1:uom' of XSD type 'witsml1:uomString'
        std::string *uom;
        /// Union with union _witsml1__union_cs_USCOREaxisDefinition variant selector __union_cs_USCOREaxisDefinition set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_doubleValues SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_stringValues
        int __union_cs_USCOREaxisDefinition;
        union _witsml1__union_cs_USCOREaxisDefinition union_cs_USCOREaxisDefinition;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREaxisDefinition, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREaxisDefinition *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREaxisDefinition); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREaxisDefinition() : order(), count(), name(), propertyType(), uom(), __union_cs_USCOREaxisDefinition(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREaxisDefinition() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREaxisDefinition(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREaxisDefinition * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREaxisDefinition(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:499 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData (-101)
/* complex XSD type 'witsml1:cs_logData': */
class SOAP_CMAC witsml1__cs_USCORElogData {
      public:
        /// Required element 'witsml1:mnemonicList' of XSD type 'xsd:string'
        std::string mnemonicList;
        /// Required element 'witsml1:unitList' of XSD type 'xsd:string'
        std::string unitList;
        /// Optional element 'witsml1:data' of XSD type 'xsd:string'
        std::vector<std::string> data;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORElogData, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORElogData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORElogData); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORElogData() : mnemonicList(), unitList(), data(), soap() { }
        virtual ~witsml1__cs_USCORElogData() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORElogData(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORElogData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElogData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:11424 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence (-522)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCOREtrajectory_sequence {
      public:
        /// Optional element 'witsml1:objectGrowing' of XSD type 'witsml1:logicalBoolean'
        bool *objectGrowing;
        /// Optional element 'witsml1:parentTrajectory' of XSD type 'witsml1:cs_refWellboreTrajectory'
        witsml1__cs_USCORErefWellboreTrajectory *parentTrajectory;
        /// Optional element 'witsml1:dTimTrajStart' of XSD type 'witsml1:timestamp'
        struct tm *dTimTrajStart;
        /// Optional element 'witsml1:dTimTrajEnd' of XSD type 'witsml1:timestamp'
        struct tm *dTimTrajEnd;
        /// Optional element 'witsml1:mdMn' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdMn;
        /// Optional element 'witsml1:mdMx' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdMx;
        /// Optional element 'witsml1:serviceCompany' of XSD type 'witsml1:nameString'
        std::string *serviceCompany;
        /// Optional element 'witsml1:magDeclUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *magDeclUsed;
        /// Optional element 'witsml1:gridCorUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *gridCorUsed;
        /// Optional element 'witsml1:gridConUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *gridConUsed;
        /// Optional element 'witsml1:aziVertSect' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *aziVertSect;
        /// Optional element 'witsml1:dispNsVertSectOrig' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *dispNsVertSectOrig;
        /// Optional element 'witsml1:dispEwVertSectOrig' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *dispEwVertSectOrig;
        /// Optional element 'witsml1:definitive' of XSD type 'witsml1:logicalBoolean'
        bool *definitive;
        /// Optional element 'witsml1:memory' of XSD type 'witsml1:logicalBoolean'
        bool *memory;
        /// Optional element 'witsml1:finalTraj' of XSD type 'witsml1:logicalBoolean'
        bool *finalTraj;
        /// Optional element 'witsml1:aziRef' of XSD type 'witsml1:AziRef'
        enum witsml1__AziRef *aziRef;
        /// Optional element 'witsml1:trajectoryStation' of XSD type 'witsml1:cs_trajectoryStation'
        std::vector<witsml1__cs_USCOREtrajectoryStation *> trajectoryStation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCOREtrajectory_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCOREtrajectory_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCOREtrajectory_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCOREtrajectory_sequence() : objectGrowing(), parentTrajectory(), dTimTrajStart(), dTimTrajEnd(), mdMn(), mdMx(), serviceCompany(), magDeclUsed(), gridCorUsed(), gridConUsed(), aziVertSect(), dispNsVertSectOrig(), dispEwVertSectOrig(), definitive(), memory(), finalTraj(), aziRef(), trajectoryStation() { }
        virtual ~__witsml1__obj_USCOREtrajectory_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCOREtrajectory_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCOREtrajectory_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREtrajectory_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:505 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory (-103)
/* complex XSD type 'witsml1:obj_trajectory': */
class SOAP_CMAC witsml1__obj_USCOREtrajectory {
      public:
        /// Required element 'witsml1:nameWell' of XSD type 'witsml1:nameString'
        std::string nameWell;
        /// Required element 'witsml1:nameWellbore' of XSD type 'witsml1:nameString'
        std::string nameWellbore;
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCOREtrajectory_sequence *__obj_USCOREtrajectory_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uidWell' of XSD type 'witsml1:uidParentString'
        std::string *uidWell;
        /// optional attribute 'uidWellbore' of XSD type 'witsml1:uidParentString'
        std::string *uidWellbore;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREtrajectory, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREtrajectory *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREtrajectory); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREtrajectory() : nameWell(), nameWellbore(), name(), __obj_USCOREtrajectory_sequence(), commonData(), customData(), uidWell(), uidWellbore(), uid(), soap() { }
        virtual ~witsml1__obj_USCOREtrajectory() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREtrajectory(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREtrajectory * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREtrajectory(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:508 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation (-104)
/* complex XSD type 'witsml1:cs_trajectoryStation': */
class SOAP_CMAC witsml1__cs_USCOREtrajectoryStation {
      public:
        /// Optional element 'witsml1:target' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *target;
        /// Optional element 'witsml1:dTimStn' of XSD type 'witsml1:timestamp'
        struct tm *dTimStn;
        /// Required element 'witsml1:typeTrajStation' of XSD type 'witsml1:TrajStationType'
        enum witsml1__TrajStationType typeTrajStation;
        /// Optional element 'witsml1:typeSurveyTool' of XSD type 'witsml1:TypeSurveyTool'
        std::string *typeSurveyTool;
        /// Optional element 'witsml1:calcAlgorithm' of XSD type 'witsml1:TrajStnCalcAlgorithm'
        std::string *calcAlgorithm;
        /// Required element 'witsml1:md' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *md;
        /// Optional element 'witsml1:tvd' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvd;
        /// Optional element 'witsml1:incl' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *incl;
        /// Optional element 'witsml1:azi' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *azi;
        /// Optional element 'witsml1:mtf' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *mtf;
        /// Optional element 'witsml1:gtf' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *gtf;
        /// Optional element 'witsml1:dispNs' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *dispNs;
        /// Optional element 'witsml1:dispEw' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *dispEw;
        /// Optional element 'witsml1:vertSect' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *vertSect;
        /// Optional element 'witsml1:dls' of XSD type 'witsml1:anglePerLengthMeasure'
        witsml1__anglePerLengthMeasure *dls;
        /// Optional element 'witsml1:rateTurn' of XSD type 'witsml1:anglePerLengthMeasure'
        witsml1__anglePerLengthMeasure *rateTurn;
        /// Optional element 'witsml1:rateBuild' of XSD type 'witsml1:anglePerLengthMeasure'
        witsml1__anglePerLengthMeasure *rateBuild;
        /// Optional element 'witsml1:mdDelta' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *mdDelta;
        /// Optional element 'witsml1:tvdDelta' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *tvdDelta;
        /// Optional element 'witsml1:modelToolError' of XSD type 'witsml1:commentString'
        std::string *modelToolError;
        /// Optional element 'witsml1:iscwsaToolErrorModel' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *iscwsaToolErrorModel;
        /// Optional element 'witsml1:gravTotalUncert' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTotalUncert;
        /// Optional element 'witsml1:dipAngleUncert' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *dipAngleUncert;
        /// Optional element 'witsml1:magTotalUncert' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTotalUncert;
        /// Optional element 'witsml1:gravAccelCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *gravAccelCorUsed;
        /// Optional element 'witsml1:magXAxialCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *magXAxialCorUsed;
        /// Optional element 'witsml1:sagCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *sagCorUsed;
        /// Optional element 'witsml1:magDrlstrCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *magDrlstrCorUsed;
        /// Optional element 'witsml1:infieldRefCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *infieldRefCorUsed;
        /// Optional element 'witsml1:interpolatedInfieldRefCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *interpolatedInfieldRefCorUsed;
        /// Optional element 'witsml1:inHoleRefCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *inHoleRefCorUsed;
        /// Optional element 'witsml1:axialMagInterferenceCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *axialMagInterferenceCorUsed;
        /// Optional element 'witsml1:cosagCorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *cosagCorUsed;
        /// Optional element 'witsml1:MSACorUsed' of XSD type 'witsml1:logicalBoolean'
        bool *MSACorUsed;
        /// Optional element 'witsml1:gravTotalFieldReference' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTotalFieldReference;
        /// Optional element 'witsml1:magTotalFieldReference' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTotalFieldReference;
        /// Optional element 'witsml1:magDipAngleReference' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *magDipAngleReference;
        /// Optional element 'witsml1:magModelUsed' of XSD type 'witsml1:nameString'
        std::string *magModelUsed;
        /// Optional element 'witsml1:magModelValid' of XSD type 'witsml1:nameString'
        std::string *magModelValid;
        /// Optional element 'witsml1:geoModelUsed' of XSD type 'witsml1:nameString'
        std::string *geoModelUsed;
        /// Optional element 'witsml1:statusTrajStation' of XSD type 'witsml1:TrajStationStatus'
        enum witsml1__TrajStationStatus *statusTrajStation;
        /// Optional element 'witsml1:rawData' of XSD type 'witsml1:cs_stnTrajRawData'
        witsml1__cs_USCOREstnTrajRawData *rawData;
        /// Optional element 'witsml1:corUsed' of XSD type 'witsml1:cs_stnTrajCorUsed'
        witsml1__cs_USCOREstnTrajCorUsed *corUsed;
        /// Optional element 'witsml1:valid' of XSD type 'witsml1:cs_stnTrajValid'
        witsml1__cs_USCOREstnTrajValid *valid;
        /// Optional element 'witsml1:matrixCov' of XSD type 'witsml1:cs_stnTrajMatrixCov'
        witsml1__cs_USCOREstnTrajMatrixCov *matrixCov;
        /// Optional element 'witsml1:location' of XSD type 'witsml1:cs_location'
        std::vector<witsml1__cs_USCORElocation *> location;
        /// Optional element 'witsml1:sourceStation' of XSD type 'witsml1:cs_refWellboreTrajectoryStation'
        witsml1__cs_USCORErefWellboreTrajectoryStation *sourceStation;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREtrajectoryStation, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREtrajectoryStation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREtrajectoryStation); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREtrajectoryStation() : target(), dTimStn(), typeTrajStation(), typeSurveyTool(), calcAlgorithm(), md(), tvd(), incl(), azi(), mtf(), gtf(), dispNs(), dispEw(), vertSect(), dls(), rateTurn(), rateBuild(), mdDelta(), tvdDelta(), modelToolError(), iscwsaToolErrorModel(), gravTotalUncert(), dipAngleUncert(), magTotalUncert(), gravAccelCorUsed(), magXAxialCorUsed(), sagCorUsed(), magDrlstrCorUsed(), infieldRefCorUsed(), interpolatedInfieldRefCorUsed(), inHoleRefCorUsed(), axialMagInterferenceCorUsed(), cosagCorUsed(), MSACorUsed(), gravTotalFieldReference(), magTotalFieldReference(), magDipAngleReference(), magModelUsed(), magModelValid(), geoModelUsed(), statusTrajStation(), rawData(), corUsed(), valid(), matrixCov(), location(), sourceStation(), commonData(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREtrajectoryStation() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREtrajectoryStation(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREtrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREtrajectoryStation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:511 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData (-105)
/* complex XSD type 'witsml1:cs_stnTrajRawData': */
class SOAP_CMAC witsml1__cs_USCOREstnTrajRawData {
      public:
        /// Optional element 'witsml1:gravAxialRaw' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravAxialRaw;
        /// Optional element 'witsml1:gravTran1Raw' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTran1Raw;
        /// Optional element 'witsml1:gravTran2Raw' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTran2Raw;
        /// Optional element 'witsml1:magAxialRaw' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magAxialRaw;
        /// Optional element 'witsml1:magTran1Raw' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran1Raw;
        /// Optional element 'witsml1:magTran2Raw' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran2Raw;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstnTrajRawData, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstnTrajRawData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstnTrajRawData); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstnTrajRawData() : gravAxialRaw(), gravTran1Raw(), gravTran2Raw(), magAxialRaw(), magTran1Raw(), magTran2Raw(), soap() { }
        virtual ~witsml1__cs_USCOREstnTrajRawData() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstnTrajRawData(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstnTrajRawData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajRawData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:514 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed (-106)
/* complex XSD type 'witsml1:cs_stnTrajCorUsed': */
class SOAP_CMAC witsml1__cs_USCOREstnTrajCorUsed {
      public:
        /// Optional element 'witsml1:gravAxialAccelCor' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravAxialAccelCor;
        /// Optional element 'witsml1:gravTran1AccelCor' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTran1AccelCor;
        /// Optional element 'witsml1:gravTran2AccelCor' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTran2AccelCor;
        /// Optional element 'witsml1:magAxialDrlstrCor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magAxialDrlstrCor;
        /// Optional element 'witsml1:magTran1DrlstrCor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran1DrlstrCor;
        /// Optional element 'witsml1:magTran2DrlstrCor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran2DrlstrCor;
        /// Optional element 'witsml1:magTran1MSACor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran1MSACor;
        /// Optional element 'witsml1:magTran2MSACor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTran2MSACor;
        /// Optional element 'witsml1:magAxialMSACor' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magAxialMSACor;
        /// Optional element 'witsml1:sagIncCor' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *sagIncCor;
        /// Optional element 'witsml1:sagAziCor' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *sagAziCor;
        /// Optional element 'witsml1:stnMagDeclUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *stnMagDeclUsed;
        /// Optional element 'witsml1:stnGridCorUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *stnGridCorUsed;
        /// Optional element 'witsml1:stnGridConUsed' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *stnGridConUsed;
        /// Optional element 'witsml1:dirSensorOffset' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *dirSensorOffset;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstnTrajCorUsed, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstnTrajCorUsed *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstnTrajCorUsed); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstnTrajCorUsed() : gravAxialAccelCor(), gravTran1AccelCor(), gravTran2AccelCor(), magAxialDrlstrCor(), magTran1DrlstrCor(), magTran2DrlstrCor(), magTran1MSACor(), magTran2MSACor(), magAxialMSACor(), sagIncCor(), sagAziCor(), stnMagDeclUsed(), stnGridCorUsed(), stnGridConUsed(), dirSensorOffset(), soap() { }
        virtual ~witsml1__cs_USCOREstnTrajCorUsed() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstnTrajCorUsed * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:517 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid (-107)
/* complex XSD type 'witsml1:cs_stnTrajValid': */
class SOAP_CMAC witsml1__cs_USCOREstnTrajValid {
      public:
        /// Optional element 'witsml1:magTotalFieldCalc' of XSD type 'witsml1:magneticInductionMeasure'
        witsml1__magneticInductionMeasure *magTotalFieldCalc;
        /// Optional element 'witsml1:magDipAngleCalc' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *magDipAngleCalc;
        /// Optional element 'witsml1:gravTotalFieldCalc' of XSD type 'witsml1:accelerationLinearMeasure'
        witsml1__accelerationLinearMeasure *gravTotalFieldCalc;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstnTrajValid, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstnTrajValid *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstnTrajValid); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstnTrajValid() : magTotalFieldCalc(), magDipAngleCalc(), gravTotalFieldCalc(), soap() { }
        virtual ~witsml1__cs_USCOREstnTrajValid() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstnTrajValid(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstnTrajValid * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajValid(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:520 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov (-108)
/* complex XSD type 'witsml1:cs_stnTrajMatrixCov': */
class SOAP_CMAC witsml1__cs_USCOREstnTrajMatrixCov {
      public:
        /// Optional element 'witsml1:varianceNN' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceNN;
        /// Optional element 'witsml1:varianceNE' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceNE;
        /// Optional element 'witsml1:varianceNVert' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceNVert;
        /// Optional element 'witsml1:varianceEE' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceEE;
        /// Optional element 'witsml1:varianceEVert' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceEVert;
        /// Optional element 'witsml1:varianceVertVert' of XSD type 'witsml1:areaMeasure'
        witsml1__areaMeasure *varianceVertVert;
        /// Optional element 'witsml1:biasN' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *biasN;
        /// Optional element 'witsml1:biasE' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *biasE;
        /// Optional element 'witsml1:biasVert' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *biasVert;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREstnTrajMatrixCov, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREstnTrajMatrixCov *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREstnTrajMatrixCov); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREstnTrajMatrixCov() : varianceNN(), varianceNE(), varianceNVert(), varianceEE(), varianceEVert(), varianceVertVert(), biasN(), biasE(), biasVert(), soap() { }
        virtual ~witsml1__cs_USCOREstnTrajMatrixCov() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREstnTrajMatrixCov * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:523 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation (-109)
/* complex XSD type 'witsml1:cs_location': */
class SOAP_CMAC witsml1__cs_USCORElocation {
      public:
        /// Optional element 'witsml1:wellCRS' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellCRS;
        /// Optional element 'witsml1:latitude' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *latitude;
        /// Optional element 'witsml1:longitude' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *longitude;
        /// Optional element 'witsml1:easting' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *easting;
        /// Optional element 'witsml1:northing' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *northing;
        /// Optional element 'witsml1:westing' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *westing;
        /// Optional element 'witsml1:southing' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *southing;
        /// Optional element 'witsml1:projectedX' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *projectedX;
        /// Optional element 'witsml1:projectedY' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *projectedY;
        /// Optional element 'witsml1:localX' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *localX;
        /// Optional element 'witsml1:localY' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *localY;
        /// Optional element 'witsml1:original' of XSD type 'witsml1:logicalBoolean'
        bool *original;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:descriptionString'
        std::string *description;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORElocation, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORElocation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORElocation); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORElocation() : wellCRS(), latitude(), longitude(), easting(), northing(), westing(), southing(), projectedX(), projectedY(), localX(), localY(), original(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCORElocation() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORElocation(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORElocation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElocation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:526 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation (-110)
/* complex XSD type 'witsml1:cs_refWellboreTrajectoryStation': */
class SOAP_CMAC witsml1__cs_USCORErefWellboreTrajectoryStation {
      public:
        /// Required element 'witsml1:stationReference' of XSD type 'witsml1:refString'
        std::string stationReference;
        /// Required element 'witsml1:trajectoryParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *trajectoryParent;
        /// Optional element 'witsml1:wellboreParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellboreParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORErefWellboreTrajectoryStation, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORErefWellboreTrajectoryStation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORErefWellboreTrajectoryStation); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORErefWellboreTrajectoryStation() : stationReference(), trajectoryParent(), wellboreParent(), soap() { }
        virtual ~witsml1__cs_USCORErefWellboreTrajectoryStation() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORErefWellboreTrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:529 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory (-111)
/* complex XSD type 'witsml1:cs_refWellboreTrajectory': */
class SOAP_CMAC witsml1__cs_USCORErefWellboreTrajectory {
      public:
        /// Required element 'witsml1:trajectoryReference' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *trajectoryReference;
        /// Optional element 'witsml1:wellboreParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellboreParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORErefWellboreTrajectory, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORErefWellboreTrajectory *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORErefWellboreTrajectory); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORErefWellboreTrajectory() : trajectoryReference(), wellboreParent(), soap() { }
        virtual ~witsml1__cs_USCORErefWellboreTrajectory() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORErefWellboreTrajectory * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:12321 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence (-542)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCOREwellbore_sequence {
      public:
        /// Optional element 'witsml1:parentWellbore' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *parentWellbore;
        /// Optional element 'witsml1:number' of XSD type 'witsml1:str32'
        std::string *number;
        /// Optional element 'witsml1:suffixAPI' of XSD type 'witsml1:nameString'
        std::string *suffixAPI;
        /// Optional element 'witsml1:numGovt' of XSD type 'witsml1:nameString'
        std::string *numGovt;
        /// Optional element 'witsml1:statusWellbore' of XSD type 'witsml1:WellStatus'
        enum witsml1__WellStatus *statusWellbore;
        /// Optional element 'witsml1:isActive' of XSD type 'witsml1:logicalBoolean'
        bool *isActive;
        /// Optional element 'witsml1:purposeWellbore' of XSD type 'witsml1:WellPurpose'
        enum witsml1__WellPurpose *purposeWellbore;
        /// Optional element 'witsml1:typeWellbore' of XSD type 'witsml1:WellboreType'
        enum witsml1__WellboreType *typeWellbore;
        /// Optional element 'witsml1:shape' of XSD type 'witsml1:WellboreShape'
        enum witsml1__WellboreShape *shape;
        /// Optional element 'witsml1:dTimKickoff' of XSD type 'witsml1:timestamp'
        struct tm *dTimKickoff;
        /// Optional element 'witsml1:achievedTD' of XSD type 'witsml1:logicalBoolean'
        bool *achievedTD;
        /// Optional element 'witsml1:md' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *md;
        /// Optional element 'witsml1:tvd' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvd;
        /// Optional element 'witsml1:mdBit' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdBit;
        /// Optional element 'witsml1:tvdBit' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdBit;
        /// Optional element 'witsml1:mdKickoff' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdKickoff;
        /// Optional element 'witsml1:tvdKickoff' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdKickoff;
        /// Optional element 'witsml1:mdPlanned' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdPlanned;
        /// Optional element 'witsml1:tvdPlanned' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdPlanned;
        /// Optional element 'witsml1:mdSubSeaPlanned' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *mdSubSeaPlanned;
        /// Optional element 'witsml1:tvdSubSeaPlanned' of XSD type 'witsml1:wellVerticalDepthCoord'
        witsml1__wellVerticalDepthCoord *tvdSubSeaPlanned;
        /// Optional element 'witsml1:dayTarget' of XSD type 'witsml1:timeMeasure'
        witsml1__timeMeasure *dayTarget;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCOREwellbore_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCOREwellbore_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCOREwellbore_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCOREwellbore_sequence() : parentWellbore(), number(), suffixAPI(), numGovt(), statusWellbore(), isActive(), purposeWellbore(), typeWellbore(), shape(), dTimKickoff(), achievedTD(), md(), tvd(), mdBit(), tvdBit(), mdKickoff(), tvdKickoff(), mdPlanned(), tvdPlanned(), mdSubSeaPlanned(), tvdSubSeaPlanned(), dayTarget() { }
        virtual ~__witsml1__obj_USCOREwellbore_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCOREwellbore_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCOREwellbore_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREwellbore_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:535 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore (-113)
/* complex XSD type 'witsml1:obj_wellbore': */
class SOAP_CMAC witsml1__obj_USCOREwellbore {
      public:
        /// Required element 'witsml1:nameWell' of XSD type 'witsml1:nameString'
        std::string nameWell;
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCOREwellbore_sequence *__obj_USCOREwellbore_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uidWell' of XSD type 'witsml1:uidParentString'
        std::string *uidWell;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREwellbore, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREwellbore *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREwellbore); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREwellbore() : nameWell(), name(), __obj_USCOREwellbore_sequence(), commonData(), customData(), uidWell(), uid(), soap() { }
        virtual ~witsml1__obj_USCOREwellbore() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREwellbore(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREwellbore * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwellbore(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:12495 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence (-549)
/* Wrapper: */
class SOAP_CMAC __witsml1__obj_USCOREwell_sequence {
      public:
        /// Optional element 'witsml1:nameLegal' of XSD type 'witsml1:nameString'
        std::string *nameLegal;
        /// Optional element 'witsml1:numLicense' of XSD type 'witsml1:nameString'
        std::string *numLicense;
        /// Optional element 'witsml1:numGovt' of XSD type 'witsml1:nameString'
        std::string *numGovt;
        /// Optional element 'witsml1:dTimLicense' of XSD type 'witsml1:timestamp'
        struct tm *dTimLicense;
        /// Optional element 'witsml1:field' of XSD type 'witsml1:nameString'
        std::string *field;
        /// Optional element 'witsml1:country' of XSD type 'witsml1:str32'
        std::string *country;
        /// Optional element 'witsml1:state' of XSD type 'witsml1:str32'
        std::string *state;
        /// Optional element 'witsml1:county' of XSD type 'witsml1:str32'
        std::string *county;
        /// Optional element 'witsml1:region' of XSD type 'witsml1:str32'
        std::string *region;
        /// Optional element 'witsml1:district' of XSD type 'witsml1:str32'
        std::string *district;
        /// Optional element 'witsml1:block' of XSD type 'witsml1:str32'
        std::string *block;
        /// Required element 'witsml1:timeZone' of XSD type 'witsml1:timeZone'
        std::string timeZone;
        /// Optional element 'witsml1:operator' of XSD type 'witsml1:nameString'
        std::string *operator_;
        /// Optional element 'witsml1:operatorDiv' of XSD type 'witsml1:nameString'
        std::string *operatorDiv;
        /// Optional element 'witsml1:pcInterest' of XSD type 'witsml1:dimensionlessMeasure'
        witsml1__dimensionlessMeasure *pcInterest;
        /// Optional element 'witsml1:numAPI' of XSD type 'witsml1:str32'
        std::string *numAPI;
        /// Optional element 'witsml1:statusWell' of XSD type 'witsml1:WellStatus'
        enum witsml1__WellStatus *statusWell;
        /// Optional element 'witsml1:purposeWell' of XSD type 'witsml1:WellPurpose'
        enum witsml1__WellPurpose *purposeWell;
        /// Optional element 'witsml1:fluidWell' of XSD type 'witsml1:WellFluid'
        enum witsml1__WellFluid *fluidWell;
        /// Optional element 'witsml1:directionWell' of XSD type 'witsml1:WellDirection'
        enum witsml1__WellDirection *directionWell;
        /// Optional element 'witsml1:dTimSpud' of XSD type 'witsml1:timestamp'
        struct tm *dTimSpud;
        /// Optional element 'witsml1:dTimPa' of XSD type 'witsml1:timestamp'
        struct tm *dTimPa;
        /// Optional element 'witsml1:wellheadElevation' of XSD type 'witsml1:wellElevationCoord'
        witsml1__wellElevationCoord *wellheadElevation;
        /// Optional element 'witsml1:wellDatum' of XSD type 'witsml1:cs_wellDatum'
        std::vector<witsml1__cs_USCOREwellDatum *> wellDatum;
        /// Optional element 'witsml1:groundElevation' of XSD type 'witsml1:wellElevationCoord'
        witsml1__wellElevationCoord *groundElevation;
        /// Optional element 'witsml1:waterDepth' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *waterDepth;
        /// Optional element 'witsml1:wellLocation' of XSD type 'witsml1:cs_location'
        std::vector<witsml1__cs_USCORElocation *> wellLocation;
        /// Optional element 'witsml1:wellPublicLandSurveySystemLocation' of XSD type 'witsml1:cs_publicLandSurveySystem'
        witsml1__cs_USCOREpublicLandSurveySystem *wellPublicLandSurveySystemLocation;
        /// Optional element 'witsml1:referencePoint' of XSD type 'witsml1:cs_referencePoint'
        std::vector<witsml1__cs_USCOREreferencePoint *> referencePoint;
        /// Optional element 'witsml1:wellCRS' of XSD type 'witsml1:cs_wellCRS'
        std::vector<witsml1__cs_USCOREwellCRS *> wellCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __witsml1__obj_USCOREwell_sequence, default initialized and not managed by a soap context
        virtual __witsml1__obj_USCOREwell_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__witsml1__obj_USCOREwell_sequence); }
      public:
        /// Constructor with initializations
        __witsml1__obj_USCOREwell_sequence() : nameLegal(), numLicense(), numGovt(), dTimLicense(), field(), country(), state(), county(), region(), district(), block(), timeZone(), operator_(), operatorDiv(), pcInterest(), numAPI(), statusWell(), purposeWell(), fluidWell(), directionWell(), dTimSpud(), dTimPa(), wellheadElevation(), wellDatum(), groundElevation(), waterDepth(), wellLocation(), wellPublicLandSurveySystemLocation(), referencePoint(), wellCRS() { }
        virtual ~__witsml1__obj_USCOREwell_sequence() { }
        /// Friend allocator used by soap_new___witsml1__obj_USCOREwell_sequence(struct soap*, int)
        friend SOAP_FMAC1 __witsml1__obj_USCOREwell_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREwell_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:541 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell (-115)
/* complex XSD type 'witsml1:obj_well': */
class SOAP_CMAC witsml1__obj_USCOREwell {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        __witsml1__obj_USCOREwell_sequence *__obj_USCOREwell_sequence;
        /// Optional element 'witsml1:commonData' of XSD type 'witsml1:cs_commonData'
        witsml1__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml1:customData' of XSD type 'witsml1:cs_customData'
        witsml1__cs_USCOREcustomData *customData;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREwell, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREwell *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREwell); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREwell() : name(), __obj_USCOREwell_sequence(), commonData(), customData(), uid(), soap() { }
        virtual ~witsml1__obj_USCOREwell() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREwell(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREwell * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwell(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:12724 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum (-563)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREwellDatum
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_datumName	(1)	/**< union variant selector value for member datumName */
        witsml1__wellKnownNameStruct *datumName;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_datumCRS	(2)	/**< union variant selector value for member datumCRS */
        witsml1__refNameString *datumCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:544 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum (-116)
/* complex XSD type 'witsml1:cs_wellDatum': */
class SOAP_CMAC witsml1__cs_USCOREwellDatum {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        /// Optional element 'witsml1:code' of XSD type 'witsml1:ElevCodeEnum'
        enum witsml1__ElevCodeEnum *code;
        /// Union with union _witsml1__union_cs_USCOREwellDatum variant selector __union_cs_USCOREwellDatum set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_datumName SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_datumCRS
        int __union_cs_USCOREwellDatum;
        union _witsml1__union_cs_USCOREwellDatum union_cs_USCOREwellDatum;
        /// Optional element 'witsml1:kind' of XSD type 'witsml1:kindString'
        std::vector<std::string> kind;
        /// Optional element 'witsml1:wellbore' of XSD type 'witsml1:cs_refWellWellbore'
        witsml1__cs_USCORErefWellWellbore *wellbore;
        /// Optional element 'witsml1:rig' of XSD type 'witsml1:cs_refWellWellboreRig'
        witsml1__cs_USCORErefWellWellboreRig *rig;
        /// Optional element 'witsml1:elevation' of XSD type 'witsml1:wellElevationCoord'
        witsml1__wellElevationCoord *elevation;
        /// Optional element 'witsml1:measuredDepth' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *measuredDepth;
        /// Optional element 'witsml1:horizontalLocation' of XSD type 'witsml1:cs_location'
        witsml1__cs_USCORElocation *horizontalLocation;
        /// Optional element 'witsml1:comment' of XSD type 'witsml1:commentString'
        std::string *comment;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// required attribute 'uid' of XSD type 'witsml1:uidString'
        std::string uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREwellDatum, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREwellDatum *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREwellDatum); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREwellDatum() : name(), code(), __union_cs_USCOREwellDatum(), kind(), wellbore(), rig(), elevation(), measuredDepth(), horizontalLocation(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREwellDatum() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREwellDatum(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREwellDatum * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREwellDatum(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:547 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore (-117)
/* complex XSD type 'witsml1:cs_refWellWellbore': */
class SOAP_CMAC witsml1__cs_USCORErefWellWellbore {
      public:
        /// Required element 'witsml1:wellboreReference' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellboreReference;
        /// Optional element 'witsml1:wellParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORErefWellWellbore, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORErefWellWellbore *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORErefWellWellbore); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORErefWellWellbore() : wellboreReference(), wellParent(), soap() { }
        virtual ~witsml1__cs_USCORErefWellWellbore() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORErefWellWellbore(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORErefWellWellbore * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellWellbore(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:550 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig (-118)
/* complex XSD type 'witsml1:cs_refWellWellboreRig': */
class SOAP_CMAC witsml1__cs_USCORErefWellWellboreRig {
      public:
        /// Required element 'witsml1:rigReference' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *rigReference;
        /// Optional element 'witsml1:wellboreParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellboreParent;
        /// Optional element 'witsml1:wellParent' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *wellParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORErefWellWellboreRig, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORErefWellWellboreRig *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORErefWellWellboreRig); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORErefWellWellboreRig() : rigReference(), wellboreParent(), wellParent(), soap() { }
        virtual ~witsml1__cs_USCORErefWellWellboreRig() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORErefWellWellboreRig(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORErefWellWellboreRig * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellWellboreRig(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:553 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem (-119)
/* complex XSD type 'witsml1:cs_publicLandSurveySystem': */
class SOAP_CMAC witsml1__cs_USCOREpublicLandSurveySystem {
      public:
        /// Optional element 'witsml1:principalMeridian' of XSD type 'witsml1:PrincipalMeridian'
        enum witsml1__PrincipalMeridian *principalMeridian;
        /// Optional element 'witsml1:range' of XSD type 'witsml1:positiveCount'
        short *range;
        /// Optional element 'witsml1:rangeDir' of XSD type 'witsml1:EastOrWest'
        enum witsml1__EastOrWest *rangeDir;
        /// Optional element 'witsml1:township' of XSD type 'witsml1:positiveCount'
        short *township;
        /// Optional element 'witsml1:townshipDir' of XSD type 'witsml1:NorthOrSouth'
        enum witsml1__NorthOrSouth *townshipDir;
        /// Optional element 'witsml1:section' of XSD type 'witsml1:sectionNumber'
        std::string *section;
        /// Optional element 'witsml1:quarterSection' of XSD type 'witsml1:publicLandSurveySystemQuarterSection'
        std::string *quarterSection;
        /// Optional element 'witsml1:quarterTownship' of XSD type 'witsml1:publicLandSurveySystemQuarterTownship'
        std::string *quarterTownship;
        /// Optional element 'witsml1:footageNS' of XSD type 'witsml1:footageNorthSouth'
        witsml1__footageNorthSouth *footageNS;
        /// Optional element 'witsml1:footageEW' of XSD type 'witsml1:footageEastWest'
        witsml1__footageEastWest *footageEW;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREpublicLandSurveySystem, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREpublicLandSurveySystem *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREpublicLandSurveySystem); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREpublicLandSurveySystem() : principalMeridian(), range(), rangeDir(), township(), townshipDir(), section(), quarterSection(), quarterTownship(), footageNS(), footageEW(), soap() { }
        virtual ~witsml1__cs_USCOREpublicLandSurveySystem() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREpublicLandSurveySystem * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:556 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint (-120)
/* complex XSD type 'witsml1:cs_referencePoint': */
class SOAP_CMAC witsml1__cs_USCOREreferencePoint {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        /// Optional element 'witsml1:type' of XSD type 'witsml1:kindString'
        std::string *type;
        /// Optional element 'witsml1:elevation' of XSD type 'witsml1:wellElevationCoord'
        witsml1__wellElevationCoord *elevation;
        /// Optional element 'witsml1:measuredDepth' of XSD type 'witsml1:measuredDepthCoord'
        witsml1__measuredDepthCoord *measuredDepth;
        /// Required element 'witsml1:location' of XSD type 'witsml1:cs_location'
        std::vector<witsml1__cs_USCORElocation *> location;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:commentString'
        std::string *description;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREreferencePoint, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREreferencePoint *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREreferencePoint); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREreferencePoint() : name(), type(), elevation(), measuredDepth(), location(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREreferencePoint() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREreferencePoint(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREreferencePoint * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREreferencePoint(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13057 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS (-578)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCOREwellCRS
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_mapProjection	(1)	/**< union variant selector value for member mapProjection */
        witsml1__cs_USCOREprojectionx *mapProjection;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_geographic	(2)	/**< union variant selector value for member geographic */
        witsml1__cs_USCOREgeodeticModel *geographic;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_mapProjectionCRS	(3)	/**< union variant selector value for member mapProjectionCRS */
        witsml1__refNameString *mapProjectionCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_geodeticCRS	(4)	/**< union variant selector value for member geodeticCRS */
        witsml1__refNameString *geodeticCRS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_localCRS	(5)	/**< union variant selector value for member localCRS */
        witsml1__cs_USCORElocalCRS *localCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:559 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS (-121)
/* complex XSD type 'witsml1:cs_wellCRS': */
class SOAP_CMAC witsml1__cs_USCOREwellCRS {
      public:
        /// Required element 'witsml1:name' of XSD type 'witsml1:nameString'
        std::string name;
        /// Union with union _witsml1__union_cs_USCOREwellCRS variant selector __union_cs_USCOREwellCRS set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_mapProjection SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_geographic SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_mapProjectionCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_geodeticCRS SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_localCRS
        int __union_cs_USCOREwellCRS;
        union _witsml1__union_cs_USCOREwellCRS union_cs_USCOREwellCRS;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:descriptionString'
        std::string *description;
        /// Optional element 'witsml1:extensionNameValue' of XSD type 'witsml1:cs_extensionNameValue'
        std::vector<witsml1__cs_USCOREextensionNameValue *> extensionNameValue;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREwellCRS, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREwellCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREwellCRS); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREwellCRS() : name(), __union_cs_USCOREwellCRS(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml1__cs_USCOREwellCRS() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREwellCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREwellCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREwellCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:562 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel (-122)
/* complex XSD type 'witsml1:cs_geodeticModel': */
class SOAP_CMAC witsml1__cs_USCOREgeodeticModel {
      public:
        /// Optional element 'witsml1:nameCRS' of XSD type 'witsml1:wellKnownNameStruct'
        witsml1__wellKnownNameStruct *nameCRS;
        /// Optional element 'witsml1:geodeticDatumCode' of XSD type 'witsml1:GeodeticDatum'
        enum witsml1__GeodeticDatum *geodeticDatumCode;
        /// Optional element 'witsml1:xTranslation' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *xTranslation;
        /// Optional element 'witsml1:yTranslation' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *yTranslation;
        /// Optional element 'witsml1:zTranslation' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *zTranslation;
        /// Optional element 'witsml1:xRotation' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *xRotation;
        /// Optional element 'witsml1:yRotation' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *yRotation;
        /// Optional element 'witsml1:zRotation' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *zRotation;
        /// Optional element 'witsml1:scaleFactor' of XSD type 'witsml1:unitlessQuantity'
        double *scaleFactor;
        /// Optional element 'witsml1:ellipsoidCode' of XSD type 'witsml1:Ellipsoid'
        enum witsml1__Ellipsoid *ellipsoidCode;
        /// Optional element 'witsml1:ellipsoidSemiMajorAxis' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *ellipsoidSemiMajorAxis;
        /// Optional element 'witsml1:ellipsoidInverseFlattening' of XSD type 'witsml1:unitlessQuantity'
        double *ellipsoidInverseFlattening;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREgeodeticModel, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREgeodeticModel *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREgeodeticModel); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREgeodeticModel() : nameCRS(), geodeticDatumCode(), xTranslation(), yTranslation(), zTranslation(), xRotation(), yRotation(), zRotation(), scaleFactor(), ellipsoidCode(), ellipsoidSemiMajorAxis(), ellipsoidInverseFlattening(), soap() { }
        virtual ~witsml1__cs_USCOREgeodeticModel() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREgeodeticModel(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREgeodeticModel * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREgeodeticModel(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:565 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx (-123)
/* complex XSD type 'witsml1:cs_projectionx': */
class SOAP_CMAC witsml1__cs_USCOREprojectionx {
      public:
        /// Optional element 'witsml1:nameCRS' of XSD type 'witsml1:wellKnownNameStruct'
        witsml1__wellKnownNameStruct *nameCRS;
        /// Optional element 'witsml1:projectionCode' of XSD type 'witsml1:Projection'
        enum witsml1__Projection *projectionCode;
        /// Optional element 'witsml1:projectedFrom' of XSD type 'witsml1:refNameString'
        witsml1__refNameString *projectedFrom;
        /// Optional element 'witsml1:stdParallel1' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *stdParallel1;
        /// Optional element 'witsml1:stdParallel2' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *stdParallel2;
        /// Optional element 'witsml1:centralMeridian' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *centralMeridian;
        /// Optional element 'witsml1:originLatitude' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *originLatitude;
        /// Optional element 'witsml1:originLongitude' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *originLongitude;
        /// Optional element 'witsml1:latitude1' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *latitude1;
        /// Optional element 'witsml1:longitude1' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *longitude1;
        /// Optional element 'witsml1:latitude2' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *latitude2;
        /// Optional element 'witsml1:longitude2' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *longitude2;
        /// Optional element 'witsml1:latitudeForScale' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *latitudeForScale;
        /// Optional element 'witsml1:longitudeForScale' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *longitudeForScale;
        /// Optional element 'witsml1:trueScaleLatitude' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *trueScaleLatitude;
        /// Optional element 'witsml1:spheroidRadius' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *spheroidRadius;
        /// Optional element 'witsml1:scaleFactor' of XSD type 'witsml1:unitlessQuantity'
        double *scaleFactor;
        /// Optional element 'witsml1:methodVariant' of XSD type 'witsml1:ProjectionVariantsObliqueMercator'
        enum witsml1__ProjectionVariantsObliqueMercator *methodVariant;
        /// Optional element 'witsml1:perspectiveHeight' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *perspectiveHeight;
        /// Optional element 'witsml1:zone' of XSD type 'witsml1:geodeticZoneString'
        std::string *zone;
        /// Optional element 'witsml1:NADType' of XSD type 'witsml1:NADTypes'
        enum witsml1__NADTypes *NADType;
        /// Optional element 'witsml1:falseEasting' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *falseEasting;
        /// Optional element 'witsml1:falseNorthing' of XSD type 'witsml1:lengthMeasure'
        witsml1__lengthMeasure *falseNorthing;
        /// Optional element 'witsml1:bearing' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *bearing;
        /// Optional element 'witsml1:hemisphere' of XSD type 'witsml1:Hemispheres'
        enum witsml1__Hemispheres *hemisphere;
        /// Optional element 'witsml1:description' of XSD type 'witsml1:commentString'
        std::string *description;
        /// Optional element 'witsml1:parameter' of XSD type 'witsml1:indexedObject'
        std::vector<witsml1__indexedObject *> parameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCOREprojectionx, default initialized and not managed by a soap context
        virtual witsml1__cs_USCOREprojectionx *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCOREprojectionx); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCOREprojectionx() : nameCRS(), projectionCode(), projectedFrom(), stdParallel1(), stdParallel2(), centralMeridian(), originLatitude(), originLongitude(), latitude1(), longitude1(), latitude2(), longitude2(), latitudeForScale(), longitudeForScale(), trueScaleLatitude(), spheroidRadius(), scaleFactor(), methodVariant(), perspectiveHeight(), zone(), NADType(), falseEasting(), falseNorthing(), bearing(), hemisphere(), description(), parameter(), soap() { }
        virtual ~witsml1__cs_USCOREprojectionx() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCOREprojectionx(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCOREprojectionx * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREprojectionx(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13369 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS (-587)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml1__union_cs_USCORElocalCRS
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_usesWellAsOrigin	(1)	/**< union variant selector value for member usesWellAsOrigin */
        bool *usesWellAsOrigin;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_origin	(2)	/**< union variant selector value for member origin */
        witsml1__refNameString *origin;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_originDescription	(3)	/**< union variant selector value for member originDescription */
        std::string *originDescription;
};
#endif

/* witsml1_4_1_1ForGsoap.h:568 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS (-124)
/* complex XSD type 'witsml1:cs_localCRS': */
class SOAP_CMAC witsml1__cs_USCORElocalCRS {
      public:
        /// Union with union _witsml1__union_cs_USCORElocalCRS variant selector __union_cs_USCORElocalCRS set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_usesWellAsOrigin SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_origin SOAP_UNION_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_originDescription
        int __union_cs_USCORElocalCRS;
        union _witsml1__union_cs_USCORElocalCRS union_cs_USCORElocalCRS;
        /// Optional element 'witsml1:yAxisAzimuth' of XSD type 'witsml1:yAxisAzimuth'
        witsml1__yAxisAzimuth *yAxisAzimuth;
        /// Optional element 'witsml1:magneticDeclination' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *magneticDeclination;
        /// Optional element 'witsml1:gridConvergence' of XSD type 'witsml1:planeAngleMeasure'
        witsml1__planeAngleMeasure *gridConvergence;
        /// Optional element 'witsml1:yAxisDescription' of XSD type 'witsml1:commentString'
        std::string *yAxisDescription;
        /// Optional element 'witsml1:xRotationCounterClockwise' of XSD type 'witsml1:logicalBoolean'
        bool *xRotationCounterClockwise;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cs_USCORElocalCRS, default initialized and not managed by a soap context
        virtual witsml1__cs_USCORElocalCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cs_USCORElocalCRS); }
      public:
        /// Constructor with initializations
        witsml1__cs_USCORElocalCRS() : __union_cs_USCORElocalCRS(), yAxisAzimuth(), magneticDeclination(), gridConvergence(), yAxisDescription(), xRotationCounterClockwise(), soap() { }
        virtual ~witsml1__cs_USCORElocalCRS() { }
        /// Friend allocator used by soap_new_witsml1__cs_USCORElocalCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cs_USCORElocalCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElocalCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:571 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject (-125)
/* Type abstract__abstractObject is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'abstract:abstractObject': */
class SOAP_CMAC abstract__abstractObject {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type abstract__abstractObject, default initialized and not managed by a soap context
        virtual abstract__abstractObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(abstract__abstractObject); }
      public:
        /// Constructor with initializations
        abstract__abstractObject() : soap() { }
        virtual ~abstract__abstractObject() { }
        /// Friend allocator used by soap_new_abstract__abstractObject(struct soap*, int)
        friend SOAP_FMAC1 abstract__abstractObject * SOAP_FMAC2 soap_instantiate_abstract__abstractObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:589 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType (-131)
/* Type gml__AbstractGMLType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractGMLType': */
class SOAP_CMAC gml__AbstractGMLType {
      public:
        /// Optional element 'gml:description' of XSD type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XSD type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Optional element 'gml:identifier' of XSD type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XSD type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// required attribute 'gml:id' of XSD type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGMLType, default initialized and not managed by a soap context
        virtual gml__AbstractGMLType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGMLType); }
      public:
        /// Constructor with initializations
        gml__AbstractGMLType() : description(), descriptionReference(), identifier(), name(), gml__id(), soap() { }
        virtual ~gml__AbstractGMLType() { }
        /// Friend allocator used by soap_new_gml__AbstractGMLType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGMLType * SOAP_FMAC2 soap_instantiate_gml__AbstractGMLType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:595 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType (-133)
/* complex XSD type 'gml:ReferenceType': */
class SOAP_CMAC gml__ReferenceType {
      public:
        /// optional attribute 'owns' of XSD type 'xsd:boolean'
        bool owns;	///< initialized with default value = (bool)0
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__ReferenceType, default initialized and not managed by a soap context
        virtual gml__ReferenceType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__ReferenceType); }
      public:
        /// Constructor with initializations
        gml__ReferenceType() : owns((bool)0), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__ReferenceType() { }
        /// Friend allocator used by soap_new_gml__ReferenceType(struct soap*, int)
        friend SOAP_FMAC1 gml__ReferenceType * SOAP_FMAC2 soap_instantiate_gml__ReferenceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13564 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_TimePrimitivePropertyType (-600)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_TimePrimitivePropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:13553 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence (-599)
/* Wrapper: */
class SOAP_CMAC __gml__TimePrimitivePropertyType_sequence {
      public:
        /// Union with union _gml__union_TimePrimitivePropertyType variant selector __unionAbstractTimePrimitive set to one of:
        int __unionAbstractTimePrimitive;
        union _gml__union_TimePrimitivePropertyType union_TimePrimitivePropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__TimePrimitivePropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__TimePrimitivePropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__TimePrimitivePropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__TimePrimitivePropertyType_sequence() : __unionAbstractTimePrimitive() { }
        virtual ~__gml__TimePrimitivePropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__TimePrimitivePropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__TimePrimitivePropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:613 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType (-139)
/* Type gml__TimePrimitivePropertyType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:TimePrimitivePropertyType': */
class SOAP_CMAC gml__TimePrimitivePropertyType {
      public:
        __gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// optional attribute 'owns' of XSD type 'xsd:boolean'
        bool owns;	///< initialized with default value = (bool)0
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__TimePrimitivePropertyType, default initialized and not managed by a soap context
        virtual gml__TimePrimitivePropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__TimePrimitivePropertyType); }
      public:
        /// Constructor with initializations
        gml__TimePrimitivePropertyType() : __TimePrimitivePropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), owns((bool)0), soap() { }
        virtual ~gml__TimePrimitivePropertyType() { }
        /// Friend allocator used by soap_new_gml__TimePrimitivePropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__TimePrimitivePropertyType * SOAP_FMAC2 soap_instantiate_gml__TimePrimitivePropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13623 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence (-602)
/* Wrapper: */
class SOAP_CMAC __gml__EllipsoidalCSPropertyType_sequence {
      public:
        /// Required element 'gml:EllipsoidalCS' of XSD type 'gml:EllipsoidalCSType'
        gml__EllipsoidalCSType *EllipsoidalCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__EllipsoidalCSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__EllipsoidalCSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__EllipsoidalCSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__EllipsoidalCSPropertyType_sequence() : EllipsoidalCS() { }
        virtual ~__gml__EllipsoidalCSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__EllipsoidalCSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:616 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType (-140)
/* complex XSD type 'gml:EllipsoidalCSPropertyType': */
class SOAP_CMAC gml__EllipsoidalCSPropertyType {
      public:
        __gml__EllipsoidalCSPropertyType_sequence *__EllipsoidalCSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__EllipsoidalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidalCSPropertyType); }
      public:
        /// Constructor with initializations
        gml__EllipsoidalCSPropertyType() : __EllipsoidalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__EllipsoidalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13683 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence (-605)
/* Wrapper: */
class SOAP_CMAC __gml__CoordinateSystemAxisPropertyType_sequence {
      public:
        /// Required element 'gml:CoordinateSystemAxis' of XSD type 'gml:CoordinateSystemAxisType'
        gml__CoordinateSystemAxisType *CoordinateSystemAxis;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__CoordinateSystemAxisPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__CoordinateSystemAxisPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__CoordinateSystemAxisPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__CoordinateSystemAxisPropertyType_sequence() : CoordinateSystemAxis() { }
        virtual ~__gml__CoordinateSystemAxisPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:625 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType (-143)
/* complex XSD type 'gml:CoordinateSystemAxisPropertyType': */
class SOAP_CMAC gml__CoordinateSystemAxisPropertyType {
      public:
        __gml__CoordinateSystemAxisPropertyType_sequence *__CoordinateSystemAxisPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CoordinateSystemAxisPropertyType, default initialized and not managed by a soap context
        virtual gml__CoordinateSystemAxisPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CoordinateSystemAxisPropertyType); }
      public:
        /// Constructor with initializations
        gml__CoordinateSystemAxisPropertyType() : __CoordinateSystemAxisPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CoordinateSystemAxisPropertyType() { }
        /// Friend allocator used by soap_new_gml__CoordinateSystemAxisPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13743 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence (-608)
/* Wrapper: */
class SOAP_CMAC __gml__CartesianCSPropertyType_sequence {
      public:
        /// Required element 'gml:CartesianCS' of XSD type 'gml:CartesianCSType'
        gml__CartesianCSType *CartesianCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__CartesianCSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__CartesianCSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__CartesianCSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__CartesianCSPropertyType_sequence() : CartesianCS() { }
        virtual ~__gml__CartesianCSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__CartesianCSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CartesianCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:631 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType (-145)
/* complex XSD type 'gml:CartesianCSPropertyType': */
class SOAP_CMAC gml__CartesianCSPropertyType {
      public:
        __gml__CartesianCSPropertyType_sequence *__CartesianCSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CartesianCSPropertyType, default initialized and not managed by a soap context
        virtual gml__CartesianCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CartesianCSPropertyType); }
      public:
        /// Constructor with initializations
        gml__CartesianCSPropertyType() : __CartesianCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CartesianCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__CartesianCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CartesianCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13803 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence (-611)
/* Wrapper: */
class SOAP_CMAC __gml__SphericalCSPropertyType_sequence {
      public:
        /// Required element 'gml:SphericalCS' of XSD type 'gml:SphericalCSType'
        gml__SphericalCSType *SphericalCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__SphericalCSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__SphericalCSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__SphericalCSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__SphericalCSPropertyType_sequence() : SphericalCS() { }
        virtual ~__gml__SphericalCSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__SphericalCSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__SphericalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:637 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType (-147)
/* complex XSD type 'gml:SphericalCSPropertyType': */
class SOAP_CMAC gml__SphericalCSPropertyType {
      public:
        __gml__SphericalCSPropertyType_sequence *__SphericalCSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__SphericalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__SphericalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__SphericalCSPropertyType); }
      public:
        /// Constructor with initializations
        gml__SphericalCSPropertyType() : __SphericalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__SphericalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__SphericalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__SphericalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13863 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence (-614)
/* Wrapper: */
class SOAP_CMAC __gml__GeodeticDatumPropertyType_sequence {
      public:
        /// Required element 'gml:GeodeticDatum' of XSD type 'gml:GeodeticDatumType'
        gml__GeodeticDatumType *GeodeticDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__GeodeticDatumPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__GeodeticDatumPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__GeodeticDatumPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__GeodeticDatumPropertyType_sequence() : GeodeticDatum() { }
        virtual ~__gml__GeodeticDatumPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__GeodeticDatumPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:643 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType (-149)
/* complex XSD type 'gml:GeodeticDatumPropertyType': */
class SOAP_CMAC gml__GeodeticDatumPropertyType {
      public:
        __gml__GeodeticDatumPropertyType_sequence *__GeodeticDatumPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticDatumPropertyType, default initialized and not managed by a soap context
        virtual gml__GeodeticDatumPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticDatumPropertyType); }
      public:
        /// Constructor with initializations
        gml__GeodeticDatumPropertyType() : __GeodeticDatumPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeodeticDatumPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeodeticDatumPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13923 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence (-617)
/* Wrapper: */
class SOAP_CMAC __gml__PrimeMeridianPropertyType_sequence {
      public:
        /// Required element 'gml:PrimeMeridian' of XSD type 'gml:PrimeMeridianType'
        gml__PrimeMeridianType *PrimeMeridian;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__PrimeMeridianPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__PrimeMeridianPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__PrimeMeridianPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__PrimeMeridianPropertyType_sequence() : PrimeMeridian() { }
        virtual ~__gml__PrimeMeridianPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__PrimeMeridianPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__PrimeMeridianPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:652 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType (-152)
/* complex XSD type 'gml:PrimeMeridianPropertyType': */
class SOAP_CMAC gml__PrimeMeridianPropertyType {
      public:
        __gml__PrimeMeridianPropertyType_sequence *__PrimeMeridianPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__PrimeMeridianPropertyType, default initialized and not managed by a soap context
        virtual gml__PrimeMeridianPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__PrimeMeridianPropertyType); }
      public:
        /// Constructor with initializations
        gml__PrimeMeridianPropertyType() : __PrimeMeridianPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__PrimeMeridianPropertyType() { }
        /// Friend allocator used by soap_new_gml__PrimeMeridianPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__PrimeMeridianPropertyType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:13983 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence (-620)
/* Wrapper: */
class SOAP_CMAC __gml__EllipsoidPropertyType_sequence {
      public:
        /// Required element 'gml:Ellipsoid' of XSD type 'gml:EllipsoidType'
        gml__EllipsoidType *Ellipsoid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__EllipsoidPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__EllipsoidPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__EllipsoidPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__EllipsoidPropertyType_sequence() : Ellipsoid() { }
        virtual ~__gml__EllipsoidPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__EllipsoidPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:664 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType (-156)
/* complex XSD type 'gml:EllipsoidPropertyType': */
class SOAP_CMAC gml__EllipsoidPropertyType {
      public:
        __gml__EllipsoidPropertyType_sequence *__EllipsoidPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidPropertyType, default initialized and not managed by a soap context
        virtual gml__EllipsoidPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidPropertyType); }
      public:
        /// Constructor with initializations
        gml__EllipsoidPropertyType() : __EllipsoidPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__EllipsoidPropertyType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14055 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeneralConversionPropertyType (-624)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_GeneralConversionPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:14043 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence (-623)
/* Wrapper: */
class SOAP_CMAC __gml__GeneralConversionPropertyType_sequence {
      public:
        /// Union with union _gml__union_GeneralConversionPropertyType variant selector __unionAbstractGeneralConversion set to one of:
        int __unionAbstractGeneralConversion;
        union _gml__union_GeneralConversionPropertyType union_GeneralConversionPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__GeneralConversionPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__GeneralConversionPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__GeneralConversionPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__GeneralConversionPropertyType_sequence() : __unionAbstractGeneralConversion() { }
        virtual ~__gml__GeneralConversionPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__GeneralConversionPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeneralConversionPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:679 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType (-161)
/* complex XSD type 'gml:GeneralConversionPropertyType': */
class SOAP_CMAC gml__GeneralConversionPropertyType {
      public:
        __gml__GeneralConversionPropertyType_sequence *__GeneralConversionPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeneralConversionPropertyType, default initialized and not managed by a soap context
        virtual gml__GeneralConversionPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeneralConversionPropertyType); }
      public:
        /// Constructor with initializations
        gml__GeneralConversionPropertyType() : __GeneralConversionPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeneralConversionPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeneralConversionPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeneralConversionPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeneralConversionPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14121 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_CRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_CRSPropertyType (-627)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_CRSPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:14110 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence (-626)
/* Wrapper: */
class SOAP_CMAC __gml__CRSPropertyType_sequence {
      public:
        /// Union with union _gml__union_CRSPropertyType variant selector __unionAbstractCRS set to one of:
        int __unionAbstractCRS;
        union _gml__union_CRSPropertyType union_CRSPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__CRSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__CRSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__CRSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__CRSPropertyType_sequence() : __unionAbstractCRS() { }
        virtual ~__gml__CRSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__CRSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__CRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:688 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType (-164)
/* complex XSD type 'gml:CRSPropertyType': */
class SOAP_CMAC gml__CRSPropertyType {
      public:
        __gml__CRSPropertyType_sequence *__CRSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CRSPropertyType, default initialized and not managed by a soap context
        virtual gml__CRSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CRSPropertyType); }
      public:
        /// Constructor with initializations
        gml__CRSPropertyType() : __CRSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CRSPropertyType() { }
        /// Friend allocator used by soap_new_gml__CRSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CRSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14176 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence (-629)
/* Wrapper: */
class SOAP_CMAC __gml__GeodeticCRSPropertyType_sequence {
      public:
        /// Required element 'gml:GeodeticCRS' of XSD type 'gml:GeodeticCRSType'
        gml__GeodeticCRSType *GeodeticCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__GeodeticCRSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__GeodeticCRSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__GeodeticCRSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__GeodeticCRSPropertyType_sequence() : GeodeticCRS() { }
        virtual ~__gml__GeodeticCRSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__GeodeticCRSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticCRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:691 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType (-165)
/* complex XSD type 'gml:GeodeticCRSPropertyType': */
class SOAP_CMAC gml__GeodeticCRSPropertyType {
      public:
        __gml__GeodeticCRSPropertyType_sequence *__GeodeticCRSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticCRSPropertyType, default initialized and not managed by a soap context
        virtual gml__GeodeticCRSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticCRSPropertyType); }
      public:
        /// Constructor with initializations
        gml__GeodeticCRSPropertyType() : __GeodeticCRSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeodeticCRSPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeodeticCRSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticCRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14233 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence (-631)
/* Wrapper: */
class SOAP_CMAC __gml__VerticalCSPropertyType_sequence {
      public:
        /// Required element 'gml:VerticalCS' of XSD type 'gml:VerticalCSType'
        gml__VerticalCSType *VerticalCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__VerticalCSPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__VerticalCSPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__VerticalCSPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__VerticalCSPropertyType_sequence() : VerticalCS() { }
        virtual ~__gml__VerticalCSPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__VerticalCSPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:697 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType (-167)
/* complex XSD type 'gml:VerticalCSPropertyType': */
class SOAP_CMAC gml__VerticalCSPropertyType {
      public:
        __gml__VerticalCSPropertyType_sequence *__VerticalCSPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__VerticalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCSPropertyType); }
      public:
        /// Constructor with initializations
        gml__VerticalCSPropertyType() : __VerticalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__VerticalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__VerticalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14293 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence (-634)
/* Wrapper: */
class SOAP_CMAC __gml__VerticalDatumPropertyType_sequence {
      public:
        /// Required element 'gml:VerticalDatum' of XSD type 'gml:VerticalDatumType'
        gml__VerticalDatumType *VerticalDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__VerticalDatumPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gml__VerticalDatumPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__VerticalDatumPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gml__VerticalDatumPropertyType_sequence() : VerticalDatum() { }
        virtual ~__gml__VerticalDatumPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gml__VerticalDatumPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:703 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType (-169)
/* complex XSD type 'gml:VerticalDatumPropertyType': */
class SOAP_CMAC gml__VerticalDatumPropertyType {
      public:
        __gml__VerticalDatumPropertyType_sequence *__VerticalDatumPropertyType_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalDatumPropertyType, default initialized and not managed by a soap context
        virtual gml__VerticalDatumPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalDatumPropertyType); }
      public:
        /// Constructor with initializations
        gml__VerticalDatumPropertyType() : __VerticalDatumPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__VerticalDatumPropertyType() { }
        /// Friend allocator used by soap_new_gml__VerticalDatumPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14354 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence (-637)
/* Wrapper: */
class SOAP_CMAC __gml__domainOfValidity_sequence {
      public:
        /// Required element 'gmd:EX_Extent' of XSD type 'gmd:EX_Extent_Type'
        gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__domainOfValidity_sequence, default initialized and not managed by a soap context
        virtual __gml__domainOfValidity_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__domainOfValidity_sequence); }
      public:
        /// Constructor with initializations
        __gml__domainOfValidity_sequence() : gmd__EX_USCOREExtent() { }
        virtual ~__gml__domainOfValidity_sequence() { }
        /// Friend allocator used by soap_new___gml__domainOfValidity_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__domainOfValidity_sequence * SOAP_FMAC2 soap_instantiate___gml__domainOfValidity_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:709 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity (-171)
/* complex XSD type 'gml:domainOfValidity': */
class SOAP_CMAC _gml__domainOfValidity {
      public:
        __gml__domainOfValidity_sequence *__domainOfValidity_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__domainOfValidity, default initialized and not managed by a soap context
        virtual _gml__domainOfValidity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__domainOfValidity); }
      public:
        /// Constructor with initializations
        _gml__domainOfValidity() : __domainOfValidity_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~_gml__domainOfValidity() { }
        /// Friend allocator used by soap_new__gml__domainOfValidity(struct soap*, int)
        friend SOAP_FMAC1 _gml__domainOfValidity * SOAP_FMAC2 soap_instantiate__gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:712 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter (-172)
/* complex XSD type 'gml:secondDefiningParameter': */
class SOAP_CMAC _gml__secondDefiningParameter {
      public:
        /// Required element 'gml:SecondDefiningParameter' of XSD type 'gml:SecondDefiningParameter'
        _gml__SecondDefiningParameter *SecondDefiningParameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__secondDefiningParameter, default initialized and not managed by a soap context
        virtual _gml__secondDefiningParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__secondDefiningParameter); }
      public:
        /// Constructor with initializations
        _gml__secondDefiningParameter() : SecondDefiningParameter(), soap() { }
        virtual ~_gml__secondDefiningParameter() { }
        /// Friend allocator used by soap_new__gml__secondDefiningParameter(struct soap*, int)
        friend SOAP_FMAC1 _gml__secondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__secondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14444 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter (-643)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_SecondDefiningParameter
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_inverseFlattening	(1)	/**< union variant selector value for member inverseFlattening */
        gml__MeasureType *inverseFlattening;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_semiMinorAxis	(2)	/**< union variant selector value for member semiMinorAxis */
        gml__LengthType *semiMinorAxis;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_isSphere	(3)	/**< union variant selector value for member isSphere */
        bool isSphere;
};
#endif

/* witsml1_4_1_1ForGsoap.h:715 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter (-173)
/* Choice: */
class SOAP_CMAC _gml__SecondDefiningParameter {
      public:
        /// Union with union _gml__union_SecondDefiningParameter variant selector __union_SecondDefiningParameter set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_inverseFlattening SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_semiMinorAxis SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_isSphere
        int __union_SecondDefiningParameter;
        union _gml__union_SecondDefiningParameter union_SecondDefiningParameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__SecondDefiningParameter, default initialized and not managed by a soap context
        virtual _gml__SecondDefiningParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__SecondDefiningParameter); }
      public:
        /// Constructor with initializations
        _gml__SecondDefiningParameter() : __union_SecondDefiningParameter(), soap() { }
        virtual ~_gml__SecondDefiningParameter() { }
        /// Friend allocator used by soap_new__gml__SecondDefiningParameter(struct soap*, int)
        friend SOAP_FMAC1 _gml__SecondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__SecondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14476 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_coordinateOperationAccuracy (-645)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_coordinateOperationAccuracy
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:14468 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence (-644)
/* Wrapper: */
class SOAP_CMAC __gml__coordinateOperationAccuracy_sequence {
      public:
        /// Union with union _gml__union_coordinateOperationAccuracy variant selector __unionAbstractDQ_USCOREPositionalAccuracy set to one of:
        int __unionAbstractDQ_USCOREPositionalAccuracy;
        union _gml__union_coordinateOperationAccuracy union_coordinateOperationAccuracy;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gml__coordinateOperationAccuracy_sequence, default initialized and not managed by a soap context
        virtual __gml__coordinateOperationAccuracy_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gml__coordinateOperationAccuracy_sequence); }
      public:
        /// Constructor with initializations
        __gml__coordinateOperationAccuracy_sequence() : __unionAbstractDQ_USCOREPositionalAccuracy() { }
        virtual ~__gml__coordinateOperationAccuracy_sequence() { }
        /// Friend allocator used by soap_new___gml__coordinateOperationAccuracy_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC2 soap_instantiate___gml__coordinateOperationAccuracy_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:718 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy (-174)
/* complex XSD type 'gml:coordinateOperationAccuracy': */
class SOAP_CMAC _gml__coordinateOperationAccuracy {
      public:
        __gml__coordinateOperationAccuracy_sequence *__coordinateOperationAccuracy_sequence;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__coordinateOperationAccuracy, default initialized and not managed by a soap context
        virtual _gml__coordinateOperationAccuracy *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__coordinateOperationAccuracy); }
      public:
        /// Constructor with initializations
        _gml__coordinateOperationAccuracy() : __coordinateOperationAccuracy_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~_gml__coordinateOperationAccuracy() { }
        /// Friend allocator used by soap_new__gml__coordinateOperationAccuracy(struct soap*, int)
        friend SOAP_FMAC1 _gml__coordinateOperationAccuracy * SOAP_FMAC2 soap_instantiate__gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14552 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType (-648)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:14544 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence (-647)
/* Wrapper: */
class SOAP_CMAC __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence {
      public:
        /// Union with union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType variant selector __unionAbstractEX_USCOREGeographicExtent set to one of:
        int __unionAbstractEX_USCOREGeographicExtent;
        union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType union_EX_USCOREGeographicExtent_USCOREPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence() : __unionAbstractEX_USCOREGeographicExtent() { }
        virtual ~__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:724 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType (-176)
/* complex XSD type 'gmd:EX_GeographicExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCOREGeographicExtent_USCOREPropertyType {
      public:
        __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *__EX_USCOREGeographicExtent_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREGeographicExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREGeographicExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREGeographicExtent_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCOREGeographicExtent_USCOREPropertyType() : __EX_USCOREGeographicExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCOREGeographicExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14606 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence (-650)
/* Wrapper: */
class SOAP_CMAC __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:EX_TemporalExtent' of XSD type 'gmd:EX_TemporalExtent_Type'
        gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence() : EX_USCORETemporalExtent() { }
        virtual ~__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:730 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType (-178)
/* complex XSD type 'gmd:EX_TemporalExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCORETemporalExtent_USCOREPropertyType {
      public:
        __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *__EX_USCORETemporalExtent_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCORETemporalExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCORETemporalExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCORETemporalExtent_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCORETemporalExtent_USCOREPropertyType() : __EX_USCORETemporalExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCORETemporalExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14662 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence (-653)
/* Wrapper: */
class SOAP_CMAC __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:EX_VerticalExtent' of XSD type 'gmd:EX_VerticalExtent_Type'
        gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence() : EX_USCOREVerticalExtent() { }
        virtual ~__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:736 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType (-180)
/* complex XSD type 'gmd:EX_VerticalExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCOREVerticalExtent_USCOREPropertyType {
      public:
        __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *__EX_USCOREVerticalExtent_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREVerticalExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREVerticalExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREVerticalExtent_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCOREVerticalExtent_USCOREPropertyType() : __EX_USCOREVerticalExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCOREVerticalExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14718 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence (-656)
/* Wrapper: */
class SOAP_CMAC __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:MD_Identifier' of XSD type 'gmd:MD_Identifier_Type'
        gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence() : MD_USCOREIdentifier() { }
        virtual ~__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:748 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType (-184)
/* Type gmd__MD_USCOREIdentifier_USCOREPropertyType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:MD_Identifier_PropertyType': */
class SOAP_CMAC gmd__MD_USCOREIdentifier_USCOREPropertyType {
      public:
        __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *__MD_USCOREIdentifier_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__MD_USCOREIdentifier_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__MD_USCOREIdentifier_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__MD_USCOREIdentifier_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__MD_USCOREIdentifier_USCOREPropertyType() : __MD_USCOREIdentifier_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__MD_USCOREIdentifier_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14774 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence (-659)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCORECitation_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Citation' of XSD type 'gmd:CI_Citation_Type'
        gmd__CI_USCORECitation_USCOREType *CI_USCORECitation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCORECitation_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCORECitation_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCORECitation_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCORECitation_USCOREPropertyType_sequence() : CI_USCORECitation() { }
        virtual ~__gmd__CI_USCORECitation_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:754 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType (-186)
/* complex XSD type 'gmd:CI_Citation_PropertyType': */
class SOAP_CMAC gmd__CI_USCORECitation_USCOREPropertyType {
      public:
        __gmd__CI_USCORECitation_USCOREPropertyType_sequence *__CI_USCORECitation_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORECitation_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORECitation_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORECitation_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORECitation_USCOREPropertyType() : __CI_USCORECitation_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORECitation_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14830 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence (-662)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREDate_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Date' of XSD type 'gmd:CI_Date_Type'
        gmd__CI_USCOREDate_USCOREType *CI_USCOREDate;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREDate_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREDate_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREDate_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREDate_USCOREPropertyType_sequence() : CI_USCOREDate() { }
        virtual ~__gmd__CI_USCOREDate_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:760 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType (-188)
/* complex XSD type 'gmd:CI_Date_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREDate_USCOREPropertyType {
      public:
        __gmd__CI_USCOREDate_USCOREPropertyType_sequence *__CI_USCOREDate_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDate_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDate_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDate_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREDate_USCOREPropertyType() : __CI_USCOREDate_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREDate_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14886 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence (-665)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_DateTypeCode' of XSD type 'gco:CodeListValue_Type'
        gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence() : CI_USCOREDateTypeCode() { }
        virtual ~__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:766 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType (-190)
/* complex XSD type 'gmd:CI_DateTypeCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREDateTypeCode_USCOREPropertyType {
      public:
        __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *__CI_USCOREDateTypeCode_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDateTypeCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDateTypeCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDateTypeCode_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREDateTypeCode_USCOREPropertyType() : __CI_USCOREDateTypeCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREDateTypeCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14912 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence (-668)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_ResponsibleParty' of XSD type 'gmd:CI_ResponsibleParty_Type'
        gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence() : CI_USCOREResponsibleParty() { }
        virtual ~__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:769 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType (-191)
/* complex XSD type 'gmd:CI_ResponsibleParty_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREResponsibleParty_USCOREPropertyType {
      public:
        __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *__CI_USCOREResponsibleParty_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREResponsibleParty_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREResponsibleParty_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREResponsibleParty_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREResponsibleParty_USCOREPropertyType() : __CI_USCOREResponsibleParty_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREResponsibleParty_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:14968 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence (-671)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREContact_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Contact' of XSD type 'gmd:CI_Contact_Type'
        gmd__CI_USCOREContact_USCOREType *CI_USCOREContact;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREContact_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREContact_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREContact_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREContact_USCOREPropertyType_sequence() : CI_USCOREContact() { }
        virtual ~__gmd__CI_USCOREContact_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:775 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType (-193)
/* complex XSD type 'gmd:CI_Contact_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREContact_USCOREPropertyType {
      public:
        __gmd__CI_USCOREContact_USCOREPropertyType_sequence *__CI_USCOREContact_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREContact_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREContact_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREContact_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREContact_USCOREPropertyType() : __CI_USCOREContact_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREContact_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15024 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence (-674)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCORETelephone_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Telephone' of XSD type 'gmd:CI_Telephone_Type'
        gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCORETelephone_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCORETelephone_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCORETelephone_USCOREPropertyType_sequence() : CI_USCORETelephone() { }
        virtual ~__gmd__CI_USCORETelephone_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:781 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType (-195)
/* complex XSD type 'gmd:CI_Telephone_PropertyType': */
class SOAP_CMAC gmd__CI_USCORETelephone_USCOREPropertyType {
      public:
        __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *__CI_USCORETelephone_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORETelephone_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORETelephone_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORETelephone_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORETelephone_USCOREPropertyType() : __CI_USCORETelephone_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORETelephone_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15080 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence (-677)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREAddress_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Address' of XSD type 'gmd:CI_Address_Type'
        gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREAddress_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREAddress_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREAddress_USCOREPropertyType_sequence() : CI_USCOREAddress() { }
        virtual ~__gmd__CI_USCOREAddress_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:787 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType (-197)
/* complex XSD type 'gmd:CI_Address_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREAddress_USCOREPropertyType {
      public:
        __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *__CI_USCOREAddress_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREAddress_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREAddress_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREAddress_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREAddress_USCOREPropertyType() : __CI_USCOREAddress_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREAddress_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15136 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence (-680)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_OnlineResource' of XSD type 'gmd:CI_OnlineResource_Type'
        gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence() : CI_USCOREOnlineResource() { }
        virtual ~__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:793 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType (-199)
/* complex XSD type 'gmd:CI_OnlineResource_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREOnlineResource_USCOREPropertyType {
      public:
        __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *__CI_USCOREOnlineResource_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnlineResource_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnlineResource_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnlineResource_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREOnlineResource_USCOREPropertyType() : __CI_USCOREOnlineResource_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREOnlineResource_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15192 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence (-683)
/* Wrapper: */
class SOAP_CMAC __gmd__URL_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:URL' of XSD type 'xsd:anyURI'
        std::string URL;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__URL_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__URL_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__URL_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__URL_USCOREPropertyType_sequence() : URL() { }
        virtual ~__gmd__URL_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__URL_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__URL_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:799 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType (-201)
/* complex XSD type 'gmd:URL_PropertyType': */
class SOAP_CMAC gmd__URL_USCOREPropertyType {
      public:
        __gmd__URL_USCOREPropertyType_sequence *__URL_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__URL_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__URL_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__URL_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__URL_USCOREPropertyType() : __URL_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__URL_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__URL_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__URL_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__URL_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15218 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence (-685)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_OnLineFunctionCode' of XSD type 'gco:CodeListValue_Type'
        gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence() : CI_USCOREOnLineFunctionCode() { }
        virtual ~__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:802 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-202)
/* complex XSD type 'gmd:CI_OnLineFunctionCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType {
      public:
        __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType() : __CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15244 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence (-687)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_RoleCode' of XSD type 'gco:CodeListValue_Type'
        gco__CodeListValue_USCOREType *CI_USCORERoleCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence() : CI_USCORERoleCode() { }
        virtual ~__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:805 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType (-203)
/* complex XSD type 'gmd:CI_RoleCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCORERoleCode_USCOREPropertyType {
      public:
        __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *__CI_USCORERoleCode_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORERoleCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORERoleCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORERoleCode_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORERoleCode_USCOREPropertyType() : __CI_USCORERoleCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCORERoleCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15270 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence (-689)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_PresentationFormCode' of XSD type 'gco:CodeListValue_Type'
        gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence() : CI_USCOREPresentationFormCode() { }
        virtual ~__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:808 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-204)
/* complex XSD type 'gmd:CI_PresentationFormCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREPresentationFormCode_USCOREPropertyType {
      public:
        __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREPresentationFormCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREPresentationFormCode_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREPresentationFormCode_USCOREPropertyType() : __CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREPresentationFormCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15296 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence (-691)
/* Wrapper: */
class SOAP_CMAC __gmd__CI_USCORESeries_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:CI_Series' of XSD type 'gmd:CI_Series_Type'
        gmd__CI_USCORESeries_USCOREType *CI_USCORESeries;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__CI_USCORESeries_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__CI_USCORESeries_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__CI_USCORESeries_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__CI_USCORESeries_USCOREPropertyType_sequence() : CI_USCORESeries() { }
        virtual ~__gmd__CI_USCORESeries_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:811 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType (-205)
/* complex XSD type 'gmd:CI_Series_PropertyType': */
class SOAP_CMAC gmd__CI_USCORESeries_USCOREPropertyType {
      public:
        __gmd__CI_USCORESeries_USCOREPropertyType_sequence *__CI_USCORESeries_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORESeries_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORESeries_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORESeries_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORESeries_USCOREPropertyType() : __CI_USCORESeries_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORESeries_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15352 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence (-694)
/* Wrapper: */
class SOAP_CMAC __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence {
      public:
        /// Required element 'gmd:DQ_EvaluationMethodTypeCode' of XSD type 'gco:CodeListValue_Type'
        gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence() : DQ_USCOREEvaluationMethodTypeCode() { }
        virtual ~__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:817 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-207)
/* complex XSD type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType': */
class SOAP_CMAC gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType {
      public:
        __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType() : __DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15386 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_DQ_USCOREResult_USCOREPropertyType (-697)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gmd__union_DQ_USCOREResult_USCOREPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:15378 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence (-696)
/* Wrapper: */
class SOAP_CMAC __gmd__DQ_USCOREResult_USCOREPropertyType_sequence {
      public:
        /// Union with union _gmd__union_DQ_USCOREResult_USCOREPropertyType variant selector __unionAbstractDQ_USCOREResult set to one of:
        int __unionAbstractDQ_USCOREResult;
        union _gmd__union_DQ_USCOREResult_USCOREPropertyType union_DQ_USCOREResult_USCOREPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gmd__DQ_USCOREResult_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gmd__DQ_USCOREResult_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gmd__DQ_USCOREResult_USCOREPropertyType_sequence() : __unionAbstractDQ_USCOREResult() { }
        virtual ~__gmd__DQ_USCOREResult_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:820 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType (-208)
/* complex XSD type 'gmd:DQ_Result_PropertyType': */
class SOAP_CMAC gmd__DQ_USCOREResult_USCOREPropertyType {
      public:
        __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *__DQ_USCOREResult_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__DQ_USCOREResult_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__DQ_USCOREResult_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__DQ_USCOREResult_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gmd__DQ_USCOREResult_USCOREPropertyType() : __DQ_USCOREResult_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__DQ_USCOREResult_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15459 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType (-700)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gts__union_TM_USCOREPrimitive_USCOREPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:15448 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence (-699)
/* Wrapper: */
class SOAP_CMAC __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence {
      public:
        /// Union with union _gts__union_TM_USCOREPrimitive_USCOREPropertyType variant selector __unionAbstractTimePrimitive set to one of:
        int __unionAbstractTimePrimitive;
        union _gts__union_TM_USCOREPrimitive_USCOREPropertyType union_TM_USCOREPrimitive_USCOREPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence() : __unionAbstractTimePrimitive() { }
        virtual ~__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:826 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType (-210)
/* complex XSD type 'gts:TM_Primitive_PropertyType': */
class SOAP_CMAC gts__TM_USCOREPrimitive_USCOREPropertyType {
      public:
        __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *__TM_USCOREPrimitive_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gts__TM_USCOREPrimitive_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gts__TM_USCOREPrimitive_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gts__TM_USCOREPrimitive_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gts__TM_USCOREPrimitive_USCOREPropertyType() : __TM_USCOREPrimitive_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gts__TM_USCOREPrimitive_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:829 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType (-211)
/* Type gco__AbstractObject_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gco:AbstractObject_Type': */
class SOAP_CMAC gco__AbstractObject_USCOREType {
      public:
        /// optional attribute 'id' of XSD type 'xsd:ID'
        std::string *id;
        /// optional attribute 'uuid' of XSD type 'xsd:string'
        std::string *uuid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__AbstractObject_USCOREType, default initialized and not managed by a soap context
        virtual gco__AbstractObject_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__AbstractObject_USCOREType); }
      public:
        /// Constructor with initializations
        gco__AbstractObject_USCOREType() : id(), uuid(), soap() { }
        virtual ~gco__AbstractObject_USCOREType() { }
        /// Friend allocator used by soap_new_gco__AbstractObject_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gco__AbstractObject_USCOREType * SOAP_FMAC2 soap_instantiate_gco__AbstractObject_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15573 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType (-704)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gco__union_CharacterString_USCOREPropertyType
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_CharacterString	(1)	/**< union variant selector value for member CharacterString */
        std::string *CharacterString;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode	(2)	/**< union variant selector value for member gmd__CI_USCOREDateTypeCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREDateTypeCode;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode_	(3)	/**< union variant selector value for member gmd__CI_USCOREDateTypeCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREDateTypeCode_;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode	(4)	/**< union variant selector value for member gmd__CI_USCOREOnLineFunctionCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREOnLineFunctionCode;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode_	(5)	/**< union variant selector value for member gmd__CI_USCOREOnLineFunctionCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREOnLineFunctionCode_;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode	(6)	/**< union variant selector value for member gmd__CI_USCORERoleCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCORERoleCode;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode_	(7)	/**< union variant selector value for member gmd__CI_USCORERoleCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCORERoleCode_;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode	(8)	/**< union variant selector value for member gmd__CI_USCOREPresentationFormCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREPresentationFormCode;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode_	(9)	/**< union variant selector value for member gmd__CI_USCOREPresentationFormCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREPresentationFormCode_;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode	(10)	/**< union variant selector value for member gmd__DQ_USCOREEvaluationMethodTypeCode */
        gco__CodeListValue_USCOREType *gmd__DQ_USCOREEvaluationMethodTypeCode;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode_	(11)	/**< union variant selector value for member gmd__DQ_USCOREEvaluationMethodTypeCode_ */
        gco__CodeListValue_USCOREType *gmd__DQ_USCOREEvaluationMethodTypeCode_;
};
#endif

/* witsml1_4_1_1ForGsoap.h:15544 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence (-703)
/* Wrapper: */
class SOAP_CMAC __gco__CharacterString_USCOREPropertyType_sequence {
      public:
        /// Union with union _gco__union_CharacterString_USCOREPropertyType variant selector __unionCharacterString set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_CharacterString SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode_ SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode_ SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode_ SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode_ SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode_
        int __unionCharacterString;
        union _gco__union_CharacterString_USCOREPropertyType union_CharacterString_USCOREPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gco__CharacterString_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gco__CharacterString_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gco__CharacterString_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gco__CharacterString_USCOREPropertyType_sequence() : __unionCharacterString() { }
        virtual ~__gco__CharacterString_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:832 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType (-212)
/* complex XSD type 'gco:CharacterString_PropertyType': */
class SOAP_CMAC gco__CharacterString_USCOREPropertyType {
      public:
        __gco__CharacterString_USCOREPropertyType_sequence *__CharacterString_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__CharacterString_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__CharacterString_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__CharacterString_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gco__CharacterString_USCOREPropertyType() : __CharacterString_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__CharacterString_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__CharacterString_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__CharacterString_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15597 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence (-706)
/* Wrapper: */
class SOAP_CMAC __gco__Boolean_USCOREPropertyType_sequence {
      public:
        /// Required element 'gco:Boolean' of XSD type 'xsd:boolean'
        bool Boolean;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gco__Boolean_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gco__Boolean_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gco__Boolean_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gco__Boolean_USCOREPropertyType_sequence() : Boolean() { }
        virtual ~__gco__Boolean_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gco__Boolean_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:835 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType (-213)
/* complex XSD type 'gco:Boolean_PropertyType': */
class SOAP_CMAC gco__Boolean_USCOREPropertyType {
      public:
        __gco__Boolean_USCOREPropertyType_sequence *__Boolean_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Boolean_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Boolean_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Boolean_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gco__Boolean_USCOREPropertyType() : __Boolean_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__Boolean_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Boolean_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Boolean_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Boolean_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15623 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence (-708)
/* Wrapper: */
class SOAP_CMAC __gco__Real_USCOREPropertyType_sequence {
      public:
        /// Required element 'gco:Real' of XSD type 'xsd:double'
        double Real;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gco__Real_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gco__Real_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gco__Real_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gco__Real_USCOREPropertyType_sequence() : Real() { }
        virtual ~__gco__Real_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gco__Real_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Real_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:838 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType (-214)
/* complex XSD type 'gco:Real_PropertyType': */
class SOAP_CMAC gco__Real_USCOREPropertyType {
      public:
        __gco__Real_USCOREPropertyType_sequence *__Real_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Real_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Real_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Real_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gco__Real_USCOREPropertyType() : __Real_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__Real_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Real_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Real_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Real_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15657 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType (-712)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gco__union_Date_USCOREPropertyType
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_Date	(1)	/**< union variant selector value for member Date */
        std::string *Date;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_DateTime	(2)	/**< union variant selector value for member DateTime */
        struct tm *DateTime;
};
#endif

/* witsml1_4_1_1ForGsoap.h:841 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType (-215)
/* complex XSD type 'gco:Date_PropertyType': */
class SOAP_CMAC gco__Date_USCOREPropertyType {
      public:
        /// Union with union _gco__union_Date_USCOREPropertyType variant selector __union_Date_USCOREPropertyType set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_Date SOAP_UNION_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_DateTime
        int __union_Date_USCOREPropertyType;
        union _gco__union_Date_USCOREPropertyType union_Date_USCOREPropertyType;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Date_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Date_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Date_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gco__Date_USCOREPropertyType() : __union_Date_USCOREPropertyType(), gco__nilReason(), soap() { }
        virtual ~gco__Date_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Date_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Date_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Date_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15679 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence (-713)
/* Wrapper: */
class SOAP_CMAC __gco__DateTime_USCOREPropertyType_sequence {
      public:
        /// Typedef xsd__dateTime with custom serializer for struct tm
        struct tm DateTime;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gco__DateTime_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gco__DateTime_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gco__DateTime_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gco__DateTime_USCOREPropertyType_sequence() : DateTime() { }
        virtual ~__gco__DateTime_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gco__DateTime_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:847 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType (-217)
/* complex XSD type 'gco:DateTime_PropertyType': */
class SOAP_CMAC gco__DateTime_USCOREPropertyType {
      public:
        __gco__DateTime_USCOREPropertyType_sequence *__DateTime_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__DateTime_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__DateTime_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__DateTime_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gco__DateTime_USCOREPropertyType() : __DateTime_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__DateTime_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__DateTime_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__DateTime_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:15724 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gsr__union_SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gsr__union_SC_USCORECRS_USCOREPropertyType (-716)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gsr__union_SC_USCORECRS_USCOREPropertyType
{
};
#endif

/* witsml1_4_1_1ForGsoap.h:15713 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence (-715)
/* Wrapper: */
class SOAP_CMAC __gsr__SC_USCORECRS_USCOREPropertyType_sequence {
      public:
        /// Union with union _gsr__union_SC_USCORECRS_USCOREPropertyType variant selector __unionAbstractCRS set to one of:
        int __unionAbstractCRS;
        union _gsr__union_SC_USCORECRS_USCOREPropertyType union_SC_USCORECRS_USCOREPropertyType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type __gsr__SC_USCORECRS_USCOREPropertyType_sequence, default initialized and not managed by a soap context
        virtual __gsr__SC_USCORECRS_USCOREPropertyType_sequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(__gsr__SC_USCORECRS_USCOREPropertyType_sequence); }
      public:
        /// Constructor with initializations
        __gsr__SC_USCORECRS_USCOREPropertyType_sequence() : __unionAbstractCRS() { }
        virtual ~__gsr__SC_USCORECRS_USCOREPropertyType_sequence() { }
        /// Friend allocator used by soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, int)
        friend SOAP_FMAC1 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:850 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType (-218)
/* complex XSD type 'gsr:SC_CRS_PropertyType': */
class SOAP_CMAC gsr__SC_USCORECRS_USCOREPropertyType {
      public:
        __gsr__SC_USCORECRS_USCOREPropertyType_sequence *__SC_USCORECRS_USCOREPropertyType_sequence;
        /// optional attribute 'gco:nilReason' of XSD type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// optional attribute 'uuidref' of XSD type 'xsd:string'
        std::string *uuidref;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gsr__SC_USCORECRS_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gsr__SC_USCORECRS_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gsr__SC_USCORECRS_USCOREPropertyType); }
      public:
        /// Constructor with initializations
        gsr__SC_USCORECRS_USCOREPropertyType() : __SC_USCORECRS_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gsr__SC_USCORECRS_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:238 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers (-14)
/* Type witsml1__obj_USCOREformationMarkers is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_formationMarkers': */
class SOAP_CMAC witsml1__obj_USCOREformationMarkers : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:formationMarker' of XSD type 'witsml1:obj_formationMarker'
        std::vector<witsml1__obj_USCOREformationMarker *> formationMarker;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREformationMarkers, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREformationMarkers *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREformationMarkers); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREformationMarkers() : documentInfo(), formationMarker(), version() { }
        virtual ~witsml1__obj_USCOREformationMarkers() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREformationMarkers(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREformationMarkers * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREformationMarkers(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:472 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems (-92)
/* Type witsml1__obj_USCOREcoordinateReferenceSystems is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_coordinateReferenceSystems': */
class SOAP_CMAC witsml1__obj_USCOREcoordinateReferenceSystems : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:coordinateReferenceSystem' of XSD type 'witsml1:obj_coordinateReferenceSystem'
        std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> coordinateReferenceSystem;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREcoordinateReferenceSystems, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREcoordinateReferenceSystems *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREcoordinateReferenceSystems); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREcoordinateReferenceSystems() : documentInfo(), coordinateReferenceSystem(), version() { }
        virtual ~witsml1__obj_USCOREcoordinateReferenceSystems() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREcoordinateReferenceSystems * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:487 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs (-97)
/* Type witsml1__obj_USCORElogs is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_logs': */
class SOAP_CMAC witsml1__obj_USCORElogs : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:log' of XSD type 'witsml1:obj_log'
        std::vector<witsml1__obj_USCORElog *> log;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCORElogs, default initialized and not managed by a soap context
        virtual witsml1__obj_USCORElogs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCORElogs); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCORElogs() : documentInfo(), log(), version() { }
        virtual ~witsml1__obj_USCORElogs() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCORElogs(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCORElogs * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCORElogs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:502 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys (-102)
/* Type witsml1__obj_USCOREtrajectorys is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_trajectorys': */
class SOAP_CMAC witsml1__obj_USCOREtrajectorys : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:trajectory' of XSD type 'witsml1:obj_trajectory'
        std::vector<witsml1__obj_USCOREtrajectory *> trajectory;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREtrajectorys, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREtrajectorys *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREtrajectorys); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREtrajectorys() : documentInfo(), trajectory(), version() { }
        virtual ~witsml1__obj_USCOREtrajectorys() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREtrajectorys(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREtrajectorys * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREtrajectorys(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:532 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores (-112)
/* Type witsml1__obj_USCOREwellbores is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_wellbores': */
class SOAP_CMAC witsml1__obj_USCOREwellbores : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:wellbore' of XSD type 'witsml1:obj_wellbore'
        std::vector<witsml1__obj_USCOREwellbore *> wellbore;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREwellbores, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREwellbores *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREwellbores); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREwellbores() : documentInfo(), wellbore(), version() { }
        virtual ~witsml1__obj_USCOREwellbores() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREwellbores(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREwellbores * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwellbores(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:538 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells (-114)
/* Type witsml1__obj_USCOREwells is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'witsml1:obj_wells': */
class SOAP_CMAC witsml1__obj_USCOREwells : public abstract__abstractObject {
      public:
        /// Optional element 'witsml1:documentInfo' of XSD type 'witsml1:cs_documentInfo'
        witsml1__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml1:well' of XSD type 'witsml1:obj_well'
        std::vector<witsml1__obj_USCOREwell *> well;
        /// required attribute 'version' of XSD type 'witsml1:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__obj_USCOREwells, default initialized and not managed by a soap context
        virtual witsml1__obj_USCOREwells *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__obj_USCOREwells); }
      public:
        /// Constructor with initializations
        witsml1__obj_USCOREwells() : documentInfo(), well(), version() { }
        virtual ~witsml1__obj_USCOREwells() { }
        /// Friend allocator used by soap_new_witsml1__obj_USCOREwells(struct soap*, int)
        friend SOAP_FMAC1 witsml1__obj_USCOREwells * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwells(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:586 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType (-130)
/* Type gml__DefinitionBaseType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:DefinitionBaseType': */
class SOAP_CMAC gml__DefinitionBaseType {
      public:
        /// Optional element 'gml:description' of XSD type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XSD type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Required element 'gml:identifier' of XSD type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XSD type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// required attribute 'gml:id' of XSD type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__DefinitionBaseType, default initialized and not managed by a soap context
        virtual gml__DefinitionBaseType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__DefinitionBaseType); }
      public:
        /// Constructor with initializations
        gml__DefinitionBaseType() : description(), descriptionReference(), identifier(), name(), gml__id(), soap() { }
        virtual ~gml__DefinitionBaseType() { }
        /// Friend allocator used by soap_new_gml__DefinitionBaseType(struct soap*, int)
        friend SOAP_FMAC1 gml__DefinitionBaseType * SOAP_FMAC2 soap_instantiate_gml__DefinitionBaseType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:592 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType (-132)
/* simple XSD type 'gml:StringOrRefType': */
class SOAP_CMAC gml__StringOrRefType {
      public:
        /// Simple content of XSD type 'xsd:string' wrapped by this struct
        std::string __item;
        /// optional attribute 'nilReason' of XSD type 'gml:NilReasonType'
        std::string *nilReason;
        /// optional attribute 'xlink:type' of XSD type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// optional attribute 'xlink:href' of XSD type 'xsd:anyURI'
        std::string *xlink__href;
        /// optional attribute 'xlink:role' of XSD type 'xsd:anyURI'
        std::string *xlink__role;
        /// optional attribute 'xlink:arcrole' of XSD type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// optional attribute 'xlink:title' of XSD type 'xsd:string'
        std::string *xlink__title;
        /// optional attribute 'xlink:show' of XSD type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// optional attribute 'xlink:actuate' of XSD type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__StringOrRefType, default initialized and not managed by a soap context
        virtual gml__StringOrRefType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__StringOrRefType); }
      public:
        /// Constructor with initializations
        gml__StringOrRefType() : __item(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__StringOrRefType() { }
        /// Friend allocator used by soap_new_gml__StringOrRefType(struct soap*, int)
        friend SOAP_FMAC1 gml__StringOrRefType * SOAP_FMAC2 soap_instantiate_gml__StringOrRefType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:601 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType (-135)
/* simple XSD type 'gml:CodeType': */
class SOAP_CMAC gml__CodeType {
      public:
        /// Simple content of XSD type 'xsd:string' wrapped by this struct
        std::string __item;
        /// optional attribute 'codeSpace' of XSD type 'xsd:anyURI'
        std::string *codeSpace;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CodeType, default initialized and not managed by a soap context
        virtual gml__CodeType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CodeType); }
      public:
        /// Constructor with initializations
        gml__CodeType() : __item(), codeSpace(), soap() { }
        virtual ~gml__CodeType() { }
        /// Friend allocator used by soap_new_gml__CodeType(struct soap*, int)
        friend SOAP_FMAC1 gml__CodeType * SOAP_FMAC2 soap_instantiate_gml__CodeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:607 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType (-137)
/* Type gml__AbstractTimeObjectType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractTimeObjectType': */
class SOAP_CMAC gml__AbstractTimeObjectType : public gml__AbstractGMLType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractTimeObjectType, default initialized and not managed by a soap context
        virtual gml__AbstractTimeObjectType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractTimeObjectType); }
      public:
        /// Constructor with initializations
        gml__AbstractTimeObjectType() { }
        virtual ~gml__AbstractTimeObjectType() { }
        /// Friend allocator used by soap_new_gml__AbstractTimeObjectType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractTimeObjectType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimeObjectType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:610 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType (-138)
/* Type gml__RelatedTimeType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:RelatedTimeType': */
class SOAP_CMAC gml__RelatedTimeType : public gml__TimePrimitivePropertyType {
      public:
        /// optional attribute 'relativePosition' of XSD type 'gml:RelatedTimeType-relativePosition'
        enum _gml__RelatedTimeType_relativePosition *relativePosition;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__RelatedTimeType, default initialized and not managed by a soap context
        virtual gml__RelatedTimeType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__RelatedTimeType); }
      public:
        /// Constructor with initializations
        gml__RelatedTimeType() : relativePosition() { }
        virtual ~gml__RelatedTimeType() { }
        /// Friend allocator used by soap_new_gml__RelatedTimeType(struct soap*, int)
        friend SOAP_FMAC1 gml__RelatedTimeType * SOAP_FMAC2 soap_instantiate_gml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:661 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType (-155)
/* Type gml__MeasureType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'gml:MeasureType': */
class SOAP_CMAC gml__MeasureType {
      public:
        /// Simple content of XSD type 'xsd:double' wrapped by this struct
        double __item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__MeasureType, default initialized and not managed by a soap context
        virtual gml__MeasureType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__MeasureType); }
      public:
        /// Constructor with initializations
        gml__MeasureType() : __item(), soap() { }
        virtual ~gml__MeasureType() { }
        /// Friend allocator used by soap_new_gml__MeasureType(struct soap*, int)
        friend SOAP_FMAC1 gml__MeasureType * SOAP_FMAC2 soap_instantiate_gml__MeasureType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:721 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType (-175)
/* Type gmd__EX_USCOREExtent_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:EX_Extent_Type': */
class SOAP_CMAC gmd__EX_USCOREExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:description' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *description;
        /// Optional element 'gmd:geographicElement' of XSD type 'gmd:EX_GeographicExtent_PropertyType'
        std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> geographicElement;
        /// Optional element 'gmd:temporalElement' of XSD type 'gmd:EX_TemporalExtent_PropertyType'
        std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> temporalElement;
        /// Optional element 'gmd:verticalElement' of XSD type 'gmd:EX_VerticalExtent_PropertyType'
        std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> verticalElement;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREExtent_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCOREExtent_USCOREType() : description(), geographicElement(), temporalElement(), verticalElement() { }
        virtual ~gmd__EX_USCOREExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:727 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType (-177)
/* Type gmd__AbstractEX_USCOREGeographicExtent_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:AbstractEX_GeographicExtent_Type': */
class SOAP_CMAC gmd__AbstractEX_USCOREGeographicExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:extentTypeCode' of XSD type 'gco:Boolean_PropertyType'
        gco__Boolean_USCOREPropertyType *extentTypeCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractEX_USCOREGeographicExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractEX_USCOREGeographicExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractEX_USCOREGeographicExtent_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__AbstractEX_USCOREGeographicExtent_USCOREType() : extentTypeCode() { }
        virtual ~gmd__AbstractEX_USCOREGeographicExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:733 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType (-179)
/* Type gmd__EX_USCORETemporalExtent_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:EX_TemporalExtent_Type': */
class SOAP_CMAC gmd__EX_USCORETemporalExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:extent' of XSD type 'gts:TM_Primitive_PropertyType'
        gts__TM_USCOREPrimitive_USCOREPropertyType *extent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCORETemporalExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCORETemporalExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCORETemporalExtent_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCORETemporalExtent_USCOREType() : extent() { }
        virtual ~gmd__EX_USCORETemporalExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:739 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType (-181)
/* Type gmd__EX_USCOREVerticalExtent_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:EX_VerticalExtent_Type': */
class SOAP_CMAC gmd__EX_USCOREVerticalExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:minimumValue' of XSD type 'gco:Real_PropertyType'
        gco__Real_USCOREPropertyType *minimumValue;
        /// Required element 'gmd:maximumValue' of XSD type 'gco:Real_PropertyType'
        gco__Real_USCOREPropertyType *maximumValue;
        /// Required element 'gmd:verticalCRS' of XSD type 'gsr:SC_CRS_PropertyType'
        gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREVerticalExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREVerticalExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREVerticalExtent_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__EX_USCOREVerticalExtent_USCOREType() : minimumValue(), maximumValue(), verticalCRS() { }
        virtual ~gmd__EX_USCOREVerticalExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:745 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType (-183)
/* Type gmd__AbstractDQ_USCOREElement_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:AbstractDQ_Element_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREElement_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:nameOfMeasure' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> nameOfMeasure;
        /// Optional element 'gmd:measureIdentification' of XSD type 'gmd:MD_Identifier_PropertyType'
        gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification;
        /// Optional element 'gmd:measureDescription' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *measureDescription;
        /// Optional element 'gmd:evaluationMethodType' of XSD type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType'
        gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType;
        /// Optional element 'gmd:evaluationMethodDescription' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *evaluationMethodDescription;
        /// Optional element 'gmd:evaluationProcedure' of XSD type 'gmd:CI_Citation_PropertyType'
        gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure;
        /// Optional element 'gmd:dateTime' of XSD type 'gco:DateTime_PropertyType'
        std::vector<gco__DateTime_USCOREPropertyType *> dateTime;
        /// Sequence of 1 to 2 elements 'gmd:result' of XSD type 'gmd:DQ_Result_PropertyType'
        std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> result;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREElement_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREElement_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREElement_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__AbstractDQ_USCOREElement_USCOREType() : nameOfMeasure(), measureIdentification(), measureDescription(), evaluationMethodType(), evaluationMethodDescription(), evaluationProcedure(), dateTime(), result() { }
        virtual ~gmd__AbstractDQ_USCOREElement_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:751 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType (-185)
/* Type gmd__MD_USCOREIdentifier_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:MD_Identifier_Type': */
class SOAP_CMAC gmd__MD_USCOREIdentifier_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:authority' of XSD type 'gmd:CI_Citation_PropertyType'
        gmd__CI_USCORECitation_USCOREPropertyType *authority;
        /// Required element 'gmd:code' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *code;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__MD_USCOREIdentifier_USCOREType, default initialized and not managed by a soap context
        virtual gmd__MD_USCOREIdentifier_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__MD_USCOREIdentifier_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__MD_USCOREIdentifier_USCOREType() : authority(), code() { }
        virtual ~gmd__MD_USCOREIdentifier_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:757 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType (-187)
/* Type gmd__CI_USCORECitation_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Citation_Type': */
class SOAP_CMAC gmd__CI_USCORECitation_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:title' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *title;
        /// Optional element 'gmd:alternateTitle' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> alternateTitle;
        /// Required element 'gmd:date' of XSD type 'gmd:CI_Date_PropertyType'
        std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> date;
        /// Optional element 'gmd:edition' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *edition;
        /// Optional element 'gmd:editionDate' of XSD type 'gco:Date_PropertyType'
        gco__Date_USCOREPropertyType *editionDate;
        /// Optional element 'gmd:identifier' of XSD type 'gmd:MD_Identifier_PropertyType'
        std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> identifier;
        /// Optional element 'gmd:citedResponsibleParty' of XSD type 'gmd:CI_ResponsibleParty_PropertyType'
        std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> citedResponsibleParty;
        /// Optional element 'gmd:presentationForm' of XSD type 'gmd:CI_PresentationFormCode_PropertyType'
        std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> presentationForm;
        /// Optional element 'gmd:series' of XSD type 'gmd:CI_Series_PropertyType'
        gmd__CI_USCORESeries_USCOREPropertyType *series;
        /// Optional element 'gmd:otherCitationDetails' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *otherCitationDetails;
        /// Optional element 'gmd:collectiveTitle' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *collectiveTitle;
        /// Optional element 'gmd:ISBN' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *ISBN;
        /// Optional element 'gmd:ISSN' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *ISSN;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORECitation_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORECitation_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORECitation_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORECitation_USCOREType() : title(), alternateTitle(), date(), edition(), editionDate(), identifier(), citedResponsibleParty(), presentationForm(), series(), otherCitationDetails(), collectiveTitle(), ISBN(), ISSN() { }
        virtual ~gmd__CI_USCORECitation_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORECitation_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:763 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType (-189)
/* Type gmd__CI_USCOREDate_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Date_Type': */
class SOAP_CMAC gmd__CI_USCOREDate_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:date' of XSD type 'gco:Date_PropertyType'
        gco__Date_USCOREPropertyType *date;
        /// Required element 'gmd:dateType' of XSD type 'gmd:CI_DateTypeCode_PropertyType'
        gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDate_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDate_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDate_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREDate_USCOREType() : date(), dateType() { }
        virtual ~gmd__CI_USCOREDate_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDate_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:772 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType (-192)
/* Type gmd__CI_USCOREResponsibleParty_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_ResponsibleParty_Type': */
class SOAP_CMAC gmd__CI_USCOREResponsibleParty_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:individualName' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *individualName;
        /// Optional element 'gmd:organisationName' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *organisationName;
        /// Optional element 'gmd:positionName' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *positionName;
        /// Optional element 'gmd:contactInfo' of XSD type 'gmd:CI_Contact_PropertyType'
        gmd__CI_USCOREContact_USCOREPropertyType *contactInfo;
        /// Required element 'gmd:role' of XSD type 'gmd:CI_RoleCode_PropertyType'
        gmd__CI_USCORERoleCode_USCOREPropertyType *role;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREResponsibleParty_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREResponsibleParty_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREResponsibleParty_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREResponsibleParty_USCOREType() : individualName(), organisationName(), positionName(), contactInfo(), role() { }
        virtual ~gmd__CI_USCOREResponsibleParty_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:778 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType (-194)
/* Type gmd__CI_USCOREContact_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Contact_Type': */
class SOAP_CMAC gmd__CI_USCOREContact_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:phone' of XSD type 'gmd:CI_Telephone_PropertyType'
        gmd__CI_USCORETelephone_USCOREPropertyType *phone;
        /// Optional element 'gmd:address' of XSD type 'gmd:CI_Address_PropertyType'
        gmd__CI_USCOREAddress_USCOREPropertyType *address;
        /// Optional element 'gmd:onlineResource' of XSD type 'gmd:CI_OnlineResource_PropertyType'
        gmd__CI_USCOREOnlineResource_USCOREPropertyType *onlineResource;
        /// Optional element 'gmd:hoursOfService' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *hoursOfService;
        /// Optional element 'gmd:contactInstructions' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *contactInstructions;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREContact_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREContact_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREContact_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREContact_USCOREType() : phone(), address(), onlineResource(), hoursOfService(), contactInstructions() { }
        virtual ~gmd__CI_USCOREContact_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREContact_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:784 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType (-196)
/* Type gmd__CI_USCORETelephone_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Telephone_Type': */
class SOAP_CMAC gmd__CI_USCORETelephone_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:voice' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> voice;
        /// Optional element 'gmd:facsimile' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> facsimile;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORETelephone_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORETelephone_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORETelephone_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORETelephone_USCOREType() : voice(), facsimile() { }
        virtual ~gmd__CI_USCORETelephone_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORETelephone_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:790 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType (-198)
/* Type gmd__CI_USCOREAddress_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Address_Type': */
class SOAP_CMAC gmd__CI_USCOREAddress_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:deliveryPoint' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> deliveryPoint;
        /// Optional element 'gmd:city' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *city;
        /// Optional element 'gmd:administrativeArea' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *administrativeArea;
        /// Optional element 'gmd:postalCode' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *postalCode;
        /// Optional element 'gmd:country' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *country;
        /// Optional element 'gmd:electronicMailAddress' of XSD type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> electronicMailAddress;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREAddress_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREAddress_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREAddress_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREAddress_USCOREType() : deliveryPoint(), city(), administrativeArea(), postalCode(), country(), electronicMailAddress() { }
        virtual ~gmd__CI_USCOREAddress_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREAddress_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:796 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType (-200)
/* Type gmd__CI_USCOREOnlineResource_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_OnlineResource_Type': */
class SOAP_CMAC gmd__CI_USCOREOnlineResource_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:linkage' of XSD type 'gmd:URL_PropertyType'
        gmd__URL_USCOREPropertyType *linkage;
        /// Optional element 'gmd:protocol' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *protocol;
        /// Optional element 'gmd:applicationProfile' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *applicationProfile;
        /// Optional element 'gmd:name' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *name;
        /// Optional element 'gmd:description' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *description;
        /// Optional element 'gmd:function' of XSD type 'gmd:CI_OnLineFunctionCode_PropertyType'
        gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *function;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnlineResource_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnlineResource_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnlineResource_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCOREOnlineResource_USCOREType() : linkage(), protocol(), applicationProfile(), name(), description(), function() { }
        virtual ~gmd__CI_USCOREOnlineResource_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:814 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType (-206)
/* Type gmd__CI_USCORESeries_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:CI_Series_Type': */
class SOAP_CMAC gmd__CI_USCORESeries_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:name' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *name;
        /// Optional element 'gmd:issueIdentification' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *issueIdentification;
        /// Optional element 'gmd:page' of XSD type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *page;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORESeries_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORESeries_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORESeries_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__CI_USCORESeries_USCOREType() : name(), issueIdentification(), page() { }
        virtual ~gmd__CI_USCORESeries_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORESeries_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:823 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType (-209)
/* Type gmd__AbstractDQ_USCOREResult_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:AbstractDQ_Result_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREResult_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREResult_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREResult_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREResult_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__AbstractDQ_USCOREResult_USCOREType() { }
        virtual ~gmd__AbstractDQ_USCOREResult_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:844 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType (-216)
/* simple XSD type 'gco:CodeListValue_Type': */
class SOAP_CMAC gco__CodeListValue_USCOREType {
      public:
        /// Simple content of XSD type 'xsd:string' wrapped by this struct
        std::string __item;
        /// required attribute 'codeList' of XSD type 'xsd:anyURI'
        std::string codeList;
        /// required attribute 'codeListValue' of XSD type 'xsd:anyURI'
        std::string codeListValue;
        /// optional attribute 'codeSpace' of XSD type 'xsd:anyURI'
        std::string *codeSpace;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__CodeListValue_USCOREType, default initialized and not managed by a soap context
        virtual gco__CodeListValue_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__CodeListValue_USCOREType); }
      public:
        /// Constructor with initializations
        gco__CodeListValue_USCOREType() : __item(), codeList(), codeListValue(), codeSpace(), soap() { }
        virtual ~gco__CodeListValue_USCOREType() { }
        /// Friend allocator used by soap_new_gco__CodeListValue_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gco__CodeListValue_USCOREType * SOAP_FMAC2 soap_instantiate_gco__CodeListValue_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:316 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost (-40)
/* simple XSD type 'witsml1:cost': */
class SOAP_CMAC witsml1__cost {
      public:
        /// Simple content of XSD type 'witsml1:abstractDouble' wrapped by this struct
        double __item;
        /// optional attribute 'currency' of XSD type 'witsml1:kindString'
        std::string *currency;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__cost, default initialized and not managed by a soap context
        virtual witsml1__cost *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__cost); }
      public:
        /// Constructor with initializations
        witsml1__cost() : __item(), currency(), soap() { }
        virtual ~witsml1__cost() { }
        /// Friend allocator used by soap_new_witsml1__cost(struct soap*, int)
        friend SOAP_FMAC1 witsml1__cost * SOAP_FMAC2 soap_instantiate_witsml1__cost(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:448 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure (-84)
/* Type witsml1__abstractMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:abstractMeasure': */
class SOAP_CMAC witsml1__abstractMeasure {
      public:
        /// Simple content of XSD type 'witsml1:abstractDouble' wrapped by this struct
        double __item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__abstractMeasure, default initialized and not managed by a soap context
        virtual witsml1__abstractMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__abstractMeasure); }
      public:
        /// Constructor with initializations
        witsml1__abstractMeasure() : __item(), soap() { }
        virtual ~witsml1__abstractMeasure() { }
        /// Friend allocator used by soap_new_witsml1__abstractMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__abstractMeasure * SOAP_FMAC2 soap_instantiate_witsml1__abstractMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:583 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType (-129)
/* Type gml__DefinitionType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:DefinitionType': */
class SOAP_CMAC gml__DefinitionType : public gml__DefinitionBaseType {
      public:
        /// Optional element 'gml:remarks' of XSD type 'xsd:string'
        std::string *remarks;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__DefinitionType, default initialized and not managed by a soap context
        virtual gml__DefinitionType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__DefinitionType); }
      public:
        /// Constructor with initializations
        gml__DefinitionType() : remarks() { }
        virtual ~gml__DefinitionType() { }
        /// Friend allocator used by soap_new_gml__DefinitionType(struct soap*, int)
        friend SOAP_FMAC1 gml__DefinitionType * SOAP_FMAC2 soap_instantiate_gml__DefinitionType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:598 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType (-134)
/* simple XSD type 'gml:CodeWithAuthorityType': */
class SOAP_CMAC gml__CodeWithAuthorityType {
      public:
        /// Simple content of XSD type 'xsd:string' wrapped by this struct
        std::string __item;
        /// required attribute 'codeSpace' of XSD type 'xsd:anyURI'
        std::string codeSpace;
        /// optional attribute 'codeSpace' of XSD type 'xsd:anyURI'
        std::string *codeSpace_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CodeWithAuthorityType, default initialized and not managed by a soap context
        virtual gml__CodeWithAuthorityType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CodeWithAuthorityType); }
      public:
        /// Constructor with initializations
        gml__CodeWithAuthorityType() : __item(), codeSpace(), codeSpace_(), soap() { }
        virtual ~gml__CodeWithAuthorityType() { }
        /// Friend allocator used by soap_new_gml__CodeWithAuthorityType(struct soap*, int)
        friend SOAP_FMAC1 gml__CodeWithAuthorityType * SOAP_FMAC2 soap_instantiate_gml__CodeWithAuthorityType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:604 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType (-136)
/* Type gml__AbstractTimePrimitiveType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractTimePrimitiveType': */
class SOAP_CMAC gml__AbstractTimePrimitiveType : public gml__AbstractTimeObjectType {
      public:
        /// Optional element 'gml:relatedTime' of XSD type 'gml:RelatedTimeType'
        std::vector<gml__RelatedTimeType *> relatedTime;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractTimePrimitiveType, default initialized and not managed by a soap context
        virtual gml__AbstractTimePrimitiveType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractTimePrimitiveType); }
      public:
        /// Constructor with initializations
        gml__AbstractTimePrimitiveType() : relatedTime() { }
        virtual ~gml__AbstractTimePrimitiveType() { }
        /// Friend allocator used by soap_new_gml__AbstractTimePrimitiveType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractTimePrimitiveType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimePrimitiveType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:658 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType (-154)
/* Type gml__AngleType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'gml:AngleType': */
class SOAP_CMAC gml__AngleType : public gml__MeasureType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AngleType, default initialized and not managed by a soap context
        virtual gml__AngleType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AngleType); }
      public:
        /// Constructor with initializations
        gml__AngleType() { }
        virtual ~gml__AngleType() { }
        /// Friend allocator used by soap_new_gml__AngleType(struct soap*, int)
        friend SOAP_FMAC1 gml__AngleType * SOAP_FMAC2 soap_instantiate_gml__AngleType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:670 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType (-158)
/* Type gml__LengthType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'gml:LengthType': */
class SOAP_CMAC gml__LengthType : public gml__MeasureType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__LengthType, default initialized and not managed by a soap context
        virtual gml__LengthType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__LengthType); }
      public:
        /// Constructor with initializations
        gml__LengthType() { }
        virtual ~gml__LengthType() { }
        /// Friend allocator used by soap_new_gml__LengthType(struct soap*, int)
        friend SOAP_FMAC1 gml__LengthType * SOAP_FMAC2 soap_instantiate_gml__LengthType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:742 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType (-182)
/* Type gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gmd:AbstractDQ_PositionalAccuracy_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType : public gmd__AbstractDQ_USCOREElement_USCOREType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType); }
      public:
        /// Constructor with initializations
        gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType() { }
        virtual ~gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:250 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone (-18)
/* simple XSD type 'witsml1:timestampedTimeZone': */
class SOAP_CMAC witsml1__timestampedTimeZone {
      public:
        /// Simple content of XSD type 'witsml1:abstractTimeZone' wrapped by this struct
        std::string __item;
        /// optional attribute 'dTim' of XSD type 'witsml1:timestamp'
        struct tm *dTim;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__timestampedTimeZone, default initialized and not managed by a soap context
        virtual witsml1__timestampedTimeZone *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__timestampedTimeZone); }
      public:
        /// Constructor with initializations
        witsml1__timestampedTimeZone() : __item(), dTim(), soap() { }
        virtual ~witsml1__timestampedTimeZone() { }
        /// Friend allocator used by soap_new_witsml1__timestampedTimeZone(struct soap*, int)
        friend SOAP_FMAC1 witsml1__timestampedTimeZone * SOAP_FMAC2 soap_instantiate_witsml1__timestampedTimeZone(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:253 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth (-19)
/* Type witsml1__yAxisAzimuth is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:yAxisAzimuth': */
class SOAP_CMAC witsml1__yAxisAzimuth : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PlaneAngleUom'
        enum witsml1__PlaneAngleUom uom;
        /// optional attribute 'northDirection' of XSD type 'witsml1:AziRef'
        enum witsml1__AziRef *northDirection;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__yAxisAzimuth, default initialized and not managed by a soap context
        virtual witsml1__yAxisAzimuth *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__yAxisAzimuth); }
      public:
        /// Constructor with initializations
        witsml1__yAxisAzimuth() : uom(), northDirection() { }
        virtual ~witsml1__yAxisAzimuth() { }
        /// Friend allocator used by soap_new_witsml1__yAxisAzimuth(struct soap*, int)
        friend SOAP_FMAC1 witsml1__yAxisAzimuth * SOAP_FMAC2 soap_instantiate_witsml1__yAxisAzimuth(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:256 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent (-20)
/* Type witsml1__volumePerVolumeMeasurePercent is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:volumePerVolumeMeasurePercent': */
class SOAP_CMAC witsml1__volumePerVolumeMeasurePercent : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PercentUom'
        enum witsml1__PercentUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__volumePerVolumeMeasurePercent, default initialized and not managed by a soap context
        virtual witsml1__volumePerVolumeMeasurePercent *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__volumePerVolumeMeasurePercent); }
      public:
        /// Constructor with initializations
        witsml1__volumePerVolumeMeasurePercent() : uom() { }
        virtual ~witsml1__volumePerVolumeMeasurePercent() { }
        /// Friend allocator used by soap_new_witsml1__volumePerVolumeMeasurePercent(struct soap*, int)
        friend SOAP_FMAC1 witsml1__volumePerVolumeMeasurePercent * SOAP_FMAC2 soap_instantiate_witsml1__volumePerVolumeMeasurePercent(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:259 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity (-21)
/* Type witsml1__measureOrQuantity is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:measureOrQuantity': */
class SOAP_CMAC witsml1__measureOrQuantity : public witsml1__abstractMeasure {
      public:
        /// optional attribute 'uom' of XSD type 'witsml1:uomString'
        std::string *uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__measureOrQuantity, default initialized and not managed by a soap context
        virtual witsml1__measureOrQuantity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__measureOrQuantity); }
      public:
        /// Constructor with initializations
        witsml1__measureOrQuantity() : uom() { }
        virtual ~witsml1__measureOrQuantity() { }
        /// Friend allocator used by soap_new_witsml1__measureOrQuantity(struct soap*, int)
        friend SOAP_FMAC1 witsml1__measureOrQuantity * SOAP_FMAC2 soap_instantiate_witsml1__measureOrQuantity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:262 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure (-22)
/* Type witsml1__genericMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:genericMeasure': */
class SOAP_CMAC witsml1__genericMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:uomString'
        std::string uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__genericMeasure, default initialized and not managed by a soap context
        virtual witsml1__genericMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__genericMeasure); }
      public:
        /// Constructor with initializations
        witsml1__genericMeasure() : uom() { }
        virtual ~witsml1__genericMeasure() { }
        /// Friend allocator used by soap_new_witsml1__genericMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__genericMeasure * SOAP_FMAC2 soap_instantiate_witsml1__genericMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:265 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure (-23)
/* Type witsml1__ratioGenericMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:ratioGenericMeasure': */
class SOAP_CMAC witsml1__ratioGenericMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:uomString'
        std::string uom;
        /// optional attribute 'numerator' of XSD type 'witsml1:unitlessQuantity'
        double *numerator;
        /// optional attribute 'denominator' of XSD type 'witsml1:unitlessQuantity'
        double *denominator;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__ratioGenericMeasure, default initialized and not managed by a soap context
        virtual witsml1__ratioGenericMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__ratioGenericMeasure); }
      public:
        /// Constructor with initializations
        witsml1__ratioGenericMeasure() : uom(), numerator(), denominator() { }
        virtual ~witsml1__ratioGenericMeasure() { }
        /// Friend allocator used by soap_new_witsml1__ratioGenericMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__ratioGenericMeasure * SOAP_FMAC2 soap_instantiate_witsml1__ratioGenericMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:268 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString (-24)
/* simple XSD type 'witsml1:refNameString': */
class SOAP_CMAC witsml1__refNameString {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// optional attribute 'uidRef' of XSD type 'witsml1:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__refNameString, default initialized and not managed by a soap context
        virtual witsml1__refNameString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__refNameString); }
      public:
        /// Constructor with initializations
        witsml1__refNameString() : __item(), uidRef(), soap() { }
        virtual ~witsml1__refNameString() { }
        /// Friend allocator used by soap_new_witsml1__refNameString(struct soap*, int)
        friend SOAP_FMAC1 witsml1__refNameString * SOAP_FMAC2 soap_instantiate_witsml1__refNameString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:271 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString (-25)
/* simple XSD type 'witsml1:refObjectString': */
class SOAP_CMAC witsml1__refObjectString {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// required attribute 'object' of XSD type 'witsml1:nameString'
        std::string object;
        /// optional attribute 'uidRef' of XSD type 'witsml1:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__refObjectString, default initialized and not managed by a soap context
        virtual witsml1__refObjectString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__refObjectString); }
      public:
        /// Constructor with initializations
        witsml1__refObjectString() : __item(), object(), uidRef(), soap() { }
        virtual ~witsml1__refObjectString() { }
        /// Friend allocator used by soap_new_witsml1__refObjectString(struct soap*, int)
        friend SOAP_FMAC1 witsml1__refObjectString * SOAP_FMAC2 soap_instantiate_witsml1__refObjectString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:274 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount (-26)
/* simple XSD type 'witsml1:refPositiveCount': */
class SOAP_CMAC witsml1__refPositiveCount {
      public:
        /// Simple content of XSD type 'witsml1:abstractPositiveCount' wrapped by this struct
        short __item;
        /// optional attribute 'uidRef' of XSD type 'witsml1:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__refPositiveCount, default initialized and not managed by a soap context
        virtual witsml1__refPositiveCount *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__refPositiveCount); }
      public:
        /// Constructor with initializations
        witsml1__refPositiveCount() : __item(), uidRef(), soap() { }
        virtual ~witsml1__refPositiveCount() { }
        /// Friend allocator used by soap_new_witsml1__refPositiveCount(struct soap*, int)
        friend SOAP_FMAC1 witsml1__refPositiveCount * SOAP_FMAC2 soap_instantiate_witsml1__refPositiveCount(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:280 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue (-28)
/* simple XSD type 'witsml1:extensionvalue': */
class SOAP_CMAC witsml1__extensionvalue {
      public:
        /// Simple content of XSD type 'witsml1:abstractMaximumLengthString' wrapped by this struct
        std::string __item;
        /// optional attribute 'uom' of XSD type 'witsml1:uomString'
        std::string *uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__extensionvalue, default initialized and not managed by a soap context
        virtual witsml1__extensionvalue *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__extensionvalue); }
      public:
        /// Constructor with initializations
        witsml1__extensionvalue() : __item(), uom(), soap() { }
        virtual ~witsml1__extensionvalue() { }
        /// Friend allocator used by soap_new_witsml1__extensionvalue(struct soap*, int)
        friend SOAP_FMAC1 witsml1__extensionvalue * SOAP_FMAC2 soap_instantiate_witsml1__extensionvalue(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:283 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct (-29)
/* simple XSD type 'witsml1:nameStruct': */
class SOAP_CMAC witsml1__nameStruct {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// optional attribute 'namingSystem' of XSD type 'witsml1:nameString'
        std::string *namingSystem;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__nameStruct, default initialized and not managed by a soap context
        virtual witsml1__nameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__nameStruct); }
      public:
        /// Constructor with initializations
        witsml1__nameStruct() : __item(), namingSystem(), soap() { }
        virtual ~witsml1__nameStruct() { }
        /// Friend allocator used by soap_new_witsml1__nameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml1__nameStruct * SOAP_FMAC2 soap_instantiate_witsml1__nameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:286 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct (-30)
/* simple XSD type 'witsml1:shortNameStruct': */
class SOAP_CMAC witsml1__shortNameStruct {
      public:
        /// Simple content of XSD type 'witsml1:abstractString32' wrapped by this struct
        std::string __item;
        /// optional attribute 'namingSystem' of XSD type 'witsml1:nameString'
        std::string *namingSystem;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__shortNameStruct, default initialized and not managed by a soap context
        virtual witsml1__shortNameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__shortNameStruct); }
      public:
        /// Constructor with initializations
        witsml1__shortNameStruct() : __item(), namingSystem(), soap() { }
        virtual ~witsml1__shortNameStruct() { }
        /// Friend allocator used by soap_new_witsml1__shortNameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml1__shortNameStruct * SOAP_FMAC2 soap_instantiate_witsml1__shortNameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:289 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct (-31)
/* simple XSD type 'witsml1:wellKnownNameStruct': */
class SOAP_CMAC witsml1__wellKnownNameStruct {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// required attribute 'namingSystem' of XSD type 'witsml1:nameString'
        std::string namingSystem;
        /// optional attribute 'code' of XSD type 'witsml1:kindString'
        std::string *code;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__wellKnownNameStruct, default initialized and not managed by a soap context
        virtual witsml1__wellKnownNameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__wellKnownNameStruct); }
      public:
        /// Constructor with initializations
        witsml1__wellKnownNameStruct() : __item(), namingSystem(), code(), soap() { }
        virtual ~witsml1__wellKnownNameStruct() { }
        /// Friend allocator used by soap_new_witsml1__wellKnownNameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml1__wellKnownNameStruct * SOAP_FMAC2 soap_instantiate_witsml1__wellKnownNameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:292 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence (-32)
/* simple XSD type 'witsml1:objectSequence': */
class SOAP_CMAC witsml1__objectSequence {
      public:
        /// Simple content of XSD type 'witsml1:abstractPositiveCount' wrapped by this struct
        short __item;
        /// optional attribute 'description' of XSD type 'witsml1:descriptionString'
        std::string *description;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__objectSequence, default initialized and not managed by a soap context
        virtual witsml1__objectSequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__objectSequence); }
      public:
        /// Constructor with initializations
        witsml1__objectSequence() : __item(), description(), soap() { }
        virtual ~witsml1__objectSequence() { }
        /// Friend allocator used by soap_new_witsml1__objectSequence(struct soap*, int)
        friend SOAP_FMAC1 witsml1__objectSequence * SOAP_FMAC2 soap_instantiate_witsml1__objectSequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:295 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct (-33)
/* simple XSD type 'witsml1:lithostratigraphyStruct': */
class SOAP_CMAC witsml1__lithostratigraphyStruct {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// optional attribute 'kind' of XSD type 'witsml1:LithostratigraphyUnit'
        enum witsml1__LithostratigraphyUnit *kind;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__lithostratigraphyStruct, default initialized and not managed by a soap context
        virtual witsml1__lithostratigraphyStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__lithostratigraphyStruct); }
      public:
        /// Constructor with initializations
        witsml1__lithostratigraphyStruct() : __item(), kind(), soap() { }
        virtual ~witsml1__lithostratigraphyStruct() { }
        /// Friend allocator used by soap_new_witsml1__lithostratigraphyStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml1__lithostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml1__lithostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:298 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct (-34)
/* simple XSD type 'witsml1:chronostratigraphyStruct': */
class SOAP_CMAC witsml1__chronostratigraphyStruct {
      public:
        /// Simple content of XSD type 'witsml1:abstractNameString' wrapped by this struct
        std::string __item;
        /// optional attribute 'kind' of XSD type 'witsml1:ChronostratigraphyUnit'
        enum witsml1__ChronostratigraphyUnit *kind;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__chronostratigraphyStruct, default initialized and not managed by a soap context
        virtual witsml1__chronostratigraphyStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__chronostratigraphyStruct); }
      public:
        /// Constructor with initializations
        witsml1__chronostratigraphyStruct() : __item(), kind(), soap() { }
        virtual ~witsml1__chronostratigraphyStruct() { }
        /// Friend allocator used by soap_new_witsml1__chronostratigraphyStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml1__chronostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml1__chronostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:301 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord (-35)
/* Type witsml1__measuredDepthCoord is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:measuredDepthCoord': */
class SOAP_CMAC witsml1__measuredDepthCoord : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MeasuredDepthUom'
        enum witsml1__MeasuredDepthUom uom;
        /// optional attribute 'datum' of XSD type 'witsml1:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__measuredDepthCoord, default initialized and not managed by a soap context
        virtual witsml1__measuredDepthCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__measuredDepthCoord); }
      public:
        /// Constructor with initializations
        witsml1__measuredDepthCoord() : uom(), datum() { }
        virtual ~witsml1__measuredDepthCoord() { }
        /// Friend allocator used by soap_new_witsml1__measuredDepthCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml1__measuredDepthCoord * SOAP_FMAC2 soap_instantiate_witsml1__measuredDepthCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:304 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord (-36)
/* Type witsml1__wellVerticalDepthCoord is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:wellVerticalDepthCoord': */
class SOAP_CMAC witsml1__wellVerticalDepthCoord : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:WellVerticalCoordinateUom'
        enum witsml1__WellVerticalCoordinateUom uom;
        /// optional attribute 'datum' of XSD type 'witsml1:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__wellVerticalDepthCoord, default initialized and not managed by a soap context
        virtual witsml1__wellVerticalDepthCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__wellVerticalDepthCoord); }
      public:
        /// Constructor with initializations
        witsml1__wellVerticalDepthCoord() : uom(), datum() { }
        virtual ~witsml1__wellVerticalDepthCoord() { }
        /// Friend allocator used by soap_new_witsml1__wellVerticalDepthCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml1__wellVerticalDepthCoord * SOAP_FMAC2 soap_instantiate_witsml1__wellVerticalDepthCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:307 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord (-37)
/* Type witsml1__wellElevationCoord is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:wellElevationCoord': */
class SOAP_CMAC witsml1__wellElevationCoord : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:WellVerticalCoordinateUom'
        enum witsml1__WellVerticalCoordinateUom uom;
        /// optional attribute 'datum' of XSD type 'witsml1:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__wellElevationCoord, default initialized and not managed by a soap context
        virtual witsml1__wellElevationCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__wellElevationCoord); }
      public:
        /// Constructor with initializations
        witsml1__wellElevationCoord() : uom(), datum() { }
        virtual ~witsml1__wellElevationCoord() { }
        /// Friend allocator used by soap_new_witsml1__wellElevationCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml1__wellElevationCoord * SOAP_FMAC2 soap_instantiate_witsml1__wellElevationCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:310 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth (-38)
/* Type witsml1__footageNorthSouth is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:footageNorthSouth': */
class SOAP_CMAC witsml1__footageNorthSouth : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:LengthUom'
        enum witsml1__LengthUom uom;
        /// required attribute 'ref' of XSD type 'witsml1:NorthOrSouth'
        enum witsml1__NorthOrSouth ref;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__footageNorthSouth, default initialized and not managed by a soap context
        virtual witsml1__footageNorthSouth *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__footageNorthSouth); }
      public:
        /// Constructor with initializations
        witsml1__footageNorthSouth() : uom(), ref() { }
        virtual ~witsml1__footageNorthSouth() { }
        /// Friend allocator used by soap_new_witsml1__footageNorthSouth(struct soap*, int)
        friend SOAP_FMAC1 witsml1__footageNorthSouth * SOAP_FMAC2 soap_instantiate_witsml1__footageNorthSouth(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:313 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest (-39)
/* Type witsml1__footageEastWest is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:footageEastWest': */
class SOAP_CMAC witsml1__footageEastWest : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:LengthUom'
        enum witsml1__LengthUom uom;
        /// required attribute 'ref' of XSD type 'witsml1:EastOrWest'
        enum witsml1__EastOrWest ref;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__footageEastWest, default initialized and not managed by a soap context
        virtual witsml1__footageEastWest *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__footageEastWest); }
      public:
        /// Constructor with initializations
        witsml1__footageEastWest() : uom(), ref() { }
        virtual ~witsml1__footageEastWest() { }
        /// Friend allocator used by soap_new_witsml1__footageEastWest(struct soap*, int)
        friend SOAP_FMAC1 witsml1__footageEastWest * SOAP_FMAC2 soap_instantiate_witsml1__footageEastWest(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:319 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject (-41)
/* simple XSD type 'witsml1:indexedObject': */
class SOAP_CMAC witsml1__indexedObject {
      public:
        /// Simple content of XSD type 'witsml1:abstractTypeEnum' wrapped by this struct
        std::string __item;
        /// required attribute 'index' of XSD type 'witsml1:positiveCount'
        short index;
        /// optional attribute 'name' of XSD type 'witsml1:kindString'
        std::string *name;
        /// optional attribute 'uom' of XSD type 'witsml1:uomString'
        std::string *uom;
        /// optional attribute 'description' of XSD type 'witsml1:descriptionString'
        std::string *description;
        /// optional attribute 'uid' of XSD type 'witsml1:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__indexedObject, default initialized and not managed by a soap context
        virtual witsml1__indexedObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__indexedObject); }
      public:
        /// Constructor with initializations
        witsml1__indexedObject() : __item(), index(), name(), uom(), description(), uid(), soap() { }
        virtual ~witsml1__indexedObject() { }
        /// Friend allocator used by soap_new_witsml1__indexedObject(struct soap*, int)
        friend SOAP_FMAC1 witsml1__indexedObject * SOAP_FMAC2 soap_instantiate_witsml1__indexedObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:322 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure (-42)
/* Type witsml1__accelerationLinearMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:accelerationLinearMeasure': */
class SOAP_CMAC witsml1__accelerationLinearMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:AccelerationLinearUom'
        enum witsml1__AccelerationLinearUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__accelerationLinearMeasure, default initialized and not managed by a soap context
        virtual witsml1__accelerationLinearMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__accelerationLinearMeasure); }
      public:
        /// Constructor with initializations
        witsml1__accelerationLinearMeasure() : uom() { }
        virtual ~witsml1__accelerationLinearMeasure() { }
        /// Friend allocator used by soap_new_witsml1__accelerationLinearMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__accelerationLinearMeasure * SOAP_FMAC2 soap_instantiate_witsml1__accelerationLinearMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:325 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure (-43)
/* Type witsml1__anglePerLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:anglePerLengthMeasure': */
class SOAP_CMAC witsml1__anglePerLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:AnglePerLengthUom'
        enum witsml1__AnglePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__anglePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__anglePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__anglePerLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__anglePerLengthMeasure() : uom() { }
        virtual ~witsml1__anglePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__anglePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__anglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__anglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:328 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure (-44)
/* Type witsml1__anglePerTimeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:anglePerTimeMeasure': */
class SOAP_CMAC witsml1__anglePerTimeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:AnglePerTimeUom'
        enum witsml1__AnglePerTimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__anglePerTimeMeasure, default initialized and not managed by a soap context
        virtual witsml1__anglePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__anglePerTimeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__anglePerTimeMeasure() : uom() { }
        virtual ~witsml1__anglePerTimeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__anglePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__anglePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__anglePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:331 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure (-45)
/* Type witsml1__areaMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:areaMeasure': */
class SOAP_CMAC witsml1__areaMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:AreaUom'
        enum witsml1__AreaUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__areaMeasure, default initialized and not managed by a soap context
        virtual witsml1__areaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__areaMeasure); }
      public:
        /// Constructor with initializations
        witsml1__areaMeasure() : uom() { }
        virtual ~witsml1__areaMeasure() { }
        /// Friend allocator used by soap_new_witsml1__areaMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__areaMeasure * SOAP_FMAC2 soap_instantiate_witsml1__areaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:334 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure (-46)
/* Type witsml1__areaPerAreaMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:areaPerAreaMeasure': */
class SOAP_CMAC witsml1__areaPerAreaMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:AreaPerAreaUom'
        enum witsml1__AreaPerAreaUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__areaPerAreaMeasure, default initialized and not managed by a soap context
        virtual witsml1__areaPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__areaPerAreaMeasure); }
      public:
        /// Constructor with initializations
        witsml1__areaPerAreaMeasure() : uom() { }
        virtual ~witsml1__areaPerAreaMeasure() { }
        /// Friend allocator used by soap_new_witsml1__areaPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__areaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_witsml1__areaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:337 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure (-47)
/* Type witsml1__compressibilityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:compressibilityMeasure': */
class SOAP_CMAC witsml1__compressibilityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:CompressibilityUom'
        enum witsml1__CompressibilityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__compressibilityMeasure, default initialized and not managed by a soap context
        virtual witsml1__compressibilityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__compressibilityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__compressibilityMeasure() : uom() { }
        virtual ~witsml1__compressibilityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__compressibilityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__compressibilityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__compressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:340 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure (-48)
/* Type witsml1__densityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:densityMeasure': */
class SOAP_CMAC witsml1__densityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:DensityUom'
        enum witsml1__DensityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__densityMeasure, default initialized and not managed by a soap context
        virtual witsml1__densityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__densityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__densityMeasure() : uom() { }
        virtual ~witsml1__densityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__densityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__densityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__densityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:343 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure (-49)
/* Type witsml1__dimensionlessMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:dimensionlessMeasure': */
class SOAP_CMAC witsml1__dimensionlessMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:DimensionlessUom'
        enum witsml1__DimensionlessUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__dimensionlessMeasure, default initialized and not managed by a soap context
        virtual witsml1__dimensionlessMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__dimensionlessMeasure); }
      public:
        /// Constructor with initializations
        witsml1__dimensionlessMeasure() : uom() { }
        virtual ~witsml1__dimensionlessMeasure() { }
        /// Friend allocator used by soap_new_witsml1__dimensionlessMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__dimensionlessMeasure * SOAP_FMAC2 soap_instantiate_witsml1__dimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:346 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure (-50)
/* Type witsml1__dynamicViscosityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:dynamicViscosityMeasure': */
class SOAP_CMAC witsml1__dynamicViscosityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:DynamicViscosityUom'
        enum witsml1__DynamicViscosityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__dynamicViscosityMeasure, default initialized and not managed by a soap context
        virtual witsml1__dynamicViscosityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__dynamicViscosityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__dynamicViscosityMeasure() : uom() { }
        virtual ~witsml1__dynamicViscosityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__dynamicViscosityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__dynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__dynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:349 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure (-51)
/* Type witsml1__electricCurrentMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:electricCurrentMeasure': */
class SOAP_CMAC witsml1__electricCurrentMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ElectricCurrentUom'
        enum witsml1__ElectricCurrentUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__electricCurrentMeasure, default initialized and not managed by a soap context
        virtual witsml1__electricCurrentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__electricCurrentMeasure); }
      public:
        /// Constructor with initializations
        witsml1__electricCurrentMeasure() : uom() { }
        virtual ~witsml1__electricCurrentMeasure() { }
        /// Friend allocator used by soap_new_witsml1__electricCurrentMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__electricCurrentMeasure * SOAP_FMAC2 soap_instantiate_witsml1__electricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:352 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure (-52)
/* Type witsml1__electricPotentialMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:electricPotentialMeasure': */
class SOAP_CMAC witsml1__electricPotentialMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ElectricPotentialUom'
        enum witsml1__ElectricPotentialUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__electricPotentialMeasure, default initialized and not managed by a soap context
        virtual witsml1__electricPotentialMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__electricPotentialMeasure); }
      public:
        /// Constructor with initializations
        witsml1__electricPotentialMeasure() : uom() { }
        virtual ~witsml1__electricPotentialMeasure() { }
        /// Friend allocator used by soap_new_witsml1__electricPotentialMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__electricPotentialMeasure * SOAP_FMAC2 soap_instantiate_witsml1__electricPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:355 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure (-53)
/* Type witsml1__equivalentPerMassMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:equivalentPerMassMeasure': */
class SOAP_CMAC witsml1__equivalentPerMassMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:EquivalentPerMassUom'
        enum witsml1__EquivalentPerMassUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__equivalentPerMassMeasure, default initialized and not managed by a soap context
        virtual witsml1__equivalentPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__equivalentPerMassMeasure); }
      public:
        /// Constructor with initializations
        witsml1__equivalentPerMassMeasure() : uom() { }
        virtual ~witsml1__equivalentPerMassMeasure() { }
        /// Friend allocator used by soap_new_witsml1__equivalentPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__equivalentPerMassMeasure * SOAP_FMAC2 soap_instantiate_witsml1__equivalentPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:358 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure (-54)
/* Type witsml1__forceMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:forceMeasure': */
class SOAP_CMAC witsml1__forceMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ForceUom'
        enum witsml1__ForceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__forceMeasure, default initialized and not managed by a soap context
        virtual witsml1__forceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__forceMeasure); }
      public:
        /// Constructor with initializations
        witsml1__forceMeasure() : uom() { }
        virtual ~witsml1__forceMeasure() { }
        /// Friend allocator used by soap_new_witsml1__forceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__forceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:361 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure (-55)
/* Type witsml1__forcePerLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:forcePerLengthMeasure': */
class SOAP_CMAC witsml1__forcePerLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ForcePerLengthUom'
        enum witsml1__ForcePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__forcePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__forcePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__forcePerLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__forcePerLengthMeasure() : uom() { }
        virtual ~witsml1__forcePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__forcePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__forcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:364 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure (-56)
/* Type witsml1__forcePerVolumeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:forcePerVolumeMeasure': */
class SOAP_CMAC witsml1__forcePerVolumeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ForcePerVolumeUom'
        enum witsml1__ForcePerVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__forcePerVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml1__forcePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__forcePerVolumeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__forcePerVolumeMeasure() : uom() { }
        virtual ~witsml1__forcePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__forcePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__forcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:367 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure (-57)
/* Type witsml1__illuminanceMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:illuminanceMeasure': */
class SOAP_CMAC witsml1__illuminanceMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:IlluminanceUom'
        enum witsml1__IlluminanceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__illuminanceMeasure, default initialized and not managed by a soap context
        virtual witsml1__illuminanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__illuminanceMeasure); }
      public:
        /// Constructor with initializations
        witsml1__illuminanceMeasure() : uom() { }
        virtual ~witsml1__illuminanceMeasure() { }
        /// Friend allocator used by soap_new_witsml1__illuminanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__illuminanceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__illuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:370 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure (-58)
/* Type witsml1__lengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:lengthMeasure': */
class SOAP_CMAC witsml1__lengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:LengthUom'
        enum witsml1__LengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__lengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__lengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__lengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__lengthMeasure() : uom() { }
        virtual ~witsml1__lengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__lengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__lengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__lengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:373 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure (-59)
/* Type witsml1__lengthPerLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:lengthPerLengthMeasure': */
class SOAP_CMAC witsml1__lengthPerLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:LengthPerLengthUom'
        enum witsml1__LengthPerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__lengthPerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__lengthPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__lengthPerLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__lengthPerLengthMeasure() : uom() { }
        virtual ~witsml1__lengthPerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__lengthPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__lengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__lengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:376 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure (-60)
/* Type witsml1__magneticInductionMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:magneticInductionMeasure': */
class SOAP_CMAC witsml1__magneticInductionMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MagneticInductionUom'
        enum witsml1__MagneticInductionUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__magneticInductionMeasure, default initialized and not managed by a soap context
        virtual witsml1__magneticInductionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__magneticInductionMeasure); }
      public:
        /// Constructor with initializations
        witsml1__magneticInductionMeasure() : uom() { }
        virtual ~witsml1__magneticInductionMeasure() { }
        /// Friend allocator used by soap_new_witsml1__magneticInductionMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__magneticInductionMeasure * SOAP_FMAC2 soap_instantiate_witsml1__magneticInductionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:379 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure (-61)
/* Type witsml1__massConcentrationMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:massConcentrationMeasure': */
class SOAP_CMAC witsml1__massConcentrationMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MassConcentrationUom'
        enum witsml1__MassConcentrationUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__massConcentrationMeasure, default initialized and not managed by a soap context
        virtual witsml1__massConcentrationMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__massConcentrationMeasure); }
      public:
        /// Constructor with initializations
        witsml1__massConcentrationMeasure() : uom() { }
        virtual ~witsml1__massConcentrationMeasure() { }
        /// Friend allocator used by soap_new_witsml1__massConcentrationMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__massConcentrationMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massConcentrationMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:382 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure (-62)
/* Type witsml1__massMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:massMeasure': */
class SOAP_CMAC witsml1__massMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MassUom'
        enum witsml1__MassUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__massMeasure, default initialized and not managed by a soap context
        virtual witsml1__massMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__massMeasure); }
      public:
        /// Constructor with initializations
        witsml1__massMeasure() : uom() { }
        virtual ~witsml1__massMeasure() { }
        /// Friend allocator used by soap_new_witsml1__massMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__massMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:385 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure (-63)
/* Type witsml1__massPerLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:massPerLengthMeasure': */
class SOAP_CMAC witsml1__massPerLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MassPerLengthUom'
        enum witsml1__MassPerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__massPerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__massPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__massPerLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__massPerLengthMeasure() : uom() { }
        virtual ~witsml1__massPerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__massPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__massPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:388 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure (-64)
/* Type witsml1__momentOfForceMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:momentOfForceMeasure': */
class SOAP_CMAC witsml1__momentOfForceMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:MomentOfForceUom'
        enum witsml1__MomentOfForceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__momentOfForceMeasure, default initialized and not managed by a soap context
        virtual witsml1__momentOfForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__momentOfForceMeasure); }
      public:
        /// Constructor with initializations
        witsml1__momentOfForceMeasure() : uom() { }
        virtual ~witsml1__momentOfForceMeasure() { }
        /// Friend allocator used by soap_new_witsml1__momentOfForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__momentOfForceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__momentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:391 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure (-65)
/* Type witsml1__perLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:perLengthMeasure': */
class SOAP_CMAC witsml1__perLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PerLengthUom'
        enum witsml1__PerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__perLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__perLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__perLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__perLengthMeasure() : uom() { }
        virtual ~witsml1__perLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__perLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__perLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__perLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:394 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure (-66)
/* Type witsml1__permeabilityRockMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:permeabilityRockMeasure': */
class SOAP_CMAC witsml1__permeabilityRockMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PermeabilityRockUom'
        enum witsml1__PermeabilityRockUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__permeabilityRockMeasure, default initialized and not managed by a soap context
        virtual witsml1__permeabilityRockMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__permeabilityRockMeasure); }
      public:
        /// Constructor with initializations
        witsml1__permeabilityRockMeasure() : uom() { }
        virtual ~witsml1__permeabilityRockMeasure() { }
        /// Friend allocator used by soap_new_witsml1__permeabilityRockMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__permeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_witsml1__permeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:397 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure (-67)
/* Type witsml1__planeAngleMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:planeAngleMeasure': */
class SOAP_CMAC witsml1__planeAngleMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PlaneAngleUom'
        enum witsml1__PlaneAngleUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__planeAngleMeasure, default initialized and not managed by a soap context
        virtual witsml1__planeAngleMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__planeAngleMeasure); }
      public:
        /// Constructor with initializations
        witsml1__planeAngleMeasure() : uom() { }
        virtual ~witsml1__planeAngleMeasure() { }
        /// Friend allocator used by soap_new_witsml1__planeAngleMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__planeAngleMeasure * SOAP_FMAC2 soap_instantiate_witsml1__planeAngleMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:400 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure (-68)
/* Type witsml1__powerMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:powerMeasure': */
class SOAP_CMAC witsml1__powerMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PowerUom'
        enum witsml1__PowerUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__powerMeasure, default initialized and not managed by a soap context
        virtual witsml1__powerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__powerMeasure); }
      public:
        /// Constructor with initializations
        witsml1__powerMeasure() : uom() { }
        virtual ~witsml1__powerMeasure() { }
        /// Friend allocator used by soap_new_witsml1__powerMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__powerMeasure * SOAP_FMAC2 soap_instantiate_witsml1__powerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:403 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure (-69)
/* Type witsml1__pressureMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:pressureMeasure': */
class SOAP_CMAC witsml1__pressureMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:PressureUom'
        enum witsml1__PressureUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__pressureMeasure, default initialized and not managed by a soap context
        virtual witsml1__pressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__pressureMeasure); }
      public:
        /// Constructor with initializations
        witsml1__pressureMeasure() : uom() { }
        virtual ~witsml1__pressureMeasure() { }
        /// Friend allocator used by soap_new_witsml1__pressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__pressureMeasure * SOAP_FMAC2 soap_instantiate_witsml1__pressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:406 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure (-70)
/* Type witsml1__relativePowerMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:relativePowerMeasure': */
class SOAP_CMAC witsml1__relativePowerMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:RelativePowerUom'
        enum witsml1__RelativePowerUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__relativePowerMeasure, default initialized and not managed by a soap context
        virtual witsml1__relativePowerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__relativePowerMeasure); }
      public:
        /// Constructor with initializations
        witsml1__relativePowerMeasure() : uom() { }
        virtual ~witsml1__relativePowerMeasure() { }
        /// Friend allocator used by soap_new_witsml1__relativePowerMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__relativePowerMeasure * SOAP_FMAC2 soap_instantiate_witsml1__relativePowerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:409 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure (-71)
/* Type witsml1__specificHeatCapacityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:specificHeatCapacityMeasure': */
class SOAP_CMAC witsml1__specificHeatCapacityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:SpecificHeatCapacityUom'
        enum witsml1__SpecificHeatCapacityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__specificHeatCapacityMeasure, default initialized and not managed by a soap context
        virtual witsml1__specificHeatCapacityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__specificHeatCapacityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__specificHeatCapacityMeasure() : uom() { }
        virtual ~witsml1__specificHeatCapacityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__specificHeatCapacityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__specificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__specificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:412 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure (-72)
/* Type witsml1__specificVolumeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:specificVolumeMeasure': */
class SOAP_CMAC witsml1__specificVolumeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:SpecificVolumeUom'
        enum witsml1__SpecificVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__specificVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml1__specificVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__specificVolumeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__specificVolumeMeasure() : uom() { }
        virtual ~witsml1__specificVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__specificVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__specificVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__specificVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:415 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure (-73)
/* Type witsml1__standardVolumeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:standardVolumeMeasure': */
class SOAP_CMAC witsml1__standardVolumeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:StandardVolumeUom'
        enum witsml1__StandardVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__standardVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml1__standardVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__standardVolumeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__standardVolumeMeasure() : uom() { }
        virtual ~witsml1__standardVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__standardVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__standardVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__standardVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:418 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure (-74)
/* Type witsml1__standardVolumePerTimeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:standardVolumePerTimeMeasure': */
class SOAP_CMAC witsml1__standardVolumePerTimeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:StandardVolumePerTimeUom'
        enum witsml1__StandardVolumePerTimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__standardVolumePerTimeMeasure, default initialized and not managed by a soap context
        virtual witsml1__standardVolumePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__standardVolumePerTimeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__standardVolumePerTimeMeasure() : uom() { }
        virtual ~witsml1__standardVolumePerTimeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__standardVolumePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__standardVolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__standardVolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:421 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure (-75)
/* Type witsml1__thermalConductivityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:thermalConductivityMeasure': */
class SOAP_CMAC witsml1__thermalConductivityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ThermalConductivityUom'
        enum witsml1__ThermalConductivityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__thermalConductivityMeasure, default initialized and not managed by a soap context
        virtual witsml1__thermalConductivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__thermalConductivityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__thermalConductivityMeasure() : uom() { }
        virtual ~witsml1__thermalConductivityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__thermalConductivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__thermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:424 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure (-76)
/* Type witsml1__thermalVolumetricExpansionMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:thermalVolumetricExpansionMeasure': */
class SOAP_CMAC witsml1__thermalVolumetricExpansionMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ThermalVolumetricExpansionUom'
        enum witsml1__ThermalVolumetricExpansionUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__thermalVolumetricExpansionMeasure, default initialized and not managed by a soap context
        virtual witsml1__thermalVolumetricExpansionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__thermalVolumetricExpansionMeasure); }
      public:
        /// Constructor with initializations
        witsml1__thermalVolumetricExpansionMeasure() : uom() { }
        virtual ~witsml1__thermalVolumetricExpansionMeasure() { }
        /// Friend allocator used by soap_new_witsml1__thermalVolumetricExpansionMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__thermalVolumetricExpansionMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermalVolumetricExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:427 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure (-77)
/* Type witsml1__thermodynamicTemperatureMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:thermodynamicTemperatureMeasure': */
class SOAP_CMAC witsml1__thermodynamicTemperatureMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:ThermodynamicTemperatureUom'
        enum witsml1__ThermodynamicTemperatureUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__thermodynamicTemperatureMeasure, default initialized and not managed by a soap context
        virtual witsml1__thermodynamicTemperatureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__thermodynamicTemperatureMeasure); }
      public:
        /// Constructor with initializations
        witsml1__thermodynamicTemperatureMeasure() : uom() { }
        virtual ~witsml1__thermodynamicTemperatureMeasure() { }
        /// Friend allocator used by soap_new_witsml1__thermodynamicTemperatureMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__thermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:430 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure (-78)
/* Type witsml1__timeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:timeMeasure': */
class SOAP_CMAC witsml1__timeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:TimeUom'
        enum witsml1__TimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__timeMeasure, default initialized and not managed by a soap context
        virtual witsml1__timeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__timeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__timeMeasure() : uom() { }
        virtual ~witsml1__timeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__timeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__timeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__timeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:433 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure (-79)
/* Type witsml1__velocityMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:velocityMeasure': */
class SOAP_CMAC witsml1__velocityMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:VelocityUom'
        enum witsml1__VelocityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__velocityMeasure, default initialized and not managed by a soap context
        virtual witsml1__velocityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__velocityMeasure); }
      public:
        /// Constructor with initializations
        witsml1__velocityMeasure() : uom() { }
        virtual ~witsml1__velocityMeasure() { }
        /// Friend allocator used by soap_new_witsml1__velocityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__velocityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__velocityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:436 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure (-80)
/* Type witsml1__volumeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:volumeMeasure': */
class SOAP_CMAC witsml1__volumeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:VolumeUom'
        enum witsml1__VolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__volumeMeasure, default initialized and not managed by a soap context
        virtual witsml1__volumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__volumeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__volumeMeasure() : uom() { }
        virtual ~witsml1__volumeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__volumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__volumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:439 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure (-81)
/* Type witsml1__volumeFlowRateMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:volumeFlowRateMeasure': */
class SOAP_CMAC witsml1__volumeFlowRateMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:VolumeFlowRateUom'
        enum witsml1__VolumeFlowRateUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__volumeFlowRateMeasure, default initialized and not managed by a soap context
        virtual witsml1__volumeFlowRateMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__volumeFlowRateMeasure); }
      public:
        /// Constructor with initializations
        witsml1__volumeFlowRateMeasure() : uom() { }
        virtual ~witsml1__volumeFlowRateMeasure() { }
        /// Friend allocator used by soap_new_witsml1__volumeFlowRateMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__volumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:442 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure (-82)
/* Type witsml1__volumePerLengthMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:volumePerLengthMeasure': */
class SOAP_CMAC witsml1__volumePerLengthMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:VolumePerLengthUom'
        enum witsml1__VolumePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__volumePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml1__volumePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__volumePerLengthMeasure); }
      public:
        /// Constructor with initializations
        witsml1__volumePerLengthMeasure() : uom() { }
        virtual ~witsml1__volumePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml1__volumePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__volumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:445 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure (-83)
/* Type witsml1__volumePerVolumeMeasure is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* simple XSD type 'witsml1:volumePerVolumeMeasure': */
class SOAP_CMAC witsml1__volumePerVolumeMeasure : public witsml1__abstractMeasure {
      public:
        /// required attribute 'uom' of XSD type 'witsml1:VolumePerVolumeUom'
        enum witsml1__VolumePerVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__volumePerVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml1__volumePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__volumePerVolumeMeasure); }
      public:
        /// Constructor with initializations
        witsml1__volumePerVolumeMeasure() : uom() { }
        virtual ~witsml1__volumePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml1__volumePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml1__volumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:580 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType (-128)
/* Type gml__IdentifiedObjectType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:IdentifiedObjectType': */
class SOAP_CMAC gml__IdentifiedObjectType : public gml__DefinitionType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__IdentifiedObjectType, default initialized and not managed by a soap context
        virtual gml__IdentifiedObjectType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__IdentifiedObjectType); }
      public:
        /// Constructor with initializations
        gml__IdentifiedObjectType() { }
        virtual ~gml__IdentifiedObjectType() { }
        /// Friend allocator used by soap_new_gml__IdentifiedObjectType(struct soap*, int)
        friend SOAP_FMAC1 gml__IdentifiedObjectType * SOAP_FMAC2 soap_instantiate_gml__IdentifiedObjectType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:277 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString (-27)
/* simple XSD type 'witsml1:timestampedCommentString': */
class SOAP_CMAC witsml1__timestampedCommentString {
      public:
        /// Simple content of XSD type 'witsml1:abstractCommentString' wrapped by this struct
        std::string __item;
        /// required attribute 'dTim' of XSD type 'witsml1:timestamp'
        /// Typedef witsml1__timestamp with custom serializer for struct tm
        struct tm dTim;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml1__timestampedCommentString, default initialized and not managed by a soap context
        virtual witsml1__timestampedCommentString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml1__timestampedCommentString); }
      public:
        /// Constructor with initializations
        witsml1__timestampedCommentString() : __item(), dTim(), soap() { }
        virtual ~witsml1__timestampedCommentString() { }
        /// Friend allocator used by soap_new_witsml1__timestampedCommentString(struct soap*, int)
        friend SOAP_FMAC1 witsml1__timestampedCommentString * SOAP_FMAC2 soap_instantiate_witsml1__timestampedCommentString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:577 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType (-127)
/* Type gml__AbstractCRSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractCRSType': */
class SOAP_CMAC gml__AbstractCRSType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XSD type 'gml:domainOfValidity'
        std::vector<_gml__domainOfValidity *> domainOfValidity;
        /// Required element 'gml:scope' of XSD type 'xsd:string'
        std::vector<std::string> scope;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCRSType, default initialized and not managed by a soap context
        virtual gml__AbstractCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCRSType); }
      public:
        /// Constructor with initializations
        gml__AbstractCRSType() : domainOfValidity(), scope() { }
        virtual ~gml__AbstractCRSType() { }
        /// Friend allocator used by soap_new_gml__AbstractCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:622 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType (-142)
/* Type gml__AbstractCoordinateSystemType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractCoordinateSystemType': */
class SOAP_CMAC gml__AbstractCoordinateSystemType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:axis' of XSD type 'gml:CoordinateSystemAxisPropertyType'
        std::vector<gml__CoordinateSystemAxisPropertyType *> axis;
        /// optional attribute 'aggregationType' of XSD type 'gml:AggregationType'
        enum gml__AggregationType *aggregationType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCoordinateSystemType, default initialized and not managed by a soap context
        virtual gml__AbstractCoordinateSystemType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCoordinateSystemType); }
      public:
        /// Constructor with initializations
        gml__AbstractCoordinateSystemType() : axis(), aggregationType() { }
        virtual ~gml__AbstractCoordinateSystemType() { }
        /// Friend allocator used by soap_new_gml__AbstractCoordinateSystemType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCoordinateSystemType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateSystemType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:628 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType (-144)
/* Type gml__CoordinateSystemAxisType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:CoordinateSystemAxisType': */
class SOAP_CMAC gml__CoordinateSystemAxisType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:axisAbbrev' of XSD type 'gml:CodeType'
        gml__CodeType *axisAbbrev;
        /// Required element 'gml:axisDirection' of XSD type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *axisDirection;
        /// Optional element 'gml:minimumValue' of XSD type 'xsd:double'
        double *minimumValue;
        /// Optional element 'gml:maximumValue' of XSD type 'xsd:double'
        double *maximumValue;
        /// Optional element 'gml:rangeMeaning' of XSD type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *rangeMeaning;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CoordinateSystemAxisType, default initialized and not managed by a soap context
        virtual gml__CoordinateSystemAxisType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CoordinateSystemAxisType); }
      public:
        /// Constructor with initializations
        gml__CoordinateSystemAxisType() : axisAbbrev(), axisDirection(), minimumValue(), maximumValue(), rangeMeaning() { }
        virtual ~gml__CoordinateSystemAxisType() { }
        /// Friend allocator used by soap_new_gml__CoordinateSystemAxisType(struct soap*, int)
        friend SOAP_FMAC1 gml__CoordinateSystemAxisType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:649 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType (-151)
/* Type gml__AbstractDatumType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractDatumType': */
class SOAP_CMAC gml__AbstractDatumType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XSD type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XSD type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:anchorDefinition' of XSD type 'gml:CodeType'
        gml__CodeType *anchorDefinition;
        /// Optional element 'gml:realizationEpoch' of XSD type 'xsd:date'
        std::string *realizationEpoch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractDatumType, default initialized and not managed by a soap context
        virtual gml__AbstractDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractDatumType); }
      public:
        /// Constructor with initializations
        gml__AbstractDatumType() : domainOfValidity(), scope(), anchorDefinition(), realizationEpoch() { }
        virtual ~gml__AbstractDatumType() { }
        /// Friend allocator used by soap_new_gml__AbstractDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractDatumType * SOAP_FMAC2 soap_instantiate_gml__AbstractDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:655 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType (-153)
/* Type gml__PrimeMeridianType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:PrimeMeridianType': */
class SOAP_CMAC gml__PrimeMeridianType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:greenwichLongitude' of XSD type 'gml:AngleType'
        gml__AngleType *greenwichLongitude;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__PrimeMeridianType, default initialized and not managed by a soap context
        virtual gml__PrimeMeridianType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__PrimeMeridianType); }
      public:
        /// Constructor with initializations
        gml__PrimeMeridianType() : greenwichLongitude() { }
        virtual ~gml__PrimeMeridianType() { }
        /// Friend allocator used by soap_new_gml__PrimeMeridianType(struct soap*, int)
        friend SOAP_FMAC1 gml__PrimeMeridianType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:667 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType (-157)
/* Type gml__EllipsoidType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:EllipsoidType': */
class SOAP_CMAC gml__EllipsoidType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:semiMajorAxis' of XSD type 'gml:MeasureType'
        gml__MeasureType *semiMajorAxis;
        /// Required element 'gml:secondDefiningParameter' of XSD type 'gml:secondDefiningParameter'
        _gml__secondDefiningParameter *secondDefiningParameter;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidType, default initialized and not managed by a soap context
        virtual gml__EllipsoidType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidType); }
      public:
        /// Constructor with initializations
        gml__EllipsoidType() : semiMajorAxis(), secondDefiningParameter() { }
        virtual ~gml__EllipsoidType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:685 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType (-163)
/* Type gml__AbstractCoordinateOperationType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractCoordinateOperationType': */
class SOAP_CMAC gml__AbstractCoordinateOperationType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XSD type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XSD type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:operationVersion' of XSD type 'xsd:string'
        std::string *operationVersion;
        /// Optional element 'gml:coordinateOperationAccuracy' of XSD type 'gml:coordinateOperationAccuracy'
        std::vector<_gml__coordinateOperationAccuracy *> coordinateOperationAccuracy;
        /// Optional element 'gml:sourceCRS' of XSD type 'gml:CRSPropertyType'
        gml__CRSPropertyType *sourceCRS;
        /// Optional element 'gml:targetCRS' of XSD type 'gml:CRSPropertyType'
        gml__CRSPropertyType *targetCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCoordinateOperationType, default initialized and not managed by a soap context
        virtual gml__AbstractCoordinateOperationType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCoordinateOperationType); }
      public:
        /// Constructor with initializations
        gml__AbstractCoordinateOperationType() : domainOfValidity(), scope(), operationVersion(), coordinateOperationAccuracy(), sourceCRS(), targetCRS() { }
        virtual ~gml__AbstractCoordinateOperationType() { }
        /// Friend allocator used by soap_new_gml__AbstractCoordinateOperationType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCoordinateOperationType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateOperationType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:18802 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType (-790)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_GeodeticCRSType
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_ellipsoidalCS	(1)	/**< union variant selector value for member ellipsoidalCS */
        gml__EllipsoidalCSPropertyType *ellipsoidalCS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_cartesianCS	(2)	/**< union variant selector value for member cartesianCS */
        gml__CartesianCSPropertyType *cartesianCS;
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_sphericalCS	(3)	/**< union variant selector value for member sphericalCS */
        gml__SphericalCSPropertyType *sphericalCS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:574 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType (-126)
/* Type gml__GeodeticCRSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:GeodeticCRSType': */
class SOAP_CMAC gml__GeodeticCRSType : public gml__AbstractCRSType {
      public:
        /// Union with union _gml__union_GeodeticCRSType variant selector __union_GeodeticCRSType set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_ellipsoidalCS SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_cartesianCS SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_sphericalCS
        int __union_GeodeticCRSType;
        union _gml__union_GeodeticCRSType union_GeodeticCRSType;
        /// Required element 'gml:geodeticDatum' of XSD type 'gml:GeodeticDatumPropertyType'
        gml__GeodeticDatumPropertyType *geodeticDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticCRSType, default initialized and not managed by a soap context
        virtual gml__GeodeticCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticCRSType); }
      public:
        /// Constructor with initializations
        gml__GeodeticCRSType() : __union_GeodeticCRSType(), geodeticDatum() { }
        virtual ~gml__GeodeticCRSType() { }
        /// Friend allocator used by soap_new_gml__GeodeticCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticCRSType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:619 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType (-141)
/* Type gml__EllipsoidalCSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:EllipsoidalCSType': */
class SOAP_CMAC gml__EllipsoidalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidalCSType, default initialized and not managed by a soap context
        virtual gml__EllipsoidalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidalCSType); }
      public:
        /// Constructor with initializations
        gml__EllipsoidalCSType() { }
        virtual ~gml__EllipsoidalCSType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidalCSType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:634 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType (-146)
/* Type gml__CartesianCSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:CartesianCSType': */
class SOAP_CMAC gml__CartesianCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CartesianCSType, default initialized and not managed by a soap context
        virtual gml__CartesianCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CartesianCSType); }
      public:
        /// Constructor with initializations
        gml__CartesianCSType() { }
        virtual ~gml__CartesianCSType() { }
        /// Friend allocator used by soap_new_gml__CartesianCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__CartesianCSType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:640 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType (-148)
/* Type gml__SphericalCSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:SphericalCSType': */
class SOAP_CMAC gml__SphericalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__SphericalCSType, default initialized and not managed by a soap context
        virtual gml__SphericalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__SphericalCSType); }
      public:
        /// Constructor with initializations
        gml__SphericalCSType() { }
        virtual ~gml__SphericalCSType() { }
        /// Friend allocator used by soap_new_gml__SphericalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__SphericalCSType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:646 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType (-150)
/* Type gml__GeodeticDatumType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:GeodeticDatumType': */
class SOAP_CMAC gml__GeodeticDatumType : public gml__AbstractDatumType {
      public:
        /// Required element 'gml:primeMeridian' of XSD type 'gml:PrimeMeridianPropertyType'
        gml__PrimeMeridianPropertyType *primeMeridian;
        /// Required element 'gml:ellipsoid' of XSD type 'gml:EllipsoidPropertyType'
        gml__EllipsoidPropertyType *ellipsoid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticDatumType, default initialized and not managed by a soap context
        virtual gml__GeodeticDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticDatumType); }
      public:
        /// Constructor with initializations
        gml__GeodeticDatumType() : primeMeridian(), ellipsoid() { }
        virtual ~gml__GeodeticDatumType() { }
        /// Friend allocator used by soap_new_gml__GeodeticDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticDatumType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:676 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType (-160)
/* Type gml__AbstractGeneralDerivedCRSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:AbstractGeneralDerivedCRSType': */
class SOAP_CMAC gml__AbstractGeneralDerivedCRSType : public gml__AbstractCRSType {
      public:
        /// Required element 'gml:conversion' of XSD type 'gml:GeneralConversionPropertyType'
        gml__GeneralConversionPropertyType *conversion;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGeneralDerivedCRSType, default initialized and not managed by a soap context
        virtual gml__AbstractGeneralDerivedCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGeneralDerivedCRSType); }
      public:
        /// Constructor with initializations
        gml__AbstractGeneralDerivedCRSType() : conversion() { }
        virtual ~gml__AbstractGeneralDerivedCRSType() { }
        /// Friend allocator used by soap_new_gml__AbstractGeneralDerivedCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralDerivedCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:682 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType (-162)
/* complex XSD type 'gml:AbstractGeneralConversionType': */
class SOAP_CMAC gml__AbstractGeneralConversionType {
      public:
        /// Optional element 'gml:description' of XSD type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XSD type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Required element 'gml:identifier' of XSD type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XSD type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// Optional element 'gml:remarks' of XSD type 'xsd:string'
        std::string *remarks;
        /// Optional element 'gml:domainOfValidity' of XSD type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XSD type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:coordinateOperationAccuracy' of XSD type 'gml:coordinateOperationAccuracy'
        std::vector<_gml__coordinateOperationAccuracy *> coordinateOperationAccuracy;
        /// required attribute 'gml:id' of XSD type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGeneralConversionType, default initialized and not managed by a soap context
        virtual gml__AbstractGeneralConversionType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGeneralConversionType); }
      public:
        /// Constructor with initializations
        gml__AbstractGeneralConversionType() : description(), descriptionReference(), identifier(), name(), remarks(), domainOfValidity(), scope(), coordinateOperationAccuracy(), gml__id(), soap() { }
        virtual ~gml__AbstractGeneralConversionType() { }
        /// Friend allocator used by soap_new_gml__AbstractGeneralConversionType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGeneralConversionType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralConversionType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:694 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType (-166)
/* Type gml__VerticalCRSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:VerticalCRSType': */
class SOAP_CMAC gml__VerticalCRSType : public gml__AbstractCRSType {
      public:
        /// Required element 'gml:verticalCS' of XSD type 'gml:VerticalCSPropertyType'
        gml__VerticalCSPropertyType *verticalCS;
        /// Required element 'gml:verticalDatum' of XSD type 'gml:VerticalDatumPropertyType'
        gml__VerticalDatumPropertyType *verticalDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCRSType, default initialized and not managed by a soap context
        virtual gml__VerticalCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCRSType); }
      public:
        /// Constructor with initializations
        gml__VerticalCRSType() : verticalCS(), verticalDatum() { }
        virtual ~gml__VerticalCRSType() { }
        /// Friend allocator used by soap_new_gml__VerticalCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCRSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:700 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType (-168)
/* Type gml__VerticalCSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:VerticalCSType': */
class SOAP_CMAC gml__VerticalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCSType, default initialized and not managed by a soap context
        virtual gml__VerticalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCSType); }
      public:
        /// Constructor with initializations
        gml__VerticalCSType() { }
        virtual ~gml__VerticalCSType() { }
        /// Friend allocator used by soap_new_gml__VerticalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:706 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType (-170)
/* Type gml__VerticalDatumType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:VerticalDatumType': */
class SOAP_CMAC gml__VerticalDatumType : public gml__AbstractDatumType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalDatumType, default initialized and not managed by a soap context
        virtual gml__VerticalDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalDatumType); }
      public:
        /// Constructor with initializations
        gml__VerticalDatumType() { }
        virtual ~gml__VerticalDatumType() { }
        /// Friend allocator used by soap_new_gml__VerticalDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalDatumType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:19277 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType (-798)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_ProjectedCRSType
{
        #define SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType_baseGeodeticCRS	(1)	/**< union variant selector value for member baseGeodeticCRS */
        gml__GeodeticCRSPropertyType *baseGeodeticCRS;
};
#endif

/* witsml1_4_1_1ForGsoap.h:673 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType (-159)
/* Type gml__ProjectedCRSType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XSD type 'gml:ProjectedCRSType': */
class SOAP_CMAC gml__ProjectedCRSType : public gml__AbstractGeneralDerivedCRSType {
      public:
        /// Union with union _gml__union_ProjectedCRSType variant selector __union_ProjectedCRSType set to one of: SOAP_UNION_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType_baseGeodeticCRS
        int __union_ProjectedCRSType;
        union _gml__union_ProjectedCRSType union_ProjectedCRSType;
        /// Required element 'gml:cartesianCS' of XSD type 'gml:CartesianCSPropertyType'
        gml__CartesianCSPropertyType *cartesianCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__ProjectedCRSType, default initialized and not managed by a soap context
        virtual gml__ProjectedCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__ProjectedCRSType); }
      public:
        /// Constructor with initializations
        gml__ProjectedCRSType() : __union_ProjectedCRSType(), cartesianCS() { }
        virtual ~gml__ProjectedCRSType() { }
        /// Friend allocator used by soap_new_gml__ProjectedCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__ProjectedCRSType * SOAP_FMAC2 soap_instantiate_gml__ProjectedCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4_1_1ForGsoap.h:21026 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header (-1665978368)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4_1_1ForGsoap.h:21026 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code (-1665978369)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4_1_1ForGsoap.h:21026 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail (-1665978371)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4_1_1ForGsoap.h:21026 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason (-1665978374)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4_1_1ForGsoap.h:21026 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault (-1665978375)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__XML
#define SOAP_TYPE_gsoap_witsml1_4_1_1__XML (-5)

typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__QName
#define SOAP_TYPE_gsoap_witsml1_4_1_1__QName (-6)

typedef char *_QName;
#endif

/* witsml1_4_1_1ForGsoap.h:221 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID (-11)

typedef std::string xsd__ID;
#endif

/* witsml1_4_1_1ForGsoap.h:224 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI (-12)

typedef std::string xsd__anyURI;
#endif

/* witsml1_4_1_1ForGsoap.h:227 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date (-13)

typedef std::string xsd__date;
#endif

/* witsml1_4_1_1ForGsoap.h:866 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString (-219)

typedef std::string witsml1__listOfString;
#endif

/* witsml1_4_1_1ForGsoap.h:885 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType (-220)

typedef std::string gml__NilReasonType;
#endif

/* witsml1_4_1_1ForGsoap.h:889 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration (-221)

typedef std::string gml__NilReasonEnumeration;
#endif

/* witsml1_4_1_1ForGsoap.h:892 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier (-222)

typedef std::string gml__UomIdentifier;
#endif

/* witsml1_4_1_1ForGsoap.h:927 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType (-223)

typedef std::string gco__Date_USCOREType;
#endif

/* witsml1_4_1_1ForGsoap.h:945 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean (-225)

typedef bool witsml1__abstractBoolean;
#endif

/* witsml1_4_1_1ForGsoap.h:955 */
#ifndef SOAP_TYPE_witsml1__abstractDateTime
#define SOAP_TYPE_witsml1__abstractDateTime (-226)

typedef struct tm witsml1__abstractDateTime;
#endif

/* witsml1_4_1_1ForGsoap.h:965 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate (-227)

typedef std::string witsml1__abstractDate;
#endif

/* witsml1_4_1_1ForGsoap.h:974 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble (-229)

typedef double witsml1__abstractDouble;
#endif

/* witsml1_4_1_1ForGsoap.h:983 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort (-231)

typedef short witsml1__abstractShort;
#endif

/* witsml1_4_1_1ForGsoap.h:992 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt (-232)

typedef int witsml1__abstractInt;
#endif

/* witsml1_4_1_1ForGsoap.h:1006 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString (-233)

typedef std::string witsml1__abstractString;
#endif

/* witsml1_4_1_1ForGsoap.h:1018 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString (-234)

typedef std::string witsml1__abstractUncollapsedString;
#endif

/* witsml1_4_1_1ForGsoap.h:1042 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol (-235)

typedef std::string gml__UomSymbol;
#endif

/* witsml1_4_1_1ForGsoap.h:1052 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI (-236)

typedef std::string gml__UomURI;
#endif

/* witsml1_4_1_1ForGsoap.h:1145 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date (-240)

typedef witsml1__abstractDate witsml1__date;
#endif

/* witsml1_4_1_1ForGsoap.h:1155 */
#ifndef SOAP_TYPE_witsml1__timestamp
#define SOAP_TYPE_witsml1__timestamp (-241)

typedef struct tm witsml1__timestamp;
#endif

/* witsml1_4_1_1ForGsoap.h:1164 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear (-242)

typedef int witsml1__calendarYear;
#endif

/* witsml1_4_1_1ForGsoap.h:1171 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean (-243)

typedef witsml1__abstractBoolean witsml1__logicalBoolean;
#endif

/* witsml1_4_1_1ForGsoap.h:1178 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity (-244)

typedef witsml1__abstractDouble witsml1__unitlessQuantity;
#endif

/* witsml1_4_1_1ForGsoap.h:1186 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString (-245)

typedef std::string witsml1__shortDescriptionString;
#endif

/* witsml1_4_1_1ForGsoap.h:1197 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString (-246)

typedef std::string witsml1__schemaVersionString;
#endif

/* witsml1_4_1_1ForGsoap.h:1205 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString (-247)

typedef std::string witsml1__uncollapsedString;
#endif

/* witsml1_4_1_1ForGsoap.h:1214 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode (-248)

typedef std::string witsml1__iadcBearingWearCode;
#endif

/* witsml1_4_1_1ForGsoap.h:1223 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString (-249)

typedef std::string witsml1__geodeticZoneString;
#endif

/* witsml1_4_1_1ForGsoap.h:1232 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber (-250)

typedef std::string witsml1__sectionNumber;
#endif

/* witsml1_4_1_1ForGsoap.h:1242 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship (-251)

typedef std::string witsml1__publicLandSurveySystemQuarterTownship;
#endif

/* witsml1_4_1_1ForGsoap.h:1252 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection (-252)

typedef std::string witsml1__publicLandSurveySystemQuarterSection;
#endif

/* witsml1_4_1_1ForGsoap.h:1260 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne (-253)

typedef double witsml1__gtZeroAndLeOne;
#endif

/* witsml1_4_1_1ForGsoap.h:1272 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount (-254)

typedef witsml1__abstractShort witsml1__nonNegativeCount;
#endif

/* witsml1_4_1_1ForGsoap.h:1283 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount (-255)

typedef int witsml1__positiveBigCount;
#endif

/* witsml1_4_1_1ForGsoap.h:1290 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount (-256)

typedef witsml1__abstractInt witsml1__integerCount;
#endif

/* witsml1_4_1_1ForGsoap.h:1298 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode (-257)

typedef witsml1__abstractShort witsml1__beaufortScaleIntegerCode;
#endif

/* witsml1_4_1_1ForGsoap.h:1306 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode (-258)

typedef witsml1__abstractShort witsml1__pumpActionIntegerCode;
#endif

/* witsml1_4_1_1ForGsoap.h:1314 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode (-259)

typedef witsml1__abstractShort witsml1__iadcIntegerCode;
#endif

/* witsml1_4_1_1ForGsoap.h:1322 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode (-260)

typedef witsml1__abstractShort witsml1__levelIntegerCode;
#endif

/* witsml1_4_1_1ForGsoap.h:1327 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2 (-261)

typedef std::string witsml1__str2;
#endif

/* witsml1_4_1_1ForGsoap.h:1332 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16 (-262)

typedef std::string witsml1__str16;
#endif

/* witsml1_4_1_1ForGsoap.h:1344 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString (-263)

typedef std::string witsml1__abstractMaximumLengthString;
#endif

/* witsml1_4_1_1ForGsoap.h:1355 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount (-264)

typedef witsml1__abstractShort witsml1__abstractPositiveCount;
#endif

/* witsml1_4_1_1ForGsoap.h:1365 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone (-265)

typedef std::string witsml1__abstractTimeZone;
#endif

/* witsml1_4_1_1ForGsoap.h:1374 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString (-266)

typedef std::string witsml1__abstractNameString;
#endif

/* witsml1_4_1_1ForGsoap.h:1384 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString (-267)

typedef std::string witsml1__abstractUidString;
#endif

/* witsml1_4_1_1ForGsoap.h:1392 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString (-268)

typedef std::string witsml1__abstractDescriptionString;
#endif

/* witsml1_4_1_1ForGsoap.h:1400 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32 (-269)

typedef std::string witsml1__abstractString32;
#endif

/* witsml1_4_1_1ForGsoap.h:1411 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum (-270)

typedef std::string witsml1__abstractTypeEnum;
#endif

/* witsml1_4_1_1ForGsoap.h:1420 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum (-271)

typedef std::string witsml1__abstractUomEnum;
#endif

/* witsml1_4_1_1ForGsoap.h:1483 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone (-272)

typedef witsml1__abstractTimeZone witsml1__timeZone;
#endif

/* witsml1_4_1_1ForGsoap.h:1490 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString (-273)

typedef witsml1__abstractUidString witsml1__uidString;
#endif

/* witsml1_4_1_1ForGsoap.h:1499 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString (-274)

typedef witsml1__abstractUidString witsml1__uidParentString;
#endif

/* witsml1_4_1_1ForGsoap.h:1507 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString (-275)

typedef witsml1__abstractUidString witsml1__refString;
#endif

/* witsml1_4_1_1ForGsoap.h:1518 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum (-276)

typedef witsml1__abstractUidString witsml1__refWellDatum;
#endif

/* witsml1_4_1_1ForGsoap.h:1526 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString (-277)

typedef witsml1__abstractNameString witsml1__nameString;
#endif

/* witsml1_4_1_1ForGsoap.h:1533 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString (-278)

typedef witsml1__abstractDescriptionString witsml1__descriptionString;
#endif

/* witsml1_4_1_1ForGsoap.h:1541 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString (-279)

typedef witsml1__abstractString32 witsml1__encodedValueString;
#endif

/* witsml1_4_1_1ForGsoap.h:1548 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString (-280)

typedef witsml1__abstractTypeEnum witsml1__kindString;
#endif

/* witsml1_4_1_1ForGsoap.h:1555 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString (-281)

typedef witsml1__abstractUomEnum witsml1__uomString;
#endif

/* witsml1_4_1_1ForGsoap.h:1566 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount (-282)

typedef witsml1__abstractPositiveCount witsml1__positiveCount;
#endif

/* witsml1_4_1_1ForGsoap.h:1570 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32 (-283)

typedef witsml1__abstractString32 witsml1__str32;
#endif

/* witsml1_4_1_1ForGsoap.h:2533 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString (-329)

typedef witsml1__abstractMaximumLengthString witsml1__abstractCommentString;
#endif

/* witsml1_4_1_1ForGsoap.h:2563 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode (-331)

typedef witsml1__abstractTypeEnum witsml1__ActivityCode;
#endif

/* witsml1_4_1_1ForGsoap.h:3784 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName (-357)

typedef witsml1__abstractTypeEnum witsml1__ExtensionName;
#endif

/* witsml1_4_1_1ForGsoap.h:4218 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType (-368)

typedef witsml1__abstractTypeEnum witsml1__LithologyType;
#endif

/* witsml1_4_1_1ForGsoap.h:4493 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType (-376)

typedef witsml1__abstractTypeEnum witsml1__MatrixCementType;
#endif

/* witsml1_4_1_1ForGsoap.h:4501 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass (-377)

typedef witsml1__abstractTypeEnum witsml1__MeasureClass;
#endif

/* witsml1_4_1_1ForGsoap.h:5983 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass (-384)

typedef witsml1__abstractTypeEnum witsml1__MudSubClass;
#endif

/* witsml1_4_1_1ForGsoap.h:6010 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation (-386)

typedef witsml1__abstractTypeEnum witsml1__NameTagLocation;
#endif

/* witsml1_4_1_1ForGsoap.h:6018 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme (-387)

typedef witsml1__abstractTypeEnum witsml1__NameTagNumberingScheme;
#endif

/* witsml1_4_1_1ForGsoap.h:6026 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology (-388)

typedef witsml1__abstractTypeEnum witsml1__NameTagTechnology;
#endif

/* witsml1_4_1_1ForGsoap.h:6614 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType (-401)

typedef witsml1__abstractTypeEnum witsml1__QualifierType;
#endif

/* witsml1_4_1_1ForGsoap.h:8427 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm (-427)

typedef witsml1__abstractTypeEnum witsml1__TrajStnCalcAlgorithm;
#endif

/* witsml1_4_1_1ForGsoap.h:9331 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool (-432)

typedef witsml1__abstractTypeEnum witsml1__TypeSurveyTool;
#endif

/* witsml1_4_1_1ForGsoap.h:9896 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString (-443)

typedef witsml1__abstractCommentString witsml1__commentString;
#endif

/* witsml1_4_1_1ForGsoap.h:19299 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers (-799)

typedef witsml1__obj_USCOREformationMarkers _witsml1__formationMarkers;
#endif

/* witsml1_4_1_1ForGsoap.h:19306 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems (-800)

typedef witsml1__obj_USCOREcoordinateReferenceSystems _witsml1__coordinateReferenceSystems;
#endif

/* witsml1_4_1_1ForGsoap.h:19313 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs (-801)

typedef witsml1__obj_USCORElogs _witsml1__logs;
#endif

/* witsml1_4_1_1ForGsoap.h:19320 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys (-802)

typedef witsml1__obj_USCOREtrajectorys _witsml1__trajectorys;
#endif

/* witsml1_4_1_1ForGsoap.h:19327 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores (-803)

typedef witsml1__obj_USCOREwellbores _witsml1__wellbores;
#endif

/* witsml1_4_1_1ForGsoap.h:19334 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells (-804)

typedef witsml1__obj_USCOREwells _witsml1__wells;
#endif

/* witsml1_4_1_1ForGsoap.h:19369 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS (-805)

typedef gml__GeodeticCRSType _gml__GeodeticCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19375 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description (-806)

typedef gml__StringOrRefType _gml__description;
#endif

/* witsml1_4_1_1ForGsoap.h:19381 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference (-807)

typedef gml__ReferenceType _gml__descriptionReference;
#endif

/* witsml1_4_1_1ForGsoap.h:19387 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier (-808)

typedef gml__CodeWithAuthorityType _gml__identifier;
#endif

/* witsml1_4_1_1ForGsoap.h:19393 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name (-809)

typedef gml__CodeType _gml__name;
#endif

/* witsml1_4_1_1ForGsoap.h:19396 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks (-810)

typedef std::string _gml__remarks;
#endif

/* witsml1_4_1_1ForGsoap.h:19404 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition (-811)

typedef gml__DefinitionType _gml__Definition;
#endif

/* witsml1_4_1_1ForGsoap.h:19410 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope (-812)

typedef std::string _gml__scope;
#endif

/* witsml1_4_1_1ForGsoap.h:19416 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS (-813)

typedef gml__EllipsoidalCSPropertyType _gml__ellipsoidalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19422 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS (-814)

typedef gml__EllipsoidalCSType _gml__EllipsoidalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19428 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis (-815)

typedef gml__CoordinateSystemAxisPropertyType _gml__axis;
#endif

/* witsml1_4_1_1ForGsoap.h:19434 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis (-816)

typedef gml__CoordinateSystemAxisType _gml__CoordinateSystemAxis;
#endif

/* witsml1_4_1_1ForGsoap.h:19440 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev (-817)

typedef gml__CodeType _gml__axisAbbrev;
#endif

/* witsml1_4_1_1ForGsoap.h:19448 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection (-818)

typedef gml__CodeWithAuthorityType _gml__axisDirection;
#endif

/* witsml1_4_1_1ForGsoap.h:19454 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue (-819)

typedef double _gml__minimumValue;
#endif

/* witsml1_4_1_1ForGsoap.h:19460 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue (-820)

typedef double _gml__maximumValue;
#endif

/* witsml1_4_1_1ForGsoap.h:19466 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning (-821)

typedef gml__CodeWithAuthorityType _gml__rangeMeaning;
#endif

/* witsml1_4_1_1ForGsoap.h:19472 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS (-822)

typedef gml__CartesianCSPropertyType _gml__cartesianCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19478 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS (-823)

typedef gml__CartesianCSType _gml__CartesianCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19484 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS (-824)

typedef gml__SphericalCSPropertyType _gml__sphericalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19490 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS (-825)

typedef gml__SphericalCSType _gml__SphericalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19496 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum (-826)

typedef gml__GeodeticDatumPropertyType _gml__geodeticDatum;
#endif

/* witsml1_4_1_1ForGsoap.h:19502 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum (-827)

typedef gml__GeodeticDatumType _gml__GeodeticDatum;
#endif

/* witsml1_4_1_1ForGsoap.h:19512 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition (-828)

typedef gml__CodeType _gml__anchorDefinition;
#endif

/* witsml1_4_1_1ForGsoap.h:19518 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch (-829)

typedef xsd__date _gml__realizationEpoch;
#endif

/* witsml1_4_1_1ForGsoap.h:19524 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian (-830)

typedef gml__PrimeMeridianPropertyType _gml__primeMeridian;
#endif

/* witsml1_4_1_1ForGsoap.h:19530 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian (-831)

typedef gml__PrimeMeridianType _gml__PrimeMeridian;
#endif

/* witsml1_4_1_1ForGsoap.h:19536 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude (-832)

typedef gml__AngleType _gml__greenwichLongitude;
#endif

/* witsml1_4_1_1ForGsoap.h:19542 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid (-833)

typedef gml__EllipsoidPropertyType _gml__ellipsoid;
#endif

/* witsml1_4_1_1ForGsoap.h:19548 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid (-834)

typedef gml__EllipsoidType _gml__Ellipsoid;
#endif

/* witsml1_4_1_1ForGsoap.h:19554 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis (-835)

typedef gml__MeasureType _gml__semiMajorAxis;
#endif

/* witsml1_4_1_1ForGsoap.h:19560 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS (-836)

typedef gml__ProjectedCRSType _gml__ProjectedCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19566 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion (-837)

typedef gml__GeneralConversionPropertyType _gml__conversion;
#endif

/* witsml1_4_1_1ForGsoap.h:19572 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion (-838)

typedef std::string _gml__operationVersion;
#endif

/* witsml1_4_1_1ForGsoap.h:19578 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS (-839)

typedef gml__CRSPropertyType _gml__sourceCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19584 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS (-840)

typedef gml__CRSPropertyType _gml__targetCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19590 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS (-841)

typedef gml__GeodeticCRSPropertyType _gml__baseGeodeticCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19596 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS (-842)

typedef gml__VerticalCRSType _gml__VerticalCRS;
#endif

/* witsml1_4_1_1ForGsoap.h:19602 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS (-843)

typedef gml__VerticalCSPropertyType _gml__verticalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19608 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS (-844)

typedef gml__VerticalCSType _gml__VerticalCS;
#endif

/* witsml1_4_1_1ForGsoap.h:19614 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum (-845)

typedef gml__VerticalDatumPropertyType _gml__verticalDatum;
#endif

/* witsml1_4_1_1ForGsoap.h:19620 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum (-846)

typedef gml__VerticalDatumType _gml__VerticalDatum;
#endif

/* witsml1_4_1_1ForGsoap.h:19634 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id (-847)

typedef xsd__ID _gml__id;
#endif

/* witsml1_4_1_1ForGsoap.h:19653 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href (-848)

typedef xsd__anyURI _xlink__href;
#endif

/* witsml1_4_1_1ForGsoap.h:19656 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role (-849)

typedef xsd__anyURI _xlink__role;
#endif

/* witsml1_4_1_1ForGsoap.h:19659 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole (-850)

typedef xsd__anyURI _xlink__arcrole;
#endif

/* witsml1_4_1_1ForGsoap.h:19662 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title (-851)

typedef std::string _xlink__title;
#endif

/* witsml1_4_1_1ForGsoap.h:19673 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent (-852)

typedef gmd__EX_USCOREExtent_USCOREType _gmd__EX_USCOREExtent;
#endif

/* witsml1_4_1_1ForGsoap.h:19676 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent (-853)

typedef gmd__EX_USCORETemporalExtent_USCOREType _gmd__EX_USCORETemporalExtent;
#endif

/* witsml1_4_1_1ForGsoap.h:19679 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent (-854)

typedef gmd__EX_USCOREVerticalExtent_USCOREType _gmd__EX_USCOREVerticalExtent;
#endif

/* witsml1_4_1_1ForGsoap.h:19682 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier (-855)

typedef gmd__MD_USCOREIdentifier_USCOREType _gmd__MD_USCOREIdentifier;
#endif

/* witsml1_4_1_1ForGsoap.h:19685 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation (-856)

typedef gmd__CI_USCORECitation_USCOREType _gmd__CI_USCORECitation;
#endif

/* witsml1_4_1_1ForGsoap.h:19688 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate (-857)

typedef gmd__CI_USCOREDate_USCOREType _gmd__CI_USCOREDate;
#endif

/* witsml1_4_1_1ForGsoap.h:19691 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode (-858)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREDateTypeCode;
#endif

/* witsml1_4_1_1ForGsoap.h:19694 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty (-859)

typedef gmd__CI_USCOREResponsibleParty_USCOREType _gmd__CI_USCOREResponsibleParty;
#endif

/* witsml1_4_1_1ForGsoap.h:19697 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact (-860)

typedef gmd__CI_USCOREContact_USCOREType _gmd__CI_USCOREContact;
#endif

/* witsml1_4_1_1ForGsoap.h:19700 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone (-861)

typedef gmd__CI_USCORETelephone_USCOREType _gmd__CI_USCORETelephone;
#endif

/* witsml1_4_1_1ForGsoap.h:19703 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress (-862)

typedef gmd__CI_USCOREAddress_USCOREType _gmd__CI_USCOREAddress;
#endif

/* witsml1_4_1_1ForGsoap.h:19706 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource (-863)

typedef gmd__CI_USCOREOnlineResource_USCOREType _gmd__CI_USCOREOnlineResource;
#endif

/* witsml1_4_1_1ForGsoap.h:19709 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL (-864)

typedef xsd__anyURI _gmd__URL;
#endif

/* witsml1_4_1_1ForGsoap.h:19712 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode (-865)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREOnLineFunctionCode;
#endif

/* witsml1_4_1_1ForGsoap.h:19715 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode (-866)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCORERoleCode;
#endif

/* witsml1_4_1_1ForGsoap.h:19718 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode (-867)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREPresentationFormCode;
#endif

/* witsml1_4_1_1ForGsoap.h:19721 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries (-868)

typedef gmd__CI_USCORESeries_USCOREType _gmd__CI_USCORESeries;
#endif

/* witsml1_4_1_1ForGsoap.h:19724 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode (-869)

typedef gco__CodeListValue_USCOREType _gmd__DQ_USCOREEvaluationMethodTypeCode;
#endif

/* witsml1_4_1_1ForGsoap.h:19759 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString (-870)

typedef std::string _gco__CharacterString;
#endif

/* witsml1_4_1_1ForGsoap.h:19762 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean (-871)

typedef bool _gco__Boolean;
#endif

/* witsml1_4_1_1ForGsoap.h:19765 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real (-872)

typedef double _gco__Real;
#endif

/* witsml1_4_1_1ForGsoap.h:19768 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date (-873)

typedef gco__Date_USCOREType _gco__Date;
#endif

/* witsml1_4_1_1ForGsoap.h:19771 */
#ifndef SOAP_TYPE__gco__DateTime
#define SOAP_TYPE__gco__DateTime (-874)

typedef xsd__dateTime _gco__DateTime;
#endif

/* witsml1_4_1_1ForGsoap.h:19782 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason (-875)

typedef gml__NilReasonType _gco__nilReason;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_byte
#define SOAP_TYPE_gsoap_witsml1_4_1_1_byte (-3)

#endif

/* witsml1__positiveCount has binding name 'witsml1__positiveCount' for type 'witsml1:positiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount (-282)

#endif

/* witsml1__abstractPositiveCount has binding name 'witsml1__abstractPositiveCount' for type 'witsml1:abstractPositiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount (-264)

#endif

/* witsml1__levelIntegerCode has binding name 'witsml1__levelIntegerCode' for type 'witsml1:levelIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode (-260)

#endif

/* witsml1__iadcIntegerCode has binding name 'witsml1__iadcIntegerCode' for type 'witsml1:iadcIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode (-259)

#endif

/* witsml1__pumpActionIntegerCode has binding name 'witsml1__pumpActionIntegerCode' for type 'witsml1:pumpActionIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode (-258)

#endif

/* witsml1__beaufortScaleIntegerCode has binding name 'witsml1__beaufortScaleIntegerCode' for type 'witsml1:beaufortScaleIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode (-257)

#endif

/* witsml1__nonNegativeCount has binding name 'witsml1__nonNegativeCount' for type 'witsml1:nonNegativeCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount (-254)

#endif

/* witsml1__abstractShort has binding name 'witsml1__abstractShort' for type 'witsml1:abstractShort' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort (-231)

#endif

/* short has binding name 'short' for type 'xsd:short' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_short
#define SOAP_TYPE_gsoap_witsml1_4_1_1_short (-230)

#endif

/* witsml1__integerCount has binding name 'witsml1__integerCount' for type 'witsml1:integerCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount (-256)

#endif

/* witsml1__positiveBigCount has binding name 'witsml1__positiveBigCount' for type 'witsml1:positiveBigCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount (-255)

#endif

/* witsml1__calendarYear has binding name 'witsml1__calendarYear' for type 'witsml1:calendarYear' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear (-242)

#endif

/* witsml1__abstractInt has binding name 'witsml1__abstractInt' for type 'witsml1:abstractInt' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt (-232)

#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_int
#define SOAP_TYPE_gsoap_witsml1_4_1_1_int (-1)

#endif

/* _gco__Real has binding name '_gco__Real' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real (-872)

#endif

/* _gml__maximumValue has binding name '_gml__maximumValue' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue (-820)

#endif

/* _gml__minimumValue has binding name '_gml__minimumValue' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue (-819)

#endif

/* witsml1__gtZeroAndLeOne has binding name 'witsml1__gtZeroAndLeOne' for type 'witsml1:gtZeroAndLeOne' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne (-253)

#endif

/* witsml1__unitlessQuantity has binding name 'witsml1__unitlessQuantity' for type 'witsml1:unitlessQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity (-244)

#endif

/* witsml1__abstractDouble has binding name 'witsml1__abstractDouble' for type 'witsml1:abstractDouble' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble (-229)

#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_double
#define SOAP_TYPE_gsoap_witsml1_4_1_1_double (-228)

#endif

/* _gco__Boolean has binding name '_gco__Boolean' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean (-871)

#endif

/* enum _gml__RelatedTimeType_relativePosition has binding name '_gml__RelatedTimeType_relativePosition' for type 'gml:RelatedTimeType-relativePosition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition (-731)

#endif

/* enum witsml1__WellStatus has binding name 'witsml1__WellStatus' for type 'witsml1:WellStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus (-442)

#endif

/* enum witsml1__WellPurpose has binding name 'witsml1__WellPurpose' for type 'witsml1:WellPurpose' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose (-441)

#endif

/* enum witsml1__WellboreType has binding name 'witsml1__WellboreType' for type 'witsml1:WellboreType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType (-440)

#endif

/* enum witsml1__WellboreShape has binding name 'witsml1__WellboreShape' for type 'witsml1:WellboreShape' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape (-439)

#endif

/* enum witsml1__WellTestType has binding name 'witsml1__WellTestType' for type 'witsml1:WellTestType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType (-438)

#endif

/* enum witsml1__WellNamingSystem has binding name 'witsml1__WellNamingSystem' for type 'witsml1:WellNamingSystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem (-437)

#endif

/* enum witsml1__WellKillingProcedureType has binding name 'witsml1__WellKillingProcedureType' for type 'witsml1:WellKillingProcedureType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType (-436)

#endif

/* enum witsml1__WellFluid has binding name 'witsml1__WellFluid' for type 'witsml1:WellFluid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid (-435)

#endif

/* enum witsml1__WellDirection has binding name 'witsml1__WellDirection' for type 'witsml1:WellDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection (-434)

#endif

/* enum witsml1__WellControlIncidentType has binding name 'witsml1__WellControlIncidentType' for type 'witsml1:WellControlIncidentType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType (-433)

#endif

/* enum witsml1__TubularComponent has binding name 'witsml1__TubularComponent' for type 'witsml1:TubularComponent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent (-431)

#endif

/* enum witsml1__TubularAssembly has binding name 'witsml1__TubularAssembly' for type 'witsml1:TubularAssembly' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly (-430)

#endif

/* enum witsml1__TrajStationType has binding name 'witsml1__TrajStationType' for type 'witsml1:TrajStationType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType (-429)

#endif

/* enum witsml1__TrajStationStatus has binding name 'witsml1__TrajStationStatus' for type 'witsml1:TrajStationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus (-428)

#endif

/* enum witsml1__TargetSectionScope has binding name 'witsml1__TargetSectionScope' for type 'witsml1:TargetSectionScope' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope (-426)

#endif

/* enum witsml1__TargetScope has binding name 'witsml1__TargetScope' for type 'witsml1:TargetScope' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope (-425)

#endif

/* enum witsml1__TargetCategory has binding name 'witsml1__TargetCategory' for type 'witsml1:TargetCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory (-424)

#endif

/* enum witsml1__SurveyToolOperatingMode has binding name 'witsml1__SurveyToolOperatingMode' for type 'witsml1:SurveyToolOperatingMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode (-423)

#endif

/* enum witsml1__SurfEquipType has binding name 'witsml1__SurfEquipType' for type 'witsml1:SurfEquipType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType (-422)

#endif

/* enum witsml1__SupportCraft has binding name 'witsml1__SupportCraft' for type 'witsml1:SupportCraft' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft (-421)

#endif

/* enum witsml1__StimStageType has binding name 'witsml1__StimStageType' for type 'witsml1:StimStageType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType (-420)

#endif

/* enum witsml1__StimStageFlowPathType has binding name 'witsml1__StimStageFlowPathType' for type 'witsml1:StimStageFlowPathType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType (-419)

#endif

/* enum witsml1__StimProppantType has binding name 'witsml1__StimProppantType' for type 'witsml1:StimProppantType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType (-418)

#endif

/* enum witsml1__StimFluidType has binding name 'witsml1__StimFluidType' for type 'witsml1:StimFluidType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType (-417)

#endif

/* enum witsml1__StimFluidSubtype has binding name 'witsml1__StimFluidSubtype' for type 'witsml1:StimFluidSubtype' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype (-416)

#endif

/* enum witsml1__StimAnalysisMethod has binding name 'witsml1__StimAnalysisMethod' for type 'witsml1:StimAnalysisMethod' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod (-415)

#endif

/* enum witsml1__StimAdditiveType has binding name 'witsml1__StimAdditiveType' for type 'witsml1:StimAdditiveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType (-414)

#endif

/* enum witsml1__StateDetailActivity has binding name 'witsml1__StateDetailActivity' for type 'witsml1:StateDetailActivity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity (-413)

#endif

/* enum witsml1__ShowSpeed has binding name 'witsml1__ShowSpeed' for type 'witsml1:ShowSpeed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed (-412)

#endif

/* enum witsml1__ShowRating has binding name 'witsml1__ShowRating' for type 'witsml1:ShowRating' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating (-411)

#endif

/* enum witsml1__ShowLevel has binding name 'witsml1__ShowLevel' for type 'witsml1:ShowLevel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel (-410)

#endif

/* enum witsml1__ShowFluorescence has binding name 'witsml1__ShowFluorescence' for type 'witsml1:ShowFluorescence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence (-409)

#endif

/* enum witsml1__ScrType has binding name 'witsml1__ScrType' for type 'witsml1:ScrType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType (-408)

#endif

/* enum witsml1__RiskType has binding name 'witsml1__RiskType' for type 'witsml1:RiskType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType (-407)

#endif

/* enum witsml1__RiskSubCategory has binding name 'witsml1__RiskSubCategory' for type 'witsml1:RiskSubCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory (-406)

#endif

/* enum witsml1__RiskCategory has binding name 'witsml1__RiskCategory' for type 'witsml1:RiskCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory (-405)

#endif

/* enum witsml1__RiskAffectedPersonnel has binding name 'witsml1__RiskAffectedPersonnel' for type 'witsml1:RiskAffectedPersonnel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel (-404)

#endif

/* enum witsml1__RigType has binding name 'witsml1__RigType' for type 'witsml1:RigType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType (-403)

#endif

/* enum witsml1__ReadingKind has binding name 'witsml1__ReadingKind' for type 'witsml1:ReadingKind' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind (-402)

#endif

/* enum witsml1__PumpOpType has binding name 'witsml1__PumpOpType' for type 'witsml1:PumpOpType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType (-400)

#endif

/* enum witsml1__PumpType has binding name 'witsml1__PumpType' for type 'witsml1:PumpType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType (-399)

#endif

/* enum witsml1__PrincipalMeridian has binding name 'witsml1__PrincipalMeridian' for type 'witsml1:PrincipalMeridian' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian (-398)

#endif

/* enum witsml1__PresTestType has binding name 'witsml1__PresTestType' for type 'witsml1:PresTestType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType (-397)

#endif

/* enum witsml1__ProjectionVariantsObliqueMercator has binding name 'witsml1__ProjectionVariantsObliqueMercator' for type 'witsml1:ProjectionVariantsObliqueMercator' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator (-396)

#endif

/* enum witsml1__Projection has binding name 'witsml1__Projection' for type 'witsml1:Projection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection (-395)

#endif

/* enum witsml1__PrimitiveType has binding name 'witsml1__PrimitiveType' for type 'witsml1:PrimitiveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType (-394)

#endif

/* enum witsml1__PitType has binding name 'witsml1__PitType' for type 'witsml1:PitType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType (-393)

#endif

/* enum witsml1__PIDXCommodityCode has binding name 'witsml1__PIDXCommodityCode' for type 'witsml1:PIDXCommodityCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode (-392)

#endif

/* enum witsml1__OpsReportVersion has binding name 'witsml1__OpsReportVersion' for type 'witsml1:OpsReportVersion' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion (-391)

#endif

/* enum witsml1__NozzleType has binding name 'witsml1__NozzleType' for type 'witsml1:NozzleType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType (-390)

#endif

/* enum witsml1__NorthOrSouth has binding name 'witsml1__NorthOrSouth' for type 'witsml1:NorthOrSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth (-389)

#endif

/* enum witsml1__NADTypes has binding name 'witsml1__NADTypes' for type 'witsml1:NADTypes' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes (-385)

#endif

/* enum witsml1__MudLogParameterType has binding name 'witsml1__MudLogParameterType' for type 'witsml1:MudLogParameterType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType (-383)

#endif

/* enum witsml1__MudClass has binding name 'witsml1__MudClass' for type 'witsml1:MudClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass (-382)

#endif

/* enum witsml1__MessageType has binding name 'witsml1__MessageType' for type 'witsml1:MessageType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType (-381)

#endif

/* enum witsml1__MessageSeverity has binding name 'witsml1__MessageSeverity' for type 'witsml1:MessageSeverity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity (-380)

#endif

/* enum witsml1__MessageProbability has binding name 'witsml1__MessageProbability' for type 'witsml1:MessageProbability' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability (-379)

#endif

/* enum witsml1__MeasurementType has binding name 'witsml1__MeasurementType' for type 'witsml1:MeasurementType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType (-378)

#endif

/* enum witsml1__MaterialType has binding name 'witsml1__MaterialType' for type 'witsml1:MaterialType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType (-375)

#endif

/* enum witsml1__LogTraceState has binding name 'witsml1__LogTraceState' for type 'witsml1:LogTraceState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState (-374)

#endif

/* enum witsml1__LogTraceOrigin has binding name 'witsml1__LogTraceOrigin' for type 'witsml1:LogTraceOrigin' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin (-373)

#endif

/* enum witsml1__LogIndexType has binding name 'witsml1__LogIndexType' for type 'witsml1:LogIndexType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType (-372)

#endif

/* enum witsml1__LogIndexDirection has binding name 'witsml1__LogIndexDirection' for type 'witsml1:LogIndexDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection (-371)

#endif

/* enum witsml1__LogDataType has binding name 'witsml1__LogDataType' for type 'witsml1:LogDataType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType (-370)

#endif

/* enum witsml1__LithostratigraphyUnit has binding name 'witsml1__LithostratigraphyUnit' for type 'witsml1:LithostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit (-369)

#endif

/* enum witsml1__LithologySource has binding name 'witsml1__LithologySource' for type 'witsml1:LithologySource' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource (-367)

#endif

/* enum witsml1__JarAction has binding name 'witsml1__JarAction' for type 'witsml1:JarAction' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction (-366)

#endif

/* enum witsml1__JarType has binding name 'witsml1__JarType' for type 'witsml1:JarType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType (-365)

#endif

/* enum witsml1__ItemState has binding name 'witsml1__ItemState' for type 'witsml1:ItemState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState (-364)

#endif

/* enum witsml1__InnerBarrelType has binding name 'witsml1__InnerBarrelType' for type 'witsml1:InnerBarrelType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType (-363)

#endif

/* enum witsml1__HoleOpenerType has binding name 'witsml1__HoleOpenerType' for type 'witsml1:HoleOpenerType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType (-362)

#endif

/* enum witsml1__HoleCasingType has binding name 'witsml1__HoleCasingType' for type 'witsml1:HoleCasingType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType (-361)

#endif

/* enum witsml1__Hemispheres has binding name 'witsml1__Hemispheres' for type 'witsml1:Hemispheres' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres (-360)

#endif

/* enum witsml1__GeodeticDatum has binding name 'witsml1__GeodeticDatum' for type 'witsml1:GeodeticDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum (-359)

#endif

/* enum witsml1__GasPeakType has binding name 'witsml1__GasPeakType' for type 'witsml1:GasPeakType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType (-358)

#endif

/* enum witsml1__ErrorModelMisalignmentMode has binding name 'witsml1__ErrorModelMisalignmentMode' for type 'witsml1:ErrorModelMisalignmentMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode (-356)

#endif

/* enum witsml1__ErrorPropagationMode has binding name 'witsml1__ErrorPropagationMode' for type 'witsml1:ErrorPropagationMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode (-355)

#endif

/* enum witsml1__ErrorTermSource has binding name 'witsml1__ErrorTermSource' for type 'witsml1:ErrorTermSource' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource (-354)

#endif

/* enum witsml1__Ellipsoid has binding name 'witsml1__Ellipsoid' for type 'witsml1:Ellipsoid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid (-353)

#endif

/* enum witsml1__ElevCodeEnum has binding name 'witsml1__ElevCodeEnum' for type 'witsml1:ElevCodeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum (-352)

#endif

/* enum witsml1__EastOrWest has binding name 'witsml1__EastOrWest' for type 'witsml1:EastOrWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest (-351)

#endif

/* enum witsml1__DriveType has binding name 'witsml1__DriveType' for type 'witsml1:DriveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType (-350)

#endif

/* enum witsml1__DrawWorksType has binding name 'witsml1__DrawWorksType' for type 'witsml1:DrawWorksType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType (-349)

#endif

/* enum witsml1__DerrickType has binding name 'witsml1__DerrickType' for type 'witsml1:DerrickType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType (-348)

#endif

/* enum witsml1__DeflectionMethod has binding name 'witsml1__DeflectionMethod' for type 'witsml1:DeflectionMethod' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod (-347)

#endif

/* enum witsml1__ConnectionPosition has binding name 'witsml1__ConnectionPosition' for type 'witsml1:ConnectionPosition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition (-346)

#endif

/* enum witsml1__ChronostratigraphyUnit has binding name 'witsml1__ChronostratigraphyUnit' for type 'witsml1:ChronostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit (-345)

#endif

/* enum witsml1__ChangeInfoType has binding name 'witsml1__ChangeInfoType' for type 'witsml1:ChangeInfoType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType (-344)

#endif

/* enum witsml1__CementJobType has binding name 'witsml1__CementJobType' for type 'witsml1:CementJobType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType (-343)

#endif

/* enum witsml1__BoxPinConfig has binding name 'witsml1__BoxPinConfig' for type 'witsml1:BoxPinConfig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig (-342)

#endif

/* enum witsml1__BopType has binding name 'witsml1__BopType' for type 'witsml1:BopType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType (-341)

#endif

/* enum witsml1__BladeType has binding name 'witsml1__BladeType' for type 'witsml1:BladeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType (-340)

#endif

/* enum witsml1__BladeShapeType has binding name 'witsml1__BladeShapeType' for type 'witsml1:BladeShapeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType (-339)

#endif

/* enum witsml1__BhaStatus has binding name 'witsml1__BhaStatus' for type 'witsml1:BhaStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus (-338)

#endif

/* enum witsml1__BitType has binding name 'witsml1__BitType' for type 'witsml1:BitType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType (-337)

#endif

/* enum witsml1__BitReasonPulled has binding name 'witsml1__BitReasonPulled' for type 'witsml1:BitReasonPulled' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled (-336)

#endif

/* enum witsml1__BitDullCode has binding name 'witsml1__BitDullCode' for type 'witsml1:BitDullCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode (-335)

#endif

/* enum witsml1__BearingType has binding name 'witsml1__BearingType' for type 'witsml1:BearingType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType (-334)

#endif

/* enum witsml1__AziRef has binding name 'witsml1__AziRef' for type 'witsml1:AziRef' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef (-333)

#endif

/* enum witsml1__AuthorizationStatus has binding name 'witsml1__AuthorizationStatus' for type 'witsml1:AuthorizationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus (-332)

#endif

/* enum witsml1__ActivityClassType has binding name 'witsml1__ActivityClassType' for type 'witsml1:ActivityClassType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType (-330)

#endif

/* enum witsml1__VolumePerVolumeUom has binding name 'witsml1__VolumePerVolumeUom' for type 'witsml1:VolumePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom (-328)

#endif

/* enum witsml1__VolumePerLengthUom has binding name 'witsml1__VolumePerLengthUom' for type 'witsml1:VolumePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom (-327)

#endif

/* enum witsml1__VolumeFlowRateUom has binding name 'witsml1__VolumeFlowRateUom' for type 'witsml1:VolumeFlowRateUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom (-326)

#endif

/* enum witsml1__VolumeUom has binding name 'witsml1__VolumeUom' for type 'witsml1:VolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom (-325)

#endif

/* enum witsml1__VelocityUom has binding name 'witsml1__VelocityUom' for type 'witsml1:VelocityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom (-324)

#endif

/* enum witsml1__TimeUom has binding name 'witsml1__TimeUom' for type 'witsml1:TimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom (-323)

#endif

/* enum witsml1__ThermodynamicTemperatureUom has binding name 'witsml1__ThermodynamicTemperatureUom' for type 'witsml1:ThermodynamicTemperatureUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom (-322)

#endif

/* enum witsml1__ThermalVolumetricExpansionUom has binding name 'witsml1__ThermalVolumetricExpansionUom' for type 'witsml1:ThermalVolumetricExpansionUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom (-321)

#endif

/* enum witsml1__ThermalConductivityUom has binding name 'witsml1__ThermalConductivityUom' for type 'witsml1:ThermalConductivityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom (-320)

#endif

/* enum witsml1__StandardVolumePerTimeUom has binding name 'witsml1__StandardVolumePerTimeUom' for type 'witsml1:StandardVolumePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom (-319)

#endif

/* enum witsml1__StandardVolumeUom has binding name 'witsml1__StandardVolumeUom' for type 'witsml1:StandardVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom (-318)

#endif

/* enum witsml1__SpecificVolumeUom has binding name 'witsml1__SpecificVolumeUom' for type 'witsml1:SpecificVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom (-317)

#endif

/* enum witsml1__SpecificHeatCapacityUom has binding name 'witsml1__SpecificHeatCapacityUom' for type 'witsml1:SpecificHeatCapacityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom (-316)

#endif

/* enum witsml1__RelativePowerUom has binding name 'witsml1__RelativePowerUom' for type 'witsml1:RelativePowerUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom (-315)

#endif

/* enum witsml1__PressureUom has binding name 'witsml1__PressureUom' for type 'witsml1:PressureUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom (-314)

#endif

/* enum witsml1__PowerUom has binding name 'witsml1__PowerUom' for type 'witsml1:PowerUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom (-313)

#endif

/* enum witsml1__PlaneAngleUom has binding name 'witsml1__PlaneAngleUom' for type 'witsml1:PlaneAngleUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom (-312)

#endif

/* enum witsml1__PermeabilityRockUom has binding name 'witsml1__PermeabilityRockUom' for type 'witsml1:PermeabilityRockUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom (-311)

#endif

/* enum witsml1__PerLengthUom has binding name 'witsml1__PerLengthUom' for type 'witsml1:PerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom (-310)

#endif

/* enum witsml1__MomentOfForceUom has binding name 'witsml1__MomentOfForceUom' for type 'witsml1:MomentOfForceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom (-309)

#endif

/* enum witsml1__MassPerLengthUom has binding name 'witsml1__MassPerLengthUom' for type 'witsml1:MassPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom (-308)

#endif

/* enum witsml1__MassUom has binding name 'witsml1__MassUom' for type 'witsml1:MassUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom (-307)

#endif

/* enum witsml1__MassConcentrationUom has binding name 'witsml1__MassConcentrationUom' for type 'witsml1:MassConcentrationUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom (-306)

#endif

/* enum witsml1__MagneticInductionUom has binding name 'witsml1__MagneticInductionUom' for type 'witsml1:MagneticInductionUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom (-305)

#endif

/* enum witsml1__LengthPerLengthUom has binding name 'witsml1__LengthPerLengthUom' for type 'witsml1:LengthPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom (-304)

#endif

/* enum witsml1__LengthUom has binding name 'witsml1__LengthUom' for type 'witsml1:LengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom (-303)

#endif

/* enum witsml1__IlluminanceUom has binding name 'witsml1__IlluminanceUom' for type 'witsml1:IlluminanceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom (-302)

#endif

/* enum witsml1__ForcePerVolumeUom has binding name 'witsml1__ForcePerVolumeUom' for type 'witsml1:ForcePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom (-301)

#endif

/* enum witsml1__ForcePerLengthUom has binding name 'witsml1__ForcePerLengthUom' for type 'witsml1:ForcePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom (-300)

#endif

/* enum witsml1__ForceUom has binding name 'witsml1__ForceUom' for type 'witsml1:ForceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom (-299)

#endif

/* enum witsml1__EquivalentPerMassUom has binding name 'witsml1__EquivalentPerMassUom' for type 'witsml1:EquivalentPerMassUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom (-298)

#endif

/* enum witsml1__ElectricPotentialUom has binding name 'witsml1__ElectricPotentialUom' for type 'witsml1:ElectricPotentialUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom (-297)

#endif

/* enum witsml1__ElectricCurrentUom has binding name 'witsml1__ElectricCurrentUom' for type 'witsml1:ElectricCurrentUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom (-296)

#endif

/* enum witsml1__DynamicViscosityUom has binding name 'witsml1__DynamicViscosityUom' for type 'witsml1:DynamicViscosityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom (-295)

#endif

/* enum witsml1__DimensionlessUom has binding name 'witsml1__DimensionlessUom' for type 'witsml1:DimensionlessUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom (-294)

#endif

/* enum witsml1__DensityUom has binding name 'witsml1__DensityUom' for type 'witsml1:DensityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom (-293)

#endif

/* enum witsml1__CompressibilityUom has binding name 'witsml1__CompressibilityUom' for type 'witsml1:CompressibilityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom (-292)

#endif

/* enum witsml1__AreaPerAreaUom has binding name 'witsml1__AreaPerAreaUom' for type 'witsml1:AreaPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom (-291)

#endif

/* enum witsml1__AreaUom has binding name 'witsml1__AreaUom' for type 'witsml1:AreaUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom (-290)

#endif

/* enum witsml1__AnglePerTimeUom has binding name 'witsml1__AnglePerTimeUom' for type 'witsml1:AnglePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom (-289)

#endif

/* enum witsml1__AnglePerLengthUom has binding name 'witsml1__AnglePerLengthUom' for type 'witsml1:AnglePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom (-288)

#endif

/* enum witsml1__AccelerationLinearUom has binding name 'witsml1__AccelerationLinearUom' for type 'witsml1:AccelerationLinearUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom (-287)

#endif

/* enum witsml1__WellVerticalCoordinateUom has binding name 'witsml1__WellVerticalCoordinateUom' for type 'witsml1:WellVerticalCoordinateUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom (-286)

#endif

/* enum witsml1__MeasuredDepthUom has binding name 'witsml1__MeasuredDepthUom' for type 'witsml1:MeasuredDepthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom (-285)

#endif

/* enum witsml1__PercentUom has binding name 'witsml1__PercentUom' for type 'witsml1:PercentUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom (-284)

#endif

/* witsml1__logicalBoolean has binding name 'witsml1__logicalBoolean' for type 'witsml1:logicalBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean (-243)

#endif

/* enum _xlink__actuate has binding name '_xlink__actuate' for type 'xlink:actuate' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate (-239)

#endif

/* enum _xlink__show has binding name '_xlink__show' for type 'xlink:show' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show (-238)

#endif

/* enum gml__AggregationType has binding name 'gml__AggregationType' for type 'gml:AggregationType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType (-237)

#endif

/* witsml1__abstractBoolean has binding name 'witsml1__abstractBoolean' for type 'witsml1:abstractBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean (-225)

#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_bool
#define SOAP_TYPE_gsoap_witsml1_4_1_1_bool (-224)

#endif

/* _gco__nilReason has binding name '_gco__nilReason' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason (-875)

#endif

/* _gco__Date has binding name '_gco__Date' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date (-873)

#endif

/* _gco__CharacterString has binding name '_gco__CharacterString' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString (-870)

#endif

/* _gmd__DQ_USCOREEvaluationMethodTypeCode has binding name '_gmd__DQ_USCOREEvaluationMethodTypeCode' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode (-869)

#endif

/* _gmd__CI_USCORESeries has binding name '_gmd__CI_USCORESeries' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries (-868)

#endif

/* _gmd__CI_USCOREPresentationFormCode has binding name '_gmd__CI_USCOREPresentationFormCode' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode (-867)

#endif

/* _gmd__CI_USCORERoleCode has binding name '_gmd__CI_USCORERoleCode' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode (-866)

#endif

/* _gmd__CI_USCOREOnLineFunctionCode has binding name '_gmd__CI_USCOREOnLineFunctionCode' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode (-865)

#endif

/* _gmd__URL has binding name '_gmd__URL' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL (-864)

#endif

/* _gmd__CI_USCOREOnlineResource has binding name '_gmd__CI_USCOREOnlineResource' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource (-863)

#endif

/* _gmd__CI_USCOREAddress has binding name '_gmd__CI_USCOREAddress' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress (-862)

#endif

/* _gmd__CI_USCORETelephone has binding name '_gmd__CI_USCORETelephone' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone (-861)

#endif

/* _gmd__CI_USCOREContact has binding name '_gmd__CI_USCOREContact' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact (-860)

#endif

/* _gmd__CI_USCOREResponsibleParty has binding name '_gmd__CI_USCOREResponsibleParty' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty (-859)

#endif

/* _gmd__CI_USCOREDateTypeCode has binding name '_gmd__CI_USCOREDateTypeCode' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode (-858)

#endif

/* _gmd__CI_USCOREDate has binding name '_gmd__CI_USCOREDate' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate (-857)

#endif

/* _gmd__CI_USCORECitation has binding name '_gmd__CI_USCORECitation' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation (-856)

#endif

/* _gmd__MD_USCOREIdentifier has binding name '_gmd__MD_USCOREIdentifier' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier (-855)

#endif

/* _gmd__EX_USCOREVerticalExtent has binding name '_gmd__EX_USCOREVerticalExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent (-854)

#endif

/* _gmd__EX_USCORETemporalExtent has binding name '_gmd__EX_USCORETemporalExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent (-853)

#endif

/* _gmd__EX_USCOREExtent has binding name '_gmd__EX_USCOREExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent (-852)

#endif

/* _xlink__title has binding name '_xlink__title' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title (-851)

#endif

/* _xlink__arcrole has binding name '_xlink__arcrole' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole (-850)

#endif

/* _xlink__role has binding name '_xlink__role' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role (-849)

#endif

/* _xlink__href has binding name '_xlink__href' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href (-848)

#endif

/* _gml__id has binding name '_gml__id' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id (-847)

#endif

/* _gml__VerticalDatum has binding name '_gml__VerticalDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum (-846)

#endif

/* _gml__verticalDatum has binding name '_gml__verticalDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum (-845)

#endif

/* _gml__VerticalCS has binding name '_gml__VerticalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS (-844)

#endif

/* _gml__verticalCS has binding name '_gml__verticalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS (-843)

#endif

/* _gml__VerticalCRS has binding name '_gml__VerticalCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS (-842)

#endif

/* _gml__baseGeodeticCRS has binding name '_gml__baseGeodeticCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS (-841)

#endif

/* _gml__targetCRS has binding name '_gml__targetCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS (-840)

#endif

/* _gml__sourceCRS has binding name '_gml__sourceCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS (-839)

#endif

/* _gml__operationVersion has binding name '_gml__operationVersion' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion (-838)

#endif

/* _gml__conversion has binding name '_gml__conversion' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion (-837)

#endif

/* _gml__ProjectedCRS has binding name '_gml__ProjectedCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS (-836)

#endif

/* _gml__semiMajorAxis has binding name '_gml__semiMajorAxis' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis (-835)

#endif

/* _gml__Ellipsoid has binding name '_gml__Ellipsoid' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid (-834)

#endif

/* _gml__ellipsoid has binding name '_gml__ellipsoid' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid (-833)

#endif

/* _gml__greenwichLongitude has binding name '_gml__greenwichLongitude' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude (-832)

#endif

/* _gml__PrimeMeridian has binding name '_gml__PrimeMeridian' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian (-831)

#endif

/* _gml__primeMeridian has binding name '_gml__primeMeridian' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian (-830)

#endif

/* _gml__realizationEpoch has binding name '_gml__realizationEpoch' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch (-829)

#endif

/* _gml__anchorDefinition has binding name '_gml__anchorDefinition' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition (-828)

#endif

/* _gml__GeodeticDatum has binding name '_gml__GeodeticDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum (-827)

#endif

/* _gml__geodeticDatum has binding name '_gml__geodeticDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum (-826)

#endif

/* _gml__SphericalCS has binding name '_gml__SphericalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS (-825)

#endif

/* _gml__sphericalCS has binding name '_gml__sphericalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS (-824)

#endif

/* _gml__CartesianCS has binding name '_gml__CartesianCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS (-823)

#endif

/* _gml__cartesianCS has binding name '_gml__cartesianCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS (-822)

#endif

/* _gml__rangeMeaning has binding name '_gml__rangeMeaning' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning (-821)

#endif

/* _gml__axisDirection has binding name '_gml__axisDirection' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection (-818)

#endif

/* _gml__axisAbbrev has binding name '_gml__axisAbbrev' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev (-817)

#endif

/* _gml__CoordinateSystemAxis has binding name '_gml__CoordinateSystemAxis' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis (-816)

#endif

/* _gml__axis has binding name '_gml__axis' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis (-815)

#endif

/* _gml__EllipsoidalCS has binding name '_gml__EllipsoidalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS (-814)

#endif

/* _gml__ellipsoidalCS has binding name '_gml__ellipsoidalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS (-813)

#endif

/* _gml__scope has binding name '_gml__scope' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope (-812)

#endif

/* _gml__Definition has binding name '_gml__Definition' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition (-811)

#endif

/* _gml__remarks has binding name '_gml__remarks' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks (-810)

#endif

/* _gml__name has binding name '_gml__name' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name (-809)

#endif

/* _gml__identifier has binding name '_gml__identifier' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier (-808)

#endif

/* _gml__descriptionReference has binding name '_gml__descriptionReference' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference (-807)

#endif

/* _gml__description has binding name '_gml__description' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description (-806)

#endif

/* _gml__GeodeticCRS has binding name '_gml__GeodeticCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS (-805)

#endif

/* _witsml1__wells has binding name '_witsml1__wells' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells (-804)

#endif

/* _witsml1__wellbores has binding name '_witsml1__wellbores' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores (-803)

#endif

/* _witsml1__trajectorys has binding name '_witsml1__trajectorys' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys (-802)

#endif

/* _witsml1__logs has binding name '_witsml1__logs' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs (-801)

#endif

/* _witsml1__coordinateReferenceSystems has binding name '_witsml1__coordinateReferenceSystems' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems (-800)

#endif

/* _witsml1__formationMarkers has binding name '_witsml1__formationMarkers' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers (-799)

#endif

/* witsml1__commentString has binding name 'witsml1__commentString' for type 'witsml1:commentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString (-443)

#endif

/* witsml1__TypeSurveyTool has binding name 'witsml1__TypeSurveyTool' for type 'witsml1:TypeSurveyTool' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool (-432)

#endif

/* witsml1__TrajStnCalcAlgorithm has binding name 'witsml1__TrajStnCalcAlgorithm' for type 'witsml1:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm (-427)

#endif

/* witsml1__QualifierType has binding name 'witsml1__QualifierType' for type 'witsml1:QualifierType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType (-401)

#endif

/* witsml1__NameTagTechnology has binding name 'witsml1__NameTagTechnology' for type 'witsml1:NameTagTechnology' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology (-388)

#endif

/* witsml1__NameTagNumberingScheme has binding name 'witsml1__NameTagNumberingScheme' for type 'witsml1:NameTagNumberingScheme' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme (-387)

#endif

/* witsml1__NameTagLocation has binding name 'witsml1__NameTagLocation' for type 'witsml1:NameTagLocation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation (-386)

#endif

/* witsml1__MudSubClass has binding name 'witsml1__MudSubClass' for type 'witsml1:MudSubClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass (-384)

#endif

/* witsml1__MeasureClass has binding name 'witsml1__MeasureClass' for type 'witsml1:MeasureClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass (-377)

#endif

/* witsml1__MatrixCementType has binding name 'witsml1__MatrixCementType' for type 'witsml1:MatrixCementType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType (-376)

#endif

/* witsml1__LithologyType has binding name 'witsml1__LithologyType' for type 'witsml1:LithologyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType (-368)

#endif

/* witsml1__ExtensionName has binding name 'witsml1__ExtensionName' for type 'witsml1:ExtensionName' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName (-357)

#endif

/* witsml1__ActivityCode has binding name 'witsml1__ActivityCode' for type 'witsml1:ActivityCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode (-331)

#endif

/* witsml1__abstractCommentString has binding name 'witsml1__abstractCommentString' for type 'witsml1:abstractCommentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString (-329)

#endif

/* witsml1__str32 has binding name 'witsml1__str32' for type 'witsml1:str32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32 (-283)

#endif

/* witsml1__uomString has binding name 'witsml1__uomString' for type 'witsml1:uomString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString (-281)

#endif

/* witsml1__kindString has binding name 'witsml1__kindString' for type 'witsml1:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString (-280)

#endif

/* witsml1__encodedValueString has binding name 'witsml1__encodedValueString' for type 'witsml1:encodedValueString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString (-279)

#endif

/* witsml1__descriptionString has binding name 'witsml1__descriptionString' for type 'witsml1:descriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString (-278)

#endif

/* witsml1__nameString has binding name 'witsml1__nameString' for type 'witsml1:nameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString (-277)

#endif

/* witsml1__refWellDatum has binding name 'witsml1__refWellDatum' for type 'witsml1:refWellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum (-276)

#endif

/* witsml1__refString has binding name 'witsml1__refString' for type 'witsml1:refString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString (-275)

#endif

/* witsml1__uidParentString has binding name 'witsml1__uidParentString' for type 'witsml1:uidParentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString (-274)

#endif

/* witsml1__uidString has binding name 'witsml1__uidString' for type 'witsml1:uidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString (-273)

#endif

/* witsml1__timeZone has binding name 'witsml1__timeZone' for type 'witsml1:timeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone (-272)

#endif

/* witsml1__abstractUomEnum has binding name 'witsml1__abstractUomEnum' for type 'witsml1:abstractUomEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum (-271)

#endif

/* witsml1__abstractTypeEnum has binding name 'witsml1__abstractTypeEnum' for type 'witsml1:abstractTypeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum (-270)

#endif

/* witsml1__abstractString32 has binding name 'witsml1__abstractString32' for type 'witsml1:abstractString32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32 (-269)

#endif

/* witsml1__abstractDescriptionString has binding name 'witsml1__abstractDescriptionString' for type 'witsml1:abstractDescriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString (-268)

#endif

/* witsml1__abstractUidString has binding name 'witsml1__abstractUidString' for type 'witsml1:abstractUidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString (-267)

#endif

/* witsml1__abstractNameString has binding name 'witsml1__abstractNameString' for type 'witsml1:abstractNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString (-266)

#endif

/* witsml1__abstractTimeZone has binding name 'witsml1__abstractTimeZone' for type 'witsml1:abstractTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone (-265)

#endif

/* witsml1__abstractMaximumLengthString has binding name 'witsml1__abstractMaximumLengthString' for type 'witsml1:abstractMaximumLengthString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString (-263)

#endif

/* witsml1__str16 has binding name 'witsml1__str16' for type 'witsml1:str16' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16 (-262)

#endif

/* witsml1__str2 has binding name 'witsml1__str2' for type 'witsml1:str2' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2 (-261)

#endif

/* witsml1__publicLandSurveySystemQuarterSection has binding name 'witsml1__publicLandSurveySystemQuarterSection' for type 'witsml1:publicLandSurveySystemQuarterSection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection (-252)

#endif

/* witsml1__publicLandSurveySystemQuarterTownship has binding name 'witsml1__publicLandSurveySystemQuarterTownship' for type 'witsml1:publicLandSurveySystemQuarterTownship' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship (-251)

#endif

/* witsml1__sectionNumber has binding name 'witsml1__sectionNumber' for type 'witsml1:sectionNumber' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber (-250)

#endif

/* witsml1__geodeticZoneString has binding name 'witsml1__geodeticZoneString' for type 'witsml1:geodeticZoneString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString (-249)

#endif

/* witsml1__iadcBearingWearCode has binding name 'witsml1__iadcBearingWearCode' for type 'witsml1:iadcBearingWearCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode (-248)

#endif

/* witsml1__uncollapsedString has binding name 'witsml1__uncollapsedString' for type 'witsml1:uncollapsedString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString (-247)

#endif

/* witsml1__schemaVersionString has binding name 'witsml1__schemaVersionString' for type 'witsml1:schemaVersionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString (-246)

#endif

/* witsml1__shortDescriptionString has binding name 'witsml1__shortDescriptionString' for type 'witsml1:shortDescriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString (-245)

#endif

/* witsml1__date has binding name 'witsml1__date' for type 'witsml1:date' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date (-240)

#endif

/* gml__UomURI has binding name 'gml__UomURI' for type 'gml:UomURI' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI (-236)

#endif

/* gml__UomSymbol has binding name 'gml__UomSymbol' for type 'gml:UomSymbol' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol (-235)

#endif

/* witsml1__abstractUncollapsedString has binding name 'witsml1__abstractUncollapsedString' for type 'witsml1:abstractUncollapsedString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString (-234)

#endif

/* witsml1__abstractString has binding name 'witsml1__abstractString' for type 'witsml1:abstractString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString (-233)

#endif

/* witsml1__abstractDate has binding name 'witsml1__abstractDate' for type 'witsml1:abstractDate' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate (-227)

#endif

/* gco__Date_USCOREType has binding name 'gco__Date_USCOREType' for type 'gco:Date_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType (-223)

#endif

/* gml__UomIdentifier has binding name 'gml__UomIdentifier' for type 'gml:UomIdentifier' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier (-222)

#endif

/* gml__NilReasonEnumeration has binding name 'gml__NilReasonEnumeration' for type 'gml:NilReasonEnumeration' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration (-221)

#endif

/* gml__NilReasonType has binding name 'gml__NilReasonType' for type 'gml:NilReasonType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType (-220)

#endif

/* witsml1__listOfString has binding name 'witsml1__listOfString' for type 'witsml1:listOfString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString (-219)

#endif

/* gsr__SC_USCORECRS_USCOREPropertyType has binding name 'gsr__SC_USCORECRS_USCOREPropertyType' for type 'gsr:SC_CRS_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType (-218)

#endif

/* gco__DateTime_USCOREPropertyType has binding name 'gco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType (-217)

#endif

/* gco__CodeListValue_USCOREType has binding name 'gco__CodeListValue_USCOREType' for type 'gco:CodeListValue_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType (-216)

#endif

/* gco__Date_USCOREPropertyType has binding name 'gco__Date_USCOREPropertyType' for type 'gco:Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType (-215)

#endif

/* gco__Real_USCOREPropertyType has binding name 'gco__Real_USCOREPropertyType' for type 'gco:Real_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType (-214)

#endif

/* gco__Boolean_USCOREPropertyType has binding name 'gco__Boolean_USCOREPropertyType' for type 'gco:Boolean_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType (-213)

#endif

/* gco__CharacterString_USCOREPropertyType has binding name 'gco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType (-212)

#endif

/* gco__AbstractObject_USCOREType has binding name 'gco__AbstractObject_USCOREType' for type 'gco:AbstractObject_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType (-211)

#endif

/* gts__TM_USCOREPrimitive_USCOREPropertyType has binding name 'gts__TM_USCOREPrimitive_USCOREPropertyType' for type 'gts:TM_Primitive_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType (-210)

#endif

/* gmd__AbstractDQ_USCOREResult_USCOREType has binding name 'gmd__AbstractDQ_USCOREResult_USCOREType' for type 'gmd:AbstractDQ_Result_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType (-209)

#endif

/* gmd__DQ_USCOREResult_USCOREPropertyType has binding name 'gmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType (-208)

#endif

/* gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType has binding name 'gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType' for type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-207)

#endif

/* gmd__CI_USCORESeries_USCOREType has binding name 'gmd__CI_USCORESeries_USCOREType' for type 'gmd:CI_Series_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType (-206)

#endif

/* gmd__CI_USCORESeries_USCOREPropertyType has binding name 'gmd__CI_USCORESeries_USCOREPropertyType' for type 'gmd:CI_Series_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType (-205)

#endif

/* gmd__CI_USCOREPresentationFormCode_USCOREPropertyType has binding name 'gmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-204)

#endif

/* gmd__CI_USCORERoleCode_USCOREPropertyType has binding name 'gmd__CI_USCORERoleCode_USCOREPropertyType' for type 'gmd:CI_RoleCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType (-203)

#endif

/* gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType has binding name 'gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType' for type 'gmd:CI_OnLineFunctionCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-202)

#endif

/* gmd__URL_USCOREPropertyType has binding name 'gmd__URL_USCOREPropertyType' for type 'gmd:URL_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType (-201)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREType has binding name 'gmd__CI_USCOREOnlineResource_USCOREType' for type 'gmd:CI_OnlineResource_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType (-200)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREPropertyType has binding name 'gmd__CI_USCOREOnlineResource_USCOREPropertyType' for type 'gmd:CI_OnlineResource_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType (-199)

#endif

/* gmd__CI_USCOREAddress_USCOREType has binding name 'gmd__CI_USCOREAddress_USCOREType' for type 'gmd:CI_Address_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType (-198)

#endif

/* gmd__CI_USCOREAddress_USCOREPropertyType has binding name 'gmd__CI_USCOREAddress_USCOREPropertyType' for type 'gmd:CI_Address_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType (-197)

#endif

/* gmd__CI_USCORETelephone_USCOREType has binding name 'gmd__CI_USCORETelephone_USCOREType' for type 'gmd:CI_Telephone_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType (-196)

#endif

/* gmd__CI_USCORETelephone_USCOREPropertyType has binding name 'gmd__CI_USCORETelephone_USCOREPropertyType' for type 'gmd:CI_Telephone_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType (-195)

#endif

/* gmd__CI_USCOREContact_USCOREType has binding name 'gmd__CI_USCOREContact_USCOREType' for type 'gmd:CI_Contact_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType (-194)

#endif

/* gmd__CI_USCOREContact_USCOREPropertyType has binding name 'gmd__CI_USCOREContact_USCOREPropertyType' for type 'gmd:CI_Contact_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType (-193)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREType has binding name 'gmd__CI_USCOREResponsibleParty_USCOREType' for type 'gmd:CI_ResponsibleParty_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType (-192)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREPropertyType has binding name 'gmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType (-191)

#endif

/* gmd__CI_USCOREDateTypeCode_USCOREPropertyType has binding name 'gmd__CI_USCOREDateTypeCode_USCOREPropertyType' for type 'gmd:CI_DateTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType (-190)

#endif

/* gmd__CI_USCOREDate_USCOREType has binding name 'gmd__CI_USCOREDate_USCOREType' for type 'gmd:CI_Date_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType (-189)

#endif

/* gmd__CI_USCOREDate_USCOREPropertyType has binding name 'gmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType (-188)

#endif

/* gmd__CI_USCORECitation_USCOREType has binding name 'gmd__CI_USCORECitation_USCOREType' for type 'gmd:CI_Citation_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType (-187)

#endif

/* gmd__CI_USCORECitation_USCOREPropertyType has binding name 'gmd__CI_USCORECitation_USCOREPropertyType' for type 'gmd:CI_Citation_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType (-186)

#endif

/* gmd__MD_USCOREIdentifier_USCOREType has binding name 'gmd__MD_USCOREIdentifier_USCOREType' for type 'gmd:MD_Identifier_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType (-185)

#endif

/* gmd__MD_USCOREIdentifier_USCOREPropertyType has binding name 'gmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType (-184)

#endif

/* gmd__AbstractDQ_USCOREElement_USCOREType has binding name 'gmd__AbstractDQ_USCOREElement_USCOREType' for type 'gmd:AbstractDQ_Element_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType (-183)

#endif

/* gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType has binding name 'gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType' for type 'gmd:AbstractDQ_PositionalAccuracy_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType (-182)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREType has binding name 'gmd__EX_USCOREVerticalExtent_USCOREType' for type 'gmd:EX_VerticalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType (-181)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREPropertyType has binding name 'gmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType (-180)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREType has binding name 'gmd__EX_USCORETemporalExtent_USCOREType' for type 'gmd:EX_TemporalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType (-179)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREPropertyType has binding name 'gmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType (-178)

#endif

/* gmd__AbstractEX_USCOREGeographicExtent_USCOREType has binding name 'gmd__AbstractEX_USCOREGeographicExtent_USCOREType' for type 'gmd:AbstractEX_GeographicExtent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType (-177)

#endif

/* gmd__EX_USCOREGeographicExtent_USCOREPropertyType has binding name 'gmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType (-176)

#endif

/* gmd__EX_USCOREExtent_USCOREType has binding name 'gmd__EX_USCOREExtent_USCOREType' for type 'gmd:EX_Extent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType (-175)

#endif

/* _gml__coordinateOperationAccuracy has binding name '_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy (-174)

#endif

/* _gml__SecondDefiningParameter has binding name '_gml__SecondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter (-173)

#endif

/* _gml__secondDefiningParameter has binding name '_gml__secondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter (-172)

#endif

/* _gml__domainOfValidity has binding name '_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity (-171)

#endif

/* gml__VerticalDatumType has binding name 'gml__VerticalDatumType' for type 'gml:VerticalDatumType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType (-170)

#endif

/* gml__VerticalDatumPropertyType has binding name 'gml__VerticalDatumPropertyType' for type 'gml:VerticalDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType (-169)

#endif

/* gml__VerticalCSType has binding name 'gml__VerticalCSType' for type 'gml:VerticalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType (-168)

#endif

/* gml__VerticalCSPropertyType has binding name 'gml__VerticalCSPropertyType' for type 'gml:VerticalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType (-167)

#endif

/* gml__VerticalCRSType has binding name 'gml__VerticalCRSType' for type 'gml:VerticalCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType (-166)

#endif

/* gml__GeodeticCRSPropertyType has binding name 'gml__GeodeticCRSPropertyType' for type 'gml:GeodeticCRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType (-165)

#endif

/* gml__CRSPropertyType has binding name 'gml__CRSPropertyType' for type 'gml:CRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType (-164)

#endif

/* gml__AbstractCoordinateOperationType has binding name 'gml__AbstractCoordinateOperationType' for type 'gml:AbstractCoordinateOperationType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType (-163)

#endif

/* gml__AbstractGeneralConversionType has binding name 'gml__AbstractGeneralConversionType' for type 'gml:AbstractGeneralConversionType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType (-162)

#endif

/* gml__GeneralConversionPropertyType has binding name 'gml__GeneralConversionPropertyType' for type 'gml:GeneralConversionPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType (-161)

#endif

/* gml__AbstractGeneralDerivedCRSType has binding name 'gml__AbstractGeneralDerivedCRSType' for type 'gml:AbstractGeneralDerivedCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType (-160)

#endif

/* gml__ProjectedCRSType has binding name 'gml__ProjectedCRSType' for type 'gml:ProjectedCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType (-159)

#endif

/* gml__LengthType has binding name 'gml__LengthType' for type 'gml:LengthType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType (-158)

#endif

/* gml__EllipsoidType has binding name 'gml__EllipsoidType' for type 'gml:EllipsoidType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType (-157)

#endif

/* gml__EllipsoidPropertyType has binding name 'gml__EllipsoidPropertyType' for type 'gml:EllipsoidPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType (-156)

#endif

/* gml__MeasureType has binding name 'gml__MeasureType' for type 'gml:MeasureType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType (-155)

#endif

/* gml__AngleType has binding name 'gml__AngleType' for type 'gml:AngleType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType (-154)

#endif

/* gml__PrimeMeridianType has binding name 'gml__PrimeMeridianType' for type 'gml:PrimeMeridianType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType (-153)

#endif

/* gml__PrimeMeridianPropertyType has binding name 'gml__PrimeMeridianPropertyType' for type 'gml:PrimeMeridianPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType (-152)

#endif

/* gml__AbstractDatumType has binding name 'gml__AbstractDatumType' for type 'gml:AbstractDatumType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType (-151)

#endif

/* gml__GeodeticDatumType has binding name 'gml__GeodeticDatumType' for type 'gml:GeodeticDatumType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType (-150)

#endif

/* gml__GeodeticDatumPropertyType has binding name 'gml__GeodeticDatumPropertyType' for type 'gml:GeodeticDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType (-149)

#endif

/* gml__SphericalCSType has binding name 'gml__SphericalCSType' for type 'gml:SphericalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType (-148)

#endif

/* gml__SphericalCSPropertyType has binding name 'gml__SphericalCSPropertyType' for type 'gml:SphericalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType (-147)

#endif

/* gml__CartesianCSType has binding name 'gml__CartesianCSType' for type 'gml:CartesianCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType (-146)

#endif

/* gml__CartesianCSPropertyType has binding name 'gml__CartesianCSPropertyType' for type 'gml:CartesianCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType (-145)

#endif

/* gml__CoordinateSystemAxisType has binding name 'gml__CoordinateSystemAxisType' for type 'gml:CoordinateSystemAxisType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType (-144)

#endif

/* gml__CoordinateSystemAxisPropertyType has binding name 'gml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType (-143)

#endif

/* gml__AbstractCoordinateSystemType has binding name 'gml__AbstractCoordinateSystemType' for type 'gml:AbstractCoordinateSystemType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType (-142)

#endif

/* gml__EllipsoidalCSType has binding name 'gml__EllipsoidalCSType' for type 'gml:EllipsoidalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType (-141)

#endif

/* gml__EllipsoidalCSPropertyType has binding name 'gml__EllipsoidalCSPropertyType' for type 'gml:EllipsoidalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType (-140)

#endif

/* gml__TimePrimitivePropertyType has binding name 'gml__TimePrimitivePropertyType' for type 'gml:TimePrimitivePropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType (-139)

#endif

/* gml__RelatedTimeType has binding name 'gml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType (-138)

#endif

/* gml__AbstractTimeObjectType has binding name 'gml__AbstractTimeObjectType' for type 'gml:AbstractTimeObjectType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType (-137)

#endif

/* gml__AbstractTimePrimitiveType has binding name 'gml__AbstractTimePrimitiveType' for type 'gml:AbstractTimePrimitiveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType (-136)

#endif

/* gml__CodeType has binding name 'gml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType (-135)

#endif

/* gml__CodeWithAuthorityType has binding name 'gml__CodeWithAuthorityType' for type 'gml:CodeWithAuthorityType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType (-134)

#endif

/* gml__ReferenceType has binding name 'gml__ReferenceType' for type 'gml:ReferenceType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType (-133)

#endif

/* gml__StringOrRefType has binding name 'gml__StringOrRefType' for type 'gml:StringOrRefType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType (-132)

#endif

/* gml__AbstractGMLType has binding name 'gml__AbstractGMLType' for type 'gml:AbstractGMLType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType (-131)

#endif

/* gml__DefinitionBaseType has binding name 'gml__DefinitionBaseType' for type 'gml:DefinitionBaseType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType (-130)

#endif

/* gml__DefinitionType has binding name 'gml__DefinitionType' for type 'gml:DefinitionType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType (-129)

#endif

/* gml__IdentifiedObjectType has binding name 'gml__IdentifiedObjectType' for type 'gml:IdentifiedObjectType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType (-128)

#endif

/* gml__AbstractCRSType has binding name 'gml__AbstractCRSType' for type 'gml:AbstractCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType (-127)

#endif

/* gml__GeodeticCRSType has binding name 'gml__GeodeticCRSType' for type 'gml:GeodeticCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType (-126)

#endif

/* abstract__abstractObject has binding name 'abstract__abstractObject' for type 'abstract:abstractObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject (-125)

#endif

/* witsml1__cs_USCORElocalCRS has binding name 'witsml1__cs_USCORElocalCRS' for type 'witsml1:cs_localCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS (-124)

#endif

/* witsml1__cs_USCOREprojectionx has binding name 'witsml1__cs_USCOREprojectionx' for type 'witsml1:cs_projectionx' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx (-123)

#endif

/* witsml1__cs_USCOREgeodeticModel has binding name 'witsml1__cs_USCOREgeodeticModel' for type 'witsml1:cs_geodeticModel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel (-122)

#endif

/* witsml1__cs_USCOREwellCRS has binding name 'witsml1__cs_USCOREwellCRS' for type 'witsml1:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS (-121)

#endif

/* witsml1__cs_USCOREreferencePoint has binding name 'witsml1__cs_USCOREreferencePoint' for type 'witsml1:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint (-120)

#endif

/* witsml1__cs_USCOREpublicLandSurveySystem has binding name 'witsml1__cs_USCOREpublicLandSurveySystem' for type 'witsml1:cs_publicLandSurveySystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem (-119)

#endif

/* witsml1__cs_USCORErefWellWellboreRig has binding name 'witsml1__cs_USCORErefWellWellboreRig' for type 'witsml1:cs_refWellWellboreRig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig (-118)

#endif

/* witsml1__cs_USCORErefWellWellbore has binding name 'witsml1__cs_USCORErefWellWellbore' for type 'witsml1:cs_refWellWellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore (-117)

#endif

/* witsml1__cs_USCOREwellDatum has binding name 'witsml1__cs_USCOREwellDatum' for type 'witsml1:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum (-116)

#endif

/* witsml1__obj_USCOREwell has binding name 'witsml1__obj_USCOREwell' for type 'witsml1:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell (-115)

#endif

/* witsml1__obj_USCOREwells has binding name 'witsml1__obj_USCOREwells' for type 'witsml1:obj_wells' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells (-114)

#endif

/* witsml1__obj_USCOREwellbore has binding name 'witsml1__obj_USCOREwellbore' for type 'witsml1:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore (-113)

#endif

/* witsml1__obj_USCOREwellbores has binding name 'witsml1__obj_USCOREwellbores' for type 'witsml1:obj_wellbores' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores (-112)

#endif

/* witsml1__cs_USCORErefWellboreTrajectory has binding name 'witsml1__cs_USCORErefWellboreTrajectory' for type 'witsml1:cs_refWellboreTrajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory (-111)

#endif

/* witsml1__cs_USCORErefWellboreTrajectoryStation has binding name 'witsml1__cs_USCORErefWellboreTrajectoryStation' for type 'witsml1:cs_refWellboreTrajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation (-110)

#endif

/* witsml1__cs_USCORElocation has binding name 'witsml1__cs_USCORElocation' for type 'witsml1:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation (-109)

#endif

/* witsml1__cs_USCOREstnTrajMatrixCov has binding name 'witsml1__cs_USCOREstnTrajMatrixCov' for type 'witsml1:cs_stnTrajMatrixCov' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov (-108)

#endif

/* witsml1__cs_USCOREstnTrajValid has binding name 'witsml1__cs_USCOREstnTrajValid' for type 'witsml1:cs_stnTrajValid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid (-107)

#endif

/* witsml1__cs_USCOREstnTrajCorUsed has binding name 'witsml1__cs_USCOREstnTrajCorUsed' for type 'witsml1:cs_stnTrajCorUsed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed (-106)

#endif

/* witsml1__cs_USCOREstnTrajRawData has binding name 'witsml1__cs_USCOREstnTrajRawData' for type 'witsml1:cs_stnTrajRawData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData (-105)

#endif

/* witsml1__cs_USCOREtrajectoryStation has binding name 'witsml1__cs_USCOREtrajectoryStation' for type 'witsml1:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation (-104)

#endif

/* witsml1__obj_USCOREtrajectory has binding name 'witsml1__obj_USCOREtrajectory' for type 'witsml1:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory (-103)

#endif

/* witsml1__obj_USCOREtrajectorys has binding name 'witsml1__obj_USCOREtrajectorys' for type 'witsml1:obj_trajectorys' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys (-102)

#endif

/* witsml1__cs_USCORElogData has binding name 'witsml1__cs_USCORElogData' for type 'witsml1:cs_logData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData (-101)

#endif

/* witsml1__cs_USCOREaxisDefinition has binding name 'witsml1__cs_USCOREaxisDefinition' for type 'witsml1:cs_axisDefinition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition (-100)

#endif

/* witsml1__cs_USCORElogCurveInfo has binding name 'witsml1__cs_USCORElogCurveInfo' for type 'witsml1:cs_logCurveInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo (-99)

#endif

/* witsml1__obj_USCORElog has binding name 'witsml1__obj_USCORElog' for type 'witsml1:obj_log' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog (-98)

#endif

/* witsml1__obj_USCORElogs has binding name 'witsml1__obj_USCORElogs' for type 'witsml1:obj_logs' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs (-97)

#endif

/* witsml1__cs_USCOREstandardVerticalCRS has binding name 'witsml1__cs_USCOREstandardVerticalCRS' for type 'witsml1:cs_standardVerticalCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS (-96)

#endif

/* witsml1__cs_USCOREstandardProjectedCRS has binding name 'witsml1__cs_USCOREstandardProjectedCRS' for type 'witsml1:cs_standardProjectedCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS (-95)

#endif

/* witsml1__cs_USCOREstandardGeodeticCRS has binding name 'witsml1__cs_USCOREstandardGeodeticCRS' for type 'witsml1:cs_standardGeodeticCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS (-94)

#endif

/* witsml1__obj_USCOREcoordinateReferenceSystem has binding name 'witsml1__obj_USCOREcoordinateReferenceSystem' for type 'witsml1:obj_coordinateReferenceSystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem (-93)

#endif

/* witsml1__obj_USCOREcoordinateReferenceSystems has binding name 'witsml1__obj_USCOREcoordinateReferenceSystems' for type 'witsml1:obj_coordinateReferenceSystems' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems (-92)

#endif

/* witsml1__cs_USCOREcustomData has binding name 'witsml1__cs_USCOREcustomData' for type 'witsml1:cs_customData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData (-91)

#endif

/* witsml1__cs_USCOREextensionAny has binding name 'witsml1__cs_USCOREextensionAny' for type 'witsml1:cs_extensionAny' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny (-90)

#endif

/* witsml1__cs_USCOREcommonData has binding name 'witsml1__cs_USCOREcommonData' for type 'witsml1:cs_commonData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData (-89)

#endif

/* witsml1__cs_USCOREdocumentEvent has binding name 'witsml1__cs_USCOREdocumentEvent' for type 'witsml1:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent (-88)

#endif

/* witsml1__cs_USCOREdocumentAudit has binding name 'witsml1__cs_USCOREdocumentAudit' for type 'witsml1:cs_documentAudit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit (-87)

#endif

/* witsml1__cs_USCOREextensionNameValue has binding name 'witsml1__cs_USCOREextensionNameValue' for type 'witsml1:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue (-86)

#endif

/* witsml1__cs_USCOREdocumentSecurityInfo has binding name 'witsml1__cs_USCOREdocumentSecurityInfo' for type 'witsml1:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo (-85)

#endif

/* witsml1__abstractMeasure has binding name 'witsml1__abstractMeasure' for type 'witsml1:abstractMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure (-84)

#endif

/* witsml1__volumePerVolumeMeasure has binding name 'witsml1__volumePerVolumeMeasure' for type 'witsml1:volumePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure (-83)

#endif

/* witsml1__volumePerLengthMeasure has binding name 'witsml1__volumePerLengthMeasure' for type 'witsml1:volumePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure (-82)

#endif

/* witsml1__volumeFlowRateMeasure has binding name 'witsml1__volumeFlowRateMeasure' for type 'witsml1:volumeFlowRateMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure (-81)

#endif

/* witsml1__volumeMeasure has binding name 'witsml1__volumeMeasure' for type 'witsml1:volumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure (-80)

#endif

/* witsml1__velocityMeasure has binding name 'witsml1__velocityMeasure' for type 'witsml1:velocityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure (-79)

#endif

/* witsml1__timeMeasure has binding name 'witsml1__timeMeasure' for type 'witsml1:timeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure (-78)

#endif

/* witsml1__thermodynamicTemperatureMeasure has binding name 'witsml1__thermodynamicTemperatureMeasure' for type 'witsml1:thermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure (-77)

#endif

/* witsml1__thermalVolumetricExpansionMeasure has binding name 'witsml1__thermalVolumetricExpansionMeasure' for type 'witsml1:thermalVolumetricExpansionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure (-76)

#endif

/* witsml1__thermalConductivityMeasure has binding name 'witsml1__thermalConductivityMeasure' for type 'witsml1:thermalConductivityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure (-75)

#endif

/* witsml1__standardVolumePerTimeMeasure has binding name 'witsml1__standardVolumePerTimeMeasure' for type 'witsml1:standardVolumePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure (-74)

#endif

/* witsml1__standardVolumeMeasure has binding name 'witsml1__standardVolumeMeasure' for type 'witsml1:standardVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure (-73)

#endif

/* witsml1__specificVolumeMeasure has binding name 'witsml1__specificVolumeMeasure' for type 'witsml1:specificVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure (-72)

#endif

/* witsml1__specificHeatCapacityMeasure has binding name 'witsml1__specificHeatCapacityMeasure' for type 'witsml1:specificHeatCapacityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure (-71)

#endif

/* witsml1__relativePowerMeasure has binding name 'witsml1__relativePowerMeasure' for type 'witsml1:relativePowerMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure (-70)

#endif

/* witsml1__pressureMeasure has binding name 'witsml1__pressureMeasure' for type 'witsml1:pressureMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure (-69)

#endif

/* witsml1__powerMeasure has binding name 'witsml1__powerMeasure' for type 'witsml1:powerMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure (-68)

#endif

/* witsml1__planeAngleMeasure has binding name 'witsml1__planeAngleMeasure' for type 'witsml1:planeAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure (-67)

#endif

/* witsml1__permeabilityRockMeasure has binding name 'witsml1__permeabilityRockMeasure' for type 'witsml1:permeabilityRockMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure (-66)

#endif

/* witsml1__perLengthMeasure has binding name 'witsml1__perLengthMeasure' for type 'witsml1:perLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure (-65)

#endif

/* witsml1__momentOfForceMeasure has binding name 'witsml1__momentOfForceMeasure' for type 'witsml1:momentOfForceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure (-64)

#endif

/* witsml1__massPerLengthMeasure has binding name 'witsml1__massPerLengthMeasure' for type 'witsml1:massPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure (-63)

#endif

/* witsml1__massMeasure has binding name 'witsml1__massMeasure' for type 'witsml1:massMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure (-62)

#endif

/* witsml1__massConcentrationMeasure has binding name 'witsml1__massConcentrationMeasure' for type 'witsml1:massConcentrationMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure (-61)

#endif

/* witsml1__magneticInductionMeasure has binding name 'witsml1__magneticInductionMeasure' for type 'witsml1:magneticInductionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure (-60)

#endif

/* witsml1__lengthPerLengthMeasure has binding name 'witsml1__lengthPerLengthMeasure' for type 'witsml1:lengthPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure (-59)

#endif

/* witsml1__lengthMeasure has binding name 'witsml1__lengthMeasure' for type 'witsml1:lengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure (-58)

#endif

/* witsml1__illuminanceMeasure has binding name 'witsml1__illuminanceMeasure' for type 'witsml1:illuminanceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure (-57)

#endif

/* witsml1__forcePerVolumeMeasure has binding name 'witsml1__forcePerVolumeMeasure' for type 'witsml1:forcePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure (-56)

#endif

/* witsml1__forcePerLengthMeasure has binding name 'witsml1__forcePerLengthMeasure' for type 'witsml1:forcePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure (-55)

#endif

/* witsml1__forceMeasure has binding name 'witsml1__forceMeasure' for type 'witsml1:forceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure (-54)

#endif

/* witsml1__equivalentPerMassMeasure has binding name 'witsml1__equivalentPerMassMeasure' for type 'witsml1:equivalentPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure (-53)

#endif

/* witsml1__electricPotentialMeasure has binding name 'witsml1__electricPotentialMeasure' for type 'witsml1:electricPotentialMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure (-52)

#endif

/* witsml1__electricCurrentMeasure has binding name 'witsml1__electricCurrentMeasure' for type 'witsml1:electricCurrentMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure (-51)

#endif

/* witsml1__dynamicViscosityMeasure has binding name 'witsml1__dynamicViscosityMeasure' for type 'witsml1:dynamicViscosityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure (-50)

#endif

/* witsml1__dimensionlessMeasure has binding name 'witsml1__dimensionlessMeasure' for type 'witsml1:dimensionlessMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure (-49)

#endif

/* witsml1__densityMeasure has binding name 'witsml1__densityMeasure' for type 'witsml1:densityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure (-48)

#endif

/* witsml1__compressibilityMeasure has binding name 'witsml1__compressibilityMeasure' for type 'witsml1:compressibilityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure (-47)

#endif

/* witsml1__areaPerAreaMeasure has binding name 'witsml1__areaPerAreaMeasure' for type 'witsml1:areaPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure (-46)

#endif

/* witsml1__areaMeasure has binding name 'witsml1__areaMeasure' for type 'witsml1:areaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure (-45)

#endif

/* witsml1__anglePerTimeMeasure has binding name 'witsml1__anglePerTimeMeasure' for type 'witsml1:anglePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure (-44)

#endif

/* witsml1__anglePerLengthMeasure has binding name 'witsml1__anglePerLengthMeasure' for type 'witsml1:anglePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure (-43)

#endif

/* witsml1__accelerationLinearMeasure has binding name 'witsml1__accelerationLinearMeasure' for type 'witsml1:accelerationLinearMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure (-42)

#endif

/* witsml1__indexedObject has binding name 'witsml1__indexedObject' for type 'witsml1:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject (-41)

#endif

/* witsml1__cost has binding name 'witsml1__cost' for type 'witsml1:cost' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost (-40)

#endif

/* witsml1__footageEastWest has binding name 'witsml1__footageEastWest' for type 'witsml1:footageEastWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest (-39)

#endif

/* witsml1__footageNorthSouth has binding name 'witsml1__footageNorthSouth' for type 'witsml1:footageNorthSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth (-38)

#endif

/* witsml1__wellElevationCoord has binding name 'witsml1__wellElevationCoord' for type 'witsml1:wellElevationCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord (-37)

#endif

/* witsml1__wellVerticalDepthCoord has binding name 'witsml1__wellVerticalDepthCoord' for type 'witsml1:wellVerticalDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord (-36)

#endif

/* witsml1__measuredDepthCoord has binding name 'witsml1__measuredDepthCoord' for type 'witsml1:measuredDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord (-35)

#endif

/* witsml1__chronostratigraphyStruct has binding name 'witsml1__chronostratigraphyStruct' for type 'witsml1:chronostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct (-34)

#endif

/* witsml1__lithostratigraphyStruct has binding name 'witsml1__lithostratigraphyStruct' for type 'witsml1:lithostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct (-33)

#endif

/* witsml1__objectSequence has binding name 'witsml1__objectSequence' for type 'witsml1:objectSequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence (-32)

#endif

/* witsml1__wellKnownNameStruct has binding name 'witsml1__wellKnownNameStruct' for type 'witsml1:wellKnownNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct (-31)

#endif

/* witsml1__shortNameStruct has binding name 'witsml1__shortNameStruct' for type 'witsml1:shortNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct (-30)

#endif

/* witsml1__nameStruct has binding name 'witsml1__nameStruct' for type 'witsml1:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct (-29)

#endif

/* witsml1__extensionvalue has binding name 'witsml1__extensionvalue' for type 'witsml1:extensionvalue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue (-28)

#endif

/* witsml1__timestampedCommentString has binding name 'witsml1__timestampedCommentString' for type 'witsml1:timestampedCommentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString (-27)

#endif

/* witsml1__refPositiveCount has binding name 'witsml1__refPositiveCount' for type 'witsml1:refPositiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount (-26)

#endif

/* witsml1__refObjectString has binding name 'witsml1__refObjectString' for type 'witsml1:refObjectString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString (-25)

#endif

/* witsml1__refNameString has binding name 'witsml1__refNameString' for type 'witsml1:refNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString (-24)

#endif

/* witsml1__ratioGenericMeasure has binding name 'witsml1__ratioGenericMeasure' for type 'witsml1:ratioGenericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure (-23)

#endif

/* witsml1__genericMeasure has binding name 'witsml1__genericMeasure' for type 'witsml1:genericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure (-22)

#endif

/* witsml1__measureOrQuantity has binding name 'witsml1__measureOrQuantity' for type 'witsml1:measureOrQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity (-21)

#endif

/* witsml1__volumePerVolumeMeasurePercent has binding name 'witsml1__volumePerVolumeMeasurePercent' for type 'witsml1:volumePerVolumeMeasurePercent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent (-20)

#endif

/* witsml1__yAxisAzimuth has binding name 'witsml1__yAxisAzimuth' for type 'witsml1:yAxisAzimuth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth (-19)

#endif

/* witsml1__timestampedTimeZone has binding name 'witsml1__timestampedTimeZone' for type 'witsml1:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone (-18)

#endif

/* witsml1__cs_USCOREdocumentFileCreation has binding name 'witsml1__cs_USCOREdocumentFileCreation' for type 'witsml1:cs_documentFileCreation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation (-17)

#endif

/* witsml1__cs_USCOREdocumentInfo has binding name 'witsml1__cs_USCOREdocumentInfo' for type 'witsml1:cs_documentInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo (-16)

#endif

/* witsml1__obj_USCOREformationMarker has binding name 'witsml1__obj_USCOREformationMarker' for type 'witsml1:obj_formationMarker' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker (-15)

#endif

/* witsml1__obj_USCOREformationMarkers has binding name 'witsml1__obj_USCOREformationMarkers' for type 'witsml1:obj_formationMarkers' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers (-14)

#endif

/* xsd__date has binding name 'xsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date (-13)

#endif

/* xsd__anyURI has binding name 'xsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI (-12)

#endif

/* xsd__ID has binding name 'xsd__ID' for type 'xsd:ID' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID (-11)

#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__string
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__string (-10)

#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault (-1665978375)

#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason (-1665978374)

#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail (-1665978371)

#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code (-1665978369)

#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header (-1665978368)

#endif

/* _gco__DateTime has binding name '_gco__DateTime' for type '' */
#ifndef SOAP_TYPE__gco__DateTime
#define SOAP_TYPE__gco__DateTime (-874)

#endif

/* witsml1__timestamp has binding name 'witsml1__timestamp' for type 'witsml1:timestamp' */
#ifndef SOAP_TYPE_witsml1__timestamp
#define SOAP_TYPE_witsml1__timestamp (-241)

#endif

/* witsml1__abstractDateTime has binding name 'witsml1__abstractDateTime' for type 'witsml1:abstractDateTime' */
#ifndef SOAP_TYPE_witsml1__abstractDateTime
#define SOAP_TYPE_witsml1__abstractDateTime (-226)

#endif

/* xsd__dateTime has binding name 'xsd__dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

#endif

/* struct tm has binding name 'tm' for type 'tm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_tm
#define SOAP_TYPE_gsoap_witsml1_4_1_1_tm (-8)

#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Reason (-1665978377)

#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Detail (-1665978376)

#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Code (-1665978370)

#endif

/* gml__GeodeticCRSPropertyType * has binding name 'PointerTogml__GeodeticCRSPropertyType' for type 'gml:GeodeticCRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSPropertyType (-797)

#endif

/* gml__VerticalDatumPropertyType * has binding name 'PointerTogml__VerticalDatumPropertyType' for type 'gml:VerticalDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumPropertyType (-796)

#endif

/* gml__VerticalCSPropertyType * has binding name 'PointerTogml__VerticalCSPropertyType' for type 'gml:VerticalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSPropertyType (-795)

#endif

/* gml__GeneralConversionPropertyType * has binding name 'PointerTogml__GeneralConversionPropertyType' for type 'gml:GeneralConversionPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeneralConversionPropertyType (-794)

#endif

/* gml__EllipsoidPropertyType * has binding name 'PointerTogml__EllipsoidPropertyType' for type 'gml:EllipsoidPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidPropertyType (-793)

#endif

/* gml__PrimeMeridianPropertyType * has binding name 'PointerTogml__PrimeMeridianPropertyType' for type 'gml:PrimeMeridianPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianPropertyType (-792)

#endif

/* gml__GeodeticDatumPropertyType * has binding name 'PointerTogml__GeodeticDatumPropertyType' for type 'gml:GeodeticDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumPropertyType (-791)

#endif

/* gml__SphericalCSPropertyType * has binding name 'PointerTogml__SphericalCSPropertyType' for type 'gml:SphericalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSPropertyType (-789)

#endif

/* gml__CartesianCSPropertyType * has binding name 'PointerTogml__CartesianCSPropertyType' for type 'gml:CartesianCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSPropertyType (-788)

#endif

/* gml__EllipsoidalCSPropertyType * has binding name 'PointerTogml__EllipsoidalCSPropertyType' for type 'gml:EllipsoidalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSPropertyType (-787)

#endif

/* gml__CRSPropertyType * has binding name 'PointerTogml__CRSPropertyType' for type 'gml:CRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CRSPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CRSPropertyType (-786)

#endif

/* _gml__coordinateOperationAccuracy * has binding name 'PointerTo_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__coordinateOperationAccuracy (-784)

#endif

/* _gml__secondDefiningParameter * has binding name 'PointerTo_gml__secondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__secondDefiningParameter (-783)

#endif

/* gml__AngleType * has binding name 'PointerTogml__AngleType' for type 'gml:AngleType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AngleType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AngleType (-782)

#endif

/* std::string * has binding name 'PointerToxsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__date
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__date (-781)

#endif

/* double * has binding name 'PointerTodouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTodouble
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTodouble (-780)

#endif

/* enum gml__AggregationType * has binding name 'PointerTogml__AggregationType' for type 'gml:AggregationType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AggregationType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AggregationType (-779)

#endif

/* gml__CoordinateSystemAxisPropertyType * has binding name 'PointerTogml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisPropertyType (-777)

#endif

/* _gml__domainOfValidity * has binding name 'PointerTo_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__domainOfValidity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__domainOfValidity (-775)

#endif

/* std::string * has binding name 'PointerTowitsml1__refWellDatum' for type 'witsml1:refWellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refWellDatum (-774)

#endif

/* enum witsml1__ChronostratigraphyUnit * has binding name 'PointerTowitsml1__ChronostratigraphyUnit' for type 'witsml1:ChronostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ChronostratigraphyUnit (-773)

#endif

/* enum witsml1__LithostratigraphyUnit * has binding name 'PointerTowitsml1__LithostratigraphyUnit' for type 'witsml1:LithostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LithostratigraphyUnit (-772)

#endif

/* std::string * has binding name 'PointerTowitsml1__refString' for type 'witsml1:refString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refString (-771)

#endif

/* gml__RelatedTimeType * has binding name 'PointerTogml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__RelatedTimeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__RelatedTimeType (-769)

#endif

/* gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType' for type 'gmd:CI_OnLineFunctionCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-768)

#endif

/* gmd__URL_USCOREPropertyType * has binding name 'PointerTogmd__URL_USCOREPropertyType' for type 'gmd:URL_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__URL_USCOREPropertyType (-767)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType' for type 'gmd:CI_OnlineResource_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType (-766)

#endif

/* gmd__CI_USCOREAddress_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREAddress_USCOREPropertyType' for type 'gmd:CI_Address_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType (-765)

#endif

/* gmd__CI_USCORETelephone_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORETelephone_USCOREPropertyType' for type 'gmd:CI_Telephone_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType (-764)

#endif

/* gmd__CI_USCORERoleCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORERoleCode_USCOREPropertyType' for type 'gmd:CI_RoleCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType (-763)

#endif

/* gmd__CI_USCOREContact_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREContact_USCOREPropertyType' for type 'gmd:CI_Contact_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType (-762)

#endif

/* gmd__CI_USCOREDateTypeCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType' for type 'gmd:CI_DateTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType (-761)

#endif

/* gmd__CI_USCORESeries_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORESeries_USCOREPropertyType' for type 'gmd:CI_Series_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType (-760)

#endif

/* gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-758)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType (-756)

#endif

/* gco__Date_USCOREPropertyType * has binding name 'PointerTogco__Date_USCOREPropertyType' for type 'gco:Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREPropertyType (-754)

#endif

/* gmd__CI_USCOREDate_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType (-752)

#endif

/* gmd__DQ_USCOREResult_USCOREPropertyType * has binding name 'PointerTogmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType (-750)

#endif

/* gco__DateTime_USCOREPropertyType * has binding name 'PointerTogco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__DateTime_USCOREPropertyType (-748)

#endif

/* gmd__CI_USCORECitation_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORECitation_USCOREPropertyType' for type 'gmd:CI_Citation_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType (-747)

#endif

/* gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * has binding name 'PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType' for type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-746)

#endif

/* gmd__MD_USCOREIdentifier_USCOREPropertyType * has binding name 'PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType (-745)

#endif

/* gsr__SC_USCORECRS_USCOREPropertyType * has binding name 'PointerTogsr__SC_USCORECRS_USCOREPropertyType' for type 'gsr:SC_CRS_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType (-743)

#endif

/* gco__Real_USCOREPropertyType * has binding name 'PointerTogco__Real_USCOREPropertyType' for type 'gco:Real_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Real_USCOREPropertyType (-742)

#endif

/* gts__TM_USCOREPrimitive_USCOREPropertyType * has binding name 'PointerTogts__TM_USCOREPrimitive_USCOREPropertyType' for type 'gts:TM_Primitive_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType (-741)

#endif

/* gco__Boolean_USCOREPropertyType * has binding name 'PointerTogco__Boolean_USCOREPropertyType' for type 'gco:Boolean_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Boolean_USCOREPropertyType (-740)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType (-738)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType (-736)

#endif

/* gmd__EX_USCOREGeographicExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType (-734)

#endif

/* gco__CharacterString_USCOREPropertyType * has binding name 'PointerTogco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CharacterString_USCOREPropertyType (-733)

#endif

/* enum _gml__RelatedTimeType_relativePosition * has binding name 'PointerTo_gml__RelatedTimeType_relativePosition' for type 'gml:RelatedTimeType-relativePosition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__RelatedTimeType_relativePosition (-732)

#endif

/* witsml1__obj_USCOREwell * has binding name 'PointerTowitsml1__obj_USCOREwell' for type 'witsml1:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwell (-729)

#endif

/* witsml1__obj_USCOREwellbore * has binding name 'PointerTowitsml1__obj_USCOREwellbore' for type 'witsml1:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwellbore (-727)

#endif

/* witsml1__obj_USCOREtrajectory * has binding name 'PointerTowitsml1__obj_USCOREtrajectory' for type 'witsml1:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREtrajectory (-725)

#endif

/* witsml1__obj_USCORElog * has binding name 'PointerTowitsml1__obj_USCORElog' for type 'witsml1:obj_log' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCORElog
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCORElog (-723)

#endif

/* witsml1__obj_USCOREcoordinateReferenceSystem * has binding name 'PointerTowitsml1__obj_USCOREcoordinateReferenceSystem' for type 'witsml1:obj_coordinateReferenceSystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem (-721)

#endif

/* witsml1__obj_USCOREformationMarker * has binding name 'PointerTowitsml1__obj_USCOREformationMarker' for type 'witsml1:obj_formationMarker' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREformationMarker
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREformationMarker (-719)

#endif

/* witsml1__cs_USCOREdocumentInfo * has binding name 'PointerTowitsml1__cs_USCOREdocumentInfo' for type 'witsml1:cs_documentInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentInfo (-718)

#endif

/* __gsr__SC_USCORECRS_USCOREPropertyType_sequence * has binding name 'PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence' for type '-gsr:SC_CRS_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence (-717)

#endif

/* __gco__DateTime_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__DateTime_USCOREPropertyType_sequence' for type '-gco:DateTime_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence (-714)

#endif

/* struct tm * has binding name 'PointerToxsd__dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__dateTime
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__dateTime (-711)

#endif

/* std::string * has binding name 'PointerTogco__Date_USCOREType' for type 'gco:Date_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREType (-710)

#endif

/* __gco__Real_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__Real_USCOREPropertyType_sequence' for type '-gco:Real_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Real_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Real_USCOREPropertyType_sequence (-709)

#endif

/* __gco__Boolean_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__Boolean_USCOREPropertyType_sequence' for type '-gco:Boolean_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence (-707)

#endif

/* __gco__CharacterString_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__CharacterString_USCOREPropertyType_sequence' for type '-gco:CharacterString_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence (-705)

#endif

/* std::string * has binding name 'PointerToxsd__ID' for type 'xsd:ID' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__ID
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__ID (-702)

#endif

/* __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * has binding name 'PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence' for type '-gts:TM_Primitive_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence (-701)

#endif

/* __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence' for type '-gmd:DQ_Result_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence (-698)

#endif

/* __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence' for type '-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence (-695)

#endif

/* __gmd__CI_USCORESeries_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence' for type '-gmd:CI_Series_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence (-693)

#endif

/* gmd__CI_USCORESeries_USCOREType * has binding name 'PointerTogmd__CI_USCORESeries_USCOREType' for type 'gmd:CI_Series_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREType (-692)

#endif

/* __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence' for type '-gmd:CI_PresentationFormCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence (-690)

#endif

/* __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence' for type '-gmd:CI_RoleCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence (-688)

#endif

/* __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence' for type '-gmd:CI_OnLineFunctionCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence (-686)

#endif

/* __gmd__URL_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__URL_USCOREPropertyType_sequence' for type '-gmd:URL_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__URL_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__URL_USCOREPropertyType_sequence (-684)

#endif

/* __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence' for type '-gmd:CI_OnlineResource_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence (-682)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREType * has binding name 'PointerTogmd__CI_USCOREOnlineResource_USCOREType' for type 'gmd:CI_OnlineResource_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType (-681)

#endif

/* __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence' for type '-gmd:CI_Address_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence (-679)

#endif

/* gmd__CI_USCOREAddress_USCOREType * has binding name 'PointerTogmd__CI_USCOREAddress_USCOREType' for type 'gmd:CI_Address_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREType (-678)

#endif

/* __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence' for type '-gmd:CI_Telephone_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence (-676)

#endif

/* gmd__CI_USCORETelephone_USCOREType * has binding name 'PointerTogmd__CI_USCORETelephone_USCOREType' for type 'gmd:CI_Telephone_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREType (-675)

#endif

/* __gmd__CI_USCOREContact_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence' for type '-gmd:CI_Contact_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence (-673)

#endif

/* gmd__CI_USCOREContact_USCOREType * has binding name 'PointerTogmd__CI_USCOREContact_USCOREType' for type 'gmd:CI_Contact_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREType (-672)

#endif

/* __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence' for type '-gmd:CI_ResponsibleParty_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence (-670)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREType * has binding name 'PointerTogmd__CI_USCOREResponsibleParty_USCOREType' for type 'gmd:CI_ResponsibleParty_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType (-669)

#endif

/* __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence' for type '-gmd:CI_DateTypeCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence (-667)

#endif

/* gco__CodeListValue_USCOREType * has binding name 'PointerTogco__CodeListValue_USCOREType' for type 'gco:CodeListValue_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CodeListValue_USCOREType (-666)

#endif

/* __gmd__CI_USCOREDate_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence' for type '-gmd:CI_Date_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence (-664)

#endif

/* gmd__CI_USCOREDate_USCOREType * has binding name 'PointerTogmd__CI_USCOREDate_USCOREType' for type 'gmd:CI_Date_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREType (-663)

#endif

/* __gmd__CI_USCORECitation_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence' for type '-gmd:CI_Citation_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence (-661)

#endif

/* gmd__CI_USCORECitation_USCOREType * has binding name 'PointerTogmd__CI_USCORECitation_USCOREType' for type 'gmd:CI_Citation_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREType (-660)

#endif

/* __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence' for type '-gmd:MD_Identifier_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence (-658)

#endif

/* gmd__MD_USCOREIdentifier_USCOREType * has binding name 'PointerTogmd__MD_USCOREIdentifier_USCOREType' for type 'gmd:MD_Identifier_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREType (-657)

#endif

/* __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence' for type '-gmd:EX_VerticalExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence (-655)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREType * has binding name 'PointerTogmd__EX_USCOREVerticalExtent_USCOREType' for type 'gmd:EX_VerticalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType (-654)

#endif

/* __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence' for type '-gmd:EX_TemporalExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence (-652)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREType * has binding name 'PointerTogmd__EX_USCORETemporalExtent_USCOREType' for type 'gmd:EX_TemporalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType (-651)

#endif

/* __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence' for type '-gmd:EX_GeographicExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence (-649)

#endif

/* __gml__coordinateOperationAccuracy_sequence * has binding name 'PointerTo__gml__coordinateOperationAccuracy_sequence' for type '-gml:coordinateOperationAccuracy-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__coordinateOperationAccuracy_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__coordinateOperationAccuracy_sequence (-646)

#endif

/* gml__LengthType * has binding name 'PointerTogml__LengthType' for type 'gml:LengthType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__LengthType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__LengthType (-642)

#endif

/* gml__MeasureType * has binding name 'PointerTogml__MeasureType' for type 'gml:MeasureType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__MeasureType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__MeasureType (-641)

#endif

/* _gml__SecondDefiningParameter * has binding name 'PointerTo_gml__SecondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__SecondDefiningParameter (-640)

#endif

/* __gml__domainOfValidity_sequence * has binding name 'PointerTo__gml__domainOfValidity_sequence' for type '-gml:domainOfValidity-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__domainOfValidity_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__domainOfValidity_sequence (-639)

#endif

/* gmd__EX_USCOREExtent_USCOREType * has binding name 'PointerTogmd__EX_USCOREExtent_USCOREType' for type 'gmd:EX_Extent_Type' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREExtent_USCOREType (-638)

#endif

/* __gml__VerticalDatumPropertyType_sequence * has binding name 'PointerTo__gml__VerticalDatumPropertyType_sequence' for type '-gml:VerticalDatumPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalDatumPropertyType_sequence (-636)

#endif

/* gml__VerticalDatumType * has binding name 'PointerTogml__VerticalDatumType' for type 'gml:VerticalDatumType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumType (-635)

#endif

/* __gml__VerticalCSPropertyType_sequence * has binding name 'PointerTo__gml__VerticalCSPropertyType_sequence' for type '-gml:VerticalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalCSPropertyType_sequence (-633)

#endif

/* gml__VerticalCSType * has binding name 'PointerTogml__VerticalCSType' for type 'gml:VerticalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSType (-632)

#endif

/* __gml__GeodeticCRSPropertyType_sequence * has binding name 'PointerTo__gml__GeodeticCRSPropertyType_sequence' for type '-gml:GeodeticCRSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticCRSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticCRSPropertyType_sequence (-630)

#endif

/* __gml__CRSPropertyType_sequence * has binding name 'PointerTo__gml__CRSPropertyType_sequence' for type '-gml:CRSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CRSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CRSPropertyType_sequence (-628)

#endif

/* __gml__GeneralConversionPropertyType_sequence * has binding name 'PointerTo__gml__GeneralConversionPropertyType_sequence' for type '-gml:GeneralConversionPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeneralConversionPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeneralConversionPropertyType_sequence (-625)

#endif

/* __gml__EllipsoidPropertyType_sequence * has binding name 'PointerTo__gml__EllipsoidPropertyType_sequence' for type '-gml:EllipsoidPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidPropertyType_sequence (-622)

#endif

/* gml__EllipsoidType * has binding name 'PointerTogml__EllipsoidType' for type 'gml:EllipsoidType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidType (-621)

#endif

/* __gml__PrimeMeridianPropertyType_sequence * has binding name 'PointerTo__gml__PrimeMeridianPropertyType_sequence' for type '-gml:PrimeMeridianPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__PrimeMeridianPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__PrimeMeridianPropertyType_sequence (-619)

#endif

/* gml__PrimeMeridianType * has binding name 'PointerTogml__PrimeMeridianType' for type 'gml:PrimeMeridianType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianType (-618)

#endif

/* __gml__GeodeticDatumPropertyType_sequence * has binding name 'PointerTo__gml__GeodeticDatumPropertyType_sequence' for type '-gml:GeodeticDatumPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticDatumPropertyType_sequence (-616)

#endif

/* gml__GeodeticDatumType * has binding name 'PointerTogml__GeodeticDatumType' for type 'gml:GeodeticDatumType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumType (-615)

#endif

/* __gml__SphericalCSPropertyType_sequence * has binding name 'PointerTo__gml__SphericalCSPropertyType_sequence' for type '-gml:SphericalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__SphericalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__SphericalCSPropertyType_sequence (-613)

#endif

/* gml__SphericalCSType * has binding name 'PointerTogml__SphericalCSType' for type 'gml:SphericalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSType (-612)

#endif

/* __gml__CartesianCSPropertyType_sequence * has binding name 'PointerTo__gml__CartesianCSPropertyType_sequence' for type '-gml:CartesianCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CartesianCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CartesianCSPropertyType_sequence (-610)

#endif

/* gml__CartesianCSType * has binding name 'PointerTogml__CartesianCSType' for type 'gml:CartesianCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSType (-609)

#endif

/* __gml__CoordinateSystemAxisPropertyType_sequence * has binding name 'PointerTo__gml__CoordinateSystemAxisPropertyType_sequence' for type '-gml:CoordinateSystemAxisPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence (-607)

#endif

/* gml__CoordinateSystemAxisType * has binding name 'PointerTogml__CoordinateSystemAxisType' for type 'gml:CoordinateSystemAxisType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisType (-606)

#endif

/* __gml__EllipsoidalCSPropertyType_sequence * has binding name 'PointerTo__gml__EllipsoidalCSPropertyType_sequence' for type '-gml:EllipsoidalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence (-604)

#endif

/* gml__EllipsoidalCSType * has binding name 'PointerTogml__EllipsoidalCSType' for type 'gml:EllipsoidalCSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSType (-603)

#endif

/* __gml__TimePrimitivePropertyType_sequence * has binding name 'PointerTo__gml__TimePrimitivePropertyType_sequence' for type '-gml:TimePrimitivePropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__TimePrimitivePropertyType_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__TimePrimitivePropertyType_sequence (-601)

#endif

/* enum _xlink__actuate * has binding name 'PointerTo_xlink__actuate' for type 'xlink:actuate' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__actuate
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__actuate (-598)

#endif

/* enum _xlink__show * has binding name 'PointerTo_xlink__show' for type 'xlink:show' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__show
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__show (-597)

#endif

/* std::string * has binding name 'PointerTostd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTostd__string
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTostd__string (-596)

#endif

/* std::string * has binding name 'PointerToxsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__anyURI
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__anyURI (-595)

#endif

/* std::string * has binding name 'PointerTogml__NilReasonType' for type 'gml:NilReasonType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__NilReasonType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__NilReasonType (-594)

#endif

/* gml__CodeType * has binding name 'PointerTogml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeType (-592)

#endif

/* gml__CodeWithAuthorityType * has binding name 'PointerTogml__CodeWithAuthorityType' for type 'gml:CodeWithAuthorityType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeWithAuthorityType (-591)

#endif

/* gml__ReferenceType * has binding name 'PointerTogml__ReferenceType' for type 'gml:ReferenceType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ReferenceType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ReferenceType (-590)

#endif

/* gml__StringOrRefType * has binding name 'PointerTogml__StringOrRefType' for type 'gml:StringOrRefType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__StringOrRefType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__StringOrRefType (-589)

#endif

/* witsml1__yAxisAzimuth * has binding name 'PointerTowitsml1__yAxisAzimuth' for type 'witsml1:yAxisAzimuth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__yAxisAzimuth (-588)

#endif

/* enum witsml1__Hemispheres * has binding name 'PointerTowitsml1__Hemispheres' for type 'witsml1:Hemispheres' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Hemispheres (-586)

#endif

/* enum witsml1__NADTypes * has binding name 'PointerTowitsml1__NADTypes' for type 'witsml1:NADTypes' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NADTypes (-585)

#endif

/* std::string * has binding name 'PointerTowitsml1__geodeticZoneString' for type 'witsml1:geodeticZoneString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__geodeticZoneString (-584)

#endif

/* enum witsml1__ProjectionVariantsObliqueMercator * has binding name 'PointerTowitsml1__ProjectionVariantsObliqueMercator' for type 'witsml1:ProjectionVariantsObliqueMercator' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ProjectionVariantsObliqueMercator (-583)

#endif

/* enum witsml1__Projection * has binding name 'PointerTowitsml1__Projection' for type 'witsml1:Projection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Projection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Projection (-582)

#endif

/* enum witsml1__Ellipsoid * has binding name 'PointerTowitsml1__Ellipsoid' for type 'witsml1:Ellipsoid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Ellipsoid (-581)

#endif

/* double * has binding name 'PointerTowitsml1__unitlessQuantity' for type 'witsml1:unitlessQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__unitlessQuantity (-580)

#endif

/* enum witsml1__GeodeticDatum * has binding name 'PointerTowitsml1__GeodeticDatum' for type 'witsml1:GeodeticDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__GeodeticDatum (-579)

#endif

/* witsml1__cs_USCORElocalCRS * has binding name 'PointerTowitsml1__cs_USCORElocalCRS' for type 'witsml1:cs_localCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocalCRS (-577)

#endif

/* witsml1__cs_USCOREgeodeticModel * has binding name 'PointerTowitsml1__cs_USCOREgeodeticModel' for type 'witsml1:cs_geodeticModel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREgeodeticModel (-576)

#endif

/* witsml1__cs_USCOREprojectionx * has binding name 'PointerTowitsml1__cs_USCOREprojectionx' for type 'witsml1:cs_projectionx' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREprojectionx (-575)

#endif

/* witsml1__footageEastWest * has binding name 'PointerTowitsml1__footageEastWest' for type 'witsml1:footageEastWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageEastWest (-574)

#endif

/* witsml1__footageNorthSouth * has binding name 'PointerTowitsml1__footageNorthSouth' for type 'witsml1:footageNorthSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageNorthSouth (-573)

#endif

/* std::string * has binding name 'PointerTowitsml1__publicLandSurveySystemQuarterTownship' for type 'witsml1:publicLandSurveySystemQuarterTownship' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterTownship (-572)

#endif

/* std::string * has binding name 'PointerTowitsml1__publicLandSurveySystemQuarterSection' for type 'witsml1:publicLandSurveySystemQuarterSection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterSection (-571)

#endif

/* std::string * has binding name 'PointerTowitsml1__sectionNumber' for type 'witsml1:sectionNumber' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__sectionNumber (-570)

#endif

/* enum witsml1__NorthOrSouth * has binding name 'PointerTowitsml1__NorthOrSouth' for type 'witsml1:NorthOrSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NorthOrSouth (-569)

#endif

/* enum witsml1__EastOrWest * has binding name 'PointerTowitsml1__EastOrWest' for type 'witsml1:EastOrWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__EastOrWest (-568)

#endif

/* enum witsml1__PrincipalMeridian * has binding name 'PointerTowitsml1__PrincipalMeridian' for type 'witsml1:PrincipalMeridian' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__PrincipalMeridian (-567)

#endif

/* witsml1__cs_USCORErefWellWellboreRig * has binding name 'PointerTowitsml1__cs_USCORErefWellWellboreRig' for type 'witsml1:cs_refWellWellboreRig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellboreRig (-566)

#endif

/* witsml1__cs_USCORErefWellWellbore * has binding name 'PointerTowitsml1__cs_USCORErefWellWellbore' for type 'witsml1:cs_refWellWellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellbore (-565)

#endif

/* enum witsml1__ElevCodeEnum * has binding name 'PointerTowitsml1__ElevCodeEnum' for type 'witsml1:ElevCodeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ElevCodeEnum (-562)

#endif

/* __witsml1__obj_USCOREwell_sequence * has binding name 'PointerTo__witsml1__obj_USCOREwell_sequence' for type '-witsml1:obj_well-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwell_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwell_sequence (-561)

#endif

/* witsml1__cs_USCOREwellCRS * has binding name 'PointerTowitsml1__cs_USCOREwellCRS' for type 'witsml1:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellCRS (-559)

#endif

/* witsml1__cs_USCOREreferencePoint * has binding name 'PointerTowitsml1__cs_USCOREreferencePoint' for type 'witsml1:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREreferencePoint (-557)

#endif

/* witsml1__cs_USCOREpublicLandSurveySystem * has binding name 'PointerTowitsml1__cs_USCOREpublicLandSurveySystem' for type 'witsml1:cs_publicLandSurveySystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREpublicLandSurveySystem (-556)

#endif

/* witsml1__cs_USCOREwellDatum * has binding name 'PointerTowitsml1__cs_USCOREwellDatum' for type 'witsml1:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellDatum (-554)

#endif

/* witsml1__wellElevationCoord * has binding name 'PointerTowitsml1__wellElevationCoord' for type 'witsml1:wellElevationCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellElevationCoord (-553)

#endif

/* enum witsml1__WellDirection * has binding name 'PointerTowitsml1__WellDirection' for type 'witsml1:WellDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellDirection (-552)

#endif

/* enum witsml1__WellFluid * has binding name 'PointerTowitsml1__WellFluid' for type 'witsml1:WellFluid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellFluid (-551)

#endif

/* witsml1__dimensionlessMeasure * has binding name 'PointerTowitsml1__dimensionlessMeasure' for type 'witsml1:dimensionlessMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__dimensionlessMeasure (-550)

#endif

/* __witsml1__obj_USCOREwellbore_sequence * has binding name 'PointerTo__witsml1__obj_USCOREwellbore_sequence' for type '-witsml1:obj_wellbore-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwellbore_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwellbore_sequence (-548)

#endif

/* witsml1__timeMeasure * has binding name 'PointerTowitsml1__timeMeasure' for type 'witsml1:timeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timeMeasure (-547)

#endif

/* enum witsml1__WellboreShape * has binding name 'PointerTowitsml1__WellboreShape' for type 'witsml1:WellboreShape' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreShape (-546)

#endif

/* enum witsml1__WellboreType * has binding name 'PointerTowitsml1__WellboreType' for type 'witsml1:WellboreType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreType (-545)

#endif

/* enum witsml1__WellPurpose * has binding name 'PointerTowitsml1__WellPurpose' for type 'witsml1:WellPurpose' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellPurpose (-544)

#endif

/* enum witsml1__WellStatus * has binding name 'PointerTowitsml1__WellStatus' for type 'witsml1:WellStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellStatus (-543)

#endif

/* witsml1__areaMeasure * has binding name 'PointerTowitsml1__areaMeasure' for type 'witsml1:areaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__areaMeasure (-541)

#endif

/* witsml1__cs_USCORErefWellboreTrajectoryStation * has binding name 'PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation' for type 'witsml1:cs_refWellboreTrajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation (-540)

#endif

/* witsml1__cs_USCORElocation * has binding name 'PointerTowitsml1__cs_USCORElocation' for type 'witsml1:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocation (-538)

#endif

/* witsml1__cs_USCOREstnTrajMatrixCov * has binding name 'PointerTowitsml1__cs_USCOREstnTrajMatrixCov' for type 'witsml1:cs_stnTrajMatrixCov' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajMatrixCov (-537)

#endif

/* witsml1__cs_USCOREstnTrajValid * has binding name 'PointerTowitsml1__cs_USCOREstnTrajValid' for type 'witsml1:cs_stnTrajValid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajValid (-536)

#endif

/* witsml1__cs_USCOREstnTrajCorUsed * has binding name 'PointerTowitsml1__cs_USCOREstnTrajCorUsed' for type 'witsml1:cs_stnTrajCorUsed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajCorUsed (-535)

#endif

/* witsml1__cs_USCOREstnTrajRawData * has binding name 'PointerTowitsml1__cs_USCOREstnTrajRawData' for type 'witsml1:cs_stnTrajRawData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajRawData (-534)

#endif

/* enum witsml1__TrajStationStatus * has binding name 'PointerTowitsml1__TrajStationStatus' for type 'witsml1:TrajStationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStationStatus (-533)

#endif

/* witsml1__magneticInductionMeasure * has binding name 'PointerTowitsml1__magneticInductionMeasure' for type 'witsml1:magneticInductionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__magneticInductionMeasure (-532)

#endif

/* witsml1__accelerationLinearMeasure * has binding name 'PointerTowitsml1__accelerationLinearMeasure' for type 'witsml1:accelerationLinearMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__accelerationLinearMeasure (-531)

#endif

/* witsml1__anglePerLengthMeasure * has binding name 'PointerTowitsml1__anglePerLengthMeasure' for type 'witsml1:anglePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__anglePerLengthMeasure (-530)

#endif

/* std::string * has binding name 'PointerTowitsml1__TrajStnCalcAlgorithm' for type 'witsml1:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStnCalcAlgorithm (-529)

#endif

/* std::string * has binding name 'PointerTowitsml1__TypeSurveyTool' for type 'witsml1:TypeSurveyTool' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TypeSurveyTool (-528)

#endif

/* __witsml1__obj_USCOREtrajectory_sequence * has binding name 'PointerTo__witsml1__obj_USCOREtrajectory_sequence' for type '-witsml1:obj_trajectory-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREtrajectory_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREtrajectory_sequence (-527)

#endif

/* witsml1__cs_USCOREtrajectoryStation * has binding name 'PointerTowitsml1__cs_USCOREtrajectoryStation' for type 'witsml1:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREtrajectoryStation (-525)

#endif

/* enum witsml1__AziRef * has binding name 'PointerTowitsml1__AziRef' for type 'witsml1:AziRef' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__AziRef (-524)

#endif

/* witsml1__cs_USCORErefWellboreTrajectory * has binding name 'PointerTowitsml1__cs_USCORErefWellboreTrajectory' for type 'witsml1:cs_refWellboreTrajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectory (-523)

#endif

/* std::string * has binding name 'PointerTowitsml1__listOfString' for type 'witsml1:listOfString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__listOfString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__listOfString (-519)

#endif

/* witsml1__cs_USCOREaxisDefinition * has binding name 'PointerTowitsml1__cs_USCOREaxisDefinition' for type 'witsml1:cs_axisDefinition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREaxisDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREaxisDefinition (-517)

#endif

/* enum witsml1__LogTraceOrigin * has binding name 'PointerTowitsml1__LogTraceOrigin' for type 'witsml1:LogTraceOrigin' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceOrigin
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceOrigin (-516)

#endif

/* enum witsml1__LogTraceState * has binding name 'PointerTowitsml1__LogTraceState' for type 'witsml1:LogTraceState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceState (-515)

#endif

/* witsml1__perLengthMeasure * has binding name 'PointerTowitsml1__perLengthMeasure' for type 'witsml1:perLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__perLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__perLengthMeasure (-514)

#endif

/* std::string * has binding name 'PointerTowitsml1__str32' for type 'witsml1:str32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str32
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str32 (-513)

#endif

/* std::string * has binding name 'PointerTowitsml1__uomString' for type 'witsml1:uomString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uomString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uomString (-512)

#endif

/* witsml1__shortNameStruct * has binding name 'PointerTowitsml1__shortNameStruct' for type 'witsml1:shortNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__shortNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__shortNameStruct (-511)

#endif

/* __witsml1__obj_USCORElog_sequence * has binding name 'PointerTo__witsml1__obj_USCORElog_sequence' for type '-witsml1:obj_log-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCORElog_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCORElog_sequence (-510)

#endif

/* witsml1__cs_USCORElogData * has binding name 'PointerTowitsml1__cs_USCORElogData' for type 'witsml1:cs_logData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogData (-508)

#endif

/* witsml1__cs_USCORElogCurveInfo * has binding name 'PointerTowitsml1__cs_USCORElogCurveInfo' for type 'witsml1:cs_logCurveInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogCurveInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogCurveInfo (-506)

#endif

/* witsml1__indexedObject * has binding name 'PointerTowitsml1__indexedObject' for type 'witsml1:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__indexedObject (-504)

#endif

/* std::string * has binding name 'PointerTowitsml1__encodedValueString' for type 'witsml1:encodedValueString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__encodedValueString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__encodedValueString (-503)

#endif

/* enum witsml1__LogIndexDirection * has binding name 'PointerTowitsml1__LogIndexDirection' for type 'witsml1:LogIndexDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogIndexDirection
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogIndexDirection (-502)

#endif

/* witsml1__ratioGenericMeasure * has binding name 'PointerTowitsml1__ratioGenericMeasure' for type 'witsml1:ratioGenericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ratioGenericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ratioGenericMeasure (-501)

#endif

/* witsml1__genericMeasure * has binding name 'PointerTowitsml1__genericMeasure' for type 'witsml1:genericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__genericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__genericMeasure (-500)

#endif

/* std::string * has binding name 'PointerTowitsml1__str2' for type 'witsml1:str2' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str2
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str2 (-499)

#endif

/* std::string * has binding name 'PointerTowitsml1__str16' for type 'witsml1:str16' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str16
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str16 (-498)

#endif

/* int * has binding name 'PointerTowitsml1__positiveBigCount' for type 'witsml1:positiveBigCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveBigCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveBigCount (-497)

#endif

/* bool * has binding name 'PointerTowitsml1__logicalBoolean' for type 'witsml1:logicalBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__logicalBoolean (-496)

#endif

/* gml__VerticalCRSType * has binding name 'PointerTogml__VerticalCRSType' for type 'gml:VerticalCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCRSType (-493)

#endif

/* gml__ProjectedCRSType * has binding name 'PointerTogml__ProjectedCRSType' for type 'gml:ProjectedCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ProjectedCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ProjectedCRSType (-491)

#endif

/* gml__GeodeticCRSType * has binding name 'PointerTogml__GeodeticCRSType' for type 'gml:GeodeticCRSType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSType (-489)

#endif

/* witsml1__wellKnownNameStruct * has binding name 'PointerTowitsml1__wellKnownNameStruct' for type 'witsml1:wellKnownNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellKnownNameStruct (-488)

#endif

/* __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * has binding name 'PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence' for type '-witsml1:obj_coordinateReferenceSystem-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence (-487)

#endif

/* witsml1__cs_USCOREstandardVerticalCRS * has binding name 'PointerTowitsml1__cs_USCOREstandardVerticalCRS' for type 'witsml1:cs_standardVerticalCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardVerticalCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardVerticalCRS (-485)

#endif

/* witsml1__cs_USCOREstandardProjectedCRS * has binding name 'PointerTowitsml1__cs_USCOREstandardProjectedCRS' for type 'witsml1:cs_standardProjectedCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardProjectedCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardProjectedCRS (-484)

#endif

/* witsml1__cs_USCOREstandardGeodeticCRS * has binding name 'PointerTowitsml1__cs_USCOREstandardGeodeticCRS' for type 'witsml1:cs_standardGeodeticCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardGeodeticCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardGeodeticCRS (-483)

#endif

/* witsml1__cs_USCOREextensionAny * has binding name 'PointerTowitsml1__cs_USCOREextensionAny' for type 'witsml1:cs_extensionAny' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionAny (-480)

#endif

/* bool * has binding name 'PointerTobool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTobool
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTobool (-479)

#endif

/* witsml1__refNameString * has binding name 'PointerTowitsml1__refNameString' for type 'witsml1:refNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refNameString (-478)

#endif

/* witsml1__timestampedTimeZone * has binding name 'PointerTowitsml1__timestampedTimeZone' for type 'witsml1:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestampedTimeZone (-476)

#endif

/* enum witsml1__ItemState * has binding name 'PointerTowitsml1__ItemState' for type 'witsml1:ItemState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ItemState (-475)

#endif

/* witsml1__cs_USCOREdocumentEvent * has binding name 'PointerTowitsml1__cs_USCOREdocumentEvent' for type 'witsml1:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentEvent (-473)

#endif

/* std::string * has binding name 'PointerTowitsml1__descriptionString' for type 'witsml1:descriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__descriptionString (-472)

#endif

/* std::string * has binding name 'PointerTowitsml1__MeasureClass' for type 'witsml1:MeasureClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__MeasureClass (-471)

#endif

/* short * has binding name 'PointerTowitsml1__positiveCount' for type 'witsml1:positiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveCount (-470)

#endif

/* witsml1__extensionvalue * has binding name 'PointerTowitsml1__extensionvalue' for type 'witsml1:extensionvalue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__extensionvalue (-469)

#endif

/* witsml1__cs_USCOREextensionNameValue * has binding name 'PointerTowitsml1__cs_USCOREextensionNameValue' for type 'witsml1:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionNameValue (-467)

#endif

/* std::string * has binding name 'PointerTowitsml1__kindString' for type 'witsml1:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__kindString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__kindString (-466)

#endif

/* witsml1__cs_USCOREdocumentAudit * has binding name 'PointerTowitsml1__cs_USCOREdocumentAudit' for type 'witsml1:cs_documentAudit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentAudit (-465)

#endif

/* witsml1__cs_USCOREdocumentSecurityInfo * has binding name 'PointerTowitsml1__cs_USCOREdocumentSecurityInfo' for type 'witsml1:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentSecurityInfo (-463)

#endif

/* witsml1__cs_USCOREdocumentFileCreation * has binding name 'PointerTowitsml1__cs_USCOREdocumentFileCreation' for type 'witsml1:cs_documentFileCreation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentFileCreation (-462)

#endif

/* struct tm * has binding name 'PointerTowitsml1__timestamp' for type 'witsml1:timestamp' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestamp
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestamp (-461)

#endif

/* witsml1__nameStruct * has binding name 'PointerTowitsml1__nameStruct' for type 'witsml1:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameStruct (-459)

#endif

/* std::string * has binding name 'PointerTowitsml1__uidString' for type 'witsml1:uidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidString (-457)

#endif

/* std::string * has binding name 'PointerTowitsml1__uidParentString' for type 'witsml1:uidParentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidParentString (-456)

#endif

/* witsml1__cs_USCOREcustomData * has binding name 'PointerTowitsml1__cs_USCOREcustomData' for type 'witsml1:cs_customData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcustomData (-455)

#endif

/* witsml1__cs_USCOREcommonData * has binding name 'PointerTowitsml1__cs_USCOREcommonData' for type 'witsml1:cs_commonData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcommonData (-454)

#endif

/* __witsml1__obj_USCOREformationMarker_sequence * has binding name 'PointerTo__witsml1__obj_USCOREformationMarker_sequence' for type '-witsml1:obj_formationMarker-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREformationMarker_sequence
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREformationMarker_sequence (-453)

#endif

/* std::string * has binding name 'PointerTowitsml1__commentString' for type 'witsml1:commentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__commentString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__commentString (-452)

#endif

/* std::string * has binding name 'PointerTowitsml1__nameString' for type 'witsml1:nameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameString (-451)

#endif

/* witsml1__chronostratigraphyStruct * has binding name 'PointerTowitsml1__chronostratigraphyStruct' for type 'witsml1:chronostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__chronostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__chronostratigraphyStruct (-450)

#endif

/* witsml1__lithostratigraphyStruct * has binding name 'PointerTowitsml1__lithostratigraphyStruct' for type 'witsml1:lithostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lithostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lithostratigraphyStruct (-449)

#endif

/* witsml1__planeAngleMeasure * has binding name 'PointerTowitsml1__planeAngleMeasure' for type 'witsml1:planeAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__planeAngleMeasure (-448)

#endif

/* witsml1__lengthMeasure * has binding name 'PointerTowitsml1__lengthMeasure' for type 'witsml1:lengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lengthMeasure (-447)

#endif

/* witsml1__wellVerticalDepthCoord * has binding name 'PointerTowitsml1__wellVerticalDepthCoord' for type 'witsml1:wellVerticalDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellVerticalDepthCoord (-446)

#endif

/* witsml1__measuredDepthCoord * has binding name 'PointerTowitsml1__measuredDepthCoord' for type 'witsml1:measuredDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__measuredDepthCoord (-445)

#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__QName
#define SOAP_TYPE_gsoap_witsml1_4_1_1__QName (-6)

#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__XML
#define SOAP_TYPE_gsoap_witsml1_4_1_1__XML (-5)

#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_string
#define SOAP_TYPE_gsoap_witsml1_4_1_1_string (-4)

#endif

/* std::vector<_gml__coordinateOperationAccuracy *>  has binding name 'std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy (-785)

#endif

/* std::vector<gml__CoordinateSystemAxisPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType (-778)

#endif

/* std::vector<_gml__domainOfValidity *>  has binding name 'std__vectorTemplateOfPointerTo_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity (-776)

#endif

/* std::vector<gml__RelatedTimeType *>  has binding name 'std__vectorTemplateOfPointerTogml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__RelatedTimeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__RelatedTimeType (-770)

#endif

/* std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-759)

#endif

/* std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType (-757)

#endif

/* std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType (-755)

#endif

/* std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType (-753)

#endif

/* std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType (-751)

#endif

/* std::vector<gco__DateTime_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType (-749)

#endif

/* std::vector<gco__CharacterString_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType (-744)

#endif

/* std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType (-739)

#endif

/* std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType (-737)

#endif

/* std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType (-735)

#endif

/* std::vector<witsml1__obj_USCOREwell *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell' for type 'witsml1:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell (-730)

#endif

/* std::vector<witsml1__obj_USCOREwellbore *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore' for type 'witsml1:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore (-728)

#endif

/* std::vector<witsml1__obj_USCOREtrajectory *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory' for type 'witsml1:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory (-726)

#endif

/* std::vector<witsml1__obj_USCORElog *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCORElog' for type 'witsml1:obj_log' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog (-724)

#endif

/* std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem' for type 'witsml1:obj_coordinateReferenceSystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem (-722)

#endif

/* std::vector<witsml1__obj_USCOREformationMarker *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker' for type 'witsml1:obj_formationMarker' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker (-720)

#endif

/* std::vector<gml__CodeType *>  has binding name 'std__vectorTemplateOfPointerTogml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CodeType
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CodeType (-593)

#endif

/* std::vector<std::string>  has binding name 'std__vectorTemplateOfwitsml1__kindString' for type 'witsml1:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfwitsml1__kindString
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfwitsml1__kindString (-564)

#endif

/* std::vector<witsml1__cs_USCOREwellCRS *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS' for type 'witsml1:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS (-560)

#endif

/* std::vector<witsml1__cs_USCOREreferencePoint *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint' for type 'witsml1:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint (-558)

#endif

/* std::vector<witsml1__cs_USCOREwellDatum *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum' for type 'witsml1:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum (-555)

#endif

/* std::vector<witsml1__cs_USCORElocation *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation' for type 'witsml1:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation (-539)

#endif

/* std::vector<witsml1__cs_USCOREtrajectoryStation *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation' for type 'witsml1:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation (-526)

#endif

/* std::vector<std::string>  has binding name 'std__vectorTemplateOfstd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfstd__string
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfstd__string (-521)

#endif

/* std::vector<witsml1__cs_USCOREaxisDefinition *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition' for type 'witsml1:cs_axisDefinition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition (-518)

#endif

/* std::vector<witsml1__cs_USCORElogData *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData' for type 'witsml1:cs_logData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData (-509)

#endif

/* std::vector<witsml1__cs_USCORElogCurveInfo *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo' for type 'witsml1:cs_logCurveInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo (-507)

#endif

/* std::vector<witsml1__indexedObject *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__indexedObject' for type 'witsml1:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__indexedObject (-505)

#endif

/* std::vector<char *>  has binding name 'std__vectorTemplateOf_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOf_XML
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOf_XML (-481)

#endif

/* std::vector<witsml1__timestampedTimeZone *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone' for type 'witsml1:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone (-477)

#endif

/* std::vector<witsml1__cs_USCOREdocumentEvent *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent' for type 'witsml1:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent (-474)

#endif

/* std::vector<witsml1__cs_USCOREextensionNameValue *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue' for type 'witsml1:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue (-468)

#endif

/* std::vector<witsml1__cs_USCOREdocumentSecurityInfo *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo' for type 'witsml1:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo (-464)

#endif

/* std::vector<witsml1__nameStruct *>  has binding name 'std__vectorTemplateOfPointerTowitsml1__nameStruct' for type 'witsml1:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__nameStruct (-460)

#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace gsoap_witsml1_4_1_1


#endif

/* End of gsoap_witsml1_4_1_1Stub.h */
