/* gsoap_resqml2_0_1H.h
   Generated by gSOAP 2.8.106 for resqml2_0_1ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use, no resale/redistribution.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef gsoap_resqml2_0_1H_H
#define gsoap_resqml2_0_1H_H
#include "gsoap_resqml2_0_1Stub.h"

namespace gsoap_resqml2_0_1 {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);
SOAP_FMAC3 void * SOAP_FMAC4 gsoap_resqml2_0_1_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_resqml2_0_1_fdelete(struct soap *soap, struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_resqml2_0_1_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 gsoap_resqml2_0_1_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_byte_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_byte_DEFINED

inline void soap_default_byte(struct soap *soap, char *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_byte
	*a = SOAP_DEFAULT_byte;
#else
	*a = (char)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_byte(struct soap *soap, const char *URL, char const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_byte(struct soap *soap, const char *URL, char *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_byte(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_byte(struct soap *soap, char *p)
{
	if (gsoap_resqml2_0_1::soap_read_byte(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_int_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_int_DEFINED

inline void soap_default_int(struct soap *soap, int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_int
	*a = SOAP_DEFAULT_int;
#else
	*a = (int)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_int(struct soap *soap, const char *URL, int const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_int(struct soap *soap, const char *URL, int *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_int(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_int(struct soap *soap, int *p)
{
	if (gsoap_resqml2_0_1::soap_read_int(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_long_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_long_DEFINED

inline void soap_default_long(struct soap *soap, long *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_long
	*a = SOAP_DEFAULT_long;
#else
	*a = (long)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);

SOAP_FMAC3 long * SOAP_FMAC4 soap_new_long(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

inline int soap_write_long(struct soap *soap, long const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_long(soap, p, "long", "xsd:long") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_long(struct soap *soap, const char *URL, long const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_long(soap, p, "long", "xsd:long") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_long(struct soap *soap, const char *URL, long const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_long(soap, p, "long", "xsd:long") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_long(struct soap *soap, const char *URL, long const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_long(soap, p, "long", "xsd:long") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

inline int soap_read_long(struct soap *soap, long *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_long(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_long(struct soap *soap, const char *URL, long *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_long(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_long(struct soap *soap, long *p)
{
	if (gsoap_resqml2_0_1::soap_read_long(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer_DEFINED

inline void soap_default_xsd__integer(struct soap *soap, LONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_xsd__integer
	*a = SOAP_DEFAULT_xsd__integer;
#else
	*a = (LONG64)0;
#endif
}

#define soap_xsd__integer2s soap_LONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__integer(struct soap*, const char*, LONG64 *);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, LONG64 *, const char*);

#define soap_instantiate_xsd__integer soap_instantiate_LONG64


#define soap_new_xsd__integer soap_new_LONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const LONG64 *, const char*, const char*);

inline int soap_write_xsd__integer(struct soap *soap, LONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_xsd__integer(soap, p, "xsd:integer", "xsd:integer") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_xsd__integer(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__integer(soap, p, "xsd:integer", "xsd:integer") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_xsd__integer(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__integer(soap, p, "xsd:integer", "xsd:integer") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__integer(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__integer(soap, p, "xsd:integer", "xsd:integer") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, LONG64 *, const char*, const char*);

inline int soap_read_xsd__integer(struct soap *soap, LONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_xsd__integer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__integer(struct soap *soap, const char *URL, LONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_xsd__integer(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_xsd__integer(struct soap *soap, LONG64 *p)
{
	if (gsoap_resqml2_0_1::soap_read_xsd__integer(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_LONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_LONG64_DEFINED

inline void soap_default_LONG64(struct soap *soap, LONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_LONG64
	*a = SOAP_DEFAULT_LONG64;
#else
	*a = (LONG64)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_new_LONG64(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

inline int soap_write_LONG64(struct soap *soap, LONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_LONG64(soap, p, "long", "xsd:long") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_LONG64(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_LONG64(soap, p, "long", "xsd:long") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_LONG64(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_LONG64(soap, p, "long", "xsd:long") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_LONG64(struct soap *soap, const char *URL, LONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_LONG64(soap, p, "long", "xsd:long") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

inline int soap_read_LONG64(struct soap *soap, LONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_LONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_LONG64(struct soap *soap, const char *URL, LONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_LONG64(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_LONG64(struct soap *soap, LONG64 *p)
{
	if (gsoap_resqml2_0_1::soap_read_LONG64(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure_DEFINED

inline void soap_default_eml20__Measure(struct soap *soap, double *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__Measure
	*a = SOAP_DEFAULT_eml20__Measure;
#else
	*a = (double)0;
#endif
}

#define soap_eml20__Measure2s soap_double2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__Measure(struct soap*, const char*, int, const double *, const char*);

#define soap_s2eml20__Measure soap_s2double

SOAP_FMAC3 double * SOAP_FMAC4 soap_in_eml20__Measure(struct soap*, const char*, double *, const char*);

#define soap_instantiate_eml20__Measure soap_instantiate_double


#define soap_new_eml20__Measure soap_new_double

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__Measure(struct soap*, const double *, const char*, const char*);

inline int soap_write_eml20__Measure(struct soap *soap, double const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__Measure(soap, p, "eml20:Measure", "eml20:Measure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__Measure(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__Measure(soap, p, "eml20:Measure", "eml20:Measure") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__Measure(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__Measure(soap, p, "eml20:Measure", "eml20:Measure") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__Measure(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__Measure(soap, p, "eml20:Measure", "eml20:Measure") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_eml20__Measure(struct soap*, double *, const char*, const char*);

inline int soap_read_eml20__Measure(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__Measure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__Measure(struct soap *soap, const char *URL, double *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__Measure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__Measure(struct soap *soap, double *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__Measure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_double_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_double_DEFINED

inline void soap_default_double(struct soap *soap, double *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_double
	*a = SOAP_DEFAULT_double;
#else
	*a = (double)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 double * SOAP_FMAC4 soap_new_double(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

inline int soap_write_double(struct soap *soap, double const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_double(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_double(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_double(struct soap *soap, const char *URL, double const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

inline int soap_read_double(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_double(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_double(struct soap *soap, const char *URL, double *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_double(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_double(struct soap *soap, double *p)
{
	if (gsoap_resqml2_0_1::soap_read_double(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt_DEFINED

inline void soap_default_unsignedInt(struct soap *soap, unsigned int *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_unsignedInt
	*a = SOAP_DEFAULT_unsignedInt;
#else
	*a = (unsigned int)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

inline int soap_write_unsignedInt(struct soap *soap, unsigned int const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_unsignedInt(soap, p, "unsignedInt", "xsd:unsignedInt") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_unsignedInt(struct soap *soap, const char *URL, unsigned int const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_unsignedInt(soap, p, "unsignedInt", "xsd:unsignedInt") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_unsignedInt(struct soap *soap, const char *URL, unsigned int const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_unsignedInt(soap, p, "unsignedInt", "xsd:unsignedInt") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_unsignedInt(struct soap *soap, const char *URL, unsigned int const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_unsignedInt(soap, p, "unsignedInt", "xsd:unsignedInt") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

inline int soap_read_unsignedInt(struct soap *soap, unsigned int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_unsignedInt(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_unsignedInt(struct soap *soap, const char *URL, unsigned int *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_unsignedInt(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_unsignedInt(struct soap *soap, unsigned int *p)
{
	if (gsoap_resqml2_0_1::soap_read_unsignedInt(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger_DEFINED

inline void soap_default_xsd__positiveInteger(struct soap *soap, ULONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_xsd__positiveInteger
	*a = SOAP_DEFAULT_xsd__positiveInteger;
#else
	*a = (ULONG64)0;
#endif
}

#define soap_xsd__positiveInteger2s soap_ULONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__positiveInteger(struct soap*, const char*, ULONG64 *);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, ULONG64 *, const char*);

#define soap_instantiate_xsd__positiveInteger soap_instantiate_ULONG64


#define soap_new_xsd__positiveInteger soap_new_ULONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_xsd__positiveInteger(struct soap *soap, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_xsd__positiveInteger(soap, p, "xsd:positiveInteger", "xsd:positiveInteger") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_xsd__positiveInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__positiveInteger(soap, p, "xsd:positiveInteger", "xsd:positiveInteger") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_xsd__positiveInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__positiveInteger(soap, p, "xsd:positiveInteger", "xsd:positiveInteger") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__positiveInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__positiveInteger(soap, p, "xsd:positiveInteger", "xsd:positiveInteger") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_xsd__positiveInteger(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_xsd__positiveInteger(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__positiveInteger(struct soap *soap, const char *URL, ULONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_xsd__positiveInteger(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_xsd__positiveInteger(struct soap *soap, ULONG64 *p)
{
	if (gsoap_resqml2_0_1::soap_read_xsd__positiveInteger(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger_DEFINED

inline void soap_default_xsd__nonNegativeInteger(struct soap *soap, ULONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_xsd__nonNegativeInteger
	*a = SOAP_DEFAULT_xsd__nonNegativeInteger;
#else
	*a = (ULONG64)0;
#endif
}

#define soap_xsd__nonNegativeInteger2s soap_ULONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__nonNegativeInteger(struct soap*, const char*, ULONG64 *);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, ULONG64 *, const char*);

#define soap_instantiate_xsd__nonNegativeInteger soap_instantiate_ULONG64


#define soap_new_xsd__nonNegativeInteger soap_new_ULONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_xsd__nonNegativeInteger(struct soap *soap, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_xsd__nonNegativeInteger(soap, p, "xsd:nonNegativeInteger", "xsd:nonNegativeInteger") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_xsd__nonNegativeInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__nonNegativeInteger(soap, p, "xsd:nonNegativeInteger", "xsd:nonNegativeInteger") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_xsd__nonNegativeInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__nonNegativeInteger(soap, p, "xsd:nonNegativeInteger", "xsd:nonNegativeInteger") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__nonNegativeInteger(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__nonNegativeInteger(soap, p, "xsd:nonNegativeInteger", "xsd:nonNegativeInteger") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_xsd__nonNegativeInteger(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_xsd__nonNegativeInteger(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__nonNegativeInteger(struct soap *soap, const char *URL, ULONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_xsd__nonNegativeInteger(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_xsd__nonNegativeInteger(struct soap *soap, ULONG64 *p)
{
	if (gsoap_resqml2_0_1::soap_read_xsd__nonNegativeInteger(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ULONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ULONG64_DEFINED

inline void soap_default_ULONG64(struct soap *soap, ULONG64 *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_ULONG64
	*a = SOAP_DEFAULT_ULONG64;
#else
	*a = (ULONG64)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_new_ULONG64(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_ULONG64(struct soap *soap, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_ULONG64(soap, p, "unsignedLong", "xsd:unsignedLong") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_ULONG64(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_ULONG64(soap, p, "unsignedLong", "xsd:unsignedLong") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ULONG64(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_ULONG64(soap, p, "unsignedLong", "xsd:unsignedLong") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ULONG64(struct soap *soap, const char *URL, ULONG64 const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_ULONG64(soap, p, "unsignedLong", "xsd:unsignedLong") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_ULONG64(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_ULONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ULONG64(struct soap *soap, const char *URL, ULONG64 *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_ULONG64(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ULONG64(struct soap *soap, ULONG64 *p)
{
	if (gsoap_resqml2_0_1::soap_read_ULONG64(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_bool_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_bool_DEFINED

inline void soap_default_bool(struct soap *soap, bool *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_bool
	*a = SOAP_DEFAULT_bool;
#else
	*a = (bool)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 bool * SOAP_FMAC4 soap_new_bool(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

inline int soap_write_bool(struct soap *soap, bool const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_bool(struct soap *soap, const char *URL, bool const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_bool(struct soap *soap, const char *URL, bool const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_bool(struct soap *soap, const char *URL, bool const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

inline int soap_read_bool(struct soap *soap, bool *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_bool(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_bool(struct soap *soap, const char *URL, bool *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_bool(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_bool(struct soap *soap, bool *p)
{
	if (gsoap_resqml2_0_1::soap_read_bool(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom_DEFINED

inline void soap_default_eml20__DigitalStorageUom(struct soap *soap, enum eml20__DigitalStorageUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DigitalStorageUom
	*a = SOAP_DEFAULT_eml20__DigitalStorageUom;
#else
	*a = (enum eml20__DigitalStorageUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DigitalStorageUom(struct soap*, const char*, int, const enum eml20__DigitalStorageUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DigitalStorageUom2s(struct soap*, enum eml20__DigitalStorageUom);
SOAP_FMAC3 enum eml20__DigitalStorageUom * SOAP_FMAC4 soap_in_eml20__DigitalStorageUom(struct soap*, const char*, enum eml20__DigitalStorageUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DigitalStorageUom(struct soap*, const char*, enum eml20__DigitalStorageUom *);

SOAP_FMAC3 enum eml20__DigitalStorageUom * SOAP_FMAC4 soap_new_eml20__DigitalStorageUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DigitalStorageUom(struct soap*, const enum eml20__DigitalStorageUom *, const char*, const char*);

inline int soap_write_eml20__DigitalStorageUom(struct soap *soap, enum eml20__DigitalStorageUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DigitalStorageUom(soap, p, "eml20:DigitalStorageUom", "eml20:DigitalStorageUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DigitalStorageUom(struct soap *soap, const char *URL, enum eml20__DigitalStorageUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DigitalStorageUom(soap, p, "eml20:DigitalStorageUom", "eml20:DigitalStorageUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DigitalStorageUom(struct soap *soap, const char *URL, enum eml20__DigitalStorageUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DigitalStorageUom(soap, p, "eml20:DigitalStorageUom", "eml20:DigitalStorageUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DigitalStorageUom(struct soap *soap, const char *URL, enum eml20__DigitalStorageUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DigitalStorageUom(soap, p, "eml20:DigitalStorageUom", "eml20:DigitalStorageUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DigitalStorageUom * SOAP_FMAC4 soap_get_eml20__DigitalStorageUom(struct soap*, enum eml20__DigitalStorageUom *, const char*, const char*);

inline int soap_read_eml20__DigitalStorageUom(struct soap *soap, enum eml20__DigitalStorageUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DigitalStorageUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DigitalStorageUom(struct soap *soap, const char *URL, enum eml20__DigitalStorageUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DigitalStorageUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DigitalStorageUom(struct soap *soap, enum eml20__DigitalStorageUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DigitalStorageUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom_DEFINED

inline void soap_default_eml20__MagneticDipoleMomentUom(struct soap *soap, enum eml20__MagneticDipoleMomentUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticDipoleMomentUom
	*a = SOAP_DEFAULT_eml20__MagneticDipoleMomentUom;
#else
	*a = (enum eml20__MagneticDipoleMomentUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticDipoleMomentUom(struct soap*, const char*, int, const enum eml20__MagneticDipoleMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticDipoleMomentUom2s(struct soap*, enum eml20__MagneticDipoleMomentUom);
SOAP_FMAC3 enum eml20__MagneticDipoleMomentUom * SOAP_FMAC4 soap_in_eml20__MagneticDipoleMomentUom(struct soap*, const char*, enum eml20__MagneticDipoleMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticDipoleMomentUom(struct soap*, const char*, enum eml20__MagneticDipoleMomentUom *);

SOAP_FMAC3 enum eml20__MagneticDipoleMomentUom * SOAP_FMAC4 soap_new_eml20__MagneticDipoleMomentUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticDipoleMomentUom(struct soap*, const enum eml20__MagneticDipoleMomentUom *, const char*, const char*);

inline int soap_write_eml20__MagneticDipoleMomentUom(struct soap *soap, enum eml20__MagneticDipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticDipoleMomentUom(soap, p, "eml20:MagneticDipoleMomentUom", "eml20:MagneticDipoleMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticDipoleMomentUom(struct soap *soap, const char *URL, enum eml20__MagneticDipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticDipoleMomentUom(soap, p, "eml20:MagneticDipoleMomentUom", "eml20:MagneticDipoleMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticDipoleMomentUom(struct soap *soap, const char *URL, enum eml20__MagneticDipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticDipoleMomentUom(soap, p, "eml20:MagneticDipoleMomentUom", "eml20:MagneticDipoleMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticDipoleMomentUom(struct soap *soap, const char *URL, enum eml20__MagneticDipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticDipoleMomentUom(soap, p, "eml20:MagneticDipoleMomentUom", "eml20:MagneticDipoleMomentUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticDipoleMomentUom * SOAP_FMAC4 soap_get_eml20__MagneticDipoleMomentUom(struct soap*, enum eml20__MagneticDipoleMomentUom *, const char*, const char*);

inline int soap_read_eml20__MagneticDipoleMomentUom(struct soap *soap, enum eml20__MagneticDipoleMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticDipoleMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticDipoleMomentUom(struct soap *soap, const char *URL, enum eml20__MagneticDipoleMomentUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticDipoleMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticDipoleMomentUom(struct soap *soap, enum eml20__MagneticDipoleMomentUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticDipoleMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom_DEFINED

inline void soap_default_eml20__EnergyPerAreaUom(struct soap *soap, enum eml20__EnergyPerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyPerAreaUom
	*a = SOAP_DEFAULT_eml20__EnergyPerAreaUom;
#else
	*a = (enum eml20__EnergyPerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerAreaUom(struct soap*, const char*, int, const enum eml20__EnergyPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyPerAreaUom2s(struct soap*, enum eml20__EnergyPerAreaUom);
SOAP_FMAC3 enum eml20__EnergyPerAreaUom * SOAP_FMAC4 soap_in_eml20__EnergyPerAreaUom(struct soap*, const char*, enum eml20__EnergyPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyPerAreaUom(struct soap*, const char*, enum eml20__EnergyPerAreaUom *);

SOAP_FMAC3 enum eml20__EnergyPerAreaUom * SOAP_FMAC4 soap_new_eml20__EnergyPerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyPerAreaUom(struct soap*, const enum eml20__EnergyPerAreaUom *, const char*, const char*);

inline int soap_write_eml20__EnergyPerAreaUom(struct soap *soap, enum eml20__EnergyPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerAreaUom(soap, p, "eml20:EnergyPerAreaUom", "eml20:EnergyPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerAreaUom(soap, p, "eml20:EnergyPerAreaUom", "eml20:EnergyPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerAreaUom(soap, p, "eml20:EnergyPerAreaUom", "eml20:EnergyPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerAreaUom(soap, p, "eml20:EnergyPerAreaUom", "eml20:EnergyPerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyPerAreaUom * SOAP_FMAC4 soap_get_eml20__EnergyPerAreaUom(struct soap*, enum eml20__EnergyPerAreaUom *, const char*, const char*);

inline int soap_read_eml20__EnergyPerAreaUom(struct soap *soap, enum eml20__EnergyPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyPerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerAreaUom(struct soap *soap, enum eml20__EnergyPerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom_DEFINED

inline void soap_default_eml20__LightExposureUom(struct soap *soap, enum eml20__LightExposureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LightExposureUom
	*a = SOAP_DEFAULT_eml20__LightExposureUom;
#else
	*a = (enum eml20__LightExposureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LightExposureUom(struct soap*, const char*, int, const enum eml20__LightExposureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LightExposureUom2s(struct soap*, enum eml20__LightExposureUom);
SOAP_FMAC3 enum eml20__LightExposureUom * SOAP_FMAC4 soap_in_eml20__LightExposureUom(struct soap*, const char*, enum eml20__LightExposureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LightExposureUom(struct soap*, const char*, enum eml20__LightExposureUom *);

SOAP_FMAC3 enum eml20__LightExposureUom * SOAP_FMAC4 soap_new_eml20__LightExposureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LightExposureUom(struct soap*, const enum eml20__LightExposureUom *, const char*, const char*);

inline int soap_write_eml20__LightExposureUom(struct soap *soap, enum eml20__LightExposureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LightExposureUom(soap, p, "eml20:LightExposureUom", "eml20:LightExposureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LightExposureUom(struct soap *soap, const char *URL, enum eml20__LightExposureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LightExposureUom(soap, p, "eml20:LightExposureUom", "eml20:LightExposureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LightExposureUom(struct soap *soap, const char *URL, enum eml20__LightExposureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LightExposureUom(soap, p, "eml20:LightExposureUom", "eml20:LightExposureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LightExposureUom(struct soap *soap, const char *URL, enum eml20__LightExposureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LightExposureUom(soap, p, "eml20:LightExposureUom", "eml20:LightExposureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LightExposureUom * SOAP_FMAC4 soap_get_eml20__LightExposureUom(struct soap*, enum eml20__LightExposureUom *, const char*, const char*);

inline int soap_read_eml20__LightExposureUom(struct soap *soap, enum eml20__LightExposureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LightExposureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LightExposureUom(struct soap *soap, const char *URL, enum eml20__LightExposureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LightExposureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LightExposureUom(struct soap *soap, enum eml20__LightExposureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LightExposureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom_DEFINED

inline void soap_default_eml20__ReciprocalPressureUom(struct soap *soap, enum eml20__ReciprocalPressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalPressureUom
	*a = SOAP_DEFAULT_eml20__ReciprocalPressureUom;
#else
	*a = (enum eml20__ReciprocalPressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalPressureUom(struct soap*, const char*, int, const enum eml20__ReciprocalPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalPressureUom2s(struct soap*, enum eml20__ReciprocalPressureUom);
SOAP_FMAC3 enum eml20__ReciprocalPressureUom * SOAP_FMAC4 soap_in_eml20__ReciprocalPressureUom(struct soap*, const char*, enum eml20__ReciprocalPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalPressureUom(struct soap*, const char*, enum eml20__ReciprocalPressureUom *);

SOAP_FMAC3 enum eml20__ReciprocalPressureUom * SOAP_FMAC4 soap_new_eml20__ReciprocalPressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalPressureUom(struct soap*, const enum eml20__ReciprocalPressureUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalPressureUom(struct soap *soap, enum eml20__ReciprocalPressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalPressureUom(soap, p, "eml20:ReciprocalPressureUom", "eml20:ReciprocalPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalPressureUom(struct soap *soap, const char *URL, enum eml20__ReciprocalPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalPressureUom(soap, p, "eml20:ReciprocalPressureUom", "eml20:ReciprocalPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalPressureUom(struct soap *soap, const char *URL, enum eml20__ReciprocalPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalPressureUom(soap, p, "eml20:ReciprocalPressureUom", "eml20:ReciprocalPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalPressureUom(struct soap *soap, const char *URL, enum eml20__ReciprocalPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalPressureUom(soap, p, "eml20:ReciprocalPressureUom", "eml20:ReciprocalPressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalPressureUom * SOAP_FMAC4 soap_get_eml20__ReciprocalPressureUom(struct soap*, enum eml20__ReciprocalPressureUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalPressureUom(struct soap *soap, enum eml20__ReciprocalPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalPressureUom(struct soap *soap, const char *URL, enum eml20__ReciprocalPressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalPressureUom(struct soap *soap, enum eml20__ReciprocalPressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom_DEFINED

inline void soap_default_eml20__ForcePerLengthUom(struct soap *soap, enum eml20__ForcePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForcePerLengthUom
	*a = SOAP_DEFAULT_eml20__ForcePerLengthUom;
#else
	*a = (enum eml20__ForcePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerLengthUom(struct soap*, const char*, int, const enum eml20__ForcePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForcePerLengthUom2s(struct soap*, enum eml20__ForcePerLengthUom);
SOAP_FMAC3 enum eml20__ForcePerLengthUom * SOAP_FMAC4 soap_in_eml20__ForcePerLengthUom(struct soap*, const char*, enum eml20__ForcePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForcePerLengthUom(struct soap*, const char*, enum eml20__ForcePerLengthUom *);

SOAP_FMAC3 enum eml20__ForcePerLengthUom * SOAP_FMAC4 soap_new_eml20__ForcePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForcePerLengthUom(struct soap*, const enum eml20__ForcePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__ForcePerLengthUom(struct soap *soap, enum eml20__ForcePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForcePerLengthUom(soap, p, "eml20:ForcePerLengthUom", "eml20:ForcePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerLengthUom(struct soap *soap, const char *URL, enum eml20__ForcePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerLengthUom(soap, p, "eml20:ForcePerLengthUom", "eml20:ForcePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerLengthUom(struct soap *soap, const char *URL, enum eml20__ForcePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerLengthUom(soap, p, "eml20:ForcePerLengthUom", "eml20:ForcePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerLengthUom(struct soap *soap, const char *URL, enum eml20__ForcePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerLengthUom(soap, p, "eml20:ForcePerLengthUom", "eml20:ForcePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForcePerLengthUom * SOAP_FMAC4 soap_get_eml20__ForcePerLengthUom(struct soap*, enum eml20__ForcePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__ForcePerLengthUom(struct soap *soap, enum eml20__ForcePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerLengthUom(struct soap *soap, const char *URL, enum eml20__ForcePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerLengthUom(struct soap *soap, enum eml20__ForcePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom_DEFINED

inline void soap_default_eml20__ElectricResistancePerLengthUom(struct soap *soap, enum eml20__ElectricResistancePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricResistancePerLengthUom
	*a = SOAP_DEFAULT_eml20__ElectricResistancePerLengthUom;
#else
	*a = (enum eml20__ElectricResistancePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricResistancePerLengthUom(struct soap*, const char*, int, const enum eml20__ElectricResistancePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricResistancePerLengthUom2s(struct soap*, enum eml20__ElectricResistancePerLengthUom);
SOAP_FMAC3 enum eml20__ElectricResistancePerLengthUom * SOAP_FMAC4 soap_in_eml20__ElectricResistancePerLengthUom(struct soap*, const char*, enum eml20__ElectricResistancePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricResistancePerLengthUom(struct soap*, const char*, enum eml20__ElectricResistancePerLengthUom *);

SOAP_FMAC3 enum eml20__ElectricResistancePerLengthUom * SOAP_FMAC4 soap_new_eml20__ElectricResistancePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricResistancePerLengthUom(struct soap*, const enum eml20__ElectricResistancePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__ElectricResistancePerLengthUom(struct soap *soap, enum eml20__ElectricResistancePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistancePerLengthUom(soap, p, "eml20:ElectricResistancePerLengthUom", "eml20:ElectricResistancePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricResistancePerLengthUom(struct soap *soap, const char *URL, enum eml20__ElectricResistancePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistancePerLengthUom(soap, p, "eml20:ElectricResistancePerLengthUom", "eml20:ElectricResistancePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricResistancePerLengthUom(struct soap *soap, const char *URL, enum eml20__ElectricResistancePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistancePerLengthUom(soap, p, "eml20:ElectricResistancePerLengthUom", "eml20:ElectricResistancePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricResistancePerLengthUom(struct soap *soap, const char *URL, enum eml20__ElectricResistancePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistancePerLengthUom(soap, p, "eml20:ElectricResistancePerLengthUom", "eml20:ElectricResistancePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricResistancePerLengthUom * SOAP_FMAC4 soap_get_eml20__ElectricResistancePerLengthUom(struct soap*, enum eml20__ElectricResistancePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__ElectricResistancePerLengthUom(struct soap *soap, enum eml20__ElectricResistancePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricResistancePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricResistancePerLengthUom(struct soap *soap, const char *URL, enum eml20__ElectricResistancePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricResistancePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricResistancePerLengthUom(struct soap *soap, enum eml20__ElectricResistancePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricResistancePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom_DEFINED

inline void soap_default_eml20__EnergyLengthPerAreaUom(struct soap *soap, enum eml20__EnergyLengthPerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyLengthPerAreaUom
	*a = SOAP_DEFAULT_eml20__EnergyLengthPerAreaUom;
#else
	*a = (enum eml20__EnergyLengthPerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyLengthPerAreaUom(struct soap*, const char*, int, const enum eml20__EnergyLengthPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyLengthPerAreaUom2s(struct soap*, enum eml20__EnergyLengthPerAreaUom);
SOAP_FMAC3 enum eml20__EnergyLengthPerAreaUom * SOAP_FMAC4 soap_in_eml20__EnergyLengthPerAreaUom(struct soap*, const char*, enum eml20__EnergyLengthPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyLengthPerAreaUom(struct soap*, const char*, enum eml20__EnergyLengthPerAreaUom *);

SOAP_FMAC3 enum eml20__EnergyLengthPerAreaUom * SOAP_FMAC4 soap_new_eml20__EnergyLengthPerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyLengthPerAreaUom(struct soap*, const enum eml20__EnergyLengthPerAreaUom *, const char*, const char*);

inline int soap_write_eml20__EnergyLengthPerAreaUom(struct soap *soap, enum eml20__EnergyLengthPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerAreaUom(soap, p, "eml20:EnergyLengthPerAreaUom", "eml20:EnergyLengthPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyLengthPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerAreaUom(soap, p, "eml20:EnergyLengthPerAreaUom", "eml20:EnergyLengthPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyLengthPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerAreaUom(soap, p, "eml20:EnergyLengthPerAreaUom", "eml20:EnergyLengthPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyLengthPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerAreaUom(soap, p, "eml20:EnergyLengthPerAreaUom", "eml20:EnergyLengthPerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyLengthPerAreaUom * SOAP_FMAC4 soap_get_eml20__EnergyLengthPerAreaUom(struct soap*, enum eml20__EnergyLengthPerAreaUom *, const char*, const char*);

inline int soap_read_eml20__EnergyLengthPerAreaUom(struct soap *soap, enum eml20__EnergyLengthPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyLengthPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyLengthPerAreaUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyLengthPerAreaUom(struct soap *soap, enum eml20__EnergyLengthPerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom_DEFINED

inline void soap_default_eml20__TimePerVolumeUom(struct soap *soap, enum eml20__TimePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TimePerVolumeUom
	*a = SOAP_DEFAULT_eml20__TimePerVolumeUom;
#else
	*a = (enum eml20__TimePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerVolumeUom(struct soap*, const char*, int, const enum eml20__TimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TimePerVolumeUom2s(struct soap*, enum eml20__TimePerVolumeUom);
SOAP_FMAC3 enum eml20__TimePerVolumeUom * SOAP_FMAC4 soap_in_eml20__TimePerVolumeUom(struct soap*, const char*, enum eml20__TimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TimePerVolumeUom(struct soap*, const char*, enum eml20__TimePerVolumeUom *);

SOAP_FMAC3 enum eml20__TimePerVolumeUom * SOAP_FMAC4 soap_new_eml20__TimePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TimePerVolumeUom(struct soap*, const enum eml20__TimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__TimePerVolumeUom(struct soap *soap, enum eml20__TimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TimePerVolumeUom(soap, p, "eml20:TimePerVolumeUom", "eml20:TimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__TimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerVolumeUom(soap, p, "eml20:TimePerVolumeUom", "eml20:TimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__TimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerVolumeUom(soap, p, "eml20:TimePerVolumeUom", "eml20:TimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__TimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerVolumeUom(soap, p, "eml20:TimePerVolumeUom", "eml20:TimePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TimePerVolumeUom * SOAP_FMAC4 soap_get_eml20__TimePerVolumeUom(struct soap*, enum eml20__TimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__TimePerVolumeUom(struct soap *soap, enum eml20__TimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__TimePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerVolumeUom(struct soap *soap, enum eml20__TimePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom_DEFINED

inline void soap_default_eml20__AngularVelocityUom(struct soap *soap, enum eml20__AngularVelocityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AngularVelocityUom
	*a = SOAP_DEFAULT_eml20__AngularVelocityUom;
#else
	*a = (enum eml20__AngularVelocityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AngularVelocityUom(struct soap*, const char*, int, const enum eml20__AngularVelocityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AngularVelocityUom2s(struct soap*, enum eml20__AngularVelocityUom);
SOAP_FMAC3 enum eml20__AngularVelocityUom * SOAP_FMAC4 soap_in_eml20__AngularVelocityUom(struct soap*, const char*, enum eml20__AngularVelocityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AngularVelocityUom(struct soap*, const char*, enum eml20__AngularVelocityUom *);

SOAP_FMAC3 enum eml20__AngularVelocityUom * SOAP_FMAC4 soap_new_eml20__AngularVelocityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AngularVelocityUom(struct soap*, const enum eml20__AngularVelocityUom *, const char*, const char*);

inline int soap_write_eml20__AngularVelocityUom(struct soap *soap, enum eml20__AngularVelocityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AngularVelocityUom(soap, p, "eml20:AngularVelocityUom", "eml20:AngularVelocityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AngularVelocityUom(struct soap *soap, const char *URL, enum eml20__AngularVelocityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularVelocityUom(soap, p, "eml20:AngularVelocityUom", "eml20:AngularVelocityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AngularVelocityUom(struct soap *soap, const char *URL, enum eml20__AngularVelocityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularVelocityUom(soap, p, "eml20:AngularVelocityUom", "eml20:AngularVelocityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AngularVelocityUom(struct soap *soap, const char *URL, enum eml20__AngularVelocityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularVelocityUom(soap, p, "eml20:AngularVelocityUom", "eml20:AngularVelocityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AngularVelocityUom * SOAP_FMAC4 soap_get_eml20__AngularVelocityUom(struct soap*, enum eml20__AngularVelocityUom *, const char*, const char*);

inline int soap_read_eml20__AngularVelocityUom(struct soap *soap, enum eml20__AngularVelocityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AngularVelocityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AngularVelocityUom(struct soap *soap, const char *URL, enum eml20__AngularVelocityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AngularVelocityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AngularVelocityUom(struct soap *soap, enum eml20__AngularVelocityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AngularVelocityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom_DEFINED

inline void soap_default_eml20__AreaPerAreaUom(struct soap *soap, enum eml20__AreaPerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaPerAreaUom
	*a = SOAP_DEFAULT_eml20__AreaPerAreaUom;
#else
	*a = (enum eml20__AreaPerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerAreaUom(struct soap*, const char*, int, const enum eml20__AreaPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaPerAreaUom2s(struct soap*, enum eml20__AreaPerAreaUom);
SOAP_FMAC3 enum eml20__AreaPerAreaUom * SOAP_FMAC4 soap_in_eml20__AreaPerAreaUom(struct soap*, const char*, enum eml20__AreaPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaPerAreaUom(struct soap*, const char*, enum eml20__AreaPerAreaUom *);

SOAP_FMAC3 enum eml20__AreaPerAreaUom * SOAP_FMAC4 soap_new_eml20__AreaPerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaPerAreaUom(struct soap*, const enum eml20__AreaPerAreaUom *, const char*, const char*);

inline int soap_write_eml20__AreaPerAreaUom(struct soap *soap, enum eml20__AreaPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAreaUom(soap, p, "eml20:AreaPerAreaUom", "eml20:AreaPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerAreaUom(struct soap *soap, const char *URL, enum eml20__AreaPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAreaUom(soap, p, "eml20:AreaPerAreaUom", "eml20:AreaPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerAreaUom(struct soap *soap, const char *URL, enum eml20__AreaPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAreaUom(soap, p, "eml20:AreaPerAreaUom", "eml20:AreaPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerAreaUom(struct soap *soap, const char *URL, enum eml20__AreaPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAreaUom(soap, p, "eml20:AreaPerAreaUom", "eml20:AreaPerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaPerAreaUom * SOAP_FMAC4 soap_get_eml20__AreaPerAreaUom(struct soap*, enum eml20__AreaPerAreaUom *, const char*, const char*);

inline int soap_read_eml20__AreaPerAreaUom(struct soap *soap, enum eml20__AreaPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerAreaUom(struct soap *soap, const char *URL, enum eml20__AreaPerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerAreaUom(struct soap *soap, enum eml20__AreaPerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom_DEFINED

inline void soap_default_eml20__PressureUom(struct soap *soap, enum eml20__PressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressureUom
	*a = SOAP_DEFAULT_eml20__PressureUom;
#else
	*a = (enum eml20__PressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureUom(struct soap*, const char*, int, const enum eml20__PressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressureUom2s(struct soap*, enum eml20__PressureUom);
SOAP_FMAC3 enum eml20__PressureUom * SOAP_FMAC4 soap_in_eml20__PressureUom(struct soap*, const char*, enum eml20__PressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressureUom(struct soap*, const char*, enum eml20__PressureUom *);

SOAP_FMAC3 enum eml20__PressureUom * SOAP_FMAC4 soap_new_eml20__PressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressureUom(struct soap*, const enum eml20__PressureUom *, const char*, const char*);

inline int soap_write_eml20__PressureUom(struct soap *soap, enum eml20__PressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressureUom(soap, p, "eml20:PressureUom", "eml20:PressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureUom(struct soap *soap, const char *URL, enum eml20__PressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureUom(soap, p, "eml20:PressureUom", "eml20:PressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureUom(struct soap *soap, const char *URL, enum eml20__PressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureUom(soap, p, "eml20:PressureUom", "eml20:PressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureUom(struct soap *soap, const char *URL, enum eml20__PressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureUom(soap, p, "eml20:PressureUom", "eml20:PressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressureUom * SOAP_FMAC4 soap_get_eml20__PressureUom(struct soap*, enum eml20__PressureUom *, const char*, const char*);

inline int soap_read_eml20__PressureUom(struct soap *soap, enum eml20__PressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureUom(struct soap *soap, const char *URL, enum eml20__PressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureUom(struct soap *soap, enum eml20__PressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom_DEFINED

inline void soap_default_eml20__ReciprocalVolumeUom(struct soap *soap, enum eml20__ReciprocalVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalVolumeUom
	*a = SOAP_DEFAULT_eml20__ReciprocalVolumeUom;
#else
	*a = (enum eml20__ReciprocalVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalVolumeUom(struct soap*, const char*, int, const enum eml20__ReciprocalVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalVolumeUom2s(struct soap*, enum eml20__ReciprocalVolumeUom);
SOAP_FMAC3 enum eml20__ReciprocalVolumeUom * SOAP_FMAC4 soap_in_eml20__ReciprocalVolumeUom(struct soap*, const char*, enum eml20__ReciprocalVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalVolumeUom(struct soap*, const char*, enum eml20__ReciprocalVolumeUom *);

SOAP_FMAC3 enum eml20__ReciprocalVolumeUom * SOAP_FMAC4 soap_new_eml20__ReciprocalVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalVolumeUom(struct soap*, const enum eml20__ReciprocalVolumeUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalVolumeUom(struct soap *soap, enum eml20__ReciprocalVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalVolumeUom(soap, p, "eml20:ReciprocalVolumeUom", "eml20:ReciprocalVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalVolumeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalVolumeUom(soap, p, "eml20:ReciprocalVolumeUom", "eml20:ReciprocalVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalVolumeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalVolumeUom(soap, p, "eml20:ReciprocalVolumeUom", "eml20:ReciprocalVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalVolumeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalVolumeUom(soap, p, "eml20:ReciprocalVolumeUom", "eml20:ReciprocalVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalVolumeUom * SOAP_FMAC4 soap_get_eml20__ReciprocalVolumeUom(struct soap*, enum eml20__ReciprocalVolumeUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalVolumeUom(struct soap *soap, enum eml20__ReciprocalVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalVolumeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalVolumeUom(struct soap *soap, enum eml20__ReciprocalVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom_DEFINED

inline void soap_default_eml20__ElectricResistanceUom(struct soap *soap, enum eml20__ElectricResistanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricResistanceUom
	*a = SOAP_DEFAULT_eml20__ElectricResistanceUom;
#else
	*a = (enum eml20__ElectricResistanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricResistanceUom(struct soap*, const char*, int, const enum eml20__ElectricResistanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricResistanceUom2s(struct soap*, enum eml20__ElectricResistanceUom);
SOAP_FMAC3 enum eml20__ElectricResistanceUom * SOAP_FMAC4 soap_in_eml20__ElectricResistanceUom(struct soap*, const char*, enum eml20__ElectricResistanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricResistanceUom(struct soap*, const char*, enum eml20__ElectricResistanceUom *);

SOAP_FMAC3 enum eml20__ElectricResistanceUom * SOAP_FMAC4 soap_new_eml20__ElectricResistanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricResistanceUom(struct soap*, const enum eml20__ElectricResistanceUom *, const char*, const char*);

inline int soap_write_eml20__ElectricResistanceUom(struct soap *soap, enum eml20__ElectricResistanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistanceUom(soap, p, "eml20:ElectricResistanceUom", "eml20:ElectricResistanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricResistanceUom(struct soap *soap, const char *URL, enum eml20__ElectricResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistanceUom(soap, p, "eml20:ElectricResistanceUom", "eml20:ElectricResistanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricResistanceUom(struct soap *soap, const char *URL, enum eml20__ElectricResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistanceUom(soap, p, "eml20:ElectricResistanceUom", "eml20:ElectricResistanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricResistanceUom(struct soap *soap, const char *URL, enum eml20__ElectricResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricResistanceUom(soap, p, "eml20:ElectricResistanceUom", "eml20:ElectricResistanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricResistanceUom * SOAP_FMAC4 soap_get_eml20__ElectricResistanceUom(struct soap*, enum eml20__ElectricResistanceUom *, const char*, const char*);

inline int soap_read_eml20__ElectricResistanceUom(struct soap *soap, enum eml20__ElectricResistanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricResistanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricResistanceUom(struct soap *soap, const char *URL, enum eml20__ElectricResistanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricResistanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricResistanceUom(struct soap *soap, enum eml20__ElectricResistanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricResistanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom_DEFINED

inline void soap_default_eml20__IsothermalCompressibilityUom(struct soap *soap, enum eml20__IsothermalCompressibilityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__IsothermalCompressibilityUom
	*a = SOAP_DEFAULT_eml20__IsothermalCompressibilityUom;
#else
	*a = (enum eml20__IsothermalCompressibilityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__IsothermalCompressibilityUom(struct soap*, const char*, int, const enum eml20__IsothermalCompressibilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__IsothermalCompressibilityUom2s(struct soap*, enum eml20__IsothermalCompressibilityUom);
SOAP_FMAC3 enum eml20__IsothermalCompressibilityUom * SOAP_FMAC4 soap_in_eml20__IsothermalCompressibilityUom(struct soap*, const char*, enum eml20__IsothermalCompressibilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__IsothermalCompressibilityUom(struct soap*, const char*, enum eml20__IsothermalCompressibilityUom *);

SOAP_FMAC3 enum eml20__IsothermalCompressibilityUom * SOAP_FMAC4 soap_new_eml20__IsothermalCompressibilityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__IsothermalCompressibilityUom(struct soap*, const enum eml20__IsothermalCompressibilityUom *, const char*, const char*);

inline int soap_write_eml20__IsothermalCompressibilityUom(struct soap *soap, enum eml20__IsothermalCompressibilityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__IsothermalCompressibilityUom(soap, p, "eml20:IsothermalCompressibilityUom", "eml20:IsothermalCompressibilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__IsothermalCompressibilityUom(struct soap *soap, const char *URL, enum eml20__IsothermalCompressibilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IsothermalCompressibilityUom(soap, p, "eml20:IsothermalCompressibilityUom", "eml20:IsothermalCompressibilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__IsothermalCompressibilityUom(struct soap *soap, const char *URL, enum eml20__IsothermalCompressibilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IsothermalCompressibilityUom(soap, p, "eml20:IsothermalCompressibilityUom", "eml20:IsothermalCompressibilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__IsothermalCompressibilityUom(struct soap *soap, const char *URL, enum eml20__IsothermalCompressibilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IsothermalCompressibilityUom(soap, p, "eml20:IsothermalCompressibilityUom", "eml20:IsothermalCompressibilityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__IsothermalCompressibilityUom * SOAP_FMAC4 soap_get_eml20__IsothermalCompressibilityUom(struct soap*, enum eml20__IsothermalCompressibilityUom *, const char*, const char*);

inline int soap_read_eml20__IsothermalCompressibilityUom(struct soap *soap, enum eml20__IsothermalCompressibilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__IsothermalCompressibilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__IsothermalCompressibilityUom(struct soap *soap, const char *URL, enum eml20__IsothermalCompressibilityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__IsothermalCompressibilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__IsothermalCompressibilityUom(struct soap *soap, enum eml20__IsothermalCompressibilityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__IsothermalCompressibilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom_DEFINED

inline void soap_default_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml20__AttenuationPerFrequencyIntervalUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AttenuationPerFrequencyIntervalUom
	*a = SOAP_DEFAULT_eml20__AttenuationPerFrequencyIntervalUom;
#else
	*a = (enum eml20__AttenuationPerFrequencyIntervalUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, int, const enum eml20__AttenuationPerFrequencyIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AttenuationPerFrequencyIntervalUom2s(struct soap*, enum eml20__AttenuationPerFrequencyIntervalUom);
SOAP_FMAC3 enum eml20__AttenuationPerFrequencyIntervalUom * SOAP_FMAC4 soap_in_eml20__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, enum eml20__AttenuationPerFrequencyIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, enum eml20__AttenuationPerFrequencyIntervalUom *);

SOAP_FMAC3 enum eml20__AttenuationPerFrequencyIntervalUom * SOAP_FMAC4 soap_new_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AttenuationPerFrequencyIntervalUom(struct soap*, const enum eml20__AttenuationPerFrequencyIntervalUom *, const char*, const char*);

inline int soap_write_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml20__AttenuationPerFrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AttenuationPerFrequencyIntervalUom(soap, p, "eml20:AttenuationPerFrequencyIntervalUom", "eml20:AttenuationPerFrequencyIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__AttenuationPerFrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AttenuationPerFrequencyIntervalUom(soap, p, "eml20:AttenuationPerFrequencyIntervalUom", "eml20:AttenuationPerFrequencyIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__AttenuationPerFrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AttenuationPerFrequencyIntervalUom(soap, p, "eml20:AttenuationPerFrequencyIntervalUom", "eml20:AttenuationPerFrequencyIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__AttenuationPerFrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AttenuationPerFrequencyIntervalUom(soap, p, "eml20:AttenuationPerFrequencyIntervalUom", "eml20:AttenuationPerFrequencyIntervalUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AttenuationPerFrequencyIntervalUom * SOAP_FMAC4 soap_get_eml20__AttenuationPerFrequencyIntervalUom(struct soap*, enum eml20__AttenuationPerFrequencyIntervalUom *, const char*, const char*);

inline int soap_read_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml20__AttenuationPerFrequencyIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AttenuationPerFrequencyIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__AttenuationPerFrequencyIntervalUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AttenuationPerFrequencyIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml20__AttenuationPerFrequencyIntervalUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AttenuationPerFrequencyIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom_DEFINED

inline void soap_default_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml20__TemperatureIntervalPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TemperatureIntervalPerLengthUom
	*a = SOAP_DEFAULT_eml20__TemperatureIntervalPerLengthUom;
#else
	*a = (enum eml20__TemperatureIntervalPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerLengthUom(struct soap*, const char*, int, const enum eml20__TemperatureIntervalPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TemperatureIntervalPerLengthUom2s(struct soap*, enum eml20__TemperatureIntervalPerLengthUom);
SOAP_FMAC3 enum eml20__TemperatureIntervalPerLengthUom * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerLengthUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TemperatureIntervalPerLengthUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerLengthUom *);

SOAP_FMAC3 enum eml20__TemperatureIntervalPerLengthUom * SOAP_FMAC4 soap_new_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TemperatureIntervalPerLengthUom(struct soap*, const enum eml20__TemperatureIntervalPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml20__TemperatureIntervalPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerLengthUom(soap, p, "eml20:TemperatureIntervalPerLengthUom", "eml20:TemperatureIntervalPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerLengthUom(soap, p, "eml20:TemperatureIntervalPerLengthUom", "eml20:TemperatureIntervalPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerLengthUom(soap, p, "eml20:TemperatureIntervalPerLengthUom", "eml20:TemperatureIntervalPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerLengthUom(soap, p, "eml20:TemperatureIntervalPerLengthUom", "eml20:TemperatureIntervalPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TemperatureIntervalPerLengthUom * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerLengthUom(struct soap*, enum eml20__TemperatureIntervalPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml20__TemperatureIntervalPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml20__TemperatureIntervalPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom_DEFINED

inline void soap_default_eml20__VolumePerMassUom(struct soap *soap, enum eml20__VolumePerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerMassUom
	*a = SOAP_DEFAULT_eml20__VolumePerMassUom;
#else
	*a = (enum eml20__VolumePerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerMassUom(struct soap*, const char*, int, const enum eml20__VolumePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerMassUom2s(struct soap*, enum eml20__VolumePerMassUom);
SOAP_FMAC3 enum eml20__VolumePerMassUom * SOAP_FMAC4 soap_in_eml20__VolumePerMassUom(struct soap*, const char*, enum eml20__VolumePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerMassUom(struct soap*, const char*, enum eml20__VolumePerMassUom *);

SOAP_FMAC3 enum eml20__VolumePerMassUom * SOAP_FMAC4 soap_new_eml20__VolumePerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerMassUom(struct soap*, const enum eml20__VolumePerMassUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerMassUom(struct soap *soap, enum eml20__VolumePerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerMassUom(soap, p, "eml20:VolumePerMassUom", "eml20:VolumePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerMassUom(struct soap *soap, const char *URL, enum eml20__VolumePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerMassUom(soap, p, "eml20:VolumePerMassUom", "eml20:VolumePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerMassUom(struct soap *soap, const char *URL, enum eml20__VolumePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerMassUom(soap, p, "eml20:VolumePerMassUom", "eml20:VolumePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerMassUom(struct soap *soap, const char *URL, enum eml20__VolumePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerMassUom(soap, p, "eml20:VolumePerMassUom", "eml20:VolumePerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerMassUom * SOAP_FMAC4 soap_get_eml20__VolumePerMassUom(struct soap*, enum eml20__VolumePerMassUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerMassUom(struct soap *soap, enum eml20__VolumePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerMassUom(struct soap *soap, const char *URL, enum eml20__VolumePerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerMassUom(struct soap *soap, enum eml20__VolumePerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom_DEFINED

inline void soap_default_eml20__EnergyPerMassPerTimeUom(struct soap *soap, enum eml20__EnergyPerMassPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyPerMassPerTimeUom
	*a = SOAP_DEFAULT_eml20__EnergyPerMassPerTimeUom;
#else
	*a = (enum eml20__EnergyPerMassPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerMassPerTimeUom(struct soap*, const char*, int, const enum eml20__EnergyPerMassPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyPerMassPerTimeUom2s(struct soap*, enum eml20__EnergyPerMassPerTimeUom);
SOAP_FMAC3 enum eml20__EnergyPerMassPerTimeUom * SOAP_FMAC4 soap_in_eml20__EnergyPerMassPerTimeUom(struct soap*, const char*, enum eml20__EnergyPerMassPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyPerMassPerTimeUom(struct soap*, const char*, enum eml20__EnergyPerMassPerTimeUom *);

SOAP_FMAC3 enum eml20__EnergyPerMassPerTimeUom * SOAP_FMAC4 soap_new_eml20__EnergyPerMassPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyPerMassPerTimeUom(struct soap*, const enum eml20__EnergyPerMassPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__EnergyPerMassPerTimeUom(struct soap *soap, enum eml20__EnergyPerMassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassPerTimeUom(soap, p, "eml20:EnergyPerMassPerTimeUom", "eml20:EnergyPerMassPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerMassPerTimeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassPerTimeUom(soap, p, "eml20:EnergyPerMassPerTimeUom", "eml20:EnergyPerMassPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerMassPerTimeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassPerTimeUom(soap, p, "eml20:EnergyPerMassPerTimeUom", "eml20:EnergyPerMassPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerMassPerTimeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassPerTimeUom(soap, p, "eml20:EnergyPerMassPerTimeUom", "eml20:EnergyPerMassPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyPerMassPerTimeUom * SOAP_FMAC4 soap_get_eml20__EnergyPerMassPerTimeUom(struct soap*, enum eml20__EnergyPerMassPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__EnergyPerMassPerTimeUom(struct soap *soap, enum eml20__EnergyPerMassPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerMassPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerMassPerTimeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerMassPerTimeUom(struct soap *soap, enum eml20__EnergyPerMassPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom_DEFINED

inline void soap_default_eml20__TimePerTimeUom(struct soap *soap, enum eml20__TimePerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TimePerTimeUom
	*a = SOAP_DEFAULT_eml20__TimePerTimeUom;
#else
	*a = (enum eml20__TimePerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerTimeUom(struct soap*, const char*, int, const enum eml20__TimePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TimePerTimeUom2s(struct soap*, enum eml20__TimePerTimeUom);
SOAP_FMAC3 enum eml20__TimePerTimeUom * SOAP_FMAC4 soap_in_eml20__TimePerTimeUom(struct soap*, const char*, enum eml20__TimePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TimePerTimeUom(struct soap*, const char*, enum eml20__TimePerTimeUom *);

SOAP_FMAC3 enum eml20__TimePerTimeUom * SOAP_FMAC4 soap_new_eml20__TimePerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TimePerTimeUom(struct soap*, const enum eml20__TimePerTimeUom *, const char*, const char*);

inline int soap_write_eml20__TimePerTimeUom(struct soap *soap, enum eml20__TimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TimePerTimeUom(soap, p, "eml20:TimePerTimeUom", "eml20:TimePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerTimeUom(struct soap *soap, const char *URL, enum eml20__TimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerTimeUom(soap, p, "eml20:TimePerTimeUom", "eml20:TimePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerTimeUom(struct soap *soap, const char *URL, enum eml20__TimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerTimeUom(soap, p, "eml20:TimePerTimeUom", "eml20:TimePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerTimeUom(struct soap *soap, const char *URL, enum eml20__TimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerTimeUom(soap, p, "eml20:TimePerTimeUom", "eml20:TimePerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TimePerTimeUom * SOAP_FMAC4 soap_get_eml20__TimePerTimeUom(struct soap*, enum eml20__TimePerTimeUom *, const char*, const char*);

inline int soap_read_eml20__TimePerTimeUom(struct soap *soap, enum eml20__TimePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerTimeUom(struct soap *soap, const char *URL, enum eml20__TimePerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerTimeUom(struct soap *soap, enum eml20__TimePerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom_DEFINED

inline void soap_default_eml20__DiffusionCoefficientUom(struct soap *soap, enum eml20__DiffusionCoefficientUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DiffusionCoefficientUom
	*a = SOAP_DEFAULT_eml20__DiffusionCoefficientUom;
#else
	*a = (enum eml20__DiffusionCoefficientUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DiffusionCoefficientUom(struct soap*, const char*, int, const enum eml20__DiffusionCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DiffusionCoefficientUom2s(struct soap*, enum eml20__DiffusionCoefficientUom);
SOAP_FMAC3 enum eml20__DiffusionCoefficientUom * SOAP_FMAC4 soap_in_eml20__DiffusionCoefficientUom(struct soap*, const char*, enum eml20__DiffusionCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DiffusionCoefficientUom(struct soap*, const char*, enum eml20__DiffusionCoefficientUom *);

SOAP_FMAC3 enum eml20__DiffusionCoefficientUom * SOAP_FMAC4 soap_new_eml20__DiffusionCoefficientUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DiffusionCoefficientUom(struct soap*, const enum eml20__DiffusionCoefficientUom *, const char*, const char*);

inline int soap_write_eml20__DiffusionCoefficientUom(struct soap *soap, enum eml20__DiffusionCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DiffusionCoefficientUom(soap, p, "eml20:DiffusionCoefficientUom", "eml20:DiffusionCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DiffusionCoefficientUom(struct soap *soap, const char *URL, enum eml20__DiffusionCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DiffusionCoefficientUom(soap, p, "eml20:DiffusionCoefficientUom", "eml20:DiffusionCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DiffusionCoefficientUom(struct soap *soap, const char *URL, enum eml20__DiffusionCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DiffusionCoefficientUom(soap, p, "eml20:DiffusionCoefficientUom", "eml20:DiffusionCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DiffusionCoefficientUom(struct soap *soap, const char *URL, enum eml20__DiffusionCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DiffusionCoefficientUom(soap, p, "eml20:DiffusionCoefficientUom", "eml20:DiffusionCoefficientUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DiffusionCoefficientUom * SOAP_FMAC4 soap_get_eml20__DiffusionCoefficientUom(struct soap*, enum eml20__DiffusionCoefficientUom *, const char*, const char*);

inline int soap_read_eml20__DiffusionCoefficientUom(struct soap *soap, enum eml20__DiffusionCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DiffusionCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DiffusionCoefficientUom(struct soap *soap, const char *URL, enum eml20__DiffusionCoefficientUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DiffusionCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DiffusionCoefficientUom(struct soap *soap, enum eml20__DiffusionCoefficientUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DiffusionCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom_DEFINED

inline void soap_default_eml20__AnglePerVolumeUom(struct soap *soap, enum eml20__AnglePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AnglePerVolumeUom
	*a = SOAP_DEFAULT_eml20__AnglePerVolumeUom;
#else
	*a = (enum eml20__AnglePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AnglePerVolumeUom(struct soap*, const char*, int, const enum eml20__AnglePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AnglePerVolumeUom2s(struct soap*, enum eml20__AnglePerVolumeUom);
SOAP_FMAC3 enum eml20__AnglePerVolumeUom * SOAP_FMAC4 soap_in_eml20__AnglePerVolumeUom(struct soap*, const char*, enum eml20__AnglePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AnglePerVolumeUom(struct soap*, const char*, enum eml20__AnglePerVolumeUom *);

SOAP_FMAC3 enum eml20__AnglePerVolumeUom * SOAP_FMAC4 soap_new_eml20__AnglePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AnglePerVolumeUom(struct soap*, const enum eml20__AnglePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__AnglePerVolumeUom(struct soap *soap, enum eml20__AnglePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AnglePerVolumeUom(soap, p, "eml20:AnglePerVolumeUom", "eml20:AnglePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AnglePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AnglePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerVolumeUom(soap, p, "eml20:AnglePerVolumeUom", "eml20:AnglePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AnglePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AnglePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerVolumeUom(soap, p, "eml20:AnglePerVolumeUom", "eml20:AnglePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AnglePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AnglePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerVolumeUom(soap, p, "eml20:AnglePerVolumeUom", "eml20:AnglePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AnglePerVolumeUom * SOAP_FMAC4 soap_get_eml20__AnglePerVolumeUom(struct soap*, enum eml20__AnglePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__AnglePerVolumeUom(struct soap *soap, enum eml20__AnglePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AnglePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AnglePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AnglePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AnglePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AnglePerVolumeUom(struct soap *soap, enum eml20__AnglePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AnglePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom_DEFINED

inline void soap_default_eml20__VolumePerVolumeUom(struct soap *soap, enum eml20__VolumePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerVolumeUom
	*a = SOAP_DEFAULT_eml20__VolumePerVolumeUom;
#else
	*a = (enum eml20__VolumePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerVolumeUom(struct soap*, const char*, int, const enum eml20__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerVolumeUom2s(struct soap*, enum eml20__VolumePerVolumeUom);
SOAP_FMAC3 enum eml20__VolumePerVolumeUom * SOAP_FMAC4 soap_in_eml20__VolumePerVolumeUom(struct soap*, const char*, enum eml20__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerVolumeUom(struct soap*, const char*, enum eml20__VolumePerVolumeUom *);

SOAP_FMAC3 enum eml20__VolumePerVolumeUom * SOAP_FMAC4 soap_new_eml20__VolumePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerVolumeUom(struct soap*, const enum eml20__VolumePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerVolumeUom(struct soap *soap, enum eml20__VolumePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerVolumeUom(soap, p, "eml20:VolumePerVolumeUom", "eml20:VolumePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerVolumeUom(soap, p, "eml20:VolumePerVolumeUom", "eml20:VolumePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerVolumeUom(soap, p, "eml20:VolumePerVolumeUom", "eml20:VolumePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerVolumeUom(soap, p, "eml20:VolumePerVolumeUom", "eml20:VolumePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerVolumeUom * SOAP_FMAC4 soap_get_eml20__VolumePerVolumeUom(struct soap*, enum eml20__VolumePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerVolumeUom(struct soap *soap, enum eml20__VolumePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerVolumeUom(struct soap *soap, enum eml20__VolumePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom_DEFINED

inline void soap_default_eml20__PressureTimePerVolumeUom(struct soap *soap, enum eml20__PressureTimePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressureTimePerVolumeUom
	*a = SOAP_DEFAULT_eml20__PressureTimePerVolumeUom;
#else
	*a = (enum eml20__PressureTimePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureTimePerVolumeUom(struct soap*, const char*, int, const enum eml20__PressureTimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressureTimePerVolumeUom2s(struct soap*, enum eml20__PressureTimePerVolumeUom);
SOAP_FMAC3 enum eml20__PressureTimePerVolumeUom * SOAP_FMAC4 soap_in_eml20__PressureTimePerVolumeUom(struct soap*, const char*, enum eml20__PressureTimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressureTimePerVolumeUom(struct soap*, const char*, enum eml20__PressureTimePerVolumeUom *);

SOAP_FMAC3 enum eml20__PressureTimePerVolumeUom * SOAP_FMAC4 soap_new_eml20__PressureTimePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressureTimePerVolumeUom(struct soap*, const enum eml20__PressureTimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__PressureTimePerVolumeUom(struct soap *soap, enum eml20__PressureTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressureTimePerVolumeUom(soap, p, "eml20:PressureTimePerVolumeUom", "eml20:PressureTimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressureTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureTimePerVolumeUom(soap, p, "eml20:PressureTimePerVolumeUom", "eml20:PressureTimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressureTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureTimePerVolumeUom(soap, p, "eml20:PressureTimePerVolumeUom", "eml20:PressureTimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressureTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureTimePerVolumeUom(soap, p, "eml20:PressureTimePerVolumeUom", "eml20:PressureTimePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressureTimePerVolumeUom * SOAP_FMAC4 soap_get_eml20__PressureTimePerVolumeUom(struct soap*, enum eml20__PressureTimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__PressureTimePerVolumeUom(struct soap *soap, enum eml20__PressureTimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureTimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressureTimePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureTimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureTimePerVolumeUom(struct soap *soap, enum eml20__PressureTimePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureTimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom_DEFINED

inline void soap_default_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyLengthPerTimeAreaTemperatureUom
	*a = SOAP_DEFAULT_eml20__EnergyLengthPerTimeAreaTemperatureUom;
#else
	*a = (enum eml20__EnergyLengthPerTimeAreaTemperatureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, int, const enum eml20__EnergyLengthPerTimeAreaTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyLengthPerTimeAreaTemperatureUom2s(struct soap*, enum eml20__EnergyLengthPerTimeAreaTemperatureUom);
SOAP_FMAC3 enum eml20__EnergyLengthPerTimeAreaTemperatureUom * SOAP_FMAC4 soap_in_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *);

SOAP_FMAC3 enum eml20__EnergyLengthPerTimeAreaTemperatureUom * SOAP_FMAC4 soap_new_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const enum eml20__EnergyLengthPerTimeAreaTemperatureUom *, const char*, const char*);

inline int soap_write_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml20__EnergyLengthPerTimeAreaTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p, "eml20:EnergyLengthPerTimeAreaTemperatureUom", "eml20:EnergyLengthPerTimeAreaTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerTimeAreaTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p, "eml20:EnergyLengthPerTimeAreaTemperatureUom", "eml20:EnergyLengthPerTimeAreaTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerTimeAreaTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p, "eml20:EnergyLengthPerTimeAreaTemperatureUom", "eml20:EnergyLengthPerTimeAreaTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerTimeAreaTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p, "eml20:EnergyLengthPerTimeAreaTemperatureUom", "eml20:EnergyLengthPerTimeAreaTemperatureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyLengthPerTimeAreaTemperatureUom * SOAP_FMAC4 soap_get_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *, const char*, const char*);

inline int soap_read_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, const char *URL, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml20__EnergyLengthPerTimeAreaTemperatureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerTimeAreaTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom_DEFINED

inline void soap_default_eml20__NormalizedPowerUom(struct soap *soap, enum eml20__NormalizedPowerUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__NormalizedPowerUom
	*a = SOAP_DEFAULT_eml20__NormalizedPowerUom;
#else
	*a = (enum eml20__NormalizedPowerUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__NormalizedPowerUom(struct soap*, const char*, int, const enum eml20__NormalizedPowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__NormalizedPowerUom2s(struct soap*, enum eml20__NormalizedPowerUom);
SOAP_FMAC3 enum eml20__NormalizedPowerUom * SOAP_FMAC4 soap_in_eml20__NormalizedPowerUom(struct soap*, const char*, enum eml20__NormalizedPowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__NormalizedPowerUom(struct soap*, const char*, enum eml20__NormalizedPowerUom *);

SOAP_FMAC3 enum eml20__NormalizedPowerUom * SOAP_FMAC4 soap_new_eml20__NormalizedPowerUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__NormalizedPowerUom(struct soap*, const enum eml20__NormalizedPowerUom *, const char*, const char*);

inline int soap_write_eml20__NormalizedPowerUom(struct soap *soap, enum eml20__NormalizedPowerUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__NormalizedPowerUom(soap, p, "eml20:NormalizedPowerUom", "eml20:NormalizedPowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__NormalizedPowerUom(struct soap *soap, const char *URL, enum eml20__NormalizedPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NormalizedPowerUom(soap, p, "eml20:NormalizedPowerUom", "eml20:NormalizedPowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__NormalizedPowerUom(struct soap *soap, const char *URL, enum eml20__NormalizedPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NormalizedPowerUom(soap, p, "eml20:NormalizedPowerUom", "eml20:NormalizedPowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__NormalizedPowerUom(struct soap *soap, const char *URL, enum eml20__NormalizedPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NormalizedPowerUom(soap, p, "eml20:NormalizedPowerUom", "eml20:NormalizedPowerUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__NormalizedPowerUom * SOAP_FMAC4 soap_get_eml20__NormalizedPowerUom(struct soap*, enum eml20__NormalizedPowerUom *, const char*, const char*);

inline int soap_read_eml20__NormalizedPowerUom(struct soap *soap, enum eml20__NormalizedPowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__NormalizedPowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__NormalizedPowerUom(struct soap *soap, const char *URL, enum eml20__NormalizedPowerUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__NormalizedPowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__NormalizedPowerUom(struct soap *soap, enum eml20__NormalizedPowerUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__NormalizedPowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom_DEFINED

inline void soap_default_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml20__VolumetricHeatTransferCoefficientUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumetricHeatTransferCoefficientUom
	*a = SOAP_DEFAULT_eml20__VolumetricHeatTransferCoefficientUom;
#else
	*a = (enum eml20__VolumetricHeatTransferCoefficientUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, int, const enum eml20__VolumetricHeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumetricHeatTransferCoefficientUom2s(struct soap*, enum eml20__VolumetricHeatTransferCoefficientUom);
SOAP_FMAC3 enum eml20__VolumetricHeatTransferCoefficientUom * SOAP_FMAC4 soap_in_eml20__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, enum eml20__VolumetricHeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, enum eml20__VolumetricHeatTransferCoefficientUom *);

SOAP_FMAC3 enum eml20__VolumetricHeatTransferCoefficientUom * SOAP_FMAC4 soap_new_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumetricHeatTransferCoefficientUom(struct soap*, const enum eml20__VolumetricHeatTransferCoefficientUom *, const char*, const char*);

inline int soap_write_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml20__VolumetricHeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumetricHeatTransferCoefficientUom(soap, p, "eml20:VolumetricHeatTransferCoefficientUom", "eml20:VolumetricHeatTransferCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__VolumetricHeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricHeatTransferCoefficientUom(soap, p, "eml20:VolumetricHeatTransferCoefficientUom", "eml20:VolumetricHeatTransferCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__VolumetricHeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricHeatTransferCoefficientUom(soap, p, "eml20:VolumetricHeatTransferCoefficientUom", "eml20:VolumetricHeatTransferCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__VolumetricHeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricHeatTransferCoefficientUom(soap, p, "eml20:VolumetricHeatTransferCoefficientUom", "eml20:VolumetricHeatTransferCoefficientUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumetricHeatTransferCoefficientUom * SOAP_FMAC4 soap_get_eml20__VolumetricHeatTransferCoefficientUom(struct soap*, enum eml20__VolumetricHeatTransferCoefficientUom *, const char*, const char*);

inline int soap_read_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml20__VolumetricHeatTransferCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumetricHeatTransferCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__VolumetricHeatTransferCoefficientUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumetricHeatTransferCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml20__VolumetricHeatTransferCoefficientUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumetricHeatTransferCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom_DEFINED

inline void soap_default_eml20__TimePerMassUom(struct soap *soap, enum eml20__TimePerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TimePerMassUom
	*a = SOAP_DEFAULT_eml20__TimePerMassUom;
#else
	*a = (enum eml20__TimePerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerMassUom(struct soap*, const char*, int, const enum eml20__TimePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TimePerMassUom2s(struct soap*, enum eml20__TimePerMassUom);
SOAP_FMAC3 enum eml20__TimePerMassUom * SOAP_FMAC4 soap_in_eml20__TimePerMassUom(struct soap*, const char*, enum eml20__TimePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TimePerMassUom(struct soap*, const char*, enum eml20__TimePerMassUom *);

SOAP_FMAC3 enum eml20__TimePerMassUom * SOAP_FMAC4 soap_new_eml20__TimePerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TimePerMassUom(struct soap*, const enum eml20__TimePerMassUom *, const char*, const char*);

inline int soap_write_eml20__TimePerMassUom(struct soap *soap, enum eml20__TimePerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TimePerMassUom(soap, p, "eml20:TimePerMassUom", "eml20:TimePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerMassUom(struct soap *soap, const char *URL, enum eml20__TimePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerMassUom(soap, p, "eml20:TimePerMassUom", "eml20:TimePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerMassUom(struct soap *soap, const char *URL, enum eml20__TimePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerMassUom(soap, p, "eml20:TimePerMassUom", "eml20:TimePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerMassUom(struct soap *soap, const char *URL, enum eml20__TimePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerMassUom(soap, p, "eml20:TimePerMassUom", "eml20:TimePerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TimePerMassUom * SOAP_FMAC4 soap_get_eml20__TimePerMassUom(struct soap*, enum eml20__TimePerMassUom *, const char*, const char*);

inline int soap_read_eml20__TimePerMassUom(struct soap *soap, enum eml20__TimePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerMassUom(struct soap *soap, const char *URL, enum eml20__TimePerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerMassUom(struct soap *soap, enum eml20__TimePerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom_DEFINED

inline void soap_default_eml20__AbsorbedDoseUom(struct soap *soap, enum eml20__AbsorbedDoseUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AbsorbedDoseUom
	*a = SOAP_DEFAULT_eml20__AbsorbedDoseUom;
#else
	*a = (enum eml20__AbsorbedDoseUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbsorbedDoseUom(struct soap*, const char*, int, const enum eml20__AbsorbedDoseUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AbsorbedDoseUom2s(struct soap*, enum eml20__AbsorbedDoseUom);
SOAP_FMAC3 enum eml20__AbsorbedDoseUom * SOAP_FMAC4 soap_in_eml20__AbsorbedDoseUom(struct soap*, const char*, enum eml20__AbsorbedDoseUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AbsorbedDoseUom(struct soap*, const char*, enum eml20__AbsorbedDoseUom *);

SOAP_FMAC3 enum eml20__AbsorbedDoseUom * SOAP_FMAC4 soap_new_eml20__AbsorbedDoseUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AbsorbedDoseUom(struct soap*, const enum eml20__AbsorbedDoseUom *, const char*, const char*);

inline int soap_write_eml20__AbsorbedDoseUom(struct soap *soap, enum eml20__AbsorbedDoseUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AbsorbedDoseUom(soap, p, "eml20:AbsorbedDoseUom", "eml20:AbsorbedDoseUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbsorbedDoseUom(struct soap *soap, const char *URL, enum eml20__AbsorbedDoseUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AbsorbedDoseUom(soap, p, "eml20:AbsorbedDoseUom", "eml20:AbsorbedDoseUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbsorbedDoseUom(struct soap *soap, const char *URL, enum eml20__AbsorbedDoseUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AbsorbedDoseUom(soap, p, "eml20:AbsorbedDoseUom", "eml20:AbsorbedDoseUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbsorbedDoseUom(struct soap *soap, const char *URL, enum eml20__AbsorbedDoseUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AbsorbedDoseUom(soap, p, "eml20:AbsorbedDoseUom", "eml20:AbsorbedDoseUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AbsorbedDoseUom * SOAP_FMAC4 soap_get_eml20__AbsorbedDoseUom(struct soap*, enum eml20__AbsorbedDoseUom *, const char*, const char*);

inline int soap_read_eml20__AbsorbedDoseUom(struct soap *soap, enum eml20__AbsorbedDoseUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbsorbedDoseUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbsorbedDoseUom(struct soap *soap, const char *URL, enum eml20__AbsorbedDoseUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbsorbedDoseUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbsorbedDoseUom(struct soap *soap, enum eml20__AbsorbedDoseUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbsorbedDoseUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom_DEFINED

inline void soap_default_eml20__LuminousIntensityUom(struct soap *soap, enum eml20__LuminousIntensityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LuminousIntensityUom
	*a = SOAP_DEFAULT_eml20__LuminousIntensityUom;
#else
	*a = (enum eml20__LuminousIntensityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousIntensityUom(struct soap*, const char*, int, const enum eml20__LuminousIntensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LuminousIntensityUom2s(struct soap*, enum eml20__LuminousIntensityUom);
SOAP_FMAC3 enum eml20__LuminousIntensityUom * SOAP_FMAC4 soap_in_eml20__LuminousIntensityUom(struct soap*, const char*, enum eml20__LuminousIntensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LuminousIntensityUom(struct soap*, const char*, enum eml20__LuminousIntensityUom *);

SOAP_FMAC3 enum eml20__LuminousIntensityUom * SOAP_FMAC4 soap_new_eml20__LuminousIntensityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LuminousIntensityUom(struct soap*, const enum eml20__LuminousIntensityUom *, const char*, const char*);

inline int soap_write_eml20__LuminousIntensityUom(struct soap *soap, enum eml20__LuminousIntensityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LuminousIntensityUom(soap, p, "eml20:LuminousIntensityUom", "eml20:LuminousIntensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousIntensityUom(struct soap *soap, const char *URL, enum eml20__LuminousIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousIntensityUom(soap, p, "eml20:LuminousIntensityUom", "eml20:LuminousIntensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousIntensityUom(struct soap *soap, const char *URL, enum eml20__LuminousIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousIntensityUom(soap, p, "eml20:LuminousIntensityUom", "eml20:LuminousIntensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousIntensityUom(struct soap *soap, const char *URL, enum eml20__LuminousIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousIntensityUom(soap, p, "eml20:LuminousIntensityUom", "eml20:LuminousIntensityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LuminousIntensityUom * SOAP_FMAC4 soap_get_eml20__LuminousIntensityUom(struct soap*, enum eml20__LuminousIntensityUom *, const char*, const char*);

inline int soap_read_eml20__LuminousIntensityUom(struct soap *soap, enum eml20__LuminousIntensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousIntensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousIntensityUom(struct soap *soap, const char *URL, enum eml20__LuminousIntensityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousIntensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousIntensityUom(struct soap *soap, enum eml20__LuminousIntensityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousIntensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom_DEFINED

inline void soap_default_eml20__FrequencyUom(struct soap *soap, enum eml20__FrequencyUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__FrequencyUom
	*a = SOAP_DEFAULT_eml20__FrequencyUom;
#else
	*a = (enum eml20__FrequencyUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__FrequencyUom(struct soap*, const char*, int, const enum eml20__FrequencyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__FrequencyUom2s(struct soap*, enum eml20__FrequencyUom);
SOAP_FMAC3 enum eml20__FrequencyUom * SOAP_FMAC4 soap_in_eml20__FrequencyUom(struct soap*, const char*, enum eml20__FrequencyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__FrequencyUom(struct soap*, const char*, enum eml20__FrequencyUom *);

SOAP_FMAC3 enum eml20__FrequencyUom * SOAP_FMAC4 soap_new_eml20__FrequencyUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__FrequencyUom(struct soap*, const enum eml20__FrequencyUom *, const char*, const char*);

inline int soap_write_eml20__FrequencyUom(struct soap *soap, enum eml20__FrequencyUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__FrequencyUom(soap, p, "eml20:FrequencyUom", "eml20:FrequencyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__FrequencyUom(struct soap *soap, const char *URL, enum eml20__FrequencyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyUom(soap, p, "eml20:FrequencyUom", "eml20:FrequencyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__FrequencyUom(struct soap *soap, const char *URL, enum eml20__FrequencyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyUom(soap, p, "eml20:FrequencyUom", "eml20:FrequencyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__FrequencyUom(struct soap *soap, const char *URL, enum eml20__FrequencyUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyUom(soap, p, "eml20:FrequencyUom", "eml20:FrequencyUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__FrequencyUom * SOAP_FMAC4 soap_get_eml20__FrequencyUom(struct soap*, enum eml20__FrequencyUom *, const char*, const char*);

inline int soap_read_eml20__FrequencyUom(struct soap *soap, enum eml20__FrequencyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__FrequencyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__FrequencyUom(struct soap *soap, const char *URL, enum eml20__FrequencyUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__FrequencyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__FrequencyUom(struct soap *soap, enum eml20__FrequencyUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__FrequencyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom_DEFINED

inline void soap_default_eml20__PowerPerVolumeUom(struct soap *soap, enum eml20__PowerPerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PowerPerVolumeUom
	*a = SOAP_DEFAULT_eml20__PowerPerVolumeUom;
#else
	*a = (enum eml20__PowerPerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerVolumeUom(struct soap*, const char*, int, const enum eml20__PowerPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PowerPerVolumeUom2s(struct soap*, enum eml20__PowerPerVolumeUom);
SOAP_FMAC3 enum eml20__PowerPerVolumeUom * SOAP_FMAC4 soap_in_eml20__PowerPerVolumeUom(struct soap*, const char*, enum eml20__PowerPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PowerPerVolumeUom(struct soap*, const char*, enum eml20__PowerPerVolumeUom *);

SOAP_FMAC3 enum eml20__PowerPerVolumeUom * SOAP_FMAC4 soap_new_eml20__PowerPerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PowerPerVolumeUom(struct soap*, const enum eml20__PowerPerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__PowerPerVolumeUom(struct soap *soap, enum eml20__PowerPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PowerPerVolumeUom(soap, p, "eml20:PowerPerVolumeUom", "eml20:PowerPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerVolumeUom(struct soap *soap, const char *URL, enum eml20__PowerPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerVolumeUom(soap, p, "eml20:PowerPerVolumeUom", "eml20:PowerPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerVolumeUom(struct soap *soap, const char *URL, enum eml20__PowerPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerVolumeUom(soap, p, "eml20:PowerPerVolumeUom", "eml20:PowerPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerVolumeUom(struct soap *soap, const char *URL, enum eml20__PowerPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerVolumeUom(soap, p, "eml20:PowerPerVolumeUom", "eml20:PowerPerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PowerPerVolumeUom * SOAP_FMAC4 soap_get_eml20__PowerPerVolumeUom(struct soap*, enum eml20__PowerPerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__PowerPerVolumeUom(struct soap *soap, enum eml20__PowerPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerVolumeUom(struct soap *soap, const char *URL, enum eml20__PowerPerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerVolumeUom(struct soap *soap, enum eml20__PowerPerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom_DEFINED

inline void soap_default_eml20__MassPerTimePerAreaUom(struct soap *soap, enum eml20__MassPerTimePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerTimePerAreaUom
	*a = SOAP_DEFAULT_eml20__MassPerTimePerAreaUom;
#else
	*a = (enum eml20__MassPerTimePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimePerAreaUom(struct soap*, const char*, int, const enum eml20__MassPerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerTimePerAreaUom2s(struct soap*, enum eml20__MassPerTimePerAreaUom);
SOAP_FMAC3 enum eml20__MassPerTimePerAreaUom * SOAP_FMAC4 soap_in_eml20__MassPerTimePerAreaUom(struct soap*, const char*, enum eml20__MassPerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerTimePerAreaUom(struct soap*, const char*, enum eml20__MassPerTimePerAreaUom *);

SOAP_FMAC3 enum eml20__MassPerTimePerAreaUom * SOAP_FMAC4 soap_new_eml20__MassPerTimePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerTimePerAreaUom(struct soap*, const enum eml20__MassPerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__MassPerTimePerAreaUom(struct soap *soap, enum eml20__MassPerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerAreaUom(soap, p, "eml20:MassPerTimePerAreaUom", "eml20:MassPerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerAreaUom(soap, p, "eml20:MassPerTimePerAreaUom", "eml20:MassPerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerAreaUom(soap, p, "eml20:MassPerTimePerAreaUom", "eml20:MassPerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerAreaUom(soap, p, "eml20:MassPerTimePerAreaUom", "eml20:MassPerTimePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerTimePerAreaUom * SOAP_FMAC4 soap_get_eml20__MassPerTimePerAreaUom(struct soap*, enum eml20__MassPerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__MassPerTimePerAreaUom(struct soap *soap, enum eml20__MassPerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimePerAreaUom(struct soap *soap, enum eml20__MassPerTimePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom_DEFINED

inline void soap_default_eml20__MomentumUom(struct soap *soap, enum eml20__MomentumUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MomentumUom
	*a = SOAP_DEFAULT_eml20__MomentumUom;
#else
	*a = (enum eml20__MomentumUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentumUom(struct soap*, const char*, int, const enum eml20__MomentumUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MomentumUom2s(struct soap*, enum eml20__MomentumUom);
SOAP_FMAC3 enum eml20__MomentumUom * SOAP_FMAC4 soap_in_eml20__MomentumUom(struct soap*, const char*, enum eml20__MomentumUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MomentumUom(struct soap*, const char*, enum eml20__MomentumUom *);

SOAP_FMAC3 enum eml20__MomentumUom * SOAP_FMAC4 soap_new_eml20__MomentumUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MomentumUom(struct soap*, const enum eml20__MomentumUom *, const char*, const char*);

inline int soap_write_eml20__MomentumUom(struct soap *soap, enum eml20__MomentumUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MomentumUom(soap, p, "eml20:MomentumUom", "eml20:MomentumUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentumUom(struct soap *soap, const char *URL, enum eml20__MomentumUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentumUom(soap, p, "eml20:MomentumUom", "eml20:MomentumUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentumUom(struct soap *soap, const char *URL, enum eml20__MomentumUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentumUom(soap, p, "eml20:MomentumUom", "eml20:MomentumUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentumUom(struct soap *soap, const char *URL, enum eml20__MomentumUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentumUom(soap, p, "eml20:MomentumUom", "eml20:MomentumUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MomentumUom * SOAP_FMAC4 soap_get_eml20__MomentumUom(struct soap*, enum eml20__MomentumUom *, const char*, const char*);

inline int soap_read_eml20__MomentumUom(struct soap *soap, enum eml20__MomentumUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentumUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentumUom(struct soap *soap, const char *URL, enum eml20__MomentumUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentumUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentumUom(struct soap *soap, enum eml20__MomentumUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentumUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom_DEFINED

inline void soap_default_eml20__ElectricConductanceUom(struct soap *soap, enum eml20__ElectricConductanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricConductanceUom
	*a = SOAP_DEFAULT_eml20__ElectricConductanceUom;
#else
	*a = (enum eml20__ElectricConductanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricConductanceUom(struct soap*, const char*, int, const enum eml20__ElectricConductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricConductanceUom2s(struct soap*, enum eml20__ElectricConductanceUom);
SOAP_FMAC3 enum eml20__ElectricConductanceUom * SOAP_FMAC4 soap_in_eml20__ElectricConductanceUom(struct soap*, const char*, enum eml20__ElectricConductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricConductanceUom(struct soap*, const char*, enum eml20__ElectricConductanceUom *);

SOAP_FMAC3 enum eml20__ElectricConductanceUom * SOAP_FMAC4 soap_new_eml20__ElectricConductanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricConductanceUom(struct soap*, const enum eml20__ElectricConductanceUom *, const char*, const char*);

inline int soap_write_eml20__ElectricConductanceUom(struct soap *soap, enum eml20__ElectricConductanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductanceUom(soap, p, "eml20:ElectricConductanceUom", "eml20:ElectricConductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricConductanceUom(struct soap *soap, const char *URL, enum eml20__ElectricConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductanceUom(soap, p, "eml20:ElectricConductanceUom", "eml20:ElectricConductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricConductanceUom(struct soap *soap, const char *URL, enum eml20__ElectricConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductanceUom(soap, p, "eml20:ElectricConductanceUom", "eml20:ElectricConductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricConductanceUom(struct soap *soap, const char *URL, enum eml20__ElectricConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductanceUom(soap, p, "eml20:ElectricConductanceUom", "eml20:ElectricConductanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricConductanceUom * SOAP_FMAC4 soap_get_eml20__ElectricConductanceUom(struct soap*, enum eml20__ElectricConductanceUom *, const char*, const char*);

inline int soap_read_eml20__ElectricConductanceUom(struct soap *soap, enum eml20__ElectricConductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricConductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricConductanceUom(struct soap *soap, const char *URL, enum eml20__ElectricConductanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricConductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricConductanceUom(struct soap *soap, enum eml20__ElectricConductanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricConductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom_DEFINED

inline void soap_default_eml20__MolarEnergyUom(struct soap *soap, enum eml20__MolarEnergyUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MolarEnergyUom
	*a = SOAP_DEFAULT_eml20__MolarEnergyUom;
#else
	*a = (enum eml20__MolarEnergyUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarEnergyUom(struct soap*, const char*, int, const enum eml20__MolarEnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MolarEnergyUom2s(struct soap*, enum eml20__MolarEnergyUom);
SOAP_FMAC3 enum eml20__MolarEnergyUom * SOAP_FMAC4 soap_in_eml20__MolarEnergyUom(struct soap*, const char*, enum eml20__MolarEnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MolarEnergyUom(struct soap*, const char*, enum eml20__MolarEnergyUom *);

SOAP_FMAC3 enum eml20__MolarEnergyUom * SOAP_FMAC4 soap_new_eml20__MolarEnergyUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MolarEnergyUom(struct soap*, const enum eml20__MolarEnergyUom *, const char*, const char*);

inline int soap_write_eml20__MolarEnergyUom(struct soap *soap, enum eml20__MolarEnergyUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MolarEnergyUom(soap, p, "eml20:MolarEnergyUom", "eml20:MolarEnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarEnergyUom(struct soap *soap, const char *URL, enum eml20__MolarEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarEnergyUom(soap, p, "eml20:MolarEnergyUom", "eml20:MolarEnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarEnergyUom(struct soap *soap, const char *URL, enum eml20__MolarEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarEnergyUom(soap, p, "eml20:MolarEnergyUom", "eml20:MolarEnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarEnergyUom(struct soap *soap, const char *URL, enum eml20__MolarEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarEnergyUom(soap, p, "eml20:MolarEnergyUom", "eml20:MolarEnergyUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MolarEnergyUom * SOAP_FMAC4 soap_get_eml20__MolarEnergyUom(struct soap*, enum eml20__MolarEnergyUom *, const char*, const char*);

inline int soap_read_eml20__MolarEnergyUom(struct soap *soap, enum eml20__MolarEnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarEnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarEnergyUom(struct soap *soap, const char *URL, enum eml20__MolarEnergyUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarEnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarEnergyUom(struct soap *soap, enum eml20__MolarEnergyUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarEnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom_DEFINED

inline void soap_default_eml20__HeatCapacityUom(struct soap *soap, enum eml20__HeatCapacityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__HeatCapacityUom
	*a = SOAP_DEFAULT_eml20__HeatCapacityUom;
#else
	*a = (enum eml20__HeatCapacityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatCapacityUom(struct soap*, const char*, int, const enum eml20__HeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__HeatCapacityUom2s(struct soap*, enum eml20__HeatCapacityUom);
SOAP_FMAC3 enum eml20__HeatCapacityUom * SOAP_FMAC4 soap_in_eml20__HeatCapacityUom(struct soap*, const char*, enum eml20__HeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__HeatCapacityUom(struct soap*, const char*, enum eml20__HeatCapacityUom *);

SOAP_FMAC3 enum eml20__HeatCapacityUom * SOAP_FMAC4 soap_new_eml20__HeatCapacityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__HeatCapacityUom(struct soap*, const enum eml20__HeatCapacityUom *, const char*, const char*);

inline int soap_write_eml20__HeatCapacityUom(struct soap *soap, enum eml20__HeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__HeatCapacityUom(soap, p, "eml20:HeatCapacityUom", "eml20:HeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatCapacityUom(struct soap *soap, const char *URL, enum eml20__HeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatCapacityUom(soap, p, "eml20:HeatCapacityUom", "eml20:HeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatCapacityUom(struct soap *soap, const char *URL, enum eml20__HeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatCapacityUom(soap, p, "eml20:HeatCapacityUom", "eml20:HeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatCapacityUom(struct soap *soap, const char *URL, enum eml20__HeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatCapacityUom(soap, p, "eml20:HeatCapacityUom", "eml20:HeatCapacityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__HeatCapacityUom * SOAP_FMAC4 soap_get_eml20__HeatCapacityUom(struct soap*, enum eml20__HeatCapacityUom *, const char*, const char*);

inline int soap_read_eml20__HeatCapacityUom(struct soap *soap, enum eml20__HeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatCapacityUom(struct soap *soap, const char *URL, enum eml20__HeatCapacityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatCapacityUom(struct soap *soap, enum eml20__HeatCapacityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom_DEFINED

inline void soap_default_eml20__AreaPerTimeUom(struct soap *soap, enum eml20__AreaPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaPerTimeUom
	*a = SOAP_DEFAULT_eml20__AreaPerTimeUom;
#else
	*a = (enum eml20__AreaPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerTimeUom(struct soap*, const char*, int, const enum eml20__AreaPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaPerTimeUom2s(struct soap*, enum eml20__AreaPerTimeUom);
SOAP_FMAC3 enum eml20__AreaPerTimeUom * SOAP_FMAC4 soap_in_eml20__AreaPerTimeUom(struct soap*, const char*, enum eml20__AreaPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaPerTimeUom(struct soap*, const char*, enum eml20__AreaPerTimeUom *);

SOAP_FMAC3 enum eml20__AreaPerTimeUom * SOAP_FMAC4 soap_new_eml20__AreaPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaPerTimeUom(struct soap*, const enum eml20__AreaPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__AreaPerTimeUom(struct soap *soap, enum eml20__AreaPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaPerTimeUom(soap, p, "eml20:AreaPerTimeUom", "eml20:AreaPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerTimeUom(struct soap *soap, const char *URL, enum eml20__AreaPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerTimeUom(soap, p, "eml20:AreaPerTimeUom", "eml20:AreaPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerTimeUom(struct soap *soap, const char *URL, enum eml20__AreaPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerTimeUom(soap, p, "eml20:AreaPerTimeUom", "eml20:AreaPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerTimeUom(struct soap *soap, const char *URL, enum eml20__AreaPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerTimeUom(soap, p, "eml20:AreaPerTimeUom", "eml20:AreaPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaPerTimeUom * SOAP_FMAC4 soap_get_eml20__AreaPerTimeUom(struct soap*, enum eml20__AreaPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__AreaPerTimeUom(struct soap *soap, enum eml20__AreaPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerTimeUom(struct soap *soap, const char *URL, enum eml20__AreaPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerTimeUom(struct soap *soap, enum eml20__AreaPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom_DEFINED

inline void soap_default_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml20__PotentialDifferencePerPowerDropUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PotentialDifferencePerPowerDropUom
	*a = SOAP_DEFAULT_eml20__PotentialDifferencePerPowerDropUom;
#else
	*a = (enum eml20__PotentialDifferencePerPowerDropUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PotentialDifferencePerPowerDropUom(struct soap*, const char*, int, const enum eml20__PotentialDifferencePerPowerDropUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PotentialDifferencePerPowerDropUom2s(struct soap*, enum eml20__PotentialDifferencePerPowerDropUom);
SOAP_FMAC3 enum eml20__PotentialDifferencePerPowerDropUom * SOAP_FMAC4 soap_in_eml20__PotentialDifferencePerPowerDropUom(struct soap*, const char*, enum eml20__PotentialDifferencePerPowerDropUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PotentialDifferencePerPowerDropUom(struct soap*, const char*, enum eml20__PotentialDifferencePerPowerDropUom *);

SOAP_FMAC3 enum eml20__PotentialDifferencePerPowerDropUom * SOAP_FMAC4 soap_new_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PotentialDifferencePerPowerDropUom(struct soap*, const enum eml20__PotentialDifferencePerPowerDropUom *, const char*, const char*);

inline int soap_write_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml20__PotentialDifferencePerPowerDropUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PotentialDifferencePerPowerDropUom(soap, p, "eml20:PotentialDifferencePerPowerDropUom", "eml20:PotentialDifferencePerPowerDropUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, const char *URL, enum eml20__PotentialDifferencePerPowerDropUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PotentialDifferencePerPowerDropUom(soap, p, "eml20:PotentialDifferencePerPowerDropUom", "eml20:PotentialDifferencePerPowerDropUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, const char *URL, enum eml20__PotentialDifferencePerPowerDropUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PotentialDifferencePerPowerDropUom(soap, p, "eml20:PotentialDifferencePerPowerDropUom", "eml20:PotentialDifferencePerPowerDropUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, const char *URL, enum eml20__PotentialDifferencePerPowerDropUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PotentialDifferencePerPowerDropUom(soap, p, "eml20:PotentialDifferencePerPowerDropUom", "eml20:PotentialDifferencePerPowerDropUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PotentialDifferencePerPowerDropUom * SOAP_FMAC4 soap_get_eml20__PotentialDifferencePerPowerDropUom(struct soap*, enum eml20__PotentialDifferencePerPowerDropUom *, const char*, const char*);

inline int soap_read_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml20__PotentialDifferencePerPowerDropUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PotentialDifferencePerPowerDropUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, const char *URL, enum eml20__PotentialDifferencePerPowerDropUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PotentialDifferencePerPowerDropUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml20__PotentialDifferencePerPowerDropUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PotentialDifferencePerPowerDropUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom_DEFINED

inline void soap_default_eml20__DynamicViscosityUom(struct soap *soap, enum eml20__DynamicViscosityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DynamicViscosityUom
	*a = SOAP_DEFAULT_eml20__DynamicViscosityUom;
#else
	*a = (enum eml20__DynamicViscosityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DynamicViscosityUom(struct soap*, const char*, int, const enum eml20__DynamicViscosityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DynamicViscosityUom2s(struct soap*, enum eml20__DynamicViscosityUom);
SOAP_FMAC3 enum eml20__DynamicViscosityUom * SOAP_FMAC4 soap_in_eml20__DynamicViscosityUom(struct soap*, const char*, enum eml20__DynamicViscosityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DynamicViscosityUom(struct soap*, const char*, enum eml20__DynamicViscosityUom *);

SOAP_FMAC3 enum eml20__DynamicViscosityUom * SOAP_FMAC4 soap_new_eml20__DynamicViscosityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DynamicViscosityUom(struct soap*, const enum eml20__DynamicViscosityUom *, const char*, const char*);

inline int soap_write_eml20__DynamicViscosityUom(struct soap *soap, enum eml20__DynamicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DynamicViscosityUom(soap, p, "eml20:DynamicViscosityUom", "eml20:DynamicViscosityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DynamicViscosityUom(struct soap *soap, const char *URL, enum eml20__DynamicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DynamicViscosityUom(soap, p, "eml20:DynamicViscosityUom", "eml20:DynamicViscosityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DynamicViscosityUom(struct soap *soap, const char *URL, enum eml20__DynamicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DynamicViscosityUom(soap, p, "eml20:DynamicViscosityUom", "eml20:DynamicViscosityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DynamicViscosityUom(struct soap *soap, const char *URL, enum eml20__DynamicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DynamicViscosityUom(soap, p, "eml20:DynamicViscosityUom", "eml20:DynamicViscosityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DynamicViscosityUom * SOAP_FMAC4 soap_get_eml20__DynamicViscosityUom(struct soap*, enum eml20__DynamicViscosityUom *, const char*, const char*);

inline int soap_read_eml20__DynamicViscosityUom(struct soap *soap, enum eml20__DynamicViscosityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DynamicViscosityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DynamicViscosityUom(struct soap *soap, const char *URL, enum eml20__DynamicViscosityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DynamicViscosityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DynamicViscosityUom(struct soap *soap, enum eml20__DynamicViscosityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DynamicViscosityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom_DEFINED

inline void soap_default_eml20__ReciprocalMassUom(struct soap *soap, enum eml20__ReciprocalMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalMassUom
	*a = SOAP_DEFAULT_eml20__ReciprocalMassUom;
#else
	*a = (enum eml20__ReciprocalMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalMassUom(struct soap*, const char*, int, const enum eml20__ReciprocalMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalMassUom2s(struct soap*, enum eml20__ReciprocalMassUom);
SOAP_FMAC3 enum eml20__ReciprocalMassUom * SOAP_FMAC4 soap_in_eml20__ReciprocalMassUom(struct soap*, const char*, enum eml20__ReciprocalMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalMassUom(struct soap*, const char*, enum eml20__ReciprocalMassUom *);

SOAP_FMAC3 enum eml20__ReciprocalMassUom * SOAP_FMAC4 soap_new_eml20__ReciprocalMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalMassUom(struct soap*, const enum eml20__ReciprocalMassUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalMassUom(struct soap *soap, enum eml20__ReciprocalMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassUom(soap, p, "eml20:ReciprocalMassUom", "eml20:ReciprocalMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalMassUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassUom(soap, p, "eml20:ReciprocalMassUom", "eml20:ReciprocalMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalMassUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassUom(soap, p, "eml20:ReciprocalMassUom", "eml20:ReciprocalMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalMassUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassUom(soap, p, "eml20:ReciprocalMassUom", "eml20:ReciprocalMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalMassUom * SOAP_FMAC4 soap_get_eml20__ReciprocalMassUom(struct soap*, enum eml20__ReciprocalMassUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalMassUom(struct soap *soap, enum eml20__ReciprocalMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalMassUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalMassUom(struct soap *soap, enum eml20__ReciprocalMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom_DEFINED

inline void soap_default_eml20__MagneticPermeabilityUom(struct soap *soap, enum eml20__MagneticPermeabilityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticPermeabilityUom
	*a = SOAP_DEFAULT_eml20__MagneticPermeabilityUom;
#else
	*a = (enum eml20__MagneticPermeabilityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticPermeabilityUom(struct soap*, const char*, int, const enum eml20__MagneticPermeabilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticPermeabilityUom2s(struct soap*, enum eml20__MagneticPermeabilityUom);
SOAP_FMAC3 enum eml20__MagneticPermeabilityUom * SOAP_FMAC4 soap_in_eml20__MagneticPermeabilityUom(struct soap*, const char*, enum eml20__MagneticPermeabilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticPermeabilityUom(struct soap*, const char*, enum eml20__MagneticPermeabilityUom *);

SOAP_FMAC3 enum eml20__MagneticPermeabilityUom * SOAP_FMAC4 soap_new_eml20__MagneticPermeabilityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticPermeabilityUom(struct soap*, const enum eml20__MagneticPermeabilityUom *, const char*, const char*);

inline int soap_write_eml20__MagneticPermeabilityUom(struct soap *soap, enum eml20__MagneticPermeabilityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticPermeabilityUom(soap, p, "eml20:MagneticPermeabilityUom", "eml20:MagneticPermeabilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticPermeabilityUom(struct soap *soap, const char *URL, enum eml20__MagneticPermeabilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticPermeabilityUom(soap, p, "eml20:MagneticPermeabilityUom", "eml20:MagneticPermeabilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticPermeabilityUom(struct soap *soap, const char *URL, enum eml20__MagneticPermeabilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticPermeabilityUom(soap, p, "eml20:MagneticPermeabilityUom", "eml20:MagneticPermeabilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticPermeabilityUom(struct soap *soap, const char *URL, enum eml20__MagneticPermeabilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticPermeabilityUom(soap, p, "eml20:MagneticPermeabilityUom", "eml20:MagneticPermeabilityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticPermeabilityUom * SOAP_FMAC4 soap_get_eml20__MagneticPermeabilityUom(struct soap*, enum eml20__MagneticPermeabilityUom *, const char*, const char*);

inline int soap_read_eml20__MagneticPermeabilityUom(struct soap *soap, enum eml20__MagneticPermeabilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticPermeabilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticPermeabilityUom(struct soap *soap, const char *URL, enum eml20__MagneticPermeabilityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticPermeabilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticPermeabilityUom(struct soap *soap, enum eml20__MagneticPermeabilityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticPermeabilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom_DEFINED

inline void soap_default_eml20__EnergyPerVolumeUom(struct soap *soap, enum eml20__EnergyPerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyPerVolumeUom
	*a = SOAP_DEFAULT_eml20__EnergyPerVolumeUom;
#else
	*a = (enum eml20__EnergyPerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerVolumeUom(struct soap*, const char*, int, const enum eml20__EnergyPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyPerVolumeUom2s(struct soap*, enum eml20__EnergyPerVolumeUom);
SOAP_FMAC3 enum eml20__EnergyPerVolumeUom * SOAP_FMAC4 soap_in_eml20__EnergyPerVolumeUom(struct soap*, const char*, enum eml20__EnergyPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyPerVolumeUom(struct soap*, const char*, enum eml20__EnergyPerVolumeUom *);

SOAP_FMAC3 enum eml20__EnergyPerVolumeUom * SOAP_FMAC4 soap_new_eml20__EnergyPerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyPerVolumeUom(struct soap*, const enum eml20__EnergyPerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__EnergyPerVolumeUom(struct soap *soap, enum eml20__EnergyPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerVolumeUom(soap, p, "eml20:EnergyPerVolumeUom", "eml20:EnergyPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerVolumeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerVolumeUom(soap, p, "eml20:EnergyPerVolumeUom", "eml20:EnergyPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerVolumeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerVolumeUom(soap, p, "eml20:EnergyPerVolumeUom", "eml20:EnergyPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerVolumeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerVolumeUom(soap, p, "eml20:EnergyPerVolumeUom", "eml20:EnergyPerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyPerVolumeUom * SOAP_FMAC4 soap_get_eml20__EnergyPerVolumeUom(struct soap*, enum eml20__EnergyPerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__EnergyPerVolumeUom(struct soap *soap, enum eml20__EnergyPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerVolumeUom(struct soap *soap, const char *URL, enum eml20__EnergyPerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerVolumeUom(struct soap *soap, enum eml20__EnergyPerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom_DEFINED

inline void soap_default_eml20__VolumePerLengthUom(struct soap *soap, enum eml20__VolumePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerLengthUom
	*a = SOAP_DEFAULT_eml20__VolumePerLengthUom;
#else
	*a = (enum eml20__VolumePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerLengthUom(struct soap*, const char*, int, const enum eml20__VolumePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerLengthUom2s(struct soap*, enum eml20__VolumePerLengthUom);
SOAP_FMAC3 enum eml20__VolumePerLengthUom * SOAP_FMAC4 soap_in_eml20__VolumePerLengthUom(struct soap*, const char*, enum eml20__VolumePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerLengthUom(struct soap*, const char*, enum eml20__VolumePerLengthUom *);

SOAP_FMAC3 enum eml20__VolumePerLengthUom * SOAP_FMAC4 soap_new_eml20__VolumePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerLengthUom(struct soap*, const enum eml20__VolumePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerLengthUom(struct soap *soap, enum eml20__VolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerLengthUom(soap, p, "eml20:VolumePerLengthUom", "eml20:VolumePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerLengthUom(soap, p, "eml20:VolumePerLengthUom", "eml20:VolumePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerLengthUom(soap, p, "eml20:VolumePerLengthUom", "eml20:VolumePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerLengthUom(soap, p, "eml20:VolumePerLengthUom", "eml20:VolumePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerLengthUom * SOAP_FMAC4 soap_get_eml20__VolumePerLengthUom(struct soap*, enum eml20__VolumePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerLengthUom(struct soap *soap, enum eml20__VolumePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerLengthUom(struct soap *soap, enum eml20__VolumePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom_DEFINED

inline void soap_default_eml20__VerticalCoordinateUom(struct soap *soap, enum eml20__VerticalCoordinateUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VerticalCoordinateUom
	*a = SOAP_DEFAULT_eml20__VerticalCoordinateUom;
#else
	*a = (enum eml20__VerticalCoordinateUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VerticalCoordinateUom(struct soap*, const char*, int, const enum eml20__VerticalCoordinateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VerticalCoordinateUom2s(struct soap*, enum eml20__VerticalCoordinateUom);
SOAP_FMAC3 enum eml20__VerticalCoordinateUom * SOAP_FMAC4 soap_in_eml20__VerticalCoordinateUom(struct soap*, const char*, enum eml20__VerticalCoordinateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VerticalCoordinateUom(struct soap*, const char*, enum eml20__VerticalCoordinateUom *);

SOAP_FMAC3 enum eml20__VerticalCoordinateUom * SOAP_FMAC4 soap_new_eml20__VerticalCoordinateUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VerticalCoordinateUom(struct soap*, const enum eml20__VerticalCoordinateUom *, const char*, const char*);

inline int soap_write_eml20__VerticalCoordinateUom(struct soap *soap, enum eml20__VerticalCoordinateUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VerticalCoordinateUom(soap, p, "eml20:VerticalCoordinateUom", "eml20:VerticalCoordinateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VerticalCoordinateUom(struct soap *soap, const char *URL, enum eml20__VerticalCoordinateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalCoordinateUom(soap, p, "eml20:VerticalCoordinateUom", "eml20:VerticalCoordinateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VerticalCoordinateUom(struct soap *soap, const char *URL, enum eml20__VerticalCoordinateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalCoordinateUom(soap, p, "eml20:VerticalCoordinateUom", "eml20:VerticalCoordinateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VerticalCoordinateUom(struct soap *soap, const char *URL, enum eml20__VerticalCoordinateUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalCoordinateUom(soap, p, "eml20:VerticalCoordinateUom", "eml20:VerticalCoordinateUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VerticalCoordinateUom * SOAP_FMAC4 soap_get_eml20__VerticalCoordinateUom(struct soap*, enum eml20__VerticalCoordinateUom *, const char*, const char*);

inline int soap_read_eml20__VerticalCoordinateUom(struct soap *soap, enum eml20__VerticalCoordinateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VerticalCoordinateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VerticalCoordinateUom(struct soap *soap, const char *URL, enum eml20__VerticalCoordinateUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VerticalCoordinateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VerticalCoordinateUom(struct soap *soap, enum eml20__VerticalCoordinateUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VerticalCoordinateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom_DEFINED

inline void soap_default_eml20__AnglePerLengthUom(struct soap *soap, enum eml20__AnglePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AnglePerLengthUom
	*a = SOAP_DEFAULT_eml20__AnglePerLengthUom;
#else
	*a = (enum eml20__AnglePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AnglePerLengthUom(struct soap*, const char*, int, const enum eml20__AnglePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AnglePerLengthUom2s(struct soap*, enum eml20__AnglePerLengthUom);
SOAP_FMAC3 enum eml20__AnglePerLengthUom * SOAP_FMAC4 soap_in_eml20__AnglePerLengthUom(struct soap*, const char*, enum eml20__AnglePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AnglePerLengthUom(struct soap*, const char*, enum eml20__AnglePerLengthUom *);

SOAP_FMAC3 enum eml20__AnglePerLengthUom * SOAP_FMAC4 soap_new_eml20__AnglePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AnglePerLengthUom(struct soap*, const enum eml20__AnglePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__AnglePerLengthUom(struct soap *soap, enum eml20__AnglePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AnglePerLengthUom(soap, p, "eml20:AnglePerLengthUom", "eml20:AnglePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AnglePerLengthUom(struct soap *soap, const char *URL, enum eml20__AnglePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerLengthUom(soap, p, "eml20:AnglePerLengthUom", "eml20:AnglePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AnglePerLengthUom(struct soap *soap, const char *URL, enum eml20__AnglePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerLengthUom(soap, p, "eml20:AnglePerLengthUom", "eml20:AnglePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AnglePerLengthUom(struct soap *soap, const char *URL, enum eml20__AnglePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AnglePerLengthUom(soap, p, "eml20:AnglePerLengthUom", "eml20:AnglePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AnglePerLengthUom * SOAP_FMAC4 soap_get_eml20__AnglePerLengthUom(struct soap*, enum eml20__AnglePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__AnglePerLengthUom(struct soap *soap, enum eml20__AnglePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AnglePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AnglePerLengthUom(struct soap *soap, const char *URL, enum eml20__AnglePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AnglePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AnglePerLengthUom(struct soap *soap, enum eml20__AnglePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AnglePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom_DEFINED

inline void soap_default_eml20__EnergyUom(struct soap *soap, enum eml20__EnergyUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyUom
	*a = SOAP_DEFAULT_eml20__EnergyUom;
#else
	*a = (enum eml20__EnergyUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyUom(struct soap*, const char*, int, const enum eml20__EnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyUom2s(struct soap*, enum eml20__EnergyUom);
SOAP_FMAC3 enum eml20__EnergyUom * SOAP_FMAC4 soap_in_eml20__EnergyUom(struct soap*, const char*, enum eml20__EnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyUom(struct soap*, const char*, enum eml20__EnergyUom *);

SOAP_FMAC3 enum eml20__EnergyUom * SOAP_FMAC4 soap_new_eml20__EnergyUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyUom(struct soap*, const enum eml20__EnergyUom *, const char*, const char*);

inline int soap_write_eml20__EnergyUom(struct soap *soap, enum eml20__EnergyUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyUom(soap, p, "eml20:EnergyUom", "eml20:EnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyUom(struct soap *soap, const char *URL, enum eml20__EnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyUom(soap, p, "eml20:EnergyUom", "eml20:EnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyUom(struct soap *soap, const char *URL, enum eml20__EnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyUom(soap, p, "eml20:EnergyUom", "eml20:EnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyUom(struct soap *soap, const char *URL, enum eml20__EnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyUom(soap, p, "eml20:EnergyUom", "eml20:EnergyUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyUom * SOAP_FMAC4 soap_get_eml20__EnergyUom(struct soap*, enum eml20__EnergyUom *, const char*, const char*);

inline int soap_read_eml20__EnergyUom(struct soap *soap, enum eml20__EnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyUom(struct soap *soap, const char *URL, enum eml20__EnergyUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyUom(struct soap *soap, enum eml20__EnergyUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom_DEFINED

inline void soap_default_eml20__DimensionlessUom(struct soap *soap, enum eml20__DimensionlessUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DimensionlessUom
	*a = SOAP_DEFAULT_eml20__DimensionlessUom;
#else
	*a = (enum eml20__DimensionlessUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DimensionlessUom(struct soap*, const char*, int, const enum eml20__DimensionlessUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DimensionlessUom2s(struct soap*, enum eml20__DimensionlessUom);
SOAP_FMAC3 enum eml20__DimensionlessUom * SOAP_FMAC4 soap_in_eml20__DimensionlessUom(struct soap*, const char*, enum eml20__DimensionlessUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DimensionlessUom(struct soap*, const char*, enum eml20__DimensionlessUom *);

SOAP_FMAC3 enum eml20__DimensionlessUom * SOAP_FMAC4 soap_new_eml20__DimensionlessUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DimensionlessUom(struct soap*, const enum eml20__DimensionlessUom *, const char*, const char*);

inline int soap_write_eml20__DimensionlessUom(struct soap *soap, enum eml20__DimensionlessUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DimensionlessUom(soap, p, "eml20:DimensionlessUom", "eml20:DimensionlessUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DimensionlessUom(struct soap *soap, const char *URL, enum eml20__DimensionlessUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DimensionlessUom(soap, p, "eml20:DimensionlessUom", "eml20:DimensionlessUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DimensionlessUom(struct soap *soap, const char *URL, enum eml20__DimensionlessUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DimensionlessUom(soap, p, "eml20:DimensionlessUom", "eml20:DimensionlessUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DimensionlessUom(struct soap *soap, const char *URL, enum eml20__DimensionlessUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DimensionlessUom(soap, p, "eml20:DimensionlessUom", "eml20:DimensionlessUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DimensionlessUom * SOAP_FMAC4 soap_get_eml20__DimensionlessUom(struct soap*, enum eml20__DimensionlessUom *, const char*, const char*);

inline int soap_read_eml20__DimensionlessUom(struct soap *soap, enum eml20__DimensionlessUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DimensionlessUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DimensionlessUom(struct soap *soap, const char *URL, enum eml20__DimensionlessUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DimensionlessUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DimensionlessUom(struct soap *soap, enum eml20__DimensionlessUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DimensionlessUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom_DEFINED

inline void soap_default_eml20__LinearAccelerationUom(struct soap *soap, enum eml20__LinearAccelerationUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LinearAccelerationUom
	*a = SOAP_DEFAULT_eml20__LinearAccelerationUom;
#else
	*a = (enum eml20__LinearAccelerationUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LinearAccelerationUom(struct soap*, const char*, int, const enum eml20__LinearAccelerationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LinearAccelerationUom2s(struct soap*, enum eml20__LinearAccelerationUom);
SOAP_FMAC3 enum eml20__LinearAccelerationUom * SOAP_FMAC4 soap_in_eml20__LinearAccelerationUom(struct soap*, const char*, enum eml20__LinearAccelerationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LinearAccelerationUom(struct soap*, const char*, enum eml20__LinearAccelerationUom *);

SOAP_FMAC3 enum eml20__LinearAccelerationUom * SOAP_FMAC4 soap_new_eml20__LinearAccelerationUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LinearAccelerationUom(struct soap*, const enum eml20__LinearAccelerationUom *, const char*, const char*);

inline int soap_write_eml20__LinearAccelerationUom(struct soap *soap, enum eml20__LinearAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LinearAccelerationUom(soap, p, "eml20:LinearAccelerationUom", "eml20:LinearAccelerationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LinearAccelerationUom(struct soap *soap, const char *URL, enum eml20__LinearAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearAccelerationUom(soap, p, "eml20:LinearAccelerationUom", "eml20:LinearAccelerationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LinearAccelerationUom(struct soap *soap, const char *URL, enum eml20__LinearAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearAccelerationUom(soap, p, "eml20:LinearAccelerationUom", "eml20:LinearAccelerationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LinearAccelerationUom(struct soap *soap, const char *URL, enum eml20__LinearAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearAccelerationUom(soap, p, "eml20:LinearAccelerationUom", "eml20:LinearAccelerationUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LinearAccelerationUom * SOAP_FMAC4 soap_get_eml20__LinearAccelerationUom(struct soap*, enum eml20__LinearAccelerationUom *, const char*, const char*);

inline int soap_read_eml20__LinearAccelerationUom(struct soap *soap, enum eml20__LinearAccelerationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LinearAccelerationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LinearAccelerationUom(struct soap *soap, const char *URL, enum eml20__LinearAccelerationUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LinearAccelerationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LinearAccelerationUom(struct soap *soap, enum eml20__LinearAccelerationUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LinearAccelerationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerLengthUom(struct soap *soap, enum eml20__VolumePerTimePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerLengthUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerLengthUom;
#else
	*a = (enum eml20__VolumePerTimePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerLengthUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerLengthUom2s(struct soap*, enum eml20__VolumePerTimePerLengthUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerLengthUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerLengthUom(struct soap*, const char*, enum eml20__VolumePerTimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerLengthUom(struct soap*, const char*, enum eml20__VolumePerTimePerLengthUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerLengthUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerLengthUom(struct soap*, const enum eml20__VolumePerTimePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerLengthUom(struct soap *soap, enum eml20__VolumePerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerLengthUom(soap, p, "eml20:VolumePerTimePerLengthUom", "eml20:VolumePerTimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerLengthUom(soap, p, "eml20:VolumePerTimePerLengthUom", "eml20:VolumePerTimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerLengthUom(soap, p, "eml20:VolumePerTimePerLengthUom", "eml20:VolumePerTimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerLengthUom(soap, p, "eml20:VolumePerTimePerLengthUom", "eml20:VolumePerTimePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerLengthUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerLengthUom(struct soap*, enum eml20__VolumePerTimePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerLengthUom(struct soap *soap, enum eml20__VolumePerTimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerLengthUom(struct soap *soap, enum eml20__VolumePerTimePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom_DEFINED

inline void soap_default_eml20__LengthPerTemperatureUom(struct soap *soap, enum eml20__LengthPerTemperatureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerTemperatureUom
	*a = SOAP_DEFAULT_eml20__LengthPerTemperatureUom;
#else
	*a = (enum eml20__LengthPerTemperatureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerTemperatureUom(struct soap*, const char*, int, const enum eml20__LengthPerTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerTemperatureUom2s(struct soap*, enum eml20__LengthPerTemperatureUom);
SOAP_FMAC3 enum eml20__LengthPerTemperatureUom * SOAP_FMAC4 soap_in_eml20__LengthPerTemperatureUom(struct soap*, const char*, enum eml20__LengthPerTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerTemperatureUom(struct soap*, const char*, enum eml20__LengthPerTemperatureUom *);

SOAP_FMAC3 enum eml20__LengthPerTemperatureUom * SOAP_FMAC4 soap_new_eml20__LengthPerTemperatureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerTemperatureUom(struct soap*, const enum eml20__LengthPerTemperatureUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerTemperatureUom(struct soap *soap, enum eml20__LengthPerTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTemperatureUom(soap, p, "eml20:LengthPerTemperatureUom", "eml20:LengthPerTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerTemperatureUom(struct soap *soap, const char *URL, enum eml20__LengthPerTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTemperatureUom(soap, p, "eml20:LengthPerTemperatureUom", "eml20:LengthPerTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerTemperatureUom(struct soap *soap, const char *URL, enum eml20__LengthPerTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTemperatureUom(soap, p, "eml20:LengthPerTemperatureUom", "eml20:LengthPerTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerTemperatureUom(struct soap *soap, const char *URL, enum eml20__LengthPerTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTemperatureUom(soap, p, "eml20:LengthPerTemperatureUom", "eml20:LengthPerTemperatureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerTemperatureUom * SOAP_FMAC4 soap_get_eml20__LengthPerTemperatureUom(struct soap*, enum eml20__LengthPerTemperatureUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerTemperatureUom(struct soap *soap, enum eml20__LengthPerTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerTemperatureUom(struct soap *soap, const char *URL, enum eml20__LengthPerTemperatureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerTemperatureUom(struct soap *soap, enum eml20__LengthPerTemperatureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom_DEFINED

inline void soap_default_eml20__ReluctanceUom(struct soap *soap, enum eml20__ReluctanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReluctanceUom
	*a = SOAP_DEFAULT_eml20__ReluctanceUom;
#else
	*a = (enum eml20__ReluctanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReluctanceUom(struct soap*, const char*, int, const enum eml20__ReluctanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReluctanceUom2s(struct soap*, enum eml20__ReluctanceUom);
SOAP_FMAC3 enum eml20__ReluctanceUom * SOAP_FMAC4 soap_in_eml20__ReluctanceUom(struct soap*, const char*, enum eml20__ReluctanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReluctanceUom(struct soap*, const char*, enum eml20__ReluctanceUom *);

SOAP_FMAC3 enum eml20__ReluctanceUom * SOAP_FMAC4 soap_new_eml20__ReluctanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReluctanceUom(struct soap*, const enum eml20__ReluctanceUom *, const char*, const char*);

inline int soap_write_eml20__ReluctanceUom(struct soap *soap, enum eml20__ReluctanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReluctanceUom(soap, p, "eml20:ReluctanceUom", "eml20:ReluctanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReluctanceUom(struct soap *soap, const char *URL, enum eml20__ReluctanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReluctanceUom(soap, p, "eml20:ReluctanceUom", "eml20:ReluctanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReluctanceUom(struct soap *soap, const char *URL, enum eml20__ReluctanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReluctanceUom(soap, p, "eml20:ReluctanceUom", "eml20:ReluctanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReluctanceUom(struct soap *soap, const char *URL, enum eml20__ReluctanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReluctanceUom(soap, p, "eml20:ReluctanceUom", "eml20:ReluctanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReluctanceUom * SOAP_FMAC4 soap_get_eml20__ReluctanceUom(struct soap*, enum eml20__ReluctanceUom *, const char*, const char*);

inline int soap_read_eml20__ReluctanceUom(struct soap *soap, enum eml20__ReluctanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReluctanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReluctanceUom(struct soap *soap, const char *URL, enum eml20__ReluctanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReluctanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReluctanceUom(struct soap *soap, enum eml20__ReluctanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReluctanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom_DEFINED

inline void soap_default_eml20__APIGravityUom(struct soap *soap, enum eml20__APIGravityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__APIGravityUom
	*a = SOAP_DEFAULT_eml20__APIGravityUom;
#else
	*a = (enum eml20__APIGravityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APIGravityUom(struct soap*, const char*, int, const enum eml20__APIGravityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__APIGravityUom2s(struct soap*, enum eml20__APIGravityUom);
SOAP_FMAC3 enum eml20__APIGravityUom * SOAP_FMAC4 soap_in_eml20__APIGravityUom(struct soap*, const char*, enum eml20__APIGravityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__APIGravityUom(struct soap*, const char*, enum eml20__APIGravityUom *);

SOAP_FMAC3 enum eml20__APIGravityUom * SOAP_FMAC4 soap_new_eml20__APIGravityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__APIGravityUom(struct soap*, const enum eml20__APIGravityUom *, const char*, const char*);

inline int soap_write_eml20__APIGravityUom(struct soap *soap, enum eml20__APIGravityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__APIGravityUom(soap, p, "eml20:APIGravityUom", "eml20:APIGravityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__APIGravityUom(struct soap *soap, const char *URL, enum eml20__APIGravityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGravityUom(soap, p, "eml20:APIGravityUom", "eml20:APIGravityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APIGravityUom(struct soap *soap, const char *URL, enum eml20__APIGravityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGravityUom(soap, p, "eml20:APIGravityUom", "eml20:APIGravityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APIGravityUom(struct soap *soap, const char *URL, enum eml20__APIGravityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGravityUom(soap, p, "eml20:APIGravityUom", "eml20:APIGravityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__APIGravityUom * SOAP_FMAC4 soap_get_eml20__APIGravityUom(struct soap*, enum eml20__APIGravityUom *, const char*, const char*);

inline int soap_read_eml20__APIGravityUom(struct soap *soap, enum eml20__APIGravityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APIGravityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APIGravityUom(struct soap *soap, const char *URL, enum eml20__APIGravityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APIGravityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APIGravityUom(struct soap *soap, enum eml20__APIGravityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APIGravityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom_DEFINED

inline void soap_default_eml20__ElectricChargePerVolumeUom(struct soap *soap, enum eml20__ElectricChargePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricChargePerVolumeUom
	*a = SOAP_DEFAULT_eml20__ElectricChargePerVolumeUom;
#else
	*a = (enum eml20__ElectricChargePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerVolumeUom(struct soap*, const char*, int, const enum eml20__ElectricChargePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricChargePerVolumeUom2s(struct soap*, enum eml20__ElectricChargePerVolumeUom);
SOAP_FMAC3 enum eml20__ElectricChargePerVolumeUom * SOAP_FMAC4 soap_in_eml20__ElectricChargePerVolumeUom(struct soap*, const char*, enum eml20__ElectricChargePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricChargePerVolumeUom(struct soap*, const char*, enum eml20__ElectricChargePerVolumeUom *);

SOAP_FMAC3 enum eml20__ElectricChargePerVolumeUom * SOAP_FMAC4 soap_new_eml20__ElectricChargePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricChargePerVolumeUom(struct soap*, const enum eml20__ElectricChargePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__ElectricChargePerVolumeUom(struct soap *soap, enum eml20__ElectricChargePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerVolumeUom(soap, p, "eml20:ElectricChargePerVolumeUom", "eml20:ElectricChargePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerVolumeUom(soap, p, "eml20:ElectricChargePerVolumeUom", "eml20:ElectricChargePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerVolumeUom(soap, p, "eml20:ElectricChargePerVolumeUom", "eml20:ElectricChargePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerVolumeUom(soap, p, "eml20:ElectricChargePerVolumeUom", "eml20:ElectricChargePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricChargePerVolumeUom * SOAP_FMAC4 soap_get_eml20__ElectricChargePerVolumeUom(struct soap*, enum eml20__ElectricChargePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerVolumeUom(struct soap *soap, enum eml20__ElectricChargePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerVolumeUom(struct soap *soap, enum eml20__ElectricChargePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom_DEFINED

inline void soap_default_eml20__ForcePerVolumeUom(struct soap *soap, enum eml20__ForcePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForcePerVolumeUom
	*a = SOAP_DEFAULT_eml20__ForcePerVolumeUom;
#else
	*a = (enum eml20__ForcePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerVolumeUom(struct soap*, const char*, int, const enum eml20__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForcePerVolumeUom2s(struct soap*, enum eml20__ForcePerVolumeUom);
SOAP_FMAC3 enum eml20__ForcePerVolumeUom * SOAP_FMAC4 soap_in_eml20__ForcePerVolumeUom(struct soap*, const char*, enum eml20__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForcePerVolumeUom(struct soap*, const char*, enum eml20__ForcePerVolumeUom *);

SOAP_FMAC3 enum eml20__ForcePerVolumeUom * SOAP_FMAC4 soap_new_eml20__ForcePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForcePerVolumeUom(struct soap*, const enum eml20__ForcePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__ForcePerVolumeUom(struct soap *soap, enum eml20__ForcePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForcePerVolumeUom(soap, p, "eml20:ForcePerVolumeUom", "eml20:ForcePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ForcePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerVolumeUom(soap, p, "eml20:ForcePerVolumeUom", "eml20:ForcePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ForcePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerVolumeUom(soap, p, "eml20:ForcePerVolumeUom", "eml20:ForcePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ForcePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerVolumeUom(soap, p, "eml20:ForcePerVolumeUom", "eml20:ForcePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForcePerVolumeUom * SOAP_FMAC4 soap_get_eml20__ForcePerVolumeUom(struct soap*, enum eml20__ForcePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__ForcePerVolumeUom(struct soap *soap, enum eml20__ForcePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerVolumeUom(struct soap *soap, const char *URL, enum eml20__ForcePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerVolumeUom(struct soap *soap, enum eml20__ForcePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom_DEFINED

inline void soap_default_eml20__MassLengthUom(struct soap *soap, enum eml20__MassLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassLengthUom
	*a = SOAP_DEFAULT_eml20__MassLengthUom;
#else
	*a = (enum eml20__MassLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassLengthUom(struct soap*, const char*, int, const enum eml20__MassLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassLengthUom2s(struct soap*, enum eml20__MassLengthUom);
SOAP_FMAC3 enum eml20__MassLengthUom * SOAP_FMAC4 soap_in_eml20__MassLengthUom(struct soap*, const char*, enum eml20__MassLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassLengthUom(struct soap*, const char*, enum eml20__MassLengthUom *);

SOAP_FMAC3 enum eml20__MassLengthUom * SOAP_FMAC4 soap_new_eml20__MassLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassLengthUom(struct soap*, const enum eml20__MassLengthUom *, const char*, const char*);

inline int soap_write_eml20__MassLengthUom(struct soap *soap, enum eml20__MassLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassLengthUom(soap, p, "eml20:MassLengthUom", "eml20:MassLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassLengthUom(struct soap *soap, const char *URL, enum eml20__MassLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassLengthUom(soap, p, "eml20:MassLengthUom", "eml20:MassLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassLengthUom(struct soap *soap, const char *URL, enum eml20__MassLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassLengthUom(soap, p, "eml20:MassLengthUom", "eml20:MassLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassLengthUom(struct soap *soap, const char *URL, enum eml20__MassLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassLengthUom(soap, p, "eml20:MassLengthUom", "eml20:MassLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassLengthUom * SOAP_FMAC4 soap_get_eml20__MassLengthUom(struct soap*, enum eml20__MassLengthUom *, const char*, const char*);

inline int soap_read_eml20__MassLengthUom(struct soap *soap, enum eml20__MassLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassLengthUom(struct soap *soap, const char *URL, enum eml20__MassLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassLengthUom(struct soap *soap, enum eml20__MassLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom_DEFINED

inline void soap_default_eml20__MassPerVolumePerLengthUom(struct soap *soap, enum eml20__MassPerVolumePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerVolumePerLengthUom
	*a = SOAP_DEFAULT_eml20__MassPerVolumePerLengthUom;
#else
	*a = (enum eml20__MassPerVolumePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerVolumePerLengthUom(struct soap*, const char*, int, const enum eml20__MassPerVolumePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerVolumePerLengthUom2s(struct soap*, enum eml20__MassPerVolumePerLengthUom);
SOAP_FMAC3 enum eml20__MassPerVolumePerLengthUom * SOAP_FMAC4 soap_in_eml20__MassPerVolumePerLengthUom(struct soap*, const char*, enum eml20__MassPerVolumePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerVolumePerLengthUom(struct soap*, const char*, enum eml20__MassPerVolumePerLengthUom *);

SOAP_FMAC3 enum eml20__MassPerVolumePerLengthUom * SOAP_FMAC4 soap_new_eml20__MassPerVolumePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerVolumePerLengthUom(struct soap*, const enum eml20__MassPerVolumePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__MassPerVolumePerLengthUom(struct soap *soap, enum eml20__MassPerVolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumePerLengthUom(soap, p, "eml20:MassPerVolumePerLengthUom", "eml20:MassPerVolumePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerVolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumePerLengthUom(soap, p, "eml20:MassPerVolumePerLengthUom", "eml20:MassPerVolumePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerVolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumePerLengthUom(soap, p, "eml20:MassPerVolumePerLengthUom", "eml20:MassPerVolumePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerVolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumePerLengthUom(soap, p, "eml20:MassPerVolumePerLengthUom", "eml20:MassPerVolumePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerVolumePerLengthUom * SOAP_FMAC4 soap_get_eml20__MassPerVolumePerLengthUom(struct soap*, enum eml20__MassPerVolumePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__MassPerVolumePerLengthUom(struct soap *soap, enum eml20__MassPerVolumePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerVolumePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerVolumePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerVolumePerLengthUom(struct soap *soap, enum eml20__MassPerVolumePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom_DEFINED

inline void soap_default_eml20__ElectricChargePerMassUom(struct soap *soap, enum eml20__ElectricChargePerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricChargePerMassUom
	*a = SOAP_DEFAULT_eml20__ElectricChargePerMassUom;
#else
	*a = (enum eml20__ElectricChargePerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerMassUom(struct soap*, const char*, int, const enum eml20__ElectricChargePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricChargePerMassUom2s(struct soap*, enum eml20__ElectricChargePerMassUom);
SOAP_FMAC3 enum eml20__ElectricChargePerMassUom * SOAP_FMAC4 soap_in_eml20__ElectricChargePerMassUom(struct soap*, const char*, enum eml20__ElectricChargePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricChargePerMassUom(struct soap*, const char*, enum eml20__ElectricChargePerMassUom *);

SOAP_FMAC3 enum eml20__ElectricChargePerMassUom * SOAP_FMAC4 soap_new_eml20__ElectricChargePerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricChargePerMassUom(struct soap*, const enum eml20__ElectricChargePerMassUom *, const char*, const char*);

inline int soap_write_eml20__ElectricChargePerMassUom(struct soap *soap, enum eml20__ElectricChargePerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerMassUom(soap, p, "eml20:ElectricChargePerMassUom", "eml20:ElectricChargePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerMassUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerMassUom(soap, p, "eml20:ElectricChargePerMassUom", "eml20:ElectricChargePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerMassUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerMassUom(soap, p, "eml20:ElectricChargePerMassUom", "eml20:ElectricChargePerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerMassUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerMassUom(soap, p, "eml20:ElectricChargePerMassUom", "eml20:ElectricChargePerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricChargePerMassUom * SOAP_FMAC4 soap_get_eml20__ElectricChargePerMassUom(struct soap*, enum eml20__ElectricChargePerMassUom *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerMassUom(struct soap *soap, enum eml20__ElectricChargePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerMassUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerMassUom(struct soap *soap, enum eml20__ElectricChargePerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom_DEFINED

inline void soap_default_eml20__PowerPerPowerUom(struct soap *soap, enum eml20__PowerPerPowerUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PowerPerPowerUom
	*a = SOAP_DEFAULT_eml20__PowerPerPowerUom;
#else
	*a = (enum eml20__PowerPerPowerUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerPowerUom(struct soap*, const char*, int, const enum eml20__PowerPerPowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PowerPerPowerUom2s(struct soap*, enum eml20__PowerPerPowerUom);
SOAP_FMAC3 enum eml20__PowerPerPowerUom * SOAP_FMAC4 soap_in_eml20__PowerPerPowerUom(struct soap*, const char*, enum eml20__PowerPerPowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PowerPerPowerUom(struct soap*, const char*, enum eml20__PowerPerPowerUom *);

SOAP_FMAC3 enum eml20__PowerPerPowerUom * SOAP_FMAC4 soap_new_eml20__PowerPerPowerUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PowerPerPowerUom(struct soap*, const enum eml20__PowerPerPowerUom *, const char*, const char*);

inline int soap_write_eml20__PowerPerPowerUom(struct soap *soap, enum eml20__PowerPerPowerUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PowerPerPowerUom(soap, p, "eml20:PowerPerPowerUom", "eml20:PowerPerPowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerPowerUom(struct soap *soap, const char *URL, enum eml20__PowerPerPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerPowerUom(soap, p, "eml20:PowerPerPowerUom", "eml20:PowerPerPowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerPowerUom(struct soap *soap, const char *URL, enum eml20__PowerPerPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerPowerUom(soap, p, "eml20:PowerPerPowerUom", "eml20:PowerPerPowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerPowerUom(struct soap *soap, const char *URL, enum eml20__PowerPerPowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerPowerUom(soap, p, "eml20:PowerPerPowerUom", "eml20:PowerPerPowerUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PowerPerPowerUom * SOAP_FMAC4 soap_get_eml20__PowerPerPowerUom(struct soap*, enum eml20__PowerPerPowerUom *, const char*, const char*);

inline int soap_read_eml20__PowerPerPowerUom(struct soap *soap, enum eml20__PowerPerPowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerPowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerPowerUom(struct soap *soap, const char *URL, enum eml20__PowerPerPowerUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerPowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerPowerUom(struct soap *soap, enum eml20__PowerPerPowerUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerPowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom_DEFINED

inline void soap_default_eml20__DoseEquivalentUom(struct soap *soap, enum eml20__DoseEquivalentUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DoseEquivalentUom
	*a = SOAP_DEFAULT_eml20__DoseEquivalentUom;
#else
	*a = (enum eml20__DoseEquivalentUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DoseEquivalentUom(struct soap*, const char*, int, const enum eml20__DoseEquivalentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DoseEquivalentUom2s(struct soap*, enum eml20__DoseEquivalentUom);
SOAP_FMAC3 enum eml20__DoseEquivalentUom * SOAP_FMAC4 soap_in_eml20__DoseEquivalentUom(struct soap*, const char*, enum eml20__DoseEquivalentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DoseEquivalentUom(struct soap*, const char*, enum eml20__DoseEquivalentUom *);

SOAP_FMAC3 enum eml20__DoseEquivalentUom * SOAP_FMAC4 soap_new_eml20__DoseEquivalentUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DoseEquivalentUom(struct soap*, const enum eml20__DoseEquivalentUom *, const char*, const char*);

inline int soap_write_eml20__DoseEquivalentUom(struct soap *soap, enum eml20__DoseEquivalentUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DoseEquivalentUom(soap, p, "eml20:DoseEquivalentUom", "eml20:DoseEquivalentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DoseEquivalentUom(struct soap *soap, const char *URL, enum eml20__DoseEquivalentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DoseEquivalentUom(soap, p, "eml20:DoseEquivalentUom", "eml20:DoseEquivalentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DoseEquivalentUom(struct soap *soap, const char *URL, enum eml20__DoseEquivalentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DoseEquivalentUom(soap, p, "eml20:DoseEquivalentUom", "eml20:DoseEquivalentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DoseEquivalentUom(struct soap *soap, const char *URL, enum eml20__DoseEquivalentUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DoseEquivalentUom(soap, p, "eml20:DoseEquivalentUom", "eml20:DoseEquivalentUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DoseEquivalentUom * SOAP_FMAC4 soap_get_eml20__DoseEquivalentUom(struct soap*, enum eml20__DoseEquivalentUom *, const char*, const char*);

inline int soap_read_eml20__DoseEquivalentUom(struct soap *soap, enum eml20__DoseEquivalentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DoseEquivalentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DoseEquivalentUom(struct soap *soap, const char *URL, enum eml20__DoseEquivalentUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DoseEquivalentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DoseEquivalentUom(struct soap *soap, enum eml20__DoseEquivalentUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DoseEquivalentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom_DEFINED

inline void soap_default_eml20__HeatFlowRateUom(struct soap *soap, enum eml20__HeatFlowRateUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__HeatFlowRateUom
	*a = SOAP_DEFAULT_eml20__HeatFlowRateUom;
#else
	*a = (enum eml20__HeatFlowRateUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatFlowRateUom(struct soap*, const char*, int, const enum eml20__HeatFlowRateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__HeatFlowRateUom2s(struct soap*, enum eml20__HeatFlowRateUom);
SOAP_FMAC3 enum eml20__HeatFlowRateUom * SOAP_FMAC4 soap_in_eml20__HeatFlowRateUom(struct soap*, const char*, enum eml20__HeatFlowRateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__HeatFlowRateUom(struct soap*, const char*, enum eml20__HeatFlowRateUom *);

SOAP_FMAC3 enum eml20__HeatFlowRateUom * SOAP_FMAC4 soap_new_eml20__HeatFlowRateUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__HeatFlowRateUom(struct soap*, const enum eml20__HeatFlowRateUom *, const char*, const char*);

inline int soap_write_eml20__HeatFlowRateUom(struct soap *soap, enum eml20__HeatFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__HeatFlowRateUom(soap, p, "eml20:HeatFlowRateUom", "eml20:HeatFlowRateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatFlowRateUom(struct soap *soap, const char *URL, enum eml20__HeatFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatFlowRateUom(soap, p, "eml20:HeatFlowRateUom", "eml20:HeatFlowRateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatFlowRateUom(struct soap *soap, const char *URL, enum eml20__HeatFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatFlowRateUom(soap, p, "eml20:HeatFlowRateUom", "eml20:HeatFlowRateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatFlowRateUom(struct soap *soap, const char *URL, enum eml20__HeatFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatFlowRateUom(soap, p, "eml20:HeatFlowRateUom", "eml20:HeatFlowRateUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__HeatFlowRateUom * SOAP_FMAC4 soap_get_eml20__HeatFlowRateUom(struct soap*, enum eml20__HeatFlowRateUom *, const char*, const char*);

inline int soap_read_eml20__HeatFlowRateUom(struct soap *soap, enum eml20__HeatFlowRateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatFlowRateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatFlowRateUom(struct soap *soap, const char *URL, enum eml20__HeatFlowRateUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatFlowRateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatFlowRateUom(struct soap *soap, enum eml20__HeatFlowRateUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatFlowRateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom_DEFINED

inline void soap_default_eml20__RadianceUom(struct soap *soap, enum eml20__RadianceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__RadianceUom
	*a = SOAP_DEFAULT_eml20__RadianceUom;
#else
	*a = (enum eml20__RadianceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__RadianceUom(struct soap*, const char*, int, const enum eml20__RadianceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__RadianceUom2s(struct soap*, enum eml20__RadianceUom);
SOAP_FMAC3 enum eml20__RadianceUom * SOAP_FMAC4 soap_in_eml20__RadianceUom(struct soap*, const char*, enum eml20__RadianceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__RadianceUom(struct soap*, const char*, enum eml20__RadianceUom *);

SOAP_FMAC3 enum eml20__RadianceUom * SOAP_FMAC4 soap_new_eml20__RadianceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__RadianceUom(struct soap*, const enum eml20__RadianceUom *, const char*, const char*);

inline int soap_write_eml20__RadianceUom(struct soap *soap, enum eml20__RadianceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__RadianceUom(soap, p, "eml20:RadianceUom", "eml20:RadianceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__RadianceUom(struct soap *soap, const char *URL, enum eml20__RadianceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadianceUom(soap, p, "eml20:RadianceUom", "eml20:RadianceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__RadianceUom(struct soap *soap, const char *URL, enum eml20__RadianceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadianceUom(soap, p, "eml20:RadianceUom", "eml20:RadianceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__RadianceUom(struct soap *soap, const char *URL, enum eml20__RadianceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadianceUom(soap, p, "eml20:RadianceUom", "eml20:RadianceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__RadianceUom * SOAP_FMAC4 soap_get_eml20__RadianceUom(struct soap*, enum eml20__RadianceUom *, const char*, const char*);

inline int soap_read_eml20__RadianceUom(struct soap *soap, enum eml20__RadianceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__RadianceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__RadianceUom(struct soap *soap, const char *URL, enum eml20__RadianceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__RadianceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__RadianceUom(struct soap *soap, enum eml20__RadianceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__RadianceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom_DEFINED

inline void soap_default_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstancePerAmountOfSubstanceUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstancePerAmountOfSubstanceUom;
#else
	*a = (enum eml20__AmountOfSubstancePerAmountOfSubstanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstancePerAmountOfSubstanceUom2s(struct soap*, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom);
SOAP_FMAC3 enum eml20__AmountOfSubstancePerAmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstancePerAmountOfSubstanceUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstancePerAmountOfSubstanceUom", "eml20:AmountOfSubstancePerAmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstancePerAmountOfSubstanceUom", "eml20:AmountOfSubstancePerAmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstancePerAmountOfSubstanceUom", "eml20:AmountOfSubstancePerAmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstancePerAmountOfSubstanceUom", "eml20:AmountOfSubstancePerAmountOfSubstanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstancePerAmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstancePerAmountOfSubstanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom_DEFINED

inline void soap_default_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml20__TemperatureIntervalPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TemperatureIntervalPerTimeUom
	*a = SOAP_DEFAULT_eml20__TemperatureIntervalPerTimeUom;
#else
	*a = (enum eml20__TemperatureIntervalPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerTimeUom(struct soap*, const char*, int, const enum eml20__TemperatureIntervalPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TemperatureIntervalPerTimeUom2s(struct soap*, enum eml20__TemperatureIntervalPerTimeUom);
SOAP_FMAC3 enum eml20__TemperatureIntervalPerTimeUom * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerTimeUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TemperatureIntervalPerTimeUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerTimeUom *);

SOAP_FMAC3 enum eml20__TemperatureIntervalPerTimeUom * SOAP_FMAC4 soap_new_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TemperatureIntervalPerTimeUom(struct soap*, const enum eml20__TemperatureIntervalPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml20__TemperatureIntervalPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerTimeUom(soap, p, "eml20:TemperatureIntervalPerTimeUom", "eml20:TemperatureIntervalPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerTimeUom(soap, p, "eml20:TemperatureIntervalPerTimeUom", "eml20:TemperatureIntervalPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerTimeUom(soap, p, "eml20:TemperatureIntervalPerTimeUom", "eml20:TemperatureIntervalPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerTimeUom(soap, p, "eml20:TemperatureIntervalPerTimeUom", "eml20:TemperatureIntervalPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TemperatureIntervalPerTimeUom * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerTimeUom(struct soap*, enum eml20__TemperatureIntervalPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml20__TemperatureIntervalPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml20__TemperatureIntervalPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom_DEFINED

inline void soap_default_eml20__AreaPerVolumeUom(struct soap *soap, enum eml20__AreaPerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaPerVolumeUom
	*a = SOAP_DEFAULT_eml20__AreaPerVolumeUom;
#else
	*a = (enum eml20__AreaPerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerVolumeUom(struct soap*, const char*, int, const enum eml20__AreaPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaPerVolumeUom2s(struct soap*, enum eml20__AreaPerVolumeUom);
SOAP_FMAC3 enum eml20__AreaPerVolumeUom * SOAP_FMAC4 soap_in_eml20__AreaPerVolumeUom(struct soap*, const char*, enum eml20__AreaPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaPerVolumeUom(struct soap*, const char*, enum eml20__AreaPerVolumeUom *);

SOAP_FMAC3 enum eml20__AreaPerVolumeUom * SOAP_FMAC4 soap_new_eml20__AreaPerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaPerVolumeUom(struct soap*, const enum eml20__AreaPerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__AreaPerVolumeUom(struct soap *soap, enum eml20__AreaPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaPerVolumeUom(soap, p, "eml20:AreaPerVolumeUom", "eml20:AreaPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerVolumeUom(struct soap *soap, const char *URL, enum eml20__AreaPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerVolumeUom(soap, p, "eml20:AreaPerVolumeUom", "eml20:AreaPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerVolumeUom(struct soap *soap, const char *URL, enum eml20__AreaPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerVolumeUom(soap, p, "eml20:AreaPerVolumeUom", "eml20:AreaPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerVolumeUom(struct soap *soap, const char *URL, enum eml20__AreaPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerVolumeUom(soap, p, "eml20:AreaPerVolumeUom", "eml20:AreaPerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaPerVolumeUom * SOAP_FMAC4 soap_get_eml20__AreaPerVolumeUom(struct soap*, enum eml20__AreaPerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__AreaPerVolumeUom(struct soap *soap, enum eml20__AreaPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerVolumeUom(struct soap *soap, const char *URL, enum eml20__AreaPerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerVolumeUom(struct soap *soap, enum eml20__AreaPerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom_DEFINED

inline void soap_default_eml20__IlluminanceUom(struct soap *soap, enum eml20__IlluminanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__IlluminanceUom
	*a = SOAP_DEFAULT_eml20__IlluminanceUom;
#else
	*a = (enum eml20__IlluminanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__IlluminanceUom(struct soap*, const char*, int, const enum eml20__IlluminanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__IlluminanceUom2s(struct soap*, enum eml20__IlluminanceUom);
SOAP_FMAC3 enum eml20__IlluminanceUom * SOAP_FMAC4 soap_in_eml20__IlluminanceUom(struct soap*, const char*, enum eml20__IlluminanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__IlluminanceUom(struct soap*, const char*, enum eml20__IlluminanceUom *);

SOAP_FMAC3 enum eml20__IlluminanceUom * SOAP_FMAC4 soap_new_eml20__IlluminanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__IlluminanceUom(struct soap*, const enum eml20__IlluminanceUom *, const char*, const char*);

inline int soap_write_eml20__IlluminanceUom(struct soap *soap, enum eml20__IlluminanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__IlluminanceUom(soap, p, "eml20:IlluminanceUom", "eml20:IlluminanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__IlluminanceUom(struct soap *soap, const char *URL, enum eml20__IlluminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IlluminanceUom(soap, p, "eml20:IlluminanceUom", "eml20:IlluminanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__IlluminanceUom(struct soap *soap, const char *URL, enum eml20__IlluminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IlluminanceUom(soap, p, "eml20:IlluminanceUom", "eml20:IlluminanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__IlluminanceUom(struct soap *soap, const char *URL, enum eml20__IlluminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__IlluminanceUom(soap, p, "eml20:IlluminanceUom", "eml20:IlluminanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__IlluminanceUom * SOAP_FMAC4 soap_get_eml20__IlluminanceUom(struct soap*, enum eml20__IlluminanceUom *, const char*, const char*);

inline int soap_read_eml20__IlluminanceUom(struct soap *soap, enum eml20__IlluminanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__IlluminanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__IlluminanceUom(struct soap *soap, const char *URL, enum eml20__IlluminanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__IlluminanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__IlluminanceUom(struct soap *soap, enum eml20__IlluminanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__IlluminanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom_DEFINED

inline void soap_default_eml20__MassPerAreaUom(struct soap *soap, enum eml20__MassPerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerAreaUom
	*a = SOAP_DEFAULT_eml20__MassPerAreaUom;
#else
	*a = (enum eml20__MassPerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerAreaUom(struct soap*, const char*, int, const enum eml20__MassPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerAreaUom2s(struct soap*, enum eml20__MassPerAreaUom);
SOAP_FMAC3 enum eml20__MassPerAreaUom * SOAP_FMAC4 soap_in_eml20__MassPerAreaUom(struct soap*, const char*, enum eml20__MassPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerAreaUom(struct soap*, const char*, enum eml20__MassPerAreaUom *);

SOAP_FMAC3 enum eml20__MassPerAreaUom * SOAP_FMAC4 soap_new_eml20__MassPerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerAreaUom(struct soap*, const enum eml20__MassPerAreaUom *, const char*, const char*);

inline int soap_write_eml20__MassPerAreaUom(struct soap *soap, enum eml20__MassPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerAreaUom(soap, p, "eml20:MassPerAreaUom", "eml20:MassPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerAreaUom(soap, p, "eml20:MassPerAreaUom", "eml20:MassPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerAreaUom(soap, p, "eml20:MassPerAreaUom", "eml20:MassPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerAreaUom(soap, p, "eml20:MassPerAreaUom", "eml20:MassPerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerAreaUom * SOAP_FMAC4 soap_get_eml20__MassPerAreaUom(struct soap*, enum eml20__MassPerAreaUom *, const char*, const char*);

inline int soap_read_eml20__MassPerAreaUom(struct soap *soap, enum eml20__MassPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerAreaUom(struct soap *soap, const char *URL, enum eml20__MassPerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerAreaUom(struct soap *soap, enum eml20__MassPerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom_DEFINED

inline void soap_default_eml20__PowerPerAreaUom(struct soap *soap, enum eml20__PowerPerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PowerPerAreaUom
	*a = SOAP_DEFAULT_eml20__PowerPerAreaUom;
#else
	*a = (enum eml20__PowerPerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerAreaUom(struct soap*, const char*, int, const enum eml20__PowerPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PowerPerAreaUom2s(struct soap*, enum eml20__PowerPerAreaUom);
SOAP_FMAC3 enum eml20__PowerPerAreaUom * SOAP_FMAC4 soap_in_eml20__PowerPerAreaUom(struct soap*, const char*, enum eml20__PowerPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PowerPerAreaUom(struct soap*, const char*, enum eml20__PowerPerAreaUom *);

SOAP_FMAC3 enum eml20__PowerPerAreaUom * SOAP_FMAC4 soap_new_eml20__PowerPerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PowerPerAreaUom(struct soap*, const enum eml20__PowerPerAreaUom *, const char*, const char*);

inline int soap_write_eml20__PowerPerAreaUom(struct soap *soap, enum eml20__PowerPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PowerPerAreaUom(soap, p, "eml20:PowerPerAreaUom", "eml20:PowerPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerAreaUom(struct soap *soap, const char *URL, enum eml20__PowerPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerAreaUom(soap, p, "eml20:PowerPerAreaUom", "eml20:PowerPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerAreaUom(struct soap *soap, const char *URL, enum eml20__PowerPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerAreaUom(soap, p, "eml20:PowerPerAreaUom", "eml20:PowerPerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerAreaUom(struct soap *soap, const char *URL, enum eml20__PowerPerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerPerAreaUom(soap, p, "eml20:PowerPerAreaUom", "eml20:PowerPerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PowerPerAreaUom * SOAP_FMAC4 soap_get_eml20__PowerPerAreaUom(struct soap*, enum eml20__PowerPerAreaUom *, const char*, const char*);

inline int soap_read_eml20__PowerPerAreaUom(struct soap *soap, enum eml20__PowerPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerAreaUom(struct soap *soap, const char *URL, enum eml20__PowerPerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerAreaUom(struct soap *soap, enum eml20__PowerPerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom_DEFINED

inline void soap_default_eml20__ThermalInsulanceUom(struct soap *soap, enum eml20__ThermalInsulanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermalInsulanceUom
	*a = SOAP_DEFAULT_eml20__ThermalInsulanceUom;
#else
	*a = (enum eml20__ThermalInsulanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalInsulanceUom(struct soap*, const char*, int, const enum eml20__ThermalInsulanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermalInsulanceUom2s(struct soap*, enum eml20__ThermalInsulanceUom);
SOAP_FMAC3 enum eml20__ThermalInsulanceUom * SOAP_FMAC4 soap_in_eml20__ThermalInsulanceUom(struct soap*, const char*, enum eml20__ThermalInsulanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermalInsulanceUom(struct soap*, const char*, enum eml20__ThermalInsulanceUom *);

SOAP_FMAC3 enum eml20__ThermalInsulanceUom * SOAP_FMAC4 soap_new_eml20__ThermalInsulanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermalInsulanceUom(struct soap*, const enum eml20__ThermalInsulanceUom *, const char*, const char*);

inline int soap_write_eml20__ThermalInsulanceUom(struct soap *soap, enum eml20__ThermalInsulanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermalInsulanceUom(soap, p, "eml20:ThermalInsulanceUom", "eml20:ThermalInsulanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalInsulanceUom(struct soap *soap, const char *URL, enum eml20__ThermalInsulanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalInsulanceUom(soap, p, "eml20:ThermalInsulanceUom", "eml20:ThermalInsulanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalInsulanceUom(struct soap *soap, const char *URL, enum eml20__ThermalInsulanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalInsulanceUom(soap, p, "eml20:ThermalInsulanceUom", "eml20:ThermalInsulanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalInsulanceUom(struct soap *soap, const char *URL, enum eml20__ThermalInsulanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalInsulanceUom(soap, p, "eml20:ThermalInsulanceUom", "eml20:ThermalInsulanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermalInsulanceUom * SOAP_FMAC4 soap_get_eml20__ThermalInsulanceUom(struct soap*, enum eml20__ThermalInsulanceUom *, const char*, const char*);

inline int soap_read_eml20__ThermalInsulanceUom(struct soap *soap, enum eml20__ThermalInsulanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalInsulanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalInsulanceUom(struct soap *soap, const char *URL, enum eml20__ThermalInsulanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalInsulanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalInsulanceUom(struct soap *soap, enum eml20__ThermalInsulanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalInsulanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom_DEFINED

inline void soap_default_eml20__ElectromagneticMomentUom(struct soap *soap, enum eml20__ElectromagneticMomentUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectromagneticMomentUom
	*a = SOAP_DEFAULT_eml20__ElectromagneticMomentUom;
#else
	*a = (enum eml20__ElectromagneticMomentUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectromagneticMomentUom(struct soap*, const char*, int, const enum eml20__ElectromagneticMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectromagneticMomentUom2s(struct soap*, enum eml20__ElectromagneticMomentUom);
SOAP_FMAC3 enum eml20__ElectromagneticMomentUom * SOAP_FMAC4 soap_in_eml20__ElectromagneticMomentUom(struct soap*, const char*, enum eml20__ElectromagneticMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectromagneticMomentUom(struct soap*, const char*, enum eml20__ElectromagneticMomentUom *);

SOAP_FMAC3 enum eml20__ElectromagneticMomentUom * SOAP_FMAC4 soap_new_eml20__ElectromagneticMomentUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectromagneticMomentUom(struct soap*, const enum eml20__ElectromagneticMomentUom *, const char*, const char*);

inline int soap_write_eml20__ElectromagneticMomentUom(struct soap *soap, enum eml20__ElectromagneticMomentUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectromagneticMomentUom(soap, p, "eml20:ElectromagneticMomentUom", "eml20:ElectromagneticMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectromagneticMomentUom(struct soap *soap, const char *URL, enum eml20__ElectromagneticMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectromagneticMomentUom(soap, p, "eml20:ElectromagneticMomentUom", "eml20:ElectromagneticMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectromagneticMomentUom(struct soap *soap, const char *URL, enum eml20__ElectromagneticMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectromagneticMomentUom(soap, p, "eml20:ElectromagneticMomentUom", "eml20:ElectromagneticMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectromagneticMomentUom(struct soap *soap, const char *URL, enum eml20__ElectromagneticMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectromagneticMomentUom(soap, p, "eml20:ElectromagneticMomentUom", "eml20:ElectromagneticMomentUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectromagneticMomentUom * SOAP_FMAC4 soap_get_eml20__ElectromagneticMomentUom(struct soap*, enum eml20__ElectromagneticMomentUom *, const char*, const char*);

inline int soap_read_eml20__ElectromagneticMomentUom(struct soap *soap, enum eml20__ElectromagneticMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectromagneticMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectromagneticMomentUom(struct soap *soap, const char *URL, enum eml20__ElectromagneticMomentUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectromagneticMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectromagneticMomentUom(struct soap *soap, enum eml20__ElectromagneticMomentUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectromagneticMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom_DEFINED

inline void soap_default_eml20__PermittivityUom(struct soap *soap, enum eml20__PermittivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PermittivityUom
	*a = SOAP_DEFAULT_eml20__PermittivityUom;
#else
	*a = (enum eml20__PermittivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermittivityUom(struct soap*, const char*, int, const enum eml20__PermittivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PermittivityUom2s(struct soap*, enum eml20__PermittivityUom);
SOAP_FMAC3 enum eml20__PermittivityUom * SOAP_FMAC4 soap_in_eml20__PermittivityUom(struct soap*, const char*, enum eml20__PermittivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PermittivityUom(struct soap*, const char*, enum eml20__PermittivityUom *);

SOAP_FMAC3 enum eml20__PermittivityUom * SOAP_FMAC4 soap_new_eml20__PermittivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PermittivityUom(struct soap*, const enum eml20__PermittivityUom *, const char*, const char*);

inline int soap_write_eml20__PermittivityUom(struct soap *soap, enum eml20__PermittivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PermittivityUom(soap, p, "eml20:PermittivityUom", "eml20:PermittivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermittivityUom(struct soap *soap, const char *URL, enum eml20__PermittivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermittivityUom(soap, p, "eml20:PermittivityUom", "eml20:PermittivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermittivityUom(struct soap *soap, const char *URL, enum eml20__PermittivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermittivityUom(soap, p, "eml20:PermittivityUom", "eml20:PermittivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermittivityUom(struct soap *soap, const char *URL, enum eml20__PermittivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermittivityUom(soap, p, "eml20:PermittivityUom", "eml20:PermittivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PermittivityUom * SOAP_FMAC4 soap_get_eml20__PermittivityUom(struct soap*, enum eml20__PermittivityUom *, const char*, const char*);

inline int soap_read_eml20__PermittivityUom(struct soap *soap, enum eml20__PermittivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermittivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermittivityUom(struct soap *soap, const char *URL, enum eml20__PermittivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermittivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermittivityUom(struct soap *soap, enum eml20__PermittivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermittivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom_DEFINED

inline void soap_default_eml20__EnergyPerMassUom(struct soap *soap, enum eml20__EnergyPerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyPerMassUom
	*a = SOAP_DEFAULT_eml20__EnergyPerMassUom;
#else
	*a = (enum eml20__EnergyPerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerMassUom(struct soap*, const char*, int, const enum eml20__EnergyPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyPerMassUom2s(struct soap*, enum eml20__EnergyPerMassUom);
SOAP_FMAC3 enum eml20__EnergyPerMassUom * SOAP_FMAC4 soap_in_eml20__EnergyPerMassUom(struct soap*, const char*, enum eml20__EnergyPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyPerMassUom(struct soap*, const char*, enum eml20__EnergyPerMassUom *);

SOAP_FMAC3 enum eml20__EnergyPerMassUom * SOAP_FMAC4 soap_new_eml20__EnergyPerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyPerMassUom(struct soap*, const enum eml20__EnergyPerMassUom *, const char*, const char*);

inline int soap_write_eml20__EnergyPerMassUom(struct soap *soap, enum eml20__EnergyPerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassUom(soap, p, "eml20:EnergyPerMassUom", "eml20:EnergyPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerMassUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassUom(soap, p, "eml20:EnergyPerMassUom", "eml20:EnergyPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerMassUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassUom(soap, p, "eml20:EnergyPerMassUom", "eml20:EnergyPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerMassUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerMassUom(soap, p, "eml20:EnergyPerMassUom", "eml20:EnergyPerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyPerMassUom * SOAP_FMAC4 soap_get_eml20__EnergyPerMassUom(struct soap*, enum eml20__EnergyPerMassUom *, const char*, const char*);

inline int soap_read_eml20__EnergyPerMassUom(struct soap *soap, enum eml20__EnergyPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerMassUom(struct soap *soap, const char *URL, enum eml20__EnergyPerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerMassUom(struct soap *soap, enum eml20__EnergyPerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom_DEFINED

inline void soap_default_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml20__AmountOfSubstancePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstancePerVolumeUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstancePerVolumeUom;
#else
	*a = (enum eml20__AmountOfSubstancePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerVolumeUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstancePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstancePerVolumeUom2s(struct soap*, enum eml20__AmountOfSubstancePerVolumeUom);
SOAP_FMAC3 enum eml20__AmountOfSubstancePerVolumeUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerVolumeUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstancePerVolumeUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerVolumeUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstancePerVolumeUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstancePerVolumeUom(struct soap*, const enum eml20__AmountOfSubstancePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml20__AmountOfSubstancePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerVolumeUom(soap, p, "eml20:AmountOfSubstancePerVolumeUom", "eml20:AmountOfSubstancePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerVolumeUom(soap, p, "eml20:AmountOfSubstancePerVolumeUom", "eml20:AmountOfSubstancePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerVolumeUom(soap, p, "eml20:AmountOfSubstancePerVolumeUom", "eml20:AmountOfSubstancePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerVolumeUom(soap, p, "eml20:AmountOfSubstancePerVolumeUom", "eml20:AmountOfSubstancePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstancePerVolumeUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerVolumeUom(struct soap*, enum eml20__AmountOfSubstancePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml20__AmountOfSubstancePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml20__AmountOfSubstancePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerPressureUom(struct soap *soap, enum eml20__VolumePerTimePerPressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerPressureUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerPressureUom;
#else
	*a = (enum eml20__VolumePerTimePerPressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerPressureUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerPressureUom2s(struct soap*, enum eml20__VolumePerTimePerPressureUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerPressureUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerPressureUom(struct soap*, const char*, enum eml20__VolumePerTimePerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerPressureUom(struct soap*, const char*, enum eml20__VolumePerTimePerPressureUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerPressureUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerPressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerPressureUom(struct soap*, const enum eml20__VolumePerTimePerPressureUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerPressureUom(struct soap *soap, enum eml20__VolumePerTimePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureUom(soap, p, "eml20:VolumePerTimePerPressureUom", "eml20:VolumePerTimePerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureUom(soap, p, "eml20:VolumePerTimePerPressureUom", "eml20:VolumePerTimePerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureUom(soap, p, "eml20:VolumePerTimePerPressureUom", "eml20:VolumePerTimePerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureUom(soap, p, "eml20:VolumePerTimePerPressureUom", "eml20:VolumePerTimePerPressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerPressureUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerPressureUom(struct soap*, enum eml20__VolumePerTimePerPressureUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerPressureUom(struct soap *soap, enum eml20__VolumePerTimePerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerPressureUom(struct soap *soap, enum eml20__VolumePerTimePerPressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom_DEFINED

inline void soap_default_eml20__LuminousFluxUom(struct soap *soap, enum eml20__LuminousFluxUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LuminousFluxUom
	*a = SOAP_DEFAULT_eml20__LuminousFluxUom;
#else
	*a = (enum eml20__LuminousFluxUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousFluxUom(struct soap*, const char*, int, const enum eml20__LuminousFluxUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LuminousFluxUom2s(struct soap*, enum eml20__LuminousFluxUom);
SOAP_FMAC3 enum eml20__LuminousFluxUom * SOAP_FMAC4 soap_in_eml20__LuminousFluxUom(struct soap*, const char*, enum eml20__LuminousFluxUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LuminousFluxUom(struct soap*, const char*, enum eml20__LuminousFluxUom *);

SOAP_FMAC3 enum eml20__LuminousFluxUom * SOAP_FMAC4 soap_new_eml20__LuminousFluxUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LuminousFluxUom(struct soap*, const enum eml20__LuminousFluxUom *, const char*, const char*);

inline int soap_write_eml20__LuminousFluxUom(struct soap *soap, enum eml20__LuminousFluxUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LuminousFluxUom(soap, p, "eml20:LuminousFluxUom", "eml20:LuminousFluxUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousFluxUom(struct soap *soap, const char *URL, enum eml20__LuminousFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousFluxUom(soap, p, "eml20:LuminousFluxUom", "eml20:LuminousFluxUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousFluxUom(struct soap *soap, const char *URL, enum eml20__LuminousFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousFluxUom(soap, p, "eml20:LuminousFluxUom", "eml20:LuminousFluxUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousFluxUom(struct soap *soap, const char *URL, enum eml20__LuminousFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousFluxUom(soap, p, "eml20:LuminousFluxUom", "eml20:LuminousFluxUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LuminousFluxUom * SOAP_FMAC4 soap_get_eml20__LuminousFluxUom(struct soap*, enum eml20__LuminousFluxUom *, const char*, const char*);

inline int soap_read_eml20__LuminousFluxUom(struct soap *soap, enum eml20__LuminousFluxUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousFluxUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousFluxUom(struct soap *soap, const char *URL, enum eml20__LuminousFluxUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousFluxUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousFluxUom(struct soap *soap, enum eml20__LuminousFluxUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousFluxUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom_DEFINED

inline void soap_default_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml20__PressureSquaredPerForceTimePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressureSquaredPerForceTimePerAreaUom
	*a = SOAP_DEFAULT_eml20__PressureSquaredPerForceTimePerAreaUom;
#else
	*a = (enum eml20__PressureSquaredPerForceTimePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, int, const enum eml20__PressureSquaredPerForceTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressureSquaredPerForceTimePerAreaUom2s(struct soap*, enum eml20__PressureSquaredPerForceTimePerAreaUom);
SOAP_FMAC3 enum eml20__PressureSquaredPerForceTimePerAreaUom * SOAP_FMAC4 soap_in_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, enum eml20__PressureSquaredPerForceTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, enum eml20__PressureSquaredPerForceTimePerAreaUom *);

SOAP_FMAC3 enum eml20__PressureSquaredPerForceTimePerAreaUom * SOAP_FMAC4 soap_new_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap*, const enum eml20__PressureSquaredPerForceTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml20__PressureSquaredPerForceTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p, "eml20:PressureSquaredPerForceTimePerAreaUom", "eml20:PressureSquaredPerForceTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredPerForceTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p, "eml20:PressureSquaredPerForceTimePerAreaUom", "eml20:PressureSquaredPerForceTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredPerForceTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p, "eml20:PressureSquaredPerForceTimePerAreaUom", "eml20:PressureSquaredPerForceTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredPerForceTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p, "eml20:PressureSquaredPerForceTimePerAreaUom", "eml20:PressureSquaredPerForceTimePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressureSquaredPerForceTimePerAreaUom * SOAP_FMAC4 soap_get_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap*, enum eml20__PressureSquaredPerForceTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml20__PressureSquaredPerForceTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredPerForceTimePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml20__PressureSquaredPerForceTimePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredPerForceTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom_DEFINED

inline void soap_default_eml20__MassPerMassUom(struct soap *soap, enum eml20__MassPerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerMassUom
	*a = SOAP_DEFAULT_eml20__MassPerMassUom;
#else
	*a = (enum eml20__MassPerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerMassUom(struct soap*, const char*, int, const enum eml20__MassPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerMassUom2s(struct soap*, enum eml20__MassPerMassUom);
SOAP_FMAC3 enum eml20__MassPerMassUom * SOAP_FMAC4 soap_in_eml20__MassPerMassUom(struct soap*, const char*, enum eml20__MassPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerMassUom(struct soap*, const char*, enum eml20__MassPerMassUom *);

SOAP_FMAC3 enum eml20__MassPerMassUom * SOAP_FMAC4 soap_new_eml20__MassPerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerMassUom(struct soap*, const enum eml20__MassPerMassUom *, const char*, const char*);

inline int soap_write_eml20__MassPerMassUom(struct soap *soap, enum eml20__MassPerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerMassUom(soap, p, "eml20:MassPerMassUom", "eml20:MassPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerMassUom(struct soap *soap, const char *URL, enum eml20__MassPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerMassUom(soap, p, "eml20:MassPerMassUom", "eml20:MassPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerMassUom(struct soap *soap, const char *URL, enum eml20__MassPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerMassUom(soap, p, "eml20:MassPerMassUom", "eml20:MassPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerMassUom(struct soap *soap, const char *URL, enum eml20__MassPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerMassUom(soap, p, "eml20:MassPerMassUom", "eml20:MassPerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerMassUom * SOAP_FMAC4 soap_get_eml20__MassPerMassUom(struct soap*, enum eml20__MassPerMassUom *, const char*, const char*);

inline int soap_read_eml20__MassPerMassUom(struct soap *soap, enum eml20__MassPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerMassUom(struct soap *soap, const char *URL, enum eml20__MassPerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerMassUom(struct soap *soap, enum eml20__MassPerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom_DEFINED

inline void soap_default_eml20__ElectricalResistivityUom(struct soap *soap, enum eml20__ElectricalResistivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricalResistivityUom
	*a = SOAP_DEFAULT_eml20__ElectricalResistivityUom;
#else
	*a = (enum eml20__ElectricalResistivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricalResistivityUom(struct soap*, const char*, int, const enum eml20__ElectricalResistivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricalResistivityUom2s(struct soap*, enum eml20__ElectricalResistivityUom);
SOAP_FMAC3 enum eml20__ElectricalResistivityUom * SOAP_FMAC4 soap_in_eml20__ElectricalResistivityUom(struct soap*, const char*, enum eml20__ElectricalResistivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricalResistivityUom(struct soap*, const char*, enum eml20__ElectricalResistivityUom *);

SOAP_FMAC3 enum eml20__ElectricalResistivityUom * SOAP_FMAC4 soap_new_eml20__ElectricalResistivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricalResistivityUom(struct soap*, const enum eml20__ElectricalResistivityUom *, const char*, const char*);

inline int soap_write_eml20__ElectricalResistivityUom(struct soap *soap, enum eml20__ElectricalResistivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricalResistivityUom(soap, p, "eml20:ElectricalResistivityUom", "eml20:ElectricalResistivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricalResistivityUom(struct soap *soap, const char *URL, enum eml20__ElectricalResistivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricalResistivityUom(soap, p, "eml20:ElectricalResistivityUom", "eml20:ElectricalResistivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricalResistivityUom(struct soap *soap, const char *URL, enum eml20__ElectricalResistivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricalResistivityUom(soap, p, "eml20:ElectricalResistivityUom", "eml20:ElectricalResistivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricalResistivityUom(struct soap *soap, const char *URL, enum eml20__ElectricalResistivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricalResistivityUom(soap, p, "eml20:ElectricalResistivityUom", "eml20:ElectricalResistivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricalResistivityUom * SOAP_FMAC4 soap_get_eml20__ElectricalResistivityUom(struct soap*, enum eml20__ElectricalResistivityUom *, const char*, const char*);

inline int soap_read_eml20__ElectricalResistivityUom(struct soap *soap, enum eml20__ElectricalResistivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricalResistivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricalResistivityUom(struct soap *soap, const char *URL, enum eml20__ElectricalResistivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricalResistivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricalResistivityUom(struct soap *soap, enum eml20__ElectricalResistivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricalResistivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom_DEFINED

inline void soap_default_eml20__MassPerLengthUom(struct soap *soap, enum eml20__MassPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerLengthUom
	*a = SOAP_DEFAULT_eml20__MassPerLengthUom;
#else
	*a = (enum eml20__MassPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerLengthUom(struct soap*, const char*, int, const enum eml20__MassPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerLengthUom2s(struct soap*, enum eml20__MassPerLengthUom);
SOAP_FMAC3 enum eml20__MassPerLengthUom * SOAP_FMAC4 soap_in_eml20__MassPerLengthUom(struct soap*, const char*, enum eml20__MassPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerLengthUom(struct soap*, const char*, enum eml20__MassPerLengthUom *);

SOAP_FMAC3 enum eml20__MassPerLengthUom * SOAP_FMAC4 soap_new_eml20__MassPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerLengthUom(struct soap*, const enum eml20__MassPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__MassPerLengthUom(struct soap *soap, enum eml20__MassPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerLengthUom(soap, p, "eml20:MassPerLengthUom", "eml20:MassPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerLengthUom(soap, p, "eml20:MassPerLengthUom", "eml20:MassPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerLengthUom(soap, p, "eml20:MassPerLengthUom", "eml20:MassPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerLengthUom(soap, p, "eml20:MassPerLengthUom", "eml20:MassPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerLengthUom * SOAP_FMAC4 soap_get_eml20__MassPerLengthUom(struct soap*, enum eml20__MassPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__MassPerLengthUom(struct soap *soap, enum eml20__MassPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerLengthUom(struct soap *soap, enum eml20__MassPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom_DEFINED

inline void soap_default_eml20__LinearThermalExpansionUom(struct soap *soap, enum eml20__LinearThermalExpansionUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LinearThermalExpansionUom
	*a = SOAP_DEFAULT_eml20__LinearThermalExpansionUom;
#else
	*a = (enum eml20__LinearThermalExpansionUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LinearThermalExpansionUom(struct soap*, const char*, int, const enum eml20__LinearThermalExpansionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LinearThermalExpansionUom2s(struct soap*, enum eml20__LinearThermalExpansionUom);
SOAP_FMAC3 enum eml20__LinearThermalExpansionUom * SOAP_FMAC4 soap_in_eml20__LinearThermalExpansionUom(struct soap*, const char*, enum eml20__LinearThermalExpansionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LinearThermalExpansionUom(struct soap*, const char*, enum eml20__LinearThermalExpansionUom *);

SOAP_FMAC3 enum eml20__LinearThermalExpansionUom * SOAP_FMAC4 soap_new_eml20__LinearThermalExpansionUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LinearThermalExpansionUom(struct soap*, const enum eml20__LinearThermalExpansionUom *, const char*, const char*);

inline int soap_write_eml20__LinearThermalExpansionUom(struct soap *soap, enum eml20__LinearThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LinearThermalExpansionUom(soap, p, "eml20:LinearThermalExpansionUom", "eml20:LinearThermalExpansionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LinearThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__LinearThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearThermalExpansionUom(soap, p, "eml20:LinearThermalExpansionUom", "eml20:LinearThermalExpansionUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LinearThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__LinearThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearThermalExpansionUom(soap, p, "eml20:LinearThermalExpansionUom", "eml20:LinearThermalExpansionUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LinearThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__LinearThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LinearThermalExpansionUom(soap, p, "eml20:LinearThermalExpansionUom", "eml20:LinearThermalExpansionUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LinearThermalExpansionUom * SOAP_FMAC4 soap_get_eml20__LinearThermalExpansionUom(struct soap*, enum eml20__LinearThermalExpansionUom *, const char*, const char*);

inline int soap_read_eml20__LinearThermalExpansionUom(struct soap *soap, enum eml20__LinearThermalExpansionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LinearThermalExpansionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LinearThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__LinearThermalExpansionUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LinearThermalExpansionUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LinearThermalExpansionUom(struct soap *soap, enum eml20__LinearThermalExpansionUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LinearThermalExpansionUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom_DEFINED

inline void soap_default_eml20__ThermodynamicTemperatureUom(struct soap *soap, enum eml20__ThermodynamicTemperatureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermodynamicTemperatureUom
	*a = SOAP_DEFAULT_eml20__ThermodynamicTemperatureUom;
#else
	*a = (enum eml20__ThermodynamicTemperatureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermodynamicTemperatureUom(struct soap*, const char*, int, const enum eml20__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermodynamicTemperatureUom2s(struct soap*, enum eml20__ThermodynamicTemperatureUom);
SOAP_FMAC3 enum eml20__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_in_eml20__ThermodynamicTemperatureUom(struct soap*, const char*, enum eml20__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermodynamicTemperatureUom(struct soap*, const char*, enum eml20__ThermodynamicTemperatureUom *);

SOAP_FMAC3 enum eml20__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_new_eml20__ThermodynamicTemperatureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermodynamicTemperatureUom(struct soap*, const enum eml20__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_write_eml20__ThermodynamicTemperatureUom(struct soap *soap, enum eml20__ThermodynamicTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermodynamicTemperatureUom(soap, p, "eml20:ThermodynamicTemperatureUom", "eml20:ThermodynamicTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermodynamicTemperatureUom(struct soap *soap, const char *URL, enum eml20__ThermodynamicTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermodynamicTemperatureUom(soap, p, "eml20:ThermodynamicTemperatureUom", "eml20:ThermodynamicTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermodynamicTemperatureUom(struct soap *soap, const char *URL, enum eml20__ThermodynamicTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermodynamicTemperatureUom(soap, p, "eml20:ThermodynamicTemperatureUom", "eml20:ThermodynamicTemperatureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermodynamicTemperatureUom(struct soap *soap, const char *URL, enum eml20__ThermodynamicTemperatureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermodynamicTemperatureUom(soap, p, "eml20:ThermodynamicTemperatureUom", "eml20:ThermodynamicTemperatureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_get_eml20__ThermodynamicTemperatureUom(struct soap*, enum eml20__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_read_eml20__ThermodynamicTemperatureUom(struct soap *soap, enum eml20__ThermodynamicTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermodynamicTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermodynamicTemperatureUom(struct soap *soap, const char *URL, enum eml20__ThermodynamicTemperatureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermodynamicTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermodynamicTemperatureUom(struct soap *soap, enum eml20__ThermodynamicTemperatureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermodynamicTemperatureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom_DEFINED

inline void soap_default_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstancePerTimePerAreaUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstancePerTimePerAreaUom;
#else
	*a = (enum eml20__AmountOfSubstancePerTimePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstancePerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstancePerTimePerAreaUom2s(struct soap*, enum eml20__AmountOfSubstancePerTimePerAreaUom);
SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimePerAreaUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerTimePerAreaUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimePerAreaUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap*, const enum eml20__AmountOfSubstancePerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p, "eml20:AmountOfSubstancePerTimePerAreaUom", "eml20:AmountOfSubstancePerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p, "eml20:AmountOfSubstancePerTimePerAreaUom", "eml20:AmountOfSubstancePerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p, "eml20:AmountOfSubstancePerTimePerAreaUom", "eml20:AmountOfSubstancePerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p, "eml20:AmountOfSubstancePerTimePerAreaUom", "eml20:AmountOfSubstancePerTimePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimePerAreaUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap*, enum eml20__AmountOfSubstancePerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom_DEFINED

inline void soap_default_eml20__LengthPerMassUom(struct soap *soap, enum eml20__LengthPerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerMassUom
	*a = SOAP_DEFAULT_eml20__LengthPerMassUom;
#else
	*a = (enum eml20__LengthPerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerMassUom(struct soap*, const char*, int, const enum eml20__LengthPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerMassUom2s(struct soap*, enum eml20__LengthPerMassUom);
SOAP_FMAC3 enum eml20__LengthPerMassUom * SOAP_FMAC4 soap_in_eml20__LengthPerMassUom(struct soap*, const char*, enum eml20__LengthPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerMassUom(struct soap*, const char*, enum eml20__LengthPerMassUom *);

SOAP_FMAC3 enum eml20__LengthPerMassUom * SOAP_FMAC4 soap_new_eml20__LengthPerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerMassUom(struct soap*, const enum eml20__LengthPerMassUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerMassUom(struct soap *soap, enum eml20__LengthPerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerMassUom(soap, p, "eml20:LengthPerMassUom", "eml20:LengthPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerMassUom(struct soap *soap, const char *URL, enum eml20__LengthPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerMassUom(soap, p, "eml20:LengthPerMassUom", "eml20:LengthPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerMassUom(struct soap *soap, const char *URL, enum eml20__LengthPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerMassUom(soap, p, "eml20:LengthPerMassUom", "eml20:LengthPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerMassUom(struct soap *soap, const char *URL, enum eml20__LengthPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerMassUom(soap, p, "eml20:LengthPerMassUom", "eml20:LengthPerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerMassUom * SOAP_FMAC4 soap_get_eml20__LengthPerMassUom(struct soap*, enum eml20__LengthPerMassUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerMassUom(struct soap *soap, enum eml20__LengthPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerMassUom(struct soap *soap, const char *URL, enum eml20__LengthPerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerMassUom(struct soap *soap, enum eml20__LengthPerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom_DEFINED

inline void soap_default_eml20__SpecificHeatCapacityUom(struct soap *soap, enum eml20__SpecificHeatCapacityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__SpecificHeatCapacityUom
	*a = SOAP_DEFAULT_eml20__SpecificHeatCapacityUom;
#else
	*a = (enum eml20__SpecificHeatCapacityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SpecificHeatCapacityUom(struct soap*, const char*, int, const enum eml20__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__SpecificHeatCapacityUom2s(struct soap*, enum eml20__SpecificHeatCapacityUom);
SOAP_FMAC3 enum eml20__SpecificHeatCapacityUom * SOAP_FMAC4 soap_in_eml20__SpecificHeatCapacityUom(struct soap*, const char*, enum eml20__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__SpecificHeatCapacityUom(struct soap*, const char*, enum eml20__SpecificHeatCapacityUom *);

SOAP_FMAC3 enum eml20__SpecificHeatCapacityUom * SOAP_FMAC4 soap_new_eml20__SpecificHeatCapacityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__SpecificHeatCapacityUom(struct soap*, const enum eml20__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_write_eml20__SpecificHeatCapacityUom(struct soap *soap, enum eml20__SpecificHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__SpecificHeatCapacityUom(soap, p, "eml20:SpecificHeatCapacityUom", "eml20:SpecificHeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__SpecificHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__SpecificHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SpecificHeatCapacityUom(soap, p, "eml20:SpecificHeatCapacityUom", "eml20:SpecificHeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SpecificHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__SpecificHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SpecificHeatCapacityUom(soap, p, "eml20:SpecificHeatCapacityUom", "eml20:SpecificHeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SpecificHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__SpecificHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SpecificHeatCapacityUom(soap, p, "eml20:SpecificHeatCapacityUom", "eml20:SpecificHeatCapacityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__SpecificHeatCapacityUom * SOAP_FMAC4 soap_get_eml20__SpecificHeatCapacityUom(struct soap*, enum eml20__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_read_eml20__SpecificHeatCapacityUom(struct soap *soap, enum eml20__SpecificHeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SpecificHeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SpecificHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__SpecificHeatCapacityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SpecificHeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SpecificHeatCapacityUom(struct soap *soap, enum eml20__SpecificHeatCapacityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SpecificHeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom_DEFINED

inline void soap_default_eml20__MassUom(struct soap *soap, enum eml20__MassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassUom
	*a = SOAP_DEFAULT_eml20__MassUom;
#else
	*a = (enum eml20__MassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassUom(struct soap*, const char*, int, const enum eml20__MassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassUom2s(struct soap*, enum eml20__MassUom);
SOAP_FMAC3 enum eml20__MassUom * SOAP_FMAC4 soap_in_eml20__MassUom(struct soap*, const char*, enum eml20__MassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassUom(struct soap*, const char*, enum eml20__MassUom *);

SOAP_FMAC3 enum eml20__MassUom * SOAP_FMAC4 soap_new_eml20__MassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassUom(struct soap*, const enum eml20__MassUom *, const char*, const char*);

inline int soap_write_eml20__MassUom(struct soap *soap, enum eml20__MassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassUom(soap, p, "eml20:MassUom", "eml20:MassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassUom(struct soap *soap, const char *URL, enum eml20__MassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassUom(soap, p, "eml20:MassUom", "eml20:MassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassUom(struct soap *soap, const char *URL, enum eml20__MassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassUom(soap, p, "eml20:MassUom", "eml20:MassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassUom(struct soap *soap, const char *URL, enum eml20__MassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassUom(soap, p, "eml20:MassUom", "eml20:MassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassUom * SOAP_FMAC4 soap_get_eml20__MassUom(struct soap*, enum eml20__MassUom *, const char*, const char*);

inline int soap_read_eml20__MassUom(struct soap *soap, enum eml20__MassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassUom(struct soap *soap, const char *URL, enum eml20__MassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassUom(struct soap *soap, enum eml20__MassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom_DEFINED

inline void soap_default_eml20__ForcePerForceUom(struct soap *soap, enum eml20__ForcePerForceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForcePerForceUom
	*a = SOAP_DEFAULT_eml20__ForcePerForceUom;
#else
	*a = (enum eml20__ForcePerForceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerForceUom(struct soap*, const char*, int, const enum eml20__ForcePerForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForcePerForceUom2s(struct soap*, enum eml20__ForcePerForceUom);
SOAP_FMAC3 enum eml20__ForcePerForceUom * SOAP_FMAC4 soap_in_eml20__ForcePerForceUom(struct soap*, const char*, enum eml20__ForcePerForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForcePerForceUom(struct soap*, const char*, enum eml20__ForcePerForceUom *);

SOAP_FMAC3 enum eml20__ForcePerForceUom * SOAP_FMAC4 soap_new_eml20__ForcePerForceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForcePerForceUom(struct soap*, const enum eml20__ForcePerForceUom *, const char*, const char*);

inline int soap_write_eml20__ForcePerForceUom(struct soap *soap, enum eml20__ForcePerForceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForcePerForceUom(soap, p, "eml20:ForcePerForceUom", "eml20:ForcePerForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerForceUom(struct soap *soap, const char *URL, enum eml20__ForcePerForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerForceUom(soap, p, "eml20:ForcePerForceUom", "eml20:ForcePerForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerForceUom(struct soap *soap, const char *URL, enum eml20__ForcePerForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerForceUom(soap, p, "eml20:ForcePerForceUom", "eml20:ForcePerForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerForceUom(struct soap *soap, const char *URL, enum eml20__ForcePerForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForcePerForceUom(soap, p, "eml20:ForcePerForceUom", "eml20:ForcePerForceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForcePerForceUom * SOAP_FMAC4 soap_get_eml20__ForcePerForceUom(struct soap*, enum eml20__ForcePerForceUom *, const char*, const char*);

inline int soap_read_eml20__ForcePerForceUom(struct soap *soap, enum eml20__ForcePerForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerForceUom(struct soap *soap, const char *URL, enum eml20__ForcePerForceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerForceUom(struct soap *soap, enum eml20__ForcePerForceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom_DEFINED

inline void soap_default_eml20__ThermalResistanceUom(struct soap *soap, enum eml20__ThermalResistanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermalResistanceUom
	*a = SOAP_DEFAULT_eml20__ThermalResistanceUom;
#else
	*a = (enum eml20__ThermalResistanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalResistanceUom(struct soap*, const char*, int, const enum eml20__ThermalResistanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermalResistanceUom2s(struct soap*, enum eml20__ThermalResistanceUom);
SOAP_FMAC3 enum eml20__ThermalResistanceUom * SOAP_FMAC4 soap_in_eml20__ThermalResistanceUom(struct soap*, const char*, enum eml20__ThermalResistanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermalResistanceUom(struct soap*, const char*, enum eml20__ThermalResistanceUom *);

SOAP_FMAC3 enum eml20__ThermalResistanceUom * SOAP_FMAC4 soap_new_eml20__ThermalResistanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermalResistanceUom(struct soap*, const enum eml20__ThermalResistanceUom *, const char*, const char*);

inline int soap_write_eml20__ThermalResistanceUom(struct soap *soap, enum eml20__ThermalResistanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermalResistanceUom(soap, p, "eml20:ThermalResistanceUom", "eml20:ThermalResistanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalResistanceUom(struct soap *soap, const char *URL, enum eml20__ThermalResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalResistanceUom(soap, p, "eml20:ThermalResistanceUom", "eml20:ThermalResistanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalResistanceUom(struct soap *soap, const char *URL, enum eml20__ThermalResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalResistanceUom(soap, p, "eml20:ThermalResistanceUom", "eml20:ThermalResistanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalResistanceUom(struct soap *soap, const char *URL, enum eml20__ThermalResistanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalResistanceUom(soap, p, "eml20:ThermalResistanceUom", "eml20:ThermalResistanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermalResistanceUom * SOAP_FMAC4 soap_get_eml20__ThermalResistanceUom(struct soap*, enum eml20__ThermalResistanceUom *, const char*, const char*);

inline int soap_read_eml20__ThermalResistanceUom(struct soap *soap, enum eml20__ThermalResistanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalResistanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalResistanceUom(struct soap *soap, const char *URL, enum eml20__ThermalResistanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalResistanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalResistanceUom(struct soap *soap, enum eml20__ThermalResistanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalResistanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom_DEFINED

inline void soap_default_eml20__AreaPerMassUom(struct soap *soap, enum eml20__AreaPerMassUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaPerMassUom
	*a = SOAP_DEFAULT_eml20__AreaPerMassUom;
#else
	*a = (enum eml20__AreaPerMassUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerMassUom(struct soap*, const char*, int, const enum eml20__AreaPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaPerMassUom2s(struct soap*, enum eml20__AreaPerMassUom);
SOAP_FMAC3 enum eml20__AreaPerMassUom * SOAP_FMAC4 soap_in_eml20__AreaPerMassUom(struct soap*, const char*, enum eml20__AreaPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaPerMassUom(struct soap*, const char*, enum eml20__AreaPerMassUom *);

SOAP_FMAC3 enum eml20__AreaPerMassUom * SOAP_FMAC4 soap_new_eml20__AreaPerMassUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaPerMassUom(struct soap*, const enum eml20__AreaPerMassUom *, const char*, const char*);

inline int soap_write_eml20__AreaPerMassUom(struct soap *soap, enum eml20__AreaPerMassUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaPerMassUom(soap, p, "eml20:AreaPerMassUom", "eml20:AreaPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerMassUom(struct soap *soap, const char *URL, enum eml20__AreaPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerMassUom(soap, p, "eml20:AreaPerMassUom", "eml20:AreaPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerMassUom(struct soap *soap, const char *URL, enum eml20__AreaPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerMassUom(soap, p, "eml20:AreaPerMassUom", "eml20:AreaPerMassUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerMassUom(struct soap *soap, const char *URL, enum eml20__AreaPerMassUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerMassUom(soap, p, "eml20:AreaPerMassUom", "eml20:AreaPerMassUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaPerMassUom * SOAP_FMAC4 soap_get_eml20__AreaPerMassUom(struct soap*, enum eml20__AreaPerMassUom *, const char*, const char*);

inline int soap_read_eml20__AreaPerMassUom(struct soap *soap, enum eml20__AreaPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerMassUom(struct soap *soap, const char *URL, enum eml20__AreaPerMassUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerMassUom(struct soap *soap, enum eml20__AreaPerMassUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerMassUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom_DEFINED

inline void soap_default_eml20__LengthUom(struct soap *soap, enum eml20__LengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthUom
	*a = SOAP_DEFAULT_eml20__LengthUom;
#else
	*a = (enum eml20__LengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthUom(struct soap*, const char*, int, const enum eml20__LengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthUom2s(struct soap*, enum eml20__LengthUom);
SOAP_FMAC3 enum eml20__LengthUom * SOAP_FMAC4 soap_in_eml20__LengthUom(struct soap*, const char*, enum eml20__LengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthUom(struct soap*, const char*, enum eml20__LengthUom *);

SOAP_FMAC3 enum eml20__LengthUom * SOAP_FMAC4 soap_new_eml20__LengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthUom(struct soap*, const enum eml20__LengthUom *, const char*, const char*);

inline int soap_write_eml20__LengthUom(struct soap *soap, enum eml20__LengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthUom(soap, p, "eml20:LengthUom", "eml20:LengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthUom(struct soap *soap, const char *URL, enum eml20__LengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthUom(soap, p, "eml20:LengthUom", "eml20:LengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthUom(struct soap *soap, const char *URL, enum eml20__LengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthUom(soap, p, "eml20:LengthUom", "eml20:LengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthUom(struct soap *soap, const char *URL, enum eml20__LengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthUom(soap, p, "eml20:LengthUom", "eml20:LengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthUom * SOAP_FMAC4 soap_get_eml20__LengthUom(struct soap*, enum eml20__LengthUom *, const char*, const char*);

inline int soap_read_eml20__LengthUom(struct soap *soap, enum eml20__LengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthUom(struct soap *soap, const char *URL, enum eml20__LengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthUom(struct soap *soap, enum eml20__LengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom_DEFINED

inline void soap_default_eml20__VolumePerTimeUom(struct soap *soap, enum eml20__VolumePerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimeUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimeUom;
#else
	*a = (enum eml20__VolumePerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimeUom(struct soap*, const char*, int, const enum eml20__VolumePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimeUom2s(struct soap*, enum eml20__VolumePerTimeUom);
SOAP_FMAC3 enum eml20__VolumePerTimeUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimeUom(struct soap*, const char*, enum eml20__VolumePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimeUom(struct soap*, const char*, enum eml20__VolumePerTimeUom *);

SOAP_FMAC3 enum eml20__VolumePerTimeUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimeUom(struct soap*, const enum eml20__VolumePerTimeUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimeUom(struct soap *soap, enum eml20__VolumePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeUom(soap, p, "eml20:VolumePerTimeUom", "eml20:VolumePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeUom(soap, p, "eml20:VolumePerTimeUom", "eml20:VolumePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeUom(soap, p, "eml20:VolumePerTimeUom", "eml20:VolumePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeUom(soap, p, "eml20:VolumePerTimeUom", "eml20:VolumePerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimeUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimeUom(struct soap*, enum eml20__VolumePerTimeUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimeUom(struct soap *soap, enum eml20__VolumePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimeUom(struct soap *soap, enum eml20__VolumePerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom_DEFINED

inline void soap_default_eml20__MagneticFieldStrengthUom(struct soap *soap, enum eml20__MagneticFieldStrengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticFieldStrengthUom
	*a = SOAP_DEFAULT_eml20__MagneticFieldStrengthUom;
#else
	*a = (enum eml20__MagneticFieldStrengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFieldStrengthUom(struct soap*, const char*, int, const enum eml20__MagneticFieldStrengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticFieldStrengthUom2s(struct soap*, enum eml20__MagneticFieldStrengthUom);
SOAP_FMAC3 enum eml20__MagneticFieldStrengthUom * SOAP_FMAC4 soap_in_eml20__MagneticFieldStrengthUom(struct soap*, const char*, enum eml20__MagneticFieldStrengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticFieldStrengthUom(struct soap*, const char*, enum eml20__MagneticFieldStrengthUom *);

SOAP_FMAC3 enum eml20__MagneticFieldStrengthUom * SOAP_FMAC4 soap_new_eml20__MagneticFieldStrengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticFieldStrengthUom(struct soap*, const enum eml20__MagneticFieldStrengthUom *, const char*, const char*);

inline int soap_write_eml20__MagneticFieldStrengthUom(struct soap *soap, enum eml20__MagneticFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticFieldStrengthUom(soap, p, "eml20:MagneticFieldStrengthUom", "eml20:MagneticFieldStrengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFieldStrengthUom(soap, p, "eml20:MagneticFieldStrengthUom", "eml20:MagneticFieldStrengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFieldStrengthUom(soap, p, "eml20:MagneticFieldStrengthUom", "eml20:MagneticFieldStrengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFieldStrengthUom(soap, p, "eml20:MagneticFieldStrengthUom", "eml20:MagneticFieldStrengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticFieldStrengthUom * SOAP_FMAC4 soap_get_eml20__MagneticFieldStrengthUom(struct soap*, enum eml20__MagneticFieldStrengthUom *, const char*, const char*);

inline int soap_read_eml20__MagneticFieldStrengthUom(struct soap *soap, enum eml20__MagneticFieldStrengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFieldStrengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFieldStrengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFieldStrengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFieldStrengthUom(struct soap *soap, enum eml20__MagneticFieldStrengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFieldStrengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom_DEFINED

inline void soap_default_eml20__MagneticVectorPotentialUom(struct soap *soap, enum eml20__MagneticVectorPotentialUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticVectorPotentialUom
	*a = SOAP_DEFAULT_eml20__MagneticVectorPotentialUom;
#else
	*a = (enum eml20__MagneticVectorPotentialUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticVectorPotentialUom(struct soap*, const char*, int, const enum eml20__MagneticVectorPotentialUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticVectorPotentialUom2s(struct soap*, enum eml20__MagneticVectorPotentialUom);
SOAP_FMAC3 enum eml20__MagneticVectorPotentialUom * SOAP_FMAC4 soap_in_eml20__MagneticVectorPotentialUom(struct soap*, const char*, enum eml20__MagneticVectorPotentialUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticVectorPotentialUom(struct soap*, const char*, enum eml20__MagneticVectorPotentialUom *);

SOAP_FMAC3 enum eml20__MagneticVectorPotentialUom * SOAP_FMAC4 soap_new_eml20__MagneticVectorPotentialUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticVectorPotentialUom(struct soap*, const enum eml20__MagneticVectorPotentialUom *, const char*, const char*);

inline int soap_write_eml20__MagneticVectorPotentialUom(struct soap *soap, enum eml20__MagneticVectorPotentialUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticVectorPotentialUom(soap, p, "eml20:MagneticVectorPotentialUom", "eml20:MagneticVectorPotentialUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticVectorPotentialUom(struct soap *soap, const char *URL, enum eml20__MagneticVectorPotentialUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticVectorPotentialUom(soap, p, "eml20:MagneticVectorPotentialUom", "eml20:MagneticVectorPotentialUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticVectorPotentialUom(struct soap *soap, const char *URL, enum eml20__MagneticVectorPotentialUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticVectorPotentialUom(soap, p, "eml20:MagneticVectorPotentialUom", "eml20:MagneticVectorPotentialUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticVectorPotentialUom(struct soap *soap, const char *URL, enum eml20__MagneticVectorPotentialUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticVectorPotentialUom(soap, p, "eml20:MagneticVectorPotentialUom", "eml20:MagneticVectorPotentialUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticVectorPotentialUom * SOAP_FMAC4 soap_get_eml20__MagneticVectorPotentialUom(struct soap*, enum eml20__MagneticVectorPotentialUom *, const char*, const char*);

inline int soap_read_eml20__MagneticVectorPotentialUom(struct soap *soap, enum eml20__MagneticVectorPotentialUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticVectorPotentialUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticVectorPotentialUom(struct soap *soap, const char *URL, enum eml20__MagneticVectorPotentialUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticVectorPotentialUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticVectorPotentialUom(struct soap *soap, enum eml20__MagneticVectorPotentialUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticVectorPotentialUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom_DEFINED

inline void soap_default_eml20__LengthPerPressureUom(struct soap *soap, enum eml20__LengthPerPressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerPressureUom
	*a = SOAP_DEFAULT_eml20__LengthPerPressureUom;
#else
	*a = (enum eml20__LengthPerPressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerPressureUom(struct soap*, const char*, int, const enum eml20__LengthPerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerPressureUom2s(struct soap*, enum eml20__LengthPerPressureUom);
SOAP_FMAC3 enum eml20__LengthPerPressureUom * SOAP_FMAC4 soap_in_eml20__LengthPerPressureUom(struct soap*, const char*, enum eml20__LengthPerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerPressureUom(struct soap*, const char*, enum eml20__LengthPerPressureUom *);

SOAP_FMAC3 enum eml20__LengthPerPressureUom * SOAP_FMAC4 soap_new_eml20__LengthPerPressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerPressureUom(struct soap*, const enum eml20__LengthPerPressureUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerPressureUom(struct soap *soap, enum eml20__LengthPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerPressureUom(soap, p, "eml20:LengthPerPressureUom", "eml20:LengthPerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerPressureUom(struct soap *soap, const char *URL, enum eml20__LengthPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerPressureUom(soap, p, "eml20:LengthPerPressureUom", "eml20:LengthPerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerPressureUom(struct soap *soap, const char *URL, enum eml20__LengthPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerPressureUom(soap, p, "eml20:LengthPerPressureUom", "eml20:LengthPerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerPressureUom(struct soap *soap, const char *URL, enum eml20__LengthPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerPressureUom(soap, p, "eml20:LengthPerPressureUom", "eml20:LengthPerPressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerPressureUom * SOAP_FMAC4 soap_get_eml20__LengthPerPressureUom(struct soap*, enum eml20__LengthPerPressureUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerPressureUom(struct soap *soap, enum eml20__LengthPerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerPressureUom(struct soap *soap, const char *URL, enum eml20__LengthPerPressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerPressureUom(struct soap *soap, enum eml20__LengthPerPressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom_DEFINED

inline void soap_default_eml20__ElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ElectricPotentialDifferenceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricPotentialDifferenceUom
	*a = SOAP_DEFAULT_eml20__ElectricPotentialDifferenceUom;
#else
	*a = (enum eml20__ElectricPotentialDifferenceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricPotentialDifferenceUom(struct soap*, const char*, int, const enum eml20__ElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricPotentialDifferenceUom2s(struct soap*, enum eml20__ElectricPotentialDifferenceUom);
SOAP_FMAC3 enum eml20__ElectricPotentialDifferenceUom * SOAP_FMAC4 soap_in_eml20__ElectricPotentialDifferenceUom(struct soap*, const char*, enum eml20__ElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricPotentialDifferenceUom(struct soap*, const char*, enum eml20__ElectricPotentialDifferenceUom *);

SOAP_FMAC3 enum eml20__ElectricPotentialDifferenceUom * SOAP_FMAC4 soap_new_eml20__ElectricPotentialDifferenceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricPotentialDifferenceUom(struct soap*, const enum eml20__ElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_write_eml20__ElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricPotentialDifferenceUom(soap, p, "eml20:ElectricPotentialDifferenceUom", "eml20:ElectricPotentialDifferenceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricPotentialDifferenceUom(soap, p, "eml20:ElectricPotentialDifferenceUom", "eml20:ElectricPotentialDifferenceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricPotentialDifferenceUom(soap, p, "eml20:ElectricPotentialDifferenceUom", "eml20:ElectricPotentialDifferenceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricPotentialDifferenceUom(soap, p, "eml20:ElectricPotentialDifferenceUom", "eml20:ElectricPotentialDifferenceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricPotentialDifferenceUom * SOAP_FMAC4 soap_get_eml20__ElectricPotentialDifferenceUom(struct soap*, enum eml20__ElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_read_eml20__ElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ElectricPotentialDifferenceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricPotentialDifferenceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ElectricPotentialDifferenceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricPotentialDifferenceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ElectricPotentialDifferenceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricPotentialDifferenceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom_DEFINED

inline void soap_default_eml20__ActivityOfRadioactivityUom(struct soap *soap, enum eml20__ActivityOfRadioactivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ActivityOfRadioactivityUom
	*a = SOAP_DEFAULT_eml20__ActivityOfRadioactivityUom;
#else
	*a = (enum eml20__ActivityOfRadioactivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ActivityOfRadioactivityUom(struct soap*, const char*, int, const enum eml20__ActivityOfRadioactivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ActivityOfRadioactivityUom2s(struct soap*, enum eml20__ActivityOfRadioactivityUom);
SOAP_FMAC3 enum eml20__ActivityOfRadioactivityUom * SOAP_FMAC4 soap_in_eml20__ActivityOfRadioactivityUom(struct soap*, const char*, enum eml20__ActivityOfRadioactivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ActivityOfRadioactivityUom(struct soap*, const char*, enum eml20__ActivityOfRadioactivityUom *);

SOAP_FMAC3 enum eml20__ActivityOfRadioactivityUom * SOAP_FMAC4 soap_new_eml20__ActivityOfRadioactivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ActivityOfRadioactivityUom(struct soap*, const enum eml20__ActivityOfRadioactivityUom *, const char*, const char*);

inline int soap_write_eml20__ActivityOfRadioactivityUom(struct soap *soap, enum eml20__ActivityOfRadioactivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ActivityOfRadioactivityUom(soap, p, "eml20:ActivityOfRadioactivityUom", "eml20:ActivityOfRadioactivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ActivityOfRadioactivityUom(struct soap *soap, const char *URL, enum eml20__ActivityOfRadioactivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ActivityOfRadioactivityUom(soap, p, "eml20:ActivityOfRadioactivityUom", "eml20:ActivityOfRadioactivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ActivityOfRadioactivityUom(struct soap *soap, const char *URL, enum eml20__ActivityOfRadioactivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ActivityOfRadioactivityUom(soap, p, "eml20:ActivityOfRadioactivityUom", "eml20:ActivityOfRadioactivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ActivityOfRadioactivityUom(struct soap *soap, const char *URL, enum eml20__ActivityOfRadioactivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ActivityOfRadioactivityUom(soap, p, "eml20:ActivityOfRadioactivityUom", "eml20:ActivityOfRadioactivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ActivityOfRadioactivityUom * SOAP_FMAC4 soap_get_eml20__ActivityOfRadioactivityUom(struct soap*, enum eml20__ActivityOfRadioactivityUom *, const char*, const char*);

inline int soap_read_eml20__ActivityOfRadioactivityUom(struct soap *soap, enum eml20__ActivityOfRadioactivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ActivityOfRadioactivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ActivityOfRadioactivityUom(struct soap *soap, const char *URL, enum eml20__ActivityOfRadioactivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ActivityOfRadioactivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ActivityOfRadioactivityUom(struct soap *soap, enum eml20__ActivityOfRadioactivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ActivityOfRadioactivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom_DEFINED

inline void soap_default_eml20__PressurePerVolumeUom(struct soap *soap, enum eml20__PressurePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressurePerVolumeUom
	*a = SOAP_DEFAULT_eml20__PressurePerVolumeUom;
#else
	*a = (enum eml20__PressurePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressurePerVolumeUom(struct soap*, const char*, int, const enum eml20__PressurePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressurePerVolumeUom2s(struct soap*, enum eml20__PressurePerVolumeUom);
SOAP_FMAC3 enum eml20__PressurePerVolumeUom * SOAP_FMAC4 soap_in_eml20__PressurePerVolumeUom(struct soap*, const char*, enum eml20__PressurePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressurePerVolumeUom(struct soap*, const char*, enum eml20__PressurePerVolumeUom *);

SOAP_FMAC3 enum eml20__PressurePerVolumeUom * SOAP_FMAC4 soap_new_eml20__PressurePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressurePerVolumeUom(struct soap*, const enum eml20__PressurePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__PressurePerVolumeUom(struct soap *soap, enum eml20__PressurePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressurePerVolumeUom(soap, p, "eml20:PressurePerVolumeUom", "eml20:PressurePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressurePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressurePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerVolumeUom(soap, p, "eml20:PressurePerVolumeUom", "eml20:PressurePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressurePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressurePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerVolumeUom(soap, p, "eml20:PressurePerVolumeUom", "eml20:PressurePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressurePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressurePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerVolumeUom(soap, p, "eml20:PressurePerVolumeUom", "eml20:PressurePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressurePerVolumeUom * SOAP_FMAC4 soap_get_eml20__PressurePerVolumeUom(struct soap*, enum eml20__PressurePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__PressurePerVolumeUom(struct soap *soap, enum eml20__PressurePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressurePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressurePerVolumeUom(struct soap *soap, const char *URL, enum eml20__PressurePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressurePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressurePerVolumeUom(struct soap *soap, enum eml20__PressurePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressurePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom_DEFINED

inline void soap_default_eml20__PowerUom(struct soap *soap, enum eml20__PowerUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PowerUom
	*a = SOAP_DEFAULT_eml20__PowerUom;
#else
	*a = (enum eml20__PowerUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerUom(struct soap*, const char*, int, const enum eml20__PowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PowerUom2s(struct soap*, enum eml20__PowerUom);
SOAP_FMAC3 enum eml20__PowerUom * SOAP_FMAC4 soap_in_eml20__PowerUom(struct soap*, const char*, enum eml20__PowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PowerUom(struct soap*, const char*, enum eml20__PowerUom *);

SOAP_FMAC3 enum eml20__PowerUom * SOAP_FMAC4 soap_new_eml20__PowerUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PowerUom(struct soap*, const enum eml20__PowerUom *, const char*, const char*);

inline int soap_write_eml20__PowerUom(struct soap *soap, enum eml20__PowerUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PowerUom(soap, p, "eml20:PowerUom", "eml20:PowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerUom(struct soap *soap, const char *URL, enum eml20__PowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerUom(soap, p, "eml20:PowerUom", "eml20:PowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerUom(struct soap *soap, const char *URL, enum eml20__PowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerUom(soap, p, "eml20:PowerUom", "eml20:PowerUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerUom(struct soap *soap, const char *URL, enum eml20__PowerUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PowerUom(soap, p, "eml20:PowerUom", "eml20:PowerUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PowerUom * SOAP_FMAC4 soap_get_eml20__PowerUom(struct soap*, enum eml20__PowerUom *, const char*, const char*);

inline int soap_read_eml20__PowerUom(struct soap *soap, enum eml20__PowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerUom(struct soap *soap, const char *URL, enum eml20__PowerUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerUom(struct soap *soap, enum eml20__PowerUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom_DEFINED

inline void soap_default_eml20__LuminousEfficacyUom(struct soap *soap, enum eml20__LuminousEfficacyUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LuminousEfficacyUom
	*a = SOAP_DEFAULT_eml20__LuminousEfficacyUom;
#else
	*a = (enum eml20__LuminousEfficacyUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousEfficacyUom(struct soap*, const char*, int, const enum eml20__LuminousEfficacyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LuminousEfficacyUom2s(struct soap*, enum eml20__LuminousEfficacyUom);
SOAP_FMAC3 enum eml20__LuminousEfficacyUom * SOAP_FMAC4 soap_in_eml20__LuminousEfficacyUom(struct soap*, const char*, enum eml20__LuminousEfficacyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LuminousEfficacyUom(struct soap*, const char*, enum eml20__LuminousEfficacyUom *);

SOAP_FMAC3 enum eml20__LuminousEfficacyUom * SOAP_FMAC4 soap_new_eml20__LuminousEfficacyUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LuminousEfficacyUom(struct soap*, const enum eml20__LuminousEfficacyUom *, const char*, const char*);

inline int soap_write_eml20__LuminousEfficacyUom(struct soap *soap, enum eml20__LuminousEfficacyUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LuminousEfficacyUom(soap, p, "eml20:LuminousEfficacyUom", "eml20:LuminousEfficacyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousEfficacyUom(struct soap *soap, const char *URL, enum eml20__LuminousEfficacyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousEfficacyUom(soap, p, "eml20:LuminousEfficacyUom", "eml20:LuminousEfficacyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousEfficacyUom(struct soap *soap, const char *URL, enum eml20__LuminousEfficacyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousEfficacyUom(soap, p, "eml20:LuminousEfficacyUom", "eml20:LuminousEfficacyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousEfficacyUom(struct soap *soap, const char *URL, enum eml20__LuminousEfficacyUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminousEfficacyUom(soap, p, "eml20:LuminousEfficacyUom", "eml20:LuminousEfficacyUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LuminousEfficacyUom * SOAP_FMAC4 soap_get_eml20__LuminousEfficacyUom(struct soap*, enum eml20__LuminousEfficacyUom *, const char*, const char*);

inline int soap_read_eml20__LuminousEfficacyUom(struct soap *soap, enum eml20__LuminousEfficacyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousEfficacyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousEfficacyUom(struct soap *soap, const char *URL, enum eml20__LuminousEfficacyUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousEfficacyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousEfficacyUom(struct soap *soap, enum eml20__LuminousEfficacyUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousEfficacyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom_DEFINED

inline void soap_default_eml20__ElectricChargeUom(struct soap *soap, enum eml20__ElectricChargeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricChargeUom
	*a = SOAP_DEFAULT_eml20__ElectricChargeUom;
#else
	*a = (enum eml20__ElectricChargeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargeUom(struct soap*, const char*, int, const enum eml20__ElectricChargeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricChargeUom2s(struct soap*, enum eml20__ElectricChargeUom);
SOAP_FMAC3 enum eml20__ElectricChargeUom * SOAP_FMAC4 soap_in_eml20__ElectricChargeUom(struct soap*, const char*, enum eml20__ElectricChargeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricChargeUom(struct soap*, const char*, enum eml20__ElectricChargeUom *);

SOAP_FMAC3 enum eml20__ElectricChargeUom * SOAP_FMAC4 soap_new_eml20__ElectricChargeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricChargeUom(struct soap*, const enum eml20__ElectricChargeUom *, const char*, const char*);

inline int soap_write_eml20__ElectricChargeUom(struct soap *soap, enum eml20__ElectricChargeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargeUom(soap, p, "eml20:ElectricChargeUom", "eml20:ElectricChargeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargeUom(soap, p, "eml20:ElectricChargeUom", "eml20:ElectricChargeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargeUom(soap, p, "eml20:ElectricChargeUom", "eml20:ElectricChargeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargeUom(soap, p, "eml20:ElectricChargeUom", "eml20:ElectricChargeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricChargeUom * SOAP_FMAC4 soap_get_eml20__ElectricChargeUom(struct soap*, enum eml20__ElectricChargeUom *, const char*, const char*);

inline int soap_read_eml20__ElectricChargeUom(struct soap *soap, enum eml20__ElectricChargeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargeUom(struct soap *soap, const char *URL, enum eml20__ElectricChargeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargeUom(struct soap *soap, enum eml20__ElectricChargeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom_DEFINED

inline void soap_default_eml20__PressurePerTimeUom(struct soap *soap, enum eml20__PressurePerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressurePerTimeUom
	*a = SOAP_DEFAULT_eml20__PressurePerTimeUom;
#else
	*a = (enum eml20__PressurePerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressurePerTimeUom(struct soap*, const char*, int, const enum eml20__PressurePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressurePerTimeUom2s(struct soap*, enum eml20__PressurePerTimeUom);
SOAP_FMAC3 enum eml20__PressurePerTimeUom * SOAP_FMAC4 soap_in_eml20__PressurePerTimeUom(struct soap*, const char*, enum eml20__PressurePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressurePerTimeUom(struct soap*, const char*, enum eml20__PressurePerTimeUom *);

SOAP_FMAC3 enum eml20__PressurePerTimeUom * SOAP_FMAC4 soap_new_eml20__PressurePerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressurePerTimeUom(struct soap*, const enum eml20__PressurePerTimeUom *, const char*, const char*);

inline int soap_write_eml20__PressurePerTimeUom(struct soap *soap, enum eml20__PressurePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressurePerTimeUom(soap, p, "eml20:PressurePerTimeUom", "eml20:PressurePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressurePerTimeUom(struct soap *soap, const char *URL, enum eml20__PressurePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerTimeUom(soap, p, "eml20:PressurePerTimeUom", "eml20:PressurePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressurePerTimeUom(struct soap *soap, const char *URL, enum eml20__PressurePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerTimeUom(soap, p, "eml20:PressurePerTimeUom", "eml20:PressurePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressurePerTimeUom(struct soap *soap, const char *URL, enum eml20__PressurePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressurePerTimeUom(soap, p, "eml20:PressurePerTimeUom", "eml20:PressurePerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressurePerTimeUom * SOAP_FMAC4 soap_get_eml20__PressurePerTimeUom(struct soap*, enum eml20__PressurePerTimeUom *, const char*, const char*);

inline int soap_read_eml20__PressurePerTimeUom(struct soap *soap, enum eml20__PressurePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressurePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressurePerTimeUom(struct soap *soap, const char *URL, enum eml20__PressurePerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressurePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressurePerTimeUom(struct soap *soap, enum eml20__PressurePerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressurePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom_DEFINED

inline void soap_default_eml20__ReciprocalAreaUom(struct soap *soap, enum eml20__ReciprocalAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalAreaUom
	*a = SOAP_DEFAULT_eml20__ReciprocalAreaUom;
#else
	*a = (enum eml20__ReciprocalAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalAreaUom(struct soap*, const char*, int, const enum eml20__ReciprocalAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalAreaUom2s(struct soap*, enum eml20__ReciprocalAreaUom);
SOAP_FMAC3 enum eml20__ReciprocalAreaUom * SOAP_FMAC4 soap_in_eml20__ReciprocalAreaUom(struct soap*, const char*, enum eml20__ReciprocalAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalAreaUom(struct soap*, const char*, enum eml20__ReciprocalAreaUom *);

SOAP_FMAC3 enum eml20__ReciprocalAreaUom * SOAP_FMAC4 soap_new_eml20__ReciprocalAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalAreaUom(struct soap*, const enum eml20__ReciprocalAreaUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalAreaUom(struct soap *soap, enum eml20__ReciprocalAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalAreaUom(soap, p, "eml20:ReciprocalAreaUom", "eml20:ReciprocalAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalAreaUom(struct soap *soap, const char *URL, enum eml20__ReciprocalAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalAreaUom(soap, p, "eml20:ReciprocalAreaUom", "eml20:ReciprocalAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalAreaUom(struct soap *soap, const char *URL, enum eml20__ReciprocalAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalAreaUom(soap, p, "eml20:ReciprocalAreaUom", "eml20:ReciprocalAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalAreaUom(struct soap *soap, const char *URL, enum eml20__ReciprocalAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalAreaUom(soap, p, "eml20:ReciprocalAreaUom", "eml20:ReciprocalAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalAreaUom * SOAP_FMAC4 soap_get_eml20__ReciprocalAreaUom(struct soap*, enum eml20__ReciprocalAreaUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalAreaUom(struct soap *soap, enum eml20__ReciprocalAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalAreaUom(struct soap *soap, const char *URL, enum eml20__ReciprocalAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalAreaUom(struct soap *soap, enum eml20__ReciprocalAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom_DEFINED

inline void soap_default_eml20__ReciprocalForceUom(struct soap *soap, enum eml20__ReciprocalForceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalForceUom
	*a = SOAP_DEFAULT_eml20__ReciprocalForceUom;
#else
	*a = (enum eml20__ReciprocalForceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalForceUom(struct soap*, const char*, int, const enum eml20__ReciprocalForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalForceUom2s(struct soap*, enum eml20__ReciprocalForceUom);
SOAP_FMAC3 enum eml20__ReciprocalForceUom * SOAP_FMAC4 soap_in_eml20__ReciprocalForceUom(struct soap*, const char*, enum eml20__ReciprocalForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalForceUom(struct soap*, const char*, enum eml20__ReciprocalForceUom *);

SOAP_FMAC3 enum eml20__ReciprocalForceUom * SOAP_FMAC4 soap_new_eml20__ReciprocalForceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalForceUom(struct soap*, const enum eml20__ReciprocalForceUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalForceUom(struct soap *soap, enum eml20__ReciprocalForceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalForceUom(soap, p, "eml20:ReciprocalForceUom", "eml20:ReciprocalForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalForceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalForceUom(soap, p, "eml20:ReciprocalForceUom", "eml20:ReciprocalForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalForceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalForceUom(soap, p, "eml20:ReciprocalForceUom", "eml20:ReciprocalForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalForceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalForceUom(soap, p, "eml20:ReciprocalForceUom", "eml20:ReciprocalForceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalForceUom * SOAP_FMAC4 soap_get_eml20__ReciprocalForceUom(struct soap*, enum eml20__ReciprocalForceUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalForceUom(struct soap *soap, enum eml20__ReciprocalForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalForceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalForceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalForceUom(struct soap *soap, enum eml20__ReciprocalForceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml20__VolumePerTimePerPressureLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerPressureLengthUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerPressureLengthUom;
#else
	*a = (enum eml20__VolumePerTimePerPressureLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerPressureLengthUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerPressureLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerPressureLengthUom2s(struct soap*, enum eml20__VolumePerTimePerPressureLengthUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerPressureLengthUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerPressureLengthUom(struct soap*, const char*, enum eml20__VolumePerTimePerPressureLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerPressureLengthUom(struct soap*, const char*, enum eml20__VolumePerTimePerPressureLengthUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerPressureLengthUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerPressureLengthUom(struct soap*, const enum eml20__VolumePerTimePerPressureLengthUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml20__VolumePerTimePerPressureLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureLengthUom(soap, p, "eml20:VolumePerTimePerPressureLengthUom", "eml20:VolumePerTimePerPressureLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureLengthUom(soap, p, "eml20:VolumePerTimePerPressureLengthUom", "eml20:VolumePerTimePerPressureLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureLengthUom(soap, p, "eml20:VolumePerTimePerPressureLengthUom", "eml20:VolumePerTimePerPressureLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerPressureLengthUom(soap, p, "eml20:VolumePerTimePerPressureLengthUom", "eml20:VolumePerTimePerPressureLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerPressureLengthUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerPressureLengthUom(struct soap*, enum eml20__VolumePerTimePerPressureLengthUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml20__VolumePerTimePerPressureLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerPressureLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerPressureLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml20__VolumePerTimePerPressureLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom_DEFINED

inline void soap_default_eml20__KinematicViscosityUom(struct soap *soap, enum eml20__KinematicViscosityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__KinematicViscosityUom
	*a = SOAP_DEFAULT_eml20__KinematicViscosityUom;
#else
	*a = (enum eml20__KinematicViscosityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__KinematicViscosityUom(struct soap*, const char*, int, const enum eml20__KinematicViscosityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__KinematicViscosityUom2s(struct soap*, enum eml20__KinematicViscosityUom);
SOAP_FMAC3 enum eml20__KinematicViscosityUom * SOAP_FMAC4 soap_in_eml20__KinematicViscosityUom(struct soap*, const char*, enum eml20__KinematicViscosityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__KinematicViscosityUom(struct soap*, const char*, enum eml20__KinematicViscosityUom *);

SOAP_FMAC3 enum eml20__KinematicViscosityUom * SOAP_FMAC4 soap_new_eml20__KinematicViscosityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__KinematicViscosityUom(struct soap*, const enum eml20__KinematicViscosityUom *, const char*, const char*);

inline int soap_write_eml20__KinematicViscosityUom(struct soap *soap, enum eml20__KinematicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__KinematicViscosityUom(soap, p, "eml20:KinematicViscosityUom", "eml20:KinematicViscosityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__KinematicViscosityUom(struct soap *soap, const char *URL, enum eml20__KinematicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__KinematicViscosityUom(soap, p, "eml20:KinematicViscosityUom", "eml20:KinematicViscosityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__KinematicViscosityUom(struct soap *soap, const char *URL, enum eml20__KinematicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__KinematicViscosityUom(soap, p, "eml20:KinematicViscosityUom", "eml20:KinematicViscosityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__KinematicViscosityUom(struct soap *soap, const char *URL, enum eml20__KinematicViscosityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__KinematicViscosityUom(soap, p, "eml20:KinematicViscosityUom", "eml20:KinematicViscosityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__KinematicViscosityUom * SOAP_FMAC4 soap_get_eml20__KinematicViscosityUom(struct soap*, enum eml20__KinematicViscosityUom *, const char*, const char*);

inline int soap_read_eml20__KinematicViscosityUom(struct soap *soap, enum eml20__KinematicViscosityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__KinematicViscosityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__KinematicViscosityUom(struct soap *soap, const char *URL, enum eml20__KinematicViscosityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__KinematicViscosityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__KinematicViscosityUom(struct soap *soap, enum eml20__KinematicViscosityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__KinematicViscosityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom_DEFINED

inline void soap_default_eml20__InductanceUom(struct soap *soap, enum eml20__InductanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__InductanceUom
	*a = SOAP_DEFAULT_eml20__InductanceUom;
#else
	*a = (enum eml20__InductanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__InductanceUom(struct soap*, const char*, int, const enum eml20__InductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__InductanceUom2s(struct soap*, enum eml20__InductanceUom);
SOAP_FMAC3 enum eml20__InductanceUom * SOAP_FMAC4 soap_in_eml20__InductanceUom(struct soap*, const char*, enum eml20__InductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__InductanceUom(struct soap*, const char*, enum eml20__InductanceUom *);

SOAP_FMAC3 enum eml20__InductanceUom * SOAP_FMAC4 soap_new_eml20__InductanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__InductanceUom(struct soap*, const enum eml20__InductanceUom *, const char*, const char*);

inline int soap_write_eml20__InductanceUom(struct soap *soap, enum eml20__InductanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__InductanceUom(soap, p, "eml20:InductanceUom", "eml20:InductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__InductanceUom(struct soap *soap, const char *URL, enum eml20__InductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__InductanceUom(soap, p, "eml20:InductanceUom", "eml20:InductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__InductanceUom(struct soap *soap, const char *URL, enum eml20__InductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__InductanceUom(soap, p, "eml20:InductanceUom", "eml20:InductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__InductanceUom(struct soap *soap, const char *URL, enum eml20__InductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__InductanceUom(soap, p, "eml20:InductanceUom", "eml20:InductanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__InductanceUom * SOAP_FMAC4 soap_get_eml20__InductanceUom(struct soap*, enum eml20__InductanceUom *, const char*, const char*);

inline int soap_read_eml20__InductanceUom(struct soap *soap, enum eml20__InductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__InductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__InductanceUom(struct soap *soap, const char *URL, enum eml20__InductanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__InductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__InductanceUom(struct soap *soap, enum eml20__InductanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__InductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom_DEFINED

inline void soap_default_eml20__DataTransferSpeedUom(struct soap *soap, enum eml20__DataTransferSpeedUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DataTransferSpeedUom
	*a = SOAP_DEFAULT_eml20__DataTransferSpeedUom;
#else
	*a = (enum eml20__DataTransferSpeedUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DataTransferSpeedUom(struct soap*, const char*, int, const enum eml20__DataTransferSpeedUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DataTransferSpeedUom2s(struct soap*, enum eml20__DataTransferSpeedUom);
SOAP_FMAC3 enum eml20__DataTransferSpeedUom * SOAP_FMAC4 soap_in_eml20__DataTransferSpeedUom(struct soap*, const char*, enum eml20__DataTransferSpeedUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DataTransferSpeedUom(struct soap*, const char*, enum eml20__DataTransferSpeedUom *);

SOAP_FMAC3 enum eml20__DataTransferSpeedUom * SOAP_FMAC4 soap_new_eml20__DataTransferSpeedUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DataTransferSpeedUom(struct soap*, const enum eml20__DataTransferSpeedUom *, const char*, const char*);

inline int soap_write_eml20__DataTransferSpeedUom(struct soap *soap, enum eml20__DataTransferSpeedUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DataTransferSpeedUom(soap, p, "eml20:DataTransferSpeedUom", "eml20:DataTransferSpeedUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DataTransferSpeedUom(struct soap *soap, const char *URL, enum eml20__DataTransferSpeedUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DataTransferSpeedUom(soap, p, "eml20:DataTransferSpeedUom", "eml20:DataTransferSpeedUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DataTransferSpeedUom(struct soap *soap, const char *URL, enum eml20__DataTransferSpeedUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DataTransferSpeedUom(soap, p, "eml20:DataTransferSpeedUom", "eml20:DataTransferSpeedUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DataTransferSpeedUom(struct soap *soap, const char *URL, enum eml20__DataTransferSpeedUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DataTransferSpeedUom(soap, p, "eml20:DataTransferSpeedUom", "eml20:DataTransferSpeedUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DataTransferSpeedUom * SOAP_FMAC4 soap_get_eml20__DataTransferSpeedUom(struct soap*, enum eml20__DataTransferSpeedUom *, const char*, const char*);

inline int soap_read_eml20__DataTransferSpeedUom(struct soap *soap, enum eml20__DataTransferSpeedUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DataTransferSpeedUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DataTransferSpeedUom(struct soap *soap, const char *URL, enum eml20__DataTransferSpeedUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DataTransferSpeedUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DataTransferSpeedUom(struct soap *soap, enum eml20__DataTransferSpeedUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DataTransferSpeedUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom_DEFINED

inline void soap_default_eml20__PermeabilityLengthUom(struct soap *soap, enum eml20__PermeabilityLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PermeabilityLengthUom
	*a = SOAP_DEFAULT_eml20__PermeabilityLengthUom;
#else
	*a = (enum eml20__PermeabilityLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermeabilityLengthUom(struct soap*, const char*, int, const enum eml20__PermeabilityLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PermeabilityLengthUom2s(struct soap*, enum eml20__PermeabilityLengthUom);
SOAP_FMAC3 enum eml20__PermeabilityLengthUom * SOAP_FMAC4 soap_in_eml20__PermeabilityLengthUom(struct soap*, const char*, enum eml20__PermeabilityLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PermeabilityLengthUom(struct soap*, const char*, enum eml20__PermeabilityLengthUom *);

SOAP_FMAC3 enum eml20__PermeabilityLengthUom * SOAP_FMAC4 soap_new_eml20__PermeabilityLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PermeabilityLengthUom(struct soap*, const enum eml20__PermeabilityLengthUom *, const char*, const char*);

inline int soap_write_eml20__PermeabilityLengthUom(struct soap *soap, enum eml20__PermeabilityLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityLengthUom(soap, p, "eml20:PermeabilityLengthUom", "eml20:PermeabilityLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermeabilityLengthUom(struct soap *soap, const char *URL, enum eml20__PermeabilityLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityLengthUom(soap, p, "eml20:PermeabilityLengthUom", "eml20:PermeabilityLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermeabilityLengthUom(struct soap *soap, const char *URL, enum eml20__PermeabilityLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityLengthUom(soap, p, "eml20:PermeabilityLengthUom", "eml20:PermeabilityLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermeabilityLengthUom(struct soap *soap, const char *URL, enum eml20__PermeabilityLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityLengthUom(soap, p, "eml20:PermeabilityLengthUom", "eml20:PermeabilityLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PermeabilityLengthUom * SOAP_FMAC4 soap_get_eml20__PermeabilityLengthUom(struct soap*, enum eml20__PermeabilityLengthUom *, const char*, const char*);

inline int soap_read_eml20__PermeabilityLengthUom(struct soap *soap, enum eml20__PermeabilityLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermeabilityLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermeabilityLengthUom(struct soap *soap, const char *URL, enum eml20__PermeabilityLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermeabilityLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermeabilityLengthUom(struct soap *soap, enum eml20__PermeabilityLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermeabilityLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom_DEFINED

inline void soap_default_eml20__RadiantIntensityUom(struct soap *soap, enum eml20__RadiantIntensityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__RadiantIntensityUom
	*a = SOAP_DEFAULT_eml20__RadiantIntensityUom;
#else
	*a = (enum eml20__RadiantIntensityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__RadiantIntensityUom(struct soap*, const char*, int, const enum eml20__RadiantIntensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__RadiantIntensityUom2s(struct soap*, enum eml20__RadiantIntensityUom);
SOAP_FMAC3 enum eml20__RadiantIntensityUom * SOAP_FMAC4 soap_in_eml20__RadiantIntensityUom(struct soap*, const char*, enum eml20__RadiantIntensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__RadiantIntensityUom(struct soap*, const char*, enum eml20__RadiantIntensityUom *);

SOAP_FMAC3 enum eml20__RadiantIntensityUom * SOAP_FMAC4 soap_new_eml20__RadiantIntensityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__RadiantIntensityUom(struct soap*, const enum eml20__RadiantIntensityUom *, const char*, const char*);

inline int soap_write_eml20__RadiantIntensityUom(struct soap *soap, enum eml20__RadiantIntensityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__RadiantIntensityUom(soap, p, "eml20:RadiantIntensityUom", "eml20:RadiantIntensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__RadiantIntensityUom(struct soap *soap, const char *URL, enum eml20__RadiantIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadiantIntensityUom(soap, p, "eml20:RadiantIntensityUom", "eml20:RadiantIntensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__RadiantIntensityUom(struct soap *soap, const char *URL, enum eml20__RadiantIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadiantIntensityUom(soap, p, "eml20:RadiantIntensityUom", "eml20:RadiantIntensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__RadiantIntensityUom(struct soap *soap, const char *URL, enum eml20__RadiantIntensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__RadiantIntensityUom(soap, p, "eml20:RadiantIntensityUom", "eml20:RadiantIntensityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__RadiantIntensityUom * SOAP_FMAC4 soap_get_eml20__RadiantIntensityUom(struct soap*, enum eml20__RadiantIntensityUom *, const char*, const char*);

inline int soap_read_eml20__RadiantIntensityUom(struct soap *soap, enum eml20__RadiantIntensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__RadiantIntensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__RadiantIntensityUom(struct soap *soap, const char *URL, enum eml20__RadiantIntensityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__RadiantIntensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__RadiantIntensityUom(struct soap *soap, enum eml20__RadiantIntensityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__RadiantIntensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom_DEFINED

inline void soap_default_eml20__TemperatureIntervalUom(struct soap *soap, enum eml20__TemperatureIntervalUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TemperatureIntervalUom
	*a = SOAP_DEFAULT_eml20__TemperatureIntervalUom;
#else
	*a = (enum eml20__TemperatureIntervalUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalUom(struct soap*, const char*, int, const enum eml20__TemperatureIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TemperatureIntervalUom2s(struct soap*, enum eml20__TemperatureIntervalUom);
SOAP_FMAC3 enum eml20__TemperatureIntervalUom * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalUom(struct soap*, const char*, enum eml20__TemperatureIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TemperatureIntervalUom(struct soap*, const char*, enum eml20__TemperatureIntervalUom *);

SOAP_FMAC3 enum eml20__TemperatureIntervalUom * SOAP_FMAC4 soap_new_eml20__TemperatureIntervalUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TemperatureIntervalUom(struct soap*, const enum eml20__TemperatureIntervalUom *, const char*, const char*);

inline int soap_write_eml20__TemperatureIntervalUom(struct soap *soap, enum eml20__TemperatureIntervalUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalUom(soap, p, "eml20:TemperatureIntervalUom", "eml20:TemperatureIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalUom(soap, p, "eml20:TemperatureIntervalUom", "eml20:TemperatureIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalUom(soap, p, "eml20:TemperatureIntervalUom", "eml20:TemperatureIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalUom(soap, p, "eml20:TemperatureIntervalUom", "eml20:TemperatureIntervalUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TemperatureIntervalUom * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalUom(struct soap*, enum eml20__TemperatureIntervalUom *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalUom(struct soap *soap, enum eml20__TemperatureIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalUom(struct soap *soap, enum eml20__TemperatureIntervalUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom_DEFINED

inline void soap_default_eml20__FrequencyIntervalUom(struct soap *soap, enum eml20__FrequencyIntervalUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__FrequencyIntervalUom
	*a = SOAP_DEFAULT_eml20__FrequencyIntervalUom;
#else
	*a = (enum eml20__FrequencyIntervalUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__FrequencyIntervalUom(struct soap*, const char*, int, const enum eml20__FrequencyIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__FrequencyIntervalUom2s(struct soap*, enum eml20__FrequencyIntervalUom);
SOAP_FMAC3 enum eml20__FrequencyIntervalUom * SOAP_FMAC4 soap_in_eml20__FrequencyIntervalUom(struct soap*, const char*, enum eml20__FrequencyIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__FrequencyIntervalUom(struct soap*, const char*, enum eml20__FrequencyIntervalUom *);

SOAP_FMAC3 enum eml20__FrequencyIntervalUom * SOAP_FMAC4 soap_new_eml20__FrequencyIntervalUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__FrequencyIntervalUom(struct soap*, const enum eml20__FrequencyIntervalUom *, const char*, const char*);

inline int soap_write_eml20__FrequencyIntervalUom(struct soap *soap, enum eml20__FrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__FrequencyIntervalUom(soap, p, "eml20:FrequencyIntervalUom", "eml20:FrequencyIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__FrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__FrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyIntervalUom(soap, p, "eml20:FrequencyIntervalUom", "eml20:FrequencyIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__FrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__FrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyIntervalUom(soap, p, "eml20:FrequencyIntervalUom", "eml20:FrequencyIntervalUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__FrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__FrequencyIntervalUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__FrequencyIntervalUom(soap, p, "eml20:FrequencyIntervalUom", "eml20:FrequencyIntervalUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__FrequencyIntervalUom * SOAP_FMAC4 soap_get_eml20__FrequencyIntervalUom(struct soap*, enum eml20__FrequencyIntervalUom *, const char*, const char*);

inline int soap_read_eml20__FrequencyIntervalUom(struct soap *soap, enum eml20__FrequencyIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__FrequencyIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__FrequencyIntervalUom(struct soap *soap, const char *URL, enum eml20__FrequencyIntervalUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__FrequencyIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__FrequencyIntervalUom(struct soap *soap, enum eml20__FrequencyIntervalUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__FrequencyIntervalUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom_DEFINED

inline void soap_default_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumeFlowRatePerVolumeFlowRateUom
	*a = SOAP_DEFAULT_eml20__VolumeFlowRatePerVolumeFlowRateUom;
#else
	*a = (enum eml20__VolumeFlowRatePerVolumeFlowRateUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, int, const enum eml20__VolumeFlowRatePerVolumeFlowRateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumeFlowRatePerVolumeFlowRateUom2s(struct soap*, enum eml20__VolumeFlowRatePerVolumeFlowRateUom);
SOAP_FMAC3 enum eml20__VolumeFlowRatePerVolumeFlowRateUom * SOAP_FMAC4 soap_in_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *);

SOAP_FMAC3 enum eml20__VolumeFlowRatePerVolumeFlowRateUom * SOAP_FMAC4 soap_new_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const enum eml20__VolumeFlowRatePerVolumeFlowRateUom *, const char*, const char*);

inline int soap_write_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml20__VolumeFlowRatePerVolumeFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p, "eml20:VolumeFlowRatePerVolumeFlowRateUom", "eml20:VolumeFlowRatePerVolumeFlowRateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, const char *URL, enum eml20__VolumeFlowRatePerVolumeFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p, "eml20:VolumeFlowRatePerVolumeFlowRateUom", "eml20:VolumeFlowRatePerVolumeFlowRateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, const char *URL, enum eml20__VolumeFlowRatePerVolumeFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p, "eml20:VolumeFlowRatePerVolumeFlowRateUom", "eml20:VolumeFlowRatePerVolumeFlowRateUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, const char *URL, enum eml20__VolumeFlowRatePerVolumeFlowRateUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p, "eml20:VolumeFlowRatePerVolumeFlowRateUom", "eml20:VolumeFlowRatePerVolumeFlowRateUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumeFlowRatePerVolumeFlowRateUom * SOAP_FMAC4 soap_get_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *, const char*, const char*);

inline int soap_read_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, const char *URL, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml20__VolumeFlowRatePerVolumeFlowRateUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumeFlowRatePerVolumeFlowRateUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom_DEFINED

inline void soap_default_eml20__MolarHeatCapacityUom(struct soap *soap, enum eml20__MolarHeatCapacityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MolarHeatCapacityUom
	*a = SOAP_DEFAULT_eml20__MolarHeatCapacityUom;
#else
	*a = (enum eml20__MolarHeatCapacityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarHeatCapacityUom(struct soap*, const char*, int, const enum eml20__MolarHeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MolarHeatCapacityUom2s(struct soap*, enum eml20__MolarHeatCapacityUom);
SOAP_FMAC3 enum eml20__MolarHeatCapacityUom * SOAP_FMAC4 soap_in_eml20__MolarHeatCapacityUom(struct soap*, const char*, enum eml20__MolarHeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MolarHeatCapacityUom(struct soap*, const char*, enum eml20__MolarHeatCapacityUom *);

SOAP_FMAC3 enum eml20__MolarHeatCapacityUom * SOAP_FMAC4 soap_new_eml20__MolarHeatCapacityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MolarHeatCapacityUom(struct soap*, const enum eml20__MolarHeatCapacityUom *, const char*, const char*);

inline int soap_write_eml20__MolarHeatCapacityUom(struct soap *soap, enum eml20__MolarHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MolarHeatCapacityUom(soap, p, "eml20:MolarHeatCapacityUom", "eml20:MolarHeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__MolarHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarHeatCapacityUom(soap, p, "eml20:MolarHeatCapacityUom", "eml20:MolarHeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__MolarHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarHeatCapacityUom(soap, p, "eml20:MolarHeatCapacityUom", "eml20:MolarHeatCapacityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__MolarHeatCapacityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarHeatCapacityUom(soap, p, "eml20:MolarHeatCapacityUom", "eml20:MolarHeatCapacityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MolarHeatCapacityUom * SOAP_FMAC4 soap_get_eml20__MolarHeatCapacityUom(struct soap*, enum eml20__MolarHeatCapacityUom *, const char*, const char*);

inline int soap_read_eml20__MolarHeatCapacityUom(struct soap *soap, enum eml20__MolarHeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarHeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarHeatCapacityUom(struct soap *soap, const char *URL, enum eml20__MolarHeatCapacityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarHeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarHeatCapacityUom(struct soap *soap, enum eml20__MolarHeatCapacityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarHeatCapacityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerTimeUom(struct soap *soap, enum eml20__VolumePerTimePerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerTimeUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerTimeUom;
#else
	*a = (enum eml20__VolumePerTimePerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerTimeUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerTimeUom2s(struct soap*, enum eml20__VolumePerTimePerTimeUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerTimeUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerTimeUom(struct soap*, const char*, enum eml20__VolumePerTimePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerTimeUom(struct soap*, const char*, enum eml20__VolumePerTimePerTimeUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerTimeUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerTimeUom(struct soap*, const enum eml20__VolumePerTimePerTimeUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerTimeUom(struct soap *soap, enum eml20__VolumePerTimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerTimeUom(soap, p, "eml20:VolumePerTimePerTimeUom", "eml20:VolumePerTimePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerTimeUom(soap, p, "eml20:VolumePerTimePerTimeUom", "eml20:VolumePerTimePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerTimeUom(soap, p, "eml20:VolumePerTimePerTimeUom", "eml20:VolumePerTimePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerTimeUom(soap, p, "eml20:VolumePerTimePerTimeUom", "eml20:VolumePerTimePerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerTimeUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerTimeUom(struct soap*, enum eml20__VolumePerTimePerTimeUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerTimeUom(struct soap *soap, enum eml20__VolumePerTimePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerTimeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerTimeUom(struct soap *soap, enum eml20__VolumePerTimePerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom_DEFINED

inline void soap_default_eml20__LuminanceUom(struct soap *soap, enum eml20__LuminanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LuminanceUom
	*a = SOAP_DEFAULT_eml20__LuminanceUom;
#else
	*a = (enum eml20__LuminanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminanceUom(struct soap*, const char*, int, const enum eml20__LuminanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LuminanceUom2s(struct soap*, enum eml20__LuminanceUom);
SOAP_FMAC3 enum eml20__LuminanceUom * SOAP_FMAC4 soap_in_eml20__LuminanceUom(struct soap*, const char*, enum eml20__LuminanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LuminanceUom(struct soap*, const char*, enum eml20__LuminanceUom *);

SOAP_FMAC3 enum eml20__LuminanceUom * SOAP_FMAC4 soap_new_eml20__LuminanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LuminanceUom(struct soap*, const enum eml20__LuminanceUom *, const char*, const char*);

inline int soap_write_eml20__LuminanceUom(struct soap *soap, enum eml20__LuminanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LuminanceUom(soap, p, "eml20:LuminanceUom", "eml20:LuminanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminanceUom(struct soap *soap, const char *URL, enum eml20__LuminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminanceUom(soap, p, "eml20:LuminanceUom", "eml20:LuminanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminanceUom(struct soap *soap, const char *URL, enum eml20__LuminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminanceUom(soap, p, "eml20:LuminanceUom", "eml20:LuminanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminanceUom(struct soap *soap, const char *URL, enum eml20__LuminanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LuminanceUom(soap, p, "eml20:LuminanceUom", "eml20:LuminanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LuminanceUom * SOAP_FMAC4 soap_get_eml20__LuminanceUom(struct soap*, enum eml20__LuminanceUom *, const char*, const char*);

inline int soap_read_eml20__LuminanceUom(struct soap *soap, enum eml20__LuminanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminanceUom(struct soap *soap, const char *URL, enum eml20__LuminanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminanceUom(struct soap *soap, enum eml20__LuminanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom_DEFINED

inline void soap_default_eml20__ReciprocalLengthUom(struct soap *soap, enum eml20__ReciprocalLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalLengthUom
	*a = SOAP_DEFAULT_eml20__ReciprocalLengthUom;
#else
	*a = (enum eml20__ReciprocalLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalLengthUom(struct soap*, const char*, int, const enum eml20__ReciprocalLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalLengthUom2s(struct soap*, enum eml20__ReciprocalLengthUom);
SOAP_FMAC3 enum eml20__ReciprocalLengthUom * SOAP_FMAC4 soap_in_eml20__ReciprocalLengthUom(struct soap*, const char*, enum eml20__ReciprocalLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalLengthUom(struct soap*, const char*, enum eml20__ReciprocalLengthUom *);

SOAP_FMAC3 enum eml20__ReciprocalLengthUom * SOAP_FMAC4 soap_new_eml20__ReciprocalLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalLengthUom(struct soap*, const enum eml20__ReciprocalLengthUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalLengthUom(struct soap *soap, enum eml20__ReciprocalLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalLengthUom(soap, p, "eml20:ReciprocalLengthUom", "eml20:ReciprocalLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalLengthUom(struct soap *soap, const char *URL, enum eml20__ReciprocalLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalLengthUom(soap, p, "eml20:ReciprocalLengthUom", "eml20:ReciprocalLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalLengthUom(struct soap *soap, const char *URL, enum eml20__ReciprocalLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalLengthUom(soap, p, "eml20:ReciprocalLengthUom", "eml20:ReciprocalLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalLengthUom(struct soap *soap, const char *URL, enum eml20__ReciprocalLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalLengthUom(soap, p, "eml20:ReciprocalLengthUom", "eml20:ReciprocalLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalLengthUom * SOAP_FMAC4 soap_get_eml20__ReciprocalLengthUom(struct soap*, enum eml20__ReciprocalLengthUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalLengthUom(struct soap *soap, enum eml20__ReciprocalLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalLengthUom(struct soap *soap, const char *URL, enum eml20__ReciprocalLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalLengthUom(struct soap *soap, enum eml20__ReciprocalLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom_DEFINED

inline void soap_default_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml20__LogarithmicPowerRatioPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LogarithmicPowerRatioPerLengthUom
	*a = SOAP_DEFAULT_eml20__LogarithmicPowerRatioPerLengthUom;
#else
	*a = (enum eml20__LogarithmicPowerRatioPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, int, const enum eml20__LogarithmicPowerRatioPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LogarithmicPowerRatioPerLengthUom2s(struct soap*, enum eml20__LogarithmicPowerRatioPerLengthUom);
SOAP_FMAC3 enum eml20__LogarithmicPowerRatioPerLengthUom * SOAP_FMAC4 soap_in_eml20__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, enum eml20__LogarithmicPowerRatioPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, enum eml20__LogarithmicPowerRatioPerLengthUom *);

SOAP_FMAC3 enum eml20__LogarithmicPowerRatioPerLengthUom * SOAP_FMAC4 soap_new_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LogarithmicPowerRatioPerLengthUom(struct soap*, const enum eml20__LogarithmicPowerRatioPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml20__LogarithmicPowerRatioPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioPerLengthUom(soap, p, "eml20:LogarithmicPowerRatioPerLengthUom", "eml20:LogarithmicPowerRatioPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioPerLengthUom(soap, p, "eml20:LogarithmicPowerRatioPerLengthUom", "eml20:LogarithmicPowerRatioPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioPerLengthUom(soap, p, "eml20:LogarithmicPowerRatioPerLengthUom", "eml20:LogarithmicPowerRatioPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioPerLengthUom(soap, p, "eml20:LogarithmicPowerRatioPerLengthUom", "eml20:LogarithmicPowerRatioPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LogarithmicPowerRatioPerLengthUom * SOAP_FMAC4 soap_get_eml20__LogarithmicPowerRatioPerLengthUom(struct soap*, enum eml20__LogarithmicPowerRatioPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml20__LogarithmicPowerRatioPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LogarithmicPowerRatioPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml20__LogarithmicPowerRatioPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom_DEFINED

inline void soap_default_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml20__AreaPerAmountOfSubstanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaPerAmountOfSubstanceUom
	*a = SOAP_DEFAULT_eml20__AreaPerAmountOfSubstanceUom;
#else
	*a = (enum eml20__AreaPerAmountOfSubstanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerAmountOfSubstanceUom(struct soap*, const char*, int, const enum eml20__AreaPerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaPerAmountOfSubstanceUom2s(struct soap*, enum eml20__AreaPerAmountOfSubstanceUom);
SOAP_FMAC3 enum eml20__AreaPerAmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml20__AreaPerAmountOfSubstanceUom(struct soap*, const char*, enum eml20__AreaPerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaPerAmountOfSubstanceUom(struct soap*, const char*, enum eml20__AreaPerAmountOfSubstanceUom *);

SOAP_FMAC3 enum eml20__AreaPerAmountOfSubstanceUom * SOAP_FMAC4 soap_new_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaPerAmountOfSubstanceUom(struct soap*, const enum eml20__AreaPerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml20__AreaPerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAmountOfSubstanceUom(soap, p, "eml20:AreaPerAmountOfSubstanceUom", "eml20:AreaPerAmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AreaPerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAmountOfSubstanceUom(soap, p, "eml20:AreaPerAmountOfSubstanceUom", "eml20:AreaPerAmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AreaPerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAmountOfSubstanceUom(soap, p, "eml20:AreaPerAmountOfSubstanceUom", "eml20:AreaPerAmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AreaPerAmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaPerAmountOfSubstanceUom(soap, p, "eml20:AreaPerAmountOfSubstanceUom", "eml20:AreaPerAmountOfSubstanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaPerAmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml20__AreaPerAmountOfSubstanceUom(struct soap*, enum eml20__AreaPerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml20__AreaPerAmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerAmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AreaPerAmountOfSubstanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerAmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml20__AreaPerAmountOfSubstanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerAmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom_DEFINED

inline void soap_default_eml20__ThermalConductivityUom(struct soap *soap, enum eml20__ThermalConductivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermalConductivityUom
	*a = SOAP_DEFAULT_eml20__ThermalConductivityUom;
#else
	*a = (enum eml20__ThermalConductivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalConductivityUom(struct soap*, const char*, int, const enum eml20__ThermalConductivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermalConductivityUom2s(struct soap*, enum eml20__ThermalConductivityUom);
SOAP_FMAC3 enum eml20__ThermalConductivityUom * SOAP_FMAC4 soap_in_eml20__ThermalConductivityUom(struct soap*, const char*, enum eml20__ThermalConductivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermalConductivityUom(struct soap*, const char*, enum eml20__ThermalConductivityUom *);

SOAP_FMAC3 enum eml20__ThermalConductivityUom * SOAP_FMAC4 soap_new_eml20__ThermalConductivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermalConductivityUom(struct soap*, const enum eml20__ThermalConductivityUom *, const char*, const char*);

inline int soap_write_eml20__ThermalConductivityUom(struct soap *soap, enum eml20__ThermalConductivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductivityUom(soap, p, "eml20:ThermalConductivityUom", "eml20:ThermalConductivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalConductivityUom(struct soap *soap, const char *URL, enum eml20__ThermalConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductivityUom(soap, p, "eml20:ThermalConductivityUom", "eml20:ThermalConductivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalConductivityUom(struct soap *soap, const char *URL, enum eml20__ThermalConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductivityUom(soap, p, "eml20:ThermalConductivityUom", "eml20:ThermalConductivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalConductivityUom(struct soap *soap, const char *URL, enum eml20__ThermalConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductivityUom(soap, p, "eml20:ThermalConductivityUom", "eml20:ThermalConductivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermalConductivityUom * SOAP_FMAC4 soap_get_eml20__ThermalConductivityUom(struct soap*, enum eml20__ThermalConductivityUom *, const char*, const char*);

inline int soap_read_eml20__ThermalConductivityUom(struct soap *soap, enum eml20__ThermalConductivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalConductivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalConductivityUom(struct soap *soap, const char *URL, enum eml20__ThermalConductivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalConductivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalConductivityUom(struct soap *soap, enum eml20__ThermalConductivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalConductivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom_DEFINED

inline void soap_default_eml20__TimeUom(struct soap *soap, enum eml20__TimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TimeUom
	*a = SOAP_DEFAULT_eml20__TimeUom;
#else
	*a = (enum eml20__TimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimeUom(struct soap*, const char*, int, const enum eml20__TimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TimeUom2s(struct soap*, enum eml20__TimeUom);
SOAP_FMAC3 enum eml20__TimeUom * SOAP_FMAC4 soap_in_eml20__TimeUom(struct soap*, const char*, enum eml20__TimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TimeUom(struct soap*, const char*, enum eml20__TimeUom *);

SOAP_FMAC3 enum eml20__TimeUom * SOAP_FMAC4 soap_new_eml20__TimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TimeUom(struct soap*, const enum eml20__TimeUom *, const char*, const char*);

inline int soap_write_eml20__TimeUom(struct soap *soap, enum eml20__TimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TimeUom(soap, p, "eml20:TimeUom", "eml20:TimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimeUom(struct soap *soap, const char *URL, enum eml20__TimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimeUom(soap, p, "eml20:TimeUom", "eml20:TimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimeUom(struct soap *soap, const char *URL, enum eml20__TimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimeUom(soap, p, "eml20:TimeUom", "eml20:TimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimeUom(struct soap *soap, const char *URL, enum eml20__TimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimeUom(soap, p, "eml20:TimeUom", "eml20:TimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TimeUom * SOAP_FMAC4 soap_get_eml20__TimeUom(struct soap*, enum eml20__TimeUom *, const char*, const char*);

inline int soap_read_eml20__TimeUom(struct soap *soap, enum eml20__TimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimeUom(struct soap *soap, const char *URL, enum eml20__TimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimeUom(struct soap *soap, enum eml20__TimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom_DEFINED

inline void soap_default_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstancePerAreaUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstancePerAreaUom;
#else
	*a = (enum eml20__AmountOfSubstancePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerAreaUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstancePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstancePerAreaUom2s(struct soap*, enum eml20__AmountOfSubstancePerAreaUom);
SOAP_FMAC3 enum eml20__AmountOfSubstancePerAreaUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerAreaUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstancePerAreaUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerAreaUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstancePerAreaUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstancePerAreaUom(struct soap*, const enum eml20__AmountOfSubstancePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAreaUom(soap, p, "eml20:AmountOfSubstancePerAreaUom", "eml20:AmountOfSubstancePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAreaUom(soap, p, "eml20:AmountOfSubstancePerAreaUom", "eml20:AmountOfSubstancePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAreaUom(soap, p, "eml20:AmountOfSubstancePerAreaUom", "eml20:AmountOfSubstancePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerAreaUom(soap, p, "eml20:AmountOfSubstancePerAreaUom", "eml20:AmountOfSubstancePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstancePerAreaUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerAreaUom(struct soap*, enum eml20__AmountOfSubstancePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml20__AmountOfSubstancePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom_DEFINED

inline void soap_default_eml20__ElectricFieldStrengthUom(struct soap *soap, enum eml20__ElectricFieldStrengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricFieldStrengthUom
	*a = SOAP_DEFAULT_eml20__ElectricFieldStrengthUom;
#else
	*a = (enum eml20__ElectricFieldStrengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricFieldStrengthUom(struct soap*, const char*, int, const enum eml20__ElectricFieldStrengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricFieldStrengthUom2s(struct soap*, enum eml20__ElectricFieldStrengthUom);
SOAP_FMAC3 enum eml20__ElectricFieldStrengthUom * SOAP_FMAC4 soap_in_eml20__ElectricFieldStrengthUom(struct soap*, const char*, enum eml20__ElectricFieldStrengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricFieldStrengthUom(struct soap*, const char*, enum eml20__ElectricFieldStrengthUom *);

SOAP_FMAC3 enum eml20__ElectricFieldStrengthUom * SOAP_FMAC4 soap_new_eml20__ElectricFieldStrengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricFieldStrengthUom(struct soap*, const enum eml20__ElectricFieldStrengthUom *, const char*, const char*);

inline int soap_write_eml20__ElectricFieldStrengthUom(struct soap *soap, enum eml20__ElectricFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricFieldStrengthUom(soap, p, "eml20:ElectricFieldStrengthUom", "eml20:ElectricFieldStrengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__ElectricFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricFieldStrengthUom(soap, p, "eml20:ElectricFieldStrengthUom", "eml20:ElectricFieldStrengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__ElectricFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricFieldStrengthUom(soap, p, "eml20:ElectricFieldStrengthUom", "eml20:ElectricFieldStrengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__ElectricFieldStrengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricFieldStrengthUom(soap, p, "eml20:ElectricFieldStrengthUom", "eml20:ElectricFieldStrengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricFieldStrengthUom * SOAP_FMAC4 soap_get_eml20__ElectricFieldStrengthUom(struct soap*, enum eml20__ElectricFieldStrengthUom *, const char*, const char*);

inline int soap_read_eml20__ElectricFieldStrengthUom(struct soap *soap, enum eml20__ElectricFieldStrengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricFieldStrengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricFieldStrengthUom(struct soap *soap, const char *URL, enum eml20__ElectricFieldStrengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricFieldStrengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricFieldStrengthUom(struct soap *soap, enum eml20__ElectricFieldStrengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricFieldStrengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom_DEFINED

inline void soap_default_eml20__ForceAreaUom(struct soap *soap, enum eml20__ForceAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForceAreaUom
	*a = SOAP_DEFAULT_eml20__ForceAreaUom;
#else
	*a = (enum eml20__ForceAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceAreaUom(struct soap*, const char*, int, const enum eml20__ForceAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForceAreaUom2s(struct soap*, enum eml20__ForceAreaUom);
SOAP_FMAC3 enum eml20__ForceAreaUom * SOAP_FMAC4 soap_in_eml20__ForceAreaUom(struct soap*, const char*, enum eml20__ForceAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForceAreaUom(struct soap*, const char*, enum eml20__ForceAreaUom *);

SOAP_FMAC3 enum eml20__ForceAreaUom * SOAP_FMAC4 soap_new_eml20__ForceAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForceAreaUom(struct soap*, const enum eml20__ForceAreaUom *, const char*, const char*);

inline int soap_write_eml20__ForceAreaUom(struct soap *soap, enum eml20__ForceAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForceAreaUom(soap, p, "eml20:ForceAreaUom", "eml20:ForceAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceAreaUom(struct soap *soap, const char *URL, enum eml20__ForceAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceAreaUom(soap, p, "eml20:ForceAreaUom", "eml20:ForceAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceAreaUom(struct soap *soap, const char *URL, enum eml20__ForceAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceAreaUom(soap, p, "eml20:ForceAreaUom", "eml20:ForceAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceAreaUom(struct soap *soap, const char *URL, enum eml20__ForceAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceAreaUom(soap, p, "eml20:ForceAreaUom", "eml20:ForceAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForceAreaUom * SOAP_FMAC4 soap_get_eml20__ForceAreaUom(struct soap*, enum eml20__ForceAreaUom *, const char*, const char*);

inline int soap_read_eml20__ForceAreaUom(struct soap *soap, enum eml20__ForceAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceAreaUom(struct soap *soap, const char *URL, enum eml20__ForceAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceAreaUom(struct soap *soap, enum eml20__ForceAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom_DEFINED

inline void soap_default_eml20__SecondMomentOfAreaUom(struct soap *soap, enum eml20__SecondMomentOfAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__SecondMomentOfAreaUom
	*a = SOAP_DEFAULT_eml20__SecondMomentOfAreaUom;
#else
	*a = (enum eml20__SecondMomentOfAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SecondMomentOfAreaUom(struct soap*, const char*, int, const enum eml20__SecondMomentOfAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__SecondMomentOfAreaUom2s(struct soap*, enum eml20__SecondMomentOfAreaUom);
SOAP_FMAC3 enum eml20__SecondMomentOfAreaUom * SOAP_FMAC4 soap_in_eml20__SecondMomentOfAreaUom(struct soap*, const char*, enum eml20__SecondMomentOfAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__SecondMomentOfAreaUom(struct soap*, const char*, enum eml20__SecondMomentOfAreaUom *);

SOAP_FMAC3 enum eml20__SecondMomentOfAreaUom * SOAP_FMAC4 soap_new_eml20__SecondMomentOfAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__SecondMomentOfAreaUom(struct soap*, const enum eml20__SecondMomentOfAreaUom *, const char*, const char*);

inline int soap_write_eml20__SecondMomentOfAreaUom(struct soap *soap, enum eml20__SecondMomentOfAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__SecondMomentOfAreaUom(soap, p, "eml20:SecondMomentOfAreaUom", "eml20:SecondMomentOfAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__SecondMomentOfAreaUom(struct soap *soap, const char *URL, enum eml20__SecondMomentOfAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SecondMomentOfAreaUom(soap, p, "eml20:SecondMomentOfAreaUom", "eml20:SecondMomentOfAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SecondMomentOfAreaUom(struct soap *soap, const char *URL, enum eml20__SecondMomentOfAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SecondMomentOfAreaUom(soap, p, "eml20:SecondMomentOfAreaUom", "eml20:SecondMomentOfAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SecondMomentOfAreaUom(struct soap *soap, const char *URL, enum eml20__SecondMomentOfAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SecondMomentOfAreaUom(soap, p, "eml20:SecondMomentOfAreaUom", "eml20:SecondMomentOfAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__SecondMomentOfAreaUom * SOAP_FMAC4 soap_get_eml20__SecondMomentOfAreaUom(struct soap*, enum eml20__SecondMomentOfAreaUom *, const char*, const char*);

inline int soap_read_eml20__SecondMomentOfAreaUom(struct soap *soap, enum eml20__SecondMomentOfAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SecondMomentOfAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SecondMomentOfAreaUom(struct soap *soap, const char *URL, enum eml20__SecondMomentOfAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SecondMomentOfAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SecondMomentOfAreaUom(struct soap *soap, enum eml20__SecondMomentOfAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SecondMomentOfAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom_DEFINED

inline void soap_default_eml20__PermeabilityRockUom(struct soap *soap, enum eml20__PermeabilityRockUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PermeabilityRockUom
	*a = SOAP_DEFAULT_eml20__PermeabilityRockUom;
#else
	*a = (enum eml20__PermeabilityRockUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermeabilityRockUom(struct soap*, const char*, int, const enum eml20__PermeabilityRockUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PermeabilityRockUom2s(struct soap*, enum eml20__PermeabilityRockUom);
SOAP_FMAC3 enum eml20__PermeabilityRockUom * SOAP_FMAC4 soap_in_eml20__PermeabilityRockUom(struct soap*, const char*, enum eml20__PermeabilityRockUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PermeabilityRockUom(struct soap*, const char*, enum eml20__PermeabilityRockUom *);

SOAP_FMAC3 enum eml20__PermeabilityRockUom * SOAP_FMAC4 soap_new_eml20__PermeabilityRockUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PermeabilityRockUom(struct soap*, const enum eml20__PermeabilityRockUom *, const char*, const char*);

inline int soap_write_eml20__PermeabilityRockUom(struct soap *soap, enum eml20__PermeabilityRockUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityRockUom(soap, p, "eml20:PermeabilityRockUom", "eml20:PermeabilityRockUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermeabilityRockUom(struct soap *soap, const char *URL, enum eml20__PermeabilityRockUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityRockUom(soap, p, "eml20:PermeabilityRockUom", "eml20:PermeabilityRockUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermeabilityRockUom(struct soap *soap, const char *URL, enum eml20__PermeabilityRockUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityRockUom(soap, p, "eml20:PermeabilityRockUom", "eml20:PermeabilityRockUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermeabilityRockUom(struct soap *soap, const char *URL, enum eml20__PermeabilityRockUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PermeabilityRockUom(soap, p, "eml20:PermeabilityRockUom", "eml20:PermeabilityRockUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PermeabilityRockUom * SOAP_FMAC4 soap_get_eml20__PermeabilityRockUom(struct soap*, enum eml20__PermeabilityRockUom *, const char*, const char*);

inline int soap_read_eml20__PermeabilityRockUom(struct soap *soap, enum eml20__PermeabilityRockUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermeabilityRockUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermeabilityRockUom(struct soap *soap, const char *URL, enum eml20__PermeabilityRockUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermeabilityRockUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermeabilityRockUom(struct soap *soap, enum eml20__PermeabilityRockUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermeabilityRockUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom_DEFINED

inline void soap_default_eml20__VolumePerTimeLengthUom(struct soap *soap, enum eml20__VolumePerTimeLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimeLengthUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimeLengthUom;
#else
	*a = (enum eml20__VolumePerTimeLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimeLengthUom(struct soap*, const char*, int, const enum eml20__VolumePerTimeLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimeLengthUom2s(struct soap*, enum eml20__VolumePerTimeLengthUom);
SOAP_FMAC3 enum eml20__VolumePerTimeLengthUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimeLengthUom(struct soap*, const char*, enum eml20__VolumePerTimeLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimeLengthUom(struct soap*, const char*, enum eml20__VolumePerTimeLengthUom *);

SOAP_FMAC3 enum eml20__VolumePerTimeLengthUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimeLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimeLengthUom(struct soap*, const enum eml20__VolumePerTimeLengthUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimeLengthUom(struct soap *soap, enum eml20__VolumePerTimeLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeLengthUom(soap, p, "eml20:VolumePerTimeLengthUom", "eml20:VolumePerTimeLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimeLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeLengthUom(soap, p, "eml20:VolumePerTimeLengthUom", "eml20:VolumePerTimeLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimeLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeLengthUom(soap, p, "eml20:VolumePerTimeLengthUom", "eml20:VolumePerTimeLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimeLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimeLengthUom(soap, p, "eml20:VolumePerTimeLengthUom", "eml20:VolumePerTimeLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimeLengthUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimeLengthUom(struct soap*, enum eml20__VolumePerTimeLengthUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimeLengthUom(struct soap *soap, enum eml20__VolumePerTimeLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimeLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimeLengthUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimeLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimeLengthUom(struct soap *soap, enum eml20__VolumePerTimeLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom_DEFINED

inline void soap_default_eml20__ThermalDiffusivityUom(struct soap *soap, enum eml20__ThermalDiffusivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermalDiffusivityUom
	*a = SOAP_DEFAULT_eml20__ThermalDiffusivityUom;
#else
	*a = (enum eml20__ThermalDiffusivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalDiffusivityUom(struct soap*, const char*, int, const enum eml20__ThermalDiffusivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermalDiffusivityUom2s(struct soap*, enum eml20__ThermalDiffusivityUom);
SOAP_FMAC3 enum eml20__ThermalDiffusivityUom * SOAP_FMAC4 soap_in_eml20__ThermalDiffusivityUom(struct soap*, const char*, enum eml20__ThermalDiffusivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermalDiffusivityUom(struct soap*, const char*, enum eml20__ThermalDiffusivityUom *);

SOAP_FMAC3 enum eml20__ThermalDiffusivityUom * SOAP_FMAC4 soap_new_eml20__ThermalDiffusivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermalDiffusivityUom(struct soap*, const enum eml20__ThermalDiffusivityUom *, const char*, const char*);

inline int soap_write_eml20__ThermalDiffusivityUom(struct soap *soap, enum eml20__ThermalDiffusivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermalDiffusivityUom(soap, p, "eml20:ThermalDiffusivityUom", "eml20:ThermalDiffusivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalDiffusivityUom(struct soap *soap, const char *URL, enum eml20__ThermalDiffusivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalDiffusivityUom(soap, p, "eml20:ThermalDiffusivityUom", "eml20:ThermalDiffusivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalDiffusivityUom(struct soap *soap, const char *URL, enum eml20__ThermalDiffusivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalDiffusivityUom(soap, p, "eml20:ThermalDiffusivityUom", "eml20:ThermalDiffusivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalDiffusivityUom(struct soap *soap, const char *URL, enum eml20__ThermalDiffusivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalDiffusivityUom(soap, p, "eml20:ThermalDiffusivityUom", "eml20:ThermalDiffusivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermalDiffusivityUom * SOAP_FMAC4 soap_get_eml20__ThermalDiffusivityUom(struct soap*, enum eml20__ThermalDiffusivityUom *, const char*, const char*);

inline int soap_read_eml20__ThermalDiffusivityUom(struct soap *soap, enum eml20__ThermalDiffusivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalDiffusivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalDiffusivityUom(struct soap *soap, const char *URL, enum eml20__ThermalDiffusivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalDiffusivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalDiffusivityUom(struct soap *soap, enum eml20__ThermalDiffusivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalDiffusivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom_DEFINED

inline void soap_default_eml20__ReciprocalMassTimeUom(struct soap *soap, enum eml20__ReciprocalMassTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalMassTimeUom
	*a = SOAP_DEFAULT_eml20__ReciprocalMassTimeUom;
#else
	*a = (enum eml20__ReciprocalMassTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalMassTimeUom(struct soap*, const char*, int, const enum eml20__ReciprocalMassTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalMassTimeUom2s(struct soap*, enum eml20__ReciprocalMassTimeUom);
SOAP_FMAC3 enum eml20__ReciprocalMassTimeUom * SOAP_FMAC4 soap_in_eml20__ReciprocalMassTimeUom(struct soap*, const char*, enum eml20__ReciprocalMassTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalMassTimeUom(struct soap*, const char*, enum eml20__ReciprocalMassTimeUom *);

SOAP_FMAC3 enum eml20__ReciprocalMassTimeUom * SOAP_FMAC4 soap_new_eml20__ReciprocalMassTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalMassTimeUom(struct soap*, const enum eml20__ReciprocalMassTimeUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalMassTimeUom(struct soap *soap, enum eml20__ReciprocalMassTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassTimeUom(soap, p, "eml20:ReciprocalMassTimeUom", "eml20:ReciprocalMassTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalMassTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassTimeUom(soap, p, "eml20:ReciprocalMassTimeUom", "eml20:ReciprocalMassTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalMassTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassTimeUom(soap, p, "eml20:ReciprocalMassTimeUom", "eml20:ReciprocalMassTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalMassTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalMassTimeUom(soap, p, "eml20:ReciprocalMassTimeUom", "eml20:ReciprocalMassTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalMassTimeUom * SOAP_FMAC4 soap_get_eml20__ReciprocalMassTimeUom(struct soap*, enum eml20__ReciprocalMassTimeUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalMassTimeUom(struct soap *soap, enum eml20__ReciprocalMassTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalMassTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalMassTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalMassTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalMassTimeUom(struct soap *soap, enum eml20__ReciprocalMassTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom_DEFINED

inline void soap_default_eml20__AngularAccelerationUom(struct soap *soap, enum eml20__AngularAccelerationUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AngularAccelerationUom
	*a = SOAP_DEFAULT_eml20__AngularAccelerationUom;
#else
	*a = (enum eml20__AngularAccelerationUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AngularAccelerationUom(struct soap*, const char*, int, const enum eml20__AngularAccelerationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AngularAccelerationUom2s(struct soap*, enum eml20__AngularAccelerationUom);
SOAP_FMAC3 enum eml20__AngularAccelerationUom * SOAP_FMAC4 soap_in_eml20__AngularAccelerationUom(struct soap*, const char*, enum eml20__AngularAccelerationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AngularAccelerationUom(struct soap*, const char*, enum eml20__AngularAccelerationUom *);

SOAP_FMAC3 enum eml20__AngularAccelerationUom * SOAP_FMAC4 soap_new_eml20__AngularAccelerationUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AngularAccelerationUom(struct soap*, const enum eml20__AngularAccelerationUom *, const char*, const char*);

inline int soap_write_eml20__AngularAccelerationUom(struct soap *soap, enum eml20__AngularAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AngularAccelerationUom(soap, p, "eml20:AngularAccelerationUom", "eml20:AngularAccelerationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AngularAccelerationUom(struct soap *soap, const char *URL, enum eml20__AngularAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularAccelerationUom(soap, p, "eml20:AngularAccelerationUom", "eml20:AngularAccelerationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AngularAccelerationUom(struct soap *soap, const char *URL, enum eml20__AngularAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularAccelerationUom(soap, p, "eml20:AngularAccelerationUom", "eml20:AngularAccelerationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AngularAccelerationUom(struct soap *soap, const char *URL, enum eml20__AngularAccelerationUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AngularAccelerationUom(soap, p, "eml20:AngularAccelerationUom", "eml20:AngularAccelerationUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AngularAccelerationUom * SOAP_FMAC4 soap_get_eml20__AngularAccelerationUom(struct soap*, enum eml20__AngularAccelerationUom *, const char*, const char*);

inline int soap_read_eml20__AngularAccelerationUom(struct soap *soap, enum eml20__AngularAccelerationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AngularAccelerationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AngularAccelerationUom(struct soap *soap, const char *URL, enum eml20__AngularAccelerationUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AngularAccelerationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AngularAccelerationUom(struct soap *soap, enum eml20__AngularAccelerationUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AngularAccelerationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom_DEFINED

inline void soap_default_eml20__PressureSquaredUom(struct soap *soap, enum eml20__PressureSquaredUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PressureSquaredUom
	*a = SOAP_DEFAULT_eml20__PressureSquaredUom;
#else
	*a = (enum eml20__PressureSquaredUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureSquaredUom(struct soap*, const char*, int, const enum eml20__PressureSquaredUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PressureSquaredUom2s(struct soap*, enum eml20__PressureSquaredUom);
SOAP_FMAC3 enum eml20__PressureSquaredUom * SOAP_FMAC4 soap_in_eml20__PressureSquaredUom(struct soap*, const char*, enum eml20__PressureSquaredUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PressureSquaredUom(struct soap*, const char*, enum eml20__PressureSquaredUom *);

SOAP_FMAC3 enum eml20__PressureSquaredUom * SOAP_FMAC4 soap_new_eml20__PressureSquaredUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PressureSquaredUom(struct soap*, const enum eml20__PressureSquaredUom *, const char*, const char*);

inline int soap_write_eml20__PressureSquaredUom(struct soap *soap, enum eml20__PressureSquaredUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredUom(soap, p, "eml20:PressureSquaredUom", "eml20:PressureSquaredUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureSquaredUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredUom(soap, p, "eml20:PressureSquaredUom", "eml20:PressureSquaredUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureSquaredUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredUom(soap, p, "eml20:PressureSquaredUom", "eml20:PressureSquaredUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureSquaredUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PressureSquaredUom(soap, p, "eml20:PressureSquaredUom", "eml20:PressureSquaredUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PressureSquaredUom * SOAP_FMAC4 soap_get_eml20__PressureSquaredUom(struct soap*, enum eml20__PressureSquaredUom *, const char*, const char*);

inline int soap_read_eml20__PressureSquaredUom(struct soap *soap, enum eml20__PressureSquaredUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureSquaredUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureSquaredUom(struct soap *soap, const char *URL, enum eml20__PressureSquaredUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureSquaredUom(struct soap *soap, enum eml20__PressureSquaredUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom_DEFINED

inline void soap_default_eml20__ElectricCurrentUom(struct soap *soap, enum eml20__ElectricCurrentUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricCurrentUom
	*a = SOAP_DEFAULT_eml20__ElectricCurrentUom;
#else
	*a = (enum eml20__ElectricCurrentUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricCurrentUom(struct soap*, const char*, int, const enum eml20__ElectricCurrentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricCurrentUom2s(struct soap*, enum eml20__ElectricCurrentUom);
SOAP_FMAC3 enum eml20__ElectricCurrentUom * SOAP_FMAC4 soap_in_eml20__ElectricCurrentUom(struct soap*, const char*, enum eml20__ElectricCurrentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricCurrentUom(struct soap*, const char*, enum eml20__ElectricCurrentUom *);

SOAP_FMAC3 enum eml20__ElectricCurrentUom * SOAP_FMAC4 soap_new_eml20__ElectricCurrentUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricCurrentUom(struct soap*, const enum eml20__ElectricCurrentUom *, const char*, const char*);

inline int soap_write_eml20__ElectricCurrentUom(struct soap *soap, enum eml20__ElectricCurrentUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentUom(soap, p, "eml20:ElectricCurrentUom", "eml20:ElectricCurrentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricCurrentUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentUom(soap, p, "eml20:ElectricCurrentUom", "eml20:ElectricCurrentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricCurrentUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentUom(soap, p, "eml20:ElectricCurrentUom", "eml20:ElectricCurrentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricCurrentUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentUom(soap, p, "eml20:ElectricCurrentUom", "eml20:ElectricCurrentUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricCurrentUom * SOAP_FMAC4 soap_get_eml20__ElectricCurrentUom(struct soap*, enum eml20__ElectricCurrentUom *, const char*, const char*);

inline int soap_read_eml20__ElectricCurrentUom(struct soap *soap, enum eml20__ElectricCurrentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricCurrentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricCurrentUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricCurrentUom(struct soap *soap, enum eml20__ElectricCurrentUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom_DEFINED

inline void soap_default_eml20__EnergyPerLengthUom(struct soap *soap, enum eml20__EnergyPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__EnergyPerLengthUom
	*a = SOAP_DEFAULT_eml20__EnergyPerLengthUom;
#else
	*a = (enum eml20__EnergyPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerLengthUom(struct soap*, const char*, int, const enum eml20__EnergyPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__EnergyPerLengthUom2s(struct soap*, enum eml20__EnergyPerLengthUom);
SOAP_FMAC3 enum eml20__EnergyPerLengthUom * SOAP_FMAC4 soap_in_eml20__EnergyPerLengthUom(struct soap*, const char*, enum eml20__EnergyPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__EnergyPerLengthUom(struct soap*, const char*, enum eml20__EnergyPerLengthUom *);

SOAP_FMAC3 enum eml20__EnergyPerLengthUom * SOAP_FMAC4 soap_new_eml20__EnergyPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__EnergyPerLengthUom(struct soap*, const enum eml20__EnergyPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__EnergyPerLengthUom(struct soap *soap, enum eml20__EnergyPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerLengthUom(soap, p, "eml20:EnergyPerLengthUom", "eml20:EnergyPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerLengthUom(struct soap *soap, const char *URL, enum eml20__EnergyPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerLengthUom(soap, p, "eml20:EnergyPerLengthUom", "eml20:EnergyPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerLengthUom(struct soap *soap, const char *URL, enum eml20__EnergyPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerLengthUom(soap, p, "eml20:EnergyPerLengthUom", "eml20:EnergyPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerLengthUom(struct soap *soap, const char *URL, enum eml20__EnergyPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__EnergyPerLengthUom(soap, p, "eml20:EnergyPerLengthUom", "eml20:EnergyPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__EnergyPerLengthUom * SOAP_FMAC4 soap_get_eml20__EnergyPerLengthUom(struct soap*, enum eml20__EnergyPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__EnergyPerLengthUom(struct soap *soap, enum eml20__EnergyPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerLengthUom(struct soap *soap, const char *URL, enum eml20__EnergyPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerLengthUom(struct soap *soap, enum eml20__EnergyPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom_DEFINED

inline void soap_default_eml20__SignalingEventPerTimeUom(struct soap *soap, enum eml20__SignalingEventPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__SignalingEventPerTimeUom
	*a = SOAP_DEFAULT_eml20__SignalingEventPerTimeUom;
#else
	*a = (enum eml20__SignalingEventPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SignalingEventPerTimeUom(struct soap*, const char*, int, const enum eml20__SignalingEventPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__SignalingEventPerTimeUom2s(struct soap*, enum eml20__SignalingEventPerTimeUom);
SOAP_FMAC3 enum eml20__SignalingEventPerTimeUom * SOAP_FMAC4 soap_in_eml20__SignalingEventPerTimeUom(struct soap*, const char*, enum eml20__SignalingEventPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__SignalingEventPerTimeUom(struct soap*, const char*, enum eml20__SignalingEventPerTimeUom *);

SOAP_FMAC3 enum eml20__SignalingEventPerTimeUom * SOAP_FMAC4 soap_new_eml20__SignalingEventPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__SignalingEventPerTimeUom(struct soap*, const enum eml20__SignalingEventPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__SignalingEventPerTimeUom(struct soap *soap, enum eml20__SignalingEventPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__SignalingEventPerTimeUom(soap, p, "eml20:SignalingEventPerTimeUom", "eml20:SignalingEventPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__SignalingEventPerTimeUom(struct soap *soap, const char *URL, enum eml20__SignalingEventPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SignalingEventPerTimeUom(soap, p, "eml20:SignalingEventPerTimeUom", "eml20:SignalingEventPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SignalingEventPerTimeUom(struct soap *soap, const char *URL, enum eml20__SignalingEventPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SignalingEventPerTimeUom(soap, p, "eml20:SignalingEventPerTimeUom", "eml20:SignalingEventPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SignalingEventPerTimeUom(struct soap *soap, const char *URL, enum eml20__SignalingEventPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SignalingEventPerTimeUom(soap, p, "eml20:SignalingEventPerTimeUom", "eml20:SignalingEventPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__SignalingEventPerTimeUom * SOAP_FMAC4 soap_get_eml20__SignalingEventPerTimeUom(struct soap*, enum eml20__SignalingEventPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__SignalingEventPerTimeUom(struct soap *soap, enum eml20__SignalingEventPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SignalingEventPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SignalingEventPerTimeUom(struct soap *soap, const char *URL, enum eml20__SignalingEventPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SignalingEventPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SignalingEventPerTimeUom(struct soap *soap, enum eml20__SignalingEventPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SignalingEventPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom_DEFINED

inline void soap_default_eml20__PlaneAngleUom(struct soap *soap, enum eml20__PlaneAngleUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__PlaneAngleUom
	*a = SOAP_DEFAULT_eml20__PlaneAngleUom;
#else
	*a = (enum eml20__PlaneAngleUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PlaneAngleUom(struct soap*, const char*, int, const enum eml20__PlaneAngleUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__PlaneAngleUom2s(struct soap*, enum eml20__PlaneAngleUom);
SOAP_FMAC3 enum eml20__PlaneAngleUom * SOAP_FMAC4 soap_in_eml20__PlaneAngleUom(struct soap*, const char*, enum eml20__PlaneAngleUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__PlaneAngleUom(struct soap*, const char*, enum eml20__PlaneAngleUom *);

SOAP_FMAC3 enum eml20__PlaneAngleUom * SOAP_FMAC4 soap_new_eml20__PlaneAngleUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__PlaneAngleUom(struct soap*, const enum eml20__PlaneAngleUom *, const char*, const char*);

inline int soap_write_eml20__PlaneAngleUom(struct soap *soap, enum eml20__PlaneAngleUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__PlaneAngleUom(soap, p, "eml20:PlaneAngleUom", "eml20:PlaneAngleUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__PlaneAngleUom(struct soap *soap, const char *URL, enum eml20__PlaneAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PlaneAngleUom(soap, p, "eml20:PlaneAngleUom", "eml20:PlaneAngleUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PlaneAngleUom(struct soap *soap, const char *URL, enum eml20__PlaneAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PlaneAngleUom(soap, p, "eml20:PlaneAngleUom", "eml20:PlaneAngleUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PlaneAngleUom(struct soap *soap, const char *URL, enum eml20__PlaneAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__PlaneAngleUom(soap, p, "eml20:PlaneAngleUom", "eml20:PlaneAngleUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__PlaneAngleUom * SOAP_FMAC4 soap_get_eml20__PlaneAngleUom(struct soap*, enum eml20__PlaneAngleUom *, const char*, const char*);

inline int soap_read_eml20__PlaneAngleUom(struct soap *soap, enum eml20__PlaneAngleUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PlaneAngleUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PlaneAngleUom(struct soap *soap, const char *URL, enum eml20__PlaneAngleUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PlaneAngleUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PlaneAngleUom(struct soap *soap, enum eml20__PlaneAngleUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PlaneAngleUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom_DEFINED

inline void soap_default_eml20__MagneticFluxDensityUom(struct soap *soap, enum eml20__MagneticFluxDensityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticFluxDensityUom
	*a = SOAP_DEFAULT_eml20__MagneticFluxDensityUom;
#else
	*a = (enum eml20__MagneticFluxDensityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxDensityUom(struct soap*, const char*, int, const enum eml20__MagneticFluxDensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticFluxDensityUom2s(struct soap*, enum eml20__MagneticFluxDensityUom);
SOAP_FMAC3 enum eml20__MagneticFluxDensityUom * SOAP_FMAC4 soap_in_eml20__MagneticFluxDensityUom(struct soap*, const char*, enum eml20__MagneticFluxDensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticFluxDensityUom(struct soap*, const char*, enum eml20__MagneticFluxDensityUom *);

SOAP_FMAC3 enum eml20__MagneticFluxDensityUom * SOAP_FMAC4 soap_new_eml20__MagneticFluxDensityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticFluxDensityUom(struct soap*, const enum eml20__MagneticFluxDensityUom *, const char*, const char*);

inline int soap_write_eml20__MagneticFluxDensityUom(struct soap *soap, enum eml20__MagneticFluxDensityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityUom(soap, p, "eml20:MagneticFluxDensityUom", "eml20:MagneticFluxDensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxDensityUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityUom(soap, p, "eml20:MagneticFluxDensityUom", "eml20:MagneticFluxDensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxDensityUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityUom(soap, p, "eml20:MagneticFluxDensityUom", "eml20:MagneticFluxDensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxDensityUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityUom(soap, p, "eml20:MagneticFluxDensityUom", "eml20:MagneticFluxDensityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticFluxDensityUom * SOAP_FMAC4 soap_get_eml20__MagneticFluxDensityUom(struct soap*, enum eml20__MagneticFluxDensityUom *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxDensityUom(struct soap *soap, enum eml20__MagneticFluxDensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxDensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxDensityUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxDensityUom(struct soap *soap, enum eml20__MagneticFluxDensityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom_DEFINED

inline void soap_default_eml20__MassPerTimePerLengthUom(struct soap *soap, enum eml20__MassPerTimePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerTimePerLengthUom
	*a = SOAP_DEFAULT_eml20__MassPerTimePerLengthUom;
#else
	*a = (enum eml20__MassPerTimePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimePerLengthUom(struct soap*, const char*, int, const enum eml20__MassPerTimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerTimePerLengthUom2s(struct soap*, enum eml20__MassPerTimePerLengthUom);
SOAP_FMAC3 enum eml20__MassPerTimePerLengthUom * SOAP_FMAC4 soap_in_eml20__MassPerTimePerLengthUom(struct soap*, const char*, enum eml20__MassPerTimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerTimePerLengthUom(struct soap*, const char*, enum eml20__MassPerTimePerLengthUom *);

SOAP_FMAC3 enum eml20__MassPerTimePerLengthUom * SOAP_FMAC4 soap_new_eml20__MassPerTimePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerTimePerLengthUom(struct soap*, const enum eml20__MassPerTimePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__MassPerTimePerLengthUom(struct soap *soap, enum eml20__MassPerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerLengthUom(soap, p, "eml20:MassPerTimePerLengthUom", "eml20:MassPerTimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerLengthUom(soap, p, "eml20:MassPerTimePerLengthUom", "eml20:MassPerTimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerLengthUom(soap, p, "eml20:MassPerTimePerLengthUom", "eml20:MassPerTimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimePerLengthUom(soap, p, "eml20:MassPerTimePerLengthUom", "eml20:MassPerTimePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerTimePerLengthUom * SOAP_FMAC4 soap_get_eml20__MassPerTimePerLengthUom(struct soap*, enum eml20__MassPerTimePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__MassPerTimePerLengthUom(struct soap *soap, enum eml20__MassPerTimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimePerLengthUom(struct soap *soap, const char *URL, enum eml20__MassPerTimePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimePerLengthUom(struct soap *soap, enum eml20__MassPerTimePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom_DEFINED

inline void soap_default_eml20__ElectricChargePerAreaUom(struct soap *soap, enum eml20__ElectricChargePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricChargePerAreaUom
	*a = SOAP_DEFAULT_eml20__ElectricChargePerAreaUom;
#else
	*a = (enum eml20__ElectricChargePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerAreaUom(struct soap*, const char*, int, const enum eml20__ElectricChargePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricChargePerAreaUom2s(struct soap*, enum eml20__ElectricChargePerAreaUom);
SOAP_FMAC3 enum eml20__ElectricChargePerAreaUom * SOAP_FMAC4 soap_in_eml20__ElectricChargePerAreaUom(struct soap*, const char*, enum eml20__ElectricChargePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricChargePerAreaUom(struct soap*, const char*, enum eml20__ElectricChargePerAreaUom *);

SOAP_FMAC3 enum eml20__ElectricChargePerAreaUom * SOAP_FMAC4 soap_new_eml20__ElectricChargePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricChargePerAreaUom(struct soap*, const enum eml20__ElectricChargePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__ElectricChargePerAreaUom(struct soap *soap, enum eml20__ElectricChargePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerAreaUom(soap, p, "eml20:ElectricChargePerAreaUom", "eml20:ElectricChargePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerAreaUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerAreaUom(soap, p, "eml20:ElectricChargePerAreaUom", "eml20:ElectricChargePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerAreaUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerAreaUom(soap, p, "eml20:ElectricChargePerAreaUom", "eml20:ElectricChargePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerAreaUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricChargePerAreaUom(soap, p, "eml20:ElectricChargePerAreaUom", "eml20:ElectricChargePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricChargePerAreaUom * SOAP_FMAC4 soap_get_eml20__ElectricChargePerAreaUom(struct soap*, enum eml20__ElectricChargePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerAreaUom(struct soap *soap, enum eml20__ElectricChargePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerAreaUom(struct soap *soap, const char *URL, enum eml20__ElectricChargePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerAreaUom(struct soap *soap, enum eml20__ElectricChargePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom_DEFINED

inline void soap_default_eml20__VolumePerPressureUom(struct soap *soap, enum eml20__VolumePerPressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerPressureUom
	*a = SOAP_DEFAULT_eml20__VolumePerPressureUom;
#else
	*a = (enum eml20__VolumePerPressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerPressureUom(struct soap*, const char*, int, const enum eml20__VolumePerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerPressureUom2s(struct soap*, enum eml20__VolumePerPressureUom);
SOAP_FMAC3 enum eml20__VolumePerPressureUom * SOAP_FMAC4 soap_in_eml20__VolumePerPressureUom(struct soap*, const char*, enum eml20__VolumePerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerPressureUom(struct soap*, const char*, enum eml20__VolumePerPressureUom *);

SOAP_FMAC3 enum eml20__VolumePerPressureUom * SOAP_FMAC4 soap_new_eml20__VolumePerPressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerPressureUom(struct soap*, const enum eml20__VolumePerPressureUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerPressureUom(struct soap *soap, enum eml20__VolumePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerPressureUom(soap, p, "eml20:VolumePerPressureUom", "eml20:VolumePerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerPressureUom(soap, p, "eml20:VolumePerPressureUom", "eml20:VolumePerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerPressureUom(soap, p, "eml20:VolumePerPressureUom", "eml20:VolumePerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerPressureUom(soap, p, "eml20:VolumePerPressureUom", "eml20:VolumePerPressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerPressureUom * SOAP_FMAC4 soap_get_eml20__VolumePerPressureUom(struct soap*, enum eml20__VolumePerPressureUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerPressureUom(struct soap *soap, enum eml20__VolumePerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerPressureUom(struct soap *soap, const char *URL, enum eml20__VolumePerPressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerPressureUom(struct soap *soap, enum eml20__VolumePerPressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom_DEFINED

inline void soap_default_eml20__TimePerLengthUom(struct soap *soap, enum eml20__TimePerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TimePerLengthUom
	*a = SOAP_DEFAULT_eml20__TimePerLengthUom;
#else
	*a = (enum eml20__TimePerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerLengthUom(struct soap*, const char*, int, const enum eml20__TimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TimePerLengthUom2s(struct soap*, enum eml20__TimePerLengthUom);
SOAP_FMAC3 enum eml20__TimePerLengthUom * SOAP_FMAC4 soap_in_eml20__TimePerLengthUom(struct soap*, const char*, enum eml20__TimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TimePerLengthUom(struct soap*, const char*, enum eml20__TimePerLengthUom *);

SOAP_FMAC3 enum eml20__TimePerLengthUom * SOAP_FMAC4 soap_new_eml20__TimePerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TimePerLengthUom(struct soap*, const enum eml20__TimePerLengthUom *, const char*, const char*);

inline int soap_write_eml20__TimePerLengthUom(struct soap *soap, enum eml20__TimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TimePerLengthUom(soap, p, "eml20:TimePerLengthUom", "eml20:TimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerLengthUom(struct soap *soap, const char *URL, enum eml20__TimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerLengthUom(soap, p, "eml20:TimePerLengthUom", "eml20:TimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerLengthUom(struct soap *soap, const char *URL, enum eml20__TimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerLengthUom(soap, p, "eml20:TimePerLengthUom", "eml20:TimePerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerLengthUom(struct soap *soap, const char *URL, enum eml20__TimePerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TimePerLengthUom(soap, p, "eml20:TimePerLengthUom", "eml20:TimePerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TimePerLengthUom * SOAP_FMAC4 soap_get_eml20__TimePerLengthUom(struct soap*, enum eml20__TimePerLengthUom *, const char*, const char*);

inline int soap_read_eml20__TimePerLengthUom(struct soap *soap, enum eml20__TimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerLengthUom(struct soap *soap, const char *URL, enum eml20__TimePerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerLengthUom(struct soap *soap, enum eml20__TimePerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom_DEFINED

inline void soap_default_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ReciprocalElectricPotentialDifferenceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalElectricPotentialDifferenceUom
	*a = SOAP_DEFAULT_eml20__ReciprocalElectricPotentialDifferenceUom;
#else
	*a = (enum eml20__ReciprocalElectricPotentialDifferenceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, int, const enum eml20__ReciprocalElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalElectricPotentialDifferenceUom2s(struct soap*, enum eml20__ReciprocalElectricPotentialDifferenceUom);
SOAP_FMAC3 enum eml20__ReciprocalElectricPotentialDifferenceUom * SOAP_FMAC4 soap_in_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, enum eml20__ReciprocalElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, enum eml20__ReciprocalElectricPotentialDifferenceUom *);

SOAP_FMAC3 enum eml20__ReciprocalElectricPotentialDifferenceUom * SOAP_FMAC4 soap_new_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap*, const enum eml20__ReciprocalElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ReciprocalElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p, "eml20:ReciprocalElectricPotentialDifferenceUom", "eml20:ReciprocalElectricPotentialDifferenceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p, "eml20:ReciprocalElectricPotentialDifferenceUom", "eml20:ReciprocalElectricPotentialDifferenceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p, "eml20:ReciprocalElectricPotentialDifferenceUom", "eml20:ReciprocalElectricPotentialDifferenceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalElectricPotentialDifferenceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p, "eml20:ReciprocalElectricPotentialDifferenceUom", "eml20:ReciprocalElectricPotentialDifferenceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalElectricPotentialDifferenceUom * SOAP_FMAC4 soap_get_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap*, enum eml20__ReciprocalElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ReciprocalElectricPotentialDifferenceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, const char *URL, enum eml20__ReciprocalElectricPotentialDifferenceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml20__ReciprocalElectricPotentialDifferenceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalElectricPotentialDifferenceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom_DEFINED

inline void soap_default_eml20__VolumePerAreaUom(struct soap *soap, enum eml20__VolumePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerAreaUom
	*a = SOAP_DEFAULT_eml20__VolumePerAreaUom;
#else
	*a = (enum eml20__VolumePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerAreaUom(struct soap*, const char*, int, const enum eml20__VolumePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerAreaUom2s(struct soap*, enum eml20__VolumePerAreaUom);
SOAP_FMAC3 enum eml20__VolumePerAreaUom * SOAP_FMAC4 soap_in_eml20__VolumePerAreaUom(struct soap*, const char*, enum eml20__VolumePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerAreaUom(struct soap*, const char*, enum eml20__VolumePerAreaUom *);

SOAP_FMAC3 enum eml20__VolumePerAreaUom * SOAP_FMAC4 soap_new_eml20__VolumePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerAreaUom(struct soap*, const enum eml20__VolumePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerAreaUom(struct soap *soap, enum eml20__VolumePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerAreaUom(soap, p, "eml20:VolumePerAreaUom", "eml20:VolumePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerAreaUom(soap, p, "eml20:VolumePerAreaUom", "eml20:VolumePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerAreaUom(soap, p, "eml20:VolumePerAreaUom", "eml20:VolumePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerAreaUom(soap, p, "eml20:VolumePerAreaUom", "eml20:VolumePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerAreaUom * SOAP_FMAC4 soap_get_eml20__VolumePerAreaUom(struct soap*, enum eml20__VolumePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerAreaUom(struct soap *soap, enum eml20__VolumePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerAreaUom(struct soap *soap, enum eml20__VolumePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom_DEFINED

inline void soap_default_eml20__ForceUom(struct soap *soap, enum eml20__ForceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForceUom
	*a = SOAP_DEFAULT_eml20__ForceUom;
#else
	*a = (enum eml20__ForceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceUom(struct soap*, const char*, int, const enum eml20__ForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForceUom2s(struct soap*, enum eml20__ForceUom);
SOAP_FMAC3 enum eml20__ForceUom * SOAP_FMAC4 soap_in_eml20__ForceUom(struct soap*, const char*, enum eml20__ForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForceUom(struct soap*, const char*, enum eml20__ForceUom *);

SOAP_FMAC3 enum eml20__ForceUom * SOAP_FMAC4 soap_new_eml20__ForceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForceUom(struct soap*, const enum eml20__ForceUom *, const char*, const char*);

inline int soap_write_eml20__ForceUom(struct soap *soap, enum eml20__ForceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForceUom(soap, p, "eml20:ForceUom", "eml20:ForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceUom(struct soap *soap, const char *URL, enum eml20__ForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceUom(soap, p, "eml20:ForceUom", "eml20:ForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceUom(struct soap *soap, const char *URL, enum eml20__ForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceUom(soap, p, "eml20:ForceUom", "eml20:ForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceUom(struct soap *soap, const char *URL, enum eml20__ForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceUom(soap, p, "eml20:ForceUom", "eml20:ForceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForceUom * SOAP_FMAC4 soap_get_eml20__ForceUom(struct soap*, enum eml20__ForceUom *, const char*, const char*);

inline int soap_read_eml20__ForceUom(struct soap *soap, enum eml20__ForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceUom(struct soap *soap, const char *URL, enum eml20__ForceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceUom(struct soap *soap, enum eml20__ForceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom_DEFINED

inline void soap_default_eml20__ElectricCurrentDensityUom(struct soap *soap, enum eml20__ElectricCurrentDensityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricCurrentDensityUom
	*a = SOAP_DEFAULT_eml20__ElectricCurrentDensityUom;
#else
	*a = (enum eml20__ElectricCurrentDensityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricCurrentDensityUom(struct soap*, const char*, int, const enum eml20__ElectricCurrentDensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricCurrentDensityUom2s(struct soap*, enum eml20__ElectricCurrentDensityUom);
SOAP_FMAC3 enum eml20__ElectricCurrentDensityUom * SOAP_FMAC4 soap_in_eml20__ElectricCurrentDensityUom(struct soap*, const char*, enum eml20__ElectricCurrentDensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricCurrentDensityUom(struct soap*, const char*, enum eml20__ElectricCurrentDensityUom *);

SOAP_FMAC3 enum eml20__ElectricCurrentDensityUom * SOAP_FMAC4 soap_new_eml20__ElectricCurrentDensityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricCurrentDensityUom(struct soap*, const enum eml20__ElectricCurrentDensityUom *, const char*, const char*);

inline int soap_write_eml20__ElectricCurrentDensityUom(struct soap *soap, enum eml20__ElectricCurrentDensityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentDensityUom(soap, p, "eml20:ElectricCurrentDensityUom", "eml20:ElectricCurrentDensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricCurrentDensityUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentDensityUom(soap, p, "eml20:ElectricCurrentDensityUom", "eml20:ElectricCurrentDensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricCurrentDensityUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentDensityUom(soap, p, "eml20:ElectricCurrentDensityUom", "eml20:ElectricCurrentDensityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricCurrentDensityUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentDensityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricCurrentDensityUom(soap, p, "eml20:ElectricCurrentDensityUom", "eml20:ElectricCurrentDensityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricCurrentDensityUom * SOAP_FMAC4 soap_get_eml20__ElectricCurrentDensityUom(struct soap*, enum eml20__ElectricCurrentDensityUom *, const char*, const char*);

inline int soap_read_eml20__ElectricCurrentDensityUom(struct soap *soap, enum eml20__ElectricCurrentDensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricCurrentDensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricCurrentDensityUom(struct soap *soap, const char *URL, enum eml20__ElectricCurrentDensityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentDensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricCurrentDensityUom(struct soap *soap, enum eml20__ElectricCurrentDensityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentDensityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom_DEFINED

inline void soap_default_eml20__VolumetricThermalExpansionUom(struct soap *soap, enum eml20__VolumetricThermalExpansionUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumetricThermalExpansionUom
	*a = SOAP_DEFAULT_eml20__VolumetricThermalExpansionUom;
#else
	*a = (enum eml20__VolumetricThermalExpansionUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumetricThermalExpansionUom(struct soap*, const char*, int, const enum eml20__VolumetricThermalExpansionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumetricThermalExpansionUom2s(struct soap*, enum eml20__VolumetricThermalExpansionUom);
SOAP_FMAC3 enum eml20__VolumetricThermalExpansionUom * SOAP_FMAC4 soap_in_eml20__VolumetricThermalExpansionUom(struct soap*, const char*, enum eml20__VolumetricThermalExpansionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumetricThermalExpansionUom(struct soap*, const char*, enum eml20__VolumetricThermalExpansionUom *);

SOAP_FMAC3 enum eml20__VolumetricThermalExpansionUom * SOAP_FMAC4 soap_new_eml20__VolumetricThermalExpansionUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumetricThermalExpansionUom(struct soap*, const enum eml20__VolumetricThermalExpansionUom *, const char*, const char*);

inline int soap_write_eml20__VolumetricThermalExpansionUom(struct soap *soap, enum eml20__VolumetricThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumetricThermalExpansionUom(soap, p, "eml20:VolumetricThermalExpansionUom", "eml20:VolumetricThermalExpansionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumetricThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__VolumetricThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricThermalExpansionUom(soap, p, "eml20:VolumetricThermalExpansionUom", "eml20:VolumetricThermalExpansionUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumetricThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__VolumetricThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricThermalExpansionUom(soap, p, "eml20:VolumetricThermalExpansionUom", "eml20:VolumetricThermalExpansionUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumetricThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__VolumetricThermalExpansionUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumetricThermalExpansionUom(soap, p, "eml20:VolumetricThermalExpansionUom", "eml20:VolumetricThermalExpansionUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumetricThermalExpansionUom * SOAP_FMAC4 soap_get_eml20__VolumetricThermalExpansionUom(struct soap*, enum eml20__VolumetricThermalExpansionUom *, const char*, const char*);

inline int soap_read_eml20__VolumetricThermalExpansionUom(struct soap *soap, enum eml20__VolumetricThermalExpansionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumetricThermalExpansionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumetricThermalExpansionUom(struct soap *soap, const char *URL, enum eml20__VolumetricThermalExpansionUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumetricThermalExpansionUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumetricThermalExpansionUom(struct soap *soap, enum eml20__VolumetricThermalExpansionUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumetricThermalExpansionUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom_DEFINED

inline void soap_default_eml20__APIGammaRayUom(struct soap *soap, enum eml20__APIGammaRayUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__APIGammaRayUom
	*a = SOAP_DEFAULT_eml20__APIGammaRayUom;
#else
	*a = (enum eml20__APIGammaRayUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APIGammaRayUom(struct soap*, const char*, int, const enum eml20__APIGammaRayUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__APIGammaRayUom2s(struct soap*, enum eml20__APIGammaRayUom);
SOAP_FMAC3 enum eml20__APIGammaRayUom * SOAP_FMAC4 soap_in_eml20__APIGammaRayUom(struct soap*, const char*, enum eml20__APIGammaRayUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__APIGammaRayUom(struct soap*, const char*, enum eml20__APIGammaRayUom *);

SOAP_FMAC3 enum eml20__APIGammaRayUom * SOAP_FMAC4 soap_new_eml20__APIGammaRayUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__APIGammaRayUom(struct soap*, const enum eml20__APIGammaRayUom *, const char*, const char*);

inline int soap_write_eml20__APIGammaRayUom(struct soap *soap, enum eml20__APIGammaRayUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__APIGammaRayUom(soap, p, "eml20:APIGammaRayUom", "eml20:APIGammaRayUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__APIGammaRayUom(struct soap *soap, const char *URL, enum eml20__APIGammaRayUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGammaRayUom(soap, p, "eml20:APIGammaRayUom", "eml20:APIGammaRayUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APIGammaRayUom(struct soap *soap, const char *URL, enum eml20__APIGammaRayUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGammaRayUom(soap, p, "eml20:APIGammaRayUom", "eml20:APIGammaRayUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APIGammaRayUom(struct soap *soap, const char *URL, enum eml20__APIGammaRayUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APIGammaRayUom(soap, p, "eml20:APIGammaRayUom", "eml20:APIGammaRayUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__APIGammaRayUom * SOAP_FMAC4 soap_get_eml20__APIGammaRayUom(struct soap*, enum eml20__APIGammaRayUom *, const char*, const char*);

inline int soap_read_eml20__APIGammaRayUom(struct soap *soap, enum eml20__APIGammaRayUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APIGammaRayUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APIGammaRayUom(struct soap *soap, const char *URL, enum eml20__APIGammaRayUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APIGammaRayUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APIGammaRayUom(struct soap *soap, enum eml20__APIGammaRayUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APIGammaRayUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom_DEFINED

inline void soap_default_eml20__AreaUom(struct soap *soap, enum eml20__AreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AreaUom
	*a = SOAP_DEFAULT_eml20__AreaUom;
#else
	*a = (enum eml20__AreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaUom(struct soap*, const char*, int, const enum eml20__AreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AreaUom2s(struct soap*, enum eml20__AreaUom);
SOAP_FMAC3 enum eml20__AreaUom * SOAP_FMAC4 soap_in_eml20__AreaUom(struct soap*, const char*, enum eml20__AreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AreaUom(struct soap*, const char*, enum eml20__AreaUom *);

SOAP_FMAC3 enum eml20__AreaUom * SOAP_FMAC4 soap_new_eml20__AreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AreaUom(struct soap*, const enum eml20__AreaUom *, const char*, const char*);

inline int soap_write_eml20__AreaUom(struct soap *soap, enum eml20__AreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AreaUom(soap, p, "eml20:AreaUom", "eml20:AreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaUom(struct soap *soap, const char *URL, enum eml20__AreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaUom(soap, p, "eml20:AreaUom", "eml20:AreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaUom(struct soap *soap, const char *URL, enum eml20__AreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaUom(soap, p, "eml20:AreaUom", "eml20:AreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaUom(struct soap *soap, const char *URL, enum eml20__AreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AreaUom(soap, p, "eml20:AreaUom", "eml20:AreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AreaUom * SOAP_FMAC4 soap_get_eml20__AreaUom(struct soap*, enum eml20__AreaUom *, const char*, const char*);

inline int soap_read_eml20__AreaUom(struct soap *soap, enum eml20__AreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaUom(struct soap *soap, const char *URL, enum eml20__AreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaUom(struct soap *soap, enum eml20__AreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom_DEFINED

inline void soap_default_eml20__LengthPerLengthUom(struct soap *soap, enum eml20__LengthPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerLengthUom
	*a = SOAP_DEFAULT_eml20__LengthPerLengthUom;
#else
	*a = (enum eml20__LengthPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerLengthUom(struct soap*, const char*, int, const enum eml20__LengthPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerLengthUom2s(struct soap*, enum eml20__LengthPerLengthUom);
SOAP_FMAC3 enum eml20__LengthPerLengthUom * SOAP_FMAC4 soap_in_eml20__LengthPerLengthUom(struct soap*, const char*, enum eml20__LengthPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerLengthUom(struct soap*, const char*, enum eml20__LengthPerLengthUom *);

SOAP_FMAC3 enum eml20__LengthPerLengthUom * SOAP_FMAC4 soap_new_eml20__LengthPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerLengthUom(struct soap*, const enum eml20__LengthPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerLengthUom(struct soap *soap, enum eml20__LengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerLengthUom(soap, p, "eml20:LengthPerLengthUom", "eml20:LengthPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__LengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerLengthUom(soap, p, "eml20:LengthPerLengthUom", "eml20:LengthPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__LengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerLengthUom(soap, p, "eml20:LengthPerLengthUom", "eml20:LengthPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__LengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerLengthUom(soap, p, "eml20:LengthPerLengthUom", "eml20:LengthPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerLengthUom * SOAP_FMAC4 soap_get_eml20__LengthPerLengthUom(struct soap*, enum eml20__LengthPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerLengthUom(struct soap *soap, enum eml20__LengthPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__LengthPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerLengthUom(struct soap *soap, enum eml20__LengthPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom_DEFINED

inline void soap_default_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml20__TemperatureIntervalPerPressureUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__TemperatureIntervalPerPressureUom
	*a = SOAP_DEFAULT_eml20__TemperatureIntervalPerPressureUom;
#else
	*a = (enum eml20__TemperatureIntervalPerPressureUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerPressureUom(struct soap*, const char*, int, const enum eml20__TemperatureIntervalPerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__TemperatureIntervalPerPressureUom2s(struct soap*, enum eml20__TemperatureIntervalPerPressureUom);
SOAP_FMAC3 enum eml20__TemperatureIntervalPerPressureUom * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerPressureUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__TemperatureIntervalPerPressureUom(struct soap*, const char*, enum eml20__TemperatureIntervalPerPressureUom *);

SOAP_FMAC3 enum eml20__TemperatureIntervalPerPressureUom * SOAP_FMAC4 soap_new_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TemperatureIntervalPerPressureUom(struct soap*, const enum eml20__TemperatureIntervalPerPressureUom *, const char*, const char*);

inline int soap_write_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml20__TemperatureIntervalPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerPressureUom(soap, p, "eml20:TemperatureIntervalPerPressureUom", "eml20:TemperatureIntervalPerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerPressureUom(soap, p, "eml20:TemperatureIntervalPerPressureUom", "eml20:TemperatureIntervalPerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerPressureUom(soap, p, "eml20:TemperatureIntervalPerPressureUom", "eml20:TemperatureIntervalPerPressureUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerPressureUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TemperatureIntervalPerPressureUom(soap, p, "eml20:TemperatureIntervalPerPressureUom", "eml20:TemperatureIntervalPerPressureUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__TemperatureIntervalPerPressureUom * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerPressureUom(struct soap*, enum eml20__TemperatureIntervalPerPressureUom *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml20__TemperatureIntervalPerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, const char *URL, enum eml20__TemperatureIntervalPerPressureUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml20__TemperatureIntervalPerPressureUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerPressureUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom_DEFINED

inline void soap_default_eml20__ReciprocalTimeUom(struct soap *soap, enum eml20__ReciprocalTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ReciprocalTimeUom
	*a = SOAP_DEFAULT_eml20__ReciprocalTimeUom;
#else
	*a = (enum eml20__ReciprocalTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalTimeUom(struct soap*, const char*, int, const enum eml20__ReciprocalTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ReciprocalTimeUom2s(struct soap*, enum eml20__ReciprocalTimeUom);
SOAP_FMAC3 enum eml20__ReciprocalTimeUom * SOAP_FMAC4 soap_in_eml20__ReciprocalTimeUom(struct soap*, const char*, enum eml20__ReciprocalTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ReciprocalTimeUom(struct soap*, const char*, enum eml20__ReciprocalTimeUom *);

SOAP_FMAC3 enum eml20__ReciprocalTimeUom * SOAP_FMAC4 soap_new_eml20__ReciprocalTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ReciprocalTimeUom(struct soap*, const enum eml20__ReciprocalTimeUom *, const char*, const char*);

inline int soap_write_eml20__ReciprocalTimeUom(struct soap *soap, enum eml20__ReciprocalTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalTimeUom(soap, p, "eml20:ReciprocalTimeUom", "eml20:ReciprocalTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalTimeUom(soap, p, "eml20:ReciprocalTimeUom", "eml20:ReciprocalTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalTimeUom(soap, p, "eml20:ReciprocalTimeUom", "eml20:ReciprocalTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ReciprocalTimeUom(soap, p, "eml20:ReciprocalTimeUom", "eml20:ReciprocalTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ReciprocalTimeUom * SOAP_FMAC4 soap_get_eml20__ReciprocalTimeUom(struct soap*, enum eml20__ReciprocalTimeUom *, const char*, const char*);

inline int soap_read_eml20__ReciprocalTimeUom(struct soap *soap, enum eml20__ReciprocalTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalTimeUom(struct soap *soap, const char *URL, enum eml20__ReciprocalTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalTimeUom(struct soap *soap, enum eml20__ReciprocalTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom_DEFINED

inline void soap_default_eml20__APINeutronUom(struct soap *soap, enum eml20__APINeutronUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__APINeutronUom
	*a = SOAP_DEFAULT_eml20__APINeutronUom;
#else
	*a = (enum eml20__APINeutronUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APINeutronUom(struct soap*, const char*, int, const enum eml20__APINeutronUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__APINeutronUom2s(struct soap*, enum eml20__APINeutronUom);
SOAP_FMAC3 enum eml20__APINeutronUom * SOAP_FMAC4 soap_in_eml20__APINeutronUom(struct soap*, const char*, enum eml20__APINeutronUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__APINeutronUom(struct soap*, const char*, enum eml20__APINeutronUom *);

SOAP_FMAC3 enum eml20__APINeutronUom * SOAP_FMAC4 soap_new_eml20__APINeutronUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__APINeutronUom(struct soap*, const enum eml20__APINeutronUom *, const char*, const char*);

inline int soap_write_eml20__APINeutronUom(struct soap *soap, enum eml20__APINeutronUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__APINeutronUom(soap, p, "eml20:APINeutronUom", "eml20:APINeutronUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__APINeutronUom(struct soap *soap, const char *URL, enum eml20__APINeutronUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APINeutronUom(soap, p, "eml20:APINeutronUom", "eml20:APINeutronUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APINeutronUom(struct soap *soap, const char *URL, enum eml20__APINeutronUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APINeutronUom(soap, p, "eml20:APINeutronUom", "eml20:APINeutronUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APINeutronUom(struct soap *soap, const char *URL, enum eml20__APINeutronUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__APINeutronUom(soap, p, "eml20:APINeutronUom", "eml20:APINeutronUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__APINeutronUom * SOAP_FMAC4 soap_get_eml20__APINeutronUom(struct soap*, enum eml20__APINeutronUom *, const char*, const char*);

inline int soap_read_eml20__APINeutronUom(struct soap *soap, enum eml20__APINeutronUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APINeutronUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APINeutronUom(struct soap *soap, const char *URL, enum eml20__APINeutronUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APINeutronUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APINeutronUom(struct soap *soap, enum eml20__APINeutronUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APINeutronUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom_DEFINED

inline void soap_default_eml20__DipoleMomentUom(struct soap *soap, enum eml20__DipoleMomentUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__DipoleMomentUom
	*a = SOAP_DEFAULT_eml20__DipoleMomentUom;
#else
	*a = (enum eml20__DipoleMomentUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DipoleMomentUom(struct soap*, const char*, int, const enum eml20__DipoleMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__DipoleMomentUom2s(struct soap*, enum eml20__DipoleMomentUom);
SOAP_FMAC3 enum eml20__DipoleMomentUom * SOAP_FMAC4 soap_in_eml20__DipoleMomentUom(struct soap*, const char*, enum eml20__DipoleMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__DipoleMomentUom(struct soap*, const char*, enum eml20__DipoleMomentUom *);

SOAP_FMAC3 enum eml20__DipoleMomentUom * SOAP_FMAC4 soap_new_eml20__DipoleMomentUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DipoleMomentUom(struct soap*, const enum eml20__DipoleMomentUom *, const char*, const char*);

inline int soap_write_eml20__DipoleMomentUom(struct soap *soap, enum eml20__DipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DipoleMomentUom(soap, p, "eml20:DipoleMomentUom", "eml20:DipoleMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DipoleMomentUom(struct soap *soap, const char *URL, enum eml20__DipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DipoleMomentUom(soap, p, "eml20:DipoleMomentUom", "eml20:DipoleMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DipoleMomentUom(struct soap *soap, const char *URL, enum eml20__DipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DipoleMomentUom(soap, p, "eml20:DipoleMomentUom", "eml20:DipoleMomentUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DipoleMomentUom(struct soap *soap, const char *URL, enum eml20__DipoleMomentUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DipoleMomentUom(soap, p, "eml20:DipoleMomentUom", "eml20:DipoleMomentUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__DipoleMomentUom * SOAP_FMAC4 soap_get_eml20__DipoleMomentUom(struct soap*, enum eml20__DipoleMomentUom *, const char*, const char*);

inline int soap_read_eml20__DipoleMomentUom(struct soap *soap, enum eml20__DipoleMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DipoleMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DipoleMomentUom(struct soap *soap, const char *URL, enum eml20__DipoleMomentUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DipoleMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DipoleMomentUom(struct soap *soap, enum eml20__DipoleMomentUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DipoleMomentUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom_DEFINED

inline void soap_default_eml20__AmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstanceUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstanceUom;
#else
	*a = (enum eml20__AmountOfSubstanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstanceUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstanceUom2s(struct soap*, enum eml20__AmountOfSubstanceUom);
SOAP_FMAC3 enum eml20__AmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstanceUom(struct soap*, const char*, enum eml20__AmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstanceUom(struct soap*, const char*, enum eml20__AmountOfSubstanceUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstanceUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstanceUom(struct soap*, const enum eml20__AmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstanceUom", "eml20:AmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstanceUom", "eml20:AmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstanceUom", "eml20:AmountOfSubstanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstanceUom(soap, p, "eml20:AmountOfSubstanceUom", "eml20:AmountOfSubstanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstanceUom(struct soap*, enum eml20__AmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstanceUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstanceUom(struct soap *soap, enum eml20__AmountOfSubstanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom_DEFINED

inline void soap_default_eml20__MolarVolumeUom(struct soap *soap, enum eml20__MolarVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MolarVolumeUom
	*a = SOAP_DEFAULT_eml20__MolarVolumeUom;
#else
	*a = (enum eml20__MolarVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarVolumeUom(struct soap*, const char*, int, const enum eml20__MolarVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MolarVolumeUom2s(struct soap*, enum eml20__MolarVolumeUom);
SOAP_FMAC3 enum eml20__MolarVolumeUom * SOAP_FMAC4 soap_in_eml20__MolarVolumeUom(struct soap*, const char*, enum eml20__MolarVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MolarVolumeUom(struct soap*, const char*, enum eml20__MolarVolumeUom *);

SOAP_FMAC3 enum eml20__MolarVolumeUom * SOAP_FMAC4 soap_new_eml20__MolarVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MolarVolumeUom(struct soap*, const enum eml20__MolarVolumeUom *, const char*, const char*);

inline int soap_write_eml20__MolarVolumeUom(struct soap *soap, enum eml20__MolarVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MolarVolumeUom(soap, p, "eml20:MolarVolumeUom", "eml20:MolarVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarVolumeUom(struct soap *soap, const char *URL, enum eml20__MolarVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarVolumeUom(soap, p, "eml20:MolarVolumeUom", "eml20:MolarVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarVolumeUom(struct soap *soap, const char *URL, enum eml20__MolarVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarVolumeUom(soap, p, "eml20:MolarVolumeUom", "eml20:MolarVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarVolumeUom(struct soap *soap, const char *URL, enum eml20__MolarVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolarVolumeUom(soap, p, "eml20:MolarVolumeUom", "eml20:MolarVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MolarVolumeUom * SOAP_FMAC4 soap_get_eml20__MolarVolumeUom(struct soap*, enum eml20__MolarVolumeUom *, const char*, const char*);

inline int soap_read_eml20__MolarVolumeUom(struct soap *soap, enum eml20__MolarVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarVolumeUom(struct soap *soap, const char *URL, enum eml20__MolarVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarVolumeUom(struct soap *soap, enum eml20__MolarVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom_DEFINED

inline void soap_default_eml20__MassPerVolumeUom(struct soap *soap, enum eml20__MassPerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerVolumeUom
	*a = SOAP_DEFAULT_eml20__MassPerVolumeUom;
#else
	*a = (enum eml20__MassPerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerVolumeUom(struct soap*, const char*, int, const enum eml20__MassPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerVolumeUom2s(struct soap*, enum eml20__MassPerVolumeUom);
SOAP_FMAC3 enum eml20__MassPerVolumeUom * SOAP_FMAC4 soap_in_eml20__MassPerVolumeUom(struct soap*, const char*, enum eml20__MassPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerVolumeUom(struct soap*, const char*, enum eml20__MassPerVolumeUom *);

SOAP_FMAC3 enum eml20__MassPerVolumeUom * SOAP_FMAC4 soap_new_eml20__MassPerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerVolumeUom(struct soap*, const enum eml20__MassPerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__MassPerVolumeUom(struct soap *soap, enum eml20__MassPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumeUom(soap, p, "eml20:MassPerVolumeUom", "eml20:MassPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerVolumeUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumeUom(soap, p, "eml20:MassPerVolumeUom", "eml20:MassPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerVolumeUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumeUom(soap, p, "eml20:MassPerVolumeUom", "eml20:MassPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerVolumeUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerVolumeUom(soap, p, "eml20:MassPerVolumeUom", "eml20:MassPerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerVolumeUom * SOAP_FMAC4 soap_get_eml20__MassPerVolumeUom(struct soap*, enum eml20__MassPerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__MassPerVolumeUom(struct soap *soap, enum eml20__MassPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerVolumeUom(struct soap *soap, const char *URL, enum eml20__MassPerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerVolumeUom(struct soap *soap, enum eml20__MassPerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom_DEFINED

inline void soap_default_eml20__MomentOfForceUom(struct soap *soap, enum eml20__MomentOfForceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MomentOfForceUom
	*a = SOAP_DEFAULT_eml20__MomentOfForceUom;
#else
	*a = (enum eml20__MomentOfForceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentOfForceUom(struct soap*, const char*, int, const enum eml20__MomentOfForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MomentOfForceUom2s(struct soap*, enum eml20__MomentOfForceUom);
SOAP_FMAC3 enum eml20__MomentOfForceUom * SOAP_FMAC4 soap_in_eml20__MomentOfForceUom(struct soap*, const char*, enum eml20__MomentOfForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MomentOfForceUom(struct soap*, const char*, enum eml20__MomentOfForceUom *);

SOAP_FMAC3 enum eml20__MomentOfForceUom * SOAP_FMAC4 soap_new_eml20__MomentOfForceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MomentOfForceUom(struct soap*, const enum eml20__MomentOfForceUom *, const char*, const char*);

inline int soap_write_eml20__MomentOfForceUom(struct soap *soap, enum eml20__MomentOfForceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MomentOfForceUom(soap, p, "eml20:MomentOfForceUom", "eml20:MomentOfForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentOfForceUom(struct soap *soap, const char *URL, enum eml20__MomentOfForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfForceUom(soap, p, "eml20:MomentOfForceUom", "eml20:MomentOfForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentOfForceUom(struct soap *soap, const char *URL, enum eml20__MomentOfForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfForceUom(soap, p, "eml20:MomentOfForceUom", "eml20:MomentOfForceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentOfForceUom(struct soap *soap, const char *URL, enum eml20__MomentOfForceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfForceUom(soap, p, "eml20:MomentOfForceUom", "eml20:MomentOfForceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MomentOfForceUom * SOAP_FMAC4 soap_get_eml20__MomentOfForceUom(struct soap*, enum eml20__MomentOfForceUom *, const char*, const char*);

inline int soap_read_eml20__MomentOfForceUom(struct soap *soap, enum eml20__MomentOfForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentOfForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentOfForceUom(struct soap *soap, const char *URL, enum eml20__MomentOfForceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentOfForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentOfForceUom(struct soap *soap, enum eml20__MomentOfForceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentOfForceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerVolumeUom(struct soap *soap, enum eml20__VolumePerTimePerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerVolumeUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerVolumeUom;
#else
	*a = (enum eml20__VolumePerTimePerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerVolumeUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerVolumeUom2s(struct soap*, enum eml20__VolumePerTimePerVolumeUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerVolumeUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerVolumeUom(struct soap*, const char*, enum eml20__VolumePerTimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerVolumeUom(struct soap*, const char*, enum eml20__VolumePerTimePerVolumeUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerVolumeUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerVolumeUom(struct soap*, const enum eml20__VolumePerTimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerVolumeUom(struct soap *soap, enum eml20__VolumePerTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerVolumeUom(soap, p, "eml20:VolumePerTimePerVolumeUom", "eml20:VolumePerTimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerVolumeUom(soap, p, "eml20:VolumePerTimePerVolumeUom", "eml20:VolumePerTimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerVolumeUom(soap, p, "eml20:VolumePerTimePerVolumeUom", "eml20:VolumePerTimePerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerVolumeUom(soap, p, "eml20:VolumePerTimePerVolumeUom", "eml20:VolumePerTimePerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerVolumeUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerVolumeUom(struct soap*, enum eml20__VolumePerTimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerVolumeUom(struct soap *soap, enum eml20__VolumePerTimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerVolumeUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerVolumeUom(struct soap *soap, enum eml20__VolumePerTimePerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom_DEFINED

inline void soap_default_eml20__SolidAngleUom(struct soap *soap, enum eml20__SolidAngleUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__SolidAngleUom
	*a = SOAP_DEFAULT_eml20__SolidAngleUom;
#else
	*a = (enum eml20__SolidAngleUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SolidAngleUom(struct soap*, const char*, int, const enum eml20__SolidAngleUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__SolidAngleUom2s(struct soap*, enum eml20__SolidAngleUom);
SOAP_FMAC3 enum eml20__SolidAngleUom * SOAP_FMAC4 soap_in_eml20__SolidAngleUom(struct soap*, const char*, enum eml20__SolidAngleUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__SolidAngleUom(struct soap*, const char*, enum eml20__SolidAngleUom *);

SOAP_FMAC3 enum eml20__SolidAngleUom * SOAP_FMAC4 soap_new_eml20__SolidAngleUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__SolidAngleUom(struct soap*, const enum eml20__SolidAngleUom *, const char*, const char*);

inline int soap_write_eml20__SolidAngleUom(struct soap *soap, enum eml20__SolidAngleUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__SolidAngleUom(soap, p, "eml20:SolidAngleUom", "eml20:SolidAngleUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__SolidAngleUom(struct soap *soap, const char *URL, enum eml20__SolidAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SolidAngleUom(soap, p, "eml20:SolidAngleUom", "eml20:SolidAngleUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SolidAngleUom(struct soap *soap, const char *URL, enum eml20__SolidAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SolidAngleUom(soap, p, "eml20:SolidAngleUom", "eml20:SolidAngleUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SolidAngleUom(struct soap *soap, const char *URL, enum eml20__SolidAngleUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__SolidAngleUom(soap, p, "eml20:SolidAngleUom", "eml20:SolidAngleUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__SolidAngleUom * SOAP_FMAC4 soap_get_eml20__SolidAngleUom(struct soap*, enum eml20__SolidAngleUom *, const char*, const char*);

inline int soap_read_eml20__SolidAngleUom(struct soap *soap, enum eml20__SolidAngleUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SolidAngleUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SolidAngleUom(struct soap *soap, const char *URL, enum eml20__SolidAngleUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SolidAngleUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SolidAngleUom(struct soap *soap, enum eml20__SolidAngleUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SolidAngleUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom_DEFINED

inline void soap_default_eml20__ForceLengthPerLengthUom(struct soap *soap, enum eml20__ForceLengthPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ForceLengthPerLengthUom
	*a = SOAP_DEFAULT_eml20__ForceLengthPerLengthUom;
#else
	*a = (enum eml20__ForceLengthPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceLengthPerLengthUom(struct soap*, const char*, int, const enum eml20__ForceLengthPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ForceLengthPerLengthUom2s(struct soap*, enum eml20__ForceLengthPerLengthUom);
SOAP_FMAC3 enum eml20__ForceLengthPerLengthUom * SOAP_FMAC4 soap_in_eml20__ForceLengthPerLengthUom(struct soap*, const char*, enum eml20__ForceLengthPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ForceLengthPerLengthUom(struct soap*, const char*, enum eml20__ForceLengthPerLengthUom *);

SOAP_FMAC3 enum eml20__ForceLengthPerLengthUom * SOAP_FMAC4 soap_new_eml20__ForceLengthPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ForceLengthPerLengthUom(struct soap*, const enum eml20__ForceLengthPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__ForceLengthPerLengthUom(struct soap *soap, enum eml20__ForceLengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ForceLengthPerLengthUom(soap, p, "eml20:ForceLengthPerLengthUom", "eml20:ForceLengthPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceLengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__ForceLengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceLengthPerLengthUom(soap, p, "eml20:ForceLengthPerLengthUom", "eml20:ForceLengthPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceLengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__ForceLengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceLengthPerLengthUom(soap, p, "eml20:ForceLengthPerLengthUom", "eml20:ForceLengthPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceLengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__ForceLengthPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ForceLengthPerLengthUom(soap, p, "eml20:ForceLengthPerLengthUom", "eml20:ForceLengthPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ForceLengthPerLengthUom * SOAP_FMAC4 soap_get_eml20__ForceLengthPerLengthUom(struct soap*, enum eml20__ForceLengthPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__ForceLengthPerLengthUom(struct soap *soap, enum eml20__ForceLengthPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceLengthPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceLengthPerLengthUom(struct soap *soap, const char *URL, enum eml20__ForceLengthPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceLengthPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceLengthPerLengthUom(struct soap *soap, enum eml20__ForceLengthPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceLengthPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom_DEFINED

inline void soap_default_eml20__LengthPerTimeUom(struct soap *soap, enum eml20__LengthPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerTimeUom
	*a = SOAP_DEFAULT_eml20__LengthPerTimeUom;
#else
	*a = (enum eml20__LengthPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerTimeUom(struct soap*, const char*, int, const enum eml20__LengthPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerTimeUom2s(struct soap*, enum eml20__LengthPerTimeUom);
SOAP_FMAC3 enum eml20__LengthPerTimeUom * SOAP_FMAC4 soap_in_eml20__LengthPerTimeUom(struct soap*, const char*, enum eml20__LengthPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerTimeUom(struct soap*, const char*, enum eml20__LengthPerTimeUom *);

SOAP_FMAC3 enum eml20__LengthPerTimeUom * SOAP_FMAC4 soap_new_eml20__LengthPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerTimeUom(struct soap*, const enum eml20__LengthPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerTimeUom(struct soap *soap, enum eml20__LengthPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTimeUom(soap, p, "eml20:LengthPerTimeUom", "eml20:LengthPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerTimeUom(struct soap *soap, const char *URL, enum eml20__LengthPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTimeUom(soap, p, "eml20:LengthPerTimeUom", "eml20:LengthPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerTimeUom(struct soap *soap, const char *URL, enum eml20__LengthPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTimeUom(soap, p, "eml20:LengthPerTimeUom", "eml20:LengthPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerTimeUom(struct soap *soap, const char *URL, enum eml20__LengthPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerTimeUom(soap, p, "eml20:LengthPerTimeUom", "eml20:LengthPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerTimeUom * SOAP_FMAC4 soap_get_eml20__LengthPerTimeUom(struct soap*, enum eml20__LengthPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerTimeUom(struct soap *soap, enum eml20__LengthPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerTimeUom(struct soap *soap, const char *URL, enum eml20__LengthPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerTimeUom(struct soap *soap, enum eml20__LengthPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom_DEFINED

inline void soap_default_eml20__QuantityOfLightUom(struct soap *soap, enum eml20__QuantityOfLightUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__QuantityOfLightUom
	*a = SOAP_DEFAULT_eml20__QuantityOfLightUom;
#else
	*a = (enum eml20__QuantityOfLightUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__QuantityOfLightUom(struct soap*, const char*, int, const enum eml20__QuantityOfLightUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__QuantityOfLightUom2s(struct soap*, enum eml20__QuantityOfLightUom);
SOAP_FMAC3 enum eml20__QuantityOfLightUom * SOAP_FMAC4 soap_in_eml20__QuantityOfLightUom(struct soap*, const char*, enum eml20__QuantityOfLightUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__QuantityOfLightUom(struct soap*, const char*, enum eml20__QuantityOfLightUom *);

SOAP_FMAC3 enum eml20__QuantityOfLightUom * SOAP_FMAC4 soap_new_eml20__QuantityOfLightUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__QuantityOfLightUom(struct soap*, const enum eml20__QuantityOfLightUom *, const char*, const char*);

inline int soap_write_eml20__QuantityOfLightUom(struct soap *soap, enum eml20__QuantityOfLightUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__QuantityOfLightUom(soap, p, "eml20:QuantityOfLightUom", "eml20:QuantityOfLightUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__QuantityOfLightUom(struct soap *soap, const char *URL, enum eml20__QuantityOfLightUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__QuantityOfLightUom(soap, p, "eml20:QuantityOfLightUom", "eml20:QuantityOfLightUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__QuantityOfLightUom(struct soap *soap, const char *URL, enum eml20__QuantityOfLightUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__QuantityOfLightUom(soap, p, "eml20:QuantityOfLightUom", "eml20:QuantityOfLightUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__QuantityOfLightUom(struct soap *soap, const char *URL, enum eml20__QuantityOfLightUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__QuantityOfLightUom(soap, p, "eml20:QuantityOfLightUom", "eml20:QuantityOfLightUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__QuantityOfLightUom * SOAP_FMAC4 soap_get_eml20__QuantityOfLightUom(struct soap*, enum eml20__QuantityOfLightUom *, const char*, const char*);

inline int soap_read_eml20__QuantityOfLightUom(struct soap *soap, enum eml20__QuantityOfLightUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__QuantityOfLightUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__QuantityOfLightUom(struct soap *soap, const char *URL, enum eml20__QuantityOfLightUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__QuantityOfLightUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__QuantityOfLightUom(struct soap *soap, enum eml20__QuantityOfLightUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__QuantityOfLightUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom_DEFINED

inline void soap_default_eml20__ThermalConductanceUom(struct soap *soap, enum eml20__ThermalConductanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ThermalConductanceUom
	*a = SOAP_DEFAULT_eml20__ThermalConductanceUom;
#else
	*a = (enum eml20__ThermalConductanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalConductanceUom(struct soap*, const char*, int, const enum eml20__ThermalConductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ThermalConductanceUom2s(struct soap*, enum eml20__ThermalConductanceUom);
SOAP_FMAC3 enum eml20__ThermalConductanceUom * SOAP_FMAC4 soap_in_eml20__ThermalConductanceUom(struct soap*, const char*, enum eml20__ThermalConductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ThermalConductanceUom(struct soap*, const char*, enum eml20__ThermalConductanceUom *);

SOAP_FMAC3 enum eml20__ThermalConductanceUom * SOAP_FMAC4 soap_new_eml20__ThermalConductanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ThermalConductanceUom(struct soap*, const enum eml20__ThermalConductanceUom *, const char*, const char*);

inline int soap_write_eml20__ThermalConductanceUom(struct soap *soap, enum eml20__ThermalConductanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductanceUom(soap, p, "eml20:ThermalConductanceUom", "eml20:ThermalConductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalConductanceUom(struct soap *soap, const char *URL, enum eml20__ThermalConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductanceUom(soap, p, "eml20:ThermalConductanceUom", "eml20:ThermalConductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalConductanceUom(struct soap *soap, const char *URL, enum eml20__ThermalConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductanceUom(soap, p, "eml20:ThermalConductanceUom", "eml20:ThermalConductanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalConductanceUom(struct soap *soap, const char *URL, enum eml20__ThermalConductanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ThermalConductanceUom(soap, p, "eml20:ThermalConductanceUom", "eml20:ThermalConductanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ThermalConductanceUom * SOAP_FMAC4 soap_get_eml20__ThermalConductanceUom(struct soap*, enum eml20__ThermalConductanceUom *, const char*, const char*);

inline int soap_read_eml20__ThermalConductanceUom(struct soap *soap, enum eml20__ThermalConductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalConductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalConductanceUom(struct soap *soap, const char *URL, enum eml20__ThermalConductanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalConductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalConductanceUom(struct soap *soap, enum eml20__ThermalConductanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalConductanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom_DEFINED

inline void soap_default_eml20__VolumeUom(struct soap *soap, enum eml20__VolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumeUom
	*a = SOAP_DEFAULT_eml20__VolumeUom;
#else
	*a = (enum eml20__VolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumeUom(struct soap*, const char*, int, const enum eml20__VolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumeUom2s(struct soap*, enum eml20__VolumeUom);
SOAP_FMAC3 enum eml20__VolumeUom * SOAP_FMAC4 soap_in_eml20__VolumeUom(struct soap*, const char*, enum eml20__VolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumeUom(struct soap*, const char*, enum eml20__VolumeUom *);

SOAP_FMAC3 enum eml20__VolumeUom * SOAP_FMAC4 soap_new_eml20__VolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumeUom(struct soap*, const enum eml20__VolumeUom *, const char*, const char*);

inline int soap_write_eml20__VolumeUom(struct soap *soap, enum eml20__VolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumeUom(soap, p, "eml20:VolumeUom", "eml20:VolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumeUom(struct soap *soap, const char *URL, enum eml20__VolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeUom(soap, p, "eml20:VolumeUom", "eml20:VolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumeUom(struct soap *soap, const char *URL, enum eml20__VolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeUom(soap, p, "eml20:VolumeUom", "eml20:VolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumeUom(struct soap *soap, const char *URL, enum eml20__VolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumeUom(soap, p, "eml20:VolumeUom", "eml20:VolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumeUom * SOAP_FMAC4 soap_get_eml20__VolumeUom(struct soap*, enum eml20__VolumeUom *, const char*, const char*);

inline int soap_read_eml20__VolumeUom(struct soap *soap, enum eml20__VolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumeUom(struct soap *soap, const char *URL, enum eml20__VolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumeUom(struct soap *soap, enum eml20__VolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom_DEFINED

inline void soap_default_eml20__MagneticFluxUom(struct soap *soap, enum eml20__MagneticFluxUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticFluxUom
	*a = SOAP_DEFAULT_eml20__MagneticFluxUom;
#else
	*a = (enum eml20__MagneticFluxUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxUom(struct soap*, const char*, int, const enum eml20__MagneticFluxUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticFluxUom2s(struct soap*, enum eml20__MagneticFluxUom);
SOAP_FMAC3 enum eml20__MagneticFluxUom * SOAP_FMAC4 soap_in_eml20__MagneticFluxUom(struct soap*, const char*, enum eml20__MagneticFluxUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticFluxUom(struct soap*, const char*, enum eml20__MagneticFluxUom *);

SOAP_FMAC3 enum eml20__MagneticFluxUom * SOAP_FMAC4 soap_new_eml20__MagneticFluxUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticFluxUom(struct soap*, const enum eml20__MagneticFluxUom *, const char*, const char*);

inline int soap_write_eml20__MagneticFluxUom(struct soap *soap, enum eml20__MagneticFluxUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxUom(soap, p, "eml20:MagneticFluxUom", "eml20:MagneticFluxUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxUom(soap, p, "eml20:MagneticFluxUom", "eml20:MagneticFluxUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxUom(soap, p, "eml20:MagneticFluxUom", "eml20:MagneticFluxUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxUom(soap, p, "eml20:MagneticFluxUom", "eml20:MagneticFluxUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticFluxUom * SOAP_FMAC4 soap_get_eml20__MagneticFluxUom(struct soap*, enum eml20__MagneticFluxUom *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxUom(struct soap *soap, enum eml20__MagneticFluxUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxUom(struct soap *soap, enum eml20__MagneticFluxUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom_DEFINED

inline void soap_default_eml20__MolecularWeightUom(struct soap *soap, enum eml20__MolecularWeightUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MolecularWeightUom
	*a = SOAP_DEFAULT_eml20__MolecularWeightUom;
#else
	*a = (enum eml20__MolecularWeightUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolecularWeightUom(struct soap*, const char*, int, const enum eml20__MolecularWeightUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MolecularWeightUom2s(struct soap*, enum eml20__MolecularWeightUom);
SOAP_FMAC3 enum eml20__MolecularWeightUom * SOAP_FMAC4 soap_in_eml20__MolecularWeightUom(struct soap*, const char*, enum eml20__MolecularWeightUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MolecularWeightUom(struct soap*, const char*, enum eml20__MolecularWeightUom *);

SOAP_FMAC3 enum eml20__MolecularWeightUom * SOAP_FMAC4 soap_new_eml20__MolecularWeightUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MolecularWeightUom(struct soap*, const enum eml20__MolecularWeightUom *, const char*, const char*);

inline int soap_write_eml20__MolecularWeightUom(struct soap *soap, enum eml20__MolecularWeightUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MolecularWeightUom(soap, p, "eml20:MolecularWeightUom", "eml20:MolecularWeightUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolecularWeightUom(struct soap *soap, const char *URL, enum eml20__MolecularWeightUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolecularWeightUom(soap, p, "eml20:MolecularWeightUom", "eml20:MolecularWeightUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolecularWeightUom(struct soap *soap, const char *URL, enum eml20__MolecularWeightUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolecularWeightUom(soap, p, "eml20:MolecularWeightUom", "eml20:MolecularWeightUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolecularWeightUom(struct soap *soap, const char *URL, enum eml20__MolecularWeightUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MolecularWeightUom(soap, p, "eml20:MolecularWeightUom", "eml20:MolecularWeightUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MolecularWeightUom * SOAP_FMAC4 soap_get_eml20__MolecularWeightUom(struct soap*, enum eml20__MolecularWeightUom *, const char*, const char*);

inline int soap_read_eml20__MolecularWeightUom(struct soap *soap, enum eml20__MolecularWeightUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolecularWeightUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolecularWeightUom(struct soap *soap, const char *URL, enum eml20__MolecularWeightUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolecularWeightUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolecularWeightUom(struct soap *soap, enum eml20__MolecularWeightUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolecularWeightUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom_DEFINED

inline void soap_default_eml20__MassPerTimeUom(struct soap *soap, enum eml20__MassPerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerTimeUom
	*a = SOAP_DEFAULT_eml20__MassPerTimeUom;
#else
	*a = (enum eml20__MassPerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimeUom(struct soap*, const char*, int, const enum eml20__MassPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerTimeUom2s(struct soap*, enum eml20__MassPerTimeUom);
SOAP_FMAC3 enum eml20__MassPerTimeUom * SOAP_FMAC4 soap_in_eml20__MassPerTimeUom(struct soap*, const char*, enum eml20__MassPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerTimeUom(struct soap*, const char*, enum eml20__MassPerTimeUom *);

SOAP_FMAC3 enum eml20__MassPerTimeUom * SOAP_FMAC4 soap_new_eml20__MassPerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerTimeUom(struct soap*, const enum eml20__MassPerTimeUom *, const char*, const char*);

inline int soap_write_eml20__MassPerTimeUom(struct soap *soap, enum eml20__MassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimeUom(soap, p, "eml20:MassPerTimeUom", "eml20:MassPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimeUom(struct soap *soap, const char *URL, enum eml20__MassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimeUom(soap, p, "eml20:MassPerTimeUom", "eml20:MassPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimeUom(struct soap *soap, const char *URL, enum eml20__MassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimeUom(soap, p, "eml20:MassPerTimeUom", "eml20:MassPerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimeUom(struct soap *soap, const char *URL, enum eml20__MassPerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerTimeUom(soap, p, "eml20:MassPerTimeUom", "eml20:MassPerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerTimeUom * SOAP_FMAC4 soap_get_eml20__MassPerTimeUom(struct soap*, enum eml20__MassPerTimeUom *, const char*, const char*);

inline int soap_read_eml20__MassPerTimeUom(struct soap *soap, enum eml20__MassPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimeUom(struct soap *soap, const char *URL, enum eml20__MassPerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimeUom(struct soap *soap, enum eml20__MassPerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom_DEFINED

inline void soap_default_eml20__LengthPerVolumeUom(struct soap *soap, enum eml20__LengthPerVolumeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LengthPerVolumeUom
	*a = SOAP_DEFAULT_eml20__LengthPerVolumeUom;
#else
	*a = (enum eml20__LengthPerVolumeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerVolumeUom(struct soap*, const char*, int, const enum eml20__LengthPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LengthPerVolumeUom2s(struct soap*, enum eml20__LengthPerVolumeUom);
SOAP_FMAC3 enum eml20__LengthPerVolumeUom * SOAP_FMAC4 soap_in_eml20__LengthPerVolumeUom(struct soap*, const char*, enum eml20__LengthPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LengthPerVolumeUom(struct soap*, const char*, enum eml20__LengthPerVolumeUom *);

SOAP_FMAC3 enum eml20__LengthPerVolumeUom * SOAP_FMAC4 soap_new_eml20__LengthPerVolumeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LengthPerVolumeUom(struct soap*, const enum eml20__LengthPerVolumeUom *, const char*, const char*);

inline int soap_write_eml20__LengthPerVolumeUom(struct soap *soap, enum eml20__LengthPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LengthPerVolumeUom(soap, p, "eml20:LengthPerVolumeUom", "eml20:LengthPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerVolumeUom(struct soap *soap, const char *URL, enum eml20__LengthPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerVolumeUom(soap, p, "eml20:LengthPerVolumeUom", "eml20:LengthPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerVolumeUom(struct soap *soap, const char *URL, enum eml20__LengthPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerVolumeUom(soap, p, "eml20:LengthPerVolumeUom", "eml20:LengthPerVolumeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerVolumeUom(struct soap *soap, const char *URL, enum eml20__LengthPerVolumeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LengthPerVolumeUom(soap, p, "eml20:LengthPerVolumeUom", "eml20:LengthPerVolumeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LengthPerVolumeUom * SOAP_FMAC4 soap_get_eml20__LengthPerVolumeUom(struct soap*, enum eml20__LengthPerVolumeUom *, const char*, const char*);

inline int soap_read_eml20__LengthPerVolumeUom(struct soap *soap, enum eml20__LengthPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerVolumeUom(struct soap *soap, const char *URL, enum eml20__LengthPerVolumeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerVolumeUom(struct soap *soap, enum eml20__LengthPerVolumeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerVolumeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom_DEFINED

inline void soap_default_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml20__MagneticFluxDensityPerLengthUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MagneticFluxDensityPerLengthUom
	*a = SOAP_DEFAULT_eml20__MagneticFluxDensityPerLengthUom;
#else
	*a = (enum eml20__MagneticFluxDensityPerLengthUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxDensityPerLengthUom(struct soap*, const char*, int, const enum eml20__MagneticFluxDensityPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MagneticFluxDensityPerLengthUom2s(struct soap*, enum eml20__MagneticFluxDensityPerLengthUom);
SOAP_FMAC3 enum eml20__MagneticFluxDensityPerLengthUom * SOAP_FMAC4 soap_in_eml20__MagneticFluxDensityPerLengthUom(struct soap*, const char*, enum eml20__MagneticFluxDensityPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MagneticFluxDensityPerLengthUom(struct soap*, const char*, enum eml20__MagneticFluxDensityPerLengthUom *);

SOAP_FMAC3 enum eml20__MagneticFluxDensityPerLengthUom * SOAP_FMAC4 soap_new_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MagneticFluxDensityPerLengthUom(struct soap*, const enum eml20__MagneticFluxDensityPerLengthUom *, const char*, const char*);

inline int soap_write_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml20__MagneticFluxDensityPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityPerLengthUom(soap, p, "eml20:MagneticFluxDensityPerLengthUom", "eml20:MagneticFluxDensityPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityPerLengthUom(soap, p, "eml20:MagneticFluxDensityPerLengthUom", "eml20:MagneticFluxDensityPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityPerLengthUom(soap, p, "eml20:MagneticFluxDensityPerLengthUom", "eml20:MagneticFluxDensityPerLengthUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityPerLengthUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MagneticFluxDensityPerLengthUom(soap, p, "eml20:MagneticFluxDensityPerLengthUom", "eml20:MagneticFluxDensityPerLengthUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MagneticFluxDensityPerLengthUom * SOAP_FMAC4 soap_get_eml20__MagneticFluxDensityPerLengthUom(struct soap*, enum eml20__MagneticFluxDensityPerLengthUom *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml20__MagneticFluxDensityPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxDensityPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, const char *URL, enum eml20__MagneticFluxDensityPerLengthUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml20__MagneticFluxDensityPerLengthUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityPerLengthUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom_DEFINED

inline void soap_default_eml20__CapacitanceUom(struct soap *soap, enum eml20__CapacitanceUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__CapacitanceUom
	*a = SOAP_DEFAULT_eml20__CapacitanceUom;
#else
	*a = (enum eml20__CapacitanceUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__CapacitanceUom(struct soap*, const char*, int, const enum eml20__CapacitanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__CapacitanceUom2s(struct soap*, enum eml20__CapacitanceUom);
SOAP_FMAC3 enum eml20__CapacitanceUom * SOAP_FMAC4 soap_in_eml20__CapacitanceUom(struct soap*, const char*, enum eml20__CapacitanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__CapacitanceUom(struct soap*, const char*, enum eml20__CapacitanceUom *);

SOAP_FMAC3 enum eml20__CapacitanceUom * SOAP_FMAC4 soap_new_eml20__CapacitanceUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__CapacitanceUom(struct soap*, const enum eml20__CapacitanceUom *, const char*, const char*);

inline int soap_write_eml20__CapacitanceUom(struct soap *soap, enum eml20__CapacitanceUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__CapacitanceUom(soap, p, "eml20:CapacitanceUom", "eml20:CapacitanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__CapacitanceUom(struct soap *soap, const char *URL, enum eml20__CapacitanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__CapacitanceUom(soap, p, "eml20:CapacitanceUom", "eml20:CapacitanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__CapacitanceUom(struct soap *soap, const char *URL, enum eml20__CapacitanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__CapacitanceUom(soap, p, "eml20:CapacitanceUom", "eml20:CapacitanceUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__CapacitanceUom(struct soap *soap, const char *URL, enum eml20__CapacitanceUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__CapacitanceUom(soap, p, "eml20:CapacitanceUom", "eml20:CapacitanceUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__CapacitanceUom * SOAP_FMAC4 soap_get_eml20__CapacitanceUom(struct soap*, enum eml20__CapacitanceUom *, const char*, const char*);

inline int soap_read_eml20__CapacitanceUom(struct soap *soap, enum eml20__CapacitanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__CapacitanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__CapacitanceUom(struct soap *soap, const char *URL, enum eml20__CapacitanceUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__CapacitanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__CapacitanceUom(struct soap *soap, enum eml20__CapacitanceUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__CapacitanceUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom_DEFINED

inline void soap_default_eml20__MomentOfInertiaUom(struct soap *soap, enum eml20__MomentOfInertiaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MomentOfInertiaUom
	*a = SOAP_DEFAULT_eml20__MomentOfInertiaUom;
#else
	*a = (enum eml20__MomentOfInertiaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentOfInertiaUom(struct soap*, const char*, int, const enum eml20__MomentOfInertiaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MomentOfInertiaUom2s(struct soap*, enum eml20__MomentOfInertiaUom);
SOAP_FMAC3 enum eml20__MomentOfInertiaUom * SOAP_FMAC4 soap_in_eml20__MomentOfInertiaUom(struct soap*, const char*, enum eml20__MomentOfInertiaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MomentOfInertiaUom(struct soap*, const char*, enum eml20__MomentOfInertiaUom *);

SOAP_FMAC3 enum eml20__MomentOfInertiaUom * SOAP_FMAC4 soap_new_eml20__MomentOfInertiaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MomentOfInertiaUom(struct soap*, const enum eml20__MomentOfInertiaUom *, const char*, const char*);

inline int soap_write_eml20__MomentOfInertiaUom(struct soap *soap, enum eml20__MomentOfInertiaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MomentOfInertiaUom(soap, p, "eml20:MomentOfInertiaUom", "eml20:MomentOfInertiaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentOfInertiaUom(struct soap *soap, const char *URL, enum eml20__MomentOfInertiaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfInertiaUom(soap, p, "eml20:MomentOfInertiaUom", "eml20:MomentOfInertiaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentOfInertiaUom(struct soap *soap, const char *URL, enum eml20__MomentOfInertiaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfInertiaUom(soap, p, "eml20:MomentOfInertiaUom", "eml20:MomentOfInertiaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentOfInertiaUom(struct soap *soap, const char *URL, enum eml20__MomentOfInertiaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MomentOfInertiaUom(soap, p, "eml20:MomentOfInertiaUom", "eml20:MomentOfInertiaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MomentOfInertiaUom * SOAP_FMAC4 soap_get_eml20__MomentOfInertiaUom(struct soap*, enum eml20__MomentOfInertiaUom *, const char*, const char*);

inline int soap_read_eml20__MomentOfInertiaUom(struct soap *soap, enum eml20__MomentOfInertiaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentOfInertiaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentOfInertiaUom(struct soap *soap, const char *URL, enum eml20__MomentOfInertiaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentOfInertiaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentOfInertiaUom(struct soap *soap, enum eml20__MomentOfInertiaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentOfInertiaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom_DEFINED

inline void soap_default_eml20__MassPerEnergyUom(struct soap *soap, enum eml20__MassPerEnergyUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MassPerEnergyUom
	*a = SOAP_DEFAULT_eml20__MassPerEnergyUom;
#else
	*a = (enum eml20__MassPerEnergyUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerEnergyUom(struct soap*, const char*, int, const enum eml20__MassPerEnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MassPerEnergyUom2s(struct soap*, enum eml20__MassPerEnergyUom);
SOAP_FMAC3 enum eml20__MassPerEnergyUom * SOAP_FMAC4 soap_in_eml20__MassPerEnergyUom(struct soap*, const char*, enum eml20__MassPerEnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MassPerEnergyUom(struct soap*, const char*, enum eml20__MassPerEnergyUom *);

SOAP_FMAC3 enum eml20__MassPerEnergyUom * SOAP_FMAC4 soap_new_eml20__MassPerEnergyUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MassPerEnergyUom(struct soap*, const enum eml20__MassPerEnergyUom *, const char*, const char*);

inline int soap_write_eml20__MassPerEnergyUom(struct soap *soap, enum eml20__MassPerEnergyUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MassPerEnergyUom(soap, p, "eml20:MassPerEnergyUom", "eml20:MassPerEnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerEnergyUom(struct soap *soap, const char *URL, enum eml20__MassPerEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerEnergyUom(soap, p, "eml20:MassPerEnergyUom", "eml20:MassPerEnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerEnergyUom(struct soap *soap, const char *URL, enum eml20__MassPerEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerEnergyUom(soap, p, "eml20:MassPerEnergyUom", "eml20:MassPerEnergyUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerEnergyUom(struct soap *soap, const char *URL, enum eml20__MassPerEnergyUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MassPerEnergyUom(soap, p, "eml20:MassPerEnergyUom", "eml20:MassPerEnergyUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MassPerEnergyUom * SOAP_FMAC4 soap_get_eml20__MassPerEnergyUom(struct soap*, enum eml20__MassPerEnergyUom *, const char*, const char*);

inline int soap_read_eml20__MassPerEnergyUom(struct soap *soap, enum eml20__MassPerEnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerEnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerEnergyUom(struct soap *soap, const char *URL, enum eml20__MassPerEnergyUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerEnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerEnergyUom(struct soap *soap, enum eml20__MassPerEnergyUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerEnergyUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom_DEFINED

inline void soap_default_eml20__HeatTransferCoefficientUom(struct soap *soap, enum eml20__HeatTransferCoefficientUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__HeatTransferCoefficientUom
	*a = SOAP_DEFAULT_eml20__HeatTransferCoefficientUom;
#else
	*a = (enum eml20__HeatTransferCoefficientUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatTransferCoefficientUom(struct soap*, const char*, int, const enum eml20__HeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__HeatTransferCoefficientUom2s(struct soap*, enum eml20__HeatTransferCoefficientUom);
SOAP_FMAC3 enum eml20__HeatTransferCoefficientUom * SOAP_FMAC4 soap_in_eml20__HeatTransferCoefficientUom(struct soap*, const char*, enum eml20__HeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__HeatTransferCoefficientUom(struct soap*, const char*, enum eml20__HeatTransferCoefficientUom *);

SOAP_FMAC3 enum eml20__HeatTransferCoefficientUom * SOAP_FMAC4 soap_new_eml20__HeatTransferCoefficientUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__HeatTransferCoefficientUom(struct soap*, const enum eml20__HeatTransferCoefficientUom *, const char*, const char*);

inline int soap_write_eml20__HeatTransferCoefficientUom(struct soap *soap, enum eml20__HeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__HeatTransferCoefficientUom(soap, p, "eml20:HeatTransferCoefficientUom", "eml20:HeatTransferCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__HeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatTransferCoefficientUom(soap, p, "eml20:HeatTransferCoefficientUom", "eml20:HeatTransferCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__HeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatTransferCoefficientUom(soap, p, "eml20:HeatTransferCoefficientUom", "eml20:HeatTransferCoefficientUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__HeatTransferCoefficientUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__HeatTransferCoefficientUom(soap, p, "eml20:HeatTransferCoefficientUom", "eml20:HeatTransferCoefficientUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__HeatTransferCoefficientUom * SOAP_FMAC4 soap_get_eml20__HeatTransferCoefficientUom(struct soap*, enum eml20__HeatTransferCoefficientUom *, const char*, const char*);

inline int soap_read_eml20__HeatTransferCoefficientUom(struct soap *soap, enum eml20__HeatTransferCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatTransferCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatTransferCoefficientUom(struct soap *soap, const char *URL, enum eml20__HeatTransferCoefficientUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatTransferCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatTransferCoefficientUom(struct soap *soap, enum eml20__HeatTransferCoefficientUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatTransferCoefficientUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom_DEFINED

inline void soap_default_eml20__MobilityUom(struct soap *soap, enum eml20__MobilityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__MobilityUom
	*a = SOAP_DEFAULT_eml20__MobilityUom;
#else
	*a = (enum eml20__MobilityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MobilityUom(struct soap*, const char*, int, const enum eml20__MobilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__MobilityUom2s(struct soap*, enum eml20__MobilityUom);
SOAP_FMAC3 enum eml20__MobilityUom * SOAP_FMAC4 soap_in_eml20__MobilityUom(struct soap*, const char*, enum eml20__MobilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__MobilityUom(struct soap*, const char*, enum eml20__MobilityUom *);

SOAP_FMAC3 enum eml20__MobilityUom * SOAP_FMAC4 soap_new_eml20__MobilityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MobilityUom(struct soap*, const enum eml20__MobilityUom *, const char*, const char*);

inline int soap_write_eml20__MobilityUom(struct soap *soap, enum eml20__MobilityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MobilityUom(soap, p, "eml20:MobilityUom", "eml20:MobilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MobilityUom(struct soap *soap, const char *URL, enum eml20__MobilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MobilityUom(soap, p, "eml20:MobilityUom", "eml20:MobilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MobilityUom(struct soap *soap, const char *URL, enum eml20__MobilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MobilityUom(soap, p, "eml20:MobilityUom", "eml20:MobilityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MobilityUom(struct soap *soap, const char *URL, enum eml20__MobilityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MobilityUom(soap, p, "eml20:MobilityUom", "eml20:MobilityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__MobilityUom * SOAP_FMAC4 soap_get_eml20__MobilityUom(struct soap*, enum eml20__MobilityUom *, const char*, const char*);

inline int soap_read_eml20__MobilityUom(struct soap *soap, enum eml20__MobilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MobilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MobilityUom(struct soap *soap, const char *URL, enum eml20__MobilityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MobilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MobilityUom(struct soap *soap, enum eml20__MobilityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MobilityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom_DEFINED

inline void soap_default_eml20__VolumePerTimePerAreaUom(struct soap *soap, enum eml20__VolumePerTimePerAreaUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerTimePerAreaUom
	*a = SOAP_DEFAULT_eml20__VolumePerTimePerAreaUom;
#else
	*a = (enum eml20__VolumePerTimePerAreaUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerAreaUom(struct soap*, const char*, int, const enum eml20__VolumePerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerTimePerAreaUom2s(struct soap*, enum eml20__VolumePerTimePerAreaUom);
SOAP_FMAC3 enum eml20__VolumePerTimePerAreaUom * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerAreaUom(struct soap*, const char*, enum eml20__VolumePerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerTimePerAreaUom(struct soap*, const char*, enum eml20__VolumePerTimePerAreaUom *);

SOAP_FMAC3 enum eml20__VolumePerTimePerAreaUom * SOAP_FMAC4 soap_new_eml20__VolumePerTimePerAreaUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerTimePerAreaUom(struct soap*, const enum eml20__VolumePerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerTimePerAreaUom(struct soap *soap, enum eml20__VolumePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerAreaUom(soap, p, "eml20:VolumePerTimePerAreaUom", "eml20:VolumePerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerAreaUom(soap, p, "eml20:VolumePerTimePerAreaUom", "eml20:VolumePerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerAreaUom(soap, p, "eml20:VolumePerTimePerAreaUom", "eml20:VolumePerTimePerAreaUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerAreaUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerTimePerAreaUom(soap, p, "eml20:VolumePerTimePerAreaUom", "eml20:VolumePerTimePerAreaUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerTimePerAreaUom * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerAreaUom(struct soap*, enum eml20__VolumePerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerAreaUom(struct soap *soap, enum eml20__VolumePerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerAreaUom(struct soap *soap, const char *URL, enum eml20__VolumePerTimePerAreaUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerAreaUom(struct soap *soap, enum eml20__VolumePerTimePerAreaUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerAreaUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom_DEFINED

inline void soap_default_eml20__VolumePerRotationUom(struct soap *soap, enum eml20__VolumePerRotationUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VolumePerRotationUom
	*a = SOAP_DEFAULT_eml20__VolumePerRotationUom;
#else
	*a = (enum eml20__VolumePerRotationUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerRotationUom(struct soap*, const char*, int, const enum eml20__VolumePerRotationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VolumePerRotationUom2s(struct soap*, enum eml20__VolumePerRotationUom);
SOAP_FMAC3 enum eml20__VolumePerRotationUom * SOAP_FMAC4 soap_in_eml20__VolumePerRotationUom(struct soap*, const char*, enum eml20__VolumePerRotationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VolumePerRotationUom(struct soap*, const char*, enum eml20__VolumePerRotationUom *);

SOAP_FMAC3 enum eml20__VolumePerRotationUom * SOAP_FMAC4 soap_new_eml20__VolumePerRotationUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VolumePerRotationUom(struct soap*, const enum eml20__VolumePerRotationUom *, const char*, const char*);

inline int soap_write_eml20__VolumePerRotationUom(struct soap *soap, enum eml20__VolumePerRotationUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VolumePerRotationUom(soap, p, "eml20:VolumePerRotationUom", "eml20:VolumePerRotationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerRotationUom(struct soap *soap, const char *URL, enum eml20__VolumePerRotationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerRotationUom(soap, p, "eml20:VolumePerRotationUom", "eml20:VolumePerRotationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerRotationUom(struct soap *soap, const char *URL, enum eml20__VolumePerRotationUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerRotationUom(soap, p, "eml20:VolumePerRotationUom", "eml20:VolumePerRotationUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerRotationUom(struct soap *soap, const char *URL, enum eml20__VolumePerRotationUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VolumePerRotationUom(soap, p, "eml20:VolumePerRotationUom", "eml20:VolumePerRotationUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VolumePerRotationUom * SOAP_FMAC4 soap_get_eml20__VolumePerRotationUom(struct soap*, enum eml20__VolumePerRotationUom *, const char*, const char*);

inline int soap_read_eml20__VolumePerRotationUom(struct soap *soap, enum eml20__VolumePerRotationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerRotationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerRotationUom(struct soap *soap, const char *URL, enum eml20__VolumePerRotationUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerRotationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerRotationUom(struct soap *soap, enum eml20__VolumePerRotationUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerRotationUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom_DEFINED

inline void soap_default_eml20__ElectricConductivityUom(struct soap *soap, enum eml20__ElectricConductivityUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__ElectricConductivityUom
	*a = SOAP_DEFAULT_eml20__ElectricConductivityUom;
#else
	*a = (enum eml20__ElectricConductivityUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricConductivityUom(struct soap*, const char*, int, const enum eml20__ElectricConductivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__ElectricConductivityUom2s(struct soap*, enum eml20__ElectricConductivityUom);
SOAP_FMAC3 enum eml20__ElectricConductivityUom * SOAP_FMAC4 soap_in_eml20__ElectricConductivityUom(struct soap*, const char*, enum eml20__ElectricConductivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__ElectricConductivityUom(struct soap*, const char*, enum eml20__ElectricConductivityUom *);

SOAP_FMAC3 enum eml20__ElectricConductivityUom * SOAP_FMAC4 soap_new_eml20__ElectricConductivityUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__ElectricConductivityUom(struct soap*, const enum eml20__ElectricConductivityUom *, const char*, const char*);

inline int soap_write_eml20__ElectricConductivityUom(struct soap *soap, enum eml20__ElectricConductivityUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductivityUom(soap, p, "eml20:ElectricConductivityUom", "eml20:ElectricConductivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricConductivityUom(struct soap *soap, const char *URL, enum eml20__ElectricConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductivityUom(soap, p, "eml20:ElectricConductivityUom", "eml20:ElectricConductivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricConductivityUom(struct soap *soap, const char *URL, enum eml20__ElectricConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductivityUom(soap, p, "eml20:ElectricConductivityUom", "eml20:ElectricConductivityUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricConductivityUom(struct soap *soap, const char *URL, enum eml20__ElectricConductivityUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__ElectricConductivityUom(soap, p, "eml20:ElectricConductivityUom", "eml20:ElectricConductivityUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__ElectricConductivityUom * SOAP_FMAC4 soap_get_eml20__ElectricConductivityUom(struct soap*, enum eml20__ElectricConductivityUom *, const char*, const char*);

inline int soap_read_eml20__ElectricConductivityUom(struct soap *soap, enum eml20__ElectricConductivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricConductivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricConductivityUom(struct soap *soap, const char *URL, enum eml20__ElectricConductivityUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricConductivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricConductivityUom(struct soap *soap, enum eml20__ElectricConductivityUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricConductivityUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom_DEFINED

inline void soap_default_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimeUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AmountOfSubstancePerTimeUom
	*a = SOAP_DEFAULT_eml20__AmountOfSubstancePerTimeUom;
#else
	*a = (enum eml20__AmountOfSubstancePerTimeUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerTimeUom(struct soap*, const char*, int, const enum eml20__AmountOfSubstancePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AmountOfSubstancePerTimeUom2s(struct soap*, enum eml20__AmountOfSubstancePerTimeUom);
SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimeUom * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerTimeUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AmountOfSubstancePerTimeUom(struct soap*, const char*, enum eml20__AmountOfSubstancePerTimeUom *);

SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimeUom * SOAP_FMAC4 soap_new_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AmountOfSubstancePerTimeUom(struct soap*, const enum eml20__AmountOfSubstancePerTimeUom *, const char*, const char*);

inline int soap_write_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimeUom(soap, p, "eml20:AmountOfSubstancePerTimeUom", "eml20:AmountOfSubstancePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimeUom(soap, p, "eml20:AmountOfSubstancePerTimeUom", "eml20:AmountOfSubstancePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimeUom(soap, p, "eml20:AmountOfSubstancePerTimeUom", "eml20:AmountOfSubstancePerTimeUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimeUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AmountOfSubstancePerTimeUom(soap, p, "eml20:AmountOfSubstancePerTimeUom", "eml20:AmountOfSubstancePerTimeUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AmountOfSubstancePerTimeUom * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerTimeUom(struct soap*, enum eml20__AmountOfSubstancePerTimeUom *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, const char *URL, enum eml20__AmountOfSubstancePerTimeUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml20__AmountOfSubstancePerTimeUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimeUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom_DEFINED

inline void soap_default_eml20__LogarithmicPowerRatioUom(struct soap *soap, enum eml20__LogarithmicPowerRatioUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__LogarithmicPowerRatioUom
	*a = SOAP_DEFAULT_eml20__LogarithmicPowerRatioUom;
#else
	*a = (enum eml20__LogarithmicPowerRatioUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LogarithmicPowerRatioUom(struct soap*, const char*, int, const enum eml20__LogarithmicPowerRatioUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__LogarithmicPowerRatioUom2s(struct soap*, enum eml20__LogarithmicPowerRatioUom);
SOAP_FMAC3 enum eml20__LogarithmicPowerRatioUom * SOAP_FMAC4 soap_in_eml20__LogarithmicPowerRatioUom(struct soap*, const char*, enum eml20__LogarithmicPowerRatioUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__LogarithmicPowerRatioUom(struct soap*, const char*, enum eml20__LogarithmicPowerRatioUom *);

SOAP_FMAC3 enum eml20__LogarithmicPowerRatioUom * SOAP_FMAC4 soap_new_eml20__LogarithmicPowerRatioUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__LogarithmicPowerRatioUom(struct soap*, const enum eml20__LogarithmicPowerRatioUom *, const char*, const char*);

inline int soap_write_eml20__LogarithmicPowerRatioUom(struct soap *soap, enum eml20__LogarithmicPowerRatioUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioUom(soap, p, "eml20:LogarithmicPowerRatioUom", "eml20:LogarithmicPowerRatioUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__LogarithmicPowerRatioUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioUom(soap, p, "eml20:LogarithmicPowerRatioUom", "eml20:LogarithmicPowerRatioUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LogarithmicPowerRatioUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioUom(soap, p, "eml20:LogarithmicPowerRatioUom", "eml20:LogarithmicPowerRatioUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LogarithmicPowerRatioUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__LogarithmicPowerRatioUom(soap, p, "eml20:LogarithmicPowerRatioUom", "eml20:LogarithmicPowerRatioUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__LogarithmicPowerRatioUom * SOAP_FMAC4 soap_get_eml20__LogarithmicPowerRatioUom(struct soap*, enum eml20__LogarithmicPowerRatioUom *, const char*, const char*);

inline int soap_read_eml20__LogarithmicPowerRatioUom(struct soap *soap, enum eml20__LogarithmicPowerRatioUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LogarithmicPowerRatioUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LogarithmicPowerRatioUom(struct soap *soap, const char *URL, enum eml20__LogarithmicPowerRatioUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LogarithmicPowerRatioUom(struct soap *soap, enum eml20__LogarithmicPowerRatioUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection_DEFINED

inline void soap_default_eml20__VerticalDirection(struct soap *soap, enum eml20__VerticalDirection *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__VerticalDirection
	*a = SOAP_DEFAULT_eml20__VerticalDirection;
#else
	*a = (enum eml20__VerticalDirection)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VerticalDirection(struct soap*, const char*, int, const enum eml20__VerticalDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__VerticalDirection2s(struct soap*, enum eml20__VerticalDirection);
SOAP_FMAC3 enum eml20__VerticalDirection * SOAP_FMAC4 soap_in_eml20__VerticalDirection(struct soap*, const char*, enum eml20__VerticalDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__VerticalDirection(struct soap*, const char*, enum eml20__VerticalDirection *);

SOAP_FMAC3 enum eml20__VerticalDirection * SOAP_FMAC4 soap_new_eml20__VerticalDirection(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__VerticalDirection(struct soap*, const enum eml20__VerticalDirection *, const char*, const char*);

inline int soap_write_eml20__VerticalDirection(struct soap *soap, enum eml20__VerticalDirection const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__VerticalDirection(soap, p, "eml20:VerticalDirection", "eml20:VerticalDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__VerticalDirection(struct soap *soap, const char *URL, enum eml20__VerticalDirection const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalDirection(soap, p, "eml20:VerticalDirection", "eml20:VerticalDirection") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VerticalDirection(struct soap *soap, const char *URL, enum eml20__VerticalDirection const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalDirection(soap, p, "eml20:VerticalDirection", "eml20:VerticalDirection") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VerticalDirection(struct soap *soap, const char *URL, enum eml20__VerticalDirection const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__VerticalDirection(soap, p, "eml20:VerticalDirection", "eml20:VerticalDirection") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__VerticalDirection * SOAP_FMAC4 soap_get_eml20__VerticalDirection(struct soap*, enum eml20__VerticalDirection *, const char*, const char*);

inline int soap_read_eml20__VerticalDirection(struct soap *soap, enum eml20__VerticalDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VerticalDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VerticalDirection(struct soap *soap, const char *URL, enum eml20__VerticalDirection *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VerticalDirection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VerticalDirection(struct soap *soap, enum eml20__VerticalDirection *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VerticalDirection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d_DEFINED

inline void soap_default_eml20__AxisOrder2d(struct soap *soap, enum eml20__AxisOrder2d *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_eml20__AxisOrder2d
	*a = SOAP_DEFAULT_eml20__AxisOrder2d;
#else
	*a = (enum eml20__AxisOrder2d)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AxisOrder2d(struct soap*, const char*, int, const enum eml20__AxisOrder2d *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml20__AxisOrder2d2s(struct soap*, enum eml20__AxisOrder2d);
SOAP_FMAC3 enum eml20__AxisOrder2d * SOAP_FMAC4 soap_in_eml20__AxisOrder2d(struct soap*, const char*, enum eml20__AxisOrder2d *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml20__AxisOrder2d(struct soap*, const char*, enum eml20__AxisOrder2d *);

SOAP_FMAC3 enum eml20__AxisOrder2d * SOAP_FMAC4 soap_new_eml20__AxisOrder2d(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__AxisOrder2d(struct soap*, const enum eml20__AxisOrder2d *, const char*, const char*);

inline int soap_write_eml20__AxisOrder2d(struct soap *soap, enum eml20__AxisOrder2d const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__AxisOrder2d(soap, p, "eml20:AxisOrder2d", "eml20:AxisOrder2d") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__AxisOrder2d(struct soap *soap, const char *URL, enum eml20__AxisOrder2d const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AxisOrder2d(soap, p, "eml20:AxisOrder2d", "eml20:AxisOrder2d") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AxisOrder2d(struct soap *soap, const char *URL, enum eml20__AxisOrder2d const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AxisOrder2d(soap, p, "eml20:AxisOrder2d", "eml20:AxisOrder2d") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AxisOrder2d(struct soap *soap, const char *URL, enum eml20__AxisOrder2d const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__AxisOrder2d(soap, p, "eml20:AxisOrder2d", "eml20:AxisOrder2d") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum eml20__AxisOrder2d * SOAP_FMAC4 soap_get_eml20__AxisOrder2d(struct soap*, enum eml20__AxisOrder2d *, const char*, const char*);

inline int soap_read_eml20__AxisOrder2d(struct soap *soap, enum eml20__AxisOrder2d *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AxisOrder2d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AxisOrder2d(struct soap *soap, const char *URL, enum eml20__AxisOrder2d *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AxisOrder2d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AxisOrder2d(struct soap *soap, enum eml20__AxisOrder2d *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AxisOrder2d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind_DEFINED

inline void soap_default_resqml20__OrganizationKind(struct soap *soap, enum resqml20__OrganizationKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__OrganizationKind
	*a = SOAP_DEFAULT_resqml20__OrganizationKind;
#else
	*a = (enum resqml20__OrganizationKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__OrganizationKind(struct soap*, const char*, int, const enum resqml20__OrganizationKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__OrganizationKind2s(struct soap*, enum resqml20__OrganizationKind);
SOAP_FMAC3 enum resqml20__OrganizationKind * SOAP_FMAC4 soap_in_resqml20__OrganizationKind(struct soap*, const char*, enum resqml20__OrganizationKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__OrganizationKind(struct soap*, const char*, enum resqml20__OrganizationKind *);

SOAP_FMAC3 enum resqml20__OrganizationKind * SOAP_FMAC4 soap_new_resqml20__OrganizationKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__OrganizationKind(struct soap*, const enum resqml20__OrganizationKind *, const char*, const char*);

inline int soap_write_resqml20__OrganizationKind(struct soap *soap, enum resqml20__OrganizationKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__OrganizationKind(soap, p, "resqml20:OrganizationKind", "resqml20:OrganizationKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__OrganizationKind(struct soap *soap, const char *URL, enum resqml20__OrganizationKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrganizationKind(soap, p, "resqml20:OrganizationKind", "resqml20:OrganizationKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__OrganizationKind(struct soap *soap, const char *URL, enum resqml20__OrganizationKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrganizationKind(soap, p, "resqml20:OrganizationKind", "resqml20:OrganizationKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__OrganizationKind(struct soap *soap, const char *URL, enum resqml20__OrganizationKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrganizationKind(soap, p, "resqml20:OrganizationKind", "resqml20:OrganizationKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__OrganizationKind * SOAP_FMAC4 soap_get_resqml20__OrganizationKind(struct soap*, enum resqml20__OrganizationKind *, const char*, const char*);

inline int soap_read_resqml20__OrganizationKind(struct soap *soap, enum resqml20__OrganizationKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__OrganizationKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__OrganizationKind(struct soap *soap, const char *URL, enum resqml20__OrganizationKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__OrganizationKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__OrganizationKind(struct soap *soap, enum resqml20__OrganizationKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__OrganizationKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind_DEFINED

inline void soap_default_resqml20__ResqmlPropertyKind(struct soap *soap, enum resqml20__ResqmlPropertyKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ResqmlPropertyKind
	*a = SOAP_DEFAULT_resqml20__ResqmlPropertyKind;
#else
	*a = (enum resqml20__ResqmlPropertyKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ResqmlPropertyKind(struct soap*, const char*, int, const enum resqml20__ResqmlPropertyKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ResqmlPropertyKind2s(struct soap*, enum resqml20__ResqmlPropertyKind);
SOAP_FMAC3 enum resqml20__ResqmlPropertyKind * SOAP_FMAC4 soap_in_resqml20__ResqmlPropertyKind(struct soap*, const char*, enum resqml20__ResqmlPropertyKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ResqmlPropertyKind(struct soap*, const char*, enum resqml20__ResqmlPropertyKind *);

SOAP_FMAC3 enum resqml20__ResqmlPropertyKind * SOAP_FMAC4 soap_new_resqml20__ResqmlPropertyKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ResqmlPropertyKind(struct soap*, const enum resqml20__ResqmlPropertyKind *, const char*, const char*);

inline int soap_write_resqml20__ResqmlPropertyKind(struct soap *soap, enum resqml20__ResqmlPropertyKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlPropertyKind(soap, p, "resqml20:ResqmlPropertyKind", "resqml20:ResqmlPropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ResqmlPropertyKind(struct soap *soap, const char *URL, enum resqml20__ResqmlPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlPropertyKind(soap, p, "resqml20:ResqmlPropertyKind", "resqml20:ResqmlPropertyKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ResqmlPropertyKind(struct soap *soap, const char *URL, enum resqml20__ResqmlPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlPropertyKind(soap, p, "resqml20:ResqmlPropertyKind", "resqml20:ResqmlPropertyKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ResqmlPropertyKind(struct soap *soap, const char *URL, enum resqml20__ResqmlPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlPropertyKind(soap, p, "resqml20:ResqmlPropertyKind", "resqml20:ResqmlPropertyKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ResqmlPropertyKind * SOAP_FMAC4 soap_get_resqml20__ResqmlPropertyKind(struct soap*, enum resqml20__ResqmlPropertyKind *, const char*, const char*);

inline int soap_read_resqml20__ResqmlPropertyKind(struct soap *soap, enum resqml20__ResqmlPropertyKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ResqmlPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ResqmlPropertyKind(struct soap *soap, const char *URL, enum resqml20__ResqmlPropertyKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ResqmlPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ResqmlPropertyKind(struct soap *soap, enum resqml20__ResqmlPropertyKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ResqmlPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux_DEFINED

inline void soap_default_resqml20__StreamlineFlux(struct soap *soap, enum resqml20__StreamlineFlux *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__StreamlineFlux
	*a = SOAP_DEFAULT_resqml20__StreamlineFlux;
#else
	*a = (enum resqml20__StreamlineFlux)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StreamlineFlux(struct soap*, const char*, int, const enum resqml20__StreamlineFlux *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__StreamlineFlux2s(struct soap*, enum resqml20__StreamlineFlux);
SOAP_FMAC3 enum resqml20__StreamlineFlux * SOAP_FMAC4 soap_in_resqml20__StreamlineFlux(struct soap*, const char*, enum resqml20__StreamlineFlux *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__StreamlineFlux(struct soap*, const char*, enum resqml20__StreamlineFlux *);

SOAP_FMAC3 enum resqml20__StreamlineFlux * SOAP_FMAC4 soap_new_resqml20__StreamlineFlux(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__StreamlineFlux(struct soap*, const enum resqml20__StreamlineFlux *, const char*, const char*);

inline int soap_write_resqml20__StreamlineFlux(struct soap *soap, enum resqml20__StreamlineFlux const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__StreamlineFlux(soap, p, "resqml20:StreamlineFlux", "resqml20:StreamlineFlux") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StreamlineFlux(struct soap *soap, const char *URL, enum resqml20__StreamlineFlux const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__StreamlineFlux(soap, p, "resqml20:StreamlineFlux", "resqml20:StreamlineFlux") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StreamlineFlux(struct soap *soap, const char *URL, enum resqml20__StreamlineFlux const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__StreamlineFlux(soap, p, "resqml20:StreamlineFlux", "resqml20:StreamlineFlux") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StreamlineFlux(struct soap *soap, const char *URL, enum resqml20__StreamlineFlux const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__StreamlineFlux(soap, p, "resqml20:StreamlineFlux", "resqml20:StreamlineFlux") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__StreamlineFlux * SOAP_FMAC4 soap_get_resqml20__StreamlineFlux(struct soap*, enum resqml20__StreamlineFlux *, const char*, const char*);

inline int soap_read_resqml20__StreamlineFlux(struct soap *soap, enum resqml20__StreamlineFlux *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StreamlineFlux(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StreamlineFlux(struct soap *soap, const char *URL, enum resqml20__StreamlineFlux *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StreamlineFlux(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StreamlineFlux(struct soap *soap, enum resqml20__StreamlineFlux *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StreamlineFlux(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind_DEFINED

inline void soap_default_resqml20__ParameterKind(struct soap *soap, enum resqml20__ParameterKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ParameterKind
	*a = SOAP_DEFAULT_resqml20__ParameterKind;
#else
	*a = (enum resqml20__ParameterKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParameterKind(struct soap*, const char*, int, const enum resqml20__ParameterKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ParameterKind2s(struct soap*, enum resqml20__ParameterKind);
SOAP_FMAC3 enum resqml20__ParameterKind * SOAP_FMAC4 soap_in_resqml20__ParameterKind(struct soap*, const char*, enum resqml20__ParameterKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ParameterKind(struct soap*, const char*, enum resqml20__ParameterKind *);

SOAP_FMAC3 enum resqml20__ParameterKind * SOAP_FMAC4 soap_new_resqml20__ParameterKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ParameterKind(struct soap*, const enum resqml20__ParameterKind *, const char*, const char*);

inline int soap_write_resqml20__ParameterKind(struct soap *soap, enum resqml20__ParameterKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ParameterKind(soap, p, "resqml20:ParameterKind", "resqml20:ParameterKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParameterKind(struct soap *soap, const char *URL, enum resqml20__ParameterKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ParameterKind(soap, p, "resqml20:ParameterKind", "resqml20:ParameterKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParameterKind(struct soap *soap, const char *URL, enum resqml20__ParameterKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ParameterKind(soap, p, "resqml20:ParameterKind", "resqml20:ParameterKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParameterKind(struct soap *soap, const char *URL, enum resqml20__ParameterKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ParameterKind(soap, p, "resqml20:ParameterKind", "resqml20:ParameterKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ParameterKind * SOAP_FMAC4 soap_get_resqml20__ParameterKind(struct soap*, enum resqml20__ParameterKind *, const char*, const char*);

inline int soap_read_resqml20__ParameterKind(struct soap *soap, enum resqml20__ParameterKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParameterKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParameterKind(struct soap *soap, const char *URL, enum resqml20__ParameterKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParameterKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParameterKind(struct soap *soap, enum resqml20__ParameterKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParameterKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole_DEFINED

inline void soap_default_resqml20__LineRole(struct soap *soap, enum resqml20__LineRole *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__LineRole
	*a = SOAP_DEFAULT_resqml20__LineRole;
#else
	*a = (enum resqml20__LineRole)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__LineRole(struct soap*, const char*, int, const enum resqml20__LineRole *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__LineRole2s(struct soap*, enum resqml20__LineRole);
SOAP_FMAC3 enum resqml20__LineRole * SOAP_FMAC4 soap_in_resqml20__LineRole(struct soap*, const char*, enum resqml20__LineRole *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__LineRole(struct soap*, const char*, enum resqml20__LineRole *);

SOAP_FMAC3 enum resqml20__LineRole * SOAP_FMAC4 soap_new_resqml20__LineRole(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__LineRole(struct soap*, const enum resqml20__LineRole *, const char*, const char*);

inline int soap_write_resqml20__LineRole(struct soap *soap, enum resqml20__LineRole const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__LineRole(soap, p, "resqml20:LineRole", "resqml20:LineRole") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__LineRole(struct soap *soap, const char *URL, enum resqml20__LineRole const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__LineRole(soap, p, "resqml20:LineRole", "resqml20:LineRole") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__LineRole(struct soap *soap, const char *URL, enum resqml20__LineRole const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__LineRole(soap, p, "resqml20:LineRole", "resqml20:LineRole") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__LineRole(struct soap *soap, const char *URL, enum resqml20__LineRole const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__LineRole(soap, p, "resqml20:LineRole", "resqml20:LineRole") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__LineRole * SOAP_FMAC4 soap_get_resqml20__LineRole(struct soap*, enum resqml20__LineRole *, const char*, const char*);

inline int soap_read_resqml20__LineRole(struct soap *soap, enum resqml20__LineRole *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__LineRole(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__LineRole(struct soap *soap, const char *URL, enum resqml20__LineRole *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__LineRole(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__LineRole(struct soap *soap, enum resqml20__LineRole *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__LineRole(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole_DEFINED

inline void soap_default_resqml20__SurfaceRole(struct soap *soap, enum resqml20__SurfaceRole *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__SurfaceRole
	*a = SOAP_DEFAULT_resqml20__SurfaceRole;
#else
	*a = (enum resqml20__SurfaceRole)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SurfaceRole(struct soap*, const char*, int, const enum resqml20__SurfaceRole *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__SurfaceRole2s(struct soap*, enum resqml20__SurfaceRole);
SOAP_FMAC3 enum resqml20__SurfaceRole * SOAP_FMAC4 soap_in_resqml20__SurfaceRole(struct soap*, const char*, enum resqml20__SurfaceRole *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__SurfaceRole(struct soap*, const char*, enum resqml20__SurfaceRole *);

SOAP_FMAC3 enum resqml20__SurfaceRole * SOAP_FMAC4 soap_new_resqml20__SurfaceRole(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__SurfaceRole(struct soap*, const enum resqml20__SurfaceRole *, const char*, const char*);

inline int soap_write_resqml20__SurfaceRole(struct soap *soap, enum resqml20__SurfaceRole const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__SurfaceRole(soap, p, "resqml20:SurfaceRole", "resqml20:SurfaceRole") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SurfaceRole(struct soap *soap, const char *URL, enum resqml20__SurfaceRole const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SurfaceRole(soap, p, "resqml20:SurfaceRole", "resqml20:SurfaceRole") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SurfaceRole(struct soap *soap, const char *URL, enum resqml20__SurfaceRole const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SurfaceRole(soap, p, "resqml20:SurfaceRole", "resqml20:SurfaceRole") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SurfaceRole(struct soap *soap, const char *URL, enum resqml20__SurfaceRole const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SurfaceRole(soap, p, "resqml20:SurfaceRole", "resqml20:SurfaceRole") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__SurfaceRole * SOAP_FMAC4 soap_get_resqml20__SurfaceRole(struct soap*, enum resqml20__SurfaceRole *, const char*, const char*);

inline int soap_read_resqml20__SurfaceRole(struct soap *soap, enum resqml20__SurfaceRole *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SurfaceRole(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SurfaceRole(struct soap *soap, const char *URL, enum resqml20__SurfaceRole *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SurfaceRole(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SurfaceRole(struct soap *soap, enum resqml20__SurfaceRole *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SurfaceRole(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker_DEFINED

inline void soap_default_resqml20__FluidMarker(struct soap *soap, enum resqml20__FluidMarker *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__FluidMarker
	*a = SOAP_DEFAULT_resqml20__FluidMarker;
#else
	*a = (enum resqml20__FluidMarker)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__FluidMarker(struct soap*, const char*, int, const enum resqml20__FluidMarker *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__FluidMarker2s(struct soap*, enum resqml20__FluidMarker);
SOAP_FMAC3 enum resqml20__FluidMarker * SOAP_FMAC4 soap_in_resqml20__FluidMarker(struct soap*, const char*, enum resqml20__FluidMarker *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__FluidMarker(struct soap*, const char*, enum resqml20__FluidMarker *);

SOAP_FMAC3 enum resqml20__FluidMarker * SOAP_FMAC4 soap_new_resqml20__FluidMarker(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__FluidMarker(struct soap*, const enum resqml20__FluidMarker *, const char*, const char*);

inline int soap_write_resqml20__FluidMarker(struct soap *soap, enum resqml20__FluidMarker const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__FluidMarker(soap, p, "resqml20:FluidMarker", "resqml20:FluidMarker") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__FluidMarker(struct soap *soap, const char *URL, enum resqml20__FluidMarker const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidMarker(soap, p, "resqml20:FluidMarker", "resqml20:FluidMarker") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__FluidMarker(struct soap *soap, const char *URL, enum resqml20__FluidMarker const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidMarker(soap, p, "resqml20:FluidMarker", "resqml20:FluidMarker") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__FluidMarker(struct soap *soap, const char *URL, enum resqml20__FluidMarker const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidMarker(soap, p, "resqml20:FluidMarker", "resqml20:FluidMarker") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__FluidMarker * SOAP_FMAC4 soap_get_resqml20__FluidMarker(struct soap*, enum resqml20__FluidMarker *, const char*, const char*);

inline int soap_read_resqml20__FluidMarker(struct soap *soap, enum resqml20__FluidMarker *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__FluidMarker(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__FluidMarker(struct soap *soap, const char *URL, enum resqml20__FluidMarker *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__FluidMarker(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__FluidMarker(struct soap *soap, enum resqml20__FluidMarker *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__FluidMarker(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference_DEFINED

inline void soap_default_resqml20__MdReference(struct soap *soap, enum resqml20__MdReference *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__MdReference
	*a = SOAP_DEFAULT_resqml20__MdReference;
#else
	*a = (enum resqml20__MdReference)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__MdReference(struct soap*, const char*, int, const enum resqml20__MdReference *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__MdReference2s(struct soap*, enum resqml20__MdReference);
SOAP_FMAC3 enum resqml20__MdReference * SOAP_FMAC4 soap_in_resqml20__MdReference(struct soap*, const char*, enum resqml20__MdReference *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__MdReference(struct soap*, const char*, enum resqml20__MdReference *);

SOAP_FMAC3 enum resqml20__MdReference * SOAP_FMAC4 soap_new_resqml20__MdReference(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__MdReference(struct soap*, const enum resqml20__MdReference *, const char*, const char*);

inline int soap_write_resqml20__MdReference(struct soap *soap, enum resqml20__MdReference const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__MdReference(soap, p, "resqml20:MdReference", "resqml20:MdReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__MdReference(struct soap *soap, const char *URL, enum resqml20__MdReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdReference(soap, p, "resqml20:MdReference", "resqml20:MdReference") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__MdReference(struct soap *soap, const char *URL, enum resqml20__MdReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdReference(soap, p, "resqml20:MdReference", "resqml20:MdReference") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__MdReference(struct soap *soap, const char *URL, enum resqml20__MdReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdReference(soap, p, "resqml20:MdReference", "resqml20:MdReference") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__MdReference * SOAP_FMAC4 soap_get_resqml20__MdReference(struct soap*, enum resqml20__MdReference *, const char*, const char*);

inline int soap_read_resqml20__MdReference(struct soap *soap, enum resqml20__MdReference *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__MdReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__MdReference(struct soap *soap, const char *URL, enum resqml20__MdReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__MdReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__MdReference(struct soap *soap, enum resqml20__MdReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__MdReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain_DEFINED

inline void soap_default_resqml20__MdDomain(struct soap *soap, enum resqml20__MdDomain *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__MdDomain
	*a = SOAP_DEFAULT_resqml20__MdDomain;
#else
	*a = (enum resqml20__MdDomain)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__MdDomain(struct soap*, const char*, int, const enum resqml20__MdDomain *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__MdDomain2s(struct soap*, enum resqml20__MdDomain);
SOAP_FMAC3 enum resqml20__MdDomain * SOAP_FMAC4 soap_in_resqml20__MdDomain(struct soap*, const char*, enum resqml20__MdDomain *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__MdDomain(struct soap*, const char*, enum resqml20__MdDomain *);

SOAP_FMAC3 enum resqml20__MdDomain * SOAP_FMAC4 soap_new_resqml20__MdDomain(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__MdDomain(struct soap*, const enum resqml20__MdDomain *, const char*, const char*);

inline int soap_write_resqml20__MdDomain(struct soap *soap, enum resqml20__MdDomain const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__MdDomain(soap, p, "resqml20:MdDomain", "resqml20:MdDomain") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__MdDomain(struct soap *soap, const char *URL, enum resqml20__MdDomain const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdDomain(soap, p, "resqml20:MdDomain", "resqml20:MdDomain") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__MdDomain(struct soap *soap, const char *URL, enum resqml20__MdDomain const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdDomain(soap, p, "resqml20:MdDomain", "resqml20:MdDomain") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__MdDomain(struct soap *soap, const char *URL, enum resqml20__MdDomain const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__MdDomain(soap, p, "resqml20:MdDomain", "resqml20:MdDomain") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__MdDomain * SOAP_FMAC4 soap_get_resqml20__MdDomain(struct soap*, enum resqml20__MdDomain *, const char*, const char*);

inline int soap_read_resqml20__MdDomain(struct soap *soap, enum resqml20__MdDomain *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__MdDomain(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__MdDomain(struct soap *soap, const char *URL, enum resqml20__MdDomain *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__MdDomain(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__MdDomain(struct soap *soap, enum resqml20__MdDomain *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__MdDomain(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements_DEFINED

inline void soap_default_resqml20__WellboreFrameIndexableElements(struct soap *soap, enum resqml20__WellboreFrameIndexableElements *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__WellboreFrameIndexableElements
	*a = SOAP_DEFAULT_resqml20__WellboreFrameIndexableElements;
#else
	*a = (enum resqml20__WellboreFrameIndexableElements)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__WellboreFrameIndexableElements(struct soap*, const char*, int, const enum resqml20__WellboreFrameIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__WellboreFrameIndexableElements2s(struct soap*, enum resqml20__WellboreFrameIndexableElements);
SOAP_FMAC3 enum resqml20__WellboreFrameIndexableElements * SOAP_FMAC4 soap_in_resqml20__WellboreFrameIndexableElements(struct soap*, const char*, enum resqml20__WellboreFrameIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__WellboreFrameIndexableElements(struct soap*, const char*, enum resqml20__WellboreFrameIndexableElements *);

SOAP_FMAC3 enum resqml20__WellboreFrameIndexableElements * SOAP_FMAC4 soap_new_resqml20__WellboreFrameIndexableElements(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__WellboreFrameIndexableElements(struct soap*, const enum resqml20__WellboreFrameIndexableElements *, const char*, const char*);

inline int soap_write_resqml20__WellboreFrameIndexableElements(struct soap *soap, enum resqml20__WellboreFrameIndexableElements const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__WellboreFrameIndexableElements(soap, p, "resqml20:WellboreFrameIndexableElements", "resqml20:WellboreFrameIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__WellboreFrameIndexableElements(struct soap *soap, const char *URL, enum resqml20__WellboreFrameIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__WellboreFrameIndexableElements(soap, p, "resqml20:WellboreFrameIndexableElements", "resqml20:WellboreFrameIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__WellboreFrameIndexableElements(struct soap *soap, const char *URL, enum resqml20__WellboreFrameIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__WellboreFrameIndexableElements(soap, p, "resqml20:WellboreFrameIndexableElements", "resqml20:WellboreFrameIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__WellboreFrameIndexableElements(struct soap *soap, const char *URL, enum resqml20__WellboreFrameIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__WellboreFrameIndexableElements(soap, p, "resqml20:WellboreFrameIndexableElements", "resqml20:WellboreFrameIndexableElements") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__WellboreFrameIndexableElements * SOAP_FMAC4 soap_get_resqml20__WellboreFrameIndexableElements(struct soap*, enum resqml20__WellboreFrameIndexableElements *, const char*, const char*);

inline int soap_read_resqml20__WellboreFrameIndexableElements(struct soap *soap, enum resqml20__WellboreFrameIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__WellboreFrameIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__WellboreFrameIndexableElements(struct soap *soap, const char *URL, enum resqml20__WellboreFrameIndexableElements *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__WellboreFrameIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__WellboreFrameIndexableElements(struct soap *soap, enum resqml20__WellboreFrameIndexableElements *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__WellboreFrameIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind_DEFINED

inline void soap_default_resqml20__GeologicBoundaryKind(struct soap *soap, enum resqml20__GeologicBoundaryKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__GeologicBoundaryKind
	*a = SOAP_DEFAULT_resqml20__GeologicBoundaryKind;
#else
	*a = (enum resqml20__GeologicBoundaryKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GeologicBoundaryKind(struct soap*, const char*, int, const enum resqml20__GeologicBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__GeologicBoundaryKind2s(struct soap*, enum resqml20__GeologicBoundaryKind);
SOAP_FMAC3 enum resqml20__GeologicBoundaryKind * SOAP_FMAC4 soap_in_resqml20__GeologicBoundaryKind(struct soap*, const char*, enum resqml20__GeologicBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__GeologicBoundaryKind(struct soap*, const char*, enum resqml20__GeologicBoundaryKind *);

SOAP_FMAC3 enum resqml20__GeologicBoundaryKind * SOAP_FMAC4 soap_new_resqml20__GeologicBoundaryKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__GeologicBoundaryKind(struct soap*, const enum resqml20__GeologicBoundaryKind *, const char*, const char*);

inline int soap_write_resqml20__GeologicBoundaryKind(struct soap *soap, enum resqml20__GeologicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__GeologicBoundaryKind(soap, p, "resqml20:GeologicBoundaryKind", "resqml20:GeologicBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GeologicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeologicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicBoundaryKind(soap, p, "resqml20:GeologicBoundaryKind", "resqml20:GeologicBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GeologicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeologicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicBoundaryKind(soap, p, "resqml20:GeologicBoundaryKind", "resqml20:GeologicBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GeologicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeologicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicBoundaryKind(soap, p, "resqml20:GeologicBoundaryKind", "resqml20:GeologicBoundaryKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__GeologicBoundaryKind * SOAP_FMAC4 soap_get_resqml20__GeologicBoundaryKind(struct soap*, enum resqml20__GeologicBoundaryKind *, const char*, const char*);

inline int soap_read_resqml20__GeologicBoundaryKind(struct soap *soap, enum resqml20__GeologicBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GeologicBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GeologicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeologicBoundaryKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GeologicBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GeologicBoundaryKind(struct soap *soap, enum resqml20__GeologicBoundaryKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GeologicBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind_DEFINED

inline void soap_default_resqml20__TectonicBoundaryKind(struct soap *soap, enum resqml20__TectonicBoundaryKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__TectonicBoundaryKind
	*a = SOAP_DEFAULT_resqml20__TectonicBoundaryKind;
#else
	*a = (enum resqml20__TectonicBoundaryKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TectonicBoundaryKind(struct soap*, const char*, int, const enum resqml20__TectonicBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__TectonicBoundaryKind2s(struct soap*, enum resqml20__TectonicBoundaryKind);
SOAP_FMAC3 enum resqml20__TectonicBoundaryKind * SOAP_FMAC4 soap_in_resqml20__TectonicBoundaryKind(struct soap*, const char*, enum resqml20__TectonicBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__TectonicBoundaryKind(struct soap*, const char*, enum resqml20__TectonicBoundaryKind *);

SOAP_FMAC3 enum resqml20__TectonicBoundaryKind * SOAP_FMAC4 soap_new_resqml20__TectonicBoundaryKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__TectonicBoundaryKind(struct soap*, const enum resqml20__TectonicBoundaryKind *, const char*, const char*);

inline int soap_write_resqml20__TectonicBoundaryKind(struct soap *soap, enum resqml20__TectonicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__TectonicBoundaryKind(soap, p, "resqml20:TectonicBoundaryKind", "resqml20:TectonicBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TectonicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__TectonicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TectonicBoundaryKind(soap, p, "resqml20:TectonicBoundaryKind", "resqml20:TectonicBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TectonicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__TectonicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TectonicBoundaryKind(soap, p, "resqml20:TectonicBoundaryKind", "resqml20:TectonicBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TectonicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__TectonicBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TectonicBoundaryKind(soap, p, "resqml20:TectonicBoundaryKind", "resqml20:TectonicBoundaryKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__TectonicBoundaryKind * SOAP_FMAC4 soap_get_resqml20__TectonicBoundaryKind(struct soap*, enum resqml20__TectonicBoundaryKind *, const char*, const char*);

inline int soap_read_resqml20__TectonicBoundaryKind(struct soap *soap, enum resqml20__TectonicBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TectonicBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TectonicBoundaryKind(struct soap *soap, const char *URL, enum resqml20__TectonicBoundaryKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TectonicBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TectonicBoundaryKind(struct soap *soap, enum resqml20__TectonicBoundaryKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TectonicBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact_DEFINED

inline void soap_default_resqml20__FluidContact(struct soap *soap, enum resqml20__FluidContact *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__FluidContact
	*a = SOAP_DEFAULT_resqml20__FluidContact;
#else
	*a = (enum resqml20__FluidContact)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__FluidContact(struct soap*, const char*, int, const enum resqml20__FluidContact *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__FluidContact2s(struct soap*, enum resqml20__FluidContact);
SOAP_FMAC3 enum resqml20__FluidContact * SOAP_FMAC4 soap_in_resqml20__FluidContact(struct soap*, const char*, enum resqml20__FluidContact *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__FluidContact(struct soap*, const char*, enum resqml20__FluidContact *);

SOAP_FMAC3 enum resqml20__FluidContact * SOAP_FMAC4 soap_new_resqml20__FluidContact(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__FluidContact(struct soap*, const enum resqml20__FluidContact *, const char*, const char*);

inline int soap_write_resqml20__FluidContact(struct soap *soap, enum resqml20__FluidContact const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__FluidContact(soap, p, "resqml20:FluidContact", "resqml20:FluidContact") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__FluidContact(struct soap *soap, const char *URL, enum resqml20__FluidContact const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidContact(soap, p, "resqml20:FluidContact", "resqml20:FluidContact") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__FluidContact(struct soap *soap, const char *URL, enum resqml20__FluidContact const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidContact(soap, p, "resqml20:FluidContact", "resqml20:FluidContact") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__FluidContact(struct soap *soap, const char *URL, enum resqml20__FluidContact const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__FluidContact(soap, p, "resqml20:FluidContact", "resqml20:FluidContact") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__FluidContact * SOAP_FMAC4 soap_get_resqml20__FluidContact(struct soap*, enum resqml20__FluidContact *, const char*, const char*);

inline int soap_read_resqml20__FluidContact(struct soap *soap, enum resqml20__FluidContact *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__FluidContact(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__FluidContact(struct soap *soap, const char *URL, enum resqml20__FluidContact *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__FluidContact(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__FluidContact(struct soap *soap, enum resqml20__FluidContact *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__FluidContact(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind_DEFINED

inline void soap_default_resqml20__GeneticBoundaryKind(struct soap *soap, enum resqml20__GeneticBoundaryKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__GeneticBoundaryKind
	*a = SOAP_DEFAULT_resqml20__GeneticBoundaryKind;
#else
	*a = (enum resqml20__GeneticBoundaryKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GeneticBoundaryKind(struct soap*, const char*, int, const enum resqml20__GeneticBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__GeneticBoundaryKind2s(struct soap*, enum resqml20__GeneticBoundaryKind);
SOAP_FMAC3 enum resqml20__GeneticBoundaryKind * SOAP_FMAC4 soap_in_resqml20__GeneticBoundaryKind(struct soap*, const char*, enum resqml20__GeneticBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__GeneticBoundaryKind(struct soap*, const char*, enum resqml20__GeneticBoundaryKind *);

SOAP_FMAC3 enum resqml20__GeneticBoundaryKind * SOAP_FMAC4 soap_new_resqml20__GeneticBoundaryKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__GeneticBoundaryKind(struct soap*, const enum resqml20__GeneticBoundaryKind *, const char*, const char*);

inline int soap_write_resqml20__GeneticBoundaryKind(struct soap *soap, enum resqml20__GeneticBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__GeneticBoundaryKind(soap, p, "resqml20:GeneticBoundaryKind", "resqml20:GeneticBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GeneticBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeneticBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeneticBoundaryKind(soap, p, "resqml20:GeneticBoundaryKind", "resqml20:GeneticBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GeneticBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeneticBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeneticBoundaryKind(soap, p, "resqml20:GeneticBoundaryKind", "resqml20:GeneticBoundaryKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GeneticBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeneticBoundaryKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeneticBoundaryKind(soap, p, "resqml20:GeneticBoundaryKind", "resqml20:GeneticBoundaryKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__GeneticBoundaryKind * SOAP_FMAC4 soap_get_resqml20__GeneticBoundaryKind(struct soap*, enum resqml20__GeneticBoundaryKind *, const char*, const char*);

inline int soap_read_resqml20__GeneticBoundaryKind(struct soap *soap, enum resqml20__GeneticBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GeneticBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GeneticBoundaryKind(struct soap *soap, const char *URL, enum resqml20__GeneticBoundaryKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GeneticBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GeneticBoundaryKind(struct soap *soap, enum resqml20__GeneticBoundaryKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GeneticBoundaryKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase_DEFINED

inline void soap_default_resqml20__Phase(struct soap *soap, enum resqml20__Phase *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__Phase
	*a = SOAP_DEFAULT_resqml20__Phase;
#else
	*a = (enum resqml20__Phase)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Phase(struct soap*, const char*, int, const enum resqml20__Phase *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__Phase2s(struct soap*, enum resqml20__Phase);
SOAP_FMAC3 enum resqml20__Phase * SOAP_FMAC4 soap_in_resqml20__Phase(struct soap*, const char*, enum resqml20__Phase *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__Phase(struct soap*, const char*, enum resqml20__Phase *);

SOAP_FMAC3 enum resqml20__Phase * SOAP_FMAC4 soap_new_resqml20__Phase(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__Phase(struct soap*, const enum resqml20__Phase *, const char*, const char*);

inline int soap_write_resqml20__Phase(struct soap *soap, enum resqml20__Phase const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__Phase(soap, p, "resqml20:Phase", "resqml20:Phase") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Phase(struct soap *soap, const char *URL, enum resqml20__Phase const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Phase(soap, p, "resqml20:Phase", "resqml20:Phase") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Phase(struct soap *soap, const char *URL, enum resqml20__Phase const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Phase(soap, p, "resqml20:Phase", "resqml20:Phase") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Phase(struct soap *soap, const char *URL, enum resqml20__Phase const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Phase(soap, p, "resqml20:Phase", "resqml20:Phase") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__Phase * SOAP_FMAC4 soap_get_resqml20__Phase(struct soap*, enum resqml20__Phase *, const char*, const char*);

inline int soap_read_resqml20__Phase(struct soap *soap, enum resqml20__Phase *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Phase(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Phase(struct soap *soap, const char *URL, enum resqml20__Phase *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Phase(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Phase(struct soap *soap, enum resqml20__Phase *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Phase(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement_DEFINED

inline void soap_default_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml20__GeologicUnitMaterialImplacement *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__GeologicUnitMaterialImplacement
	*a = SOAP_DEFAULT_resqml20__GeologicUnitMaterialImplacement;
#else
	*a = (enum resqml20__GeologicUnitMaterialImplacement)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GeologicUnitMaterialImplacement(struct soap*, const char*, int, const enum resqml20__GeologicUnitMaterialImplacement *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__GeologicUnitMaterialImplacement2s(struct soap*, enum resqml20__GeologicUnitMaterialImplacement);
SOAP_FMAC3 enum resqml20__GeologicUnitMaterialImplacement * SOAP_FMAC4 soap_in_resqml20__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml20__GeologicUnitMaterialImplacement *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml20__GeologicUnitMaterialImplacement *);

SOAP_FMAC3 enum resqml20__GeologicUnitMaterialImplacement * SOAP_FMAC4 soap_new_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__GeologicUnitMaterialImplacement(struct soap*, const enum resqml20__GeologicUnitMaterialImplacement *, const char*, const char*);

inline int soap_write_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml20__GeologicUnitMaterialImplacement const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitMaterialImplacement(soap, p, "resqml20:GeologicUnitMaterialImplacement", "resqml20:GeologicUnitMaterialImplacement") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, const char *URL, enum resqml20__GeologicUnitMaterialImplacement const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitMaterialImplacement(soap, p, "resqml20:GeologicUnitMaterialImplacement", "resqml20:GeologicUnitMaterialImplacement") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, const char *URL, enum resqml20__GeologicUnitMaterialImplacement const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitMaterialImplacement(soap, p, "resqml20:GeologicUnitMaterialImplacement", "resqml20:GeologicUnitMaterialImplacement") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, const char *URL, enum resqml20__GeologicUnitMaterialImplacement const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitMaterialImplacement(soap, p, "resqml20:GeologicUnitMaterialImplacement", "resqml20:GeologicUnitMaterialImplacement") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__GeologicUnitMaterialImplacement * SOAP_FMAC4 soap_get_resqml20__GeologicUnitMaterialImplacement(struct soap*, enum resqml20__GeologicUnitMaterialImplacement *, const char*, const char*);

inline int soap_read_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml20__GeologicUnitMaterialImplacement *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GeologicUnitMaterialImplacement(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, const char *URL, enum resqml20__GeologicUnitMaterialImplacement *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitMaterialImplacement(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml20__GeologicUnitMaterialImplacement *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitMaterialImplacement(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide_DEFINED

inline void soap_default_resqml20__ContactSide(struct soap *soap, enum resqml20__ContactSide *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ContactSide
	*a = SOAP_DEFAULT_resqml20__ContactSide;
#else
	*a = (enum resqml20__ContactSide)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactSide(struct soap*, const char*, int, const enum resqml20__ContactSide *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ContactSide2s(struct soap*, enum resqml20__ContactSide);
SOAP_FMAC3 enum resqml20__ContactSide * SOAP_FMAC4 soap_in_resqml20__ContactSide(struct soap*, const char*, enum resqml20__ContactSide *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ContactSide(struct soap*, const char*, enum resqml20__ContactSide *);

SOAP_FMAC3 enum resqml20__ContactSide * SOAP_FMAC4 soap_new_resqml20__ContactSide(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ContactSide(struct soap*, const enum resqml20__ContactSide *, const char*, const char*);

inline int soap_write_resqml20__ContactSide(struct soap *soap, enum resqml20__ContactSide const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ContactSide(soap, p, "resqml20:ContactSide", "resqml20:ContactSide") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactSide(struct soap *soap, const char *URL, enum resqml20__ContactSide const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactSide(soap, p, "resqml20:ContactSide", "resqml20:ContactSide") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactSide(struct soap *soap, const char *URL, enum resqml20__ContactSide const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactSide(soap, p, "resqml20:ContactSide", "resqml20:ContactSide") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactSide(struct soap *soap, const char *URL, enum resqml20__ContactSide const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactSide(soap, p, "resqml20:ContactSide", "resqml20:ContactSide") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ContactSide * SOAP_FMAC4 soap_get_resqml20__ContactSide(struct soap*, enum resqml20__ContactSide *, const char*, const char*);

inline int soap_read_resqml20__ContactSide(struct soap *soap, enum resqml20__ContactSide *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactSide(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactSide(struct soap *soap, const char *URL, enum resqml20__ContactSide *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactSide(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactSide(struct soap *soap, enum resqml20__ContactSide *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactSide(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb_DEFINED

inline void soap_default_resqml20__ContactVerb(struct soap *soap, enum resqml20__ContactVerb *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ContactVerb
	*a = SOAP_DEFAULT_resqml20__ContactVerb;
#else
	*a = (enum resqml20__ContactVerb)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactVerb(struct soap*, const char*, int, const enum resqml20__ContactVerb *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ContactVerb2s(struct soap*, enum resqml20__ContactVerb);
SOAP_FMAC3 enum resqml20__ContactVerb * SOAP_FMAC4 soap_in_resqml20__ContactVerb(struct soap*, const char*, enum resqml20__ContactVerb *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ContactVerb(struct soap*, const char*, enum resqml20__ContactVerb *);

SOAP_FMAC3 enum resqml20__ContactVerb * SOAP_FMAC4 soap_new_resqml20__ContactVerb(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ContactVerb(struct soap*, const enum resqml20__ContactVerb *, const char*, const char*);

inline int soap_write_resqml20__ContactVerb(struct soap *soap, enum resqml20__ContactVerb const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ContactVerb(soap, p, "resqml20:ContactVerb", "resqml20:ContactVerb") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactVerb(struct soap *soap, const char *URL, enum resqml20__ContactVerb const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactVerb(soap, p, "resqml20:ContactVerb", "resqml20:ContactVerb") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactVerb(struct soap *soap, const char *URL, enum resqml20__ContactVerb const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactVerb(soap, p, "resqml20:ContactVerb", "resqml20:ContactVerb") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactVerb(struct soap *soap, const char *URL, enum resqml20__ContactVerb const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactVerb(soap, p, "resqml20:ContactVerb", "resqml20:ContactVerb") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ContactVerb * SOAP_FMAC4 soap_get_resqml20__ContactVerb(struct soap*, enum resqml20__ContactVerb *, const char*, const char*);

inline int soap_read_resqml20__ContactVerb(struct soap *soap, enum resqml20__ContactVerb *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactVerb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactVerb(struct soap *soap, const char *URL, enum resqml20__ContactVerb *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactVerb(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactVerb(struct soap *soap, enum resqml20__ContactVerb *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactVerb(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape_DEFINED

inline void soap_default_resqml20__Geobody3dShape(struct soap *soap, enum resqml20__Geobody3dShape *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__Geobody3dShape
	*a = SOAP_DEFAULT_resqml20__Geobody3dShape;
#else
	*a = (enum resqml20__Geobody3dShape)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Geobody3dShape(struct soap*, const char*, int, const enum resqml20__Geobody3dShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__Geobody3dShape2s(struct soap*, enum resqml20__Geobody3dShape);
SOAP_FMAC3 enum resqml20__Geobody3dShape * SOAP_FMAC4 soap_in_resqml20__Geobody3dShape(struct soap*, const char*, enum resqml20__Geobody3dShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__Geobody3dShape(struct soap*, const char*, enum resqml20__Geobody3dShape *);

SOAP_FMAC3 enum resqml20__Geobody3dShape * SOAP_FMAC4 soap_new_resqml20__Geobody3dShape(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__Geobody3dShape(struct soap*, const enum resqml20__Geobody3dShape *, const char*, const char*);

inline int soap_write_resqml20__Geobody3dShape(struct soap *soap, enum resqml20__Geobody3dShape const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__Geobody3dShape(soap, p, "resqml20:Geobody3dShape", "resqml20:Geobody3dShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Geobody3dShape(struct soap *soap, const char *URL, enum resqml20__Geobody3dShape const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Geobody3dShape(soap, p, "resqml20:Geobody3dShape", "resqml20:Geobody3dShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Geobody3dShape(struct soap *soap, const char *URL, enum resqml20__Geobody3dShape const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Geobody3dShape(soap, p, "resqml20:Geobody3dShape", "resqml20:Geobody3dShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Geobody3dShape(struct soap *soap, const char *URL, enum resqml20__Geobody3dShape const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Geobody3dShape(soap, p, "resqml20:Geobody3dShape", "resqml20:Geobody3dShape") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__Geobody3dShape * SOAP_FMAC4 soap_get_resqml20__Geobody3dShape(struct soap*, enum resqml20__Geobody3dShape *, const char*, const char*);

inline int soap_read_resqml20__Geobody3dShape(struct soap *soap, enum resqml20__Geobody3dShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Geobody3dShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Geobody3dShape(struct soap *soap, const char *URL, enum resqml20__Geobody3dShape *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Geobody3dShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Geobody3dShape(struct soap *soap, enum resqml20__Geobody3dShape *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Geobody3dShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria_DEFINED

inline void soap_default_resqml20__OrderingCriteria(struct soap *soap, enum resqml20__OrderingCriteria *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__OrderingCriteria
	*a = SOAP_DEFAULT_resqml20__OrderingCriteria;
#else
	*a = (enum resqml20__OrderingCriteria)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__OrderingCriteria(struct soap*, const char*, int, const enum resqml20__OrderingCriteria *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__OrderingCriteria2s(struct soap*, enum resqml20__OrderingCriteria);
SOAP_FMAC3 enum resqml20__OrderingCriteria * SOAP_FMAC4 soap_in_resqml20__OrderingCriteria(struct soap*, const char*, enum resqml20__OrderingCriteria *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__OrderingCriteria(struct soap*, const char*, enum resqml20__OrderingCriteria *);

SOAP_FMAC3 enum resqml20__OrderingCriteria * SOAP_FMAC4 soap_new_resqml20__OrderingCriteria(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__OrderingCriteria(struct soap*, const enum resqml20__OrderingCriteria *, const char*, const char*);

inline int soap_write_resqml20__OrderingCriteria(struct soap *soap, enum resqml20__OrderingCriteria const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__OrderingCriteria(soap, p, "resqml20:OrderingCriteria", "resqml20:OrderingCriteria") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__OrderingCriteria(struct soap *soap, const char *URL, enum resqml20__OrderingCriteria const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrderingCriteria(soap, p, "resqml20:OrderingCriteria", "resqml20:OrderingCriteria") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__OrderingCriteria(struct soap *soap, const char *URL, enum resqml20__OrderingCriteria const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrderingCriteria(soap, p, "resqml20:OrderingCriteria", "resqml20:OrderingCriteria") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__OrderingCriteria(struct soap *soap, const char *URL, enum resqml20__OrderingCriteria const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__OrderingCriteria(soap, p, "resqml20:OrderingCriteria", "resqml20:OrderingCriteria") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__OrderingCriteria * SOAP_FMAC4 soap_get_resqml20__OrderingCriteria(struct soap*, enum resqml20__OrderingCriteria *, const char*, const char*);

inline int soap_read_resqml20__OrderingCriteria(struct soap *soap, enum resqml20__OrderingCriteria *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__OrderingCriteria(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__OrderingCriteria(struct soap *soap, const char *URL, enum resqml20__OrderingCriteria *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__OrderingCriteria(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__OrderingCriteria(struct soap *soap, enum resqml20__OrderingCriteria *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__OrderingCriteria(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode_DEFINED

inline void soap_default_resqml20__ContactMode(struct soap *soap, enum resqml20__ContactMode *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ContactMode
	*a = SOAP_DEFAULT_resqml20__ContactMode;
#else
	*a = (enum resqml20__ContactMode)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactMode(struct soap*, const char*, int, const enum resqml20__ContactMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ContactMode2s(struct soap*, enum resqml20__ContactMode);
SOAP_FMAC3 enum resqml20__ContactMode * SOAP_FMAC4 soap_in_resqml20__ContactMode(struct soap*, const char*, enum resqml20__ContactMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ContactMode(struct soap*, const char*, enum resqml20__ContactMode *);

SOAP_FMAC3 enum resqml20__ContactMode * SOAP_FMAC4 soap_new_resqml20__ContactMode(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ContactMode(struct soap*, const enum resqml20__ContactMode *, const char*, const char*);

inline int soap_write_resqml20__ContactMode(struct soap *soap, enum resqml20__ContactMode const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ContactMode(soap, p, "resqml20:ContactMode", "resqml20:ContactMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactMode(struct soap *soap, const char *URL, enum resqml20__ContactMode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactMode(soap, p, "resqml20:ContactMode", "resqml20:ContactMode") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactMode(struct soap *soap, const char *URL, enum resqml20__ContactMode const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactMode(soap, p, "resqml20:ContactMode", "resqml20:ContactMode") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactMode(struct soap *soap, const char *URL, enum resqml20__ContactMode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactMode(soap, p, "resqml20:ContactMode", "resqml20:ContactMode") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ContactMode * SOAP_FMAC4 soap_get_resqml20__ContactMode(struct soap*, enum resqml20__ContactMode *, const char*, const char*);

inline int soap_read_resqml20__ContactMode(struct soap *soap, enum resqml20__ContactMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactMode(struct soap *soap, const char *URL, enum resqml20__ContactMode *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactMode(struct soap *soap, enum resqml20__ContactMode *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation_DEFINED

inline void soap_default_resqml20__BoundaryRelation(struct soap *soap, enum resqml20__BoundaryRelation *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__BoundaryRelation
	*a = SOAP_DEFAULT_resqml20__BoundaryRelation;
#else
	*a = (enum resqml20__BoundaryRelation)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BoundaryRelation(struct soap*, const char*, int, const enum resqml20__BoundaryRelation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__BoundaryRelation2s(struct soap*, enum resqml20__BoundaryRelation);
SOAP_FMAC3 enum resqml20__BoundaryRelation * SOAP_FMAC4 soap_in_resqml20__BoundaryRelation(struct soap*, const char*, enum resqml20__BoundaryRelation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__BoundaryRelation(struct soap*, const char*, enum resqml20__BoundaryRelation *);

SOAP_FMAC3 enum resqml20__BoundaryRelation * SOAP_FMAC4 soap_new_resqml20__BoundaryRelation(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__BoundaryRelation(struct soap*, const enum resqml20__BoundaryRelation *, const char*, const char*);

inline int soap_write_resqml20__BoundaryRelation(struct soap *soap, enum resqml20__BoundaryRelation const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__BoundaryRelation(soap, p, "resqml20:BoundaryRelation", "resqml20:BoundaryRelation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BoundaryRelation(struct soap *soap, const char *URL, enum resqml20__BoundaryRelation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__BoundaryRelation(soap, p, "resqml20:BoundaryRelation", "resqml20:BoundaryRelation") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BoundaryRelation(struct soap *soap, const char *URL, enum resqml20__BoundaryRelation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__BoundaryRelation(soap, p, "resqml20:BoundaryRelation", "resqml20:BoundaryRelation") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BoundaryRelation(struct soap *soap, const char *URL, enum resqml20__BoundaryRelation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__BoundaryRelation(soap, p, "resqml20:BoundaryRelation", "resqml20:BoundaryRelation") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__BoundaryRelation * SOAP_FMAC4 soap_get_resqml20__BoundaryRelation(struct soap*, enum resqml20__BoundaryRelation *, const char*, const char*);

inline int soap_read_resqml20__BoundaryRelation(struct soap *soap, enum resqml20__BoundaryRelation *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BoundaryRelation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BoundaryRelation(struct soap *soap, const char *URL, enum resqml20__BoundaryRelation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BoundaryRelation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BoundaryRelation(struct soap *soap, enum resqml20__BoundaryRelation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BoundaryRelation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain_DEFINED

inline void soap_default_resqml20__Domain(struct soap *soap, enum resqml20__Domain *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__Domain
	*a = SOAP_DEFAULT_resqml20__Domain;
#else
	*a = (enum resqml20__Domain)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Domain(struct soap*, const char*, int, const enum resqml20__Domain *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__Domain2s(struct soap*, enum resqml20__Domain);
SOAP_FMAC3 enum resqml20__Domain * SOAP_FMAC4 soap_in_resqml20__Domain(struct soap*, const char*, enum resqml20__Domain *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__Domain(struct soap*, const char*, enum resqml20__Domain *);

SOAP_FMAC3 enum resqml20__Domain * SOAP_FMAC4 soap_new_resqml20__Domain(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__Domain(struct soap*, const enum resqml20__Domain *, const char*, const char*);

inline int soap_write_resqml20__Domain(struct soap *soap, enum resqml20__Domain const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__Domain(soap, p, "resqml20:Domain", "resqml20:Domain") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Domain(struct soap *soap, const char *URL, enum resqml20__Domain const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Domain(soap, p, "resqml20:Domain", "resqml20:Domain") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Domain(struct soap *soap, const char *URL, enum resqml20__Domain const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Domain(soap, p, "resqml20:Domain", "resqml20:Domain") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Domain(struct soap *soap, const char *URL, enum resqml20__Domain const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Domain(soap, p, "resqml20:Domain", "resqml20:Domain") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__Domain * SOAP_FMAC4 soap_get_resqml20__Domain(struct soap*, enum resqml20__Domain *, const char*, const char*);

inline int soap_read_resqml20__Domain(struct soap *soap, enum resqml20__Domain *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Domain(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Domain(struct soap *soap, const char *URL, enum resqml20__Domain *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Domain(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Domain(struct soap *soap, enum resqml20__Domain *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Domain(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition_DEFINED

inline void soap_default_resqml20__GeologicUnitComposition(struct soap *soap, enum resqml20__GeologicUnitComposition *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__GeologicUnitComposition
	*a = SOAP_DEFAULT_resqml20__GeologicUnitComposition;
#else
	*a = (enum resqml20__GeologicUnitComposition)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GeologicUnitComposition(struct soap*, const char*, int, const enum resqml20__GeologicUnitComposition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__GeologicUnitComposition2s(struct soap*, enum resqml20__GeologicUnitComposition);
SOAP_FMAC3 enum resqml20__GeologicUnitComposition * SOAP_FMAC4 soap_in_resqml20__GeologicUnitComposition(struct soap*, const char*, enum resqml20__GeologicUnitComposition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__GeologicUnitComposition(struct soap*, const char*, enum resqml20__GeologicUnitComposition *);

SOAP_FMAC3 enum resqml20__GeologicUnitComposition * SOAP_FMAC4 soap_new_resqml20__GeologicUnitComposition(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__GeologicUnitComposition(struct soap*, const enum resqml20__GeologicUnitComposition *, const char*, const char*);

inline int soap_write_resqml20__GeologicUnitComposition(struct soap *soap, enum resqml20__GeologicUnitComposition const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitComposition(soap, p, "resqml20:GeologicUnitComposition", "resqml20:GeologicUnitComposition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GeologicUnitComposition(struct soap *soap, const char *URL, enum resqml20__GeologicUnitComposition const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitComposition(soap, p, "resqml20:GeologicUnitComposition", "resqml20:GeologicUnitComposition") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GeologicUnitComposition(struct soap *soap, const char *URL, enum resqml20__GeologicUnitComposition const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitComposition(soap, p, "resqml20:GeologicUnitComposition", "resqml20:GeologicUnitComposition") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GeologicUnitComposition(struct soap *soap, const char *URL, enum resqml20__GeologicUnitComposition const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GeologicUnitComposition(soap, p, "resqml20:GeologicUnitComposition", "resqml20:GeologicUnitComposition") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__GeologicUnitComposition * SOAP_FMAC4 soap_get_resqml20__GeologicUnitComposition(struct soap*, enum resqml20__GeologicUnitComposition *, const char*, const char*);

inline int soap_read_resqml20__GeologicUnitComposition(struct soap *soap, enum resqml20__GeologicUnitComposition *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GeologicUnitComposition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GeologicUnitComposition(struct soap *soap, const char *URL, enum resqml20__GeologicUnitComposition *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitComposition(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GeologicUnitComposition(struct soap *soap, enum resqml20__GeologicUnitComposition *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitComposition(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode_DEFINED

inline void soap_default_resqml20__DepositionMode(struct soap *soap, enum resqml20__DepositionMode *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__DepositionMode
	*a = SOAP_DEFAULT_resqml20__DepositionMode;
#else
	*a = (enum resqml20__DepositionMode)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DepositionMode(struct soap*, const char*, int, const enum resqml20__DepositionMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__DepositionMode2s(struct soap*, enum resqml20__DepositionMode);
SOAP_FMAC3 enum resqml20__DepositionMode * SOAP_FMAC4 soap_in_resqml20__DepositionMode(struct soap*, const char*, enum resqml20__DepositionMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__DepositionMode(struct soap*, const char*, enum resqml20__DepositionMode *);

SOAP_FMAC3 enum resqml20__DepositionMode * SOAP_FMAC4 soap_new_resqml20__DepositionMode(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__DepositionMode(struct soap*, const enum resqml20__DepositionMode *, const char*, const char*);

inline int soap_write_resqml20__DepositionMode(struct soap *soap, enum resqml20__DepositionMode const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__DepositionMode(soap, p, "resqml20:DepositionMode", "resqml20:DepositionMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DepositionMode(struct soap *soap, const char *URL, enum resqml20__DepositionMode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__DepositionMode(soap, p, "resqml20:DepositionMode", "resqml20:DepositionMode") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DepositionMode(struct soap *soap, const char *URL, enum resqml20__DepositionMode const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__DepositionMode(soap, p, "resqml20:DepositionMode", "resqml20:DepositionMode") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DepositionMode(struct soap *soap, const char *URL, enum resqml20__DepositionMode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__DepositionMode(soap, p, "resqml20:DepositionMode", "resqml20:DepositionMode") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__DepositionMode * SOAP_FMAC4 soap_get_resqml20__DepositionMode(struct soap*, enum resqml20__DepositionMode *, const char*, const char*);

inline int soap_read_resqml20__DepositionMode(struct soap *soap, enum resqml20__DepositionMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DepositionMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DepositionMode(struct soap *soap, const char *URL, enum resqml20__DepositionMode *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DepositionMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DepositionMode(struct soap *soap, enum resqml20__DepositionMode *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DepositionMode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship_DEFINED

inline void soap_default_resqml20__ContactRelationship(struct soap *soap, enum resqml20__ContactRelationship *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ContactRelationship
	*a = SOAP_DEFAULT_resqml20__ContactRelationship;
#else
	*a = (enum resqml20__ContactRelationship)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactRelationship(struct soap*, const char*, int, const enum resqml20__ContactRelationship *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ContactRelationship2s(struct soap*, enum resqml20__ContactRelationship);
SOAP_FMAC3 enum resqml20__ContactRelationship * SOAP_FMAC4 soap_in_resqml20__ContactRelationship(struct soap*, const char*, enum resqml20__ContactRelationship *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ContactRelationship(struct soap*, const char*, enum resqml20__ContactRelationship *);

SOAP_FMAC3 enum resqml20__ContactRelationship * SOAP_FMAC4 soap_new_resqml20__ContactRelationship(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ContactRelationship(struct soap*, const enum resqml20__ContactRelationship *, const char*, const char*);

inline int soap_write_resqml20__ContactRelationship(struct soap *soap, enum resqml20__ContactRelationship const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ContactRelationship(soap, p, "resqml20:ContactRelationship", "resqml20:ContactRelationship") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactRelationship(struct soap *soap, const char *URL, enum resqml20__ContactRelationship const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactRelationship(soap, p, "resqml20:ContactRelationship", "resqml20:ContactRelationship") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactRelationship(struct soap *soap, const char *URL, enum resqml20__ContactRelationship const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactRelationship(soap, p, "resqml20:ContactRelationship", "resqml20:ContactRelationship") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactRelationship(struct soap *soap, const char *URL, enum resqml20__ContactRelationship const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ContactRelationship(soap, p, "resqml20:ContactRelationship", "resqml20:ContactRelationship") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ContactRelationship * SOAP_FMAC4 soap_get_resqml20__ContactRelationship(struct soap*, enum resqml20__ContactRelationship *, const char*, const char*);

inline int soap_read_resqml20__ContactRelationship(struct soap *soap, enum resqml20__ContactRelationship *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactRelationship(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactRelationship(struct soap *soap, const char *URL, enum resqml20__ContactRelationship *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactRelationship(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactRelationship(struct soap *soap, enum resqml20__ContactRelationship *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactRelationship(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface_DEFINED

inline void soap_default_resqml20__SequenceStratigraphySurface(struct soap *soap, enum resqml20__SequenceStratigraphySurface *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__SequenceStratigraphySurface
	*a = SOAP_DEFAULT_resqml20__SequenceStratigraphySurface;
#else
	*a = (enum resqml20__SequenceStratigraphySurface)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SequenceStratigraphySurface(struct soap*, const char*, int, const enum resqml20__SequenceStratigraphySurface *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__SequenceStratigraphySurface2s(struct soap*, enum resqml20__SequenceStratigraphySurface);
SOAP_FMAC3 enum resqml20__SequenceStratigraphySurface * SOAP_FMAC4 soap_in_resqml20__SequenceStratigraphySurface(struct soap*, const char*, enum resqml20__SequenceStratigraphySurface *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__SequenceStratigraphySurface(struct soap*, const char*, enum resqml20__SequenceStratigraphySurface *);

SOAP_FMAC3 enum resqml20__SequenceStratigraphySurface * SOAP_FMAC4 soap_new_resqml20__SequenceStratigraphySurface(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__SequenceStratigraphySurface(struct soap*, const enum resqml20__SequenceStratigraphySurface *, const char*, const char*);

inline int soap_write_resqml20__SequenceStratigraphySurface(struct soap *soap, enum resqml20__SequenceStratigraphySurface const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__SequenceStratigraphySurface(soap, p, "resqml20:SequenceStratigraphySurface", "resqml20:SequenceStratigraphySurface") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SequenceStratigraphySurface(struct soap *soap, const char *URL, enum resqml20__SequenceStratigraphySurface const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SequenceStratigraphySurface(soap, p, "resqml20:SequenceStratigraphySurface", "resqml20:SequenceStratigraphySurface") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SequenceStratigraphySurface(struct soap *soap, const char *URL, enum resqml20__SequenceStratigraphySurface const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SequenceStratigraphySurface(soap, p, "resqml20:SequenceStratigraphySurface", "resqml20:SequenceStratigraphySurface") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SequenceStratigraphySurface(struct soap *soap, const char *URL, enum resqml20__SequenceStratigraphySurface const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SequenceStratigraphySurface(soap, p, "resqml20:SequenceStratigraphySurface", "resqml20:SequenceStratigraphySurface") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__SequenceStratigraphySurface * SOAP_FMAC4 soap_get_resqml20__SequenceStratigraphySurface(struct soap*, enum resqml20__SequenceStratigraphySurface *, const char*, const char*);

inline int soap_read_resqml20__SequenceStratigraphySurface(struct soap *soap, enum resqml20__SequenceStratigraphySurface *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SequenceStratigraphySurface(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SequenceStratigraphySurface(struct soap *soap, const char *URL, enum resqml20__SequenceStratigraphySurface *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SequenceStratigraphySurface(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SequenceStratigraphySurface(struct soap *soap, enum resqml20__SequenceStratigraphySurface *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SequenceStratigraphySurface(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind_DEFINED

inline void soap_default_resqml20__ThrowKind(struct soap *soap, enum resqml20__ThrowKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ThrowKind
	*a = SOAP_DEFAULT_resqml20__ThrowKind;
#else
	*a = (enum resqml20__ThrowKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ThrowKind(struct soap*, const char*, int, const enum resqml20__ThrowKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ThrowKind2s(struct soap*, enum resqml20__ThrowKind);
SOAP_FMAC3 enum resqml20__ThrowKind * SOAP_FMAC4 soap_in_resqml20__ThrowKind(struct soap*, const char*, enum resqml20__ThrowKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ThrowKind(struct soap*, const char*, enum resqml20__ThrowKind *);

SOAP_FMAC3 enum resqml20__ThrowKind * SOAP_FMAC4 soap_new_resqml20__ThrowKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ThrowKind(struct soap*, const enum resqml20__ThrowKind *, const char*, const char*);

inline int soap_write_resqml20__ThrowKind(struct soap *soap, enum resqml20__ThrowKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ThrowKind(soap, p, "resqml20:ThrowKind", "resqml20:ThrowKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ThrowKind(struct soap *soap, const char *URL, enum resqml20__ThrowKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ThrowKind(soap, p, "resqml20:ThrowKind", "resqml20:ThrowKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ThrowKind(struct soap *soap, const char *URL, enum resqml20__ThrowKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ThrowKind(soap, p, "resqml20:ThrowKind", "resqml20:ThrowKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ThrowKind(struct soap *soap, const char *URL, enum resqml20__ThrowKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ThrowKind(soap, p, "resqml20:ThrowKind", "resqml20:ThrowKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ThrowKind * SOAP_FMAC4 soap_get_resqml20__ThrowKind(struct soap*, enum resqml20__ThrowKind *, const char*, const char*);

inline int soap_read_resqml20__ThrowKind(struct soap *soap, enum resqml20__ThrowKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ThrowKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ThrowKind(struct soap *soap, const char *URL, enum resqml20__ThrowKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ThrowKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ThrowKind(struct soap *soap, enum resqml20__ThrowKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ThrowKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape_DEFINED

inline void soap_default_resqml20__PillarShape(struct soap *soap, enum resqml20__PillarShape *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__PillarShape
	*a = SOAP_DEFAULT_resqml20__PillarShape;
#else
	*a = (enum resqml20__PillarShape)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PillarShape(struct soap*, const char*, int, const enum resqml20__PillarShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__PillarShape2s(struct soap*, enum resqml20__PillarShape);
SOAP_FMAC3 enum resqml20__PillarShape * SOAP_FMAC4 soap_in_resqml20__PillarShape(struct soap*, const char*, enum resqml20__PillarShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__PillarShape(struct soap*, const char*, enum resqml20__PillarShape *);

SOAP_FMAC3 enum resqml20__PillarShape * SOAP_FMAC4 soap_new_resqml20__PillarShape(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__PillarShape(struct soap*, const enum resqml20__PillarShape *, const char*, const char*);

inline int soap_write_resqml20__PillarShape(struct soap *soap, enum resqml20__PillarShape const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__PillarShape(soap, p, "resqml20:PillarShape", "resqml20:PillarShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PillarShape(struct soap *soap, const char *URL, enum resqml20__PillarShape const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__PillarShape(soap, p, "resqml20:PillarShape", "resqml20:PillarShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PillarShape(struct soap *soap, const char *URL, enum resqml20__PillarShape const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__PillarShape(soap, p, "resqml20:PillarShape", "resqml20:PillarShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PillarShape(struct soap *soap, const char *URL, enum resqml20__PillarShape const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__PillarShape(soap, p, "resqml20:PillarShape", "resqml20:PillarShape") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__PillarShape * SOAP_FMAC4 soap_get_resqml20__PillarShape(struct soap*, enum resqml20__PillarShape *, const char*, const char*);

inline int soap_read_resqml20__PillarShape(struct soap *soap, enum resqml20__PillarShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PillarShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PillarShape(struct soap *soap, const char *URL, enum resqml20__PillarShape *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PillarShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PillarShape(struct soap *soap, enum resqml20__PillarShape *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PillarShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements_DEFINED

inline void soap_default_resqml20__UnstructuredCellIndexableElements(struct soap *soap, enum resqml20__UnstructuredCellIndexableElements *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__UnstructuredCellIndexableElements
	*a = SOAP_DEFAULT_resqml20__UnstructuredCellIndexableElements;
#else
	*a = (enum resqml20__UnstructuredCellIndexableElements)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredCellIndexableElements(struct soap*, const char*, int, const enum resqml20__UnstructuredCellIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__UnstructuredCellIndexableElements2s(struct soap*, enum resqml20__UnstructuredCellIndexableElements);
SOAP_FMAC3 enum resqml20__UnstructuredCellIndexableElements * SOAP_FMAC4 soap_in_resqml20__UnstructuredCellIndexableElements(struct soap*, const char*, enum resqml20__UnstructuredCellIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__UnstructuredCellIndexableElements(struct soap*, const char*, enum resqml20__UnstructuredCellIndexableElements *);

SOAP_FMAC3 enum resqml20__UnstructuredCellIndexableElements * SOAP_FMAC4 soap_new_resqml20__UnstructuredCellIndexableElements(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__UnstructuredCellIndexableElements(struct soap*, const enum resqml20__UnstructuredCellIndexableElements *, const char*, const char*);

inline int soap_write_resqml20__UnstructuredCellIndexableElements(struct soap *soap, enum resqml20__UnstructuredCellIndexableElements const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredCellIndexableElements(soap, p, "resqml20:UnstructuredCellIndexableElements", "resqml20:UnstructuredCellIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredCellIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredCellIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredCellIndexableElements(soap, p, "resqml20:UnstructuredCellIndexableElements", "resqml20:UnstructuredCellIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredCellIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredCellIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredCellIndexableElements(soap, p, "resqml20:UnstructuredCellIndexableElements", "resqml20:UnstructuredCellIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredCellIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredCellIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredCellIndexableElements(soap, p, "resqml20:UnstructuredCellIndexableElements", "resqml20:UnstructuredCellIndexableElements") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__UnstructuredCellIndexableElements * SOAP_FMAC4 soap_get_resqml20__UnstructuredCellIndexableElements(struct soap*, enum resqml20__UnstructuredCellIndexableElements *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredCellIndexableElements(struct soap *soap, enum resqml20__UnstructuredCellIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredCellIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredCellIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredCellIndexableElements *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredCellIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredCellIndexableElements(struct soap *soap, enum resqml20__UnstructuredCellIndexableElements *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredCellIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape_DEFINED

inline void soap_default_resqml20__CellShape(struct soap *soap, enum resqml20__CellShape *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__CellShape
	*a = SOAP_DEFAULT_resqml20__CellShape;
#else
	*a = (enum resqml20__CellShape)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__CellShape(struct soap*, const char*, int, const enum resqml20__CellShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__CellShape2s(struct soap*, enum resqml20__CellShape);
SOAP_FMAC3 enum resqml20__CellShape * SOAP_FMAC4 soap_in_resqml20__CellShape(struct soap*, const char*, enum resqml20__CellShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__CellShape(struct soap*, const char*, enum resqml20__CellShape *);

SOAP_FMAC3 enum resqml20__CellShape * SOAP_FMAC4 soap_new_resqml20__CellShape(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__CellShape(struct soap*, const enum resqml20__CellShape *, const char*, const char*);

inline int soap_write_resqml20__CellShape(struct soap *soap, enum resqml20__CellShape const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__CellShape(soap, p, "resqml20:CellShape", "resqml20:CellShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__CellShape(struct soap *soap, const char *URL, enum resqml20__CellShape const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__CellShape(soap, p, "resqml20:CellShape", "resqml20:CellShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__CellShape(struct soap *soap, const char *URL, enum resqml20__CellShape const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__CellShape(soap, p, "resqml20:CellShape", "resqml20:CellShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__CellShape(struct soap *soap, const char *URL, enum resqml20__CellShape const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__CellShape(soap, p, "resqml20:CellShape", "resqml20:CellShape") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__CellShape * SOAP_FMAC4 soap_get_resqml20__CellShape(struct soap*, enum resqml20__CellShape *, const char*, const char*);

inline int soap_read_resqml20__CellShape(struct soap *soap, enum resqml20__CellShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__CellShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__CellShape(struct soap *soap, const char *URL, enum resqml20__CellShape *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__CellShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__CellShape(struct soap *soap, enum resqml20__CellShape *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__CellShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment_DEFINED

inline void soap_default_resqml20__GridGeometryAttachment(struct soap *soap, enum resqml20__GridGeometryAttachment *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__GridGeometryAttachment
	*a = SOAP_DEFAULT_resqml20__GridGeometryAttachment;
#else
	*a = (enum resqml20__GridGeometryAttachment)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GridGeometryAttachment(struct soap*, const char*, int, const enum resqml20__GridGeometryAttachment *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__GridGeometryAttachment2s(struct soap*, enum resqml20__GridGeometryAttachment);
SOAP_FMAC3 enum resqml20__GridGeometryAttachment * SOAP_FMAC4 soap_in_resqml20__GridGeometryAttachment(struct soap*, const char*, enum resqml20__GridGeometryAttachment *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__GridGeometryAttachment(struct soap*, const char*, enum resqml20__GridGeometryAttachment *);

SOAP_FMAC3 enum resqml20__GridGeometryAttachment * SOAP_FMAC4 soap_new_resqml20__GridGeometryAttachment(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__GridGeometryAttachment(struct soap*, const enum resqml20__GridGeometryAttachment *, const char*, const char*);

inline int soap_write_resqml20__GridGeometryAttachment(struct soap *soap, enum resqml20__GridGeometryAttachment const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__GridGeometryAttachment(soap, p, "resqml20:GridGeometryAttachment", "resqml20:GridGeometryAttachment") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GridGeometryAttachment(struct soap *soap, const char *URL, enum resqml20__GridGeometryAttachment const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GridGeometryAttachment(soap, p, "resqml20:GridGeometryAttachment", "resqml20:GridGeometryAttachment") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GridGeometryAttachment(struct soap *soap, const char *URL, enum resqml20__GridGeometryAttachment const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GridGeometryAttachment(soap, p, "resqml20:GridGeometryAttachment", "resqml20:GridGeometryAttachment") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GridGeometryAttachment(struct soap *soap, const char *URL, enum resqml20__GridGeometryAttachment const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__GridGeometryAttachment(soap, p, "resqml20:GridGeometryAttachment", "resqml20:GridGeometryAttachment") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__GridGeometryAttachment * SOAP_FMAC4 soap_get_resqml20__GridGeometryAttachment(struct soap*, enum resqml20__GridGeometryAttachment *, const char*, const char*);

inline int soap_read_resqml20__GridGeometryAttachment(struct soap *soap, enum resqml20__GridGeometryAttachment *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GridGeometryAttachment(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GridGeometryAttachment(struct soap *soap, const char *URL, enum resqml20__GridGeometryAttachment *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GridGeometryAttachment(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GridGeometryAttachment(struct soap *soap, enum resqml20__GridGeometryAttachment *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GridGeometryAttachment(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements_DEFINED

inline void soap_default_resqml20__IjkIndexableElements(struct soap *soap, enum resqml20__IjkIndexableElements *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__IjkIndexableElements
	*a = SOAP_DEFAULT_resqml20__IjkIndexableElements;
#else
	*a = (enum resqml20__IjkIndexableElements)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IjkIndexableElements(struct soap*, const char*, int, const enum resqml20__IjkIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__IjkIndexableElements2s(struct soap*, enum resqml20__IjkIndexableElements);
SOAP_FMAC3 enum resqml20__IjkIndexableElements * SOAP_FMAC4 soap_in_resqml20__IjkIndexableElements(struct soap*, const char*, enum resqml20__IjkIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__IjkIndexableElements(struct soap*, const char*, enum resqml20__IjkIndexableElements *);

SOAP_FMAC3 enum resqml20__IjkIndexableElements * SOAP_FMAC4 soap_new_resqml20__IjkIndexableElements(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__IjkIndexableElements(struct soap*, const enum resqml20__IjkIndexableElements *, const char*, const char*);

inline int soap_write_resqml20__IjkIndexableElements(struct soap *soap, enum resqml20__IjkIndexableElements const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__IjkIndexableElements(soap, p, "resqml20:IjkIndexableElements", "resqml20:IjkIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IjkIndexableElements(struct soap *soap, const char *URL, enum resqml20__IjkIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IjkIndexableElements(soap, p, "resqml20:IjkIndexableElements", "resqml20:IjkIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IjkIndexableElements(struct soap *soap, const char *URL, enum resqml20__IjkIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IjkIndexableElements(soap, p, "resqml20:IjkIndexableElements", "resqml20:IjkIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IjkIndexableElements(struct soap *soap, const char *URL, enum resqml20__IjkIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IjkIndexableElements(soap, p, "resqml20:IjkIndexableElements", "resqml20:IjkIndexableElements") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__IjkIndexableElements * SOAP_FMAC4 soap_get_resqml20__IjkIndexableElements(struct soap*, enum resqml20__IjkIndexableElements *, const char*, const char*);

inline int soap_read_resqml20__IjkIndexableElements(struct soap *soap, enum resqml20__IjkIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IjkIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IjkIndexableElements(struct soap *soap, const char *URL, enum resqml20__IjkIndexableElements *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IjkIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IjkIndexableElements(struct soap *soap, enum resqml20__IjkIndexableElements *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IjkIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection_DEFINED

inline void soap_default_resqml20__KDirection(struct soap *soap, enum resqml20__KDirection *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__KDirection
	*a = SOAP_DEFAULT_resqml20__KDirection;
#else
	*a = (enum resqml20__KDirection)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__KDirection(struct soap*, const char*, int, const enum resqml20__KDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__KDirection2s(struct soap*, enum resqml20__KDirection);
SOAP_FMAC3 enum resqml20__KDirection * SOAP_FMAC4 soap_in_resqml20__KDirection(struct soap*, const char*, enum resqml20__KDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__KDirection(struct soap*, const char*, enum resqml20__KDirection *);

SOAP_FMAC3 enum resqml20__KDirection * SOAP_FMAC4 soap_new_resqml20__KDirection(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__KDirection(struct soap*, const enum resqml20__KDirection *, const char*, const char*);

inline int soap_write_resqml20__KDirection(struct soap *soap, enum resqml20__KDirection const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__KDirection(soap, p, "resqml20:KDirection", "resqml20:KDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__KDirection(struct soap *soap, const char *URL, enum resqml20__KDirection const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__KDirection(soap, p, "resqml20:KDirection", "resqml20:KDirection") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__KDirection(struct soap *soap, const char *URL, enum resqml20__KDirection const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__KDirection(soap, p, "resqml20:KDirection", "resqml20:KDirection") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__KDirection(struct soap *soap, const char *URL, enum resqml20__KDirection const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__KDirection(soap, p, "resqml20:KDirection", "resqml20:KDirection") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__KDirection * SOAP_FMAC4 soap_get_resqml20__KDirection(struct soap*, enum resqml20__KDirection *, const char*, const char*);

inline int soap_read_resqml20__KDirection(struct soap *soap, enum resqml20__KDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__KDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__KDirection(struct soap *soap, const char *URL, enum resqml20__KDirection *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__KDirection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__KDirection(struct soap *soap, enum resqml20__KDirection *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__KDirection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape_DEFINED

inline void soap_default_resqml20__ColumnShape(struct soap *soap, enum resqml20__ColumnShape *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ColumnShape
	*a = SOAP_DEFAULT_resqml20__ColumnShape;
#else
	*a = (enum resqml20__ColumnShape)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnShape(struct soap*, const char*, int, const enum resqml20__ColumnShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ColumnShape2s(struct soap*, enum resqml20__ColumnShape);
SOAP_FMAC3 enum resqml20__ColumnShape * SOAP_FMAC4 soap_in_resqml20__ColumnShape(struct soap*, const char*, enum resqml20__ColumnShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ColumnShape(struct soap*, const char*, enum resqml20__ColumnShape *);

SOAP_FMAC3 enum resqml20__ColumnShape * SOAP_FMAC4 soap_new_resqml20__ColumnShape(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ColumnShape(struct soap*, const enum resqml20__ColumnShape *, const char*, const char*);

inline int soap_write_resqml20__ColumnShape(struct soap *soap, enum resqml20__ColumnShape const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ColumnShape(soap, p, "resqml20:ColumnShape", "resqml20:ColumnShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnShape(struct soap *soap, const char *URL, enum resqml20__ColumnShape const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ColumnShape(soap, p, "resqml20:ColumnShape", "resqml20:ColumnShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnShape(struct soap *soap, const char *URL, enum resqml20__ColumnShape const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ColumnShape(soap, p, "resqml20:ColumnShape", "resqml20:ColumnShape") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnShape(struct soap *soap, const char *URL, enum resqml20__ColumnShape const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ColumnShape(soap, p, "resqml20:ColumnShape", "resqml20:ColumnShape") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ColumnShape * SOAP_FMAC4 soap_get_resqml20__ColumnShape(struct soap*, enum resqml20__ColumnShape *, const char*, const char*);

inline int soap_read_resqml20__ColumnShape(struct soap *soap, enum resqml20__ColumnShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnShape(struct soap *soap, const char *URL, enum resqml20__ColumnShape *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnShape(struct soap *soap, enum resqml20__ColumnShape *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnShape(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject_DEFINED

inline void soap_default_resqml20__SubnodeNodeObject(struct soap *soap, enum resqml20__SubnodeNodeObject *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__SubnodeNodeObject
	*a = SOAP_DEFAULT_resqml20__SubnodeNodeObject;
#else
	*a = (enum resqml20__SubnodeNodeObject)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SubnodeNodeObject(struct soap*, const char*, int, const enum resqml20__SubnodeNodeObject *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__SubnodeNodeObject2s(struct soap*, enum resqml20__SubnodeNodeObject);
SOAP_FMAC3 enum resqml20__SubnodeNodeObject * SOAP_FMAC4 soap_in_resqml20__SubnodeNodeObject(struct soap*, const char*, enum resqml20__SubnodeNodeObject *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__SubnodeNodeObject(struct soap*, const char*, enum resqml20__SubnodeNodeObject *);

SOAP_FMAC3 enum resqml20__SubnodeNodeObject * SOAP_FMAC4 soap_new_resqml20__SubnodeNodeObject(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__SubnodeNodeObject(struct soap*, const enum resqml20__SubnodeNodeObject *, const char*, const char*);

inline int soap_write_resqml20__SubnodeNodeObject(struct soap *soap, enum resqml20__SubnodeNodeObject const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__SubnodeNodeObject(soap, p, "resqml20:SubnodeNodeObject", "resqml20:SubnodeNodeObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SubnodeNodeObject(struct soap *soap, const char *URL, enum resqml20__SubnodeNodeObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SubnodeNodeObject(soap, p, "resqml20:SubnodeNodeObject", "resqml20:SubnodeNodeObject") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SubnodeNodeObject(struct soap *soap, const char *URL, enum resqml20__SubnodeNodeObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SubnodeNodeObject(soap, p, "resqml20:SubnodeNodeObject", "resqml20:SubnodeNodeObject") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SubnodeNodeObject(struct soap *soap, const char *URL, enum resqml20__SubnodeNodeObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__SubnodeNodeObject(soap, p, "resqml20:SubnodeNodeObject", "resqml20:SubnodeNodeObject") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__SubnodeNodeObject * SOAP_FMAC4 soap_get_resqml20__SubnodeNodeObject(struct soap*, enum resqml20__SubnodeNodeObject *, const char*, const char*);

inline int soap_read_resqml20__SubnodeNodeObject(struct soap *soap, enum resqml20__SubnodeNodeObject *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SubnodeNodeObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SubnodeNodeObject(struct soap *soap, const char *URL, enum resqml20__SubnodeNodeObject *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SubnodeNodeObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SubnodeNodeObject(struct soap *soap, enum resqml20__SubnodeNodeObject *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SubnodeNodeObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements_DEFINED

inline void soap_default_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml20__UnstructuredColumnLayerIndexableElements *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__UnstructuredColumnLayerIndexableElements
	*a = SOAP_DEFAULT_resqml20__UnstructuredColumnLayerIndexableElements;
#else
	*a = (enum resqml20__UnstructuredColumnLayerIndexableElements)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, int, const enum resqml20__UnstructuredColumnLayerIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__UnstructuredColumnLayerIndexableElements2s(struct soap*, enum resqml20__UnstructuredColumnLayerIndexableElements);
SOAP_FMAC3 enum resqml20__UnstructuredColumnLayerIndexableElements * SOAP_FMAC4 soap_in_resqml20__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, enum resqml20__UnstructuredColumnLayerIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, enum resqml20__UnstructuredColumnLayerIndexableElements *);

SOAP_FMAC3 enum resqml20__UnstructuredColumnLayerIndexableElements * SOAP_FMAC4 soap_new_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__UnstructuredColumnLayerIndexableElements(struct soap*, const enum resqml20__UnstructuredColumnLayerIndexableElements *, const char*, const char*);

inline int soap_write_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml20__UnstructuredColumnLayerIndexableElements const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredColumnLayerIndexableElements(soap, p, "resqml20:UnstructuredColumnLayerIndexableElements", "resqml20:UnstructuredColumnLayerIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredColumnLayerIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredColumnLayerIndexableElements(soap, p, "resqml20:UnstructuredColumnLayerIndexableElements", "resqml20:UnstructuredColumnLayerIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredColumnLayerIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredColumnLayerIndexableElements(soap, p, "resqml20:UnstructuredColumnLayerIndexableElements", "resqml20:UnstructuredColumnLayerIndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredColumnLayerIndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__UnstructuredColumnLayerIndexableElements(soap, p, "resqml20:UnstructuredColumnLayerIndexableElements", "resqml20:UnstructuredColumnLayerIndexableElements") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__UnstructuredColumnLayerIndexableElements * SOAP_FMAC4 soap_get_resqml20__UnstructuredColumnLayerIndexableElements(struct soap*, enum resqml20__UnstructuredColumnLayerIndexableElements *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml20__UnstructuredColumnLayerIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredColumnLayerIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, const char *URL, enum resqml20__UnstructuredColumnLayerIndexableElements *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnLayerIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml20__UnstructuredColumnLayerIndexableElements *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnLayerIndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements_DEFINED

inline void soap_default_resqml20__IndexableElements(struct soap *soap, enum resqml20__IndexableElements *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__IndexableElements
	*a = SOAP_DEFAULT_resqml20__IndexableElements;
#else
	*a = (enum resqml20__IndexableElements)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IndexableElements(struct soap*, const char*, int, const enum resqml20__IndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__IndexableElements2s(struct soap*, enum resqml20__IndexableElements);
SOAP_FMAC3 enum resqml20__IndexableElements * SOAP_FMAC4 soap_in_resqml20__IndexableElements(struct soap*, const char*, enum resqml20__IndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__IndexableElements(struct soap*, const char*, enum resqml20__IndexableElements *);

SOAP_FMAC3 enum resqml20__IndexableElements * SOAP_FMAC4 soap_new_resqml20__IndexableElements(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__IndexableElements(struct soap*, const enum resqml20__IndexableElements *, const char*, const char*);

inline int soap_write_resqml20__IndexableElements(struct soap *soap, enum resqml20__IndexableElements const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__IndexableElements(soap, p, "resqml20:IndexableElements", "resqml20:IndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IndexableElements(struct soap *soap, const char *URL, enum resqml20__IndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IndexableElements(soap, p, "resqml20:IndexableElements", "resqml20:IndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IndexableElements(struct soap *soap, const char *URL, enum resqml20__IndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IndexableElements(soap, p, "resqml20:IndexableElements", "resqml20:IndexableElements") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IndexableElements(struct soap *soap, const char *URL, enum resqml20__IndexableElements const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IndexableElements(soap, p, "resqml20:IndexableElements", "resqml20:IndexableElements") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__IndexableElements * SOAP_FMAC4 soap_get_resqml20__IndexableElements(struct soap*, enum resqml20__IndexableElements *, const char*, const char*);

inline int soap_read_resqml20__IndexableElements(struct soap *soap, enum resqml20__IndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IndexableElements(struct soap *soap, const char *URL, enum resqml20__IndexableElements *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IndexableElements(struct soap *soap, enum resqml20__IndexableElements *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IndexableElements(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind_DEFINED

inline void soap_default_resqml20__IdentityKind(struct soap *soap, enum resqml20__IdentityKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__IdentityKind
	*a = SOAP_DEFAULT_resqml20__IdentityKind;
#else
	*a = (enum resqml20__IdentityKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IdentityKind(struct soap*, const char*, int, const enum resqml20__IdentityKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__IdentityKind2s(struct soap*, enum resqml20__IdentityKind);
SOAP_FMAC3 enum resqml20__IdentityKind * SOAP_FMAC4 soap_in_resqml20__IdentityKind(struct soap*, const char*, enum resqml20__IdentityKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__IdentityKind(struct soap*, const char*, enum resqml20__IdentityKind *);

SOAP_FMAC3 enum resqml20__IdentityKind * SOAP_FMAC4 soap_new_resqml20__IdentityKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__IdentityKind(struct soap*, const enum resqml20__IdentityKind *, const char*, const char*);

inline int soap_write_resqml20__IdentityKind(struct soap *soap, enum resqml20__IdentityKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__IdentityKind(soap, p, "resqml20:IdentityKind", "resqml20:IdentityKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IdentityKind(struct soap *soap, const char *URL, enum resqml20__IdentityKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IdentityKind(soap, p, "resqml20:IdentityKind", "resqml20:IdentityKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IdentityKind(struct soap *soap, const char *URL, enum resqml20__IdentityKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IdentityKind(soap, p, "resqml20:IdentityKind", "resqml20:IdentityKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IdentityKind(struct soap *soap, const char *URL, enum resqml20__IdentityKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__IdentityKind(soap, p, "resqml20:IdentityKind", "resqml20:IdentityKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__IdentityKind * SOAP_FMAC4 soap_get_resqml20__IdentityKind(struct soap*, enum resqml20__IdentityKind *, const char*, const char*);

inline int soap_read_resqml20__IdentityKind(struct soap *soap, enum resqml20__IdentityKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IdentityKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IdentityKind(struct soap *soap, const char *URL, enum resqml20__IdentityKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IdentityKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IdentityKind(struct soap *soap, enum resqml20__IdentityKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IdentityKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom_DEFINED

inline void soap_default_resqml20__ResqmlUom(struct soap *soap, enum resqml20__ResqmlUom *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__ResqmlUom
	*a = SOAP_DEFAULT_resqml20__ResqmlUom;
#else
	*a = (enum resqml20__ResqmlUom)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ResqmlUom(struct soap*, const char*, int, const enum resqml20__ResqmlUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__ResqmlUom2s(struct soap*, enum resqml20__ResqmlUom);
SOAP_FMAC3 enum resqml20__ResqmlUom * SOAP_FMAC4 soap_in_resqml20__ResqmlUom(struct soap*, const char*, enum resqml20__ResqmlUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__ResqmlUom(struct soap*, const char*, enum resqml20__ResqmlUom *);

SOAP_FMAC3 enum resqml20__ResqmlUom * SOAP_FMAC4 soap_new_resqml20__ResqmlUom(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__ResqmlUom(struct soap*, const enum resqml20__ResqmlUom *, const char*, const char*);

inline int soap_write_resqml20__ResqmlUom(struct soap *soap, enum resqml20__ResqmlUom const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlUom(soap, p, "resqml20:ResqmlUom", "resqml20:ResqmlUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ResqmlUom(struct soap *soap, const char *URL, enum resqml20__ResqmlUom const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlUom(soap, p, "resqml20:ResqmlUom", "resqml20:ResqmlUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ResqmlUom(struct soap *soap, const char *URL, enum resqml20__ResqmlUom const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlUom(soap, p, "resqml20:ResqmlUom", "resqml20:ResqmlUom") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ResqmlUom(struct soap *soap, const char *URL, enum resqml20__ResqmlUom const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__ResqmlUom(soap, p, "resqml20:ResqmlUom", "resqml20:ResqmlUom") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__ResqmlUom * SOAP_FMAC4 soap_get_resqml20__ResqmlUom(struct soap*, enum resqml20__ResqmlUom *, const char*, const char*);

inline int soap_read_resqml20__ResqmlUom(struct soap *soap, enum resqml20__ResqmlUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ResqmlUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ResqmlUom(struct soap *soap, const char *URL, enum resqml20__ResqmlUom *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ResqmlUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ResqmlUom(struct soap *soap, enum resqml20__ResqmlUom *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ResqmlUom(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet_DEFINED

inline void soap_default_resqml20__Facet(struct soap *soap, enum resqml20__Facet *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__Facet
	*a = SOAP_DEFAULT_resqml20__Facet;
#else
	*a = (enum resqml20__Facet)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Facet(struct soap*, const char*, int, const enum resqml20__Facet *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__Facet2s(struct soap*, enum resqml20__Facet);
SOAP_FMAC3 enum resqml20__Facet * SOAP_FMAC4 soap_in_resqml20__Facet(struct soap*, const char*, enum resqml20__Facet *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__Facet(struct soap*, const char*, enum resqml20__Facet *);

SOAP_FMAC3 enum resqml20__Facet * SOAP_FMAC4 soap_new_resqml20__Facet(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__Facet(struct soap*, const enum resqml20__Facet *, const char*, const char*);

inline int soap_write_resqml20__Facet(struct soap *soap, enum resqml20__Facet const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__Facet(soap, p, "resqml20:Facet", "resqml20:Facet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Facet(struct soap *soap, const char *URL, enum resqml20__Facet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Facet(soap, p, "resqml20:Facet", "resqml20:Facet") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Facet(struct soap *soap, const char *URL, enum resqml20__Facet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Facet(soap, p, "resqml20:Facet", "resqml20:Facet") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Facet(struct soap *soap, const char *URL, enum resqml20__Facet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__Facet(soap, p, "resqml20:Facet", "resqml20:Facet") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__Facet * SOAP_FMAC4 soap_get_resqml20__Facet(struct soap*, enum resqml20__Facet *, const char*, const char*);

inline int soap_read_resqml20__Facet(struct soap *soap, enum resqml20__Facet *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Facet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Facet(struct soap *soap, const char *URL, enum resqml20__Facet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Facet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Facet(struct soap *soap, enum resqml20__Facet *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Facet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind_DEFINED

inline void soap_default_resqml20__TimeSetKind(struct soap *soap, enum resqml20__TimeSetKind *a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_resqml20__TimeSetKind
	*a = SOAP_DEFAULT_resqml20__TimeSetKind;
#else
	*a = (enum resqml20__TimeSetKind)0;
#endif
}
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeSetKind(struct soap*, const char*, int, const enum resqml20__TimeSetKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml20__TimeSetKind2s(struct soap*, enum resqml20__TimeSetKind);
SOAP_FMAC3 enum resqml20__TimeSetKind * SOAP_FMAC4 soap_in_resqml20__TimeSetKind(struct soap*, const char*, enum resqml20__TimeSetKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml20__TimeSetKind(struct soap*, const char*, enum resqml20__TimeSetKind *);

SOAP_FMAC3 enum resqml20__TimeSetKind * SOAP_FMAC4 soap_new_resqml20__TimeSetKind(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml20__TimeSetKind(struct soap*, const enum resqml20__TimeSetKind *, const char*, const char*);

inline int soap_write_resqml20__TimeSetKind(struct soap *soap, enum resqml20__TimeSetKind const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_resqml20__TimeSetKind(soap, p, "resqml20:TimeSetKind", "resqml20:TimeSetKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeSetKind(struct soap *soap, const char *URL, enum resqml20__TimeSetKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TimeSetKind(soap, p, "resqml20:TimeSetKind", "resqml20:TimeSetKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeSetKind(struct soap *soap, const char *URL, enum resqml20__TimeSetKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TimeSetKind(soap, p, "resqml20:TimeSetKind", "resqml20:TimeSetKind") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeSetKind(struct soap *soap, const char *URL, enum resqml20__TimeSetKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_resqml20__TimeSetKind(soap, p, "resqml20:TimeSetKind", "resqml20:TimeSetKind") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml20__TimeSetKind * SOAP_FMAC4 soap_get_resqml20__TimeSetKind(struct soap*, enum resqml20__TimeSetKind *, const char*, const char*);

inline int soap_read_resqml20__TimeSetKind(struct soap *soap, enum resqml20__TimeSetKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeSetKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeSetKind(struct soap *soap, const char *URL, enum resqml20__TimeSetKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeSetKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeSetKind(struct soap *soap, enum resqml20__TimeSetKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeSetKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* _ptm__standardEnergisticsPropertyTypeSet is a typedef synonym of ptm__standardEnergisticsPropertyTypeSet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet_DEFINED

#define soap_default__ptm__standardEnergisticsPropertyTypeSet(soap, a) (a)->ptm__standardEnergisticsPropertyTypeSet::soap_default(soap)


#define soap_serialize__ptm__standardEnergisticsPropertyTypeSet(soap, a) (a)->soap_serialize(soap)


#define soap__ptm__standardEnergisticsPropertyTypeSet2s soap_ptm__standardEnergisticsPropertyTypeSet2s


#define soap_out__ptm__standardEnergisticsPropertyTypeSet soap_out_ptm__standardEnergisticsPropertyTypeSet


#define soap_s2_ptm__standardEnergisticsPropertyTypeSet soap_s2ptm__standardEnergisticsPropertyTypeSet


#define soap_in__ptm__standardEnergisticsPropertyTypeSet soap_in_ptm__standardEnergisticsPropertyTypeSet


#define soap_instantiate__ptm__standardEnergisticsPropertyTypeSet soap_instantiate_ptm__standardEnergisticsPropertyTypeSet


#define soap_new__ptm__standardEnergisticsPropertyTypeSet soap_new_ptm__standardEnergisticsPropertyTypeSet


#define soap_new_req__ptm__standardEnergisticsPropertyTypeSet soap_new_req_ptm__standardEnergisticsPropertyTypeSet


#define soap_new_set__ptm__standardEnergisticsPropertyTypeSet soap_new_set_ptm__standardEnergisticsPropertyTypeSet

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ptm__standardEnergisticsPropertyTypeSet(struct soap*, const ptm__standardEnergisticsPropertyTypeSet *, const char*, const char*);

inline int soap_write__ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__ptm__standardEnergisticsPropertyTypeSet soap_get_ptm__standardEnergisticsPropertyTypeSet


#define soap_read__ptm__standardEnergisticsPropertyTypeSet soap_read_ptm__standardEnergisticsPropertyTypeSet


#define soap_GET__ptm__standardEnergisticsPropertyTypeSet soap_GET_ptm__standardEnergisticsPropertyTypeSet


#define soap_POST_recv__ptm__standardEnergisticsPropertyTypeSet soap_POST_recv_ptm__standardEnergisticsPropertyTypeSet

#endif
/* _eml20__AbstractContextualObject is a typedef synonym of eml20__AbstractObject */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject_DEFINED

#define soap_default__eml20__AbstractContextualObject(soap, a) (a)->eml20__AbstractObject::soap_default(soap)


#define soap_serialize__eml20__AbstractContextualObject(soap, a) (a)->soap_serialize(soap)


#define soap__eml20__AbstractContextualObject2s soap_eml20__AbstractObject2s


#define soap_out__eml20__AbstractContextualObject soap_out_eml20__AbstractObject


#define soap_s2_eml20__AbstractContextualObject soap_s2eml20__AbstractObject


#define soap_in__eml20__AbstractContextualObject soap_in_eml20__AbstractObject


#define soap_instantiate__eml20__AbstractContextualObject soap_instantiate_eml20__AbstractObject


#define soap_new__eml20__AbstractContextualObject soap_new_eml20__AbstractObject


#define soap_new_req__eml20__AbstractContextualObject soap_new_req_eml20__AbstractObject


#define soap_new_set__eml20__AbstractContextualObject soap_new_set_eml20__AbstractObject

SOAP_FMAC3 int SOAP_FMAC4 soap_put__eml20__AbstractContextualObject(struct soap*, const eml20__AbstractObject *, const char*, const char*);

inline int soap_write__eml20__AbstractContextualObject(struct soap *soap, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractContextualObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__eml20__AbstractContextualObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractContextualObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__eml20__AbstractContextualObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractContextualObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__eml20__AbstractContextualObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractContextualObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__eml20__AbstractContextualObject soap_get_eml20__AbstractObject


#define soap_read__eml20__AbstractContextualObject soap_read_eml20__AbstractObject


#define soap_GET__eml20__AbstractContextualObject soap_GET_eml20__AbstractObject


#define soap_POST_recv__eml20__AbstractContextualObject soap_POST_recv_eml20__AbstractObject

#endif
/* _eml20__AbstractDataObject is a typedef synonym of eml20__AbstractObject */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject_DEFINED

#define soap_default__eml20__AbstractDataObject(soap, a) (a)->eml20__AbstractObject::soap_default(soap)


#define soap_serialize__eml20__AbstractDataObject(soap, a) (a)->soap_serialize(soap)


#define soap__eml20__AbstractDataObject2s soap_eml20__AbstractObject2s


#define soap_out__eml20__AbstractDataObject soap_out_eml20__AbstractObject


#define soap_s2_eml20__AbstractDataObject soap_s2eml20__AbstractObject


#define soap_in__eml20__AbstractDataObject soap_in_eml20__AbstractObject


#define soap_instantiate__eml20__AbstractDataObject soap_instantiate_eml20__AbstractObject


#define soap_new__eml20__AbstractDataObject soap_new_eml20__AbstractObject


#define soap_new_req__eml20__AbstractDataObject soap_new_req_eml20__AbstractObject


#define soap_new_set__eml20__AbstractDataObject soap_new_set_eml20__AbstractObject

SOAP_FMAC3 int SOAP_FMAC4 soap_put__eml20__AbstractDataObject(struct soap*, const eml20__AbstractObject *, const char*, const char*);

inline int soap_write__eml20__AbstractDataObject(struct soap *soap, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__eml20__AbstractDataObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__eml20__AbstractDataObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__eml20__AbstractDataObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__eml20__AbstractDataObject soap_get_eml20__AbstractObject


#define soap_read__eml20__AbstractDataObject soap_read_eml20__AbstractObject


#define soap_GET__eml20__AbstractDataObject soap_GET_eml20__AbstractObject


#define soap_POST_recv__eml20__AbstractDataObject soap_POST_recv_eml20__AbstractObject

#endif
/* _eml20__EpcExternalPartReference is a typedef synonym of eml20__obj_USCOREEpcExternalPartReference */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference_DEFINED

#define soap_default__eml20__EpcExternalPartReference(soap, a) (a)->eml20__obj_USCOREEpcExternalPartReference::soap_default(soap)


#define soap_serialize__eml20__EpcExternalPartReference(soap, a) (a)->soap_serialize(soap)


#define soap__eml20__EpcExternalPartReference2s soap_eml20__obj_USCOREEpcExternalPartReference2s


#define soap_out__eml20__EpcExternalPartReference soap_out_eml20__obj_USCOREEpcExternalPartReference


#define soap_s2_eml20__EpcExternalPartReference soap_s2eml20__obj_USCOREEpcExternalPartReference


#define soap_in__eml20__EpcExternalPartReference soap_in_eml20__obj_USCOREEpcExternalPartReference


#define soap_instantiate__eml20__EpcExternalPartReference soap_instantiate_eml20__obj_USCOREEpcExternalPartReference


#define soap_new__eml20__EpcExternalPartReference soap_new_eml20__obj_USCOREEpcExternalPartReference


#define soap_new_req__eml20__EpcExternalPartReference soap_new_req_eml20__obj_USCOREEpcExternalPartReference


#define soap_new_set__eml20__EpcExternalPartReference soap_new_set_eml20__obj_USCOREEpcExternalPartReference

SOAP_FMAC3 int SOAP_FMAC4 soap_put__eml20__EpcExternalPartReference(struct soap*, const eml20__obj_USCOREEpcExternalPartReference *, const char*, const char*);

inline int soap_write__eml20__EpcExternalPartReference(struct soap *soap, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__eml20__EpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__eml20__EpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__eml20__EpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__eml20__EpcExternalPartReference soap_get_eml20__obj_USCOREEpcExternalPartReference


#define soap_read__eml20__EpcExternalPartReference soap_read_eml20__obj_USCOREEpcExternalPartReference


#define soap_GET__eml20__EpcExternalPartReference soap_GET_eml20__obj_USCOREEpcExternalPartReference


#define soap_POST_recv__eml20__EpcExternalPartReference soap_POST_recv_eml20__obj_USCOREEpcExternalPartReference

#endif
/* _resqml20__StringTableLookup is a typedef synonym of resqml20__obj_USCOREStringTableLookup */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup_DEFINED

#define soap_default__resqml20__StringTableLookup(soap, a) (a)->resqml20__obj_USCOREStringTableLookup::soap_default(soap)


#define soap_serialize__resqml20__StringTableLookup(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StringTableLookup2s soap_resqml20__obj_USCOREStringTableLookup2s


#define soap_out__resqml20__StringTableLookup soap_out_resqml20__obj_USCOREStringTableLookup


#define soap_s2_resqml20__StringTableLookup soap_s2resqml20__obj_USCOREStringTableLookup


#define soap_in__resqml20__StringTableLookup soap_in_resqml20__obj_USCOREStringTableLookup


#define soap_instantiate__resqml20__StringTableLookup soap_instantiate_resqml20__obj_USCOREStringTableLookup


#define soap_new__resqml20__StringTableLookup soap_new_resqml20__obj_USCOREStringTableLookup


#define soap_new_req__resqml20__StringTableLookup soap_new_req_resqml20__obj_USCOREStringTableLookup


#define soap_new_set__resqml20__StringTableLookup soap_new_set_resqml20__obj_USCOREStringTableLookup

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StringTableLookup(struct soap*, const resqml20__obj_USCOREStringTableLookup *, const char*, const char*);

inline int soap_write__resqml20__StringTableLookup(struct soap *soap, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StringTableLookup soap_get_resqml20__obj_USCOREStringTableLookup


#define soap_read__resqml20__StringTableLookup soap_read_resqml20__obj_USCOREStringTableLookup


#define soap_GET__resqml20__StringTableLookup soap_GET_resqml20__obj_USCOREStringTableLookup


#define soap_POST_recv__resqml20__StringTableLookup soap_POST_recv_resqml20__obj_USCOREStringTableLookup

#endif
/* _resqml20__PropertySet is a typedef synonym of resqml20__obj_USCOREPropertySet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet_DEFINED

#define soap_default__resqml20__PropertySet(soap, a) (a)->resqml20__obj_USCOREPropertySet::soap_default(soap)


#define soap_serialize__resqml20__PropertySet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PropertySet2s soap_resqml20__obj_USCOREPropertySet2s


#define soap_out__resqml20__PropertySet soap_out_resqml20__obj_USCOREPropertySet


#define soap_s2_resqml20__PropertySet soap_s2resqml20__obj_USCOREPropertySet


#define soap_in__resqml20__PropertySet soap_in_resqml20__obj_USCOREPropertySet


#define soap_instantiate__resqml20__PropertySet soap_instantiate_resqml20__obj_USCOREPropertySet


#define soap_new__resqml20__PropertySet soap_new_resqml20__obj_USCOREPropertySet


#define soap_new_req__resqml20__PropertySet soap_new_req_resqml20__obj_USCOREPropertySet


#define soap_new_set__resqml20__PropertySet soap_new_set_resqml20__obj_USCOREPropertySet

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PropertySet(struct soap*, const resqml20__obj_USCOREPropertySet *, const char*, const char*);

inline int soap_write__resqml20__PropertySet(struct soap *soap, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PropertySet soap_get_resqml20__obj_USCOREPropertySet


#define soap_read__resqml20__PropertySet soap_read_resqml20__obj_USCOREPropertySet


#define soap_GET__resqml20__PropertySet soap_GET_resqml20__obj_USCOREPropertySet


#define soap_POST_recv__resqml20__PropertySet soap_POST_recv_resqml20__obj_USCOREPropertySet

#endif
/* _resqml20__PropertyKind is a typedef synonym of resqml20__obj_USCOREPropertyKind */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind_DEFINED

#define soap_default__resqml20__PropertyKind(soap, a) (a)->resqml20__obj_USCOREPropertyKind::soap_default(soap)


#define soap_serialize__resqml20__PropertyKind(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PropertyKind2s soap_resqml20__obj_USCOREPropertyKind2s


#define soap_out__resqml20__PropertyKind soap_out_resqml20__obj_USCOREPropertyKind


#define soap_s2_resqml20__PropertyKind soap_s2resqml20__obj_USCOREPropertyKind


#define soap_in__resqml20__PropertyKind soap_in_resqml20__obj_USCOREPropertyKind


#define soap_instantiate__resqml20__PropertyKind soap_instantiate_resqml20__obj_USCOREPropertyKind


#define soap_new__resqml20__PropertyKind soap_new_resqml20__obj_USCOREPropertyKind


#define soap_new_req__resqml20__PropertyKind soap_new_req_resqml20__obj_USCOREPropertyKind


#define soap_new_set__resqml20__PropertyKind soap_new_set_resqml20__obj_USCOREPropertyKind

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PropertyKind(struct soap*, const resqml20__obj_USCOREPropertyKind *, const char*, const char*);

inline int soap_write__resqml20__PropertyKind(struct soap *soap, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PropertyKind soap_get_resqml20__obj_USCOREPropertyKind


#define soap_read__resqml20__PropertyKind soap_read_resqml20__obj_USCOREPropertyKind


#define soap_GET__resqml20__PropertyKind soap_GET_resqml20__obj_USCOREPropertyKind


#define soap_POST_recv__resqml20__PropertyKind soap_POST_recv_resqml20__obj_USCOREPropertyKind

#endif
/* _resqml20__PointsProperty is a typedef synonym of resqml20__obj_USCOREPointsProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty_DEFINED

#define soap_default__resqml20__PointsProperty(soap, a) (a)->resqml20__obj_USCOREPointsProperty::soap_default(soap)


#define soap_serialize__resqml20__PointsProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PointsProperty2s soap_resqml20__obj_USCOREPointsProperty2s


#define soap_out__resqml20__PointsProperty soap_out_resqml20__obj_USCOREPointsProperty


#define soap_s2_resqml20__PointsProperty soap_s2resqml20__obj_USCOREPointsProperty


#define soap_in__resqml20__PointsProperty soap_in_resqml20__obj_USCOREPointsProperty


#define soap_instantiate__resqml20__PointsProperty soap_instantiate_resqml20__obj_USCOREPointsProperty


#define soap_new__resqml20__PointsProperty soap_new_resqml20__obj_USCOREPointsProperty


#define soap_new_req__resqml20__PointsProperty soap_new_req_resqml20__obj_USCOREPointsProperty


#define soap_new_set__resqml20__PointsProperty soap_new_set_resqml20__obj_USCOREPointsProperty

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PointsProperty(struct soap*, const resqml20__obj_USCOREPointsProperty *, const char*, const char*);

inline int soap_write__resqml20__PointsProperty(struct soap *soap, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PointsProperty soap_get_resqml20__obj_USCOREPointsProperty


#define soap_read__resqml20__PointsProperty soap_read_resqml20__obj_USCOREPointsProperty


#define soap_GET__resqml20__PointsProperty soap_GET_resqml20__obj_USCOREPointsProperty


#define soap_POST_recv__resqml20__PointsProperty soap_POST_recv_resqml20__obj_USCOREPointsProperty

#endif
/* _resqml20__DoubleTableLookup is a typedef synonym of resqml20__obj_USCOREDoubleTableLookup */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup_DEFINED

#define soap_default__resqml20__DoubleTableLookup(soap, a) (a)->resqml20__obj_USCOREDoubleTableLookup::soap_default(soap)


#define soap_serialize__resqml20__DoubleTableLookup(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__DoubleTableLookup2s soap_resqml20__obj_USCOREDoubleTableLookup2s


#define soap_out__resqml20__DoubleTableLookup soap_out_resqml20__obj_USCOREDoubleTableLookup


#define soap_s2_resqml20__DoubleTableLookup soap_s2resqml20__obj_USCOREDoubleTableLookup


#define soap_in__resqml20__DoubleTableLookup soap_in_resqml20__obj_USCOREDoubleTableLookup


#define soap_instantiate__resqml20__DoubleTableLookup soap_instantiate_resqml20__obj_USCOREDoubleTableLookup


#define soap_new__resqml20__DoubleTableLookup soap_new_resqml20__obj_USCOREDoubleTableLookup


#define soap_new_req__resqml20__DoubleTableLookup soap_new_req_resqml20__obj_USCOREDoubleTableLookup


#define soap_new_set__resqml20__DoubleTableLookup soap_new_set_resqml20__obj_USCOREDoubleTableLookup

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__DoubleTableLookup(struct soap*, const resqml20__obj_USCOREDoubleTableLookup *, const char*, const char*);

inline int soap_write__resqml20__DoubleTableLookup(struct soap *soap, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__DoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__DoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__DoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__DoubleTableLookup soap_get_resqml20__obj_USCOREDoubleTableLookup


#define soap_read__resqml20__DoubleTableLookup soap_read_resqml20__obj_USCOREDoubleTableLookup


#define soap_GET__resqml20__DoubleTableLookup soap_GET_resqml20__obj_USCOREDoubleTableLookup


#define soap_POST_recv__resqml20__DoubleTableLookup soap_POST_recv_resqml20__obj_USCOREDoubleTableLookup

#endif
/* _resqml20__DiscreteProperty is a typedef synonym of resqml20__obj_USCOREDiscreteProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty_DEFINED

#define soap_default__resqml20__DiscreteProperty(soap, a) (a)->resqml20__obj_USCOREDiscreteProperty::soap_default(soap)


#define soap_serialize__resqml20__DiscreteProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__DiscreteProperty2s soap_resqml20__obj_USCOREDiscreteProperty2s


#define soap_out__resqml20__DiscreteProperty soap_out_resqml20__obj_USCOREDiscreteProperty


#define soap_s2_resqml20__DiscreteProperty soap_s2resqml20__obj_USCOREDiscreteProperty


#define soap_in__resqml20__DiscreteProperty soap_in_resqml20__obj_USCOREDiscreteProperty


#define soap_instantiate__resqml20__DiscreteProperty soap_instantiate_resqml20__obj_USCOREDiscreteProperty


#define soap_new__resqml20__DiscreteProperty soap_new_resqml20__obj_USCOREDiscreteProperty


#define soap_new_req__resqml20__DiscreteProperty soap_new_req_resqml20__obj_USCOREDiscreteProperty


#define soap_new_set__resqml20__DiscreteProperty soap_new_set_resqml20__obj_USCOREDiscreteProperty

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__DiscreteProperty(struct soap*, const resqml20__obj_USCOREDiscreteProperty *, const char*, const char*);

inline int soap_write__resqml20__DiscreteProperty(struct soap *soap, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__DiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__DiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__DiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__DiscreteProperty soap_get_resqml20__obj_USCOREDiscreteProperty


#define soap_read__resqml20__DiscreteProperty soap_read_resqml20__obj_USCOREDiscreteProperty


#define soap_GET__resqml20__DiscreteProperty soap_GET_resqml20__obj_USCOREDiscreteProperty


#define soap_POST_recv__resqml20__DiscreteProperty soap_POST_recv_resqml20__obj_USCOREDiscreteProperty

#endif
/* _resqml20__ContinuousProperty is a typedef synonym of resqml20__obj_USCOREContinuousProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty_DEFINED

#define soap_default__resqml20__ContinuousProperty(soap, a) (a)->resqml20__obj_USCOREContinuousProperty::soap_default(soap)


#define soap_serialize__resqml20__ContinuousProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__ContinuousProperty2s soap_resqml20__obj_USCOREContinuousProperty2s


#define soap_out__resqml20__ContinuousProperty soap_out_resqml20__obj_USCOREContinuousProperty


#define soap_s2_resqml20__ContinuousProperty soap_s2resqml20__obj_USCOREContinuousProperty


#define soap_in__resqml20__ContinuousProperty soap_in_resqml20__obj_USCOREContinuousProperty


#define soap_instantiate__resqml20__ContinuousProperty soap_instantiate_resqml20__obj_USCOREContinuousProperty


#define soap_new__resqml20__ContinuousProperty soap_new_resqml20__obj_USCOREContinuousProperty


#define soap_new_req__resqml20__ContinuousProperty soap_new_req_resqml20__obj_USCOREContinuousProperty


#define soap_new_set__resqml20__ContinuousProperty soap_new_set_resqml20__obj_USCOREContinuousProperty

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__ContinuousProperty(struct soap*, const resqml20__obj_USCOREContinuousProperty *, const char*, const char*);

inline int soap_write__resqml20__ContinuousProperty(struct soap *soap, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__ContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__ContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__ContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__ContinuousProperty soap_get_resqml20__obj_USCOREContinuousProperty


#define soap_read__resqml20__ContinuousProperty soap_read_resqml20__obj_USCOREContinuousProperty


#define soap_GET__resqml20__ContinuousProperty soap_GET_resqml20__obj_USCOREContinuousProperty


#define soap_POST_recv__resqml20__ContinuousProperty soap_POST_recv_resqml20__obj_USCOREContinuousProperty

#endif
/* _resqml20__CommentProperty is a typedef synonym of resqml20__obj_USCORECommentProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty_DEFINED

#define soap_default__resqml20__CommentProperty(soap, a) (a)->resqml20__obj_USCORECommentProperty::soap_default(soap)


#define soap_serialize__resqml20__CommentProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__CommentProperty2s soap_resqml20__obj_USCORECommentProperty2s


#define soap_out__resqml20__CommentProperty soap_out_resqml20__obj_USCORECommentProperty


#define soap_s2_resqml20__CommentProperty soap_s2resqml20__obj_USCORECommentProperty


#define soap_in__resqml20__CommentProperty soap_in_resqml20__obj_USCORECommentProperty


#define soap_instantiate__resqml20__CommentProperty soap_instantiate_resqml20__obj_USCORECommentProperty


#define soap_new__resqml20__CommentProperty soap_new_resqml20__obj_USCORECommentProperty


#define soap_new_req__resqml20__CommentProperty soap_new_req_resqml20__obj_USCORECommentProperty


#define soap_new_set__resqml20__CommentProperty soap_new_set_resqml20__obj_USCORECommentProperty

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__CommentProperty(struct soap*, const resqml20__obj_USCORECommentProperty *, const char*, const char*);

inline int soap_write__resqml20__CommentProperty(struct soap *soap, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__CommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__CommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__CommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__CommentProperty soap_get_resqml20__obj_USCORECommentProperty


#define soap_read__resqml20__CommentProperty soap_read_resqml20__obj_USCORECommentProperty


#define soap_GET__resqml20__CommentProperty soap_GET_resqml20__obj_USCORECommentProperty


#define soap_POST_recv__resqml20__CommentProperty soap_POST_recv_resqml20__obj_USCORECommentProperty

#endif
/* _resqml20__CategoricalProperty is a typedef synonym of resqml20__obj_USCORECategoricalProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty_DEFINED

#define soap_default__resqml20__CategoricalProperty(soap, a) (a)->resqml20__obj_USCORECategoricalProperty::soap_default(soap)


#define soap_serialize__resqml20__CategoricalProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__CategoricalProperty2s soap_resqml20__obj_USCORECategoricalProperty2s


#define soap_out__resqml20__CategoricalProperty soap_out_resqml20__obj_USCORECategoricalProperty


#define soap_s2_resqml20__CategoricalProperty soap_s2resqml20__obj_USCORECategoricalProperty


#define soap_in__resqml20__CategoricalProperty soap_in_resqml20__obj_USCORECategoricalProperty


#define soap_instantiate__resqml20__CategoricalProperty soap_instantiate_resqml20__obj_USCORECategoricalProperty


#define soap_new__resqml20__CategoricalProperty soap_new_resqml20__obj_USCORECategoricalProperty


#define soap_new_req__resqml20__CategoricalProperty soap_new_req_resqml20__obj_USCORECategoricalProperty


#define soap_new_set__resqml20__CategoricalProperty soap_new_set_resqml20__obj_USCORECategoricalProperty

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__CategoricalProperty(struct soap*, const resqml20__obj_USCORECategoricalProperty *, const char*, const char*);

inline int soap_write__resqml20__CategoricalProperty(struct soap *soap, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__CategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__CategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__CategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__CategoricalProperty soap_get_resqml20__obj_USCORECategoricalProperty


#define soap_read__resqml20__CategoricalProperty soap_read_resqml20__obj_USCORECategoricalProperty


#define soap_GET__resqml20__CategoricalProperty soap_GET_resqml20__obj_USCORECategoricalProperty


#define soap_POST_recv__resqml20__CategoricalProperty soap_POST_recv_resqml20__obj_USCORECategoricalProperty

#endif
/* _resqml20__WellboreTrajectoryRepresentation is a typedef synonym of resqml20__obj_USCOREWellboreTrajectoryRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation_DEFINED

#define soap_default__resqml20__WellboreTrajectoryRepresentation(soap, a) (a)->resqml20__obj_USCOREWellboreTrajectoryRepresentation::soap_default(soap)


#define soap_serialize__resqml20__WellboreTrajectoryRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__WellboreTrajectoryRepresentation2s soap_resqml20__obj_USCOREWellboreTrajectoryRepresentation2s


#define soap_out__resqml20__WellboreTrajectoryRepresentation soap_out_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_s2_resqml20__WellboreTrajectoryRepresentation soap_s2resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_in__resqml20__WellboreTrajectoryRepresentation soap_in_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_instantiate__resqml20__WellboreTrajectoryRepresentation soap_instantiate_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new__resqml20__WellboreTrajectoryRepresentation soap_new_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new_req__resqml20__WellboreTrajectoryRepresentation soap_new_req_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new_set__resqml20__WellboreTrajectoryRepresentation soap_new_set_resqml20__obj_USCOREWellboreTrajectoryRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__WellboreTrajectoryRepresentation(struct soap*, const resqml20__obj_USCOREWellboreTrajectoryRepresentation *, const char*, const char*);

inline int soap_write__resqml20__WellboreTrajectoryRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__WellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__WellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__WellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__WellboreTrajectoryRepresentation soap_get_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_read__resqml20__WellboreTrajectoryRepresentation soap_read_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_GET__resqml20__WellboreTrajectoryRepresentation soap_GET_resqml20__obj_USCOREWellboreTrajectoryRepresentation


#define soap_POST_recv__resqml20__WellboreTrajectoryRepresentation soap_POST_recv_resqml20__obj_USCOREWellboreTrajectoryRepresentation

#endif
/* _resqml20__WellboreMarkerFrameRepresentation is a typedef synonym of resqml20__obj_USCOREWellboreMarkerFrameRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation_DEFINED

#define soap_default__resqml20__WellboreMarkerFrameRepresentation(soap, a) (a)->resqml20__obj_USCOREWellboreMarkerFrameRepresentation::soap_default(soap)


#define soap_serialize__resqml20__WellboreMarkerFrameRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__WellboreMarkerFrameRepresentation2s soap_resqml20__obj_USCOREWellboreMarkerFrameRepresentation2s


#define soap_out__resqml20__WellboreMarkerFrameRepresentation soap_out_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_s2_resqml20__WellboreMarkerFrameRepresentation soap_s2resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_in__resqml20__WellboreMarkerFrameRepresentation soap_in_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_instantiate__resqml20__WellboreMarkerFrameRepresentation soap_instantiate_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new__resqml20__WellboreMarkerFrameRepresentation soap_new_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new_req__resqml20__WellboreMarkerFrameRepresentation soap_new_req_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new_set__resqml20__WellboreMarkerFrameRepresentation soap_new_set_resqml20__obj_USCOREWellboreMarkerFrameRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__WellboreMarkerFrameRepresentation(struct soap*, const resqml20__obj_USCOREWellboreMarkerFrameRepresentation *, const char*, const char*);

inline int soap_write__resqml20__WellboreMarkerFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__WellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__WellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__WellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__WellboreMarkerFrameRepresentation soap_get_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_read__resqml20__WellboreMarkerFrameRepresentation soap_read_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_GET__resqml20__WellboreMarkerFrameRepresentation soap_GET_resqml20__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_POST_recv__resqml20__WellboreMarkerFrameRepresentation soap_POST_recv_resqml20__obj_USCOREWellboreMarkerFrameRepresentation

#endif
/* _resqml20__WellboreFrameRepresentation is a typedef synonym of resqml20__obj_USCOREWellboreFrameRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation_DEFINED

#define soap_default__resqml20__WellboreFrameRepresentation(soap, a) (a)->resqml20__obj_USCOREWellboreFrameRepresentation::soap_default(soap)


#define soap_serialize__resqml20__WellboreFrameRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__WellboreFrameRepresentation2s soap_resqml20__obj_USCOREWellboreFrameRepresentation2s


#define soap_out__resqml20__WellboreFrameRepresentation soap_out_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_s2_resqml20__WellboreFrameRepresentation soap_s2resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_in__resqml20__WellboreFrameRepresentation soap_in_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_instantiate__resqml20__WellboreFrameRepresentation soap_instantiate_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_new__resqml20__WellboreFrameRepresentation soap_new_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_new_req__resqml20__WellboreFrameRepresentation soap_new_req_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_new_set__resqml20__WellboreFrameRepresentation soap_new_set_resqml20__obj_USCOREWellboreFrameRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__WellboreFrameRepresentation(struct soap*, const resqml20__obj_USCOREWellboreFrameRepresentation *, const char*, const char*);

inline int soap_write__resqml20__WellboreFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__WellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__WellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__WellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__WellboreFrameRepresentation soap_get_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_read__resqml20__WellboreFrameRepresentation soap_read_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_GET__resqml20__WellboreFrameRepresentation soap_GET_resqml20__obj_USCOREWellboreFrameRepresentation


#define soap_POST_recv__resqml20__WellboreFrameRepresentation soap_POST_recv_resqml20__obj_USCOREWellboreFrameRepresentation

#endif
/* _resqml20__MdDatum is a typedef synonym of resqml20__obj_USCOREMdDatum */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum_DEFINED

#define soap_default__resqml20__MdDatum(soap, a) (a)->resqml20__obj_USCOREMdDatum::soap_default(soap)


#define soap_serialize__resqml20__MdDatum(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__MdDatum2s soap_resqml20__obj_USCOREMdDatum2s


#define soap_out__resqml20__MdDatum soap_out_resqml20__obj_USCOREMdDatum


#define soap_s2_resqml20__MdDatum soap_s2resqml20__obj_USCOREMdDatum


#define soap_in__resqml20__MdDatum soap_in_resqml20__obj_USCOREMdDatum


#define soap_instantiate__resqml20__MdDatum soap_instantiate_resqml20__obj_USCOREMdDatum


#define soap_new__resqml20__MdDatum soap_new_resqml20__obj_USCOREMdDatum


#define soap_new_req__resqml20__MdDatum soap_new_req_resqml20__obj_USCOREMdDatum


#define soap_new_set__resqml20__MdDatum soap_new_set_resqml20__obj_USCOREMdDatum

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__MdDatum(struct soap*, const resqml20__obj_USCOREMdDatum *, const char*, const char*);

inline int soap_write__resqml20__MdDatum(struct soap *soap, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__MdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__MdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__MdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__MdDatum soap_get_resqml20__obj_USCOREMdDatum


#define soap_read__resqml20__MdDatum soap_read_resqml20__obj_USCOREMdDatum


#define soap_GET__resqml20__MdDatum soap_GET_resqml20__obj_USCOREMdDatum


#define soap_POST_recv__resqml20__MdDatum soap_POST_recv_resqml20__obj_USCOREMdDatum

#endif
/* _resqml20__DeviationSurveyRepresentation is a typedef synonym of resqml20__obj_USCOREDeviationSurveyRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation_DEFINED

#define soap_default__resqml20__DeviationSurveyRepresentation(soap, a) (a)->resqml20__obj_USCOREDeviationSurveyRepresentation::soap_default(soap)


#define soap_serialize__resqml20__DeviationSurveyRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__DeviationSurveyRepresentation2s soap_resqml20__obj_USCOREDeviationSurveyRepresentation2s


#define soap_out__resqml20__DeviationSurveyRepresentation soap_out_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_s2_resqml20__DeviationSurveyRepresentation soap_s2resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_in__resqml20__DeviationSurveyRepresentation soap_in_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_instantiate__resqml20__DeviationSurveyRepresentation soap_instantiate_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_new__resqml20__DeviationSurveyRepresentation soap_new_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_new_req__resqml20__DeviationSurveyRepresentation soap_new_req_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_new_set__resqml20__DeviationSurveyRepresentation soap_new_set_resqml20__obj_USCOREDeviationSurveyRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__DeviationSurveyRepresentation(struct soap*, const resqml20__obj_USCOREDeviationSurveyRepresentation *, const char*, const char*);

inline int soap_write__resqml20__DeviationSurveyRepresentation(struct soap *soap, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__DeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__DeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__DeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__DeviationSurveyRepresentation soap_get_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_read__resqml20__DeviationSurveyRepresentation soap_read_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_GET__resqml20__DeviationSurveyRepresentation soap_GET_resqml20__obj_USCOREDeviationSurveyRepresentation


#define soap_POST_recv__resqml20__DeviationSurveyRepresentation soap_POST_recv_resqml20__obj_USCOREDeviationSurveyRepresentation

#endif
/* _resqml20__BlockedWellboreRepresentation is a typedef synonym of resqml20__obj_USCOREBlockedWellboreRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation_DEFINED

#define soap_default__resqml20__BlockedWellboreRepresentation(soap, a) (a)->resqml20__obj_USCOREBlockedWellboreRepresentation::soap_default(soap)


#define soap_serialize__resqml20__BlockedWellboreRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__BlockedWellboreRepresentation2s soap_resqml20__obj_USCOREBlockedWellboreRepresentation2s


#define soap_out__resqml20__BlockedWellboreRepresentation soap_out_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_s2_resqml20__BlockedWellboreRepresentation soap_s2resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_in__resqml20__BlockedWellboreRepresentation soap_in_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_instantiate__resqml20__BlockedWellboreRepresentation soap_instantiate_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_new__resqml20__BlockedWellboreRepresentation soap_new_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_new_req__resqml20__BlockedWellboreRepresentation soap_new_req_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_new_set__resqml20__BlockedWellboreRepresentation soap_new_set_resqml20__obj_USCOREBlockedWellboreRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__BlockedWellboreRepresentation(struct soap*, const resqml20__obj_USCOREBlockedWellboreRepresentation *, const char*, const char*);

inline int soap_write__resqml20__BlockedWellboreRepresentation(struct soap *soap, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__BlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__BlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__BlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__BlockedWellboreRepresentation soap_get_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_read__resqml20__BlockedWellboreRepresentation soap_read_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_GET__resqml20__BlockedWellboreRepresentation soap_GET_resqml20__obj_USCOREBlockedWellboreRepresentation


#define soap_POST_recv__resqml20__BlockedWellboreRepresentation soap_POST_recv_resqml20__obj_USCOREBlockedWellboreRepresentation

#endif
/* _resqml20__TriangulatedSetRepresentation is a typedef synonym of resqml20__obj_USCORETriangulatedSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation_DEFINED

#define soap_default__resqml20__TriangulatedSetRepresentation(soap, a) (a)->resqml20__obj_USCORETriangulatedSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__TriangulatedSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__TriangulatedSetRepresentation2s soap_resqml20__obj_USCORETriangulatedSetRepresentation2s


#define soap_out__resqml20__TriangulatedSetRepresentation soap_out_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_s2_resqml20__TriangulatedSetRepresentation soap_s2resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_in__resqml20__TriangulatedSetRepresentation soap_in_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_instantiate__resqml20__TriangulatedSetRepresentation soap_instantiate_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_new__resqml20__TriangulatedSetRepresentation soap_new_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_new_req__resqml20__TriangulatedSetRepresentation soap_new_req_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_new_set__resqml20__TriangulatedSetRepresentation soap_new_set_resqml20__obj_USCORETriangulatedSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__TriangulatedSetRepresentation(struct soap*, const resqml20__obj_USCORETriangulatedSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__TriangulatedSetRepresentation(struct soap *soap, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__TriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__TriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__TriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__TriangulatedSetRepresentation soap_get_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_read__resqml20__TriangulatedSetRepresentation soap_read_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_GET__resqml20__TriangulatedSetRepresentation soap_GET_resqml20__obj_USCORETriangulatedSetRepresentation


#define soap_POST_recv__resqml20__TriangulatedSetRepresentation soap_POST_recv_resqml20__obj_USCORETriangulatedSetRepresentation

#endif
/* _resqml20__SealedVolumeFrameworkRepresentation is a typedef synonym of resqml20__obj_USCORESealedVolumeFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation_DEFINED

#define soap_default__resqml20__SealedVolumeFrameworkRepresentation(soap, a) (a)->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml20__SealedVolumeFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SealedVolumeFrameworkRepresentation2s soap_resqml20__obj_USCORESealedVolumeFrameworkRepresentation2s


#define soap_out__resqml20__SealedVolumeFrameworkRepresentation soap_out_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_s2_resqml20__SealedVolumeFrameworkRepresentation soap_s2resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_in__resqml20__SealedVolumeFrameworkRepresentation soap_in_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_instantiate__resqml20__SealedVolumeFrameworkRepresentation soap_instantiate_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new__resqml20__SealedVolumeFrameworkRepresentation soap_new_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new_req__resqml20__SealedVolumeFrameworkRepresentation soap_new_req_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new_set__resqml20__SealedVolumeFrameworkRepresentation soap_new_set_resqml20__obj_USCORESealedVolumeFrameworkRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SealedVolumeFrameworkRepresentation(struct soap*, const resqml20__obj_USCORESealedVolumeFrameworkRepresentation *, const char*, const char*);

inline int soap_write__resqml20__SealedVolumeFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SealedVolumeFrameworkRepresentation soap_get_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_read__resqml20__SealedVolumeFrameworkRepresentation soap_read_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_GET__resqml20__SealedVolumeFrameworkRepresentation soap_GET_resqml20__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_POST_recv__resqml20__SealedVolumeFrameworkRepresentation soap_POST_recv_resqml20__obj_USCORESealedVolumeFrameworkRepresentation

#endif
/* _resqml20__SealedSurfaceFrameworkRepresentation is a typedef synonym of resqml20__obj_USCORESealedSurfaceFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation_DEFINED

#define soap_default__resqml20__SealedSurfaceFrameworkRepresentation(soap, a) (a)->resqml20__obj_USCORESealedSurfaceFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml20__SealedSurfaceFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SealedSurfaceFrameworkRepresentation2s soap_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation2s


#define soap_out__resqml20__SealedSurfaceFrameworkRepresentation soap_out_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_s2_resqml20__SealedSurfaceFrameworkRepresentation soap_s2resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_in__resqml20__SealedSurfaceFrameworkRepresentation soap_in_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_instantiate__resqml20__SealedSurfaceFrameworkRepresentation soap_instantiate_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new__resqml20__SealedSurfaceFrameworkRepresentation soap_new_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new_req__resqml20__SealedSurfaceFrameworkRepresentation soap_new_req_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new_set__resqml20__SealedSurfaceFrameworkRepresentation soap_new_set_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SealedSurfaceFrameworkRepresentation(struct soap*, const resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_write__resqml20__SealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SealedSurfaceFrameworkRepresentation soap_get_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_read__resqml20__SealedSurfaceFrameworkRepresentation soap_read_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_GET__resqml20__SealedSurfaceFrameworkRepresentation soap_GET_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_POST_recv__resqml20__SealedSurfaceFrameworkRepresentation soap_POST_recv_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation

#endif
/* _resqml20__PolylineSetRepresentation is a typedef synonym of resqml20__obj_USCOREPolylineSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation_DEFINED

#define soap_default__resqml20__PolylineSetRepresentation(soap, a) (a)->resqml20__obj_USCOREPolylineSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__PolylineSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PolylineSetRepresentation2s soap_resqml20__obj_USCOREPolylineSetRepresentation2s


#define soap_out__resqml20__PolylineSetRepresentation soap_out_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_s2_resqml20__PolylineSetRepresentation soap_s2resqml20__obj_USCOREPolylineSetRepresentation


#define soap_in__resqml20__PolylineSetRepresentation soap_in_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_instantiate__resqml20__PolylineSetRepresentation soap_instantiate_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_new__resqml20__PolylineSetRepresentation soap_new_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_new_req__resqml20__PolylineSetRepresentation soap_new_req_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_new_set__resqml20__PolylineSetRepresentation soap_new_set_resqml20__obj_USCOREPolylineSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PolylineSetRepresentation(struct soap*, const resqml20__obj_USCOREPolylineSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__PolylineSetRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PolylineSetRepresentation soap_get_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_read__resqml20__PolylineSetRepresentation soap_read_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_GET__resqml20__PolylineSetRepresentation soap_GET_resqml20__obj_USCOREPolylineSetRepresentation


#define soap_POST_recv__resqml20__PolylineSetRepresentation soap_POST_recv_resqml20__obj_USCOREPolylineSetRepresentation

#endif
/* _resqml20__PolylineRepresentation is a typedef synonym of resqml20__obj_USCOREPolylineRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation_DEFINED

#define soap_default__resqml20__PolylineRepresentation(soap, a) (a)->resqml20__obj_USCOREPolylineRepresentation::soap_default(soap)


#define soap_serialize__resqml20__PolylineRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PolylineRepresentation2s soap_resqml20__obj_USCOREPolylineRepresentation2s


#define soap_out__resqml20__PolylineRepresentation soap_out_resqml20__obj_USCOREPolylineRepresentation


#define soap_s2_resqml20__PolylineRepresentation soap_s2resqml20__obj_USCOREPolylineRepresentation


#define soap_in__resqml20__PolylineRepresentation soap_in_resqml20__obj_USCOREPolylineRepresentation


#define soap_instantiate__resqml20__PolylineRepresentation soap_instantiate_resqml20__obj_USCOREPolylineRepresentation


#define soap_new__resqml20__PolylineRepresentation soap_new_resqml20__obj_USCOREPolylineRepresentation


#define soap_new_req__resqml20__PolylineRepresentation soap_new_req_resqml20__obj_USCOREPolylineRepresentation


#define soap_new_set__resqml20__PolylineRepresentation soap_new_set_resqml20__obj_USCOREPolylineRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PolylineRepresentation(struct soap*, const resqml20__obj_USCOREPolylineRepresentation *, const char*, const char*);

inline int soap_write__resqml20__PolylineRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PolylineRepresentation soap_get_resqml20__obj_USCOREPolylineRepresentation


#define soap_read__resqml20__PolylineRepresentation soap_read_resqml20__obj_USCOREPolylineRepresentation


#define soap_GET__resqml20__PolylineRepresentation soap_GET_resqml20__obj_USCOREPolylineRepresentation


#define soap_POST_recv__resqml20__PolylineRepresentation soap_POST_recv_resqml20__obj_USCOREPolylineRepresentation

#endif
/* _resqml20__PointSetRepresentation is a typedef synonym of resqml20__obj_USCOREPointSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation_DEFINED

#define soap_default__resqml20__PointSetRepresentation(soap, a) (a)->resqml20__obj_USCOREPointSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__PointSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PointSetRepresentation2s soap_resqml20__obj_USCOREPointSetRepresentation2s


#define soap_out__resqml20__PointSetRepresentation soap_out_resqml20__obj_USCOREPointSetRepresentation


#define soap_s2_resqml20__PointSetRepresentation soap_s2resqml20__obj_USCOREPointSetRepresentation


#define soap_in__resqml20__PointSetRepresentation soap_in_resqml20__obj_USCOREPointSetRepresentation


#define soap_instantiate__resqml20__PointSetRepresentation soap_instantiate_resqml20__obj_USCOREPointSetRepresentation


#define soap_new__resqml20__PointSetRepresentation soap_new_resqml20__obj_USCOREPointSetRepresentation


#define soap_new_req__resqml20__PointSetRepresentation soap_new_req_resqml20__obj_USCOREPointSetRepresentation


#define soap_new_set__resqml20__PointSetRepresentation soap_new_set_resqml20__obj_USCOREPointSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PointSetRepresentation(struct soap*, const resqml20__obj_USCOREPointSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__PointSetRepresentation(struct soap *soap, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PointSetRepresentation soap_get_resqml20__obj_USCOREPointSetRepresentation


#define soap_read__resqml20__PointSetRepresentation soap_read_resqml20__obj_USCOREPointSetRepresentation


#define soap_GET__resqml20__PointSetRepresentation soap_GET_resqml20__obj_USCOREPointSetRepresentation


#define soap_POST_recv__resqml20__PointSetRepresentation soap_POST_recv_resqml20__obj_USCOREPointSetRepresentation

#endif
/* _resqml20__PlaneSetRepresentation is a typedef synonym of resqml20__obj_USCOREPlaneSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation_DEFINED

#define soap_default__resqml20__PlaneSetRepresentation(soap, a) (a)->resqml20__obj_USCOREPlaneSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__PlaneSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__PlaneSetRepresentation2s soap_resqml20__obj_USCOREPlaneSetRepresentation2s


#define soap_out__resqml20__PlaneSetRepresentation soap_out_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_s2_resqml20__PlaneSetRepresentation soap_s2resqml20__obj_USCOREPlaneSetRepresentation


#define soap_in__resqml20__PlaneSetRepresentation soap_in_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_instantiate__resqml20__PlaneSetRepresentation soap_instantiate_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_new__resqml20__PlaneSetRepresentation soap_new_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_new_req__resqml20__PlaneSetRepresentation soap_new_req_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_new_set__resqml20__PlaneSetRepresentation soap_new_set_resqml20__obj_USCOREPlaneSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__PlaneSetRepresentation(struct soap*, const resqml20__obj_USCOREPlaneSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__PlaneSetRepresentation(struct soap *soap, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__PlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__PlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__PlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__PlaneSetRepresentation soap_get_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_read__resqml20__PlaneSetRepresentation soap_read_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_GET__resqml20__PlaneSetRepresentation soap_GET_resqml20__obj_USCOREPlaneSetRepresentation


#define soap_POST_recv__resqml20__PlaneSetRepresentation soap_POST_recv_resqml20__obj_USCOREPlaneSetRepresentation

#endif
/* _resqml20__NonSealedSurfaceFrameworkRepresentation is a typedef synonym of resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation_DEFINED

#define soap_default__resqml20__NonSealedSurfaceFrameworkRepresentation(soap, a) (a)->resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml20__NonSealedSurfaceFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__NonSealedSurfaceFrameworkRepresentation2s soap_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation2s


#define soap_out__resqml20__NonSealedSurfaceFrameworkRepresentation soap_out_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_s2_resqml20__NonSealedSurfaceFrameworkRepresentation soap_s2resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_in__resqml20__NonSealedSurfaceFrameworkRepresentation soap_in_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_instantiate__resqml20__NonSealedSurfaceFrameworkRepresentation soap_instantiate_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new__resqml20__NonSealedSurfaceFrameworkRepresentation soap_new_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new_req__resqml20__NonSealedSurfaceFrameworkRepresentation soap_new_req_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new_set__resqml20__NonSealedSurfaceFrameworkRepresentation soap_new_set_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__NonSealedSurfaceFrameworkRepresentation(struct soap*, const resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_write__resqml20__NonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__NonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__NonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__NonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__NonSealedSurfaceFrameworkRepresentation soap_get_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_read__resqml20__NonSealedSurfaceFrameworkRepresentation soap_read_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_GET__resqml20__NonSealedSurfaceFrameworkRepresentation soap_GET_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_POST_recv__resqml20__NonSealedSurfaceFrameworkRepresentation soap_POST_recv_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation

#endif
/* _resqml20__Grid2dSetRepresentation is a typedef synonym of resqml20__obj_USCOREGrid2dSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation_DEFINED

#define soap_default__resqml20__Grid2dSetRepresentation(soap, a) (a)->resqml20__obj_USCOREGrid2dSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__Grid2dSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__Grid2dSetRepresentation2s soap_resqml20__obj_USCOREGrid2dSetRepresentation2s


#define soap_out__resqml20__Grid2dSetRepresentation soap_out_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_s2_resqml20__Grid2dSetRepresentation soap_s2resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_in__resqml20__Grid2dSetRepresentation soap_in_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_instantiate__resqml20__Grid2dSetRepresentation soap_instantiate_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_new__resqml20__Grid2dSetRepresentation soap_new_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_new_req__resqml20__Grid2dSetRepresentation soap_new_req_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_new_set__resqml20__Grid2dSetRepresentation soap_new_set_resqml20__obj_USCOREGrid2dSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__Grid2dSetRepresentation(struct soap*, const resqml20__obj_USCOREGrid2dSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__Grid2dSetRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__Grid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__Grid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__Grid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__Grid2dSetRepresentation soap_get_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_read__resqml20__Grid2dSetRepresentation soap_read_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_GET__resqml20__Grid2dSetRepresentation soap_GET_resqml20__obj_USCOREGrid2dSetRepresentation


#define soap_POST_recv__resqml20__Grid2dSetRepresentation soap_POST_recv_resqml20__obj_USCOREGrid2dSetRepresentation

#endif
/* _resqml20__Grid2dRepresentation is a typedef synonym of resqml20__obj_USCOREGrid2dRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation_DEFINED

#define soap_default__resqml20__Grid2dRepresentation(soap, a) (a)->resqml20__obj_USCOREGrid2dRepresentation::soap_default(soap)


#define soap_serialize__resqml20__Grid2dRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__Grid2dRepresentation2s soap_resqml20__obj_USCOREGrid2dRepresentation2s


#define soap_out__resqml20__Grid2dRepresentation soap_out_resqml20__obj_USCOREGrid2dRepresentation


#define soap_s2_resqml20__Grid2dRepresentation soap_s2resqml20__obj_USCOREGrid2dRepresentation


#define soap_in__resqml20__Grid2dRepresentation soap_in_resqml20__obj_USCOREGrid2dRepresentation


#define soap_instantiate__resqml20__Grid2dRepresentation soap_instantiate_resqml20__obj_USCOREGrid2dRepresentation


#define soap_new__resqml20__Grid2dRepresentation soap_new_resqml20__obj_USCOREGrid2dRepresentation


#define soap_new_req__resqml20__Grid2dRepresentation soap_new_req_resqml20__obj_USCOREGrid2dRepresentation


#define soap_new_set__resqml20__Grid2dRepresentation soap_new_set_resqml20__obj_USCOREGrid2dRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__Grid2dRepresentation(struct soap*, const resqml20__obj_USCOREGrid2dRepresentation *, const char*, const char*);

inline int soap_write__resqml20__Grid2dRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__Grid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__Grid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__Grid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__Grid2dRepresentation soap_get_resqml20__obj_USCOREGrid2dRepresentation


#define soap_read__resqml20__Grid2dRepresentation soap_read_resqml20__obj_USCOREGrid2dRepresentation


#define soap_GET__resqml20__Grid2dRepresentation soap_GET_resqml20__obj_USCOREGrid2dRepresentation


#define soap_POST_recv__resqml20__Grid2dRepresentation soap_POST_recv_resqml20__obj_USCOREGrid2dRepresentation

#endif
/* _resqml20__UnstructuredGridRepresentation is a typedef synonym of resqml20__obj_USCOREUnstructuredGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation_DEFINED

#define soap_default__resqml20__UnstructuredGridRepresentation(soap, a) (a)->resqml20__obj_USCOREUnstructuredGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__UnstructuredGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__UnstructuredGridRepresentation2s soap_resqml20__obj_USCOREUnstructuredGridRepresentation2s


#define soap_out__resqml20__UnstructuredGridRepresentation soap_out_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_s2_resqml20__UnstructuredGridRepresentation soap_s2resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_in__resqml20__UnstructuredGridRepresentation soap_in_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_instantiate__resqml20__UnstructuredGridRepresentation soap_instantiate_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_new__resqml20__UnstructuredGridRepresentation soap_new_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_new_req__resqml20__UnstructuredGridRepresentation soap_new_req_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_new_set__resqml20__UnstructuredGridRepresentation soap_new_set_resqml20__obj_USCOREUnstructuredGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__UnstructuredGridRepresentation(struct soap*, const resqml20__obj_USCOREUnstructuredGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__UnstructuredGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__UnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__UnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__UnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__UnstructuredGridRepresentation soap_get_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_read__resqml20__UnstructuredGridRepresentation soap_read_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_GET__resqml20__UnstructuredGridRepresentation soap_GET_resqml20__obj_USCOREUnstructuredGridRepresentation


#define soap_POST_recv__resqml20__UnstructuredGridRepresentation soap_POST_recv_resqml20__obj_USCOREUnstructuredGridRepresentation

#endif
/* _resqml20__UnstructuredColumnLayerGridRepresentation is a typedef synonym of resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation_DEFINED

#define soap_default__resqml20__UnstructuredColumnLayerGridRepresentation(soap, a) (a)->resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__UnstructuredColumnLayerGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__UnstructuredColumnLayerGridRepresentation2s soap_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation2s


#define soap_out__resqml20__UnstructuredColumnLayerGridRepresentation soap_out_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_s2_resqml20__UnstructuredColumnLayerGridRepresentation soap_s2resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_in__resqml20__UnstructuredColumnLayerGridRepresentation soap_in_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_instantiate__resqml20__UnstructuredColumnLayerGridRepresentation soap_instantiate_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new__resqml20__UnstructuredColumnLayerGridRepresentation soap_new_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new_req__resqml20__UnstructuredColumnLayerGridRepresentation soap_new_req_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new_set__resqml20__UnstructuredColumnLayerGridRepresentation soap_new_set_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__UnstructuredColumnLayerGridRepresentation(struct soap*, const resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__UnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__UnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__UnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__UnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__UnstructuredColumnLayerGridRepresentation soap_get_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_read__resqml20__UnstructuredColumnLayerGridRepresentation soap_read_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_GET__resqml20__UnstructuredColumnLayerGridRepresentation soap_GET_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_POST_recv__resqml20__UnstructuredColumnLayerGridRepresentation soap_POST_recv_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation

#endif
/* _resqml20__TruncatedUnstructuredColumnLayerGridRepresentation is a typedef synonym of resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation_DEFINED

#define soap_default__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(soap, a) (a)->resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation2s soap_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation2s


#define soap_out__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_out_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_s2_resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_s2resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_in__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_in_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_instantiate__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_instantiate_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new_req__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_req_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new_set__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_set_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, const resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_get_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_read__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_read_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_GET__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_GET_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_POST_recv__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation soap_POST_recv_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation

#endif
/* _resqml20__TruncatedIjkGridRepresentation is a typedef synonym of resqml20__obj_USCORETruncatedIjkGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation_DEFINED

#define soap_default__resqml20__TruncatedIjkGridRepresentation(soap, a) (a)->resqml20__obj_USCORETruncatedIjkGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__TruncatedIjkGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__TruncatedIjkGridRepresentation2s soap_resqml20__obj_USCORETruncatedIjkGridRepresentation2s


#define soap_out__resqml20__TruncatedIjkGridRepresentation soap_out_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_s2_resqml20__TruncatedIjkGridRepresentation soap_s2resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_in__resqml20__TruncatedIjkGridRepresentation soap_in_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_instantiate__resqml20__TruncatedIjkGridRepresentation soap_instantiate_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_new__resqml20__TruncatedIjkGridRepresentation soap_new_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_new_req__resqml20__TruncatedIjkGridRepresentation soap_new_req_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_new_set__resqml20__TruncatedIjkGridRepresentation soap_new_set_resqml20__obj_USCORETruncatedIjkGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__TruncatedIjkGridRepresentation(struct soap*, const resqml20__obj_USCORETruncatedIjkGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__TruncatedIjkGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__TruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__TruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__TruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__TruncatedIjkGridRepresentation soap_get_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_read__resqml20__TruncatedIjkGridRepresentation soap_read_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_GET__resqml20__TruncatedIjkGridRepresentation soap_GET_resqml20__obj_USCORETruncatedIjkGridRepresentation


#define soap_POST_recv__resqml20__TruncatedIjkGridRepresentation soap_POST_recv_resqml20__obj_USCORETruncatedIjkGridRepresentation

#endif
/* _resqml20__LocalGridSet is a typedef synonym of resqml20__obj_USCORELocalGridSet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet_DEFINED

#define soap_default__resqml20__LocalGridSet(soap, a) (a)->resqml20__obj_USCORELocalGridSet::soap_default(soap)


#define soap_serialize__resqml20__LocalGridSet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__LocalGridSet2s soap_resqml20__obj_USCORELocalGridSet2s


#define soap_out__resqml20__LocalGridSet soap_out_resqml20__obj_USCORELocalGridSet


#define soap_s2_resqml20__LocalGridSet soap_s2resqml20__obj_USCORELocalGridSet


#define soap_in__resqml20__LocalGridSet soap_in_resqml20__obj_USCORELocalGridSet


#define soap_instantiate__resqml20__LocalGridSet soap_instantiate_resqml20__obj_USCORELocalGridSet


#define soap_new__resqml20__LocalGridSet soap_new_resqml20__obj_USCORELocalGridSet


#define soap_new_req__resqml20__LocalGridSet soap_new_req_resqml20__obj_USCORELocalGridSet


#define soap_new_set__resqml20__LocalGridSet soap_new_set_resqml20__obj_USCORELocalGridSet

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__LocalGridSet(struct soap*, const resqml20__obj_USCORELocalGridSet *, const char*, const char*);

inline int soap_write__resqml20__LocalGridSet(struct soap *soap, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__LocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__LocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__LocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__LocalGridSet soap_get_resqml20__obj_USCORELocalGridSet


#define soap_read__resqml20__LocalGridSet soap_read_resqml20__obj_USCORELocalGridSet


#define soap_GET__resqml20__LocalGridSet soap_GET_resqml20__obj_USCORELocalGridSet


#define soap_POST_recv__resqml20__LocalGridSet soap_POST_recv_resqml20__obj_USCORELocalGridSet

#endif
/* _resqml20__IjkGridRepresentation is a typedef synonym of resqml20__obj_USCOREIjkGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation_DEFINED

#define soap_default__resqml20__IjkGridRepresentation(soap, a) (a)->resqml20__obj_USCOREIjkGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__IjkGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__IjkGridRepresentation2s soap_resqml20__obj_USCOREIjkGridRepresentation2s


#define soap_out__resqml20__IjkGridRepresentation soap_out_resqml20__obj_USCOREIjkGridRepresentation


#define soap_s2_resqml20__IjkGridRepresentation soap_s2resqml20__obj_USCOREIjkGridRepresentation


#define soap_in__resqml20__IjkGridRepresentation soap_in_resqml20__obj_USCOREIjkGridRepresentation


#define soap_instantiate__resqml20__IjkGridRepresentation soap_instantiate_resqml20__obj_USCOREIjkGridRepresentation


#define soap_new__resqml20__IjkGridRepresentation soap_new_resqml20__obj_USCOREIjkGridRepresentation


#define soap_new_req__resqml20__IjkGridRepresentation soap_new_req_resqml20__obj_USCOREIjkGridRepresentation


#define soap_new_set__resqml20__IjkGridRepresentation soap_new_set_resqml20__obj_USCOREIjkGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__IjkGridRepresentation(struct soap*, const resqml20__obj_USCOREIjkGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__IjkGridRepresentation(struct soap *soap, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__IjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__IjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__IjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__IjkGridRepresentation soap_get_resqml20__obj_USCOREIjkGridRepresentation


#define soap_read__resqml20__IjkGridRepresentation soap_read_resqml20__obj_USCOREIjkGridRepresentation


#define soap_GET__resqml20__IjkGridRepresentation soap_GET_resqml20__obj_USCOREIjkGridRepresentation


#define soap_POST_recv__resqml20__IjkGridRepresentation soap_POST_recv_resqml20__obj_USCOREIjkGridRepresentation

#endif
/* _resqml20__GridConnectionSetRepresentation is a typedef synonym of resqml20__obj_USCOREGridConnectionSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation_DEFINED

#define soap_default__resqml20__GridConnectionSetRepresentation(soap, a) (a)->resqml20__obj_USCOREGridConnectionSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__GridConnectionSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GridConnectionSetRepresentation2s soap_resqml20__obj_USCOREGridConnectionSetRepresentation2s


#define soap_out__resqml20__GridConnectionSetRepresentation soap_out_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_s2_resqml20__GridConnectionSetRepresentation soap_s2resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_in__resqml20__GridConnectionSetRepresentation soap_in_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_instantiate__resqml20__GridConnectionSetRepresentation soap_instantiate_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_new__resqml20__GridConnectionSetRepresentation soap_new_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_new_req__resqml20__GridConnectionSetRepresentation soap_new_req_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_new_set__resqml20__GridConnectionSetRepresentation soap_new_set_resqml20__obj_USCOREGridConnectionSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GridConnectionSetRepresentation(struct soap*, const resqml20__obj_USCOREGridConnectionSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__GridConnectionSetRepresentation(struct soap *soap, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GridConnectionSetRepresentation soap_get_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_read__resqml20__GridConnectionSetRepresentation soap_read_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_GET__resqml20__GridConnectionSetRepresentation soap_GET_resqml20__obj_USCOREGridConnectionSetRepresentation


#define soap_POST_recv__resqml20__GridConnectionSetRepresentation soap_POST_recv_resqml20__obj_USCOREGridConnectionSetRepresentation

#endif
/* _resqml20__GpGridRepresentation is a typedef synonym of resqml20__obj_USCOREGpGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation_DEFINED

#define soap_default__resqml20__GpGridRepresentation(soap, a) (a)->resqml20__obj_USCOREGpGridRepresentation::soap_default(soap)


#define soap_serialize__resqml20__GpGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GpGridRepresentation2s soap_resqml20__obj_USCOREGpGridRepresentation2s


#define soap_out__resqml20__GpGridRepresentation soap_out_resqml20__obj_USCOREGpGridRepresentation


#define soap_s2_resqml20__GpGridRepresentation soap_s2resqml20__obj_USCOREGpGridRepresentation


#define soap_in__resqml20__GpGridRepresentation soap_in_resqml20__obj_USCOREGpGridRepresentation


#define soap_instantiate__resqml20__GpGridRepresentation soap_instantiate_resqml20__obj_USCOREGpGridRepresentation


#define soap_new__resqml20__GpGridRepresentation soap_new_resqml20__obj_USCOREGpGridRepresentation


#define soap_new_req__resqml20__GpGridRepresentation soap_new_req_resqml20__obj_USCOREGpGridRepresentation


#define soap_new_set__resqml20__GpGridRepresentation soap_new_set_resqml20__obj_USCOREGpGridRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GpGridRepresentation(struct soap*, const resqml20__obj_USCOREGpGridRepresentation *, const char*, const char*);

inline int soap_write__resqml20__GpGridRepresentation(struct soap *soap, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GpGridRepresentation soap_get_resqml20__obj_USCOREGpGridRepresentation


#define soap_read__resqml20__GpGridRepresentation soap_read_resqml20__obj_USCOREGpGridRepresentation


#define soap_GET__resqml20__GpGridRepresentation soap_GET_resqml20__obj_USCOREGpGridRepresentation


#define soap_POST_recv__resqml20__GpGridRepresentation soap_POST_recv_resqml20__obj_USCOREGpGridRepresentation

#endif
/* _resqml20__SubRepresentation is a typedef synonym of resqml20__obj_USCORESubRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation_DEFINED

#define soap_default__resqml20__SubRepresentation(soap, a) (a)->resqml20__obj_USCORESubRepresentation::soap_default(soap)


#define soap_serialize__resqml20__SubRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SubRepresentation2s soap_resqml20__obj_USCORESubRepresentation2s


#define soap_out__resqml20__SubRepresentation soap_out_resqml20__obj_USCORESubRepresentation


#define soap_s2_resqml20__SubRepresentation soap_s2resqml20__obj_USCORESubRepresentation


#define soap_in__resqml20__SubRepresentation soap_in_resqml20__obj_USCORESubRepresentation


#define soap_instantiate__resqml20__SubRepresentation soap_instantiate_resqml20__obj_USCORESubRepresentation


#define soap_new__resqml20__SubRepresentation soap_new_resqml20__obj_USCORESubRepresentation


#define soap_new_req__resqml20__SubRepresentation soap_new_req_resqml20__obj_USCORESubRepresentation


#define soap_new_set__resqml20__SubRepresentation soap_new_set_resqml20__obj_USCORESubRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SubRepresentation(struct soap*, const resqml20__obj_USCORESubRepresentation *, const char*, const char*);

inline int soap_write__resqml20__SubRepresentation(struct soap *soap, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SubRepresentation soap_get_resqml20__obj_USCORESubRepresentation


#define soap_read__resqml20__SubRepresentation soap_read_resqml20__obj_USCORESubRepresentation


#define soap_GET__resqml20__SubRepresentation soap_GET_resqml20__obj_USCORESubRepresentation


#define soap_POST_recv__resqml20__SubRepresentation soap_POST_recv_resqml20__obj_USCORESubRepresentation

#endif
/* _resqml20__RepresentationSetRepresentation is a typedef synonym of resqml20__obj_USCORERepresentationSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation_DEFINED

#define soap_default__resqml20__RepresentationSetRepresentation(soap, a) (a)->resqml20__obj_USCORERepresentationSetRepresentation::soap_default(soap)


#define soap_serialize__resqml20__RepresentationSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RepresentationSetRepresentation2s soap_resqml20__obj_USCORERepresentationSetRepresentation2s


#define soap_out__resqml20__RepresentationSetRepresentation soap_out_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_s2_resqml20__RepresentationSetRepresentation soap_s2resqml20__obj_USCORERepresentationSetRepresentation


#define soap_in__resqml20__RepresentationSetRepresentation soap_in_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_instantiate__resqml20__RepresentationSetRepresentation soap_instantiate_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_new__resqml20__RepresentationSetRepresentation soap_new_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_new_req__resqml20__RepresentationSetRepresentation soap_new_req_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_new_set__resqml20__RepresentationSetRepresentation soap_new_set_resqml20__obj_USCORERepresentationSetRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RepresentationSetRepresentation(struct soap*, const resqml20__obj_USCORERepresentationSetRepresentation *, const char*, const char*);

inline int soap_write__resqml20__RepresentationSetRepresentation(struct soap *soap, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RepresentationSetRepresentation soap_get_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_read__resqml20__RepresentationSetRepresentation soap_read_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_GET__resqml20__RepresentationSetRepresentation soap_GET_resqml20__obj_USCORERepresentationSetRepresentation


#define soap_POST_recv__resqml20__RepresentationSetRepresentation soap_POST_recv_resqml20__obj_USCORERepresentationSetRepresentation

#endif
/* _resqml20__RepresentationIdentitySet is a typedef synonym of resqml20__obj_USCORERepresentationIdentitySet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet_DEFINED

#define soap_default__resqml20__RepresentationIdentitySet(soap, a) (a)->resqml20__obj_USCORERepresentationIdentitySet::soap_default(soap)


#define soap_serialize__resqml20__RepresentationIdentitySet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RepresentationIdentitySet2s soap_resqml20__obj_USCORERepresentationIdentitySet2s


#define soap_out__resqml20__RepresentationIdentitySet soap_out_resqml20__obj_USCORERepresentationIdentitySet


#define soap_s2_resqml20__RepresentationIdentitySet soap_s2resqml20__obj_USCORERepresentationIdentitySet


#define soap_in__resqml20__RepresentationIdentitySet soap_in_resqml20__obj_USCORERepresentationIdentitySet


#define soap_instantiate__resqml20__RepresentationIdentitySet soap_instantiate_resqml20__obj_USCORERepresentationIdentitySet


#define soap_new__resqml20__RepresentationIdentitySet soap_new_resqml20__obj_USCORERepresentationIdentitySet


#define soap_new_req__resqml20__RepresentationIdentitySet soap_new_req_resqml20__obj_USCORERepresentationIdentitySet


#define soap_new_set__resqml20__RepresentationIdentitySet soap_new_set_resqml20__obj_USCORERepresentationIdentitySet

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RepresentationIdentitySet(struct soap*, const resqml20__obj_USCORERepresentationIdentitySet *, const char*, const char*);

inline int soap_write__resqml20__RepresentationIdentitySet(struct soap *soap, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RepresentationIdentitySet soap_get_resqml20__obj_USCORERepresentationIdentitySet


#define soap_read__resqml20__RepresentationIdentitySet soap_read_resqml20__obj_USCORERepresentationIdentitySet


#define soap_GET__resqml20__RepresentationIdentitySet soap_GET_resqml20__obj_USCORERepresentationIdentitySet


#define soap_POST_recv__resqml20__RepresentationIdentitySet soap_POST_recv_resqml20__obj_USCORERepresentationIdentitySet

#endif
/* _resqml20__RedefinedGeometryRepresentation is a typedef synonym of resqml20__obj_USCORERedefinedGeometryRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation_DEFINED

#define soap_default__resqml20__RedefinedGeometryRepresentation(soap, a) (a)->resqml20__obj_USCORERedefinedGeometryRepresentation::soap_default(soap)


#define soap_serialize__resqml20__RedefinedGeometryRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RedefinedGeometryRepresentation2s soap_resqml20__obj_USCORERedefinedGeometryRepresentation2s


#define soap_out__resqml20__RedefinedGeometryRepresentation soap_out_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_s2_resqml20__RedefinedGeometryRepresentation soap_s2resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_in__resqml20__RedefinedGeometryRepresentation soap_in_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_instantiate__resqml20__RedefinedGeometryRepresentation soap_instantiate_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_new__resqml20__RedefinedGeometryRepresentation soap_new_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_new_req__resqml20__RedefinedGeometryRepresentation soap_new_req_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_new_set__resqml20__RedefinedGeometryRepresentation soap_new_set_resqml20__obj_USCORERedefinedGeometryRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RedefinedGeometryRepresentation(struct soap*, const resqml20__obj_USCORERedefinedGeometryRepresentation *, const char*, const char*);

inline int soap_write__resqml20__RedefinedGeometryRepresentation(struct soap *soap, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RedefinedGeometryRepresentation soap_get_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_read__resqml20__RedefinedGeometryRepresentation soap_read_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_GET__resqml20__RedefinedGeometryRepresentation soap_GET_resqml20__obj_USCORERedefinedGeometryRepresentation


#define soap_POST_recv__resqml20__RedefinedGeometryRepresentation soap_POST_recv_resqml20__obj_USCORERedefinedGeometryRepresentation

#endif
/* _resqml20__StratigraphicUnitInterpretation is a typedef synonym of resqml20__obj_USCOREStratigraphicUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation_DEFINED

#define soap_default__resqml20__StratigraphicUnitInterpretation(soap, a) (a)->resqml20__obj_USCOREStratigraphicUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml20__StratigraphicUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StratigraphicUnitInterpretation2s soap_resqml20__obj_USCOREStratigraphicUnitInterpretation2s


#define soap_out__resqml20__StratigraphicUnitInterpretation soap_out_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_s2_resqml20__StratigraphicUnitInterpretation soap_s2resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_in__resqml20__StratigraphicUnitInterpretation soap_in_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_instantiate__resqml20__StratigraphicUnitInterpretation soap_instantiate_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_new__resqml20__StratigraphicUnitInterpretation soap_new_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_new_req__resqml20__StratigraphicUnitInterpretation soap_new_req_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_new_set__resqml20__StratigraphicUnitInterpretation soap_new_set_resqml20__obj_USCOREStratigraphicUnitInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StratigraphicUnitInterpretation(struct soap*, const resqml20__obj_USCOREStratigraphicUnitInterpretation *, const char*, const char*);

inline int soap_write__resqml20__StratigraphicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StratigraphicUnitInterpretation soap_get_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_read__resqml20__StratigraphicUnitInterpretation soap_read_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_GET__resqml20__StratigraphicUnitInterpretation soap_GET_resqml20__obj_USCOREStratigraphicUnitInterpretation


#define soap_POST_recv__resqml20__StratigraphicUnitInterpretation soap_POST_recv_resqml20__obj_USCOREStratigraphicUnitInterpretation

#endif
/* _resqml20__RockFluidOrganizationInterpretation is a typedef synonym of resqml20__obj_USCORERockFluidOrganizationInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation_DEFINED

#define soap_default__resqml20__RockFluidOrganizationInterpretation(soap, a) (a)->resqml20__obj_USCORERockFluidOrganizationInterpretation::soap_default(soap)


#define soap_serialize__resqml20__RockFluidOrganizationInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RockFluidOrganizationInterpretation2s soap_resqml20__obj_USCORERockFluidOrganizationInterpretation2s


#define soap_out__resqml20__RockFluidOrganizationInterpretation soap_out_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_s2_resqml20__RockFluidOrganizationInterpretation soap_s2resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_in__resqml20__RockFluidOrganizationInterpretation soap_in_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_instantiate__resqml20__RockFluidOrganizationInterpretation soap_instantiate_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_new__resqml20__RockFluidOrganizationInterpretation soap_new_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_new_req__resqml20__RockFluidOrganizationInterpretation soap_new_req_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_new_set__resqml20__RockFluidOrganizationInterpretation soap_new_set_resqml20__obj_USCORERockFluidOrganizationInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RockFluidOrganizationInterpretation(struct soap*, const resqml20__obj_USCORERockFluidOrganizationInterpretation *, const char*, const char*);

inline int soap_write__resqml20__RockFluidOrganizationInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RockFluidOrganizationInterpretation soap_get_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_read__resqml20__RockFluidOrganizationInterpretation soap_read_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_GET__resqml20__RockFluidOrganizationInterpretation soap_GET_resqml20__obj_USCORERockFluidOrganizationInterpretation


#define soap_POST_recv__resqml20__RockFluidOrganizationInterpretation soap_POST_recv_resqml20__obj_USCORERockFluidOrganizationInterpretation

#endif
/* _resqml20__HorizonInterpretation is a typedef synonym of resqml20__obj_USCOREHorizonInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation_DEFINED

#define soap_default__resqml20__HorizonInterpretation(soap, a) (a)->resqml20__obj_USCOREHorizonInterpretation::soap_default(soap)


#define soap_serialize__resqml20__HorizonInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__HorizonInterpretation2s soap_resqml20__obj_USCOREHorizonInterpretation2s


#define soap_out__resqml20__HorizonInterpretation soap_out_resqml20__obj_USCOREHorizonInterpretation


#define soap_s2_resqml20__HorizonInterpretation soap_s2resqml20__obj_USCOREHorizonInterpretation


#define soap_in__resqml20__HorizonInterpretation soap_in_resqml20__obj_USCOREHorizonInterpretation


#define soap_instantiate__resqml20__HorizonInterpretation soap_instantiate_resqml20__obj_USCOREHorizonInterpretation


#define soap_new__resqml20__HorizonInterpretation soap_new_resqml20__obj_USCOREHorizonInterpretation


#define soap_new_req__resqml20__HorizonInterpretation soap_new_req_resqml20__obj_USCOREHorizonInterpretation


#define soap_new_set__resqml20__HorizonInterpretation soap_new_set_resqml20__obj_USCOREHorizonInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__HorizonInterpretation(struct soap*, const resqml20__obj_USCOREHorizonInterpretation *, const char*, const char*);

inline int soap_write__resqml20__HorizonInterpretation(struct soap *soap, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__HorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__HorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__HorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__HorizonInterpretation soap_get_resqml20__obj_USCOREHorizonInterpretation


#define soap_read__resqml20__HorizonInterpretation soap_read_resqml20__obj_USCOREHorizonInterpretation


#define soap_GET__resqml20__HorizonInterpretation soap_GET_resqml20__obj_USCOREHorizonInterpretation


#define soap_POST_recv__resqml20__HorizonInterpretation soap_POST_recv_resqml20__obj_USCOREHorizonInterpretation

#endif
/* _resqml20__RockFluidUnitInterpretation is a typedef synonym of resqml20__obj_USCORERockFluidUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation_DEFINED

#define soap_default__resqml20__RockFluidUnitInterpretation(soap, a) (a)->resqml20__obj_USCORERockFluidUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml20__RockFluidUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RockFluidUnitInterpretation2s soap_resqml20__obj_USCORERockFluidUnitInterpretation2s


#define soap_out__resqml20__RockFluidUnitInterpretation soap_out_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_s2_resqml20__RockFluidUnitInterpretation soap_s2resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_in__resqml20__RockFluidUnitInterpretation soap_in_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_instantiate__resqml20__RockFluidUnitInterpretation soap_instantiate_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_new__resqml20__RockFluidUnitInterpretation soap_new_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_new_req__resqml20__RockFluidUnitInterpretation soap_new_req_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_new_set__resqml20__RockFluidUnitInterpretation soap_new_set_resqml20__obj_USCORERockFluidUnitInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RockFluidUnitInterpretation(struct soap*, const resqml20__obj_USCORERockFluidUnitInterpretation *, const char*, const char*);

inline int soap_write__resqml20__RockFluidUnitInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RockFluidUnitInterpretation soap_get_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_read__resqml20__RockFluidUnitInterpretation soap_read_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_GET__resqml20__RockFluidUnitInterpretation soap_GET_resqml20__obj_USCORERockFluidUnitInterpretation


#define soap_POST_recv__resqml20__RockFluidUnitInterpretation soap_POST_recv_resqml20__obj_USCORERockFluidUnitInterpretation

#endif
/* _resqml20__GeobodyInterpretation is a typedef synonym of resqml20__obj_USCOREGeobodyInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation_DEFINED

#define soap_default__resqml20__GeobodyInterpretation(soap, a) (a)->resqml20__obj_USCOREGeobodyInterpretation::soap_default(soap)


#define soap_serialize__resqml20__GeobodyInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeobodyInterpretation2s soap_resqml20__obj_USCOREGeobodyInterpretation2s


#define soap_out__resqml20__GeobodyInterpretation soap_out_resqml20__obj_USCOREGeobodyInterpretation


#define soap_s2_resqml20__GeobodyInterpretation soap_s2resqml20__obj_USCOREGeobodyInterpretation


#define soap_in__resqml20__GeobodyInterpretation soap_in_resqml20__obj_USCOREGeobodyInterpretation


#define soap_instantiate__resqml20__GeobodyInterpretation soap_instantiate_resqml20__obj_USCOREGeobodyInterpretation


#define soap_new__resqml20__GeobodyInterpretation soap_new_resqml20__obj_USCOREGeobodyInterpretation


#define soap_new_req__resqml20__GeobodyInterpretation soap_new_req_resqml20__obj_USCOREGeobodyInterpretation


#define soap_new_set__resqml20__GeobodyInterpretation soap_new_set_resqml20__obj_USCOREGeobodyInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeobodyInterpretation(struct soap*, const resqml20__obj_USCOREGeobodyInterpretation *, const char*, const char*);

inline int soap_write__resqml20__GeobodyInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeobodyInterpretation soap_get_resqml20__obj_USCOREGeobodyInterpretation


#define soap_read__resqml20__GeobodyInterpretation soap_read_resqml20__obj_USCOREGeobodyInterpretation


#define soap_GET__resqml20__GeobodyInterpretation soap_GET_resqml20__obj_USCOREGeobodyInterpretation


#define soap_POST_recv__resqml20__GeobodyInterpretation soap_POST_recv_resqml20__obj_USCOREGeobodyInterpretation

#endif
/* _resqml20__GeobodyBoundaryInterpretation is a typedef synonym of resqml20__obj_USCOREGeobodyBoundaryInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation_DEFINED

#define soap_default__resqml20__GeobodyBoundaryInterpretation(soap, a) (a)->resqml20__obj_USCOREGeobodyBoundaryInterpretation::soap_default(soap)


#define soap_serialize__resqml20__GeobodyBoundaryInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeobodyBoundaryInterpretation2s soap_resqml20__obj_USCOREGeobodyBoundaryInterpretation2s


#define soap_out__resqml20__GeobodyBoundaryInterpretation soap_out_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_s2_resqml20__GeobodyBoundaryInterpretation soap_s2resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_in__resqml20__GeobodyBoundaryInterpretation soap_in_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_instantiate__resqml20__GeobodyBoundaryInterpretation soap_instantiate_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new__resqml20__GeobodyBoundaryInterpretation soap_new_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new_req__resqml20__GeobodyBoundaryInterpretation soap_new_req_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new_set__resqml20__GeobodyBoundaryInterpretation soap_new_set_resqml20__obj_USCOREGeobodyBoundaryInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeobodyBoundaryInterpretation(struct soap*, const resqml20__obj_USCOREGeobodyBoundaryInterpretation *, const char*, const char*);

inline int soap_write__resqml20__GeobodyBoundaryInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeobodyBoundaryInterpretation soap_get_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_read__resqml20__GeobodyBoundaryInterpretation soap_read_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_GET__resqml20__GeobodyBoundaryInterpretation soap_GET_resqml20__obj_USCOREGeobodyBoundaryInterpretation


#define soap_POST_recv__resqml20__GeobodyBoundaryInterpretation soap_POST_recv_resqml20__obj_USCOREGeobodyBoundaryInterpretation

#endif
/* _resqml20__FaultInterpretation is a typedef synonym of resqml20__obj_USCOREFaultInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation_DEFINED

#define soap_default__resqml20__FaultInterpretation(soap, a) (a)->resqml20__obj_USCOREFaultInterpretation::soap_default(soap)


#define soap_serialize__resqml20__FaultInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__FaultInterpretation2s soap_resqml20__obj_USCOREFaultInterpretation2s


#define soap_out__resqml20__FaultInterpretation soap_out_resqml20__obj_USCOREFaultInterpretation


#define soap_s2_resqml20__FaultInterpretation soap_s2resqml20__obj_USCOREFaultInterpretation


#define soap_in__resqml20__FaultInterpretation soap_in_resqml20__obj_USCOREFaultInterpretation


#define soap_instantiate__resqml20__FaultInterpretation soap_instantiate_resqml20__obj_USCOREFaultInterpretation


#define soap_new__resqml20__FaultInterpretation soap_new_resqml20__obj_USCOREFaultInterpretation


#define soap_new_req__resqml20__FaultInterpretation soap_new_req_resqml20__obj_USCOREFaultInterpretation


#define soap_new_set__resqml20__FaultInterpretation soap_new_set_resqml20__obj_USCOREFaultInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__FaultInterpretation(struct soap*, const resqml20__obj_USCOREFaultInterpretation *, const char*, const char*);

inline int soap_write__resqml20__FaultInterpretation(struct soap *soap, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__FaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__FaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__FaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__FaultInterpretation soap_get_resqml20__obj_USCOREFaultInterpretation


#define soap_read__resqml20__FaultInterpretation soap_read_resqml20__obj_USCOREFaultInterpretation


#define soap_GET__resqml20__FaultInterpretation soap_GET_resqml20__obj_USCOREFaultInterpretation


#define soap_POST_recv__resqml20__FaultInterpretation soap_POST_recv_resqml20__obj_USCOREFaultInterpretation

#endif
/* _resqml20__EarthModelInterpretation is a typedef synonym of resqml20__obj_USCOREEarthModelInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation_DEFINED

#define soap_default__resqml20__EarthModelInterpretation(soap, a) (a)->resqml20__obj_USCOREEarthModelInterpretation::soap_default(soap)


#define soap_serialize__resqml20__EarthModelInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__EarthModelInterpretation2s soap_resqml20__obj_USCOREEarthModelInterpretation2s


#define soap_out__resqml20__EarthModelInterpretation soap_out_resqml20__obj_USCOREEarthModelInterpretation


#define soap_s2_resqml20__EarthModelInterpretation soap_s2resqml20__obj_USCOREEarthModelInterpretation


#define soap_in__resqml20__EarthModelInterpretation soap_in_resqml20__obj_USCOREEarthModelInterpretation


#define soap_instantiate__resqml20__EarthModelInterpretation soap_instantiate_resqml20__obj_USCOREEarthModelInterpretation


#define soap_new__resqml20__EarthModelInterpretation soap_new_resqml20__obj_USCOREEarthModelInterpretation


#define soap_new_req__resqml20__EarthModelInterpretation soap_new_req_resqml20__obj_USCOREEarthModelInterpretation


#define soap_new_set__resqml20__EarthModelInterpretation soap_new_set_resqml20__obj_USCOREEarthModelInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__EarthModelInterpretation(struct soap*, const resqml20__obj_USCOREEarthModelInterpretation *, const char*, const char*);

inline int soap_write__resqml20__EarthModelInterpretation(struct soap *soap, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__EarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__EarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__EarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__EarthModelInterpretation soap_get_resqml20__obj_USCOREEarthModelInterpretation


#define soap_read__resqml20__EarthModelInterpretation soap_read_resqml20__obj_USCOREEarthModelInterpretation


#define soap_GET__resqml20__EarthModelInterpretation soap_GET_resqml20__obj_USCOREEarthModelInterpretation


#define soap_POST_recv__resqml20__EarthModelInterpretation soap_POST_recv_resqml20__obj_USCOREEarthModelInterpretation

#endif
/* _resqml20__WellboreInterpretation is a typedef synonym of resqml20__obj_USCOREWellboreInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation_DEFINED

#define soap_default__resqml20__WellboreInterpretation(soap, a) (a)->resqml20__obj_USCOREWellboreInterpretation::soap_default(soap)


#define soap_serialize__resqml20__WellboreInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__WellboreInterpretation2s soap_resqml20__obj_USCOREWellboreInterpretation2s


#define soap_out__resqml20__WellboreInterpretation soap_out_resqml20__obj_USCOREWellboreInterpretation


#define soap_s2_resqml20__WellboreInterpretation soap_s2resqml20__obj_USCOREWellboreInterpretation


#define soap_in__resqml20__WellboreInterpretation soap_in_resqml20__obj_USCOREWellboreInterpretation


#define soap_instantiate__resqml20__WellboreInterpretation soap_instantiate_resqml20__obj_USCOREWellboreInterpretation


#define soap_new__resqml20__WellboreInterpretation soap_new_resqml20__obj_USCOREWellboreInterpretation


#define soap_new_req__resqml20__WellboreInterpretation soap_new_req_resqml20__obj_USCOREWellboreInterpretation


#define soap_new_set__resqml20__WellboreInterpretation soap_new_set_resqml20__obj_USCOREWellboreInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__WellboreInterpretation(struct soap*, const resqml20__obj_USCOREWellboreInterpretation *, const char*, const char*);

inline int soap_write__resqml20__WellboreInterpretation(struct soap *soap, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__WellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__WellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__WellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__WellboreInterpretation soap_get_resqml20__obj_USCOREWellboreInterpretation


#define soap_read__resqml20__WellboreInterpretation soap_read_resqml20__obj_USCOREWellboreInterpretation


#define soap_GET__resqml20__WellboreInterpretation soap_GET_resqml20__obj_USCOREWellboreInterpretation


#define soap_POST_recv__resqml20__WellboreInterpretation soap_POST_recv_resqml20__obj_USCOREWellboreInterpretation

#endif
/* _resqml20__StructuralOrganizationInterpretation is a typedef synonym of resqml20__obj_USCOREStructuralOrganizationInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation_DEFINED

#define soap_default__resqml20__StructuralOrganizationInterpretation(soap, a) (a)->resqml20__obj_USCOREStructuralOrganizationInterpretation::soap_default(soap)


#define soap_serialize__resqml20__StructuralOrganizationInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StructuralOrganizationInterpretation2s soap_resqml20__obj_USCOREStructuralOrganizationInterpretation2s


#define soap_out__resqml20__StructuralOrganizationInterpretation soap_out_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_s2_resqml20__StructuralOrganizationInterpretation soap_s2resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_in__resqml20__StructuralOrganizationInterpretation soap_in_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_instantiate__resqml20__StructuralOrganizationInterpretation soap_instantiate_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_new__resqml20__StructuralOrganizationInterpretation soap_new_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_new_req__resqml20__StructuralOrganizationInterpretation soap_new_req_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_new_set__resqml20__StructuralOrganizationInterpretation soap_new_set_resqml20__obj_USCOREStructuralOrganizationInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StructuralOrganizationInterpretation(struct soap*, const resqml20__obj_USCOREStructuralOrganizationInterpretation *, const char*, const char*);

inline int soap_write__resqml20__StructuralOrganizationInterpretation(struct soap *soap, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StructuralOrganizationInterpretation soap_get_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_read__resqml20__StructuralOrganizationInterpretation soap_read_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_GET__resqml20__StructuralOrganizationInterpretation soap_GET_resqml20__obj_USCOREStructuralOrganizationInterpretation


#define soap_POST_recv__resqml20__StructuralOrganizationInterpretation soap_POST_recv_resqml20__obj_USCOREStructuralOrganizationInterpretation

#endif
/* _resqml20__StratigraphicOccurrenceInterpretation is a typedef synonym of resqml20__obj_USCOREStratigraphicOccurrenceInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation_DEFINED

#define soap_default__resqml20__StratigraphicOccurrenceInterpretation(soap, a) (a)->resqml20__obj_USCOREStratigraphicOccurrenceInterpretation::soap_default(soap)


#define soap_serialize__resqml20__StratigraphicOccurrenceInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StratigraphicOccurrenceInterpretation2s soap_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation2s


#define soap_out__resqml20__StratigraphicOccurrenceInterpretation soap_out_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_s2_resqml20__StratigraphicOccurrenceInterpretation soap_s2resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_in__resqml20__StratigraphicOccurrenceInterpretation soap_in_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_instantiate__resqml20__StratigraphicOccurrenceInterpretation soap_instantiate_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new__resqml20__StratigraphicOccurrenceInterpretation soap_new_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new_req__resqml20__StratigraphicOccurrenceInterpretation soap_new_req_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new_set__resqml20__StratigraphicOccurrenceInterpretation soap_new_set_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StratigraphicOccurrenceInterpretation(struct soap*, const resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*, const char*);

inline int soap_write__resqml20__StratigraphicOccurrenceInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StratigraphicOccurrenceInterpretation soap_get_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_read__resqml20__StratigraphicOccurrenceInterpretation soap_read_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_GET__resqml20__StratigraphicOccurrenceInterpretation soap_GET_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_POST_recv__resqml20__StratigraphicOccurrenceInterpretation soap_POST_recv_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation

#endif
/* _resqml20__StratigraphicColumnRankInterpretation is a typedef synonym of resqml20__obj_USCOREStratigraphicColumnRankInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation_DEFINED

#define soap_default__resqml20__StratigraphicColumnRankInterpretation(soap, a) (a)->resqml20__obj_USCOREStratigraphicColumnRankInterpretation::soap_default(soap)


#define soap_serialize__resqml20__StratigraphicColumnRankInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StratigraphicColumnRankInterpretation2s soap_resqml20__obj_USCOREStratigraphicColumnRankInterpretation2s


#define soap_out__resqml20__StratigraphicColumnRankInterpretation soap_out_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_s2_resqml20__StratigraphicColumnRankInterpretation soap_s2resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_in__resqml20__StratigraphicColumnRankInterpretation soap_in_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_instantiate__resqml20__StratigraphicColumnRankInterpretation soap_instantiate_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new__resqml20__StratigraphicColumnRankInterpretation soap_new_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new_req__resqml20__StratigraphicColumnRankInterpretation soap_new_req_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new_set__resqml20__StratigraphicColumnRankInterpretation soap_new_set_resqml20__obj_USCOREStratigraphicColumnRankInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StratigraphicColumnRankInterpretation(struct soap*, const resqml20__obj_USCOREStratigraphicColumnRankInterpretation *, const char*, const char*);

inline int soap_write__resqml20__StratigraphicColumnRankInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StratigraphicColumnRankInterpretation soap_get_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_read__resqml20__StratigraphicColumnRankInterpretation soap_read_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_GET__resqml20__StratigraphicColumnRankInterpretation soap_GET_resqml20__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_POST_recv__resqml20__StratigraphicColumnRankInterpretation soap_POST_recv_resqml20__obj_USCOREStratigraphicColumnRankInterpretation

#endif
/* _resqml20__StratigraphicColumn is a typedef synonym of resqml20__obj_USCOREStratigraphicColumn */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn_DEFINED

#define soap_default__resqml20__StratigraphicColumn(soap, a) (a)->resqml20__obj_USCOREStratigraphicColumn::soap_default(soap)


#define soap_serialize__resqml20__StratigraphicColumn(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StratigraphicColumn2s soap_resqml20__obj_USCOREStratigraphicColumn2s


#define soap_out__resqml20__StratigraphicColumn soap_out_resqml20__obj_USCOREStratigraphicColumn


#define soap_s2_resqml20__StratigraphicColumn soap_s2resqml20__obj_USCOREStratigraphicColumn


#define soap_in__resqml20__StratigraphicColumn soap_in_resqml20__obj_USCOREStratigraphicColumn


#define soap_instantiate__resqml20__StratigraphicColumn soap_instantiate_resqml20__obj_USCOREStratigraphicColumn


#define soap_new__resqml20__StratigraphicColumn soap_new_resqml20__obj_USCOREStratigraphicColumn


#define soap_new_req__resqml20__StratigraphicColumn soap_new_req_resqml20__obj_USCOREStratigraphicColumn


#define soap_new_set__resqml20__StratigraphicColumn soap_new_set_resqml20__obj_USCOREStratigraphicColumn

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StratigraphicColumn(struct soap*, const resqml20__obj_USCOREStratigraphicColumn *, const char*, const char*);

inline int soap_write__resqml20__StratigraphicColumn(struct soap *soap, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StratigraphicColumn soap_get_resqml20__obj_USCOREStratigraphicColumn


#define soap_read__resqml20__StratigraphicColumn soap_read_resqml20__obj_USCOREStratigraphicColumn


#define soap_GET__resqml20__StratigraphicColumn soap_GET_resqml20__obj_USCOREStratigraphicColumn


#define soap_POST_recv__resqml20__StratigraphicColumn soap_POST_recv_resqml20__obj_USCOREStratigraphicColumn

#endif
/* _resqml20__GeologicUnitInterpretation is a typedef synonym of resqml20__obj_USCOREGeologicUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation_DEFINED

#define soap_default__resqml20__GeologicUnitInterpretation(soap, a) (a)->resqml20__obj_USCOREGeologicUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml20__GeologicUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeologicUnitInterpretation2s soap_resqml20__obj_USCOREGeologicUnitInterpretation2s


#define soap_out__resqml20__GeologicUnitInterpretation soap_out_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_s2_resqml20__GeologicUnitInterpretation soap_s2resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_in__resqml20__GeologicUnitInterpretation soap_in_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_instantiate__resqml20__GeologicUnitInterpretation soap_instantiate_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_new__resqml20__GeologicUnitInterpretation soap_new_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_new_req__resqml20__GeologicUnitInterpretation soap_new_req_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_new_set__resqml20__GeologicUnitInterpretation soap_new_set_resqml20__obj_USCOREGeologicUnitInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeologicUnitInterpretation(struct soap*, const resqml20__obj_USCOREGeologicUnitInterpretation *, const char*, const char*);

inline int soap_write__resqml20__GeologicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeologicUnitInterpretation soap_get_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_read__resqml20__GeologicUnitInterpretation soap_read_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_GET__resqml20__GeologicUnitInterpretation soap_GET_resqml20__obj_USCOREGeologicUnitInterpretation


#define soap_POST_recv__resqml20__GeologicUnitInterpretation soap_POST_recv_resqml20__obj_USCOREGeologicUnitInterpretation

#endif
/* _resqml20__GenericFeatureInterpretation is a typedef synonym of resqml20__obj_USCOREGenericFeatureInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation_DEFINED

#define soap_default__resqml20__GenericFeatureInterpretation(soap, a) (a)->resqml20__obj_USCOREGenericFeatureInterpretation::soap_default(soap)


#define soap_serialize__resqml20__GenericFeatureInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GenericFeatureInterpretation2s soap_resqml20__obj_USCOREGenericFeatureInterpretation2s


#define soap_out__resqml20__GenericFeatureInterpretation soap_out_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_s2_resqml20__GenericFeatureInterpretation soap_s2resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_in__resqml20__GenericFeatureInterpretation soap_in_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_instantiate__resqml20__GenericFeatureInterpretation soap_instantiate_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_new__resqml20__GenericFeatureInterpretation soap_new_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_new_req__resqml20__GenericFeatureInterpretation soap_new_req_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_new_set__resqml20__GenericFeatureInterpretation soap_new_set_resqml20__obj_USCOREGenericFeatureInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GenericFeatureInterpretation(struct soap*, const resqml20__obj_USCOREGenericFeatureInterpretation *, const char*, const char*);

inline int soap_write__resqml20__GenericFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GenericFeatureInterpretation soap_get_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_read__resqml20__GenericFeatureInterpretation soap_read_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_GET__resqml20__GenericFeatureInterpretation soap_GET_resqml20__obj_USCOREGenericFeatureInterpretation


#define soap_POST_recv__resqml20__GenericFeatureInterpretation soap_POST_recv_resqml20__obj_USCOREGenericFeatureInterpretation

#endif
/* _resqml20__BoundaryFeatureInterpretation is a typedef synonym of resqml20__obj_USCOREBoundaryFeatureInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation_DEFINED

#define soap_default__resqml20__BoundaryFeatureInterpretation(soap, a) (a)->resqml20__obj_USCOREBoundaryFeatureInterpretation::soap_default(soap)


#define soap_serialize__resqml20__BoundaryFeatureInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__BoundaryFeatureInterpretation2s soap_resqml20__obj_USCOREBoundaryFeatureInterpretation2s


#define soap_out__resqml20__BoundaryFeatureInterpretation soap_out_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_s2_resqml20__BoundaryFeatureInterpretation soap_s2resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_in__resqml20__BoundaryFeatureInterpretation soap_in_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_instantiate__resqml20__BoundaryFeatureInterpretation soap_instantiate_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_new__resqml20__BoundaryFeatureInterpretation soap_new_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_new_req__resqml20__BoundaryFeatureInterpretation soap_new_req_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_new_set__resqml20__BoundaryFeatureInterpretation soap_new_set_resqml20__obj_USCOREBoundaryFeatureInterpretation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__BoundaryFeatureInterpretation(struct soap*, const resqml20__obj_USCOREBoundaryFeatureInterpretation *, const char*, const char*);

inline int soap_write__resqml20__BoundaryFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__BoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__BoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__BoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__BoundaryFeatureInterpretation soap_get_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_read__resqml20__BoundaryFeatureInterpretation soap_read_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_GET__resqml20__BoundaryFeatureInterpretation soap_GET_resqml20__obj_USCOREBoundaryFeatureInterpretation


#define soap_POST_recv__resqml20__BoundaryFeatureInterpretation soap_POST_recv_resqml20__obj_USCOREBoundaryFeatureInterpretation

#endif
/* _resqml20__WellboreFeature is a typedef synonym of resqml20__obj_USCOREWellboreFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature_DEFINED

#define soap_default__resqml20__WellboreFeature(soap, a) (a)->resqml20__obj_USCOREWellboreFeature::soap_default(soap)


#define soap_serialize__resqml20__WellboreFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__WellboreFeature2s soap_resqml20__obj_USCOREWellboreFeature2s


#define soap_out__resqml20__WellboreFeature soap_out_resqml20__obj_USCOREWellboreFeature


#define soap_s2_resqml20__WellboreFeature soap_s2resqml20__obj_USCOREWellboreFeature


#define soap_in__resqml20__WellboreFeature soap_in_resqml20__obj_USCOREWellboreFeature


#define soap_instantiate__resqml20__WellboreFeature soap_instantiate_resqml20__obj_USCOREWellboreFeature


#define soap_new__resqml20__WellboreFeature soap_new_resqml20__obj_USCOREWellboreFeature


#define soap_new_req__resqml20__WellboreFeature soap_new_req_resqml20__obj_USCOREWellboreFeature


#define soap_new_set__resqml20__WellboreFeature soap_new_set_resqml20__obj_USCOREWellboreFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__WellboreFeature(struct soap*, const resqml20__obj_USCOREWellboreFeature *, const char*, const char*);

inline int soap_write__resqml20__WellboreFeature(struct soap *soap, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__WellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__WellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__WellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__WellboreFeature soap_get_resqml20__obj_USCOREWellboreFeature


#define soap_read__resqml20__WellboreFeature soap_read_resqml20__obj_USCOREWellboreFeature


#define soap_GET__resqml20__WellboreFeature soap_GET_resqml20__obj_USCOREWellboreFeature


#define soap_POST_recv__resqml20__WellboreFeature soap_POST_recv_resqml20__obj_USCOREWellboreFeature

#endif
/* _resqml20__SeismicLineSetFeature is a typedef synonym of resqml20__obj_USCORESeismicLineSetFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature_DEFINED

#define soap_default__resqml20__SeismicLineSetFeature(soap, a) (a)->resqml20__obj_USCORESeismicLineSetFeature::soap_default(soap)


#define soap_serialize__resqml20__SeismicLineSetFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SeismicLineSetFeature2s soap_resqml20__obj_USCORESeismicLineSetFeature2s


#define soap_out__resqml20__SeismicLineSetFeature soap_out_resqml20__obj_USCORESeismicLineSetFeature


#define soap_s2_resqml20__SeismicLineSetFeature soap_s2resqml20__obj_USCORESeismicLineSetFeature


#define soap_in__resqml20__SeismicLineSetFeature soap_in_resqml20__obj_USCORESeismicLineSetFeature


#define soap_instantiate__resqml20__SeismicLineSetFeature soap_instantiate_resqml20__obj_USCORESeismicLineSetFeature


#define soap_new__resqml20__SeismicLineSetFeature soap_new_resqml20__obj_USCORESeismicLineSetFeature


#define soap_new_req__resqml20__SeismicLineSetFeature soap_new_req_resqml20__obj_USCORESeismicLineSetFeature


#define soap_new_set__resqml20__SeismicLineSetFeature soap_new_set_resqml20__obj_USCORESeismicLineSetFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SeismicLineSetFeature(struct soap*, const resqml20__obj_USCORESeismicLineSetFeature *, const char*, const char*);

inline int soap_write__resqml20__SeismicLineSetFeature(struct soap *soap, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SeismicLineSetFeature soap_get_resqml20__obj_USCORESeismicLineSetFeature


#define soap_read__resqml20__SeismicLineSetFeature soap_read_resqml20__obj_USCORESeismicLineSetFeature


#define soap_GET__resqml20__SeismicLineSetFeature soap_GET_resqml20__obj_USCORESeismicLineSetFeature


#define soap_POST_recv__resqml20__SeismicLineSetFeature soap_POST_recv_resqml20__obj_USCORESeismicLineSetFeature

#endif
/* _resqml20__SeismicLineFeature is a typedef synonym of resqml20__obj_USCORESeismicLineFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature_DEFINED

#define soap_default__resqml20__SeismicLineFeature(soap, a) (a)->resqml20__obj_USCORESeismicLineFeature::soap_default(soap)


#define soap_serialize__resqml20__SeismicLineFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SeismicLineFeature2s soap_resqml20__obj_USCORESeismicLineFeature2s


#define soap_out__resqml20__SeismicLineFeature soap_out_resqml20__obj_USCORESeismicLineFeature


#define soap_s2_resqml20__SeismicLineFeature soap_s2resqml20__obj_USCORESeismicLineFeature


#define soap_in__resqml20__SeismicLineFeature soap_in_resqml20__obj_USCORESeismicLineFeature


#define soap_instantiate__resqml20__SeismicLineFeature soap_instantiate_resqml20__obj_USCORESeismicLineFeature


#define soap_new__resqml20__SeismicLineFeature soap_new_resqml20__obj_USCORESeismicLineFeature


#define soap_new_req__resqml20__SeismicLineFeature soap_new_req_resqml20__obj_USCORESeismicLineFeature


#define soap_new_set__resqml20__SeismicLineFeature soap_new_set_resqml20__obj_USCORESeismicLineFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SeismicLineFeature(struct soap*, const resqml20__obj_USCORESeismicLineFeature *, const char*, const char*);

inline int soap_write__resqml20__SeismicLineFeature(struct soap *soap, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SeismicLineFeature soap_get_resqml20__obj_USCORESeismicLineFeature


#define soap_read__resqml20__SeismicLineFeature soap_read_resqml20__obj_USCORESeismicLineFeature


#define soap_GET__resqml20__SeismicLineFeature soap_GET_resqml20__obj_USCORESeismicLineFeature


#define soap_POST_recv__resqml20__SeismicLineFeature soap_POST_recv_resqml20__obj_USCORESeismicLineFeature

#endif
/* _resqml20__SeismicLatticeFeature is a typedef synonym of resqml20__obj_USCORESeismicLatticeFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature_DEFINED

#define soap_default__resqml20__SeismicLatticeFeature(soap, a) (a)->resqml20__obj_USCORESeismicLatticeFeature::soap_default(soap)


#define soap_serialize__resqml20__SeismicLatticeFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__SeismicLatticeFeature2s soap_resqml20__obj_USCORESeismicLatticeFeature2s


#define soap_out__resqml20__SeismicLatticeFeature soap_out_resqml20__obj_USCORESeismicLatticeFeature


#define soap_s2_resqml20__SeismicLatticeFeature soap_s2resqml20__obj_USCORESeismicLatticeFeature


#define soap_in__resqml20__SeismicLatticeFeature soap_in_resqml20__obj_USCORESeismicLatticeFeature


#define soap_instantiate__resqml20__SeismicLatticeFeature soap_instantiate_resqml20__obj_USCORESeismicLatticeFeature


#define soap_new__resqml20__SeismicLatticeFeature soap_new_resqml20__obj_USCORESeismicLatticeFeature


#define soap_new_req__resqml20__SeismicLatticeFeature soap_new_req_resqml20__obj_USCORESeismicLatticeFeature


#define soap_new_set__resqml20__SeismicLatticeFeature soap_new_set_resqml20__obj_USCORESeismicLatticeFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__SeismicLatticeFeature(struct soap*, const resqml20__obj_USCORESeismicLatticeFeature *, const char*, const char*);

inline int soap_write__resqml20__SeismicLatticeFeature(struct soap *soap, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__SeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__SeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__SeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__SeismicLatticeFeature soap_get_resqml20__obj_USCORESeismicLatticeFeature


#define soap_read__resqml20__SeismicLatticeFeature soap_read_resqml20__obj_USCORESeismicLatticeFeature


#define soap_GET__resqml20__SeismicLatticeFeature soap_GET_resqml20__obj_USCORESeismicLatticeFeature


#define soap_POST_recv__resqml20__SeismicLatticeFeature soap_POST_recv_resqml20__obj_USCORESeismicLatticeFeature

#endif
/* _resqml20__FrontierFeature is a typedef synonym of resqml20__obj_USCOREFrontierFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature_DEFINED

#define soap_default__resqml20__FrontierFeature(soap, a) (a)->resqml20__obj_USCOREFrontierFeature::soap_default(soap)


#define soap_serialize__resqml20__FrontierFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__FrontierFeature2s soap_resqml20__obj_USCOREFrontierFeature2s


#define soap_out__resqml20__FrontierFeature soap_out_resqml20__obj_USCOREFrontierFeature


#define soap_s2_resqml20__FrontierFeature soap_s2resqml20__obj_USCOREFrontierFeature


#define soap_in__resqml20__FrontierFeature soap_in_resqml20__obj_USCOREFrontierFeature


#define soap_instantiate__resqml20__FrontierFeature soap_instantiate_resqml20__obj_USCOREFrontierFeature


#define soap_new__resqml20__FrontierFeature soap_new_resqml20__obj_USCOREFrontierFeature


#define soap_new_req__resqml20__FrontierFeature soap_new_req_resqml20__obj_USCOREFrontierFeature


#define soap_new_set__resqml20__FrontierFeature soap_new_set_resqml20__obj_USCOREFrontierFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__FrontierFeature(struct soap*, const resqml20__obj_USCOREFrontierFeature *, const char*, const char*);

inline int soap_write__resqml20__FrontierFeature(struct soap *soap, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__FrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__FrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__FrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__FrontierFeature soap_get_resqml20__obj_USCOREFrontierFeature


#define soap_read__resqml20__FrontierFeature soap_read_resqml20__obj_USCOREFrontierFeature


#define soap_GET__resqml20__FrontierFeature soap_GET_resqml20__obj_USCOREFrontierFeature


#define soap_POST_recv__resqml20__FrontierFeature soap_POST_recv_resqml20__obj_USCOREFrontierFeature

#endif
/* _resqml20__OrganizationFeature is a typedef synonym of resqml20__obj_USCOREOrganizationFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature_DEFINED

#define soap_default__resqml20__OrganizationFeature(soap, a) (a)->resqml20__obj_USCOREOrganizationFeature::soap_default(soap)


#define soap_serialize__resqml20__OrganizationFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__OrganizationFeature2s soap_resqml20__obj_USCOREOrganizationFeature2s


#define soap_out__resqml20__OrganizationFeature soap_out_resqml20__obj_USCOREOrganizationFeature


#define soap_s2_resqml20__OrganizationFeature soap_s2resqml20__obj_USCOREOrganizationFeature


#define soap_in__resqml20__OrganizationFeature soap_in_resqml20__obj_USCOREOrganizationFeature


#define soap_instantiate__resqml20__OrganizationFeature soap_instantiate_resqml20__obj_USCOREOrganizationFeature


#define soap_new__resqml20__OrganizationFeature soap_new_resqml20__obj_USCOREOrganizationFeature


#define soap_new_req__resqml20__OrganizationFeature soap_new_req_resqml20__obj_USCOREOrganizationFeature


#define soap_new_set__resqml20__OrganizationFeature soap_new_set_resqml20__obj_USCOREOrganizationFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__OrganizationFeature(struct soap*, const resqml20__obj_USCOREOrganizationFeature *, const char*, const char*);

inline int soap_write__resqml20__OrganizationFeature(struct soap *soap, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__OrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__OrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__OrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__OrganizationFeature soap_get_resqml20__obj_USCOREOrganizationFeature


#define soap_read__resqml20__OrganizationFeature soap_read_resqml20__obj_USCOREOrganizationFeature


#define soap_GET__resqml20__OrganizationFeature soap_GET_resqml20__obj_USCOREOrganizationFeature


#define soap_POST_recv__resqml20__OrganizationFeature soap_POST_recv_resqml20__obj_USCOREOrganizationFeature

#endif
/* _resqml20__GeologicUnitFeature is a typedef synonym of resqml20__obj_USCOREGeologicUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature_DEFINED

#define soap_default__resqml20__GeologicUnitFeature(soap, a) (a)->resqml20__obj_USCOREGeologicUnitFeature::soap_default(soap)


#define soap_serialize__resqml20__GeologicUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeologicUnitFeature2s soap_resqml20__obj_USCOREGeologicUnitFeature2s


#define soap_out__resqml20__GeologicUnitFeature soap_out_resqml20__obj_USCOREGeologicUnitFeature


#define soap_s2_resqml20__GeologicUnitFeature soap_s2resqml20__obj_USCOREGeologicUnitFeature


#define soap_in__resqml20__GeologicUnitFeature soap_in_resqml20__obj_USCOREGeologicUnitFeature


#define soap_instantiate__resqml20__GeologicUnitFeature soap_instantiate_resqml20__obj_USCOREGeologicUnitFeature


#define soap_new__resqml20__GeologicUnitFeature soap_new_resqml20__obj_USCOREGeologicUnitFeature


#define soap_new_req__resqml20__GeologicUnitFeature soap_new_req_resqml20__obj_USCOREGeologicUnitFeature


#define soap_new_set__resqml20__GeologicUnitFeature soap_new_set_resqml20__obj_USCOREGeologicUnitFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeologicUnitFeature(struct soap*, const resqml20__obj_USCOREGeologicUnitFeature *, const char*, const char*);

inline int soap_write__resqml20__GeologicUnitFeature(struct soap *soap, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeologicUnitFeature soap_get_resqml20__obj_USCOREGeologicUnitFeature


#define soap_read__resqml20__GeologicUnitFeature soap_read_resqml20__obj_USCOREGeologicUnitFeature


#define soap_GET__resqml20__GeologicUnitFeature soap_GET_resqml20__obj_USCOREGeologicUnitFeature


#define soap_POST_recv__resqml20__GeologicUnitFeature soap_POST_recv_resqml20__obj_USCOREGeologicUnitFeature

#endif
/* _resqml20__BoundaryFeature is a typedef synonym of resqml20__obj_USCOREBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature_DEFINED

#define soap_default__resqml20__BoundaryFeature(soap, a) (a)->resqml20__obj_USCOREBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml20__BoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__BoundaryFeature2s soap_resqml20__obj_USCOREBoundaryFeature2s


#define soap_out__resqml20__BoundaryFeature soap_out_resqml20__obj_USCOREBoundaryFeature


#define soap_s2_resqml20__BoundaryFeature soap_s2resqml20__obj_USCOREBoundaryFeature


#define soap_in__resqml20__BoundaryFeature soap_in_resqml20__obj_USCOREBoundaryFeature


#define soap_instantiate__resqml20__BoundaryFeature soap_instantiate_resqml20__obj_USCOREBoundaryFeature


#define soap_new__resqml20__BoundaryFeature soap_new_resqml20__obj_USCOREBoundaryFeature


#define soap_new_req__resqml20__BoundaryFeature soap_new_req_resqml20__obj_USCOREBoundaryFeature


#define soap_new_set__resqml20__BoundaryFeature soap_new_set_resqml20__obj_USCOREBoundaryFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__BoundaryFeature(struct soap*, const resqml20__obj_USCOREBoundaryFeature *, const char*, const char*);

inline int soap_write__resqml20__BoundaryFeature(struct soap *soap, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__BoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__BoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__BoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__BoundaryFeature soap_get_resqml20__obj_USCOREBoundaryFeature


#define soap_read__resqml20__BoundaryFeature soap_read_resqml20__obj_USCOREBoundaryFeature


#define soap_GET__resqml20__BoundaryFeature soap_GET_resqml20__obj_USCOREBoundaryFeature


#define soap_POST_recv__resqml20__BoundaryFeature soap_POST_recv_resqml20__obj_USCOREBoundaryFeature

#endif
/* _resqml20__TectonicBoundaryFeature is a typedef synonym of resqml20__obj_USCORETectonicBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature_DEFINED

#define soap_default__resqml20__TectonicBoundaryFeature(soap, a) (a)->resqml20__obj_USCORETectonicBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml20__TectonicBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__TectonicBoundaryFeature2s soap_resqml20__obj_USCORETectonicBoundaryFeature2s


#define soap_out__resqml20__TectonicBoundaryFeature soap_out_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_s2_resqml20__TectonicBoundaryFeature soap_s2resqml20__obj_USCORETectonicBoundaryFeature


#define soap_in__resqml20__TectonicBoundaryFeature soap_in_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_instantiate__resqml20__TectonicBoundaryFeature soap_instantiate_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_new__resqml20__TectonicBoundaryFeature soap_new_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_new_req__resqml20__TectonicBoundaryFeature soap_new_req_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_new_set__resqml20__TectonicBoundaryFeature soap_new_set_resqml20__obj_USCORETectonicBoundaryFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__TectonicBoundaryFeature(struct soap*, const resqml20__obj_USCORETectonicBoundaryFeature *, const char*, const char*);

inline int soap_write__resqml20__TectonicBoundaryFeature(struct soap *soap, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__TectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__TectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__TectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__TectonicBoundaryFeature soap_get_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_read__resqml20__TectonicBoundaryFeature soap_read_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_GET__resqml20__TectonicBoundaryFeature soap_GET_resqml20__obj_USCORETectonicBoundaryFeature


#define soap_POST_recv__resqml20__TectonicBoundaryFeature soap_POST_recv_resqml20__obj_USCORETectonicBoundaryFeature

#endif
/* _resqml20__StratigraphicUnitFeature is a typedef synonym of resqml20__obj_USCOREStratigraphicUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature_DEFINED

#define soap_default__resqml20__StratigraphicUnitFeature(soap, a) (a)->resqml20__obj_USCOREStratigraphicUnitFeature::soap_default(soap)


#define soap_serialize__resqml20__StratigraphicUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StratigraphicUnitFeature2s soap_resqml20__obj_USCOREStratigraphicUnitFeature2s


#define soap_out__resqml20__StratigraphicUnitFeature soap_out_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_s2_resqml20__StratigraphicUnitFeature soap_s2resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_in__resqml20__StratigraphicUnitFeature soap_in_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_instantiate__resqml20__StratigraphicUnitFeature soap_instantiate_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_new__resqml20__StratigraphicUnitFeature soap_new_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_new_req__resqml20__StratigraphicUnitFeature soap_new_req_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_new_set__resqml20__StratigraphicUnitFeature soap_new_set_resqml20__obj_USCOREStratigraphicUnitFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StratigraphicUnitFeature(struct soap*, const resqml20__obj_USCOREStratigraphicUnitFeature *, const char*, const char*);

inline int soap_write__resqml20__StratigraphicUnitFeature(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StratigraphicUnitFeature soap_get_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_read__resqml20__StratigraphicUnitFeature soap_read_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_GET__resqml20__StratigraphicUnitFeature soap_GET_resqml20__obj_USCOREStratigraphicUnitFeature


#define soap_POST_recv__resqml20__StratigraphicUnitFeature soap_POST_recv_resqml20__obj_USCOREStratigraphicUnitFeature

#endif
/* _resqml20__RockFluidUnitFeature is a typedef synonym of resqml20__obj_USCORERockFluidUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature_DEFINED

#define soap_default__resqml20__RockFluidUnitFeature(soap, a) (a)->resqml20__obj_USCORERockFluidUnitFeature::soap_default(soap)


#define soap_serialize__resqml20__RockFluidUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__RockFluidUnitFeature2s soap_resqml20__obj_USCORERockFluidUnitFeature2s


#define soap_out__resqml20__RockFluidUnitFeature soap_out_resqml20__obj_USCORERockFluidUnitFeature


#define soap_s2_resqml20__RockFluidUnitFeature soap_s2resqml20__obj_USCORERockFluidUnitFeature


#define soap_in__resqml20__RockFluidUnitFeature soap_in_resqml20__obj_USCORERockFluidUnitFeature


#define soap_instantiate__resqml20__RockFluidUnitFeature soap_instantiate_resqml20__obj_USCORERockFluidUnitFeature


#define soap_new__resqml20__RockFluidUnitFeature soap_new_resqml20__obj_USCORERockFluidUnitFeature


#define soap_new_req__resqml20__RockFluidUnitFeature soap_new_req_resqml20__obj_USCORERockFluidUnitFeature


#define soap_new_set__resqml20__RockFluidUnitFeature soap_new_set_resqml20__obj_USCORERockFluidUnitFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__RockFluidUnitFeature(struct soap*, const resqml20__obj_USCORERockFluidUnitFeature *, const char*, const char*);

inline int soap_write__resqml20__RockFluidUnitFeature(struct soap *soap, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__RockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__RockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__RockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__RockFluidUnitFeature soap_get_resqml20__obj_USCORERockFluidUnitFeature


#define soap_read__resqml20__RockFluidUnitFeature soap_read_resqml20__obj_USCORERockFluidUnitFeature


#define soap_GET__resqml20__RockFluidUnitFeature soap_GET_resqml20__obj_USCORERockFluidUnitFeature


#define soap_POST_recv__resqml20__RockFluidUnitFeature soap_POST_recv_resqml20__obj_USCORERockFluidUnitFeature

#endif
/* _resqml20__GlobalChronostratigraphicColumn is a typedef synonym of resqml20__obj_USCOREGlobalChronostratigraphicColumn */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn_DEFINED

#define soap_default__resqml20__GlobalChronostratigraphicColumn(soap, a) (a)->resqml20__obj_USCOREGlobalChronostratigraphicColumn::soap_default(soap)


#define soap_serialize__resqml20__GlobalChronostratigraphicColumn(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GlobalChronostratigraphicColumn2s soap_resqml20__obj_USCOREGlobalChronostratigraphicColumn2s


#define soap_out__resqml20__GlobalChronostratigraphicColumn soap_out_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_s2_resqml20__GlobalChronostratigraphicColumn soap_s2resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_in__resqml20__GlobalChronostratigraphicColumn soap_in_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_instantiate__resqml20__GlobalChronostratigraphicColumn soap_instantiate_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new__resqml20__GlobalChronostratigraphicColumn soap_new_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new_req__resqml20__GlobalChronostratigraphicColumn soap_new_req_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new_set__resqml20__GlobalChronostratigraphicColumn soap_new_set_resqml20__obj_USCOREGlobalChronostratigraphicColumn

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GlobalChronostratigraphicColumn(struct soap*, const resqml20__obj_USCOREGlobalChronostratigraphicColumn *, const char*, const char*);

inline int soap_write__resqml20__GlobalChronostratigraphicColumn(struct soap *soap, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GlobalChronostratigraphicColumn soap_get_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_read__resqml20__GlobalChronostratigraphicColumn soap_read_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_GET__resqml20__GlobalChronostratigraphicColumn soap_GET_resqml20__obj_USCOREGlobalChronostratigraphicColumn


#define soap_POST_recv__resqml20__GlobalChronostratigraphicColumn soap_POST_recv_resqml20__obj_USCOREGlobalChronostratigraphicColumn

#endif
/* _resqml20__GeobodyFeature is a typedef synonym of resqml20__obj_USCOREGeobodyFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature_DEFINED

#define soap_default__resqml20__GeobodyFeature(soap, a) (a)->resqml20__obj_USCOREGeobodyFeature::soap_default(soap)


#define soap_serialize__resqml20__GeobodyFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeobodyFeature2s soap_resqml20__obj_USCOREGeobodyFeature2s


#define soap_out__resqml20__GeobodyFeature soap_out_resqml20__obj_USCOREGeobodyFeature


#define soap_s2_resqml20__GeobodyFeature soap_s2resqml20__obj_USCOREGeobodyFeature


#define soap_in__resqml20__GeobodyFeature soap_in_resqml20__obj_USCOREGeobodyFeature


#define soap_instantiate__resqml20__GeobodyFeature soap_instantiate_resqml20__obj_USCOREGeobodyFeature


#define soap_new__resqml20__GeobodyFeature soap_new_resqml20__obj_USCOREGeobodyFeature


#define soap_new_req__resqml20__GeobodyFeature soap_new_req_resqml20__obj_USCOREGeobodyFeature


#define soap_new_set__resqml20__GeobodyFeature soap_new_set_resqml20__obj_USCOREGeobodyFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeobodyFeature(struct soap*, const resqml20__obj_USCOREGeobodyFeature *, const char*, const char*);

inline int soap_write__resqml20__GeobodyFeature(struct soap *soap, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeobodyFeature soap_get_resqml20__obj_USCOREGeobodyFeature


#define soap_read__resqml20__GeobodyFeature soap_read_resqml20__obj_USCOREGeobodyFeature


#define soap_GET__resqml20__GeobodyFeature soap_GET_resqml20__obj_USCOREGeobodyFeature


#define soap_POST_recv__resqml20__GeobodyFeature soap_POST_recv_resqml20__obj_USCOREGeobodyFeature

#endif
/* _resqml20__GeneticBoundaryFeature is a typedef synonym of resqml20__obj_USCOREGeneticBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature_DEFINED

#define soap_default__resqml20__GeneticBoundaryFeature(soap, a) (a)->resqml20__obj_USCOREGeneticBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml20__GeneticBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__GeneticBoundaryFeature2s soap_resqml20__obj_USCOREGeneticBoundaryFeature2s


#define soap_out__resqml20__GeneticBoundaryFeature soap_out_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_s2_resqml20__GeneticBoundaryFeature soap_s2resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_in__resqml20__GeneticBoundaryFeature soap_in_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_instantiate__resqml20__GeneticBoundaryFeature soap_instantiate_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_new__resqml20__GeneticBoundaryFeature soap_new_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_new_req__resqml20__GeneticBoundaryFeature soap_new_req_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_new_set__resqml20__GeneticBoundaryFeature soap_new_set_resqml20__obj_USCOREGeneticBoundaryFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__GeneticBoundaryFeature(struct soap*, const resqml20__obj_USCOREGeneticBoundaryFeature *, const char*, const char*);

inline int soap_write__resqml20__GeneticBoundaryFeature(struct soap *soap, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__GeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__GeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__GeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__GeneticBoundaryFeature soap_get_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_read__resqml20__GeneticBoundaryFeature soap_read_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_GET__resqml20__GeneticBoundaryFeature soap_GET_resqml20__obj_USCOREGeneticBoundaryFeature


#define soap_POST_recv__resqml20__GeneticBoundaryFeature soap_POST_recv_resqml20__obj_USCOREGeneticBoundaryFeature

#endif
/* _resqml20__FluidBoundaryFeature is a typedef synonym of resqml20__obj_USCOREFluidBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature_DEFINED

#define soap_default__resqml20__FluidBoundaryFeature(soap, a) (a)->resqml20__obj_USCOREFluidBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml20__FluidBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__FluidBoundaryFeature2s soap_resqml20__obj_USCOREFluidBoundaryFeature2s


#define soap_out__resqml20__FluidBoundaryFeature soap_out_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_s2_resqml20__FluidBoundaryFeature soap_s2resqml20__obj_USCOREFluidBoundaryFeature


#define soap_in__resqml20__FluidBoundaryFeature soap_in_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_instantiate__resqml20__FluidBoundaryFeature soap_instantiate_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_new__resqml20__FluidBoundaryFeature soap_new_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_new_req__resqml20__FluidBoundaryFeature soap_new_req_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_new_set__resqml20__FluidBoundaryFeature soap_new_set_resqml20__obj_USCOREFluidBoundaryFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__FluidBoundaryFeature(struct soap*, const resqml20__obj_USCOREFluidBoundaryFeature *, const char*, const char*);

inline int soap_write__resqml20__FluidBoundaryFeature(struct soap *soap, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__FluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__FluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__FluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__FluidBoundaryFeature soap_get_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_read__resqml20__FluidBoundaryFeature soap_read_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_GET__resqml20__FluidBoundaryFeature soap_GET_resqml20__obj_USCOREFluidBoundaryFeature


#define soap_POST_recv__resqml20__FluidBoundaryFeature soap_POST_recv_resqml20__obj_USCOREFluidBoundaryFeature

#endif
/* _resqml20__TimeSeries is a typedef synonym of resqml20__obj_USCORETimeSeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries_DEFINED

#define soap_default__resqml20__TimeSeries(soap, a) (a)->resqml20__obj_USCORETimeSeries::soap_default(soap)


#define soap_serialize__resqml20__TimeSeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__TimeSeries2s soap_resqml20__obj_USCORETimeSeries2s


#define soap_out__resqml20__TimeSeries soap_out_resqml20__obj_USCORETimeSeries


#define soap_s2_resqml20__TimeSeries soap_s2resqml20__obj_USCORETimeSeries


#define soap_in__resqml20__TimeSeries soap_in_resqml20__obj_USCORETimeSeries


#define soap_instantiate__resqml20__TimeSeries soap_instantiate_resqml20__obj_USCORETimeSeries


#define soap_new__resqml20__TimeSeries soap_new_resqml20__obj_USCORETimeSeries


#define soap_new_req__resqml20__TimeSeries soap_new_req_resqml20__obj_USCORETimeSeries


#define soap_new_set__resqml20__TimeSeries soap_new_set_resqml20__obj_USCORETimeSeries

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__TimeSeries(struct soap*, const resqml20__obj_USCORETimeSeries *, const char*, const char*);

inline int soap_write__resqml20__TimeSeries(struct soap *soap, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__TimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__TimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__TimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__TimeSeries soap_get_resqml20__obj_USCORETimeSeries


#define soap_read__resqml20__TimeSeries soap_read_resqml20__obj_USCORETimeSeries


#define soap_GET__resqml20__TimeSeries soap_GET_resqml20__obj_USCORETimeSeries


#define soap_POST_recv__resqml20__TimeSeries soap_POST_recv_resqml20__obj_USCORETimeSeries

#endif
/* _resqml20__LocalTime3dCrs is a typedef synonym of resqml20__obj_USCORELocalTime3dCrs */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs_DEFINED

#define soap_default__resqml20__LocalTime3dCrs(soap, a) (a)->resqml20__obj_USCORELocalTime3dCrs::soap_default(soap)


#define soap_serialize__resqml20__LocalTime3dCrs(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__LocalTime3dCrs2s soap_resqml20__obj_USCORELocalTime3dCrs2s


#define soap_out__resqml20__LocalTime3dCrs soap_out_resqml20__obj_USCORELocalTime3dCrs


#define soap_s2_resqml20__LocalTime3dCrs soap_s2resqml20__obj_USCORELocalTime3dCrs


#define soap_in__resqml20__LocalTime3dCrs soap_in_resqml20__obj_USCORELocalTime3dCrs


#define soap_instantiate__resqml20__LocalTime3dCrs soap_instantiate_resqml20__obj_USCORELocalTime3dCrs


#define soap_new__resqml20__LocalTime3dCrs soap_new_resqml20__obj_USCORELocalTime3dCrs


#define soap_new_req__resqml20__LocalTime3dCrs soap_new_req_resqml20__obj_USCORELocalTime3dCrs


#define soap_new_set__resqml20__LocalTime3dCrs soap_new_set_resqml20__obj_USCORELocalTime3dCrs

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__LocalTime3dCrs(struct soap*, const resqml20__obj_USCORELocalTime3dCrs *, const char*, const char*);

inline int soap_write__resqml20__LocalTime3dCrs(struct soap *soap, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__LocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__LocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__LocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__LocalTime3dCrs soap_get_resqml20__obj_USCORELocalTime3dCrs


#define soap_read__resqml20__LocalTime3dCrs soap_read_resqml20__obj_USCORELocalTime3dCrs


#define soap_GET__resqml20__LocalTime3dCrs soap_GET_resqml20__obj_USCORELocalTime3dCrs


#define soap_POST_recv__resqml20__LocalTime3dCrs soap_POST_recv_resqml20__obj_USCORELocalTime3dCrs

#endif
/* _resqml20__LocalDepth3dCrs is a typedef synonym of resqml20__obj_USCORELocalDepth3dCrs */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs_DEFINED

#define soap_default__resqml20__LocalDepth3dCrs(soap, a) (a)->resqml20__obj_USCORELocalDepth3dCrs::soap_default(soap)


#define soap_serialize__resqml20__LocalDepth3dCrs(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__LocalDepth3dCrs2s soap_resqml20__obj_USCORELocalDepth3dCrs2s


#define soap_out__resqml20__LocalDepth3dCrs soap_out_resqml20__obj_USCORELocalDepth3dCrs


#define soap_s2_resqml20__LocalDepth3dCrs soap_s2resqml20__obj_USCORELocalDepth3dCrs


#define soap_in__resqml20__LocalDepth3dCrs soap_in_resqml20__obj_USCORELocalDepth3dCrs


#define soap_instantiate__resqml20__LocalDepth3dCrs soap_instantiate_resqml20__obj_USCORELocalDepth3dCrs


#define soap_new__resqml20__LocalDepth3dCrs soap_new_resqml20__obj_USCORELocalDepth3dCrs


#define soap_new_req__resqml20__LocalDepth3dCrs soap_new_req_resqml20__obj_USCORELocalDepth3dCrs


#define soap_new_set__resqml20__LocalDepth3dCrs soap_new_set_resqml20__obj_USCORELocalDepth3dCrs

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__LocalDepth3dCrs(struct soap*, const resqml20__obj_USCORELocalDepth3dCrs *, const char*, const char*);

inline int soap_write__resqml20__LocalDepth3dCrs(struct soap *soap, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__LocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__LocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__LocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__LocalDepth3dCrs soap_get_resqml20__obj_USCORELocalDepth3dCrs


#define soap_read__resqml20__LocalDepth3dCrs soap_read_resqml20__obj_USCORELocalDepth3dCrs


#define soap_GET__resqml20__LocalDepth3dCrs soap_GET_resqml20__obj_USCORELocalDepth3dCrs


#define soap_POST_recv__resqml20__LocalDepth3dCrs soap_POST_recv_resqml20__obj_USCORELocalDepth3dCrs

#endif
/* _resqml20__StreamlinesRepresentation is a typedef synonym of resqml20__obj_USCOREStreamlinesRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation_DEFINED

#define soap_default__resqml20__StreamlinesRepresentation(soap, a) (a)->resqml20__obj_USCOREStreamlinesRepresentation::soap_default(soap)


#define soap_serialize__resqml20__StreamlinesRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StreamlinesRepresentation2s soap_resqml20__obj_USCOREStreamlinesRepresentation2s


#define soap_out__resqml20__StreamlinesRepresentation soap_out_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_s2_resqml20__StreamlinesRepresentation soap_s2resqml20__obj_USCOREStreamlinesRepresentation


#define soap_in__resqml20__StreamlinesRepresentation soap_in_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_instantiate__resqml20__StreamlinesRepresentation soap_instantiate_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_new__resqml20__StreamlinesRepresentation soap_new_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_new_req__resqml20__StreamlinesRepresentation soap_new_req_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_new_set__resqml20__StreamlinesRepresentation soap_new_set_resqml20__obj_USCOREStreamlinesRepresentation

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StreamlinesRepresentation(struct soap*, const resqml20__obj_USCOREStreamlinesRepresentation *, const char*, const char*);

inline int soap_write__resqml20__StreamlinesRepresentation(struct soap *soap, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StreamlinesRepresentation soap_get_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_read__resqml20__StreamlinesRepresentation soap_read_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_GET__resqml20__StreamlinesRepresentation soap_GET_resqml20__obj_USCOREStreamlinesRepresentation


#define soap_POST_recv__resqml20__StreamlinesRepresentation soap_POST_recv_resqml20__obj_USCOREStreamlinesRepresentation

#endif
/* _resqml20__StreamlinesFeature is a typedef synonym of resqml20__obj_USCOREStreamlinesFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature_DEFINED

#define soap_default__resqml20__StreamlinesFeature(soap, a) (a)->resqml20__obj_USCOREStreamlinesFeature::soap_default(soap)


#define soap_serialize__resqml20__StreamlinesFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__StreamlinesFeature2s soap_resqml20__obj_USCOREStreamlinesFeature2s


#define soap_out__resqml20__StreamlinesFeature soap_out_resqml20__obj_USCOREStreamlinesFeature


#define soap_s2_resqml20__StreamlinesFeature soap_s2resqml20__obj_USCOREStreamlinesFeature


#define soap_in__resqml20__StreamlinesFeature soap_in_resqml20__obj_USCOREStreamlinesFeature


#define soap_instantiate__resqml20__StreamlinesFeature soap_instantiate_resqml20__obj_USCOREStreamlinesFeature


#define soap_new__resqml20__StreamlinesFeature soap_new_resqml20__obj_USCOREStreamlinesFeature


#define soap_new_req__resqml20__StreamlinesFeature soap_new_req_resqml20__obj_USCOREStreamlinesFeature


#define soap_new_set__resqml20__StreamlinesFeature soap_new_set_resqml20__obj_USCOREStreamlinesFeature

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__StreamlinesFeature(struct soap*, const resqml20__obj_USCOREStreamlinesFeature *, const char*, const char*);

inline int soap_write__resqml20__StreamlinesFeature(struct soap *soap, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__StreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__StreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__StreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__StreamlinesFeature soap_get_resqml20__obj_USCOREStreamlinesFeature


#define soap_read__resqml20__StreamlinesFeature soap_read_resqml20__obj_USCOREStreamlinesFeature


#define soap_GET__resqml20__StreamlinesFeature soap_GET_resqml20__obj_USCOREStreamlinesFeature


#define soap_POST_recv__resqml20__StreamlinesFeature soap_POST_recv_resqml20__obj_USCOREStreamlinesFeature

#endif
/* _resqml20__DiscretePropertySeries is a typedef synonym of resqml20__obj_USCOREDiscretePropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries_DEFINED

#define soap_default__resqml20__DiscretePropertySeries(soap, a) (a)->resqml20__obj_USCOREDiscretePropertySeries::soap_default(soap)


#define soap_serialize__resqml20__DiscretePropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__DiscretePropertySeries2s soap_resqml20__obj_USCOREDiscretePropertySeries2s


#define soap_out__resqml20__DiscretePropertySeries soap_out_resqml20__obj_USCOREDiscretePropertySeries


#define soap_s2_resqml20__DiscretePropertySeries soap_s2resqml20__obj_USCOREDiscretePropertySeries


#define soap_in__resqml20__DiscretePropertySeries soap_in_resqml20__obj_USCOREDiscretePropertySeries


#define soap_instantiate__resqml20__DiscretePropertySeries soap_instantiate_resqml20__obj_USCOREDiscretePropertySeries


#define soap_new__resqml20__DiscretePropertySeries soap_new_resqml20__obj_USCOREDiscretePropertySeries


#define soap_new_req__resqml20__DiscretePropertySeries soap_new_req_resqml20__obj_USCOREDiscretePropertySeries


#define soap_new_set__resqml20__DiscretePropertySeries soap_new_set_resqml20__obj_USCOREDiscretePropertySeries

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__DiscretePropertySeries(struct soap*, const resqml20__obj_USCOREDiscretePropertySeries *, const char*, const char*);

inline int soap_write__resqml20__DiscretePropertySeries(struct soap *soap, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__DiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__DiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__DiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__DiscretePropertySeries soap_get_resqml20__obj_USCOREDiscretePropertySeries


#define soap_read__resqml20__DiscretePropertySeries soap_read_resqml20__obj_USCOREDiscretePropertySeries


#define soap_GET__resqml20__DiscretePropertySeries soap_GET_resqml20__obj_USCOREDiscretePropertySeries


#define soap_POST_recv__resqml20__DiscretePropertySeries soap_POST_recv_resqml20__obj_USCOREDiscretePropertySeries

#endif
/* _resqml20__ContinuousPropertySeries is a typedef synonym of resqml20__obj_USCOREContinuousPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries_DEFINED

#define soap_default__resqml20__ContinuousPropertySeries(soap, a) (a)->resqml20__obj_USCOREContinuousPropertySeries::soap_default(soap)


#define soap_serialize__resqml20__ContinuousPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__ContinuousPropertySeries2s soap_resqml20__obj_USCOREContinuousPropertySeries2s


#define soap_out__resqml20__ContinuousPropertySeries soap_out_resqml20__obj_USCOREContinuousPropertySeries


#define soap_s2_resqml20__ContinuousPropertySeries soap_s2resqml20__obj_USCOREContinuousPropertySeries


#define soap_in__resqml20__ContinuousPropertySeries soap_in_resqml20__obj_USCOREContinuousPropertySeries


#define soap_instantiate__resqml20__ContinuousPropertySeries soap_instantiate_resqml20__obj_USCOREContinuousPropertySeries


#define soap_new__resqml20__ContinuousPropertySeries soap_new_resqml20__obj_USCOREContinuousPropertySeries


#define soap_new_req__resqml20__ContinuousPropertySeries soap_new_req_resqml20__obj_USCOREContinuousPropertySeries


#define soap_new_set__resqml20__ContinuousPropertySeries soap_new_set_resqml20__obj_USCOREContinuousPropertySeries

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__ContinuousPropertySeries(struct soap*, const resqml20__obj_USCOREContinuousPropertySeries *, const char*, const char*);

inline int soap_write__resqml20__ContinuousPropertySeries(struct soap *soap, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__ContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__ContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__ContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__ContinuousPropertySeries soap_get_resqml20__obj_USCOREContinuousPropertySeries


#define soap_read__resqml20__ContinuousPropertySeries soap_read_resqml20__obj_USCOREContinuousPropertySeries


#define soap_GET__resqml20__ContinuousPropertySeries soap_GET_resqml20__obj_USCOREContinuousPropertySeries


#define soap_POST_recv__resqml20__ContinuousPropertySeries soap_POST_recv_resqml20__obj_USCOREContinuousPropertySeries

#endif
/* _resqml20__CommentPropertySeries is a typedef synonym of resqml20__obj_USCORECommentPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries_DEFINED

#define soap_default__resqml20__CommentPropertySeries(soap, a) (a)->resqml20__obj_USCORECommentPropertySeries::soap_default(soap)


#define soap_serialize__resqml20__CommentPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__CommentPropertySeries2s soap_resqml20__obj_USCORECommentPropertySeries2s


#define soap_out__resqml20__CommentPropertySeries soap_out_resqml20__obj_USCORECommentPropertySeries


#define soap_s2_resqml20__CommentPropertySeries soap_s2resqml20__obj_USCORECommentPropertySeries


#define soap_in__resqml20__CommentPropertySeries soap_in_resqml20__obj_USCORECommentPropertySeries


#define soap_instantiate__resqml20__CommentPropertySeries soap_instantiate_resqml20__obj_USCORECommentPropertySeries


#define soap_new__resqml20__CommentPropertySeries soap_new_resqml20__obj_USCORECommentPropertySeries


#define soap_new_req__resqml20__CommentPropertySeries soap_new_req_resqml20__obj_USCORECommentPropertySeries


#define soap_new_set__resqml20__CommentPropertySeries soap_new_set_resqml20__obj_USCORECommentPropertySeries

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__CommentPropertySeries(struct soap*, const resqml20__obj_USCORECommentPropertySeries *, const char*, const char*);

inline int soap_write__resqml20__CommentPropertySeries(struct soap *soap, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__CommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__CommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__CommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__CommentPropertySeries soap_get_resqml20__obj_USCORECommentPropertySeries


#define soap_read__resqml20__CommentPropertySeries soap_read_resqml20__obj_USCORECommentPropertySeries


#define soap_GET__resqml20__CommentPropertySeries soap_GET_resqml20__obj_USCORECommentPropertySeries


#define soap_POST_recv__resqml20__CommentPropertySeries soap_POST_recv_resqml20__obj_USCORECommentPropertySeries

#endif
/* _resqml20__CategoricalPropertySeries is a typedef synonym of resqml20__obj_USCORECategoricalPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries_DEFINED

#define soap_default__resqml20__CategoricalPropertySeries(soap, a) (a)->resqml20__obj_USCORECategoricalPropertySeries::soap_default(soap)


#define soap_serialize__resqml20__CategoricalPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__CategoricalPropertySeries2s soap_resqml20__obj_USCORECategoricalPropertySeries2s


#define soap_out__resqml20__CategoricalPropertySeries soap_out_resqml20__obj_USCORECategoricalPropertySeries


#define soap_s2_resqml20__CategoricalPropertySeries soap_s2resqml20__obj_USCORECategoricalPropertySeries


#define soap_in__resqml20__CategoricalPropertySeries soap_in_resqml20__obj_USCORECategoricalPropertySeries


#define soap_instantiate__resqml20__CategoricalPropertySeries soap_instantiate_resqml20__obj_USCORECategoricalPropertySeries


#define soap_new__resqml20__CategoricalPropertySeries soap_new_resqml20__obj_USCORECategoricalPropertySeries


#define soap_new_req__resqml20__CategoricalPropertySeries soap_new_req_resqml20__obj_USCORECategoricalPropertySeries


#define soap_new_set__resqml20__CategoricalPropertySeries soap_new_set_resqml20__obj_USCORECategoricalPropertySeries

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__CategoricalPropertySeries(struct soap*, const resqml20__obj_USCORECategoricalPropertySeries *, const char*, const char*);

inline int soap_write__resqml20__CategoricalPropertySeries(struct soap *soap, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__CategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__CategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__CategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__CategoricalPropertySeries soap_get_resqml20__obj_USCORECategoricalPropertySeries


#define soap_read__resqml20__CategoricalPropertySeries soap_read_resqml20__obj_USCORECategoricalPropertySeries


#define soap_GET__resqml20__CategoricalPropertySeries soap_GET_resqml20__obj_USCORECategoricalPropertySeries


#define soap_POST_recv__resqml20__CategoricalPropertySeries soap_POST_recv_resqml20__obj_USCORECategoricalPropertySeries

#endif
/* _resqml20__ActivityTemplate is a typedef synonym of resqml20__obj_USCOREActivityTemplate */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate_DEFINED

#define soap_default__resqml20__ActivityTemplate(soap, a) (a)->resqml20__obj_USCOREActivityTemplate::soap_default(soap)


#define soap_serialize__resqml20__ActivityTemplate(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__ActivityTemplate2s soap_resqml20__obj_USCOREActivityTemplate2s


#define soap_out__resqml20__ActivityTemplate soap_out_resqml20__obj_USCOREActivityTemplate


#define soap_s2_resqml20__ActivityTemplate soap_s2resqml20__obj_USCOREActivityTemplate


#define soap_in__resqml20__ActivityTemplate soap_in_resqml20__obj_USCOREActivityTemplate


#define soap_instantiate__resqml20__ActivityTemplate soap_instantiate_resqml20__obj_USCOREActivityTemplate


#define soap_new__resqml20__ActivityTemplate soap_new_resqml20__obj_USCOREActivityTemplate


#define soap_new_req__resqml20__ActivityTemplate soap_new_req_resqml20__obj_USCOREActivityTemplate


#define soap_new_set__resqml20__ActivityTemplate soap_new_set_resqml20__obj_USCOREActivityTemplate

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__ActivityTemplate(struct soap*, const resqml20__obj_USCOREActivityTemplate *, const char*, const char*);

inline int soap_write__resqml20__ActivityTemplate(struct soap *soap, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__ActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__ActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__ActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__ActivityTemplate soap_get_resqml20__obj_USCOREActivityTemplate


#define soap_read__resqml20__ActivityTemplate soap_read_resqml20__obj_USCOREActivityTemplate


#define soap_GET__resqml20__ActivityTemplate soap_GET_resqml20__obj_USCOREActivityTemplate


#define soap_POST_recv__resqml20__ActivityTemplate soap_POST_recv_resqml20__obj_USCOREActivityTemplate

#endif
/* _resqml20__Activity is a typedef synonym of resqml20__obj_USCOREActivity */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity_DEFINED

#define soap_default__resqml20__Activity(soap, a) (a)->resqml20__obj_USCOREActivity::soap_default(soap)


#define soap_serialize__resqml20__Activity(soap, a) (a)->soap_serialize(soap)


#define soap__resqml20__Activity2s soap_resqml20__obj_USCOREActivity2s


#define soap_out__resqml20__Activity soap_out_resqml20__obj_USCOREActivity


#define soap_s2_resqml20__Activity soap_s2resqml20__obj_USCOREActivity


#define soap_in__resqml20__Activity soap_in_resqml20__obj_USCOREActivity


#define soap_instantiate__resqml20__Activity soap_instantiate_resqml20__obj_USCOREActivity


#define soap_new__resqml20__Activity soap_new_resqml20__obj_USCOREActivity


#define soap_new_req__resqml20__Activity soap_new_req_resqml20__obj_USCOREActivity


#define soap_new_set__resqml20__Activity soap_new_set_resqml20__obj_USCOREActivity

SOAP_FMAC3 int SOAP_FMAC4 soap_put__resqml20__Activity(struct soap*, const resqml20__obj_USCOREActivity *, const char*, const char*);

inline int soap_write__resqml20__Activity(struct soap *soap, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity ? "" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT__resqml20__Activity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__resqml20__Activity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity ? "" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__resqml20__Activity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity ? "" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

#define soap_get__resqml20__Activity soap_get_resqml20__obj_USCOREActivity


#define soap_read__resqml20__Activity soap_read_resqml20__obj_USCOREActivity


#define soap_GET__resqml20__Activity soap_GET_resqml20__obj_USCOREActivity


#define soap_POST_recv__resqml20__Activity soap_POST_recv_resqml20__obj_USCOREActivity

#endif
/* eml20__CommentString is a typedef synonym of eml20__MaximumLengthString */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString_DEFINED

#define soap_default_eml20__CommentString soap_default_eml20__MaximumLengthString


#define soap_serialize_eml20__CommentString soap_serialize_eml20__MaximumLengthString


#define soap_eml20__CommentString2s(soap, a) ((a).c_str())

#define soap_out_eml20__CommentString soap_out_eml20__MaximumLengthString


#define soap_s2eml20__CommentString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 4000, NULL)

#define soap_in_eml20__CommentString soap_in_eml20__MaximumLengthString


#define soap_instantiate_eml20__CommentString soap_instantiate_eml20__MaximumLengthString


#define soap_new_eml20__CommentString soap_new_eml20__MaximumLengthString


#define soap_put_eml20__CommentString soap_put_eml20__MaximumLengthString


#define soap_write_eml20__CommentString soap_write_eml20__MaximumLengthString


#define soap_PUT_eml20__CommentString soap_PUT_eml20__MaximumLengthString


#define soap_PATCH_eml20__CommentString soap_PATCH_eml20__MaximumLengthString


#define soap_POST_send_eml20__CommentString soap_POST_send_eml20__MaximumLengthString


#define soap_get_eml20__CommentString soap_get_eml20__MaximumLengthString


#define soap_read_eml20__CommentString soap_read_eml20__MaximumLengthString


#define soap_GET_eml20__CommentString soap_GET_eml20__MaximumLengthString


#define soap_POST_recv_eml20__CommentString soap_POST_recv_eml20__MaximumLengthString

#endif
/* eml20__UomEnum is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum_DEFINED

#define soap_default_eml20__UomEnum soap_default_eml20__String


#define soap_serialize_eml20__UomEnum soap_serialize_eml20__String


#define soap_eml20__UomEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__UomEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__UomEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 32, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__UomEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__UomEnum soap_instantiate_eml20__String


#define soap_new_eml20__UomEnum soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__UomEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__UomEnum(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__UomEnum(soap, p, "eml20:UomEnum", "eml20:UomEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__UomEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UomEnum(soap, p, "eml20:UomEnum", "eml20:UomEnum") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__UomEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UomEnum(soap, p, "eml20:UomEnum", "eml20:UomEnum") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__UomEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UomEnum(soap, p, "eml20:UomEnum", "eml20:UomEnum") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__UomEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__UomEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__UomEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__UomEnum(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__UomEnum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__UomEnum(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__UomEnum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* eml20__MaximumLengthString is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString_DEFINED

#define soap_default_eml20__MaximumLengthString soap_default_eml20__String


#define soap_serialize_eml20__MaximumLengthString soap_serialize_eml20__String


#define soap_eml20__MaximumLengthString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MaximumLengthString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__MaximumLengthString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 4000, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__MaximumLengthString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__MaximumLengthString soap_instantiate_eml20__String


#define soap_new_eml20__MaximumLengthString soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__MaximumLengthString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__MaximumLengthString(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__MaximumLengthString(soap, p, "eml20:MaximumLengthString", "eml20:MaximumLengthString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__MaximumLengthString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MaximumLengthString(soap, p, "eml20:MaximumLengthString", "eml20:MaximumLengthString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MaximumLengthString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MaximumLengthString(soap, p, "eml20:MaximumLengthString", "eml20:MaximumLengthString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MaximumLengthString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__MaximumLengthString(soap, p, "eml20:MaximumLengthString", "eml20:MaximumLengthString") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__MaximumLengthString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__MaximumLengthString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MaximumLengthString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MaximumLengthString(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MaximumLengthString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MaximumLengthString(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MaximumLengthString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* eml20__UidString is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString_DEFINED

#define soap_default_eml20__UidString soap_default_eml20__String


#define soap_serialize_eml20__UidString soap_serialize_eml20__String


#define soap_eml20__UidString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__UidString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__UidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 64, "[^ ]*")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__UidString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__UidString soap_instantiate_eml20__String


#define soap_new_eml20__UidString soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__UidString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__UidString(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__UidString(soap, p, "eml20:UidString", "eml20:UidString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__UidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UidString(soap, p, "eml20:UidString", "eml20:UidString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__UidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UidString(soap, p, "eml20:UidString", "eml20:UidString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__UidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UidString(soap, p, "eml20:UidString", "eml20:UidString") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__UidString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__UidString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__UidString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__UidString(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__UidString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__UidString(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__UidString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* eml20__NameString is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString_DEFINED

#define soap_default_eml20__NameString soap_default_eml20__String


#define soap_serialize_eml20__NameString soap_serialize_eml20__String


#define soap_eml20__NameString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__NameString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__NameString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 64, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__NameString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__NameString soap_instantiate_eml20__String


#define soap_new_eml20__NameString soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__NameString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__NameString(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__NameString(soap, p, "eml20:NameString", "eml20:NameString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__NameString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NameString(soap, p, "eml20:NameString", "eml20:NameString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__NameString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NameString(soap, p, "eml20:NameString", "eml20:NameString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__NameString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__NameString(soap, p, "eml20:NameString", "eml20:NameString") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__NameString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__NameString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__NameString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__NameString(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__NameString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__NameString(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__NameString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* eml20__TypeEnum is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum_DEFINED

#define soap_default_eml20__TypeEnum soap_default_eml20__String


#define soap_serialize_eml20__TypeEnum soap_serialize_eml20__String


#define soap_eml20__TypeEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TypeEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__TypeEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 40, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__TypeEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__TypeEnum soap_instantiate_eml20__String


#define soap_new_eml20__TypeEnum soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__TypeEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__TypeEnum(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__TypeEnum(soap, p, "eml20:TypeEnum", "eml20:TypeEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__TypeEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TypeEnum(soap, p, "eml20:TypeEnum", "eml20:TypeEnum") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TypeEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TypeEnum(soap, p, "eml20:TypeEnum", "eml20:TypeEnum") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TypeEnum(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__TypeEnum(soap, p, "eml20:TypeEnum", "eml20:TypeEnum") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__TypeEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__TypeEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TypeEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TypeEnum(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TypeEnum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TypeEnum(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TypeEnum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif
/* eml20__DescriptionString is a typedef restriction of eml20__String */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString_DEFINED

#define soap_default_eml20__DescriptionString soap_default_eml20__String


#define soap_serialize_eml20__DescriptionString soap_serialize_eml20__String


#define soap_eml20__DescriptionString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DescriptionString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__DescriptionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, 256, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__DescriptionString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__DescriptionString soap_instantiate_eml20__String


#define soap_new_eml20__DescriptionString soap_new_eml20__String

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__DescriptionString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__DescriptionString(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__DescriptionString(soap, p, "eml20:DescriptionString", "eml20:DescriptionString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__DescriptionString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DescriptionString(soap, p, "eml20:DescriptionString", "eml20:DescriptionString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DescriptionString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DescriptionString(soap, p, "eml20:DescriptionString", "eml20:DescriptionString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DescriptionString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__DescriptionString(soap, p, "eml20:DescriptionString", "eml20:DescriptionString") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__DescriptionString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__DescriptionString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DescriptionString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DescriptionString(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DescriptionString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DescriptionString(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DescriptionString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__String_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__String_DEFINED

inline void soap_default_eml20__String(struct soap *soap, std::string *p)
{
	(void)soap; /* appease -Wall -Werror */
	p->erase();
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml20__String(struct soap*, const std::string *);

#define soap_eml20__String2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__String(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__String(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__String(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__String soap_instantiate_std__string


#define soap_new_eml20__String soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__String(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__String(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__String(soap, p, "eml20:String", "eml20:String") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__String(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__String(soap, p, "eml20:String", "eml20:String") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__String(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__String(soap, p, "eml20:String", "eml20:String") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__String(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__String(soap, p, "eml20:String", "eml20:String") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__String(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__String(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__String(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__String(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__String(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__String(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__String(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString_DEFINED

inline void soap_default_eml20__UuidString(struct soap *soap, std::string *p)
{
	(void)soap; /* appease -Wall -Werror */
	p->erase();
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml20__UuidString(struct soap*, const std::string *);

#define soap_eml20__UuidString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__UuidString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml20__UuidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 0, -1, "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml20__UuidString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml20__UuidString soap_instantiate_std__string


#define soap_new_eml20__UuidString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml20__UuidString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml20__UuidString(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_eml20__UuidString(soap, p, "eml20:UuidString", "eml20:UuidString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_eml20__UuidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UuidString(soap, p, "eml20:UuidString", "eml20:UuidString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__UuidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UuidString(soap, p, "eml20:UuidString", "eml20:UuidString") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__UuidString(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_eml20__UuidString(soap, p, "eml20:UuidString", "eml20:UuidString") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml20__UuidString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml20__UuidString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__UuidString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__UuidString(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__UuidString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__UuidString(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__UuidString(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__equivalentPropertyType(struct soap*, const char*, int, const ptm__equivalentPropertyType *, const char*);
SOAP_FMAC3 ptm__equivalentPropertyType * SOAP_FMAC4 soap_in_ptm__equivalentPropertyType(struct soap*, const char*, ptm__equivalentPropertyType *, const char*);
SOAP_FMAC1 ptm__equivalentPropertyType * SOAP_FMAC2 soap_instantiate_ptm__equivalentPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline ptm__equivalentPropertyType * soap_new_ptm__equivalentPropertyType(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_ptm__equivalentPropertyType(soap, n, NULL, NULL, NULL);
}

inline ptm__equivalentPropertyType * soap_new_req_ptm__equivalentPropertyType(
	struct soap *soap,
	const std::string& name,
	const std::string& namingSystem)
{
	ptm__equivalentPropertyType *_p = gsoap_resqml2_0_1::soap_new_ptm__equivalentPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__equivalentPropertyType::name = name;
		_p->ptm__equivalentPropertyType::namingSystem = namingSystem;
	}
	return _p;
}

inline ptm__equivalentPropertyType * soap_new_set_ptm__equivalentPropertyType(
	struct soap *soap,
	const std::string& name,
	const std::string& namingSystem)
{
	ptm__equivalentPropertyType *_p = gsoap_resqml2_0_1::soap_new_ptm__equivalentPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__equivalentPropertyType::name = name;
		_p->ptm__equivalentPropertyType::namingSystem = namingSystem;
	}
	return _p;
}

inline int soap_write_ptm__equivalentPropertyType(struct soap *soap, ptm__equivalentPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:equivalentPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType ? "ptm:equivalentPropertyType" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ptm__equivalentPropertyType(struct soap *soap, const char *URL, ptm__equivalentPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:equivalentPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType ? "ptm:equivalentPropertyType" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ptm__equivalentPropertyType(struct soap *soap, const char *URL, ptm__equivalentPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:equivalentPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType ? "ptm:equivalentPropertyType" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ptm__equivalentPropertyType(struct soap *soap, const char *URL, ptm__equivalentPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:equivalentPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType ? "ptm:equivalentPropertyType" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ptm__equivalentPropertyType * SOAP_FMAC4 soap_get_ptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *, const char*, const char*);

inline int soap_read_ptm__equivalentPropertyType(struct soap *soap, ptm__equivalentPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_ptm__equivalentPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ptm__equivalentPropertyType(struct soap *soap, const char *URL, ptm__equivalentPropertyType *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_ptm__equivalentPropertyType(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ptm__equivalentPropertyType(struct soap *soap, ptm__equivalentPropertyType *p)
{
	if (gsoap_resqml2_0_1::soap_read_ptm__equivalentPropertyType(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__standardEnergisticsPropertyType(struct soap*, const char*, int, const ptm__standardEnergisticsPropertyType *, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType * SOAP_FMAC4 soap_in_ptm__standardEnergisticsPropertyType(struct soap*, const char*, ptm__standardEnergisticsPropertyType *, const char*);
SOAP_FMAC1 ptm__standardEnergisticsPropertyType * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline ptm__standardEnergisticsPropertyType * soap_new_ptm__standardEnergisticsPropertyType(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_ptm__standardEnergisticsPropertyType(soap, n, NULL, NULL, NULL);
}

inline ptm__standardEnergisticsPropertyType * soap_new_req_ptm__standardEnergisticsPropertyType(
	struct soap *soap,
	enum resqml20__ResqmlPropertyKind name)
{
	ptm__standardEnergisticsPropertyType *_p = gsoap_resqml2_0_1::soap_new_ptm__standardEnergisticsPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyType::name = name;
	}
	return _p;
}

inline ptm__standardEnergisticsPropertyType * soap_new_set_ptm__standardEnergisticsPropertyType(
	struct soap *soap,
	enum resqml20__ResqmlPropertyKind name,
	std::string *description,
	std::string *version,
	std::string *deprecated,
	std::string *replacedBy,
	bool *isAbstract,
	enum resqml20__ResqmlPropertyKind *parentKind,
	const std::vector<ptm__equivalentPropertyType *> & equivalentPropertyType)
{
	ptm__standardEnergisticsPropertyType *_p = gsoap_resqml2_0_1::soap_new_ptm__standardEnergisticsPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyType::name = name;
		_p->ptm__standardEnergisticsPropertyType::description = description;
		_p->ptm__standardEnergisticsPropertyType::version = version;
		_p->ptm__standardEnergisticsPropertyType::deprecated = deprecated;
		_p->ptm__standardEnergisticsPropertyType::replacedBy = replacedBy;
		_p->ptm__standardEnergisticsPropertyType::isAbstract = isAbstract;
		_p->ptm__standardEnergisticsPropertyType::parentKind = parentKind;
		_p->ptm__standardEnergisticsPropertyType::equivalentPropertyType = equivalentPropertyType;
	}
	return _p;
}

inline int soap_write_ptm__standardEnergisticsPropertyType(struct soap *soap, ptm__standardEnergisticsPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType ? "ptm:standardEnergisticsPropertyType" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ptm__standardEnergisticsPropertyType(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType ? "ptm:standardEnergisticsPropertyType" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ptm__standardEnergisticsPropertyType(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType ? "ptm:standardEnergisticsPropertyType" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ptm__standardEnergisticsPropertyType(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyType const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyType", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType ? "ptm:standardEnergisticsPropertyType" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ptm__standardEnergisticsPropertyType * SOAP_FMAC4 soap_get_ptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *, const char*, const char*);

inline int soap_read_ptm__standardEnergisticsPropertyType(struct soap *soap, ptm__standardEnergisticsPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_ptm__standardEnergisticsPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ptm__standardEnergisticsPropertyType(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyType *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_ptm__standardEnergisticsPropertyType(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ptm__standardEnergisticsPropertyType(struct soap *soap, ptm__standardEnergisticsPropertyType *p)
{
	if (gsoap_resqml2_0_1::soap_read_ptm__standardEnergisticsPropertyType(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__standardEnergisticsPropertyTypeSet(struct soap*, const char*, int, const ptm__standardEnergisticsPropertyTypeSet *, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC4 soap_in_ptm__standardEnergisticsPropertyTypeSet(struct soap*, const char*, ptm__standardEnergisticsPropertyTypeSet *, const char*);
SOAP_FMAC1 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyTypeSet(struct soap*, int, const char*, const char*, size_t*);

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_ptm__standardEnergisticsPropertyTypeSet(soap, n, NULL, NULL, NULL);
}

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_req_ptm__standardEnergisticsPropertyTypeSet(
	struct soap *soap,
	const std::vector<ptm__standardEnergisticsPropertyType *> & standardEnergisticsPropertyType)
{
	ptm__standardEnergisticsPropertyTypeSet *_p = gsoap_resqml2_0_1::soap_new_ptm__standardEnergisticsPropertyTypeSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyTypeSet::standardEnergisticsPropertyType = standardEnergisticsPropertyType;
	}
	return _p;
}

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_set_ptm__standardEnergisticsPropertyTypeSet(
	struct soap *soap,
	const std::vector<ptm__standardEnergisticsPropertyType *> & standardEnergisticsPropertyType)
{
	ptm__standardEnergisticsPropertyTypeSet *_p = gsoap_resqml2_0_1::soap_new_ptm__standardEnergisticsPropertyTypeSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyTypeSet::standardEnergisticsPropertyType = standardEnergisticsPropertyType;
	}
	return _p;
}

inline int soap_write_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet ? "ptm:standardEnergisticsPropertyTypeSet" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet ? "ptm:standardEnergisticsPropertyTypeSet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet ? "ptm:standardEnergisticsPropertyTypeSet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet ? "ptm:standardEnergisticsPropertyTypeSet" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC4 soap_get_ptm__standardEnergisticsPropertyTypeSet(struct soap*, ptm__standardEnergisticsPropertyTypeSet *, const char*, const char*);

inline int soap_read_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_ptm__standardEnergisticsPropertyTypeSet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, const char *URL, ptm__standardEnergisticsPropertyTypeSet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_ptm__standardEnergisticsPropertyTypeSet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet *p)
{
	if (gsoap_resqml2_0_1::soap_read_ptm__standardEnergisticsPropertyTypeSet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MobilityMeasure(struct soap*, const char*, int, const eml20__MobilityMeasure *, const char*);
SOAP_FMAC3 eml20__MobilityMeasure * SOAP_FMAC4 soap_in_eml20__MobilityMeasure(struct soap*, const char*, eml20__MobilityMeasure *, const char*);
SOAP_FMAC1 eml20__MobilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MobilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MobilityMeasure * soap_new_eml20__MobilityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MobilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MobilityMeasure * soap_new_req_eml20__MobilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MobilityUom uom)
{
	eml20__MobilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MobilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MobilityMeasure::__item = __item;
		_p->eml20__MobilityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MobilityMeasure * soap_new_set_eml20__MobilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MobilityUom uom)
{
	eml20__MobilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MobilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MobilityMeasure::__item = __item;
		_p->eml20__MobilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MobilityMeasure(struct soap *soap, eml20__MobilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MobilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure ? "eml20:MobilityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MobilityMeasure(struct soap *soap, const char *URL, eml20__MobilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MobilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure ? "eml20:MobilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MobilityMeasure(struct soap *soap, const char *URL, eml20__MobilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MobilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure ? "eml20:MobilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MobilityMeasure(struct soap *soap, const char *URL, eml20__MobilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MobilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure ? "eml20:MobilityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MobilityMeasure * SOAP_FMAC4 soap_get_eml20__MobilityMeasure(struct soap*, eml20__MobilityMeasure *, const char*, const char*);

inline int soap_read_eml20__MobilityMeasure(struct soap *soap, eml20__MobilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MobilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MobilityMeasure(struct soap *soap, const char *URL, eml20__MobilityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MobilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MobilityMeasure(struct soap *soap, eml20__MobilityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MobilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerMassMeasure(struct soap*, const char*, int, const eml20__LengthPerMassMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerMassMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerMassMeasure(struct soap*, const char*, eml20__LengthPerMassMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerMassMeasure * soap_new_eml20__LengthPerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerMassMeasure * soap_new_req_eml20__LengthPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerMassUom uom)
{
	eml20__LengthPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerMassMeasure::__item = __item;
		_p->eml20__LengthPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerMassMeasure * soap_new_set_eml20__LengthPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerMassUom uom)
{
	eml20__LengthPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerMassMeasure::__item = __item;
		_p->eml20__LengthPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerMassMeasure(struct soap *soap, eml20__LengthPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure ? "eml20:LengthPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerMassMeasure(struct soap *soap, const char *URL, eml20__LengthPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure ? "eml20:LengthPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerMassMeasure(struct soap *soap, const char *URL, eml20__LengthPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure ? "eml20:LengthPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerMassMeasure(struct soap *soap, const char *URL, eml20__LengthPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure ? "eml20:LengthPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerMassMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerMassMeasure(struct soap*, eml20__LengthPerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerMassMeasure(struct soap *soap, eml20__LengthPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerMassMeasure(struct soap *soap, const char *URL, eml20__LengthPerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerMassMeasure(struct soap *soap, eml20__LengthPerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaMeasure(struct soap*, const char*, int, const eml20__AreaMeasure *, const char*);
SOAP_FMAC3 eml20__AreaMeasure * SOAP_FMAC4 soap_in_eml20__AreaMeasure(struct soap*, const char*, eml20__AreaMeasure *, const char*);
SOAP_FMAC1 eml20__AreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaMeasure * soap_new_eml20__AreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaMeasure * soap_new_req_eml20__AreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaUom uom)
{
	eml20__AreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaMeasure::__item = __item;
		_p->eml20__AreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaMeasure * soap_new_set_eml20__AreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaUom uom)
{
	eml20__AreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaMeasure::__item = __item;
		_p->eml20__AreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaMeasure(struct soap *soap, eml20__AreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure ? "eml20:AreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaMeasure(struct soap *soap, const char *URL, eml20__AreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure ? "eml20:AreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaMeasure(struct soap *soap, const char *URL, eml20__AreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure ? "eml20:AreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaMeasure(struct soap *soap, const char *URL, eml20__AreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure ? "eml20:AreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaMeasure * SOAP_FMAC4 soap_get_eml20__AreaMeasure(struct soap*, eml20__AreaMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaMeasure(struct soap *soap, eml20__AreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaMeasure(struct soap *soap, const char *URL, eml20__AreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaMeasure(struct soap *soap, eml20__AreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerVolumeMeasure(struct soap*, const char*, int, const eml20__VolumePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerVolumeMeasure(struct soap*, const char*, eml20__VolumePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerVolumeMeasure * soap_new_eml20__VolumePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerVolumeMeasure * soap_new_req_eml20__VolumePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerVolumeUom uom)
{
	eml20__VolumePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerVolumeMeasure::__item = __item;
		_p->eml20__VolumePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerVolumeMeasure * soap_new_set_eml20__VolumePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerVolumeUom uom)
{
	eml20__VolumePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerVolumeMeasure::__item = __item;
		_p->eml20__VolumePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerVolumeMeasure(struct soap *soap, eml20__VolumePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure ? "eml20:VolumePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure ? "eml20:VolumePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure ? "eml20:VolumePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure ? "eml20:VolumePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerVolumeMeasure(struct soap*, eml20__VolumePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerVolumeMeasure(struct soap *soap, eml20__VolumePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerVolumeMeasure(struct soap *soap, eml20__VolumePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricResistanceMeasure(struct soap*, const char*, int, const eml20__ElectricResistanceMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricResistanceMeasure * SOAP_FMAC4 soap_in_eml20__ElectricResistanceMeasure(struct soap*, const char*, eml20__ElectricResistanceMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricResistanceMeasure * soap_new_eml20__ElectricResistanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricResistanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricResistanceMeasure * soap_new_req_eml20__ElectricResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricResistanceUom uom)
{
	eml20__ElectricResistanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricResistanceMeasure::__item = __item;
		_p->eml20__ElectricResistanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricResistanceMeasure * soap_new_set_eml20__ElectricResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricResistanceUom uom)
{
	eml20__ElectricResistanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricResistanceMeasure::__item = __item;
		_p->eml20__ElectricResistanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricResistanceMeasure(struct soap *soap, eml20__ElectricResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure ? "eml20:ElectricResistanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricResistanceMeasure(struct soap *soap, const char *URL, eml20__ElectricResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure ? "eml20:ElectricResistanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricResistanceMeasure(struct soap *soap, const char *URL, eml20__ElectricResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure ? "eml20:ElectricResistanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricResistanceMeasure(struct soap *soap, const char *URL, eml20__ElectricResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure ? "eml20:ElectricResistanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricResistanceMeasure * SOAP_FMAC4 soap_get_eml20__ElectricResistanceMeasure(struct soap*, eml20__ElectricResistanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricResistanceMeasure(struct soap *soap, eml20__ElectricResistanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricResistanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricResistanceMeasure(struct soap *soap, const char *URL, eml20__ElectricResistanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricResistanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricResistanceMeasure(struct soap *soap, eml20__ElectricResistanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricResistanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerVolumeMeasure(struct soap*, const char*, int, const eml20__AreaPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__AreaPerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__AreaPerVolumeMeasure(struct soap*, const char*, eml20__AreaPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__AreaPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaPerVolumeMeasure * soap_new_eml20__AreaPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaPerVolumeMeasure * soap_new_req_eml20__AreaPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerVolumeUom uom)
{
	eml20__AreaPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerVolumeMeasure::__item = __item;
		_p->eml20__AreaPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaPerVolumeMeasure * soap_new_set_eml20__AreaPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerVolumeUom uom)
{
	eml20__AreaPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerVolumeMeasure::__item = __item;
		_p->eml20__AreaPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaPerVolumeMeasure(struct soap *soap, eml20__AreaPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure ? "eml20:AreaPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerVolumeMeasure(struct soap *soap, const char *URL, eml20__AreaPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure ? "eml20:AreaPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerVolumeMeasure(struct soap *soap, const char *URL, eml20__AreaPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure ? "eml20:AreaPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerVolumeMeasure(struct soap *soap, const char *URL, eml20__AreaPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure ? "eml20:AreaPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaPerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__AreaPerVolumeMeasure(struct soap*, eml20__AreaPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaPerVolumeMeasure(struct soap *soap, eml20__AreaPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerVolumeMeasure(struct soap *soap, const char *URL, eml20__AreaPerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerVolumeMeasure(struct soap *soap, eml20__AreaPerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerTimeMeasure(struct soap*, const char*, int, const eml20__TimePerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__TimePerTimeMeasure * SOAP_FMAC4 soap_in_eml20__TimePerTimeMeasure(struct soap*, const char*, eml20__TimePerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__TimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TimePerTimeMeasure * soap_new_eml20__TimePerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TimePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TimePerTimeMeasure * soap_new_req_eml20__TimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerTimeUom uom)
{
	eml20__TimePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerTimeMeasure::__item = __item;
		_p->eml20__TimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TimePerTimeMeasure * soap_new_set_eml20__TimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerTimeUom uom)
{
	eml20__TimePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerTimeMeasure::__item = __item;
		_p->eml20__TimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TimePerTimeMeasure(struct soap *soap, eml20__TimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure ? "eml20:TimePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerTimeMeasure(struct soap *soap, const char *URL, eml20__TimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure ? "eml20:TimePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerTimeMeasure(struct soap *soap, const char *URL, eml20__TimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure ? "eml20:TimePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerTimeMeasure(struct soap *soap, const char *URL, eml20__TimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure ? "eml20:TimePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TimePerTimeMeasure * SOAP_FMAC4 soap_get_eml20__TimePerTimeMeasure(struct soap*, eml20__TimePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__TimePerTimeMeasure(struct soap *soap, eml20__TimePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerTimeMeasure(struct soap *soap, const char *URL, eml20__TimePerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerTimeMeasure(struct soap *soap, eml20__TimePerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstancePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, const char*, eml20__AmountOfSubstancePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstancePerVolumeMeasure * soap_new_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstancePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstancePerVolumeMeasure * soap_new_req_eml20__AmountOfSubstancePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerVolumeUom uom)
{
	eml20__AmountOfSubstancePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerVolumeMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstancePerVolumeMeasure * soap_new_set_eml20__AmountOfSubstancePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerVolumeUom uom)
{
	eml20__AmountOfSubstancePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerVolumeMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, eml20__AmountOfSubstancePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure ? "eml20:AmountOfSubstancePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure ? "eml20:AmountOfSubstancePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure ? "eml20:AmountOfSubstancePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure ? "eml20:AmountOfSubstancePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, eml20__AmountOfSubstancePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, eml20__AmountOfSubstancePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerVolumeMeasure(struct soap *soap, eml20__AmountOfSubstancePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerAreaMeasure(struct soap*, const char*, int, const eml20__MassPerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerAreaMeasure * SOAP_FMAC4 soap_in_eml20__MassPerAreaMeasure(struct soap*, const char*, eml20__MassPerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerAreaMeasure * soap_new_eml20__MassPerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerAreaMeasure * soap_new_req_eml20__MassPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerAreaUom uom)
{
	eml20__MassPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerAreaMeasure::__item = __item;
		_p->eml20__MassPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerAreaMeasure * soap_new_set_eml20__MassPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerAreaUom uom)
{
	eml20__MassPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerAreaMeasure::__item = __item;
		_p->eml20__MassPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerAreaMeasure(struct soap *soap, eml20__MassPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure ? "eml20:MassPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure ? "eml20:MassPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure ? "eml20:MassPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure ? "eml20:MassPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerAreaMeasure * SOAP_FMAC4 soap_get_eml20__MassPerAreaMeasure(struct soap*, eml20__MassPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerAreaMeasure(struct soap *soap, eml20__MassPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerAreaMeasure(struct soap *soap, eml20__MassPerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerPressureMeasure(struct soap*, const char*, int, const eml20__VolumePerPressureMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerPressureMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerPressureMeasure(struct soap*, const char*, eml20__VolumePerPressureMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerPressureMeasure * soap_new_eml20__VolumePerPressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerPressureMeasure * soap_new_req_eml20__VolumePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerPressureUom uom)
{
	eml20__VolumePerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerPressureMeasure::__item = __item;
		_p->eml20__VolumePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerPressureMeasure * soap_new_set_eml20__VolumePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerPressureUom uom)
{
	eml20__VolumePerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerPressureMeasure::__item = __item;
		_p->eml20__VolumePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerPressureMeasure(struct soap *soap, eml20__VolumePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure ? "eml20:VolumePerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure ? "eml20:VolumePerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure ? "eml20:VolumePerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure ? "eml20:VolumePerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerPressureMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerPressureMeasure(struct soap*, eml20__VolumePerPressureMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerPressureMeasure(struct soap *soap, eml20__VolumePerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerPressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerPressureMeasure(struct soap *soap, eml20__VolumePerPressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimePerAreaMeasure(struct soap*, const char*, int, const eml20__MassPerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__MassPerTimePerAreaMeasure(struct soap*, const char*, eml20__MassPerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerTimePerAreaMeasure * soap_new_eml20__MassPerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerTimePerAreaMeasure * soap_new_req_eml20__MassPerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimePerAreaUom uom)
{
	eml20__MassPerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimePerAreaMeasure::__item = __item;
		_p->eml20__MassPerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerTimePerAreaMeasure * soap_new_set_eml20__MassPerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimePerAreaUom uom)
{
	eml20__MassPerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimePerAreaMeasure::__item = __item;
		_p->eml20__MassPerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerTimePerAreaMeasure(struct soap *soap, eml20__MassPerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure ? "eml20:MassPerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure ? "eml20:MassPerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure ? "eml20:MassPerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure ? "eml20:MassPerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__MassPerTimePerAreaMeasure(struct soap*, eml20__MassPerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerTimePerAreaMeasure(struct soap *soap, eml20__MassPerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimePerAreaMeasure(struct soap *soap, eml20__MassPerTimePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DoseEquivalentMeasure(struct soap*, const char*, int, const eml20__DoseEquivalentMeasure *, const char*);
SOAP_FMAC3 eml20__DoseEquivalentMeasure * SOAP_FMAC4 soap_in_eml20__DoseEquivalentMeasure(struct soap*, const char*, eml20__DoseEquivalentMeasure *, const char*);
SOAP_FMAC1 eml20__DoseEquivalentMeasure * SOAP_FMAC2 soap_instantiate_eml20__DoseEquivalentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DoseEquivalentMeasure * soap_new_eml20__DoseEquivalentMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DoseEquivalentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DoseEquivalentMeasure * soap_new_req_eml20__DoseEquivalentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DoseEquivalentUom uom)
{
	eml20__DoseEquivalentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DoseEquivalentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DoseEquivalentMeasure::__item = __item;
		_p->eml20__DoseEquivalentMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DoseEquivalentMeasure * soap_new_set_eml20__DoseEquivalentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DoseEquivalentUom uom)
{
	eml20__DoseEquivalentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DoseEquivalentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DoseEquivalentMeasure::__item = __item;
		_p->eml20__DoseEquivalentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DoseEquivalentMeasure(struct soap *soap, eml20__DoseEquivalentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DoseEquivalentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure ? "eml20:DoseEquivalentMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DoseEquivalentMeasure(struct soap *soap, const char *URL, eml20__DoseEquivalentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DoseEquivalentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure ? "eml20:DoseEquivalentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DoseEquivalentMeasure(struct soap *soap, const char *URL, eml20__DoseEquivalentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DoseEquivalentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure ? "eml20:DoseEquivalentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DoseEquivalentMeasure(struct soap *soap, const char *URL, eml20__DoseEquivalentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DoseEquivalentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure ? "eml20:DoseEquivalentMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DoseEquivalentMeasure * SOAP_FMAC4 soap_get_eml20__DoseEquivalentMeasure(struct soap*, eml20__DoseEquivalentMeasure *, const char*, const char*);

inline int soap_read_eml20__DoseEquivalentMeasure(struct soap *soap, eml20__DoseEquivalentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DoseEquivalentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DoseEquivalentMeasure(struct soap *soap, const char *URL, eml20__DoseEquivalentMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DoseEquivalentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DoseEquivalentMeasure(struct soap *soap, eml20__DoseEquivalentMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DoseEquivalentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermeabilityRockMeasure(struct soap*, const char*, int, const eml20__PermeabilityRockMeasure *, const char*);
SOAP_FMAC3 eml20__PermeabilityRockMeasure * SOAP_FMAC4 soap_in_eml20__PermeabilityRockMeasure(struct soap*, const char*, eml20__PermeabilityRockMeasure *, const char*);
SOAP_FMAC1 eml20__PermeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PermeabilityRockMeasure * soap_new_eml20__PermeabilityRockMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PermeabilityRockMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PermeabilityRockMeasure * soap_new_req_eml20__PermeabilityRockMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermeabilityRockUom uom)
{
	eml20__PermeabilityRockMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermeabilityRockMeasure::__item = __item;
		_p->eml20__PermeabilityRockMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PermeabilityRockMeasure * soap_new_set_eml20__PermeabilityRockMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermeabilityRockUom uom)
{
	eml20__PermeabilityRockMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermeabilityRockMeasure::__item = __item;
		_p->eml20__PermeabilityRockMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PermeabilityRockMeasure(struct soap *soap, eml20__PermeabilityRockMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityRockMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure ? "eml20:PermeabilityRockMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermeabilityRockMeasure(struct soap *soap, const char *URL, eml20__PermeabilityRockMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityRockMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure ? "eml20:PermeabilityRockMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermeabilityRockMeasure(struct soap *soap, const char *URL, eml20__PermeabilityRockMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityRockMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure ? "eml20:PermeabilityRockMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermeabilityRockMeasure(struct soap *soap, const char *URL, eml20__PermeabilityRockMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityRockMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure ? "eml20:PermeabilityRockMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PermeabilityRockMeasure * SOAP_FMAC4 soap_get_eml20__PermeabilityRockMeasure(struct soap*, eml20__PermeabilityRockMeasure *, const char*, const char*);

inline int soap_read_eml20__PermeabilityRockMeasure(struct soap *soap, eml20__PermeabilityRockMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermeabilityRockMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermeabilityRockMeasure(struct soap *soap, const char *URL, eml20__PermeabilityRockMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermeabilityRockMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermeabilityRockMeasure(struct soap *soap, eml20__PermeabilityRockMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermeabilityRockMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFieldStrengthMeasure(struct soap*, const char*, int, const eml20__MagneticFieldStrengthMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticFieldStrengthMeasure * SOAP_FMAC4 soap_in_eml20__MagneticFieldStrengthMeasure(struct soap*, const char*, eml20__MagneticFieldStrengthMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticFieldStrengthMeasure * soap_new_eml20__MagneticFieldStrengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticFieldStrengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticFieldStrengthMeasure * soap_new_req_eml20__MagneticFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFieldStrengthUom uom)
{
	eml20__MagneticFieldStrengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFieldStrengthMeasure::__item = __item;
		_p->eml20__MagneticFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticFieldStrengthMeasure * soap_new_set_eml20__MagneticFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFieldStrengthUom uom)
{
	eml20__MagneticFieldStrengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFieldStrengthMeasure::__item = __item;
		_p->eml20__MagneticFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticFieldStrengthMeasure(struct soap *soap, eml20__MagneticFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure ? "eml20:MagneticFieldStrengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure ? "eml20:MagneticFieldStrengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure ? "eml20:MagneticFieldStrengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure ? "eml20:MagneticFieldStrengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticFieldStrengthMeasure * SOAP_FMAC4 soap_get_eml20__MagneticFieldStrengthMeasure(struct soap*, eml20__MagneticFieldStrengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticFieldStrengthMeasure(struct soap *soap, eml20__MagneticFieldStrengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFieldStrengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFieldStrengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFieldStrengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFieldStrengthMeasure(struct soap *soap, eml20__MagneticFieldStrengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFieldStrengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerPressureLengthMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, const char*, eml20__VolumePerTimePerPressureLengthMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerPressureLengthMeasure * soap_new_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerPressureLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerPressureLengthMeasure * soap_new_req_eml20__VolumePerTimePerPressureLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerPressureLengthUom uom)
{
	eml20__VolumePerTimePerPressureLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerPressureLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerPressureLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimePerPressureLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerPressureLengthMeasure * soap_new_set_eml20__VolumePerTimePerPressureLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerPressureLengthUom uom)
{
	eml20__VolumePerTimePerPressureLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerPressureLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerPressureLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimePerPressureLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, eml20__VolumePerTimePerPressureLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure ? "eml20:VolumePerTimePerPressureLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure ? "eml20:VolumePerTimePerPressureLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure ? "eml20:VolumePerTimePerPressureLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure ? "eml20:VolumePerTimePerPressureLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, eml20__VolumePerTimePerPressureLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, eml20__VolumePerTimePerPressureLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerPressureLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerPressureLengthMeasure(struct soap *soap, eml20__VolumePerTimePerPressureLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureMeasure(struct soap*, const char*, int, const eml20__PressureMeasure *, const char*);
SOAP_FMAC3 eml20__PressureMeasure * SOAP_FMAC4 soap_in_eml20__PressureMeasure(struct soap*, const char*, eml20__PressureMeasure *, const char*);
SOAP_FMAC1 eml20__PressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressureMeasure * soap_new_eml20__PressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressureMeasure * soap_new_req_eml20__PressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureUom uom)
{
	eml20__PressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureMeasure::__item = __item;
		_p->eml20__PressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressureMeasure * soap_new_set_eml20__PressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureUom uom)
{
	eml20__PressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureMeasure::__item = __item;
		_p->eml20__PressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressureMeasure(struct soap *soap, eml20__PressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure ? "eml20:PressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureMeasure(struct soap *soap, const char *URL, eml20__PressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure ? "eml20:PressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureMeasure(struct soap *soap, const char *URL, eml20__PressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure ? "eml20:PressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureMeasure(struct soap *soap, const char *URL, eml20__PressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure ? "eml20:PressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressureMeasure * SOAP_FMAC4 soap_get_eml20__PressureMeasure(struct soap*, eml20__PressureMeasure *, const char*, const char*);

inline int soap_read_eml20__PressureMeasure(struct soap *soap, eml20__PressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureMeasure(struct soap *soap, const char *URL, eml20__PressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureMeasure(struct soap *soap, eml20__PressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, const char*, int, const eml20__MagneticFluxDensityPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, const char*, eml20__MagneticFluxDensityPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticFluxDensityPerLengthMeasure * soap_new_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticFluxDensityPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticFluxDensityPerLengthMeasure * soap_new_req_eml20__MagneticFluxDensityPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxDensityPerLengthUom uom)
{
	eml20__MagneticFluxDensityPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxDensityPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxDensityPerLengthMeasure::__item = __item;
		_p->eml20__MagneticFluxDensityPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticFluxDensityPerLengthMeasure * soap_new_set_eml20__MagneticFluxDensityPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxDensityPerLengthUom uom)
{
	eml20__MagneticFluxDensityPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxDensityPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxDensityPerLengthMeasure::__item = __item;
		_p->eml20__MagneticFluxDensityPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, eml20__MagneticFluxDensityPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure ? "eml20:MagneticFluxDensityPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure ? "eml20:MagneticFluxDensityPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure ? "eml20:MagneticFluxDensityPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure ? "eml20:MagneticFluxDensityPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, eml20__MagneticFluxDensityPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, eml20__MagneticFluxDensityPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxDensityPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxDensityPerLengthMeasure(struct soap *soap, eml20__MagneticFluxDensityPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerAreaMeasure(struct soap*, const char*, int, const eml20__PowerPerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__PowerPerAreaMeasure * SOAP_FMAC4 soap_in_eml20__PowerPerAreaMeasure(struct soap*, const char*, eml20__PowerPerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__PowerPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PowerPerAreaMeasure * soap_new_eml20__PowerPerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PowerPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PowerPerAreaMeasure * soap_new_req_eml20__PowerPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerAreaUom uom)
{
	eml20__PowerPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerAreaMeasure::__item = __item;
		_p->eml20__PowerPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PowerPerAreaMeasure * soap_new_set_eml20__PowerPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerAreaUom uom)
{
	eml20__PowerPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerAreaMeasure::__item = __item;
		_p->eml20__PowerPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PowerPerAreaMeasure(struct soap *soap, eml20__PowerPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure ? "eml20:PowerPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerAreaMeasure(struct soap *soap, const char *URL, eml20__PowerPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure ? "eml20:PowerPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerAreaMeasure(struct soap *soap, const char *URL, eml20__PowerPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure ? "eml20:PowerPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerAreaMeasure(struct soap *soap, const char *URL, eml20__PowerPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure ? "eml20:PowerPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PowerPerAreaMeasure * SOAP_FMAC4 soap_get_eml20__PowerPerAreaMeasure(struct soap*, eml20__PowerPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__PowerPerAreaMeasure(struct soap *soap, eml20__PowerPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerAreaMeasure(struct soap *soap, const char *URL, eml20__PowerPerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerAreaMeasure(struct soap *soap, eml20__PowerPerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricFieldStrengthMeasure(struct soap*, const char*, int, const eml20__ElectricFieldStrengthMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricFieldStrengthMeasure * SOAP_FMAC4 soap_in_eml20__ElectricFieldStrengthMeasure(struct soap*, const char*, eml20__ElectricFieldStrengthMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricFieldStrengthMeasure * soap_new_eml20__ElectricFieldStrengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricFieldStrengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricFieldStrengthMeasure * soap_new_req_eml20__ElectricFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricFieldStrengthUom uom)
{
	eml20__ElectricFieldStrengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricFieldStrengthMeasure::__item = __item;
		_p->eml20__ElectricFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricFieldStrengthMeasure * soap_new_set_eml20__ElectricFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricFieldStrengthUom uom)
{
	eml20__ElectricFieldStrengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricFieldStrengthMeasure::__item = __item;
		_p->eml20__ElectricFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricFieldStrengthMeasure(struct soap *soap, eml20__ElectricFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure ? "eml20:ElectricFieldStrengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__ElectricFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure ? "eml20:ElectricFieldStrengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__ElectricFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure ? "eml20:ElectricFieldStrengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__ElectricFieldStrengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricFieldStrengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure ? "eml20:ElectricFieldStrengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricFieldStrengthMeasure * SOAP_FMAC4 soap_get_eml20__ElectricFieldStrengthMeasure(struct soap*, eml20__ElectricFieldStrengthMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricFieldStrengthMeasure(struct soap *soap, eml20__ElectricFieldStrengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricFieldStrengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricFieldStrengthMeasure(struct soap *soap, const char *URL, eml20__ElectricFieldStrengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricFieldStrengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricFieldStrengthMeasure(struct soap *soap, eml20__ElectricFieldStrengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricFieldStrengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, const char*, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_req_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerAmountOfSubstanceUom uom)
{
	eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerAmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_set_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerAmountOfSubstanceUom uom)
{
	eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerAmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure ? "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure ? "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure ? "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure ? "eml20:AmountOfSubstancePerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricConductivityMeasure(struct soap*, const char*, int, const eml20__ElectricConductivityMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricConductivityMeasure * SOAP_FMAC4 soap_in_eml20__ElectricConductivityMeasure(struct soap*, const char*, eml20__ElectricConductivityMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricConductivityMeasure * soap_new_eml20__ElectricConductivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricConductivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricConductivityMeasure * soap_new_req_eml20__ElectricConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricConductivityUom uom)
{
	eml20__ElectricConductivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricConductivityMeasure::__item = __item;
		_p->eml20__ElectricConductivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricConductivityMeasure * soap_new_set_eml20__ElectricConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricConductivityUom uom)
{
	eml20__ElectricConductivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricConductivityMeasure::__item = __item;
		_p->eml20__ElectricConductivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricConductivityMeasure(struct soap *soap, eml20__ElectricConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure ? "eml20:ElectricConductivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricConductivityMeasure(struct soap *soap, const char *URL, eml20__ElectricConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure ? "eml20:ElectricConductivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricConductivityMeasure(struct soap *soap, const char *URL, eml20__ElectricConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure ? "eml20:ElectricConductivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricConductivityMeasure(struct soap *soap, const char *URL, eml20__ElectricConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure ? "eml20:ElectricConductivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricConductivityMeasure * SOAP_FMAC4 soap_get_eml20__ElectricConductivityMeasure(struct soap*, eml20__ElectricConductivityMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricConductivityMeasure(struct soap *soap, eml20__ElectricConductivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricConductivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricConductivityMeasure(struct soap *soap, const char *URL, eml20__ElectricConductivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricConductivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricConductivityMeasure(struct soap *soap, eml20__ElectricConductivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricConductivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AngularVelocityMeasure(struct soap*, const char*, int, const eml20__AngularVelocityMeasure *, const char*);
SOAP_FMAC3 eml20__AngularVelocityMeasure * SOAP_FMAC4 soap_in_eml20__AngularVelocityMeasure(struct soap*, const char*, eml20__AngularVelocityMeasure *, const char*);
SOAP_FMAC1 eml20__AngularVelocityMeasure * SOAP_FMAC2 soap_instantiate_eml20__AngularVelocityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AngularVelocityMeasure * soap_new_eml20__AngularVelocityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AngularVelocityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AngularVelocityMeasure * soap_new_req_eml20__AngularVelocityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AngularVelocityUom uom)
{
	eml20__AngularVelocityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AngularVelocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AngularVelocityMeasure::__item = __item;
		_p->eml20__AngularVelocityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AngularVelocityMeasure * soap_new_set_eml20__AngularVelocityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AngularVelocityUom uom)
{
	eml20__AngularVelocityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AngularVelocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AngularVelocityMeasure::__item = __item;
		_p->eml20__AngularVelocityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AngularVelocityMeasure(struct soap *soap, eml20__AngularVelocityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularVelocityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure ? "eml20:AngularVelocityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AngularVelocityMeasure(struct soap *soap, const char *URL, eml20__AngularVelocityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularVelocityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure ? "eml20:AngularVelocityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AngularVelocityMeasure(struct soap *soap, const char *URL, eml20__AngularVelocityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularVelocityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure ? "eml20:AngularVelocityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AngularVelocityMeasure(struct soap *soap, const char *URL, eml20__AngularVelocityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularVelocityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure ? "eml20:AngularVelocityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AngularVelocityMeasure * SOAP_FMAC4 soap_get_eml20__AngularVelocityMeasure(struct soap*, eml20__AngularVelocityMeasure *, const char*, const char*);

inline int soap_read_eml20__AngularVelocityMeasure(struct soap *soap, eml20__AngularVelocityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AngularVelocityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AngularVelocityMeasure(struct soap *soap, const char *URL, eml20__AngularVelocityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AngularVelocityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AngularVelocityMeasure(struct soap *soap, eml20__AngularVelocityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AngularVelocityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerMassMeasure(struct soap*, const char*, int, const eml20__EnergyPerMassMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyPerMassMeasure * SOAP_FMAC4 soap_in_eml20__EnergyPerMassMeasure(struct soap*, const char*, eml20__EnergyPerMassMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyPerMassMeasure * soap_new_eml20__EnergyPerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyPerMassMeasure * soap_new_req_eml20__EnergyPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerMassUom uom)
{
	eml20__EnergyPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerMassMeasure::__item = __item;
		_p->eml20__EnergyPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyPerMassMeasure * soap_new_set_eml20__EnergyPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerMassUom uom)
{
	eml20__EnergyPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerMassMeasure::__item = __item;
		_p->eml20__EnergyPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyPerMassMeasure(struct soap *soap, eml20__EnergyPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure ? "eml20:EnergyPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerMassMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure ? "eml20:EnergyPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerMassMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure ? "eml20:EnergyPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerMassMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure ? "eml20:EnergyPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyPerMassMeasure * SOAP_FMAC4 soap_get_eml20__EnergyPerMassMeasure(struct soap*, eml20__EnergyPerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyPerMassMeasure(struct soap *soap, eml20__EnergyPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerMassMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerMassMeasure(struct soap *soap, eml20__EnergyPerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyLengthPerAreaMeasure(struct soap*, const char*, int, const eml20__EnergyLengthPerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyLengthPerAreaMeasure * SOAP_FMAC4 soap_in_eml20__EnergyLengthPerAreaMeasure(struct soap*, const char*, eml20__EnergyLengthPerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyLengthPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyLengthPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyLengthPerAreaMeasure * soap_new_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyLengthPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyLengthPerAreaMeasure * soap_new_req_eml20__EnergyLengthPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyLengthPerAreaUom uom)
{
	eml20__EnergyLengthPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyLengthPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyLengthPerAreaMeasure::__item = __item;
		_p->eml20__EnergyLengthPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyLengthPerAreaMeasure * soap_new_set_eml20__EnergyLengthPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyLengthPerAreaUom uom)
{
	eml20__EnergyLengthPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyLengthPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyLengthPerAreaMeasure::__item = __item;
		_p->eml20__EnergyLengthPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, eml20__EnergyLengthPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure ? "eml20:EnergyLengthPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure ? "eml20:EnergyLengthPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure ? "eml20:EnergyLengthPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure ? "eml20:EnergyLengthPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyLengthPerAreaMeasure * SOAP_FMAC4 soap_get_eml20__EnergyLengthPerAreaMeasure(struct soap*, eml20__EnergyLengthPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, eml20__EnergyLengthPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyLengthPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyLengthPerAreaMeasure(struct soap *soap, eml20__EnergyLengthPerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PlaneAngleMeasure(struct soap*, const char*, int, const eml20__PlaneAngleMeasure *, const char*);
SOAP_FMAC3 eml20__PlaneAngleMeasure * SOAP_FMAC4 soap_in_eml20__PlaneAngleMeasure(struct soap*, const char*, eml20__PlaneAngleMeasure *, const char*);
SOAP_FMAC1 eml20__PlaneAngleMeasure * SOAP_FMAC2 soap_instantiate_eml20__PlaneAngleMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PlaneAngleMeasure * soap_new_eml20__PlaneAngleMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PlaneAngleMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PlaneAngleMeasure * soap_new_req_eml20__PlaneAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PlaneAngleUom uom)
{
	eml20__PlaneAngleMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PlaneAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PlaneAngleMeasure::__item = __item;
		_p->eml20__PlaneAngleMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PlaneAngleMeasure * soap_new_set_eml20__PlaneAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PlaneAngleUom uom)
{
	eml20__PlaneAngleMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PlaneAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PlaneAngleMeasure::__item = __item;
		_p->eml20__PlaneAngleMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PlaneAngleMeasure(struct soap *soap, eml20__PlaneAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PlaneAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure ? "eml20:PlaneAngleMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PlaneAngleMeasure(struct soap *soap, const char *URL, eml20__PlaneAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PlaneAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure ? "eml20:PlaneAngleMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PlaneAngleMeasure(struct soap *soap, const char *URL, eml20__PlaneAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PlaneAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure ? "eml20:PlaneAngleMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PlaneAngleMeasure(struct soap *soap, const char *URL, eml20__PlaneAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PlaneAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure ? "eml20:PlaneAngleMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PlaneAngleMeasure * SOAP_FMAC4 soap_get_eml20__PlaneAngleMeasure(struct soap*, eml20__PlaneAngleMeasure *, const char*, const char*);

inline int soap_read_eml20__PlaneAngleMeasure(struct soap *soap, eml20__PlaneAngleMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PlaneAngleMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PlaneAngleMeasure(struct soap *soap, const char *URL, eml20__PlaneAngleMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PlaneAngleMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PlaneAngleMeasure(struct soap *soap, eml20__PlaneAngleMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PlaneAngleMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalForceMeasure(struct soap*, const char*, int, const eml20__ReciprocalForceMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalForceMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalForceMeasure(struct soap*, const char*, eml20__ReciprocalForceMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalForceMeasure * soap_new_eml20__ReciprocalForceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalForceMeasure * soap_new_req_eml20__ReciprocalForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalForceUom uom)
{
	eml20__ReciprocalForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalForceMeasure::__item = __item;
		_p->eml20__ReciprocalForceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalForceMeasure * soap_new_set_eml20__ReciprocalForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalForceUom uom)
{
	eml20__ReciprocalForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalForceMeasure::__item = __item;
		_p->eml20__ReciprocalForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalForceMeasure(struct soap *soap, eml20__ReciprocalForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure ? "eml20:ReciprocalForceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalForceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure ? "eml20:ReciprocalForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalForceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure ? "eml20:ReciprocalForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalForceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure ? "eml20:ReciprocalForceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalForceMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalForceMeasure(struct soap*, eml20__ReciprocalForceMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalForceMeasure(struct soap *soap, eml20__ReciprocalForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalForceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalForceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalForceMeasure(struct soap *soap, eml20__ReciprocalForceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalMassMeasure(struct soap*, const char*, int, const eml20__ReciprocalMassMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalMassMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalMassMeasure(struct soap*, const char*, eml20__ReciprocalMassMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalMassMeasure * soap_new_eml20__ReciprocalMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalMassMeasure * soap_new_req_eml20__ReciprocalMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalMassUom uom)
{
	eml20__ReciprocalMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalMassMeasure::__item = __item;
		_p->eml20__ReciprocalMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalMassMeasure * soap_new_set_eml20__ReciprocalMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalMassUom uom)
{
	eml20__ReciprocalMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalMassMeasure::__item = __item;
		_p->eml20__ReciprocalMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalMassMeasure(struct soap *soap, eml20__ReciprocalMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure ? "eml20:ReciprocalMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalMassMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure ? "eml20:ReciprocalMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalMassMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure ? "eml20:ReciprocalMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalMassMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure ? "eml20:ReciprocalMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalMassMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalMassMeasure(struct soap*, eml20__ReciprocalMassMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalMassMeasure(struct soap *soap, eml20__ReciprocalMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalMassMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalMassMeasure(struct soap *soap, eml20__ReciprocalMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AngularAccelerationMeasure(struct soap*, const char*, int, const eml20__AngularAccelerationMeasure *, const char*);
SOAP_FMAC3 eml20__AngularAccelerationMeasure * SOAP_FMAC4 soap_in_eml20__AngularAccelerationMeasure(struct soap*, const char*, eml20__AngularAccelerationMeasure *, const char*);
SOAP_FMAC1 eml20__AngularAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml20__AngularAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AngularAccelerationMeasure * soap_new_eml20__AngularAccelerationMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AngularAccelerationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AngularAccelerationMeasure * soap_new_req_eml20__AngularAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AngularAccelerationUom uom)
{
	eml20__AngularAccelerationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AngularAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AngularAccelerationMeasure::__item = __item;
		_p->eml20__AngularAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AngularAccelerationMeasure * soap_new_set_eml20__AngularAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AngularAccelerationUom uom)
{
	eml20__AngularAccelerationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AngularAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AngularAccelerationMeasure::__item = __item;
		_p->eml20__AngularAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AngularAccelerationMeasure(struct soap *soap, eml20__AngularAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure ? "eml20:AngularAccelerationMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AngularAccelerationMeasure(struct soap *soap, const char *URL, eml20__AngularAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure ? "eml20:AngularAccelerationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AngularAccelerationMeasure(struct soap *soap, const char *URL, eml20__AngularAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure ? "eml20:AngularAccelerationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AngularAccelerationMeasure(struct soap *soap, const char *URL, eml20__AngularAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AngularAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure ? "eml20:AngularAccelerationMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AngularAccelerationMeasure * SOAP_FMAC4 soap_get_eml20__AngularAccelerationMeasure(struct soap*, eml20__AngularAccelerationMeasure *, const char*, const char*);

inline int soap_read_eml20__AngularAccelerationMeasure(struct soap *soap, eml20__AngularAccelerationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AngularAccelerationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AngularAccelerationMeasure(struct soap *soap, const char *URL, eml20__AngularAccelerationMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AngularAccelerationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AngularAccelerationMeasure(struct soap *soap, eml20__AngularAccelerationMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AngularAccelerationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LogarithmicPowerRatioMeasure(struct soap*, const char*, int, const eml20__LogarithmicPowerRatioMeasure *, const char*);
SOAP_FMAC3 eml20__LogarithmicPowerRatioMeasure * SOAP_FMAC4 soap_in_eml20__LogarithmicPowerRatioMeasure(struct soap*, const char*, eml20__LogarithmicPowerRatioMeasure *, const char*);
SOAP_FMAC1 eml20__LogarithmicPowerRatioMeasure * SOAP_FMAC2 soap_instantiate_eml20__LogarithmicPowerRatioMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LogarithmicPowerRatioMeasure * soap_new_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LogarithmicPowerRatioMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LogarithmicPowerRatioMeasure * soap_new_req_eml20__LogarithmicPowerRatioMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LogarithmicPowerRatioUom uom)
{
	eml20__LogarithmicPowerRatioMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LogarithmicPowerRatioMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LogarithmicPowerRatioMeasure::__item = __item;
		_p->eml20__LogarithmicPowerRatioMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LogarithmicPowerRatioMeasure * soap_new_set_eml20__LogarithmicPowerRatioMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LogarithmicPowerRatioUom uom)
{
	eml20__LogarithmicPowerRatioMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LogarithmicPowerRatioMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LogarithmicPowerRatioMeasure::__item = __item;
		_p->eml20__LogarithmicPowerRatioMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, eml20__LogarithmicPowerRatioMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure ? "eml20:LogarithmicPowerRatioMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure ? "eml20:LogarithmicPowerRatioMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure ? "eml20:LogarithmicPowerRatioMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure ? "eml20:LogarithmicPowerRatioMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LogarithmicPowerRatioMeasure * SOAP_FMAC4 soap_get_eml20__LogarithmicPowerRatioMeasure(struct soap*, eml20__LogarithmicPowerRatioMeasure *, const char*, const char*);

inline int soap_read_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, eml20__LogarithmicPowerRatioMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LogarithmicPowerRatioMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LogarithmicPowerRatioMeasure(struct soap *soap, eml20__LogarithmicPowerRatioMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__NormalizedPowerMeasure(struct soap*, const char*, int, const eml20__NormalizedPowerMeasure *, const char*);
SOAP_FMAC3 eml20__NormalizedPowerMeasure * SOAP_FMAC4 soap_in_eml20__NormalizedPowerMeasure(struct soap*, const char*, eml20__NormalizedPowerMeasure *, const char*);
SOAP_FMAC1 eml20__NormalizedPowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__NormalizedPowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__NormalizedPowerMeasure * soap_new_eml20__NormalizedPowerMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__NormalizedPowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__NormalizedPowerMeasure * soap_new_req_eml20__NormalizedPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__NormalizedPowerUom uom)
{
	eml20__NormalizedPowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__NormalizedPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__NormalizedPowerMeasure::__item = __item;
		_p->eml20__NormalizedPowerMeasure::uom = uom;
	}
	return _p;
}

inline eml20__NormalizedPowerMeasure * soap_new_set_eml20__NormalizedPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__NormalizedPowerUom uom)
{
	eml20__NormalizedPowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__NormalizedPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__NormalizedPowerMeasure::__item = __item;
		_p->eml20__NormalizedPowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__NormalizedPowerMeasure(struct soap *soap, eml20__NormalizedPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:NormalizedPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure ? "eml20:NormalizedPowerMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__NormalizedPowerMeasure(struct soap *soap, const char *URL, eml20__NormalizedPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:NormalizedPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure ? "eml20:NormalizedPowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__NormalizedPowerMeasure(struct soap *soap, const char *URL, eml20__NormalizedPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:NormalizedPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure ? "eml20:NormalizedPowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__NormalizedPowerMeasure(struct soap *soap, const char *URL, eml20__NormalizedPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:NormalizedPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure ? "eml20:NormalizedPowerMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__NormalizedPowerMeasure * SOAP_FMAC4 soap_get_eml20__NormalizedPowerMeasure(struct soap*, eml20__NormalizedPowerMeasure *, const char*, const char*);

inline int soap_read_eml20__NormalizedPowerMeasure(struct soap *soap, eml20__NormalizedPowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__NormalizedPowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__NormalizedPowerMeasure(struct soap *soap, const char *URL, eml20__NormalizedPowerMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__NormalizedPowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__NormalizedPowerMeasure(struct soap *soap, eml20__NormalizedPowerMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__NormalizedPowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassMeasure(struct soap*, const char*, int, const eml20__MassMeasure *, const char*);
SOAP_FMAC3 eml20__MassMeasure * SOAP_FMAC4 soap_in_eml20__MassMeasure(struct soap*, const char*, eml20__MassMeasure *, const char*);
SOAP_FMAC1 eml20__MassMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassMeasure * soap_new_eml20__MassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassMeasure * soap_new_req_eml20__MassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassUom uom)
{
	eml20__MassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassMeasure::__item = __item;
		_p->eml20__MassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassMeasure * soap_new_set_eml20__MassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassUom uom)
{
	eml20__MassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassMeasure::__item = __item;
		_p->eml20__MassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassMeasure(struct soap *soap, eml20__MassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure ? "eml20:MassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassMeasure(struct soap *soap, const char *URL, eml20__MassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure ? "eml20:MassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassMeasure(struct soap *soap, const char *URL, eml20__MassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure ? "eml20:MassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassMeasure(struct soap *soap, const char *URL, eml20__MassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure ? "eml20:MassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassMeasure * SOAP_FMAC4 soap_get_eml20__MassMeasure(struct soap*, eml20__MassMeasure *, const char*, const char*);

inline int soap_read_eml20__MassMeasure(struct soap *soap, eml20__MassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassMeasure(struct soap *soap, const char *URL, eml20__MassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassMeasure(struct soap *soap, eml20__MassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalConductivityMeasure(struct soap*, const char*, int, const eml20__ThermalConductivityMeasure *, const char*);
SOAP_FMAC3 eml20__ThermalConductivityMeasure * SOAP_FMAC4 soap_in_eml20__ThermalConductivityMeasure(struct soap*, const char*, eml20__ThermalConductivityMeasure *, const char*);
SOAP_FMAC1 eml20__ThermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermalConductivityMeasure * soap_new_eml20__ThermalConductivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermalConductivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermalConductivityMeasure * soap_new_req_eml20__ThermalConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalConductivityUom uom)
{
	eml20__ThermalConductivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalConductivityMeasure::__item = __item;
		_p->eml20__ThermalConductivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermalConductivityMeasure * soap_new_set_eml20__ThermalConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalConductivityUom uom)
{
	eml20__ThermalConductivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalConductivityMeasure::__item = __item;
		_p->eml20__ThermalConductivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermalConductivityMeasure(struct soap *soap, eml20__ThermalConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure ? "eml20:ThermalConductivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalConductivityMeasure(struct soap *soap, const char *URL, eml20__ThermalConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure ? "eml20:ThermalConductivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalConductivityMeasure(struct soap *soap, const char *URL, eml20__ThermalConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure ? "eml20:ThermalConductivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalConductivityMeasure(struct soap *soap, const char *URL, eml20__ThermalConductivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure ? "eml20:ThermalConductivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermalConductivityMeasure * SOAP_FMAC4 soap_get_eml20__ThermalConductivityMeasure(struct soap*, eml20__ThermalConductivityMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermalConductivityMeasure(struct soap *soap, eml20__ThermalConductivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalConductivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalConductivityMeasure(struct soap *soap, const char *URL, eml20__ThermalConductivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalConductivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalConductivityMeasure(struct soap *soap, eml20__ThermalConductivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalConductivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerPressureMeasure(struct soap*, const char*, int, const eml20__LengthPerPressureMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerPressureMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerPressureMeasure(struct soap*, const char*, eml20__LengthPerPressureMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerPressureMeasure * soap_new_eml20__LengthPerPressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerPressureMeasure * soap_new_req_eml20__LengthPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerPressureUom uom)
{
	eml20__LengthPerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerPressureMeasure::__item = __item;
		_p->eml20__LengthPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerPressureMeasure * soap_new_set_eml20__LengthPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerPressureUom uom)
{
	eml20__LengthPerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerPressureMeasure::__item = __item;
		_p->eml20__LengthPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerPressureMeasure(struct soap *soap, eml20__LengthPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure ? "eml20:LengthPerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerPressureMeasure(struct soap *soap, const char *URL, eml20__LengthPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure ? "eml20:LengthPerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerPressureMeasure(struct soap *soap, const char *URL, eml20__LengthPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure ? "eml20:LengthPerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerPressureMeasure(struct soap *soap, const char *URL, eml20__LengthPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure ? "eml20:LengthPerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerPressureMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerPressureMeasure(struct soap*, eml20__LengthPerPressureMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerPressureMeasure(struct soap *soap, eml20__LengthPerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerPressureMeasure(struct soap *soap, const char *URL, eml20__LengthPerPressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerPressureMeasure(struct soap *soap, eml20__LengthPerPressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AnglePerVolumeMeasure(struct soap*, const char*, int, const eml20__AnglePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__AnglePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__AnglePerVolumeMeasure(struct soap*, const char*, eml20__AnglePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__AnglePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AnglePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AnglePerVolumeMeasure * soap_new_eml20__AnglePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AnglePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AnglePerVolumeMeasure * soap_new_req_eml20__AnglePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AnglePerVolumeUom uom)
{
	eml20__AnglePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AnglePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AnglePerVolumeMeasure::__item = __item;
		_p->eml20__AnglePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AnglePerVolumeMeasure * soap_new_set_eml20__AnglePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AnglePerVolumeUom uom)
{
	eml20__AnglePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AnglePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AnglePerVolumeMeasure::__item = __item;
		_p->eml20__AnglePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AnglePerVolumeMeasure(struct soap *soap, eml20__AnglePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure ? "eml20:AnglePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AnglePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AnglePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure ? "eml20:AnglePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AnglePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AnglePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure ? "eml20:AnglePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AnglePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AnglePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure ? "eml20:AnglePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AnglePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__AnglePerVolumeMeasure(struct soap*, eml20__AnglePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__AnglePerVolumeMeasure(struct soap *soap, eml20__AnglePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AnglePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AnglePerVolumeMeasure(struct soap *soap, const char *URL, eml20__AnglePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AnglePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AnglePerVolumeMeasure(struct soap *soap, eml20__AnglePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AnglePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, const char*, int, const eml20__PressureSquaredPerForceTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, const char*, eml20__PressureSquaredPerForceTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressureSquaredPerForceTimePerAreaMeasure * soap_new_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressureSquaredPerForceTimePerAreaMeasure * soap_new_req_eml20__PressureSquaredPerForceTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureSquaredPerForceTimePerAreaUom uom)
{
	eml20__PressureSquaredPerForceTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureSquaredPerForceTimePerAreaMeasure::__item = __item;
		_p->eml20__PressureSquaredPerForceTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressureSquaredPerForceTimePerAreaMeasure * soap_new_set_eml20__PressureSquaredPerForceTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureSquaredPerForceTimePerAreaUom uom)
{
	eml20__PressureSquaredPerForceTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureSquaredPerForceTimePerAreaMeasure::__item = __item;
		_p->eml20__PressureSquaredPerForceTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, eml20__PressureSquaredPerForceTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredPerForceTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure ? "eml20:PressureSquaredPerForceTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredPerForceTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredPerForceTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure ? "eml20:PressureSquaredPerForceTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredPerForceTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredPerForceTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure ? "eml20:PressureSquaredPerForceTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredPerForceTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredPerForceTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure ? "eml20:PressureSquaredPerForceTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, eml20__PressureSquaredPerForceTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, eml20__PressureSquaredPerForceTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredPerForceTimePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, eml20__PressureSquaredPerForceTimePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredPerForceTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimeLengthMeasure(struct soap*, const char*, int, const eml20__VolumePerTimeLengthMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimeLengthMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimeLengthMeasure(struct soap*, const char*, eml20__VolumePerTimeLengthMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimeLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimeLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimeLengthMeasure * soap_new_eml20__VolumePerTimeLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimeLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimeLengthMeasure * soap_new_req_eml20__VolumePerTimeLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimeLengthUom uom)
{
	eml20__VolumePerTimeLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimeLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimeLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimeLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimeLengthMeasure * soap_new_set_eml20__VolumePerTimeLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimeLengthUom uom)
{
	eml20__VolumePerTimeLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimeLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimeLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimeLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimeLengthMeasure(struct soap *soap, eml20__VolumePerTimeLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure ? "eml20:VolumePerTimeLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimeLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure ? "eml20:VolumePerTimeLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimeLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure ? "eml20:VolumePerTimeLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimeLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure ? "eml20:VolumePerTimeLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimeLengthMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimeLengthMeasure(struct soap*, eml20__VolumePerTimeLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimeLengthMeasure(struct soap *soap, eml20__VolumePerTimeLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimeLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimeLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimeLengthMeasure(struct soap *soap, eml20__VolumePerTimeLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerTemperatureMeasure(struct soap*, const char*, int, const eml20__LengthPerTemperatureMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerTemperatureMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerTemperatureMeasure(struct soap*, const char*, eml20__LengthPerTemperatureMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerTemperatureMeasure * soap_new_eml20__LengthPerTemperatureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerTemperatureMeasure * soap_new_req_eml20__LengthPerTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerTemperatureUom uom)
{
	eml20__LengthPerTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerTemperatureMeasure::__item = __item;
		_p->eml20__LengthPerTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerTemperatureMeasure * soap_new_set_eml20__LengthPerTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerTemperatureUom uom)
{
	eml20__LengthPerTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerTemperatureMeasure::__item = __item;
		_p->eml20__LengthPerTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerTemperatureMeasure(struct soap *soap, eml20__LengthPerTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure ? "eml20:LengthPerTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerTemperatureMeasure(struct soap *soap, const char *URL, eml20__LengthPerTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure ? "eml20:LengthPerTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerTemperatureMeasure(struct soap *soap, const char *URL, eml20__LengthPerTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure ? "eml20:LengthPerTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerTemperatureMeasure(struct soap *soap, const char *URL, eml20__LengthPerTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure ? "eml20:LengthPerTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerTemperatureMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerTemperatureMeasure(struct soap*, eml20__LengthPerTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerTemperatureMeasure(struct soap *soap, eml20__LengthPerTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerTemperatureMeasure(struct soap *soap, const char *URL, eml20__LengthPerTemperatureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerTemperatureMeasure(struct soap *soap, eml20__LengthPerTemperatureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstancePerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstancePerTimeMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, const char*, eml20__AmountOfSubstancePerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstancePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstancePerTimeMeasure * soap_new_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstancePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstancePerTimeMeasure * soap_new_req_eml20__AmountOfSubstancePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerTimeUom uom)
{
	eml20__AmountOfSubstancePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerTimeMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstancePerTimeMeasure * soap_new_set_eml20__AmountOfSubstancePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerTimeUom uom)
{
	eml20__AmountOfSubstancePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerTimeMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure ? "eml20:AmountOfSubstancePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure ? "eml20:AmountOfSubstancePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure ? "eml20:AmountOfSubstancePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure ? "eml20:AmountOfSubstancePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstancePerTimeMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, eml20__AmountOfSubstancePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerTimeMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerLengthMeasure(struct soap*, const char*, int, const eml20__ForcePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__ForcePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__ForcePerLengthMeasure(struct soap*, const char*, eml20__ForcePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__ForcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForcePerLengthMeasure * soap_new_eml20__ForcePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForcePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForcePerLengthMeasure * soap_new_req_eml20__ForcePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerLengthUom uom)
{
	eml20__ForcePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerLengthMeasure::__item = __item;
		_p->eml20__ForcePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForcePerLengthMeasure * soap_new_set_eml20__ForcePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerLengthUom uom)
{
	eml20__ForcePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerLengthMeasure::__item = __item;
		_p->eml20__ForcePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForcePerLengthMeasure(struct soap *soap, eml20__ForcePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure ? "eml20:ForcePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerLengthMeasure(struct soap *soap, const char *URL, eml20__ForcePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure ? "eml20:ForcePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerLengthMeasure(struct soap *soap, const char *URL, eml20__ForcePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure ? "eml20:ForcePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerLengthMeasure(struct soap *soap, const char *URL, eml20__ForcePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure ? "eml20:ForcePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForcePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__ForcePerLengthMeasure(struct soap*, eml20__ForcePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__ForcePerLengthMeasure(struct soap *soap, eml20__ForcePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerLengthMeasure(struct soap *soap, const char *URL, eml20__ForcePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerLengthMeasure(struct soap *soap, eml20__ForcePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressurePerTimeMeasure(struct soap*, const char*, int, const eml20__PressurePerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__PressurePerTimeMeasure * SOAP_FMAC4 soap_in_eml20__PressurePerTimeMeasure(struct soap*, const char*, eml20__PressurePerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__PressurePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressurePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressurePerTimeMeasure * soap_new_eml20__PressurePerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressurePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressurePerTimeMeasure * soap_new_req_eml20__PressurePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressurePerTimeUom uom)
{
	eml20__PressurePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressurePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressurePerTimeMeasure::__item = __item;
		_p->eml20__PressurePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressurePerTimeMeasure * soap_new_set_eml20__PressurePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressurePerTimeUom uom)
{
	eml20__PressurePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressurePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressurePerTimeMeasure::__item = __item;
		_p->eml20__PressurePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressurePerTimeMeasure(struct soap *soap, eml20__PressurePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure ? "eml20:PressurePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressurePerTimeMeasure(struct soap *soap, const char *URL, eml20__PressurePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure ? "eml20:PressurePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressurePerTimeMeasure(struct soap *soap, const char *URL, eml20__PressurePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure ? "eml20:PressurePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressurePerTimeMeasure(struct soap *soap, const char *URL, eml20__PressurePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure ? "eml20:PressurePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressurePerTimeMeasure * SOAP_FMAC4 soap_get_eml20__PressurePerTimeMeasure(struct soap*, eml20__PressurePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__PressurePerTimeMeasure(struct soap *soap, eml20__PressurePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressurePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressurePerTimeMeasure(struct soap *soap, const char *URL, eml20__PressurePerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressurePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressurePerTimeMeasure(struct soap *soap, eml20__PressurePerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressurePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerVolumePerLengthMeasure(struct soap*, const char*, int, const eml20__MassPerVolumePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerVolumePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__MassPerVolumePerLengthMeasure(struct soap*, const char*, eml20__MassPerVolumePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerVolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerVolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerVolumePerLengthMeasure * soap_new_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerVolumePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerVolumePerLengthMeasure * soap_new_req_eml20__MassPerVolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerVolumePerLengthUom uom)
{
	eml20__MassPerVolumePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerVolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerVolumePerLengthMeasure::__item = __item;
		_p->eml20__MassPerVolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerVolumePerLengthMeasure * soap_new_set_eml20__MassPerVolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerVolumePerLengthUom uom)
{
	eml20__MassPerVolumePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerVolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerVolumePerLengthMeasure::__item = __item;
		_p->eml20__MassPerVolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, eml20__MassPerVolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure ? "eml20:MassPerVolumePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure ? "eml20:MassPerVolumePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure ? "eml20:MassPerVolumePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure ? "eml20:MassPerVolumePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerVolumePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__MassPerVolumePerLengthMeasure(struct soap*, eml20__MassPerVolumePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, eml20__MassPerVolumePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerVolumePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerVolumePerLengthMeasure(struct soap *soap, eml20__MassPerVolumePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__IsothermalCompressibilityMeasure(struct soap*, const char*, int, const eml20__IsothermalCompressibilityMeasure *, const char*);
SOAP_FMAC3 eml20__IsothermalCompressibilityMeasure * SOAP_FMAC4 soap_in_eml20__IsothermalCompressibilityMeasure(struct soap*, const char*, eml20__IsothermalCompressibilityMeasure *, const char*);
SOAP_FMAC1 eml20__IsothermalCompressibilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__IsothermalCompressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__IsothermalCompressibilityMeasure * soap_new_eml20__IsothermalCompressibilityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__IsothermalCompressibilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__IsothermalCompressibilityMeasure * soap_new_req_eml20__IsothermalCompressibilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__IsothermalCompressibilityUom uom)
{
	eml20__IsothermalCompressibilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__IsothermalCompressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__IsothermalCompressibilityMeasure::__item = __item;
		_p->eml20__IsothermalCompressibilityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__IsothermalCompressibilityMeasure * soap_new_set_eml20__IsothermalCompressibilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__IsothermalCompressibilityUom uom)
{
	eml20__IsothermalCompressibilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__IsothermalCompressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__IsothermalCompressibilityMeasure::__item = __item;
		_p->eml20__IsothermalCompressibilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__IsothermalCompressibilityMeasure(struct soap *soap, eml20__IsothermalCompressibilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IsothermalCompressibilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure ? "eml20:IsothermalCompressibilityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__IsothermalCompressibilityMeasure(struct soap *soap, const char *URL, eml20__IsothermalCompressibilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IsothermalCompressibilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure ? "eml20:IsothermalCompressibilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__IsothermalCompressibilityMeasure(struct soap *soap, const char *URL, eml20__IsothermalCompressibilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IsothermalCompressibilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure ? "eml20:IsothermalCompressibilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__IsothermalCompressibilityMeasure(struct soap *soap, const char *URL, eml20__IsothermalCompressibilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IsothermalCompressibilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure ? "eml20:IsothermalCompressibilityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__IsothermalCompressibilityMeasure * SOAP_FMAC4 soap_get_eml20__IsothermalCompressibilityMeasure(struct soap*, eml20__IsothermalCompressibilityMeasure *, const char*, const char*);

inline int soap_read_eml20__IsothermalCompressibilityMeasure(struct soap *soap, eml20__IsothermalCompressibilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__IsothermalCompressibilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__IsothermalCompressibilityMeasure(struct soap *soap, const char *URL, eml20__IsothermalCompressibilityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__IsothermalCompressibilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__IsothermalCompressibilityMeasure(struct soap *soap, eml20__IsothermalCompressibilityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__IsothermalCompressibilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricPotentialDifferenceMeasure(struct soap*, const char*, int, const eml20__ElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_in_eml20__ElectricPotentialDifferenceMeasure(struct soap*, const char*, eml20__ElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricPotentialDifferenceMeasure * soap_new_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricPotentialDifferenceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricPotentialDifferenceMeasure * soap_new_req_eml20__ElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricPotentialDifferenceUom uom)
{
	eml20__ElectricPotentialDifferenceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml20__ElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricPotentialDifferenceMeasure * soap_new_set_eml20__ElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricPotentialDifferenceUom uom)
{
	eml20__ElectricPotentialDifferenceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml20__ElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure ? "eml20:ElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure ? "eml20:ElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure ? "eml20:ElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure ? "eml20:ElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_get_eml20__ElectricPotentialDifferenceMeasure(struct soap*, eml20__ElectricPotentialDifferenceMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ElectricPotentialDifferenceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricPotentialDifferenceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ElectricPotentialDifferenceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricPotentialDifferenceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ElectricPotentialDifferenceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricPotentialDifferenceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DiffusionCoefficientMeasure(struct soap*, const char*, int, const eml20__DiffusionCoefficientMeasure *, const char*);
SOAP_FMAC3 eml20__DiffusionCoefficientMeasure * SOAP_FMAC4 soap_in_eml20__DiffusionCoefficientMeasure(struct soap*, const char*, eml20__DiffusionCoefficientMeasure *, const char*);
SOAP_FMAC1 eml20__DiffusionCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__DiffusionCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DiffusionCoefficientMeasure * soap_new_eml20__DiffusionCoefficientMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DiffusionCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DiffusionCoefficientMeasure * soap_new_req_eml20__DiffusionCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DiffusionCoefficientUom uom)
{
	eml20__DiffusionCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DiffusionCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DiffusionCoefficientMeasure::__item = __item;
		_p->eml20__DiffusionCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DiffusionCoefficientMeasure * soap_new_set_eml20__DiffusionCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DiffusionCoefficientUom uom)
{
	eml20__DiffusionCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DiffusionCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DiffusionCoefficientMeasure::__item = __item;
		_p->eml20__DiffusionCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DiffusionCoefficientMeasure(struct soap *soap, eml20__DiffusionCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DiffusionCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure ? "eml20:DiffusionCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DiffusionCoefficientMeasure(struct soap *soap, const char *URL, eml20__DiffusionCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DiffusionCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure ? "eml20:DiffusionCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DiffusionCoefficientMeasure(struct soap *soap, const char *URL, eml20__DiffusionCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DiffusionCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure ? "eml20:DiffusionCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DiffusionCoefficientMeasure(struct soap *soap, const char *URL, eml20__DiffusionCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DiffusionCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure ? "eml20:DiffusionCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DiffusionCoefficientMeasure * SOAP_FMAC4 soap_get_eml20__DiffusionCoefficientMeasure(struct soap*, eml20__DiffusionCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml20__DiffusionCoefficientMeasure(struct soap *soap, eml20__DiffusionCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DiffusionCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DiffusionCoefficientMeasure(struct soap *soap, const char *URL, eml20__DiffusionCoefficientMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DiffusionCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DiffusionCoefficientMeasure(struct soap *soap, eml20__DiffusionCoefficientMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DiffusionCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APIGammaRayMeasure(struct soap*, const char*, int, const eml20__APIGammaRayMeasure *, const char*);
SOAP_FMAC3 eml20__APIGammaRayMeasure * SOAP_FMAC4 soap_in_eml20__APIGammaRayMeasure(struct soap*, const char*, eml20__APIGammaRayMeasure *, const char*);
SOAP_FMAC1 eml20__APIGammaRayMeasure * SOAP_FMAC2 soap_instantiate_eml20__APIGammaRayMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__APIGammaRayMeasure * soap_new_eml20__APIGammaRayMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__APIGammaRayMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__APIGammaRayMeasure * soap_new_req_eml20__APIGammaRayMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APIGammaRayUom uom)
{
	eml20__APIGammaRayMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APIGammaRayMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APIGammaRayMeasure::__item = __item;
		_p->eml20__APIGammaRayMeasure::uom = uom;
	}
	return _p;
}

inline eml20__APIGammaRayMeasure * soap_new_set_eml20__APIGammaRayMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APIGammaRayUom uom)
{
	eml20__APIGammaRayMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APIGammaRayMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APIGammaRayMeasure::__item = __item;
		_p->eml20__APIGammaRayMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__APIGammaRayMeasure(struct soap *soap, eml20__APIGammaRayMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGammaRayMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure ? "eml20:APIGammaRayMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__APIGammaRayMeasure(struct soap *soap, const char *URL, eml20__APIGammaRayMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGammaRayMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure ? "eml20:APIGammaRayMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APIGammaRayMeasure(struct soap *soap, const char *URL, eml20__APIGammaRayMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGammaRayMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure ? "eml20:APIGammaRayMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APIGammaRayMeasure(struct soap *soap, const char *URL, eml20__APIGammaRayMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGammaRayMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure ? "eml20:APIGammaRayMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__APIGammaRayMeasure * SOAP_FMAC4 soap_get_eml20__APIGammaRayMeasure(struct soap*, eml20__APIGammaRayMeasure *, const char*, const char*);

inline int soap_read_eml20__APIGammaRayMeasure(struct soap *soap, eml20__APIGammaRayMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APIGammaRayMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APIGammaRayMeasure(struct soap *soap, const char *URL, eml20__APIGammaRayMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APIGammaRayMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APIGammaRayMeasure(struct soap *soap, eml20__APIGammaRayMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APIGammaRayMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerMassMeasure(struct soap*, const char*, int, const eml20__ElectricChargePerMassMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricChargePerMassMeasure * SOAP_FMAC4 soap_in_eml20__ElectricChargePerMassMeasure(struct soap*, const char*, eml20__ElectricChargePerMassMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricChargePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricChargePerMassMeasure * soap_new_eml20__ElectricChargePerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricChargePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricChargePerMassMeasure * soap_new_req_eml20__ElectricChargePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerMassUom uom)
{
	eml20__ElectricChargePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerMassMeasure::__item = __item;
		_p->eml20__ElectricChargePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricChargePerMassMeasure * soap_new_set_eml20__ElectricChargePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerMassUom uom)
{
	eml20__ElectricChargePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerMassMeasure::__item = __item;
		_p->eml20__ElectricChargePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricChargePerMassMeasure(struct soap *soap, eml20__ElectricChargePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure ? "eml20:ElectricChargePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerMassMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure ? "eml20:ElectricChargePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerMassMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure ? "eml20:ElectricChargePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerMassMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure ? "eml20:ElectricChargePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricChargePerMassMeasure * SOAP_FMAC4 soap_get_eml20__ElectricChargePerMassMeasure(struct soap*, eml20__ElectricChargePerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerMassMeasure(struct soap *soap, eml20__ElectricChargePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerMassMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerMassMeasure(struct soap *soap, eml20__ElectricChargePerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, const char*, int, const eml20__ReciprocalElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, const char*, eml20__ReciprocalElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalElectricPotentialDifferenceMeasure * soap_new_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalElectricPotentialDifferenceMeasure * soap_new_req_eml20__ReciprocalElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalElectricPotentialDifferenceUom uom)
{
	eml20__ReciprocalElectricPotentialDifferenceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml20__ReciprocalElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalElectricPotentialDifferenceMeasure * soap_new_set_eml20__ReciprocalElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalElectricPotentialDifferenceUom uom)
{
	eml20__ReciprocalElectricPotentialDifferenceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml20__ReciprocalElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ReciprocalElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure ? "eml20:ReciprocalElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure ? "eml20:ReciprocalElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure ? "eml20:ReciprocalElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalElectricPotentialDifferenceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalElectricPotentialDifferenceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure ? "eml20:ReciprocalElectricPotentialDifferenceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, eml20__ReciprocalElectricPotentialDifferenceMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ReciprocalElectricPotentialDifferenceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, const char *URL, eml20__ReciprocalElectricPotentialDifferenceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, eml20__ReciprocalElectricPotentialDifferenceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalElectricPotentialDifferenceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DynamicViscosityMeasure(struct soap*, const char*, int, const eml20__DynamicViscosityMeasure *, const char*);
SOAP_FMAC3 eml20__DynamicViscosityMeasure * SOAP_FMAC4 soap_in_eml20__DynamicViscosityMeasure(struct soap*, const char*, eml20__DynamicViscosityMeasure *, const char*);
SOAP_FMAC1 eml20__DynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml20__DynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DynamicViscosityMeasure * soap_new_eml20__DynamicViscosityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DynamicViscosityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DynamicViscosityMeasure * soap_new_req_eml20__DynamicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DynamicViscosityUom uom)
{
	eml20__DynamicViscosityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DynamicViscosityMeasure::__item = __item;
		_p->eml20__DynamicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DynamicViscosityMeasure * soap_new_set_eml20__DynamicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DynamicViscosityUom uom)
{
	eml20__DynamicViscosityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DynamicViscosityMeasure::__item = __item;
		_p->eml20__DynamicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DynamicViscosityMeasure(struct soap *soap, eml20__DynamicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DynamicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure ? "eml20:DynamicViscosityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DynamicViscosityMeasure(struct soap *soap, const char *URL, eml20__DynamicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DynamicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure ? "eml20:DynamicViscosityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DynamicViscosityMeasure(struct soap *soap, const char *URL, eml20__DynamicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DynamicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure ? "eml20:DynamicViscosityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DynamicViscosityMeasure(struct soap *soap, const char *URL, eml20__DynamicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DynamicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure ? "eml20:DynamicViscosityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DynamicViscosityMeasure * SOAP_FMAC4 soap_get_eml20__DynamicViscosityMeasure(struct soap*, eml20__DynamicViscosityMeasure *, const char*, const char*);

inline int soap_read_eml20__DynamicViscosityMeasure(struct soap *soap, eml20__DynamicViscosityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DynamicViscosityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DynamicViscosityMeasure(struct soap *soap, const char *URL, eml20__DynamicViscosityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DynamicViscosityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DynamicViscosityMeasure(struct soap *soap, eml20__DynamicViscosityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DynamicViscosityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalLengthMeasure(struct soap*, const char*, int, const eml20__ReciprocalLengthMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalLengthMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalLengthMeasure(struct soap*, const char*, eml20__ReciprocalLengthMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalLengthMeasure * soap_new_eml20__ReciprocalLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalLengthMeasure * soap_new_req_eml20__ReciprocalLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalLengthUom uom)
{
	eml20__ReciprocalLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalLengthMeasure::__item = __item;
		_p->eml20__ReciprocalLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalLengthMeasure * soap_new_set_eml20__ReciprocalLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalLengthUom uom)
{
	eml20__ReciprocalLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalLengthMeasure::__item = __item;
		_p->eml20__ReciprocalLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalLengthMeasure(struct soap *soap, eml20__ReciprocalLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure ? "eml20:ReciprocalLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalLengthMeasure(struct soap *soap, const char *URL, eml20__ReciprocalLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure ? "eml20:ReciprocalLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalLengthMeasure(struct soap *soap, const char *URL, eml20__ReciprocalLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure ? "eml20:ReciprocalLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalLengthMeasure(struct soap *soap, const char *URL, eml20__ReciprocalLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure ? "eml20:ReciprocalLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalLengthMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalLengthMeasure(struct soap*, eml20__ReciprocalLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalLengthMeasure(struct soap *soap, eml20__ReciprocalLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalLengthMeasure(struct soap *soap, const char *URL, eml20__ReciprocalLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalLengthMeasure(struct soap *soap, eml20__ReciprocalLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerMassMeasure(struct soap*, const char*, int, const eml20__TimePerMassMeasure *, const char*);
SOAP_FMAC3 eml20__TimePerMassMeasure * SOAP_FMAC4 soap_in_eml20__TimePerMassMeasure(struct soap*, const char*, eml20__TimePerMassMeasure *, const char*);
SOAP_FMAC1 eml20__TimePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TimePerMassMeasure * soap_new_eml20__TimePerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TimePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TimePerMassMeasure * soap_new_req_eml20__TimePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerMassUom uom)
{
	eml20__TimePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerMassMeasure::__item = __item;
		_p->eml20__TimePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TimePerMassMeasure * soap_new_set_eml20__TimePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerMassUom uom)
{
	eml20__TimePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerMassMeasure::__item = __item;
		_p->eml20__TimePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TimePerMassMeasure(struct soap *soap, eml20__TimePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure ? "eml20:TimePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerMassMeasure(struct soap *soap, const char *URL, eml20__TimePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure ? "eml20:TimePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerMassMeasure(struct soap *soap, const char *URL, eml20__TimePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure ? "eml20:TimePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerMassMeasure(struct soap *soap, const char *URL, eml20__TimePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure ? "eml20:TimePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TimePerMassMeasure * SOAP_FMAC4 soap_get_eml20__TimePerMassMeasure(struct soap*, eml20__TimePerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__TimePerMassMeasure(struct soap *soap, eml20__TimePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerMassMeasure(struct soap *soap, const char *URL, eml20__TimePerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerMassMeasure(struct soap *soap, eml20__TimePerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressurePerVolumeMeasure(struct soap*, const char*, int, const eml20__PressurePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__PressurePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__PressurePerVolumeMeasure(struct soap*, const char*, eml20__PressurePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__PressurePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressurePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressurePerVolumeMeasure * soap_new_eml20__PressurePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressurePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressurePerVolumeMeasure * soap_new_req_eml20__PressurePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressurePerVolumeUom uom)
{
	eml20__PressurePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressurePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressurePerVolumeMeasure::__item = __item;
		_p->eml20__PressurePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressurePerVolumeMeasure * soap_new_set_eml20__PressurePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressurePerVolumeUom uom)
{
	eml20__PressurePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressurePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressurePerVolumeMeasure::__item = __item;
		_p->eml20__PressurePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressurePerVolumeMeasure(struct soap *soap, eml20__PressurePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure ? "eml20:PressurePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressurePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressurePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure ? "eml20:PressurePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressurePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressurePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure ? "eml20:PressurePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressurePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressurePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressurePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure ? "eml20:PressurePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressurePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__PressurePerVolumeMeasure(struct soap*, eml20__PressurePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__PressurePerVolumeMeasure(struct soap *soap, eml20__PressurePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressurePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressurePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressurePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressurePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressurePerVolumeMeasure(struct soap *soap, eml20__PressurePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressurePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, const char*, int, const eml20__VolumetricHeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC3 eml20__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC4 soap_in_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, const char*, eml20__VolumetricHeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC1 eml20__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumetricHeatTransferCoefficientMeasure * soap_new_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumetricHeatTransferCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumetricHeatTransferCoefficientMeasure * soap_new_req_eml20__VolumetricHeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumetricHeatTransferCoefficientUom uom)
{
	eml20__VolumetricHeatTransferCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumetricHeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumetricHeatTransferCoefficientMeasure::__item = __item;
		_p->eml20__VolumetricHeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumetricHeatTransferCoefficientMeasure * soap_new_set_eml20__VolumetricHeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumetricHeatTransferCoefficientUom uom)
{
	eml20__VolumetricHeatTransferCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumetricHeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumetricHeatTransferCoefficientMeasure::__item = __item;
		_p->eml20__VolumetricHeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, eml20__VolumetricHeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricHeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure ? "eml20:VolumetricHeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__VolumetricHeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricHeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure ? "eml20:VolumetricHeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__VolumetricHeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricHeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure ? "eml20:VolumetricHeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__VolumetricHeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricHeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure ? "eml20:VolumetricHeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC4 soap_get_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, eml20__VolumetricHeatTransferCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, eml20__VolumetricHeatTransferCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumetricHeatTransferCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__VolumetricHeatTransferCoefficientMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumetricHeatTransferCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, eml20__VolumetricHeatTransferCoefficientMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumetricHeatTransferCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerVolumeMeasure(struct soap*, const char*, int, const eml20__ElectricChargePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricChargePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__ElectricChargePerVolumeMeasure(struct soap*, const char*, eml20__ElectricChargePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricChargePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricChargePerVolumeMeasure * soap_new_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricChargePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricChargePerVolumeMeasure * soap_new_req_eml20__ElectricChargePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerVolumeUom uom)
{
	eml20__ElectricChargePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerVolumeMeasure::__item = __item;
		_p->eml20__ElectricChargePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricChargePerVolumeMeasure * soap_new_set_eml20__ElectricChargePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerVolumeUom uom)
{
	eml20__ElectricChargePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerVolumeMeasure::__item = __item;
		_p->eml20__ElectricChargePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, eml20__ElectricChargePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure ? "eml20:ElectricChargePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure ? "eml20:ElectricChargePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure ? "eml20:ElectricChargePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure ? "eml20:ElectricChargePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricChargePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__ElectricChargePerVolumeMeasure(struct soap*, eml20__ElectricChargePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, eml20__ElectricChargePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerVolumeMeasure(struct soap *soap, eml20__ElectricChargePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerVolumeMeasure(struct soap*, const char*, int, const eml20__EnergyPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyPerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__EnergyPerVolumeMeasure(struct soap*, const char*, eml20__EnergyPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyPerVolumeMeasure * soap_new_eml20__EnergyPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyPerVolumeMeasure * soap_new_req_eml20__EnergyPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerVolumeUom uom)
{
	eml20__EnergyPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerVolumeMeasure::__item = __item;
		_p->eml20__EnergyPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyPerVolumeMeasure * soap_new_set_eml20__EnergyPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerVolumeUom uom)
{
	eml20__EnergyPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerVolumeMeasure::__item = __item;
		_p->eml20__EnergyPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyPerVolumeMeasure(struct soap *soap, eml20__EnergyPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure ? "eml20:EnergyPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerVolumeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure ? "eml20:EnergyPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerVolumeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure ? "eml20:EnergyPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerVolumeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure ? "eml20:EnergyPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyPerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__EnergyPerVolumeMeasure(struct soap*, eml20__EnergyPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyPerVolumeMeasure(struct soap *soap, eml20__EnergyPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerVolumeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerVolumeMeasure(struct soap *soap, eml20__EnergyPerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectromagneticMomentMeasure(struct soap*, const char*, int, const eml20__ElectromagneticMomentMeasure *, const char*);
SOAP_FMAC3 eml20__ElectromagneticMomentMeasure * SOAP_FMAC4 soap_in_eml20__ElectromagneticMomentMeasure(struct soap*, const char*, eml20__ElectromagneticMomentMeasure *, const char*);
SOAP_FMAC1 eml20__ElectromagneticMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectromagneticMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectromagneticMomentMeasure * soap_new_eml20__ElectromagneticMomentMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectromagneticMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectromagneticMomentMeasure * soap_new_req_eml20__ElectromagneticMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectromagneticMomentUom uom)
{
	eml20__ElectromagneticMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectromagneticMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectromagneticMomentMeasure::__item = __item;
		_p->eml20__ElectromagneticMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectromagneticMomentMeasure * soap_new_set_eml20__ElectromagneticMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectromagneticMomentUom uom)
{
	eml20__ElectromagneticMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectromagneticMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectromagneticMomentMeasure::__item = __item;
		_p->eml20__ElectromagneticMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectromagneticMomentMeasure(struct soap *soap, eml20__ElectromagneticMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectromagneticMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure ? "eml20:ElectromagneticMomentMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectromagneticMomentMeasure(struct soap *soap, const char *URL, eml20__ElectromagneticMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectromagneticMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure ? "eml20:ElectromagneticMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectromagneticMomentMeasure(struct soap *soap, const char *URL, eml20__ElectromagneticMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectromagneticMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure ? "eml20:ElectromagneticMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectromagneticMomentMeasure(struct soap *soap, const char *URL, eml20__ElectromagneticMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectromagneticMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure ? "eml20:ElectromagneticMomentMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectromagneticMomentMeasure * SOAP_FMAC4 soap_get_eml20__ElectromagneticMomentMeasure(struct soap*, eml20__ElectromagneticMomentMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectromagneticMomentMeasure(struct soap *soap, eml20__ElectromagneticMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectromagneticMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectromagneticMomentMeasure(struct soap *soap, const char *URL, eml20__ElectromagneticMomentMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectromagneticMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectromagneticMomentMeasure(struct soap *soap, eml20__ElectromagneticMomentMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectromagneticMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerVolumeMeasure(struct soap*, const char*, int, const eml20__TimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__TimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__TimePerVolumeMeasure(struct soap*, const char*, eml20__TimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__TimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TimePerVolumeMeasure * soap_new_eml20__TimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TimePerVolumeMeasure * soap_new_req_eml20__TimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerVolumeUom uom)
{
	eml20__TimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerVolumeMeasure::__item = __item;
		_p->eml20__TimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TimePerVolumeMeasure * soap_new_set_eml20__TimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerVolumeUom uom)
{
	eml20__TimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerVolumeMeasure::__item = __item;
		_p->eml20__TimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TimePerVolumeMeasure(struct soap *soap, eml20__TimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure ? "eml20:TimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__TimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure ? "eml20:TimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__TimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure ? "eml20:TimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__TimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure ? "eml20:TimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__TimePerVolumeMeasure(struct soap*, eml20__TimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__TimePerVolumeMeasure(struct soap *soap, eml20__TimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__TimePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerVolumeMeasure(struct soap *soap, eml20__TimePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__InductanceMeasure(struct soap*, const char*, int, const eml20__InductanceMeasure *, const char*);
SOAP_FMAC3 eml20__InductanceMeasure * SOAP_FMAC4 soap_in_eml20__InductanceMeasure(struct soap*, const char*, eml20__InductanceMeasure *, const char*);
SOAP_FMAC1 eml20__InductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__InductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__InductanceMeasure * soap_new_eml20__InductanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__InductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__InductanceMeasure * soap_new_req_eml20__InductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__InductanceUom uom)
{
	eml20__InductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__InductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__InductanceMeasure::__item = __item;
		_p->eml20__InductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__InductanceMeasure * soap_new_set_eml20__InductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__InductanceUom uom)
{
	eml20__InductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__InductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__InductanceMeasure::__item = __item;
		_p->eml20__InductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__InductanceMeasure(struct soap *soap, eml20__InductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:InductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure ? "eml20:InductanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__InductanceMeasure(struct soap *soap, const char *URL, eml20__InductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:InductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure ? "eml20:InductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__InductanceMeasure(struct soap *soap, const char *URL, eml20__InductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:InductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure ? "eml20:InductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__InductanceMeasure(struct soap *soap, const char *URL, eml20__InductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:InductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure ? "eml20:InductanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__InductanceMeasure * SOAP_FMAC4 soap_get_eml20__InductanceMeasure(struct soap*, eml20__InductanceMeasure *, const char*, const char*);

inline int soap_read_eml20__InductanceMeasure(struct soap *soap, eml20__InductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__InductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__InductanceMeasure(struct soap *soap, const char *URL, eml20__InductanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__InductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__InductanceMeasure(struct soap *soap, eml20__InductanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__InductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__KinematicViscosityMeasure(struct soap*, const char*, int, const eml20__KinematicViscosityMeasure *, const char*);
SOAP_FMAC3 eml20__KinematicViscosityMeasure * SOAP_FMAC4 soap_in_eml20__KinematicViscosityMeasure(struct soap*, const char*, eml20__KinematicViscosityMeasure *, const char*);
SOAP_FMAC1 eml20__KinematicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml20__KinematicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__KinematicViscosityMeasure * soap_new_eml20__KinematicViscosityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__KinematicViscosityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__KinematicViscosityMeasure * soap_new_req_eml20__KinematicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__KinematicViscosityUom uom)
{
	eml20__KinematicViscosityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__KinematicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__KinematicViscosityMeasure::__item = __item;
		_p->eml20__KinematicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__KinematicViscosityMeasure * soap_new_set_eml20__KinematicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__KinematicViscosityUom uom)
{
	eml20__KinematicViscosityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__KinematicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__KinematicViscosityMeasure::__item = __item;
		_p->eml20__KinematicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__KinematicViscosityMeasure(struct soap *soap, eml20__KinematicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:KinematicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure ? "eml20:KinematicViscosityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__KinematicViscosityMeasure(struct soap *soap, const char *URL, eml20__KinematicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:KinematicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure ? "eml20:KinematicViscosityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__KinematicViscosityMeasure(struct soap *soap, const char *URL, eml20__KinematicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:KinematicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure ? "eml20:KinematicViscosityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__KinematicViscosityMeasure(struct soap *soap, const char *URL, eml20__KinematicViscosityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:KinematicViscosityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure ? "eml20:KinematicViscosityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__KinematicViscosityMeasure * SOAP_FMAC4 soap_get_eml20__KinematicViscosityMeasure(struct soap*, eml20__KinematicViscosityMeasure *, const char*, const char*);

inline int soap_read_eml20__KinematicViscosityMeasure(struct soap *soap, eml20__KinematicViscosityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__KinematicViscosityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__KinematicViscosityMeasure(struct soap *soap, const char *URL, eml20__KinematicViscosityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__KinematicViscosityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__KinematicViscosityMeasure(struct soap *soap, eml20__KinematicViscosityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__KinematicViscosityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalAreaMeasure(struct soap*, const char*, int, const eml20__ReciprocalAreaMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalAreaMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalAreaMeasure(struct soap*, const char*, eml20__ReciprocalAreaMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalAreaMeasure * soap_new_eml20__ReciprocalAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalAreaMeasure * soap_new_req_eml20__ReciprocalAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalAreaUom uom)
{
	eml20__ReciprocalAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalAreaMeasure::__item = __item;
		_p->eml20__ReciprocalAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalAreaMeasure * soap_new_set_eml20__ReciprocalAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalAreaUom uom)
{
	eml20__ReciprocalAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalAreaMeasure::__item = __item;
		_p->eml20__ReciprocalAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalAreaMeasure(struct soap *soap, eml20__ReciprocalAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure ? "eml20:ReciprocalAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalAreaMeasure(struct soap *soap, const char *URL, eml20__ReciprocalAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure ? "eml20:ReciprocalAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalAreaMeasure(struct soap *soap, const char *URL, eml20__ReciprocalAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure ? "eml20:ReciprocalAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalAreaMeasure(struct soap *soap, const char *URL, eml20__ReciprocalAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure ? "eml20:ReciprocalAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalAreaMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalAreaMeasure(struct soap*, eml20__ReciprocalAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalAreaMeasure(struct soap *soap, eml20__ReciprocalAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalAreaMeasure(struct soap *soap, const char *URL, eml20__ReciprocalAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalAreaMeasure(struct soap *soap, eml20__ReciprocalAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassLengthMeasure(struct soap*, const char*, int, const eml20__MassLengthMeasure *, const char*);
SOAP_FMAC3 eml20__MassLengthMeasure * SOAP_FMAC4 soap_in_eml20__MassLengthMeasure(struct soap*, const char*, eml20__MassLengthMeasure *, const char*);
SOAP_FMAC1 eml20__MassLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassLengthMeasure * soap_new_eml20__MassLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassLengthMeasure * soap_new_req_eml20__MassLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassLengthUom uom)
{
	eml20__MassLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassLengthMeasure::__item = __item;
		_p->eml20__MassLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassLengthMeasure * soap_new_set_eml20__MassLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassLengthUom uom)
{
	eml20__MassLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassLengthMeasure::__item = __item;
		_p->eml20__MassLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassLengthMeasure(struct soap *soap, eml20__MassLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure ? "eml20:MassLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassLengthMeasure(struct soap *soap, const char *URL, eml20__MassLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure ? "eml20:MassLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassLengthMeasure(struct soap *soap, const char *URL, eml20__MassLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure ? "eml20:MassLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassLengthMeasure(struct soap *soap, const char *URL, eml20__MassLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure ? "eml20:MassLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassLengthMeasure * SOAP_FMAC4 soap_get_eml20__MassLengthMeasure(struct soap*, eml20__MassLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MassLengthMeasure(struct soap *soap, eml20__MassLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassLengthMeasure(struct soap *soap, const char *URL, eml20__MassLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassLengthMeasure(struct soap *soap, eml20__MassLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricalResistivityMeasure(struct soap*, const char*, int, const eml20__ElectricalResistivityMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricalResistivityMeasure * SOAP_FMAC4 soap_in_eml20__ElectricalResistivityMeasure(struct soap*, const char*, eml20__ElectricalResistivityMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricalResistivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricalResistivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricalResistivityMeasure * soap_new_eml20__ElectricalResistivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricalResistivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricalResistivityMeasure * soap_new_req_eml20__ElectricalResistivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricalResistivityUom uom)
{
	eml20__ElectricalResistivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricalResistivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricalResistivityMeasure::__item = __item;
		_p->eml20__ElectricalResistivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricalResistivityMeasure * soap_new_set_eml20__ElectricalResistivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricalResistivityUom uom)
{
	eml20__ElectricalResistivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricalResistivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricalResistivityMeasure::__item = __item;
		_p->eml20__ElectricalResistivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricalResistivityMeasure(struct soap *soap, eml20__ElectricalResistivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricalResistivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure ? "eml20:ElectricalResistivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricalResistivityMeasure(struct soap *soap, const char *URL, eml20__ElectricalResistivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricalResistivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure ? "eml20:ElectricalResistivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricalResistivityMeasure(struct soap *soap, const char *URL, eml20__ElectricalResistivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricalResistivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure ? "eml20:ElectricalResistivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricalResistivityMeasure(struct soap *soap, const char *URL, eml20__ElectricalResistivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricalResistivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure ? "eml20:ElectricalResistivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricalResistivityMeasure * SOAP_FMAC4 soap_get_eml20__ElectricalResistivityMeasure(struct soap*, eml20__ElectricalResistivityMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricalResistivityMeasure(struct soap *soap, eml20__ElectricalResistivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricalResistivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricalResistivityMeasure(struct soap *soap, const char *URL, eml20__ElectricalResistivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricalResistivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricalResistivityMeasure(struct soap *soap, eml20__ElectricalResistivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricalResistivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__CapacitanceMeasure(struct soap*, const char*, int, const eml20__CapacitanceMeasure *, const char*);
SOAP_FMAC3 eml20__CapacitanceMeasure * SOAP_FMAC4 soap_in_eml20__CapacitanceMeasure(struct soap*, const char*, eml20__CapacitanceMeasure *, const char*);
SOAP_FMAC1 eml20__CapacitanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__CapacitanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__CapacitanceMeasure * soap_new_eml20__CapacitanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__CapacitanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__CapacitanceMeasure * soap_new_req_eml20__CapacitanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__CapacitanceUom uom)
{
	eml20__CapacitanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__CapacitanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__CapacitanceMeasure::__item = __item;
		_p->eml20__CapacitanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__CapacitanceMeasure * soap_new_set_eml20__CapacitanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__CapacitanceUom uom)
{
	eml20__CapacitanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__CapacitanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__CapacitanceMeasure::__item = __item;
		_p->eml20__CapacitanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__CapacitanceMeasure(struct soap *soap, eml20__CapacitanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CapacitanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure ? "eml20:CapacitanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__CapacitanceMeasure(struct soap *soap, const char *URL, eml20__CapacitanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CapacitanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure ? "eml20:CapacitanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__CapacitanceMeasure(struct soap *soap, const char *URL, eml20__CapacitanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CapacitanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure ? "eml20:CapacitanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__CapacitanceMeasure(struct soap *soap, const char *URL, eml20__CapacitanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CapacitanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure ? "eml20:CapacitanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__CapacitanceMeasure * SOAP_FMAC4 soap_get_eml20__CapacitanceMeasure(struct soap*, eml20__CapacitanceMeasure *, const char*, const char*);

inline int soap_read_eml20__CapacitanceMeasure(struct soap *soap, eml20__CapacitanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__CapacitanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__CapacitanceMeasure(struct soap *soap, const char *URL, eml20__CapacitanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__CapacitanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__CapacitanceMeasure(struct soap *soap, eml20__CapacitanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__CapacitanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__FrequencyIntervalMeasure(struct soap*, const char*, int, const eml20__FrequencyIntervalMeasure *, const char*);
SOAP_FMAC3 eml20__FrequencyIntervalMeasure * SOAP_FMAC4 soap_in_eml20__FrequencyIntervalMeasure(struct soap*, const char*, eml20__FrequencyIntervalMeasure *, const char*);
SOAP_FMAC1 eml20__FrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__FrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__FrequencyIntervalMeasure * soap_new_eml20__FrequencyIntervalMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__FrequencyIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__FrequencyIntervalMeasure * soap_new_req_eml20__FrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__FrequencyIntervalUom uom)
{
	eml20__FrequencyIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__FrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__FrequencyIntervalMeasure::__item = __item;
		_p->eml20__FrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml20__FrequencyIntervalMeasure * soap_new_set_eml20__FrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__FrequencyIntervalUom uom)
{
	eml20__FrequencyIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__FrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__FrequencyIntervalMeasure::__item = __item;
		_p->eml20__FrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__FrequencyIntervalMeasure(struct soap *soap, eml20__FrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure ? "eml20:FrequencyIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__FrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__FrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure ? "eml20:FrequencyIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__FrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__FrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure ? "eml20:FrequencyIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__FrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__FrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure ? "eml20:FrequencyIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__FrequencyIntervalMeasure * SOAP_FMAC4 soap_get_eml20__FrequencyIntervalMeasure(struct soap*, eml20__FrequencyIntervalMeasure *, const char*, const char*);

inline int soap_read_eml20__FrequencyIntervalMeasure(struct soap *soap, eml20__FrequencyIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__FrequencyIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__FrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__FrequencyIntervalMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__FrequencyIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__FrequencyIntervalMeasure(struct soap *soap, eml20__FrequencyIntervalMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__FrequencyIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__FrequencyMeasure(struct soap*, const char*, int, const eml20__FrequencyMeasure *, const char*);
SOAP_FMAC3 eml20__FrequencyMeasure * SOAP_FMAC4 soap_in_eml20__FrequencyMeasure(struct soap*, const char*, eml20__FrequencyMeasure *, const char*);
SOAP_FMAC1 eml20__FrequencyMeasure * SOAP_FMAC2 soap_instantiate_eml20__FrequencyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__FrequencyMeasure * soap_new_eml20__FrequencyMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__FrequencyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__FrequencyMeasure * soap_new_req_eml20__FrequencyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__FrequencyUom uom)
{
	eml20__FrequencyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__FrequencyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__FrequencyMeasure::__item = __item;
		_p->eml20__FrequencyMeasure::uom = uom;
	}
	return _p;
}

inline eml20__FrequencyMeasure * soap_new_set_eml20__FrequencyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__FrequencyUom uom)
{
	eml20__FrequencyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__FrequencyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__FrequencyMeasure::__item = __item;
		_p->eml20__FrequencyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__FrequencyMeasure(struct soap *soap, eml20__FrequencyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure ? "eml20:FrequencyMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__FrequencyMeasure(struct soap *soap, const char *URL, eml20__FrequencyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure ? "eml20:FrequencyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__FrequencyMeasure(struct soap *soap, const char *URL, eml20__FrequencyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure ? "eml20:FrequencyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__FrequencyMeasure(struct soap *soap, const char *URL, eml20__FrequencyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:FrequencyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure ? "eml20:FrequencyMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__FrequencyMeasure * SOAP_FMAC4 soap_get_eml20__FrequencyMeasure(struct soap*, eml20__FrequencyMeasure *, const char*, const char*);

inline int soap_read_eml20__FrequencyMeasure(struct soap *soap, eml20__FrequencyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__FrequencyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__FrequencyMeasure(struct soap *soap, const char *URL, eml20__FrequencyMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__FrequencyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__FrequencyMeasure(struct soap *soap, eml20__FrequencyMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__FrequencyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SignalingEventPerTimeMeasure(struct soap*, const char*, int, const eml20__SignalingEventPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__SignalingEventPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__SignalingEventPerTimeMeasure(struct soap*, const char*, eml20__SignalingEventPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__SignalingEventPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__SignalingEventPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__SignalingEventPerTimeMeasure * soap_new_eml20__SignalingEventPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__SignalingEventPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__SignalingEventPerTimeMeasure * soap_new_req_eml20__SignalingEventPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SignalingEventPerTimeUom uom)
{
	eml20__SignalingEventPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SignalingEventPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SignalingEventPerTimeMeasure::__item = __item;
		_p->eml20__SignalingEventPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__SignalingEventPerTimeMeasure * soap_new_set_eml20__SignalingEventPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SignalingEventPerTimeUom uom)
{
	eml20__SignalingEventPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SignalingEventPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SignalingEventPerTimeMeasure::__item = __item;
		_p->eml20__SignalingEventPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__SignalingEventPerTimeMeasure(struct soap *soap, eml20__SignalingEventPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SignalingEventPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure ? "eml20:SignalingEventPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__SignalingEventPerTimeMeasure(struct soap *soap, const char *URL, eml20__SignalingEventPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SignalingEventPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure ? "eml20:SignalingEventPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SignalingEventPerTimeMeasure(struct soap *soap, const char *URL, eml20__SignalingEventPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SignalingEventPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure ? "eml20:SignalingEventPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SignalingEventPerTimeMeasure(struct soap *soap, const char *URL, eml20__SignalingEventPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SignalingEventPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure ? "eml20:SignalingEventPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__SignalingEventPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__SignalingEventPerTimeMeasure(struct soap*, eml20__SignalingEventPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__SignalingEventPerTimeMeasure(struct soap *soap, eml20__SignalingEventPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SignalingEventPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SignalingEventPerTimeMeasure(struct soap *soap, const char *URL, eml20__SignalingEventPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SignalingEventPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SignalingEventPerTimeMeasure(struct soap *soap, eml20__SignalingEventPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SignalingEventPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ActivityOfRadioactivityMeasure(struct soap*, const char*, int, const eml20__ActivityOfRadioactivityMeasure *, const char*);
SOAP_FMAC3 eml20__ActivityOfRadioactivityMeasure * SOAP_FMAC4 soap_in_eml20__ActivityOfRadioactivityMeasure(struct soap*, const char*, eml20__ActivityOfRadioactivityMeasure *, const char*);
SOAP_FMAC1 eml20__ActivityOfRadioactivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ActivityOfRadioactivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ActivityOfRadioactivityMeasure * soap_new_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ActivityOfRadioactivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ActivityOfRadioactivityMeasure * soap_new_req_eml20__ActivityOfRadioactivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ActivityOfRadioactivityUom uom)
{
	eml20__ActivityOfRadioactivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ActivityOfRadioactivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ActivityOfRadioactivityMeasure::__item = __item;
		_p->eml20__ActivityOfRadioactivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ActivityOfRadioactivityMeasure * soap_new_set_eml20__ActivityOfRadioactivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ActivityOfRadioactivityUom uom)
{
	eml20__ActivityOfRadioactivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ActivityOfRadioactivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ActivityOfRadioactivityMeasure::__item = __item;
		_p->eml20__ActivityOfRadioactivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, eml20__ActivityOfRadioactivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ActivityOfRadioactivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure ? "eml20:ActivityOfRadioactivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, const char *URL, eml20__ActivityOfRadioactivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ActivityOfRadioactivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure ? "eml20:ActivityOfRadioactivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, const char *URL, eml20__ActivityOfRadioactivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ActivityOfRadioactivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure ? "eml20:ActivityOfRadioactivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, const char *URL, eml20__ActivityOfRadioactivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ActivityOfRadioactivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure ? "eml20:ActivityOfRadioactivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ActivityOfRadioactivityMeasure * SOAP_FMAC4 soap_get_eml20__ActivityOfRadioactivityMeasure(struct soap*, eml20__ActivityOfRadioactivityMeasure *, const char*, const char*);

inline int soap_read_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, eml20__ActivityOfRadioactivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ActivityOfRadioactivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, const char *URL, eml20__ActivityOfRadioactivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ActivityOfRadioactivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ActivityOfRadioactivityMeasure(struct soap *soap, eml20__ActivityOfRadioactivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ActivityOfRadioactivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolecularWeightMeasure(struct soap*, const char*, int, const eml20__MolecularWeightMeasure *, const char*);
SOAP_FMAC3 eml20__MolecularWeightMeasure * SOAP_FMAC4 soap_in_eml20__MolecularWeightMeasure(struct soap*, const char*, eml20__MolecularWeightMeasure *, const char*);
SOAP_FMAC1 eml20__MolecularWeightMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolecularWeightMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MolecularWeightMeasure * soap_new_eml20__MolecularWeightMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MolecularWeightMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MolecularWeightMeasure * soap_new_req_eml20__MolecularWeightMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolecularWeightUom uom)
{
	eml20__MolecularWeightMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolecularWeightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolecularWeightMeasure::__item = __item;
		_p->eml20__MolecularWeightMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MolecularWeightMeasure * soap_new_set_eml20__MolecularWeightMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolecularWeightUom uom)
{
	eml20__MolecularWeightMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolecularWeightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolecularWeightMeasure::__item = __item;
		_p->eml20__MolecularWeightMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MolecularWeightMeasure(struct soap *soap, eml20__MolecularWeightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolecularWeightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure ? "eml20:MolecularWeightMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolecularWeightMeasure(struct soap *soap, const char *URL, eml20__MolecularWeightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolecularWeightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure ? "eml20:MolecularWeightMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolecularWeightMeasure(struct soap *soap, const char *URL, eml20__MolecularWeightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolecularWeightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure ? "eml20:MolecularWeightMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolecularWeightMeasure(struct soap *soap, const char *URL, eml20__MolecularWeightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolecularWeightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure ? "eml20:MolecularWeightMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MolecularWeightMeasure * SOAP_FMAC4 soap_get_eml20__MolecularWeightMeasure(struct soap*, eml20__MolecularWeightMeasure *, const char*, const char*);

inline int soap_read_eml20__MolecularWeightMeasure(struct soap *soap, eml20__MolecularWeightMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolecularWeightMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolecularWeightMeasure(struct soap *soap, const char *URL, eml20__MolecularWeightMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolecularWeightMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolecularWeightMeasure(struct soap *soap, eml20__MolecularWeightMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolecularWeightMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimePerLengthMeasure(struct soap*, const char*, int, const eml20__MassPerTimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerTimePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__MassPerTimePerLengthMeasure(struct soap*, const char*, eml20__MassPerTimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerTimePerLengthMeasure * soap_new_eml20__MassPerTimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerTimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerTimePerLengthMeasure * soap_new_req_eml20__MassPerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimePerLengthUom uom)
{
	eml20__MassPerTimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimePerLengthMeasure::__item = __item;
		_p->eml20__MassPerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerTimePerLengthMeasure * soap_new_set_eml20__MassPerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimePerLengthUom uom)
{
	eml20__MassPerTimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimePerLengthMeasure::__item = __item;
		_p->eml20__MassPerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerTimePerLengthMeasure(struct soap *soap, eml20__MassPerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure ? "eml20:MassPerTimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure ? "eml20:MassPerTimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure ? "eml20:MassPerTimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure ? "eml20:MassPerTimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerTimePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__MassPerTimePerLengthMeasure(struct soap*, eml20__MassPerTimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerTimePerLengthMeasure(struct soap *soap, eml20__MassPerTimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerTimePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimePerLengthMeasure(struct soap *soap, eml20__MassPerTimePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentOfInertiaMeasure(struct soap*, const char*, int, const eml20__MomentOfInertiaMeasure *, const char*);
SOAP_FMAC3 eml20__MomentOfInertiaMeasure * SOAP_FMAC4 soap_in_eml20__MomentOfInertiaMeasure(struct soap*, const char*, eml20__MomentOfInertiaMeasure *, const char*);
SOAP_FMAC1 eml20__MomentOfInertiaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentOfInertiaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MomentOfInertiaMeasure * soap_new_eml20__MomentOfInertiaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MomentOfInertiaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MomentOfInertiaMeasure * soap_new_req_eml20__MomentOfInertiaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentOfInertiaUom uom)
{
	eml20__MomentOfInertiaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentOfInertiaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentOfInertiaMeasure::__item = __item;
		_p->eml20__MomentOfInertiaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MomentOfInertiaMeasure * soap_new_set_eml20__MomentOfInertiaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentOfInertiaUom uom)
{
	eml20__MomentOfInertiaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentOfInertiaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentOfInertiaMeasure::__item = __item;
		_p->eml20__MomentOfInertiaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MomentOfInertiaMeasure(struct soap *soap, eml20__MomentOfInertiaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfInertiaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure ? "eml20:MomentOfInertiaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentOfInertiaMeasure(struct soap *soap, const char *URL, eml20__MomentOfInertiaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfInertiaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure ? "eml20:MomentOfInertiaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentOfInertiaMeasure(struct soap *soap, const char *URL, eml20__MomentOfInertiaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfInertiaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure ? "eml20:MomentOfInertiaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentOfInertiaMeasure(struct soap *soap, const char *URL, eml20__MomentOfInertiaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfInertiaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure ? "eml20:MomentOfInertiaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MomentOfInertiaMeasure * SOAP_FMAC4 soap_get_eml20__MomentOfInertiaMeasure(struct soap*, eml20__MomentOfInertiaMeasure *, const char*, const char*);

inline int soap_read_eml20__MomentOfInertiaMeasure(struct soap *soap, eml20__MomentOfInertiaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentOfInertiaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentOfInertiaMeasure(struct soap *soap, const char *URL, eml20__MomentOfInertiaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentOfInertiaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentOfInertiaMeasure(struct soap *soap, eml20__MomentOfInertiaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentOfInertiaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, const char*, int, const eml20__PotentialDifferencePerPowerDropMeasure *, const char*);
SOAP_FMAC3 eml20__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC4 soap_in_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, const char*, eml20__PotentialDifferencePerPowerDropMeasure *, const char*);
SOAP_FMAC1 eml20__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC2 soap_instantiate_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PotentialDifferencePerPowerDropMeasure * soap_new_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PotentialDifferencePerPowerDropMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PotentialDifferencePerPowerDropMeasure * soap_new_req_eml20__PotentialDifferencePerPowerDropMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PotentialDifferencePerPowerDropUom uom)
{
	eml20__PotentialDifferencePerPowerDropMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PotentialDifferencePerPowerDropMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PotentialDifferencePerPowerDropMeasure::__item = __item;
		_p->eml20__PotentialDifferencePerPowerDropMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PotentialDifferencePerPowerDropMeasure * soap_new_set_eml20__PotentialDifferencePerPowerDropMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PotentialDifferencePerPowerDropUom uom)
{
	eml20__PotentialDifferencePerPowerDropMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PotentialDifferencePerPowerDropMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PotentialDifferencePerPowerDropMeasure::__item = __item;
		_p->eml20__PotentialDifferencePerPowerDropMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, eml20__PotentialDifferencePerPowerDropMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PotentialDifferencePerPowerDropMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure ? "eml20:PotentialDifferencePerPowerDropMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, const char *URL, eml20__PotentialDifferencePerPowerDropMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PotentialDifferencePerPowerDropMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure ? "eml20:PotentialDifferencePerPowerDropMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, const char *URL, eml20__PotentialDifferencePerPowerDropMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PotentialDifferencePerPowerDropMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure ? "eml20:PotentialDifferencePerPowerDropMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, const char *URL, eml20__PotentialDifferencePerPowerDropMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PotentialDifferencePerPowerDropMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure ? "eml20:PotentialDifferencePerPowerDropMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC4 soap_get_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, eml20__PotentialDifferencePerPowerDropMeasure *, const char*, const char*);

inline int soap_read_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, eml20__PotentialDifferencePerPowerDropMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PotentialDifferencePerPowerDropMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, const char *URL, eml20__PotentialDifferencePerPowerDropMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PotentialDifferencePerPowerDropMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PotentialDifferencePerPowerDropMeasure(struct soap *soap, eml20__PotentialDifferencePerPowerDropMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PotentialDifferencePerPowerDropMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SpecificHeatCapacityMeasure(struct soap*, const char*, int, const eml20__SpecificHeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml20__SpecificHeatCapacityMeasure * SOAP_FMAC4 soap_in_eml20__SpecificHeatCapacityMeasure(struct soap*, const char*, eml20__SpecificHeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml20__SpecificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__SpecificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__SpecificHeatCapacityMeasure * soap_new_eml20__SpecificHeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__SpecificHeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__SpecificHeatCapacityMeasure * soap_new_req_eml20__SpecificHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SpecificHeatCapacityUom uom)
{
	eml20__SpecificHeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SpecificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SpecificHeatCapacityMeasure::__item = __item;
		_p->eml20__SpecificHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__SpecificHeatCapacityMeasure * soap_new_set_eml20__SpecificHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SpecificHeatCapacityUom uom)
{
	eml20__SpecificHeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SpecificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SpecificHeatCapacityMeasure::__item = __item;
		_p->eml20__SpecificHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__SpecificHeatCapacityMeasure(struct soap *soap, eml20__SpecificHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SpecificHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure ? "eml20:SpecificHeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__SpecificHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__SpecificHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SpecificHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure ? "eml20:SpecificHeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SpecificHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__SpecificHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SpecificHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure ? "eml20:SpecificHeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SpecificHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__SpecificHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SpecificHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure ? "eml20:SpecificHeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__SpecificHeatCapacityMeasure * SOAP_FMAC4 soap_get_eml20__SpecificHeatCapacityMeasure(struct soap*, eml20__SpecificHeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml20__SpecificHeatCapacityMeasure(struct soap *soap, eml20__SpecificHeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SpecificHeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SpecificHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__SpecificHeatCapacityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SpecificHeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SpecificHeatCapacityMeasure(struct soap *soap, eml20__SpecificHeatCapacityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SpecificHeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalTimeMeasure(struct soap*, const char*, int, const eml20__ReciprocalTimeMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalTimeMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalTimeMeasure(struct soap*, const char*, eml20__ReciprocalTimeMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalTimeMeasure * soap_new_eml20__ReciprocalTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalTimeMeasure * soap_new_req_eml20__ReciprocalTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalTimeUom uom)
{
	eml20__ReciprocalTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalTimeMeasure::__item = __item;
		_p->eml20__ReciprocalTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalTimeMeasure * soap_new_set_eml20__ReciprocalTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalTimeUom uom)
{
	eml20__ReciprocalTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalTimeMeasure::__item = __item;
		_p->eml20__ReciprocalTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalTimeMeasure(struct soap *soap, eml20__ReciprocalTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure ? "eml20:ReciprocalTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure ? "eml20:ReciprocalTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure ? "eml20:ReciprocalTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure ? "eml20:ReciprocalTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalTimeMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalTimeMeasure(struct soap*, eml20__ReciprocalTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalTimeMeasure(struct soap *soap, eml20__ReciprocalTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalTimeMeasure(struct soap *soap, eml20__ReciprocalTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, const char*, int, const eml20__LogarithmicPowerRatioPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, const char*, eml20__LogarithmicPowerRatioPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LogarithmicPowerRatioPerLengthMeasure * soap_new_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LogarithmicPowerRatioPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LogarithmicPowerRatioPerLengthMeasure * soap_new_req_eml20__LogarithmicPowerRatioPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LogarithmicPowerRatioPerLengthUom uom)
{
	eml20__LogarithmicPowerRatioPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LogarithmicPowerRatioPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LogarithmicPowerRatioPerLengthMeasure::__item = __item;
		_p->eml20__LogarithmicPowerRatioPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LogarithmicPowerRatioPerLengthMeasure * soap_new_set_eml20__LogarithmicPowerRatioPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LogarithmicPowerRatioPerLengthUom uom)
{
	eml20__LogarithmicPowerRatioPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LogarithmicPowerRatioPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LogarithmicPowerRatioPerLengthMeasure::__item = __item;
		_p->eml20__LogarithmicPowerRatioPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, eml20__LogarithmicPowerRatioPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure ? "eml20:LogarithmicPowerRatioPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure ? "eml20:LogarithmicPowerRatioPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure ? "eml20:LogarithmicPowerRatioPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LogarithmicPowerRatioPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure ? "eml20:LogarithmicPowerRatioPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, eml20__LogarithmicPowerRatioPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, eml20__LogarithmicPowerRatioPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LogarithmicPowerRatioPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, const char *URL, eml20__LogarithmicPowerRatioPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, eml20__LogarithmicPowerRatioPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LogarithmicPowerRatioPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalDiffusivityMeasure(struct soap*, const char*, int, const eml20__ThermalDiffusivityMeasure *, const char*);
SOAP_FMAC3 eml20__ThermalDiffusivityMeasure * SOAP_FMAC4 soap_in_eml20__ThermalDiffusivityMeasure(struct soap*, const char*, eml20__ThermalDiffusivityMeasure *, const char*);
SOAP_FMAC1 eml20__ThermalDiffusivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalDiffusivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermalDiffusivityMeasure * soap_new_eml20__ThermalDiffusivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermalDiffusivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermalDiffusivityMeasure * soap_new_req_eml20__ThermalDiffusivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalDiffusivityUom uom)
{
	eml20__ThermalDiffusivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalDiffusivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalDiffusivityMeasure::__item = __item;
		_p->eml20__ThermalDiffusivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermalDiffusivityMeasure * soap_new_set_eml20__ThermalDiffusivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalDiffusivityUom uom)
{
	eml20__ThermalDiffusivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalDiffusivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalDiffusivityMeasure::__item = __item;
		_p->eml20__ThermalDiffusivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermalDiffusivityMeasure(struct soap *soap, eml20__ThermalDiffusivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalDiffusivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure ? "eml20:ThermalDiffusivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalDiffusivityMeasure(struct soap *soap, const char *URL, eml20__ThermalDiffusivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalDiffusivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure ? "eml20:ThermalDiffusivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalDiffusivityMeasure(struct soap *soap, const char *URL, eml20__ThermalDiffusivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalDiffusivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure ? "eml20:ThermalDiffusivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalDiffusivityMeasure(struct soap *soap, const char *URL, eml20__ThermalDiffusivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalDiffusivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure ? "eml20:ThermalDiffusivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermalDiffusivityMeasure * SOAP_FMAC4 soap_get_eml20__ThermalDiffusivityMeasure(struct soap*, eml20__ThermalDiffusivityMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermalDiffusivityMeasure(struct soap *soap, eml20__ThermalDiffusivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalDiffusivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalDiffusivityMeasure(struct soap *soap, const char *URL, eml20__ThermalDiffusivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalDiffusivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalDiffusivityMeasure(struct soap *soap, eml20__ThermalDiffusivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalDiffusivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerVolumeMeasure(struct soap*, const char*, int, const eml20__PowerPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__PowerPerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__PowerPerVolumeMeasure(struct soap*, const char*, eml20__PowerPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__PowerPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PowerPerVolumeMeasure * soap_new_eml20__PowerPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PowerPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PowerPerVolumeMeasure * soap_new_req_eml20__PowerPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerVolumeUom uom)
{
	eml20__PowerPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerVolumeMeasure::__item = __item;
		_p->eml20__PowerPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PowerPerVolumeMeasure * soap_new_set_eml20__PowerPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerVolumeUom uom)
{
	eml20__PowerPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerVolumeMeasure::__item = __item;
		_p->eml20__PowerPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PowerPerVolumeMeasure(struct soap *soap, eml20__PowerPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure ? "eml20:PowerPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerVolumeMeasure(struct soap *soap, const char *URL, eml20__PowerPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure ? "eml20:PowerPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerVolumeMeasure(struct soap *soap, const char *URL, eml20__PowerPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure ? "eml20:PowerPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerVolumeMeasure(struct soap *soap, const char *URL, eml20__PowerPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure ? "eml20:PowerPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PowerPerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__PowerPerVolumeMeasure(struct soap*, eml20__PowerPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__PowerPerVolumeMeasure(struct soap *soap, eml20__PowerPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerVolumeMeasure(struct soap *soap, const char *URL, eml20__PowerPerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerVolumeMeasure(struct soap *soap, eml20__PowerPerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentumMeasure(struct soap*, const char*, int, const eml20__MomentumMeasure *, const char*);
SOAP_FMAC3 eml20__MomentumMeasure * SOAP_FMAC4 soap_in_eml20__MomentumMeasure(struct soap*, const char*, eml20__MomentumMeasure *, const char*);
SOAP_FMAC1 eml20__MomentumMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentumMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MomentumMeasure * soap_new_eml20__MomentumMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MomentumMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MomentumMeasure * soap_new_req_eml20__MomentumMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentumUom uom)
{
	eml20__MomentumMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentumMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentumMeasure::__item = __item;
		_p->eml20__MomentumMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MomentumMeasure * soap_new_set_eml20__MomentumMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentumUom uom)
{
	eml20__MomentumMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentumMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentumMeasure::__item = __item;
		_p->eml20__MomentumMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MomentumMeasure(struct soap *soap, eml20__MomentumMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentumMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure ? "eml20:MomentumMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentumMeasure(struct soap *soap, const char *URL, eml20__MomentumMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentumMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure ? "eml20:MomentumMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentumMeasure(struct soap *soap, const char *URL, eml20__MomentumMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentumMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure ? "eml20:MomentumMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentumMeasure(struct soap *soap, const char *URL, eml20__MomentumMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentumMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure ? "eml20:MomentumMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MomentumMeasure * SOAP_FMAC4 soap_get_eml20__MomentumMeasure(struct soap*, eml20__MomentumMeasure *, const char*, const char*);

inline int soap_read_eml20__MomentumMeasure(struct soap *soap, eml20__MomentumMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentumMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentumMeasure(struct soap *soap, const char *URL, eml20__MomentumMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentumMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentumMeasure(struct soap *soap, eml20__MomentumMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentumMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, const char*, int, const eml20__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*);
SOAP_FMAC3 eml20__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC4 soap_in_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, const char*, eml20__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*);
SOAP_FMAC1 eml20__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_req_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumeFlowRatePerVolumeFlowRateUom uom)
{
	eml20__VolumeFlowRatePerVolumeFlowRateMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumeFlowRatePerVolumeFlowRateMeasure::__item = __item;
		_p->eml20__VolumeFlowRatePerVolumeFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_set_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumeFlowRatePerVolumeFlowRateUom uom)
{
	eml20__VolumeFlowRatePerVolumeFlowRateMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumeFlowRatePerVolumeFlowRateMeasure::__item = __item;
		_p->eml20__VolumeFlowRatePerVolumeFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, eml20__VolumeFlowRatePerVolumeFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeFlowRatePerVolumeFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure ? "eml20:VolumeFlowRatePerVolumeFlowRateMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, const char *URL, eml20__VolumeFlowRatePerVolumeFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeFlowRatePerVolumeFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure ? "eml20:VolumeFlowRatePerVolumeFlowRateMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, const char *URL, eml20__VolumeFlowRatePerVolumeFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeFlowRatePerVolumeFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure ? "eml20:VolumeFlowRatePerVolumeFlowRateMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, const char *URL, eml20__VolumeFlowRatePerVolumeFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeFlowRatePerVolumeFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure ? "eml20:VolumeFlowRatePerVolumeFlowRateMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC4 soap_get_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, eml20__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, eml20__VolumeFlowRatePerVolumeFlowRateMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, const char *URL, eml20__VolumeFlowRatePerVolumeFlowRateMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, eml20__VolumeFlowRatePerVolumeFlowRateMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerTimeMeasure(struct soap*, const char*, int, const eml20__AreaPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__AreaPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__AreaPerTimeMeasure(struct soap*, const char*, eml20__AreaPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__AreaPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaPerTimeMeasure * soap_new_eml20__AreaPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaPerTimeMeasure * soap_new_req_eml20__AreaPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerTimeUom uom)
{
	eml20__AreaPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerTimeMeasure::__item = __item;
		_p->eml20__AreaPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaPerTimeMeasure * soap_new_set_eml20__AreaPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerTimeUom uom)
{
	eml20__AreaPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerTimeMeasure::__item = __item;
		_p->eml20__AreaPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaPerTimeMeasure(struct soap *soap, eml20__AreaPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure ? "eml20:AreaPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerTimeMeasure(struct soap *soap, const char *URL, eml20__AreaPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure ? "eml20:AreaPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerTimeMeasure(struct soap *soap, const char *URL, eml20__AreaPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure ? "eml20:AreaPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerTimeMeasure(struct soap *soap, const char *URL, eml20__AreaPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure ? "eml20:AreaPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__AreaPerTimeMeasure(struct soap*, eml20__AreaPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaPerTimeMeasure(struct soap *soap, eml20__AreaPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerTimeMeasure(struct soap *soap, const char *URL, eml20__AreaPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerTimeMeasure(struct soap *soap, eml20__AreaPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousEfficacyMeasure(struct soap*, const char*, int, const eml20__LuminousEfficacyMeasure *, const char*);
SOAP_FMAC3 eml20__LuminousEfficacyMeasure * SOAP_FMAC4 soap_in_eml20__LuminousEfficacyMeasure(struct soap*, const char*, eml20__LuminousEfficacyMeasure *, const char*);
SOAP_FMAC1 eml20__LuminousEfficacyMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousEfficacyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LuminousEfficacyMeasure * soap_new_eml20__LuminousEfficacyMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LuminousEfficacyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LuminousEfficacyMeasure * soap_new_req_eml20__LuminousEfficacyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousEfficacyUom uom)
{
	eml20__LuminousEfficacyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousEfficacyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousEfficacyMeasure::__item = __item;
		_p->eml20__LuminousEfficacyMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LuminousEfficacyMeasure * soap_new_set_eml20__LuminousEfficacyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousEfficacyUom uom)
{
	eml20__LuminousEfficacyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousEfficacyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousEfficacyMeasure::__item = __item;
		_p->eml20__LuminousEfficacyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LuminousEfficacyMeasure(struct soap *soap, eml20__LuminousEfficacyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousEfficacyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure ? "eml20:LuminousEfficacyMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousEfficacyMeasure(struct soap *soap, const char *URL, eml20__LuminousEfficacyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousEfficacyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure ? "eml20:LuminousEfficacyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousEfficacyMeasure(struct soap *soap, const char *URL, eml20__LuminousEfficacyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousEfficacyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure ? "eml20:LuminousEfficacyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousEfficacyMeasure(struct soap *soap, const char *URL, eml20__LuminousEfficacyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousEfficacyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure ? "eml20:LuminousEfficacyMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LuminousEfficacyMeasure * SOAP_FMAC4 soap_get_eml20__LuminousEfficacyMeasure(struct soap*, eml20__LuminousEfficacyMeasure *, const char*, const char*);

inline int soap_read_eml20__LuminousEfficacyMeasure(struct soap *soap, eml20__LuminousEfficacyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousEfficacyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousEfficacyMeasure(struct soap *soap, const char *URL, eml20__LuminousEfficacyMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousEfficacyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousEfficacyMeasure(struct soap *soap, eml20__LuminousEfficacyMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousEfficacyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__QuantityOfLightMeasure(struct soap*, const char*, int, const eml20__QuantityOfLightMeasure *, const char*);
SOAP_FMAC3 eml20__QuantityOfLightMeasure * SOAP_FMAC4 soap_in_eml20__QuantityOfLightMeasure(struct soap*, const char*, eml20__QuantityOfLightMeasure *, const char*);
SOAP_FMAC1 eml20__QuantityOfLightMeasure * SOAP_FMAC2 soap_instantiate_eml20__QuantityOfLightMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__QuantityOfLightMeasure * soap_new_eml20__QuantityOfLightMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__QuantityOfLightMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__QuantityOfLightMeasure * soap_new_req_eml20__QuantityOfLightMeasure(
	struct soap *soap,
	double __item,
	enum eml20__QuantityOfLightUom uom)
{
	eml20__QuantityOfLightMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__QuantityOfLightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__QuantityOfLightMeasure::__item = __item;
		_p->eml20__QuantityOfLightMeasure::uom = uom;
	}
	return _p;
}

inline eml20__QuantityOfLightMeasure * soap_new_set_eml20__QuantityOfLightMeasure(
	struct soap *soap,
	double __item,
	enum eml20__QuantityOfLightUom uom)
{
	eml20__QuantityOfLightMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__QuantityOfLightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__QuantityOfLightMeasure::__item = __item;
		_p->eml20__QuantityOfLightMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__QuantityOfLightMeasure(struct soap *soap, eml20__QuantityOfLightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:QuantityOfLightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure ? "eml20:QuantityOfLightMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__QuantityOfLightMeasure(struct soap *soap, const char *URL, eml20__QuantityOfLightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:QuantityOfLightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure ? "eml20:QuantityOfLightMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__QuantityOfLightMeasure(struct soap *soap, const char *URL, eml20__QuantityOfLightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:QuantityOfLightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure ? "eml20:QuantityOfLightMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__QuantityOfLightMeasure(struct soap *soap, const char *URL, eml20__QuantityOfLightMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:QuantityOfLightMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure ? "eml20:QuantityOfLightMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__QuantityOfLightMeasure * SOAP_FMAC4 soap_get_eml20__QuantityOfLightMeasure(struct soap*, eml20__QuantityOfLightMeasure *, const char*, const char*);

inline int soap_read_eml20__QuantityOfLightMeasure(struct soap *soap, eml20__QuantityOfLightMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__QuantityOfLightMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__QuantityOfLightMeasure(struct soap *soap, const char *URL, eml20__QuantityOfLightMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__QuantityOfLightMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__QuantityOfLightMeasure(struct soap *soap, eml20__QuantityOfLightMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__QuantityOfLightMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerAreaMeasure(struct soap*, const char*, int, const eml20__VolumePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerAreaMeasure(struct soap*, const char*, eml20__VolumePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerAreaMeasure * soap_new_eml20__VolumePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerAreaMeasure * soap_new_req_eml20__VolumePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerAreaUom uom)
{
	eml20__VolumePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerAreaMeasure::__item = __item;
		_p->eml20__VolumePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerAreaMeasure * soap_new_set_eml20__VolumePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerAreaUom uom)
{
	eml20__VolumePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerAreaMeasure::__item = __item;
		_p->eml20__VolumePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerAreaMeasure(struct soap *soap, eml20__VolumePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure ? "eml20:VolumePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure ? "eml20:VolumePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure ? "eml20:VolumePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure ? "eml20:VolumePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerAreaMeasure(struct soap*, eml20__VolumePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerAreaMeasure(struct soap *soap, eml20__VolumePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerAreaMeasure(struct soap *soap, eml20__VolumePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxDensityMeasure(struct soap*, const char*, int, const eml20__MagneticFluxDensityMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticFluxDensityMeasure * SOAP_FMAC4 soap_in_eml20__MagneticFluxDensityMeasure(struct soap*, const char*, eml20__MagneticFluxDensityMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticFluxDensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxDensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticFluxDensityMeasure * soap_new_eml20__MagneticFluxDensityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticFluxDensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticFluxDensityMeasure * soap_new_req_eml20__MagneticFluxDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxDensityUom uom)
{
	eml20__MagneticFluxDensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxDensityMeasure::__item = __item;
		_p->eml20__MagneticFluxDensityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticFluxDensityMeasure * soap_new_set_eml20__MagneticFluxDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxDensityUom uom)
{
	eml20__MagneticFluxDensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxDensityMeasure::__item = __item;
		_p->eml20__MagneticFluxDensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticFluxDensityMeasure(struct soap *soap, eml20__MagneticFluxDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure ? "eml20:MagneticFluxDensityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxDensityMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure ? "eml20:MagneticFluxDensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxDensityMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure ? "eml20:MagneticFluxDensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxDensityMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure ? "eml20:MagneticFluxDensityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticFluxDensityMeasure * SOAP_FMAC4 soap_get_eml20__MagneticFluxDensityMeasure(struct soap*, eml20__MagneticFluxDensityMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxDensityMeasure(struct soap *soap, eml20__MagneticFluxDensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxDensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxDensityMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxDensityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxDensityMeasure(struct soap *soap, eml20__MagneticFluxDensityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxDensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SecondMomentOfAreaMeasure(struct soap*, const char*, int, const eml20__SecondMomentOfAreaMeasure *, const char*);
SOAP_FMAC3 eml20__SecondMomentOfAreaMeasure * SOAP_FMAC4 soap_in_eml20__SecondMomentOfAreaMeasure(struct soap*, const char*, eml20__SecondMomentOfAreaMeasure *, const char*);
SOAP_FMAC1 eml20__SecondMomentOfAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__SecondMomentOfAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__SecondMomentOfAreaMeasure * soap_new_eml20__SecondMomentOfAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__SecondMomentOfAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__SecondMomentOfAreaMeasure * soap_new_req_eml20__SecondMomentOfAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SecondMomentOfAreaUom uom)
{
	eml20__SecondMomentOfAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SecondMomentOfAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SecondMomentOfAreaMeasure::__item = __item;
		_p->eml20__SecondMomentOfAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__SecondMomentOfAreaMeasure * soap_new_set_eml20__SecondMomentOfAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SecondMomentOfAreaUom uom)
{
	eml20__SecondMomentOfAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SecondMomentOfAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SecondMomentOfAreaMeasure::__item = __item;
		_p->eml20__SecondMomentOfAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__SecondMomentOfAreaMeasure(struct soap *soap, eml20__SecondMomentOfAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SecondMomentOfAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure ? "eml20:SecondMomentOfAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__SecondMomentOfAreaMeasure(struct soap *soap, const char *URL, eml20__SecondMomentOfAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SecondMomentOfAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure ? "eml20:SecondMomentOfAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SecondMomentOfAreaMeasure(struct soap *soap, const char *URL, eml20__SecondMomentOfAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SecondMomentOfAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure ? "eml20:SecondMomentOfAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SecondMomentOfAreaMeasure(struct soap *soap, const char *URL, eml20__SecondMomentOfAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SecondMomentOfAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure ? "eml20:SecondMomentOfAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__SecondMomentOfAreaMeasure * SOAP_FMAC4 soap_get_eml20__SecondMomentOfAreaMeasure(struct soap*, eml20__SecondMomentOfAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__SecondMomentOfAreaMeasure(struct soap *soap, eml20__SecondMomentOfAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SecondMomentOfAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SecondMomentOfAreaMeasure(struct soap *soap, const char *URL, eml20__SecondMomentOfAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SecondMomentOfAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SecondMomentOfAreaMeasure(struct soap *soap, eml20__SecondMomentOfAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SecondMomentOfAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerVolumeMeasure(struct soap*, const char*, int, const eml20__LengthPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerVolumeMeasure(struct soap*, const char*, eml20__LengthPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerVolumeMeasure * soap_new_eml20__LengthPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerVolumeMeasure * soap_new_req_eml20__LengthPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerVolumeUom uom)
{
	eml20__LengthPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerVolumeMeasure::__item = __item;
		_p->eml20__LengthPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerVolumeMeasure * soap_new_set_eml20__LengthPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerVolumeUom uom)
{
	eml20__LengthPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerVolumeMeasure::__item = __item;
		_p->eml20__LengthPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerVolumeMeasure(struct soap *soap, eml20__LengthPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure ? "eml20:LengthPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerVolumeMeasure(struct soap *soap, const char *URL, eml20__LengthPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure ? "eml20:LengthPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerVolumeMeasure(struct soap *soap, const char *URL, eml20__LengthPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure ? "eml20:LengthPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerVolumeMeasure(struct soap *soap, const char *URL, eml20__LengthPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure ? "eml20:LengthPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerVolumeMeasure(struct soap*, eml20__LengthPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerVolumeMeasure(struct soap *soap, eml20__LengthPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerVolumeMeasure(struct soap *soap, const char *URL, eml20__LengthPerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerVolumeMeasure(struct soap *soap, eml20__LengthPerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarEnergyMeasure(struct soap*, const char*, int, const eml20__MolarEnergyMeasure *, const char*);
SOAP_FMAC3 eml20__MolarEnergyMeasure * SOAP_FMAC4 soap_in_eml20__MolarEnergyMeasure(struct soap*, const char*, eml20__MolarEnergyMeasure *, const char*);
SOAP_FMAC1 eml20__MolarEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MolarEnergyMeasure * soap_new_eml20__MolarEnergyMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MolarEnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MolarEnergyMeasure * soap_new_req_eml20__MolarEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarEnergyUom uom)
{
	eml20__MolarEnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarEnergyMeasure::__item = __item;
		_p->eml20__MolarEnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MolarEnergyMeasure * soap_new_set_eml20__MolarEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarEnergyUom uom)
{
	eml20__MolarEnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarEnergyMeasure::__item = __item;
		_p->eml20__MolarEnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MolarEnergyMeasure(struct soap *soap, eml20__MolarEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure ? "eml20:MolarEnergyMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarEnergyMeasure(struct soap *soap, const char *URL, eml20__MolarEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure ? "eml20:MolarEnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarEnergyMeasure(struct soap *soap, const char *URL, eml20__MolarEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure ? "eml20:MolarEnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarEnergyMeasure(struct soap *soap, const char *URL, eml20__MolarEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure ? "eml20:MolarEnergyMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MolarEnergyMeasure * SOAP_FMAC4 soap_get_eml20__MolarEnergyMeasure(struct soap*, eml20__MolarEnergyMeasure *, const char*, const char*);

inline int soap_read_eml20__MolarEnergyMeasure(struct soap *soap, eml20__MolarEnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarEnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarEnergyMeasure(struct soap *soap, const char *URL, eml20__MolarEnergyMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarEnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarEnergyMeasure(struct soap *soap, eml20__MolarEnergyMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarEnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousIntensityMeasure(struct soap*, const char*, int, const eml20__LuminousIntensityMeasure *, const char*);
SOAP_FMAC3 eml20__LuminousIntensityMeasure * SOAP_FMAC4 soap_in_eml20__LuminousIntensityMeasure(struct soap*, const char*, eml20__LuminousIntensityMeasure *, const char*);
SOAP_FMAC1 eml20__LuminousIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LuminousIntensityMeasure * soap_new_eml20__LuminousIntensityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LuminousIntensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LuminousIntensityMeasure * soap_new_req_eml20__LuminousIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousIntensityUom uom)
{
	eml20__LuminousIntensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousIntensityMeasure::__item = __item;
		_p->eml20__LuminousIntensityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LuminousIntensityMeasure * soap_new_set_eml20__LuminousIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousIntensityUom uom)
{
	eml20__LuminousIntensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousIntensityMeasure::__item = __item;
		_p->eml20__LuminousIntensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LuminousIntensityMeasure(struct soap *soap, eml20__LuminousIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure ? "eml20:LuminousIntensityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousIntensityMeasure(struct soap *soap, const char *URL, eml20__LuminousIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure ? "eml20:LuminousIntensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousIntensityMeasure(struct soap *soap, const char *URL, eml20__LuminousIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure ? "eml20:LuminousIntensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousIntensityMeasure(struct soap *soap, const char *URL, eml20__LuminousIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure ? "eml20:LuminousIntensityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LuminousIntensityMeasure * SOAP_FMAC4 soap_get_eml20__LuminousIntensityMeasure(struct soap*, eml20__LuminousIntensityMeasure *, const char*, const char*);

inline int soap_read_eml20__LuminousIntensityMeasure(struct soap *soap, eml20__LuminousIntensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousIntensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousIntensityMeasure(struct soap *soap, const char *URL, eml20__LuminousIntensityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousIntensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousIntensityMeasure(struct soap *soap, eml20__LuminousIntensityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousIntensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargeMeasure(struct soap*, const char*, int, const eml20__ElectricChargeMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricChargeMeasure * SOAP_FMAC4 soap_in_eml20__ElectricChargeMeasure(struct soap*, const char*, eml20__ElectricChargeMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricChargeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricChargeMeasure * soap_new_eml20__ElectricChargeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricChargeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricChargeMeasure * soap_new_req_eml20__ElectricChargeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargeUom uom)
{
	eml20__ElectricChargeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargeMeasure::__item = __item;
		_p->eml20__ElectricChargeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricChargeMeasure * soap_new_set_eml20__ElectricChargeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargeUom uom)
{
	eml20__ElectricChargeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargeMeasure::__item = __item;
		_p->eml20__ElectricChargeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricChargeMeasure(struct soap *soap, eml20__ElectricChargeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure ? "eml20:ElectricChargeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure ? "eml20:ElectricChargeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure ? "eml20:ElectricChargeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure ? "eml20:ElectricChargeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricChargeMeasure * SOAP_FMAC4 soap_get_eml20__ElectricChargeMeasure(struct soap*, eml20__ElectricChargeMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricChargeMeasure(struct soap *soap, eml20__ElectricChargeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargeMeasure(struct soap *soap, const char *URL, eml20__ElectricChargeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargeMeasure(struct soap *soap, eml20__ElectricChargeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DigitalStorageMeasure(struct soap*, const char*, int, const eml20__DigitalStorageMeasure *, const char*);
SOAP_FMAC3 eml20__DigitalStorageMeasure * SOAP_FMAC4 soap_in_eml20__DigitalStorageMeasure(struct soap*, const char*, eml20__DigitalStorageMeasure *, const char*);
SOAP_FMAC1 eml20__DigitalStorageMeasure * SOAP_FMAC2 soap_instantiate_eml20__DigitalStorageMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DigitalStorageMeasure * soap_new_eml20__DigitalStorageMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DigitalStorageMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DigitalStorageMeasure * soap_new_req_eml20__DigitalStorageMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DigitalStorageUom uom)
{
	eml20__DigitalStorageMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DigitalStorageMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DigitalStorageMeasure::__item = __item;
		_p->eml20__DigitalStorageMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DigitalStorageMeasure * soap_new_set_eml20__DigitalStorageMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DigitalStorageUom uom)
{
	eml20__DigitalStorageMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DigitalStorageMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DigitalStorageMeasure::__item = __item;
		_p->eml20__DigitalStorageMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DigitalStorageMeasure(struct soap *soap, eml20__DigitalStorageMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DigitalStorageMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure ? "eml20:DigitalStorageMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DigitalStorageMeasure(struct soap *soap, const char *URL, eml20__DigitalStorageMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DigitalStorageMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure ? "eml20:DigitalStorageMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DigitalStorageMeasure(struct soap *soap, const char *URL, eml20__DigitalStorageMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DigitalStorageMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure ? "eml20:DigitalStorageMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DigitalStorageMeasure(struct soap *soap, const char *URL, eml20__DigitalStorageMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DigitalStorageMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure ? "eml20:DigitalStorageMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DigitalStorageMeasure * SOAP_FMAC4 soap_get_eml20__DigitalStorageMeasure(struct soap*, eml20__DigitalStorageMeasure *, const char*, const char*);

inline int soap_read_eml20__DigitalStorageMeasure(struct soap *soap, eml20__DigitalStorageMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DigitalStorageMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DigitalStorageMeasure(struct soap *soap, const char *URL, eml20__DigitalStorageMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DigitalStorageMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DigitalStorageMeasure(struct soap *soap, eml20__DigitalStorageMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DigitalStorageMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarHeatCapacityMeasure(struct soap*, const char*, int, const eml20__MolarHeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml20__MolarHeatCapacityMeasure * SOAP_FMAC4 soap_in_eml20__MolarHeatCapacityMeasure(struct soap*, const char*, eml20__MolarHeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml20__MolarHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MolarHeatCapacityMeasure * soap_new_eml20__MolarHeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MolarHeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MolarHeatCapacityMeasure * soap_new_req_eml20__MolarHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarHeatCapacityUom uom)
{
	eml20__MolarHeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarHeatCapacityMeasure::__item = __item;
		_p->eml20__MolarHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MolarHeatCapacityMeasure * soap_new_set_eml20__MolarHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarHeatCapacityUom uom)
{
	eml20__MolarHeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarHeatCapacityMeasure::__item = __item;
		_p->eml20__MolarHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MolarHeatCapacityMeasure(struct soap *soap, eml20__MolarHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure ? "eml20:MolarHeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__MolarHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure ? "eml20:MolarHeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__MolarHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure ? "eml20:MolarHeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__MolarHeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarHeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure ? "eml20:MolarHeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MolarHeatCapacityMeasure * SOAP_FMAC4 soap_get_eml20__MolarHeatCapacityMeasure(struct soap*, eml20__MolarHeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml20__MolarHeatCapacityMeasure(struct soap *soap, eml20__MolarHeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarHeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarHeatCapacityMeasure(struct soap *soap, const char *URL, eml20__MolarHeatCapacityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarHeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarHeatCapacityMeasure(struct soap *soap, eml20__MolarHeatCapacityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarHeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerVolumeMeasure(struct soap*, const char*, int, const eml20__ForcePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__ForcePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__ForcePerVolumeMeasure(struct soap*, const char*, eml20__ForcePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__ForcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForcePerVolumeMeasure * soap_new_eml20__ForcePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForcePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForcePerVolumeMeasure * soap_new_req_eml20__ForcePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerVolumeUom uom)
{
	eml20__ForcePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerVolumeMeasure::__item = __item;
		_p->eml20__ForcePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForcePerVolumeMeasure * soap_new_set_eml20__ForcePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerVolumeUom uom)
{
	eml20__ForcePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerVolumeMeasure::__item = __item;
		_p->eml20__ForcePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForcePerVolumeMeasure(struct soap *soap, eml20__ForcePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure ? "eml20:ForcePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ForcePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure ? "eml20:ForcePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ForcePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure ? "eml20:ForcePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ForcePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure ? "eml20:ForcePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForcePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__ForcePerVolumeMeasure(struct soap*, eml20__ForcePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__ForcePerVolumeMeasure(struct soap *soap, eml20__ForcePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerVolumeMeasure(struct soap *soap, const char *URL, eml20__ForcePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerVolumeMeasure(struct soap *soap, eml20__ForcePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminanceMeasure(struct soap*, const char*, int, const eml20__LuminanceMeasure *, const char*);
SOAP_FMAC3 eml20__LuminanceMeasure * SOAP_FMAC4 soap_in_eml20__LuminanceMeasure(struct soap*, const char*, eml20__LuminanceMeasure *, const char*);
SOAP_FMAC1 eml20__LuminanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LuminanceMeasure * soap_new_eml20__LuminanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LuminanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LuminanceMeasure * soap_new_req_eml20__LuminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminanceUom uom)
{
	eml20__LuminanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminanceMeasure::__item = __item;
		_p->eml20__LuminanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LuminanceMeasure * soap_new_set_eml20__LuminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminanceUom uom)
{
	eml20__LuminanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminanceMeasure::__item = __item;
		_p->eml20__LuminanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LuminanceMeasure(struct soap *soap, eml20__LuminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure ? "eml20:LuminanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminanceMeasure(struct soap *soap, const char *URL, eml20__LuminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure ? "eml20:LuminanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminanceMeasure(struct soap *soap, const char *URL, eml20__LuminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure ? "eml20:LuminanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminanceMeasure(struct soap *soap, const char *URL, eml20__LuminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure ? "eml20:LuminanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LuminanceMeasure * SOAP_FMAC4 soap_get_eml20__LuminanceMeasure(struct soap*, eml20__LuminanceMeasure *, const char*, const char*);

inline int soap_read_eml20__LuminanceMeasure(struct soap *soap, eml20__LuminanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminanceMeasure(struct soap *soap, const char *URL, eml20__LuminanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminanceMeasure(struct soap *soap, eml20__LuminanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MomentOfForceMeasure(struct soap*, const char*, int, const eml20__MomentOfForceMeasure *, const char*);
SOAP_FMAC3 eml20__MomentOfForceMeasure * SOAP_FMAC4 soap_in_eml20__MomentOfForceMeasure(struct soap*, const char*, eml20__MomentOfForceMeasure *, const char*);
SOAP_FMAC1 eml20__MomentOfForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MomentOfForceMeasure * soap_new_eml20__MomentOfForceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MomentOfForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MomentOfForceMeasure * soap_new_req_eml20__MomentOfForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentOfForceUom uom)
{
	eml20__MomentOfForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentOfForceMeasure::__item = __item;
		_p->eml20__MomentOfForceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MomentOfForceMeasure * soap_new_set_eml20__MomentOfForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MomentOfForceUom uom)
{
	eml20__MomentOfForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MomentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MomentOfForceMeasure::__item = __item;
		_p->eml20__MomentOfForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MomentOfForceMeasure(struct soap *soap, eml20__MomentOfForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure ? "eml20:MomentOfForceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MomentOfForceMeasure(struct soap *soap, const char *URL, eml20__MomentOfForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure ? "eml20:MomentOfForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MomentOfForceMeasure(struct soap *soap, const char *URL, eml20__MomentOfForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure ? "eml20:MomentOfForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MomentOfForceMeasure(struct soap *soap, const char *URL, eml20__MomentOfForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MomentOfForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure ? "eml20:MomentOfForceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MomentOfForceMeasure * SOAP_FMAC4 soap_get_eml20__MomentOfForceMeasure(struct soap*, eml20__MomentOfForceMeasure *, const char*, const char*);

inline int soap_read_eml20__MomentOfForceMeasure(struct soap *soap, eml20__MomentOfForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MomentOfForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MomentOfForceMeasure(struct soap *soap, const char *URL, eml20__MomentOfForceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MomentOfForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MomentOfForceMeasure(struct soap *soap, eml20__MomentOfForceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MomentOfForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimeMeasure(struct soap*, const char*, int, const eml20__TimeMeasure *, const char*);
SOAP_FMAC3 eml20__TimeMeasure * SOAP_FMAC4 soap_in_eml20__TimeMeasure(struct soap*, const char*, eml20__TimeMeasure *, const char*);
SOAP_FMAC1 eml20__TimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TimeMeasure * soap_new_eml20__TimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TimeMeasure * soap_new_req_eml20__TimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimeUom uom)
{
	eml20__TimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimeMeasure::__item = __item;
		_p->eml20__TimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TimeMeasure * soap_new_set_eml20__TimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimeUom uom)
{
	eml20__TimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimeMeasure::__item = __item;
		_p->eml20__TimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TimeMeasure(struct soap *soap, eml20__TimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure ? "eml20:TimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimeMeasure(struct soap *soap, const char *URL, eml20__TimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure ? "eml20:TimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimeMeasure(struct soap *soap, const char *URL, eml20__TimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure ? "eml20:TimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimeMeasure(struct soap *soap, const char *URL, eml20__TimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure ? "eml20:TimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TimeMeasure * SOAP_FMAC4 soap_get_eml20__TimeMeasure(struct soap*, eml20__TimeMeasure *, const char*, const char*);

inline int soap_read_eml20__TimeMeasure(struct soap *soap, eml20__TimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimeMeasure(struct soap *soap, const char *URL, eml20__TimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimeMeasure(struct soap *soap, eml20__TimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerPressureMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerPressureMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerPressureMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerPressureMeasure(struct soap*, const char*, eml20__VolumePerTimePerPressureMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerPressureMeasure * soap_new_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerPressureMeasure * soap_new_req_eml20__VolumePerTimePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerPressureUom uom)
{
	eml20__VolumePerTimePerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerPressureMeasure::__item = __item;
		_p->eml20__VolumePerTimePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerPressureMeasure * soap_new_set_eml20__VolumePerTimePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerPressureUom uom)
{
	eml20__VolumePerTimePerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerPressureMeasure::__item = __item;
		_p->eml20__VolumePerTimePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, eml20__VolumePerTimePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure ? "eml20:VolumePerTimePerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure ? "eml20:VolumePerTimePerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure ? "eml20:VolumePerTimePerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure ? "eml20:VolumePerTimePerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerPressureMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerPressureMeasure(struct soap*, eml20__VolumePerTimePerPressureMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, eml20__VolumePerTimePerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerPressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerPressureMeasure(struct soap *soap, eml20__VolumePerTimePerPressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerVolumeMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerVolumeMeasure(struct soap*, const char*, eml20__VolumePerTimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerVolumeMeasure * soap_new_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerVolumeMeasure * soap_new_req_eml20__VolumePerTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerVolumeUom uom)
{
	eml20__VolumePerTimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerVolumeMeasure::__item = __item;
		_p->eml20__VolumePerTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerVolumeMeasure * soap_new_set_eml20__VolumePerTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerVolumeUom uom)
{
	eml20__VolumePerTimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerVolumeMeasure::__item = __item;
		_p->eml20__VolumePerTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, eml20__VolumePerTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure ? "eml20:VolumePerTimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure ? "eml20:VolumePerTimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure ? "eml20:VolumePerTimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure ? "eml20:VolumePerTimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerVolumeMeasure(struct soap*, eml20__VolumePerTimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, eml20__VolumePerTimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerVolumeMeasure(struct soap *soap, eml20__VolumePerTimePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumeMeasure(struct soap*, const char*, int, const eml20__VolumeMeasure *, const char*);
SOAP_FMAC3 eml20__VolumeMeasure * SOAP_FMAC4 soap_in_eml20__VolumeMeasure(struct soap*, const char*, eml20__VolumeMeasure *, const char*);
SOAP_FMAC1 eml20__VolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumeMeasure * soap_new_eml20__VolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumeMeasure * soap_new_req_eml20__VolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumeUom uom)
{
	eml20__VolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumeMeasure::__item = __item;
		_p->eml20__VolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumeMeasure * soap_new_set_eml20__VolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumeUom uom)
{
	eml20__VolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumeMeasure::__item = __item;
		_p->eml20__VolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumeMeasure(struct soap *soap, eml20__VolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure ? "eml20:VolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumeMeasure(struct soap *soap, const char *URL, eml20__VolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure ? "eml20:VolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumeMeasure(struct soap *soap, const char *URL, eml20__VolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure ? "eml20:VolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumeMeasure(struct soap *soap, const char *URL, eml20__VolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure ? "eml20:VolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumeMeasure * SOAP_FMAC4 soap_get_eml20__VolumeMeasure(struct soap*, eml20__VolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumeMeasure(struct soap *soap, eml20__VolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumeMeasure(struct soap *soap, const char *URL, eml20__VolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumeMeasure(struct soap *soap, eml20__VolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerLengthMeasure(struct soap*, const char*, int, const eml20__VolumePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerLengthMeasure(struct soap*, const char*, eml20__VolumePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerLengthMeasure * soap_new_eml20__VolumePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerLengthMeasure * soap_new_req_eml20__VolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerLengthUom uom)
{
	eml20__VolumePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerLengthMeasure::__item = __item;
		_p->eml20__VolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerLengthMeasure * soap_new_set_eml20__VolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerLengthUom uom)
{
	eml20__VolumePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerLengthMeasure::__item = __item;
		_p->eml20__VolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerLengthMeasure(struct soap *soap, eml20__VolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure ? "eml20:VolumePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure ? "eml20:VolumePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure ? "eml20:VolumePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure ? "eml20:VolumePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerLengthMeasure(struct soap*, eml20__VolumePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerLengthMeasure(struct soap *soap, eml20__VolumePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerLengthMeasure(struct soap *soap, eml20__VolumePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APIGravityMeasure(struct soap*, const char*, int, const eml20__APIGravityMeasure *, const char*);
SOAP_FMAC3 eml20__APIGravityMeasure * SOAP_FMAC4 soap_in_eml20__APIGravityMeasure(struct soap*, const char*, eml20__APIGravityMeasure *, const char*);
SOAP_FMAC1 eml20__APIGravityMeasure * SOAP_FMAC2 soap_instantiate_eml20__APIGravityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__APIGravityMeasure * soap_new_eml20__APIGravityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__APIGravityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__APIGravityMeasure * soap_new_req_eml20__APIGravityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APIGravityUom uom)
{
	eml20__APIGravityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APIGravityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APIGravityMeasure::__item = __item;
		_p->eml20__APIGravityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__APIGravityMeasure * soap_new_set_eml20__APIGravityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APIGravityUom uom)
{
	eml20__APIGravityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APIGravityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APIGravityMeasure::__item = __item;
		_p->eml20__APIGravityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__APIGravityMeasure(struct soap *soap, eml20__APIGravityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGravityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure ? "eml20:APIGravityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__APIGravityMeasure(struct soap *soap, const char *URL, eml20__APIGravityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGravityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure ? "eml20:APIGravityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APIGravityMeasure(struct soap *soap, const char *URL, eml20__APIGravityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGravityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure ? "eml20:APIGravityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APIGravityMeasure(struct soap *soap, const char *URL, eml20__APIGravityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APIGravityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure ? "eml20:APIGravityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__APIGravityMeasure * SOAP_FMAC4 soap_get_eml20__APIGravityMeasure(struct soap*, eml20__APIGravityMeasure *, const char*, const char*);

inline int soap_read_eml20__APIGravityMeasure(struct soap *soap, eml20__APIGravityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APIGravityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APIGravityMeasure(struct soap *soap, const char *URL, eml20__APIGravityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APIGravityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APIGravityMeasure(struct soap *soap, eml20__APIGravityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APIGravityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticPermeabilityMeasure(struct soap*, const char*, int, const eml20__MagneticPermeabilityMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticPermeabilityMeasure * SOAP_FMAC4 soap_in_eml20__MagneticPermeabilityMeasure(struct soap*, const char*, eml20__MagneticPermeabilityMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticPermeabilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticPermeabilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticPermeabilityMeasure * soap_new_eml20__MagneticPermeabilityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticPermeabilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticPermeabilityMeasure * soap_new_req_eml20__MagneticPermeabilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticPermeabilityUom uom)
{
	eml20__MagneticPermeabilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticPermeabilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticPermeabilityMeasure::__item = __item;
		_p->eml20__MagneticPermeabilityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticPermeabilityMeasure * soap_new_set_eml20__MagneticPermeabilityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticPermeabilityUom uom)
{
	eml20__MagneticPermeabilityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticPermeabilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticPermeabilityMeasure::__item = __item;
		_p->eml20__MagneticPermeabilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticPermeabilityMeasure(struct soap *soap, eml20__MagneticPermeabilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticPermeabilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure ? "eml20:MagneticPermeabilityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticPermeabilityMeasure(struct soap *soap, const char *URL, eml20__MagneticPermeabilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticPermeabilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure ? "eml20:MagneticPermeabilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticPermeabilityMeasure(struct soap *soap, const char *URL, eml20__MagneticPermeabilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticPermeabilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure ? "eml20:MagneticPermeabilityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticPermeabilityMeasure(struct soap *soap, const char *URL, eml20__MagneticPermeabilityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticPermeabilityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure ? "eml20:MagneticPermeabilityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticPermeabilityMeasure * SOAP_FMAC4 soap_get_eml20__MagneticPermeabilityMeasure(struct soap*, eml20__MagneticPermeabilityMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticPermeabilityMeasure(struct soap *soap, eml20__MagneticPermeabilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticPermeabilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticPermeabilityMeasure(struct soap *soap, const char *URL, eml20__MagneticPermeabilityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticPermeabilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticPermeabilityMeasure(struct soap *soap, eml20__MagneticPermeabilityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticPermeabilityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerEnergyMeasure(struct soap*, const char*, int, const eml20__MassPerEnergyMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerEnergyMeasure * SOAP_FMAC4 soap_in_eml20__MassPerEnergyMeasure(struct soap*, const char*, eml20__MassPerEnergyMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerEnergyMeasure * soap_new_eml20__MassPerEnergyMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerEnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerEnergyMeasure * soap_new_req_eml20__MassPerEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerEnergyUom uom)
{
	eml20__MassPerEnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerEnergyMeasure::__item = __item;
		_p->eml20__MassPerEnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerEnergyMeasure * soap_new_set_eml20__MassPerEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerEnergyUom uom)
{
	eml20__MassPerEnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerEnergyMeasure::__item = __item;
		_p->eml20__MassPerEnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerEnergyMeasure(struct soap *soap, eml20__MassPerEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure ? "eml20:MassPerEnergyMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerEnergyMeasure(struct soap *soap, const char *URL, eml20__MassPerEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure ? "eml20:MassPerEnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerEnergyMeasure(struct soap *soap, const char *URL, eml20__MassPerEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure ? "eml20:MassPerEnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerEnergyMeasure(struct soap *soap, const char *URL, eml20__MassPerEnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerEnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure ? "eml20:MassPerEnergyMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerEnergyMeasure * SOAP_FMAC4 soap_get_eml20__MassPerEnergyMeasure(struct soap*, eml20__MassPerEnergyMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerEnergyMeasure(struct soap *soap, eml20__MassPerEnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerEnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerEnergyMeasure(struct soap *soap, const char *URL, eml20__MassPerEnergyMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerEnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerEnergyMeasure(struct soap *soap, eml20__MassPerEnergyMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerEnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticDipoleMomentMeasure(struct soap*, const char*, int, const eml20__MagneticDipoleMomentMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticDipoleMomentMeasure * SOAP_FMAC4 soap_in_eml20__MagneticDipoleMomentMeasure(struct soap*, const char*, eml20__MagneticDipoleMomentMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticDipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticDipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticDipoleMomentMeasure * soap_new_eml20__MagneticDipoleMomentMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticDipoleMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticDipoleMomentMeasure * soap_new_req_eml20__MagneticDipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticDipoleMomentUom uom)
{
	eml20__MagneticDipoleMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticDipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticDipoleMomentMeasure::__item = __item;
		_p->eml20__MagneticDipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticDipoleMomentMeasure * soap_new_set_eml20__MagneticDipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticDipoleMomentUom uom)
{
	eml20__MagneticDipoleMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticDipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticDipoleMomentMeasure::__item = __item;
		_p->eml20__MagneticDipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticDipoleMomentMeasure(struct soap *soap, eml20__MagneticDipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticDipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure ? "eml20:MagneticDipoleMomentMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticDipoleMomentMeasure(struct soap *soap, const char *URL, eml20__MagneticDipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticDipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure ? "eml20:MagneticDipoleMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticDipoleMomentMeasure(struct soap *soap, const char *URL, eml20__MagneticDipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticDipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure ? "eml20:MagneticDipoleMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticDipoleMomentMeasure(struct soap *soap, const char *URL, eml20__MagneticDipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticDipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure ? "eml20:MagneticDipoleMomentMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticDipoleMomentMeasure * SOAP_FMAC4 soap_get_eml20__MagneticDipoleMomentMeasure(struct soap*, eml20__MagneticDipoleMomentMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticDipoleMomentMeasure(struct soap *soap, eml20__MagneticDipoleMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticDipoleMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticDipoleMomentMeasure(struct soap *soap, const char *URL, eml20__MagneticDipoleMomentMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticDipoleMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticDipoleMomentMeasure(struct soap *soap, eml20__MagneticDipoleMomentMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticDipoleMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DataTransferSpeedMeasure(struct soap*, const char*, int, const eml20__DataTransferSpeedMeasure *, const char*);
SOAP_FMAC3 eml20__DataTransferSpeedMeasure * SOAP_FMAC4 soap_in_eml20__DataTransferSpeedMeasure(struct soap*, const char*, eml20__DataTransferSpeedMeasure *, const char*);
SOAP_FMAC1 eml20__DataTransferSpeedMeasure * SOAP_FMAC2 soap_instantiate_eml20__DataTransferSpeedMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DataTransferSpeedMeasure * soap_new_eml20__DataTransferSpeedMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DataTransferSpeedMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DataTransferSpeedMeasure * soap_new_req_eml20__DataTransferSpeedMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DataTransferSpeedUom uom)
{
	eml20__DataTransferSpeedMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DataTransferSpeedMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DataTransferSpeedMeasure::__item = __item;
		_p->eml20__DataTransferSpeedMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DataTransferSpeedMeasure * soap_new_set_eml20__DataTransferSpeedMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DataTransferSpeedUom uom)
{
	eml20__DataTransferSpeedMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DataTransferSpeedMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DataTransferSpeedMeasure::__item = __item;
		_p->eml20__DataTransferSpeedMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DataTransferSpeedMeasure(struct soap *soap, eml20__DataTransferSpeedMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataTransferSpeedMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure ? "eml20:DataTransferSpeedMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DataTransferSpeedMeasure(struct soap *soap, const char *URL, eml20__DataTransferSpeedMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataTransferSpeedMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure ? "eml20:DataTransferSpeedMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DataTransferSpeedMeasure(struct soap *soap, const char *URL, eml20__DataTransferSpeedMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataTransferSpeedMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure ? "eml20:DataTransferSpeedMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DataTransferSpeedMeasure(struct soap *soap, const char *URL, eml20__DataTransferSpeedMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataTransferSpeedMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure ? "eml20:DataTransferSpeedMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DataTransferSpeedMeasure * SOAP_FMAC4 soap_get_eml20__DataTransferSpeedMeasure(struct soap*, eml20__DataTransferSpeedMeasure *, const char*, const char*);

inline int soap_read_eml20__DataTransferSpeedMeasure(struct soap *soap, eml20__DataTransferSpeedMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DataTransferSpeedMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DataTransferSpeedMeasure(struct soap *soap, const char *URL, eml20__DataTransferSpeedMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DataTransferSpeedMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DataTransferSpeedMeasure(struct soap *soap, eml20__DataTransferSpeedMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DataTransferSpeedMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerMassMeasure(struct soap*, const char*, int, const eml20__MassPerMassMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerMassMeasure * SOAP_FMAC4 soap_in_eml20__MassPerMassMeasure(struct soap*, const char*, eml20__MassPerMassMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerMassMeasure * soap_new_eml20__MassPerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerMassMeasure * soap_new_req_eml20__MassPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerMassUom uom)
{
	eml20__MassPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerMassMeasure::__item = __item;
		_p->eml20__MassPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerMassMeasure * soap_new_set_eml20__MassPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerMassUom uom)
{
	eml20__MassPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerMassMeasure::__item = __item;
		_p->eml20__MassPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerMassMeasure(struct soap *soap, eml20__MassPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure ? "eml20:MassPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerMassMeasure(struct soap *soap, const char *URL, eml20__MassPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure ? "eml20:MassPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerMassMeasure(struct soap *soap, const char *URL, eml20__MassPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure ? "eml20:MassPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerMassMeasure(struct soap *soap, const char *URL, eml20__MassPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure ? "eml20:MassPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerMassMeasure * SOAP_FMAC4 soap_get_eml20__MassPerMassMeasure(struct soap*, eml20__MassPerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerMassMeasure(struct soap *soap, eml20__MassPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerMassMeasure(struct soap *soap, const char *URL, eml20__MassPerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerMassMeasure(struct soap *soap, eml20__MassPerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricCurrentDensityMeasure(struct soap*, const char*, int, const eml20__ElectricCurrentDensityMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricCurrentDensityMeasure * SOAP_FMAC4 soap_in_eml20__ElectricCurrentDensityMeasure(struct soap*, const char*, eml20__ElectricCurrentDensityMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricCurrentDensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricCurrentDensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricCurrentDensityMeasure * soap_new_eml20__ElectricCurrentDensityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricCurrentDensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricCurrentDensityMeasure * soap_new_req_eml20__ElectricCurrentDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricCurrentDensityUom uom)
{
	eml20__ElectricCurrentDensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricCurrentDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricCurrentDensityMeasure::__item = __item;
		_p->eml20__ElectricCurrentDensityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricCurrentDensityMeasure * soap_new_set_eml20__ElectricCurrentDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricCurrentDensityUom uom)
{
	eml20__ElectricCurrentDensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricCurrentDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricCurrentDensityMeasure::__item = __item;
		_p->eml20__ElectricCurrentDensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricCurrentDensityMeasure(struct soap *soap, eml20__ElectricCurrentDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure ? "eml20:ElectricCurrentDensityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricCurrentDensityMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure ? "eml20:ElectricCurrentDensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricCurrentDensityMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure ? "eml20:ElectricCurrentDensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricCurrentDensityMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentDensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentDensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure ? "eml20:ElectricCurrentDensityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricCurrentDensityMeasure * SOAP_FMAC4 soap_get_eml20__ElectricCurrentDensityMeasure(struct soap*, eml20__ElectricCurrentDensityMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricCurrentDensityMeasure(struct soap *soap, eml20__ElectricCurrentDensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricCurrentDensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricCurrentDensityMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentDensityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentDensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricCurrentDensityMeasure(struct soap *soap, eml20__ElectricCurrentDensityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentDensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerMassPerTimeMeasure(struct soap*, const char*, int, const eml20__EnergyPerMassPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyPerMassPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__EnergyPerMassPerTimeMeasure(struct soap*, const char*, eml20__EnergyPerMassPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyPerMassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerMassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyPerMassPerTimeMeasure * soap_new_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyPerMassPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyPerMassPerTimeMeasure * soap_new_req_eml20__EnergyPerMassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerMassPerTimeUom uom)
{
	eml20__EnergyPerMassPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerMassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerMassPerTimeMeasure::__item = __item;
		_p->eml20__EnergyPerMassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyPerMassPerTimeMeasure * soap_new_set_eml20__EnergyPerMassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerMassPerTimeUom uom)
{
	eml20__EnergyPerMassPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerMassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerMassPerTimeMeasure::__item = __item;
		_p->eml20__EnergyPerMassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, eml20__EnergyPerMassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure ? "eml20:EnergyPerMassPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure ? "eml20:EnergyPerMassPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure ? "eml20:EnergyPerMassPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerMassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure ? "eml20:EnergyPerMassPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyPerMassPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__EnergyPerMassPerTimeMeasure(struct soap*, eml20__EnergyPerMassPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, eml20__EnergyPerMassPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerMassPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, const char *URL, eml20__EnergyPerMassPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerMassPerTimeMeasure(struct soap *soap, eml20__EnergyPerMassPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerMassPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerMassMeasure(struct soap*, const char*, int, const eml20__AreaPerMassMeasure *, const char*);
SOAP_FMAC3 eml20__AreaPerMassMeasure * SOAP_FMAC4 soap_in_eml20__AreaPerMassMeasure(struct soap*, const char*, eml20__AreaPerMassMeasure *, const char*);
SOAP_FMAC1 eml20__AreaPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaPerMassMeasure * soap_new_eml20__AreaPerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaPerMassMeasure * soap_new_req_eml20__AreaPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerMassUom uom)
{
	eml20__AreaPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerMassMeasure::__item = __item;
		_p->eml20__AreaPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaPerMassMeasure * soap_new_set_eml20__AreaPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerMassUom uom)
{
	eml20__AreaPerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerMassMeasure::__item = __item;
		_p->eml20__AreaPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaPerMassMeasure(struct soap *soap, eml20__AreaPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure ? "eml20:AreaPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerMassMeasure(struct soap *soap, const char *URL, eml20__AreaPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure ? "eml20:AreaPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerMassMeasure(struct soap *soap, const char *URL, eml20__AreaPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure ? "eml20:AreaPerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerMassMeasure(struct soap *soap, const char *URL, eml20__AreaPerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure ? "eml20:AreaPerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaPerMassMeasure * SOAP_FMAC4 soap_get_eml20__AreaPerMassMeasure(struct soap*, eml20__AreaPerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaPerMassMeasure(struct soap *soap, eml20__AreaPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerMassMeasure(struct soap *soap, const char *URL, eml20__AreaPerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerMassMeasure(struct soap *soap, eml20__AreaPerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__RadianceMeasure(struct soap*, const char*, int, const eml20__RadianceMeasure *, const char*);
SOAP_FMAC3 eml20__RadianceMeasure * SOAP_FMAC4 soap_in_eml20__RadianceMeasure(struct soap*, const char*, eml20__RadianceMeasure *, const char*);
SOAP_FMAC1 eml20__RadianceMeasure * SOAP_FMAC2 soap_instantiate_eml20__RadianceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__RadianceMeasure * soap_new_eml20__RadianceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__RadianceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__RadianceMeasure * soap_new_req_eml20__RadianceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__RadianceUom uom)
{
	eml20__RadianceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__RadianceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__RadianceMeasure::__item = __item;
		_p->eml20__RadianceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__RadianceMeasure * soap_new_set_eml20__RadianceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__RadianceUom uom)
{
	eml20__RadianceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__RadianceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__RadianceMeasure::__item = __item;
		_p->eml20__RadianceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__RadianceMeasure(struct soap *soap, eml20__RadianceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadianceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure ? "eml20:RadianceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__RadianceMeasure(struct soap *soap, const char *URL, eml20__RadianceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadianceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure ? "eml20:RadianceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__RadianceMeasure(struct soap *soap, const char *URL, eml20__RadianceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadianceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure ? "eml20:RadianceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__RadianceMeasure(struct soap *soap, const char *URL, eml20__RadianceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadianceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure ? "eml20:RadianceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__RadianceMeasure * SOAP_FMAC4 soap_get_eml20__RadianceMeasure(struct soap*, eml20__RadianceMeasure *, const char*, const char*);

inline int soap_read_eml20__RadianceMeasure(struct soap *soap, eml20__RadianceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__RadianceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__RadianceMeasure(struct soap *soap, const char *URL, eml20__RadianceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__RadianceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__RadianceMeasure(struct soap *soap, eml20__RadianceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__RadianceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DipoleMomentMeasure(struct soap*, const char*, int, const eml20__DipoleMomentMeasure *, const char*);
SOAP_FMAC3 eml20__DipoleMomentMeasure * SOAP_FMAC4 soap_in_eml20__DipoleMomentMeasure(struct soap*, const char*, eml20__DipoleMomentMeasure *, const char*);
SOAP_FMAC1 eml20__DipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__DipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DipoleMomentMeasure * soap_new_eml20__DipoleMomentMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DipoleMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DipoleMomentMeasure * soap_new_req_eml20__DipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DipoleMomentUom uom)
{
	eml20__DipoleMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DipoleMomentMeasure::__item = __item;
		_p->eml20__DipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DipoleMomentMeasure * soap_new_set_eml20__DipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DipoleMomentUom uom)
{
	eml20__DipoleMomentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DipoleMomentMeasure::__item = __item;
		_p->eml20__DipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DipoleMomentMeasure(struct soap *soap, eml20__DipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure ? "eml20:DipoleMomentMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DipoleMomentMeasure(struct soap *soap, const char *URL, eml20__DipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure ? "eml20:DipoleMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DipoleMomentMeasure(struct soap *soap, const char *URL, eml20__DipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure ? "eml20:DipoleMomentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DipoleMomentMeasure(struct soap *soap, const char *URL, eml20__DipoleMomentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DipoleMomentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure ? "eml20:DipoleMomentMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DipoleMomentMeasure * SOAP_FMAC4 soap_get_eml20__DipoleMomentMeasure(struct soap*, eml20__DipoleMomentMeasure *, const char*, const char*);

inline int soap_read_eml20__DipoleMomentMeasure(struct soap *soap, eml20__DipoleMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DipoleMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DipoleMomentMeasure(struct soap *soap, const char *URL, eml20__DipoleMomentMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DipoleMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DipoleMomentMeasure(struct soap *soap, eml20__DipoleMomentMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DipoleMomentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureTimePerVolumeMeasure(struct soap*, const char*, int, const eml20__PressureTimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__PressureTimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__PressureTimePerVolumeMeasure(struct soap*, const char*, eml20__PressureTimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__PressureTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressureTimePerVolumeMeasure * soap_new_eml20__PressureTimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressureTimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressureTimePerVolumeMeasure * soap_new_req_eml20__PressureTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureTimePerVolumeUom uom)
{
	eml20__PressureTimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureTimePerVolumeMeasure::__item = __item;
		_p->eml20__PressureTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressureTimePerVolumeMeasure * soap_new_set_eml20__PressureTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureTimePerVolumeUom uom)
{
	eml20__PressureTimePerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureTimePerVolumeMeasure::__item = __item;
		_p->eml20__PressureTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressureTimePerVolumeMeasure(struct soap *soap, eml20__PressureTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure ? "eml20:PressureTimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressureTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure ? "eml20:PressureTimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressureTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure ? "eml20:PressureTimePerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressureTimePerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureTimePerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure ? "eml20:PressureTimePerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressureTimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__PressureTimePerVolumeMeasure(struct soap*, eml20__PressureTimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__PressureTimePerVolumeMeasure(struct soap *soap, eml20__PressureTimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureTimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureTimePerVolumeMeasure(struct soap *soap, const char *URL, eml20__PressureTimePerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureTimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureTimePerVolumeMeasure(struct soap *soap, eml20__PressureTimePerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureTimePerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermittivityMeasure(struct soap*, const char*, int, const eml20__PermittivityMeasure *, const char*);
SOAP_FMAC3 eml20__PermittivityMeasure * SOAP_FMAC4 soap_in_eml20__PermittivityMeasure(struct soap*, const char*, eml20__PermittivityMeasure *, const char*);
SOAP_FMAC1 eml20__PermittivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermittivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PermittivityMeasure * soap_new_eml20__PermittivityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PermittivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PermittivityMeasure * soap_new_req_eml20__PermittivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermittivityUom uom)
{
	eml20__PermittivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermittivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermittivityMeasure::__item = __item;
		_p->eml20__PermittivityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PermittivityMeasure * soap_new_set_eml20__PermittivityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermittivityUom uom)
{
	eml20__PermittivityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermittivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermittivityMeasure::__item = __item;
		_p->eml20__PermittivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PermittivityMeasure(struct soap *soap, eml20__PermittivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermittivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure ? "eml20:PermittivityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermittivityMeasure(struct soap *soap, const char *URL, eml20__PermittivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermittivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure ? "eml20:PermittivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermittivityMeasure(struct soap *soap, const char *URL, eml20__PermittivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermittivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure ? "eml20:PermittivityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermittivityMeasure(struct soap *soap, const char *URL, eml20__PermittivityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermittivityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure ? "eml20:PermittivityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PermittivityMeasure * SOAP_FMAC4 soap_get_eml20__PermittivityMeasure(struct soap*, eml20__PermittivityMeasure *, const char*, const char*);

inline int soap_read_eml20__PermittivityMeasure(struct soap *soap, eml20__PermittivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermittivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermittivityMeasure(struct soap *soap, const char *URL, eml20__PermittivityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermittivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermittivityMeasure(struct soap *soap, eml20__PermittivityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermittivityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermodynamicTemperatureMeasure(struct soap*, const char*, int, const eml20__ThermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC3 eml20__ThermodynamicTemperatureMeasure * SOAP_FMAC4 soap_in_eml20__ThermodynamicTemperatureMeasure(struct soap*, const char*, eml20__ThermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC1 eml20__ThermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermodynamicTemperatureMeasure * soap_new_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermodynamicTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermodynamicTemperatureMeasure * soap_new_req_eml20__ThermodynamicTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermodynamicTemperatureUom uom)
{
	eml20__ThermodynamicTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermodynamicTemperatureMeasure::__item = __item;
		_p->eml20__ThermodynamicTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermodynamicTemperatureMeasure * soap_new_set_eml20__ThermodynamicTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermodynamicTemperatureUom uom)
{
	eml20__ThermodynamicTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermodynamicTemperatureMeasure::__item = __item;
		_p->eml20__ThermodynamicTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, eml20__ThermodynamicTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermodynamicTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure ? "eml20:ThermodynamicTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, const char *URL, eml20__ThermodynamicTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermodynamicTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure ? "eml20:ThermodynamicTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, const char *URL, eml20__ThermodynamicTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermodynamicTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure ? "eml20:ThermodynamicTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, const char *URL, eml20__ThermodynamicTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermodynamicTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure ? "eml20:ThermodynamicTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermodynamicTemperatureMeasure * SOAP_FMAC4 soap_get_eml20__ThermodynamicTemperatureMeasure(struct soap*, eml20__ThermodynamicTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, eml20__ThermodynamicTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermodynamicTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, const char *URL, eml20__ThermodynamicTemperatureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermodynamicTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermodynamicTemperatureMeasure(struct soap *soap, eml20__ThermodynamicTemperatureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermodynamicTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReluctanceMeasure(struct soap*, const char*, int, const eml20__ReluctanceMeasure *, const char*);
SOAP_FMAC3 eml20__ReluctanceMeasure * SOAP_FMAC4 soap_in_eml20__ReluctanceMeasure(struct soap*, const char*, eml20__ReluctanceMeasure *, const char*);
SOAP_FMAC1 eml20__ReluctanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReluctanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReluctanceMeasure * soap_new_eml20__ReluctanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReluctanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReluctanceMeasure * soap_new_req_eml20__ReluctanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReluctanceUom uom)
{
	eml20__ReluctanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReluctanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReluctanceMeasure::__item = __item;
		_p->eml20__ReluctanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReluctanceMeasure * soap_new_set_eml20__ReluctanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReluctanceUom uom)
{
	eml20__ReluctanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReluctanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReluctanceMeasure::__item = __item;
		_p->eml20__ReluctanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReluctanceMeasure(struct soap *soap, eml20__ReluctanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReluctanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure ? "eml20:ReluctanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReluctanceMeasure(struct soap *soap, const char *URL, eml20__ReluctanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReluctanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure ? "eml20:ReluctanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReluctanceMeasure(struct soap *soap, const char *URL, eml20__ReluctanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReluctanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure ? "eml20:ReluctanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReluctanceMeasure(struct soap *soap, const char *URL, eml20__ReluctanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReluctanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure ? "eml20:ReluctanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReluctanceMeasure * SOAP_FMAC4 soap_get_eml20__ReluctanceMeasure(struct soap*, eml20__ReluctanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ReluctanceMeasure(struct soap *soap, eml20__ReluctanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReluctanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReluctanceMeasure(struct soap *soap, const char *URL, eml20__ReluctanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReluctanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReluctanceMeasure(struct soap *soap, eml20__ReluctanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReluctanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerAreaMeasure(struct soap*, const char*, int, const eml20__AreaPerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__AreaPerAreaMeasure * SOAP_FMAC4 soap_in_eml20__AreaPerAreaMeasure(struct soap*, const char*, eml20__AreaPerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__AreaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaPerAreaMeasure * soap_new_eml20__AreaPerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaPerAreaMeasure * soap_new_req_eml20__AreaPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerAreaUom uom)
{
	eml20__AreaPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerAreaMeasure::__item = __item;
		_p->eml20__AreaPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaPerAreaMeasure * soap_new_set_eml20__AreaPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerAreaUom uom)
{
	eml20__AreaPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerAreaMeasure::__item = __item;
		_p->eml20__AreaPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaPerAreaMeasure(struct soap *soap, eml20__AreaPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure ? "eml20:AreaPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerAreaMeasure(struct soap *soap, const char *URL, eml20__AreaPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure ? "eml20:AreaPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerAreaMeasure(struct soap *soap, const char *URL, eml20__AreaPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure ? "eml20:AreaPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerAreaMeasure(struct soap *soap, const char *URL, eml20__AreaPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure ? "eml20:AreaPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaPerAreaMeasure * SOAP_FMAC4 soap_get_eml20__AreaPerAreaMeasure(struct soap*, eml20__AreaPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaPerAreaMeasure(struct soap *soap, eml20__AreaPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerAreaMeasure(struct soap *soap, const char *URL, eml20__AreaPerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerAreaMeasure(struct soap *soap, eml20__AreaPerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerAreaMeasure(struct soap*, const char*, int, const eml20__EnergyPerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyPerAreaMeasure * SOAP_FMAC4 soap_in_eml20__EnergyPerAreaMeasure(struct soap*, const char*, eml20__EnergyPerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyPerAreaMeasure * soap_new_eml20__EnergyPerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyPerAreaMeasure * soap_new_req_eml20__EnergyPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerAreaUom uom)
{
	eml20__EnergyPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerAreaMeasure::__item = __item;
		_p->eml20__EnergyPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyPerAreaMeasure * soap_new_set_eml20__EnergyPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerAreaUom uom)
{
	eml20__EnergyPerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerAreaMeasure::__item = __item;
		_p->eml20__EnergyPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyPerAreaMeasure(struct soap *soap, eml20__EnergyPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure ? "eml20:EnergyPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure ? "eml20:EnergyPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure ? "eml20:EnergyPerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyPerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure ? "eml20:EnergyPerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyPerAreaMeasure * SOAP_FMAC4 soap_get_eml20__EnergyPerAreaMeasure(struct soap*, eml20__EnergyPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyPerAreaMeasure(struct soap *soap, eml20__EnergyPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerAreaMeasure(struct soap *soap, const char *URL, eml20__EnergyPerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerAreaMeasure(struct soap *soap, eml20__EnergyPerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerLengthMeasure(struct soap*, const char*, int, const eml20__MassPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__MassPerLengthMeasure(struct soap*, const char*, eml20__MassPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerLengthMeasure * soap_new_eml20__MassPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerLengthMeasure * soap_new_req_eml20__MassPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerLengthUom uom)
{
	eml20__MassPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerLengthMeasure::__item = __item;
		_p->eml20__MassPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerLengthMeasure * soap_new_set_eml20__MassPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerLengthUom uom)
{
	eml20__MassPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerLengthMeasure::__item = __item;
		_p->eml20__MassPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerLengthMeasure(struct soap *soap, eml20__MassPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure ? "eml20:MassPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure ? "eml20:MassPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure ? "eml20:MassPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure ? "eml20:MassPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__MassPerLengthMeasure(struct soap*, eml20__MassPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerLengthMeasure(struct soap *soap, eml20__MassPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerLengthMeasure(struct soap *soap, const char *URL, eml20__MassPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerLengthMeasure(struct soap *soap, eml20__MassPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerTimeMeasure(struct soap*, const char*, int, const eml20__LengthPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerTimeMeasure(struct soap*, const char*, eml20__LengthPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerTimeMeasure * soap_new_eml20__LengthPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerTimeMeasure * soap_new_req_eml20__LengthPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerTimeUom uom)
{
	eml20__LengthPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerTimeMeasure::__item = __item;
		_p->eml20__LengthPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerTimeMeasure * soap_new_set_eml20__LengthPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerTimeUom uom)
{
	eml20__LengthPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerTimeMeasure::__item = __item;
		_p->eml20__LengthPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerTimeMeasure(struct soap *soap, eml20__LengthPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure ? "eml20:LengthPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerTimeMeasure(struct soap *soap, const char *URL, eml20__LengthPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure ? "eml20:LengthPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerTimeMeasure(struct soap *soap, const char *URL, eml20__LengthPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure ? "eml20:LengthPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerTimeMeasure(struct soap *soap, const char *URL, eml20__LengthPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure ? "eml20:LengthPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerTimeMeasure(struct soap*, eml20__LengthPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerTimeMeasure(struct soap *soap, eml20__LengthPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerTimeMeasure(struct soap *soap, const char *URL, eml20__LengthPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerTimeMeasure(struct soap *soap, eml20__LengthPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AnglePerLengthMeasure(struct soap*, const char*, int, const eml20__AnglePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__AnglePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__AnglePerLengthMeasure(struct soap*, const char*, eml20__AnglePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__AnglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__AnglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AnglePerLengthMeasure * soap_new_eml20__AnglePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AnglePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AnglePerLengthMeasure * soap_new_req_eml20__AnglePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AnglePerLengthUom uom)
{
	eml20__AnglePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AnglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AnglePerLengthMeasure::__item = __item;
		_p->eml20__AnglePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AnglePerLengthMeasure * soap_new_set_eml20__AnglePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AnglePerLengthUom uom)
{
	eml20__AnglePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AnglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AnglePerLengthMeasure::__item = __item;
		_p->eml20__AnglePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AnglePerLengthMeasure(struct soap *soap, eml20__AnglePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure ? "eml20:AnglePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AnglePerLengthMeasure(struct soap *soap, const char *URL, eml20__AnglePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure ? "eml20:AnglePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AnglePerLengthMeasure(struct soap *soap, const char *URL, eml20__AnglePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure ? "eml20:AnglePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AnglePerLengthMeasure(struct soap *soap, const char *URL, eml20__AnglePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AnglePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure ? "eml20:AnglePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AnglePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__AnglePerLengthMeasure(struct soap*, eml20__AnglePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__AnglePerLengthMeasure(struct soap *soap, eml20__AnglePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AnglePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AnglePerLengthMeasure(struct soap *soap, const char *URL, eml20__AnglePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AnglePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AnglePerLengthMeasure(struct soap *soap, eml20__AnglePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AnglePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalResistanceMeasure(struct soap*, const char*, int, const eml20__ThermalResistanceMeasure *, const char*);
SOAP_FMAC3 eml20__ThermalResistanceMeasure * SOAP_FMAC4 soap_in_eml20__ThermalResistanceMeasure(struct soap*, const char*, eml20__ThermalResistanceMeasure *, const char*);
SOAP_FMAC1 eml20__ThermalResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermalResistanceMeasure * soap_new_eml20__ThermalResistanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermalResistanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermalResistanceMeasure * soap_new_req_eml20__ThermalResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalResistanceUom uom)
{
	eml20__ThermalResistanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalResistanceMeasure::__item = __item;
		_p->eml20__ThermalResistanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermalResistanceMeasure * soap_new_set_eml20__ThermalResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalResistanceUom uom)
{
	eml20__ThermalResistanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalResistanceMeasure::__item = __item;
		_p->eml20__ThermalResistanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermalResistanceMeasure(struct soap *soap, eml20__ThermalResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure ? "eml20:ThermalResistanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalResistanceMeasure(struct soap *soap, const char *URL, eml20__ThermalResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure ? "eml20:ThermalResistanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalResistanceMeasure(struct soap *soap, const char *URL, eml20__ThermalResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure ? "eml20:ThermalResistanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalResistanceMeasure(struct soap *soap, const char *URL, eml20__ThermalResistanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalResistanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure ? "eml20:ThermalResistanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermalResistanceMeasure * SOAP_FMAC4 soap_get_eml20__ThermalResistanceMeasure(struct soap*, eml20__ThermalResistanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermalResistanceMeasure(struct soap *soap, eml20__ThermalResistanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalResistanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalResistanceMeasure(struct soap *soap, const char *URL, eml20__ThermalResistanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalResistanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalResistanceMeasure(struct soap *soap, eml20__ThermalResistanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalResistanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, const char*, int, const eml20__AttenuationPerFrequencyIntervalMeasure *, const char*);
SOAP_FMAC3 eml20__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC4 soap_in_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, const char*, eml20__AttenuationPerFrequencyIntervalMeasure *, const char*);
SOAP_FMAC1 eml20__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AttenuationPerFrequencyIntervalMeasure * soap_new_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AttenuationPerFrequencyIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AttenuationPerFrequencyIntervalMeasure * soap_new_req_eml20__AttenuationPerFrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AttenuationPerFrequencyIntervalUom uom)
{
	eml20__AttenuationPerFrequencyIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AttenuationPerFrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AttenuationPerFrequencyIntervalMeasure::__item = __item;
		_p->eml20__AttenuationPerFrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AttenuationPerFrequencyIntervalMeasure * soap_new_set_eml20__AttenuationPerFrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AttenuationPerFrequencyIntervalUom uom)
{
	eml20__AttenuationPerFrequencyIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AttenuationPerFrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AttenuationPerFrequencyIntervalMeasure::__item = __item;
		_p->eml20__AttenuationPerFrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, eml20__AttenuationPerFrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AttenuationPerFrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure ? "eml20:AttenuationPerFrequencyIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__AttenuationPerFrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AttenuationPerFrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure ? "eml20:AttenuationPerFrequencyIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__AttenuationPerFrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AttenuationPerFrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure ? "eml20:AttenuationPerFrequencyIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__AttenuationPerFrequencyIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AttenuationPerFrequencyIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure ? "eml20:AttenuationPerFrequencyIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC4 soap_get_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, eml20__AttenuationPerFrequencyIntervalMeasure *, const char*, const char*);

inline int soap_read_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, eml20__AttenuationPerFrequencyIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AttenuationPerFrequencyIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, const char *URL, eml20__AttenuationPerFrequencyIntervalMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AttenuationPerFrequencyIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, eml20__AttenuationPerFrequencyIntervalMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AttenuationPerFrequencyIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, const char*, int, const eml20__TemperatureIntervalPerPressureMeasure *, const char*);
SOAP_FMAC3 eml20__TemperatureIntervalPerPressureMeasure * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, const char*, eml20__TemperatureIntervalPerPressureMeasure *, const char*);
SOAP_FMAC1 eml20__TemperatureIntervalPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TemperatureIntervalPerPressureMeasure * soap_new_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TemperatureIntervalPerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TemperatureIntervalPerPressureMeasure * soap_new_req_eml20__TemperatureIntervalPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerPressureUom uom)
{
	eml20__TemperatureIntervalPerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerPressureMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TemperatureIntervalPerPressureMeasure * soap_new_set_eml20__TemperatureIntervalPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerPressureUom uom)
{
	eml20__TemperatureIntervalPerPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerPressureMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, eml20__TemperatureIntervalPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure ? "eml20:TemperatureIntervalPerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure ? "eml20:TemperatureIntervalPerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure ? "eml20:TemperatureIntervalPerPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure ? "eml20:TemperatureIntervalPerPressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TemperatureIntervalPerPressureMeasure * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, eml20__TemperatureIntervalPerPressureMeasure *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, eml20__TemperatureIntervalPerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerPressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerPressureMeasure(struct soap *soap, eml20__TemperatureIntervalPerPressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbsorbedDoseMeasure(struct soap*, const char*, int, const eml20__AbsorbedDoseMeasure *, const char*);
SOAP_FMAC3 eml20__AbsorbedDoseMeasure * SOAP_FMAC4 soap_in_eml20__AbsorbedDoseMeasure(struct soap*, const char*, eml20__AbsorbedDoseMeasure *, const char*);
SOAP_FMAC1 eml20__AbsorbedDoseMeasure * SOAP_FMAC2 soap_instantiate_eml20__AbsorbedDoseMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AbsorbedDoseMeasure * soap_new_eml20__AbsorbedDoseMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AbsorbedDoseMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AbsorbedDoseMeasure * soap_new_req_eml20__AbsorbedDoseMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AbsorbedDoseUom uom)
{
	eml20__AbsorbedDoseMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AbsorbedDoseMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbsorbedDoseMeasure::__item = __item;
		_p->eml20__AbsorbedDoseMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AbsorbedDoseMeasure * soap_new_set_eml20__AbsorbedDoseMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AbsorbedDoseUom uom)
{
	eml20__AbsorbedDoseMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AbsorbedDoseMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbsorbedDoseMeasure::__item = __item;
		_p->eml20__AbsorbedDoseMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AbsorbedDoseMeasure(struct soap *soap, eml20__AbsorbedDoseMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbsorbedDoseMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure ? "eml20:AbsorbedDoseMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbsorbedDoseMeasure(struct soap *soap, const char *URL, eml20__AbsorbedDoseMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbsorbedDoseMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure ? "eml20:AbsorbedDoseMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbsorbedDoseMeasure(struct soap *soap, const char *URL, eml20__AbsorbedDoseMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbsorbedDoseMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure ? "eml20:AbsorbedDoseMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbsorbedDoseMeasure(struct soap *soap, const char *URL, eml20__AbsorbedDoseMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbsorbedDoseMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure ? "eml20:AbsorbedDoseMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AbsorbedDoseMeasure * SOAP_FMAC4 soap_get_eml20__AbsorbedDoseMeasure(struct soap*, eml20__AbsorbedDoseMeasure *, const char*, const char*);

inline int soap_read_eml20__AbsorbedDoseMeasure(struct soap *soap, eml20__AbsorbedDoseMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbsorbedDoseMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbsorbedDoseMeasure(struct soap *soap, const char *URL, eml20__AbsorbedDoseMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbsorbedDoseMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbsorbedDoseMeasure(struct soap *soap, eml20__AbsorbedDoseMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbsorbedDoseMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricResistancePerLengthMeasure(struct soap*, const char*, int, const eml20__ElectricResistancePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricResistancePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__ElectricResistancePerLengthMeasure(struct soap*, const char*, eml20__ElectricResistancePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricResistancePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricResistancePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricResistancePerLengthMeasure * soap_new_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricResistancePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricResistancePerLengthMeasure * soap_new_req_eml20__ElectricResistancePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricResistancePerLengthUom uom)
{
	eml20__ElectricResistancePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricResistancePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricResistancePerLengthMeasure::__item = __item;
		_p->eml20__ElectricResistancePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricResistancePerLengthMeasure * soap_new_set_eml20__ElectricResistancePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricResistancePerLengthUom uom)
{
	eml20__ElectricResistancePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricResistancePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricResistancePerLengthMeasure::__item = __item;
		_p->eml20__ElectricResistancePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, eml20__ElectricResistancePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistancePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure ? "eml20:ElectricResistancePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, const char *URL, eml20__ElectricResistancePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistancePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure ? "eml20:ElectricResistancePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, const char *URL, eml20__ElectricResistancePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistancePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure ? "eml20:ElectricResistancePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, const char *URL, eml20__ElectricResistancePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricResistancePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure ? "eml20:ElectricResistancePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricResistancePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__ElectricResistancePerLengthMeasure(struct soap*, eml20__ElectricResistancePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, eml20__ElectricResistancePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricResistancePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, const char *URL, eml20__ElectricResistancePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricResistancePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricResistancePerLengthMeasure(struct soap *soap, eml20__ElectricResistancePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricResistancePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatCapacityMeasure(struct soap*, const char*, int, const eml20__HeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml20__HeatCapacityMeasure * SOAP_FMAC4 soap_in_eml20__HeatCapacityMeasure(struct soap*, const char*, eml20__HeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml20__HeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__HeatCapacityMeasure * soap_new_eml20__HeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__HeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__HeatCapacityMeasure * soap_new_req_eml20__HeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatCapacityUom uom)
{
	eml20__HeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatCapacityMeasure::__item = __item;
		_p->eml20__HeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__HeatCapacityMeasure * soap_new_set_eml20__HeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatCapacityUom uom)
{
	eml20__HeatCapacityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatCapacityMeasure::__item = __item;
		_p->eml20__HeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__HeatCapacityMeasure(struct soap *soap, eml20__HeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure ? "eml20:HeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatCapacityMeasure(struct soap *soap, const char *URL, eml20__HeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure ? "eml20:HeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatCapacityMeasure(struct soap *soap, const char *URL, eml20__HeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure ? "eml20:HeatCapacityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatCapacityMeasure(struct soap *soap, const char *URL, eml20__HeatCapacityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatCapacityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure ? "eml20:HeatCapacityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__HeatCapacityMeasure * SOAP_FMAC4 soap_get_eml20__HeatCapacityMeasure(struct soap*, eml20__HeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml20__HeatCapacityMeasure(struct soap *soap, eml20__HeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatCapacityMeasure(struct soap *soap, const char *URL, eml20__HeatCapacityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatCapacityMeasure(struct soap *soap, eml20__HeatCapacityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatCapacityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LuminousFluxMeasure(struct soap*, const char*, int, const eml20__LuminousFluxMeasure *, const char*);
SOAP_FMAC3 eml20__LuminousFluxMeasure * SOAP_FMAC4 soap_in_eml20__LuminousFluxMeasure(struct soap*, const char*, eml20__LuminousFluxMeasure *, const char*);
SOAP_FMAC1 eml20__LuminousFluxMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousFluxMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LuminousFluxMeasure * soap_new_eml20__LuminousFluxMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LuminousFluxMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LuminousFluxMeasure * soap_new_req_eml20__LuminousFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousFluxUom uom)
{
	eml20__LuminousFluxMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousFluxMeasure::__item = __item;
		_p->eml20__LuminousFluxMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LuminousFluxMeasure * soap_new_set_eml20__LuminousFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LuminousFluxUom uom)
{
	eml20__LuminousFluxMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LuminousFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LuminousFluxMeasure::__item = __item;
		_p->eml20__LuminousFluxMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LuminousFluxMeasure(struct soap *soap, eml20__LuminousFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure ? "eml20:LuminousFluxMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LuminousFluxMeasure(struct soap *soap, const char *URL, eml20__LuminousFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure ? "eml20:LuminousFluxMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LuminousFluxMeasure(struct soap *soap, const char *URL, eml20__LuminousFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure ? "eml20:LuminousFluxMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LuminousFluxMeasure(struct soap *soap, const char *URL, eml20__LuminousFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LuminousFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure ? "eml20:LuminousFluxMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LuminousFluxMeasure * SOAP_FMAC4 soap_get_eml20__LuminousFluxMeasure(struct soap*, eml20__LuminousFluxMeasure *, const char*, const char*);

inline int soap_read_eml20__LuminousFluxMeasure(struct soap *soap, eml20__LuminousFluxMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LuminousFluxMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LuminousFluxMeasure(struct soap *soap, const char *URL, eml20__LuminousFluxMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LuminousFluxMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LuminousFluxMeasure(struct soap *soap, eml20__LuminousFluxMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LuminousFluxMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricCurrentMeasure(struct soap*, const char*, int, const eml20__ElectricCurrentMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricCurrentMeasure * SOAP_FMAC4 soap_in_eml20__ElectricCurrentMeasure(struct soap*, const char*, eml20__ElectricCurrentMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricCurrentMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricCurrentMeasure * soap_new_eml20__ElectricCurrentMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricCurrentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricCurrentMeasure * soap_new_req_eml20__ElectricCurrentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricCurrentUom uom)
{
	eml20__ElectricCurrentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricCurrentMeasure::__item = __item;
		_p->eml20__ElectricCurrentMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricCurrentMeasure * soap_new_set_eml20__ElectricCurrentMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricCurrentUom uom)
{
	eml20__ElectricCurrentMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricCurrentMeasure::__item = __item;
		_p->eml20__ElectricCurrentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricCurrentMeasure(struct soap *soap, eml20__ElectricCurrentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure ? "eml20:ElectricCurrentMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricCurrentMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure ? "eml20:ElectricCurrentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricCurrentMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure ? "eml20:ElectricCurrentMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricCurrentMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricCurrentMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure ? "eml20:ElectricCurrentMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricCurrentMeasure * SOAP_FMAC4 soap_get_eml20__ElectricCurrentMeasure(struct soap*, eml20__ElectricCurrentMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricCurrentMeasure(struct soap *soap, eml20__ElectricCurrentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricCurrentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricCurrentMeasure(struct soap *soap, const char *URL, eml20__ElectricCurrentMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricCurrentMeasure(struct soap *soap, eml20__ElectricCurrentMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricCurrentMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LightExposureMeasure(struct soap*, const char*, int, const eml20__LightExposureMeasure *, const char*);
SOAP_FMAC3 eml20__LightExposureMeasure * SOAP_FMAC4 soap_in_eml20__LightExposureMeasure(struct soap*, const char*, eml20__LightExposureMeasure *, const char*);
SOAP_FMAC1 eml20__LightExposureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LightExposureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LightExposureMeasure * soap_new_eml20__LightExposureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LightExposureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LightExposureMeasure * soap_new_req_eml20__LightExposureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LightExposureUom uom)
{
	eml20__LightExposureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LightExposureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LightExposureMeasure::__item = __item;
		_p->eml20__LightExposureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LightExposureMeasure * soap_new_set_eml20__LightExposureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LightExposureUom uom)
{
	eml20__LightExposureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LightExposureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LightExposureMeasure::__item = __item;
		_p->eml20__LightExposureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LightExposureMeasure(struct soap *soap, eml20__LightExposureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LightExposureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure ? "eml20:LightExposureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LightExposureMeasure(struct soap *soap, const char *URL, eml20__LightExposureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LightExposureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure ? "eml20:LightExposureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LightExposureMeasure(struct soap *soap, const char *URL, eml20__LightExposureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LightExposureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure ? "eml20:LightExposureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LightExposureMeasure(struct soap *soap, const char *URL, eml20__LightExposureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LightExposureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure ? "eml20:LightExposureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LightExposureMeasure * SOAP_FMAC4 soap_get_eml20__LightExposureMeasure(struct soap*, eml20__LightExposureMeasure *, const char*, const char*);

inline int soap_read_eml20__LightExposureMeasure(struct soap *soap, eml20__LightExposureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LightExposureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LightExposureMeasure(struct soap *soap, const char *URL, eml20__LightExposureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LightExposureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LightExposureMeasure(struct soap *soap, eml20__LightExposureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LightExposureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricChargePerAreaMeasure(struct soap*, const char*, int, const eml20__ElectricChargePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricChargePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__ElectricChargePerAreaMeasure(struct soap*, const char*, eml20__ElectricChargePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricChargePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricChargePerAreaMeasure * soap_new_eml20__ElectricChargePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricChargePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricChargePerAreaMeasure * soap_new_req_eml20__ElectricChargePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerAreaUom uom)
{
	eml20__ElectricChargePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerAreaMeasure::__item = __item;
		_p->eml20__ElectricChargePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricChargePerAreaMeasure * soap_new_set_eml20__ElectricChargePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricChargePerAreaUom uom)
{
	eml20__ElectricChargePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricChargePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricChargePerAreaMeasure::__item = __item;
		_p->eml20__ElectricChargePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricChargePerAreaMeasure(struct soap *soap, eml20__ElectricChargePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure ? "eml20:ElectricChargePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricChargePerAreaMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure ? "eml20:ElectricChargePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricChargePerAreaMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure ? "eml20:ElectricChargePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricChargePerAreaMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricChargePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure ? "eml20:ElectricChargePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricChargePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__ElectricChargePerAreaMeasure(struct soap*, eml20__ElectricChargePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricChargePerAreaMeasure(struct soap *soap, eml20__ElectricChargePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricChargePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricChargePerAreaMeasure(struct soap *soap, const char *URL, eml20__ElectricChargePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricChargePerAreaMeasure(struct soap *soap, eml20__ElectricChargePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricChargePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerRotationMeasure(struct soap*, const char*, int, const eml20__VolumePerRotationMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerRotationMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerRotationMeasure(struct soap*, const char*, eml20__VolumePerRotationMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerRotationMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerRotationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerRotationMeasure * soap_new_eml20__VolumePerRotationMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerRotationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerRotationMeasure * soap_new_req_eml20__VolumePerRotationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerRotationUom uom)
{
	eml20__VolumePerRotationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerRotationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerRotationMeasure::__item = __item;
		_p->eml20__VolumePerRotationMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerRotationMeasure * soap_new_set_eml20__VolumePerRotationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerRotationUom uom)
{
	eml20__VolumePerRotationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerRotationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerRotationMeasure::__item = __item;
		_p->eml20__VolumePerRotationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerRotationMeasure(struct soap *soap, eml20__VolumePerRotationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerRotationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure ? "eml20:VolumePerRotationMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerRotationMeasure(struct soap *soap, const char *URL, eml20__VolumePerRotationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerRotationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure ? "eml20:VolumePerRotationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerRotationMeasure(struct soap *soap, const char *URL, eml20__VolumePerRotationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerRotationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure ? "eml20:VolumePerRotationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerRotationMeasure(struct soap *soap, const char *URL, eml20__VolumePerRotationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerRotationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure ? "eml20:VolumePerRotationMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerRotationMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerRotationMeasure(struct soap*, eml20__VolumePerRotationMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerRotationMeasure(struct soap *soap, eml20__VolumePerRotationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerRotationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerRotationMeasure(struct soap *soap, const char *URL, eml20__VolumePerRotationMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerRotationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerRotationMeasure(struct soap *soap, eml20__VolumePerRotationMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerRotationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerMeasure(struct soap*, const char*, int, const eml20__PowerMeasure *, const char*);
SOAP_FMAC3 eml20__PowerMeasure * SOAP_FMAC4 soap_in_eml20__PowerMeasure(struct soap*, const char*, eml20__PowerMeasure *, const char*);
SOAP_FMAC1 eml20__PowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PowerMeasure * soap_new_eml20__PowerMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PowerMeasure * soap_new_req_eml20__PowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerUom uom)
{
	eml20__PowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerMeasure::__item = __item;
		_p->eml20__PowerMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PowerMeasure * soap_new_set_eml20__PowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerUom uom)
{
	eml20__PowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerMeasure::__item = __item;
		_p->eml20__PowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PowerMeasure(struct soap *soap, eml20__PowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure ? "eml20:PowerMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerMeasure(struct soap *soap, const char *URL, eml20__PowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure ? "eml20:PowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerMeasure(struct soap *soap, const char *URL, eml20__PowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure ? "eml20:PowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerMeasure(struct soap *soap, const char *URL, eml20__PowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure ? "eml20:PowerMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PowerMeasure * SOAP_FMAC4 soap_get_eml20__PowerMeasure(struct soap*, eml20__PowerMeasure *, const char*, const char*);

inline int soap_read_eml20__PowerMeasure(struct soap *soap, eml20__PowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerMeasure(struct soap *soap, const char *URL, eml20__PowerMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerMeasure(struct soap *soap, eml20__PowerMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, const char*, int, const eml20__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC4 soap_in_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, const char*, eml20__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_req_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyLengthPerTimeAreaTemperatureUom uom)
{
	eml20__EnergyLengthPerTimeAreaTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyLengthPerTimeAreaTemperatureMeasure::__item = __item;
		_p->eml20__EnergyLengthPerTimeAreaTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_set_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyLengthPerTimeAreaTemperatureUom uom)
{
	eml20__EnergyLengthPerTimeAreaTemperatureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyLengthPerTimeAreaTemperatureMeasure::__item = __item;
		_p->eml20__EnergyLengthPerTimeAreaTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, eml20__EnergyLengthPerTimeAreaTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerTimeAreaTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure ? "eml20:EnergyLengthPerTimeAreaTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerTimeAreaTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerTimeAreaTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure ? "eml20:EnergyLengthPerTimeAreaTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerTimeAreaTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerTimeAreaTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure ? "eml20:EnergyLengthPerTimeAreaTemperatureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerTimeAreaTemperatureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyLengthPerTimeAreaTemperatureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure ? "eml20:EnergyLengthPerTimeAreaTemperatureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC4 soap_get_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, eml20__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, eml20__EnergyLengthPerTimeAreaTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, const char *URL, eml20__EnergyLengthPerTimeAreaTemperatureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, eml20__EnergyLengthPerTimeAreaTemperatureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__SolidAngleMeasure(struct soap*, const char*, int, const eml20__SolidAngleMeasure *, const char*);
SOAP_FMAC3 eml20__SolidAngleMeasure * SOAP_FMAC4 soap_in_eml20__SolidAngleMeasure(struct soap*, const char*, eml20__SolidAngleMeasure *, const char*);
SOAP_FMAC1 eml20__SolidAngleMeasure * SOAP_FMAC2 soap_instantiate_eml20__SolidAngleMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__SolidAngleMeasure * soap_new_eml20__SolidAngleMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__SolidAngleMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__SolidAngleMeasure * soap_new_req_eml20__SolidAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SolidAngleUom uom)
{
	eml20__SolidAngleMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SolidAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SolidAngleMeasure::__item = __item;
		_p->eml20__SolidAngleMeasure::uom = uom;
	}
	return _p;
}

inline eml20__SolidAngleMeasure * soap_new_set_eml20__SolidAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml20__SolidAngleUom uom)
{
	eml20__SolidAngleMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__SolidAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__SolidAngleMeasure::__item = __item;
		_p->eml20__SolidAngleMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__SolidAngleMeasure(struct soap *soap, eml20__SolidAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SolidAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure ? "eml20:SolidAngleMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__SolidAngleMeasure(struct soap *soap, const char *URL, eml20__SolidAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SolidAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure ? "eml20:SolidAngleMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__SolidAngleMeasure(struct soap *soap, const char *URL, eml20__SolidAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SolidAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure ? "eml20:SolidAngleMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__SolidAngleMeasure(struct soap *soap, const char *URL, eml20__SolidAngleMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:SolidAngleMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure ? "eml20:SolidAngleMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__SolidAngleMeasure * SOAP_FMAC4 soap_get_eml20__SolidAngleMeasure(struct soap*, eml20__SolidAngleMeasure *, const char*, const char*);

inline int soap_read_eml20__SolidAngleMeasure(struct soap *soap, eml20__SolidAngleMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__SolidAngleMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__SolidAngleMeasure(struct soap *soap, const char *URL, eml20__SolidAngleMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__SolidAngleMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__SolidAngleMeasure(struct soap *soap, eml20__SolidAngleMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__SolidAngleMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalConductanceMeasure(struct soap*, const char*, int, const eml20__ThermalConductanceMeasure *, const char*);
SOAP_FMAC3 eml20__ThermalConductanceMeasure * SOAP_FMAC4 soap_in_eml20__ThermalConductanceMeasure(struct soap*, const char*, eml20__ThermalConductanceMeasure *, const char*);
SOAP_FMAC1 eml20__ThermalConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermalConductanceMeasure * soap_new_eml20__ThermalConductanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermalConductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermalConductanceMeasure * soap_new_req_eml20__ThermalConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalConductanceUom uom)
{
	eml20__ThermalConductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalConductanceMeasure::__item = __item;
		_p->eml20__ThermalConductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermalConductanceMeasure * soap_new_set_eml20__ThermalConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalConductanceUom uom)
{
	eml20__ThermalConductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalConductanceMeasure::__item = __item;
		_p->eml20__ThermalConductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermalConductanceMeasure(struct soap *soap, eml20__ThermalConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure ? "eml20:ThermalConductanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalConductanceMeasure(struct soap *soap, const char *URL, eml20__ThermalConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure ? "eml20:ThermalConductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalConductanceMeasure(struct soap *soap, const char *URL, eml20__ThermalConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure ? "eml20:ThermalConductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalConductanceMeasure(struct soap *soap, const char *URL, eml20__ThermalConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure ? "eml20:ThermalConductanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermalConductanceMeasure * SOAP_FMAC4 soap_get_eml20__ThermalConductanceMeasure(struct soap*, eml20__ThermalConductanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermalConductanceMeasure(struct soap *soap, eml20__ThermalConductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalConductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalConductanceMeasure(struct soap *soap, const char *URL, eml20__ThermalConductanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalConductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalConductanceMeasure(struct soap *soap, eml20__ThermalConductanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalConductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, const char*, int, const eml20__TemperatureIntervalPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__TemperatureIntervalPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, const char*, eml20__TemperatureIntervalPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__TemperatureIntervalPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TemperatureIntervalPerTimeMeasure * soap_new_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TemperatureIntervalPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TemperatureIntervalPerTimeMeasure * soap_new_req_eml20__TemperatureIntervalPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerTimeUom uom)
{
	eml20__TemperatureIntervalPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerTimeMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TemperatureIntervalPerTimeMeasure * soap_new_set_eml20__TemperatureIntervalPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerTimeUom uom)
{
	eml20__TemperatureIntervalPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerTimeMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, eml20__TemperatureIntervalPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure ? "eml20:TemperatureIntervalPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure ? "eml20:TemperatureIntervalPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure ? "eml20:TemperatureIntervalPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure ? "eml20:TemperatureIntervalPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TemperatureIntervalPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, eml20__TemperatureIntervalPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, eml20__TemperatureIntervalPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerTimeMeasure(struct soap *soap, eml20__TemperatureIntervalPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyPerLengthMeasure(struct soap*, const char*, int, const eml20__EnergyPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__EnergyPerLengthMeasure(struct soap*, const char*, eml20__EnergyPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyPerLengthMeasure * soap_new_eml20__EnergyPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyPerLengthMeasure * soap_new_req_eml20__EnergyPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerLengthUom uom)
{
	eml20__EnergyPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerLengthMeasure::__item = __item;
		_p->eml20__EnergyPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyPerLengthMeasure * soap_new_set_eml20__EnergyPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyPerLengthUom uom)
{
	eml20__EnergyPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyPerLengthMeasure::__item = __item;
		_p->eml20__EnergyPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyPerLengthMeasure(struct soap *soap, eml20__EnergyPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure ? "eml20:EnergyPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyPerLengthMeasure(struct soap *soap, const char *URL, eml20__EnergyPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure ? "eml20:EnergyPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyPerLengthMeasure(struct soap *soap, const char *URL, eml20__EnergyPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure ? "eml20:EnergyPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyPerLengthMeasure(struct soap *soap, const char *URL, eml20__EnergyPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure ? "eml20:EnergyPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__EnergyPerLengthMeasure(struct soap*, eml20__EnergyPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyPerLengthMeasure(struct soap *soap, eml20__EnergyPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyPerLengthMeasure(struct soap *soap, const char *URL, eml20__EnergyPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyPerLengthMeasure(struct soap *soap, eml20__EnergyPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LinearThermalExpansionMeasure(struct soap*, const char*, int, const eml20__LinearThermalExpansionMeasure *, const char*);
SOAP_FMAC3 eml20__LinearThermalExpansionMeasure * SOAP_FMAC4 soap_in_eml20__LinearThermalExpansionMeasure(struct soap*, const char*, eml20__LinearThermalExpansionMeasure *, const char*);
SOAP_FMAC1 eml20__LinearThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml20__LinearThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LinearThermalExpansionMeasure * soap_new_eml20__LinearThermalExpansionMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LinearThermalExpansionMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LinearThermalExpansionMeasure * soap_new_req_eml20__LinearThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LinearThermalExpansionUom uom)
{
	eml20__LinearThermalExpansionMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LinearThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LinearThermalExpansionMeasure::__item = __item;
		_p->eml20__LinearThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LinearThermalExpansionMeasure * soap_new_set_eml20__LinearThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LinearThermalExpansionUom uom)
{
	eml20__LinearThermalExpansionMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LinearThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LinearThermalExpansionMeasure::__item = __item;
		_p->eml20__LinearThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LinearThermalExpansionMeasure(struct soap *soap, eml20__LinearThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure ? "eml20:LinearThermalExpansionMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LinearThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__LinearThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure ? "eml20:LinearThermalExpansionMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LinearThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__LinearThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure ? "eml20:LinearThermalExpansionMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LinearThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__LinearThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure ? "eml20:LinearThermalExpansionMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LinearThermalExpansionMeasure * SOAP_FMAC4 soap_get_eml20__LinearThermalExpansionMeasure(struct soap*, eml20__LinearThermalExpansionMeasure *, const char*, const char*);

inline int soap_read_eml20__LinearThermalExpansionMeasure(struct soap *soap, eml20__LinearThermalExpansionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LinearThermalExpansionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LinearThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__LinearThermalExpansionMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LinearThermalExpansionMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LinearThermalExpansionMeasure(struct soap *soap, eml20__LinearThermalExpansionMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LinearThermalExpansionMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForcePerForceMeasure(struct soap*, const char*, int, const eml20__ForcePerForceMeasure *, const char*);
SOAP_FMAC3 eml20__ForcePerForceMeasure * SOAP_FMAC4 soap_in_eml20__ForcePerForceMeasure(struct soap*, const char*, eml20__ForcePerForceMeasure *, const char*);
SOAP_FMAC1 eml20__ForcePerForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForcePerForceMeasure * soap_new_eml20__ForcePerForceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForcePerForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForcePerForceMeasure * soap_new_req_eml20__ForcePerForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerForceUom uom)
{
	eml20__ForcePerForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerForceMeasure::__item = __item;
		_p->eml20__ForcePerForceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForcePerForceMeasure * soap_new_set_eml20__ForcePerForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForcePerForceUom uom)
{
	eml20__ForcePerForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForcePerForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForcePerForceMeasure::__item = __item;
		_p->eml20__ForcePerForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForcePerForceMeasure(struct soap *soap, eml20__ForcePerForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure ? "eml20:ForcePerForceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForcePerForceMeasure(struct soap *soap, const char *URL, eml20__ForcePerForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure ? "eml20:ForcePerForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForcePerForceMeasure(struct soap *soap, const char *URL, eml20__ForcePerForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure ? "eml20:ForcePerForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForcePerForceMeasure(struct soap *soap, const char *URL, eml20__ForcePerForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForcePerForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure ? "eml20:ForcePerForceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForcePerForceMeasure * SOAP_FMAC4 soap_get_eml20__ForcePerForceMeasure(struct soap*, eml20__ForcePerForceMeasure *, const char*, const char*);

inline int soap_read_eml20__ForcePerForceMeasure(struct soap *soap, eml20__ForcePerForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForcePerForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForcePerForceMeasure(struct soap *soap, const char *URL, eml20__ForcePerForceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForcePerForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForcePerForceMeasure(struct soap *soap, eml20__ForcePerForceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForcePerForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalVolumeMeasure(struct soap*, const char*, int, const eml20__ReciprocalVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalVolumeMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalVolumeMeasure(struct soap*, const char*, eml20__ReciprocalVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalVolumeMeasure * soap_new_eml20__ReciprocalVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalVolumeMeasure * soap_new_req_eml20__ReciprocalVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalVolumeUom uom)
{
	eml20__ReciprocalVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalVolumeMeasure::__item = __item;
		_p->eml20__ReciprocalVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalVolumeMeasure * soap_new_set_eml20__ReciprocalVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalVolumeUom uom)
{
	eml20__ReciprocalVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalVolumeMeasure::__item = __item;
		_p->eml20__ReciprocalVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalVolumeMeasure(struct soap *soap, eml20__ReciprocalVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure ? "eml20:ReciprocalVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalVolumeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure ? "eml20:ReciprocalVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalVolumeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure ? "eml20:ReciprocalVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalVolumeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure ? "eml20:ReciprocalVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalVolumeMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalVolumeMeasure(struct soap*, eml20__ReciprocalVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalVolumeMeasure(struct soap *soap, eml20__ReciprocalVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalVolumeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalVolumeMeasure(struct soap *soap, eml20__ReciprocalVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalMassTimeMeasure(struct soap*, const char*, int, const eml20__ReciprocalMassTimeMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalMassTimeMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalMassTimeMeasure(struct soap*, const char*, eml20__ReciprocalMassTimeMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalMassTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalMassTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalMassTimeMeasure * soap_new_eml20__ReciprocalMassTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalMassTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalMassTimeMeasure * soap_new_req_eml20__ReciprocalMassTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalMassTimeUom uom)
{
	eml20__ReciprocalMassTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalMassTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalMassTimeMeasure::__item = __item;
		_p->eml20__ReciprocalMassTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalMassTimeMeasure * soap_new_set_eml20__ReciprocalMassTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalMassTimeUom uom)
{
	eml20__ReciprocalMassTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalMassTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalMassTimeMeasure::__item = __item;
		_p->eml20__ReciprocalMassTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalMassTimeMeasure(struct soap *soap, eml20__ReciprocalMassTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure ? "eml20:ReciprocalMassTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalMassTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure ? "eml20:ReciprocalMassTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalMassTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure ? "eml20:ReciprocalMassTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalMassTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalMassTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure ? "eml20:ReciprocalMassTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalMassTimeMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalMassTimeMeasure(struct soap*, eml20__ReciprocalMassTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalMassTimeMeasure(struct soap *soap, eml20__ReciprocalMassTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalMassTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalMassTimeMeasure(struct soap *soap, const char *URL, eml20__ReciprocalMassTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalMassTimeMeasure(struct soap *soap, eml20__ReciprocalMassTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalMassTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TimePerLengthMeasure(struct soap*, const char*, int, const eml20__TimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__TimePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__TimePerLengthMeasure(struct soap*, const char*, eml20__TimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__TimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TimePerLengthMeasure * soap_new_eml20__TimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TimePerLengthMeasure * soap_new_req_eml20__TimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerLengthUom uom)
{
	eml20__TimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerLengthMeasure::__item = __item;
		_p->eml20__TimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TimePerLengthMeasure * soap_new_set_eml20__TimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TimePerLengthUom uom)
{
	eml20__TimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TimePerLengthMeasure::__item = __item;
		_p->eml20__TimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TimePerLengthMeasure(struct soap *soap, eml20__TimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure ? "eml20:TimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TimePerLengthMeasure(struct soap *soap, const char *URL, eml20__TimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure ? "eml20:TimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TimePerLengthMeasure(struct soap *soap, const char *URL, eml20__TimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure ? "eml20:TimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TimePerLengthMeasure(struct soap *soap, const char *URL, eml20__TimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure ? "eml20:TimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TimePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__TimePerLengthMeasure(struct soap*, eml20__TimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__TimePerLengthMeasure(struct soap *soap, eml20__TimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TimePerLengthMeasure(struct soap *soap, const char *URL, eml20__TimePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TimePerLengthMeasure(struct soap *soap, eml20__TimePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstanceMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstanceMeasure(struct soap*, const char*, eml20__AmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstanceMeasure * soap_new_eml20__AmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstanceMeasure * soap_new_req_eml20__AmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstanceUom uom)
{
	eml20__AmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstanceMeasure * soap_new_set_eml20__AmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstanceUom uom)
{
	eml20__AmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure ? "eml20:AmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure ? "eml20:AmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure ? "eml20:AmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure ? "eml20:AmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstanceMeasure(struct soap*, eml20__AmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstanceMeasure(struct soap *soap, eml20__AmountOfSubstanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstancePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstancePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, const char*, eml20__AmountOfSubstancePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstancePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstancePerAreaMeasure * soap_new_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstancePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstancePerAreaMeasure * soap_new_req_eml20__AmountOfSubstancePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerAreaUom uom)
{
	eml20__AmountOfSubstancePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerAreaMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstancePerAreaMeasure * soap_new_set_eml20__AmountOfSubstancePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerAreaUom uom)
{
	eml20__AmountOfSubstancePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerAreaMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure ? "eml20:AmountOfSubstancePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure ? "eml20:AmountOfSubstancePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure ? "eml20:AmountOfSubstancePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure ? "eml20:AmountOfSubstancePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstancePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, eml20__AmountOfSubstancePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, const char*, int, const eml20__TemperatureIntervalPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__TemperatureIntervalPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, const char*, eml20__TemperatureIntervalPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__TemperatureIntervalPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TemperatureIntervalPerLengthMeasure * soap_new_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TemperatureIntervalPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TemperatureIntervalPerLengthMeasure * soap_new_req_eml20__TemperatureIntervalPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerLengthUom uom)
{
	eml20__TemperatureIntervalPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerLengthMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TemperatureIntervalPerLengthMeasure * soap_new_set_eml20__TemperatureIntervalPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalPerLengthUom uom)
{
	eml20__TemperatureIntervalPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalPerLengthMeasure::__item = __item;
		_p->eml20__TemperatureIntervalPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, eml20__TemperatureIntervalPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure ? "eml20:TemperatureIntervalPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure ? "eml20:TemperatureIntervalPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure ? "eml20:TemperatureIntervalPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure ? "eml20:TemperatureIntervalPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TemperatureIntervalPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, eml20__TemperatureIntervalPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, eml20__TemperatureIntervalPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalPerLengthMeasure(struct soap *soap, eml20__TemperatureIntervalPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerVolumeMeasure(struct soap*, const char*, int, const eml20__MassPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerVolumeMeasure * SOAP_FMAC4 soap_in_eml20__MassPerVolumeMeasure(struct soap*, const char*, eml20__MassPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerVolumeMeasure * soap_new_eml20__MassPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerVolumeMeasure * soap_new_req_eml20__MassPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerVolumeUom uom)
{
	eml20__MassPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerVolumeMeasure::__item = __item;
		_p->eml20__MassPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerVolumeMeasure * soap_new_set_eml20__MassPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerVolumeUom uom)
{
	eml20__MassPerVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerVolumeMeasure::__item = __item;
		_p->eml20__MassPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerVolumeMeasure(struct soap *soap, eml20__MassPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure ? "eml20:MassPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerVolumeMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure ? "eml20:MassPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerVolumeMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure ? "eml20:MassPerVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerVolumeMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure ? "eml20:MassPerVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerVolumeMeasure * SOAP_FMAC4 soap_get_eml20__MassPerVolumeMeasure(struct soap*, eml20__MassPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerVolumeMeasure(struct soap *soap, eml20__MassPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerVolumeMeasure(struct soap *soap, const char *URL, eml20__MassPerVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerVolumeMeasure(struct soap *soap, eml20__MassPerVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthMeasure(struct soap*, const char*, int, const eml20__LengthMeasure *, const char*);
SOAP_FMAC3 eml20__LengthMeasure * SOAP_FMAC4 soap_in_eml20__LengthMeasure(struct soap*, const char*, eml20__LengthMeasure *, const char*);
SOAP_FMAC1 eml20__LengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthMeasure * soap_new_eml20__LengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthMeasure * soap_new_req_eml20__LengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthUom uom)
{
	eml20__LengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthMeasure::__item = __item;
		_p->eml20__LengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthMeasure * soap_new_set_eml20__LengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthUom uom)
{
	eml20__LengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthMeasure::__item = __item;
		_p->eml20__LengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthMeasure(struct soap *soap, eml20__LengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure ? "eml20:LengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthMeasure(struct soap *soap, const char *URL, eml20__LengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure ? "eml20:LengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthMeasure(struct soap *soap, const char *URL, eml20__LengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure ? "eml20:LengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthMeasure(struct soap *soap, const char *URL, eml20__LengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure ? "eml20:LengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthMeasure * SOAP_FMAC4 soap_get_eml20__LengthMeasure(struct soap*, eml20__LengthMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthMeasure(struct soap *soap, eml20__LengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthMeasure(struct soap *soap, const char *URL, eml20__LengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthMeasure(struct soap *soap, eml20__LengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, const char*, int, const eml20__AreaPerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml20__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, const char*, eml20__AreaPerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml20__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AreaPerAmountOfSubstanceMeasure * soap_new_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AreaPerAmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AreaPerAmountOfSubstanceMeasure * soap_new_req_eml20__AreaPerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerAmountOfSubstanceUom uom)
{
	eml20__AreaPerAmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerAmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AreaPerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AreaPerAmountOfSubstanceMeasure * soap_new_set_eml20__AreaPerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AreaPerAmountOfSubstanceUom uom)
{
	eml20__AreaPerAmountOfSubstanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AreaPerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AreaPerAmountOfSubstanceMeasure::__item = __item;
		_p->eml20__AreaPerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, eml20__AreaPerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure ? "eml20:AreaPerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AreaPerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure ? "eml20:AreaPerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AreaPerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure ? "eml20:AreaPerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AreaPerAmountOfSubstanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AreaPerAmountOfSubstanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure ? "eml20:AreaPerAmountOfSubstanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, eml20__AreaPerAmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, eml20__AreaPerAmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AreaPerAmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, const char *URL, eml20__AreaPerAmountOfSubstanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AreaPerAmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AreaPerAmountOfSubstanceMeasure(struct soap *soap, eml20__AreaPerAmountOfSubstanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AreaPerAmountOfSubstanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ReciprocalPressureMeasure(struct soap*, const char*, int, const eml20__ReciprocalPressureMeasure *, const char*);
SOAP_FMAC3 eml20__ReciprocalPressureMeasure * SOAP_FMAC4 soap_in_eml20__ReciprocalPressureMeasure(struct soap*, const char*, eml20__ReciprocalPressureMeasure *, const char*);
SOAP_FMAC1 eml20__ReciprocalPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ReciprocalPressureMeasure * soap_new_eml20__ReciprocalPressureMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ReciprocalPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ReciprocalPressureMeasure * soap_new_req_eml20__ReciprocalPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalPressureUom uom)
{
	eml20__ReciprocalPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalPressureMeasure::__item = __item;
		_p->eml20__ReciprocalPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ReciprocalPressureMeasure * soap_new_set_eml20__ReciprocalPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ReciprocalPressureUom uom)
{
	eml20__ReciprocalPressureMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ReciprocalPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ReciprocalPressureMeasure::__item = __item;
		_p->eml20__ReciprocalPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ReciprocalPressureMeasure(struct soap *soap, eml20__ReciprocalPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure ? "eml20:ReciprocalPressureMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ReciprocalPressureMeasure(struct soap *soap, const char *URL, eml20__ReciprocalPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure ? "eml20:ReciprocalPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ReciprocalPressureMeasure(struct soap *soap, const char *URL, eml20__ReciprocalPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure ? "eml20:ReciprocalPressureMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ReciprocalPressureMeasure(struct soap *soap, const char *URL, eml20__ReciprocalPressureMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ReciprocalPressureMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure ? "eml20:ReciprocalPressureMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ReciprocalPressureMeasure * SOAP_FMAC4 soap_get_eml20__ReciprocalPressureMeasure(struct soap*, eml20__ReciprocalPressureMeasure *, const char*, const char*);

inline int soap_read_eml20__ReciprocalPressureMeasure(struct soap *soap, eml20__ReciprocalPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ReciprocalPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ReciprocalPressureMeasure(struct soap *soap, const char *URL, eml20__ReciprocalPressureMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ReciprocalPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ReciprocalPressureMeasure(struct soap *soap, eml20__ReciprocalPressureMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ReciprocalPressureMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ElectricConductanceMeasure(struct soap*, const char*, int, const eml20__ElectricConductanceMeasure *, const char*);
SOAP_FMAC3 eml20__ElectricConductanceMeasure * SOAP_FMAC4 soap_in_eml20__ElectricConductanceMeasure(struct soap*, const char*, eml20__ElectricConductanceMeasure *, const char*);
SOAP_FMAC1 eml20__ElectricConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ElectricConductanceMeasure * soap_new_eml20__ElectricConductanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ElectricConductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ElectricConductanceMeasure * soap_new_req_eml20__ElectricConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricConductanceUom uom)
{
	eml20__ElectricConductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricConductanceMeasure::__item = __item;
		_p->eml20__ElectricConductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ElectricConductanceMeasure * soap_new_set_eml20__ElectricConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ElectricConductanceUom uom)
{
	eml20__ElectricConductanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ElectricConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ElectricConductanceMeasure::__item = __item;
		_p->eml20__ElectricConductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ElectricConductanceMeasure(struct soap *soap, eml20__ElectricConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure ? "eml20:ElectricConductanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ElectricConductanceMeasure(struct soap *soap, const char *URL, eml20__ElectricConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure ? "eml20:ElectricConductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ElectricConductanceMeasure(struct soap *soap, const char *URL, eml20__ElectricConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure ? "eml20:ElectricConductanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ElectricConductanceMeasure(struct soap *soap, const char *URL, eml20__ElectricConductanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ElectricConductanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure ? "eml20:ElectricConductanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ElectricConductanceMeasure * SOAP_FMAC4 soap_get_eml20__ElectricConductanceMeasure(struct soap*, eml20__ElectricConductanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ElectricConductanceMeasure(struct soap *soap, eml20__ElectricConductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ElectricConductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ElectricConductanceMeasure(struct soap *soap, const char *URL, eml20__ElectricConductanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ElectricConductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ElectricConductanceMeasure(struct soap *soap, eml20__ElectricConductanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ElectricConductanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MolarVolumeMeasure(struct soap*, const char*, int, const eml20__MolarVolumeMeasure *, const char*);
SOAP_FMAC3 eml20__MolarVolumeMeasure * SOAP_FMAC4 soap_in_eml20__MolarVolumeMeasure(struct soap*, const char*, eml20__MolarVolumeMeasure *, const char*);
SOAP_FMAC1 eml20__MolarVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MolarVolumeMeasure * soap_new_eml20__MolarVolumeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MolarVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MolarVolumeMeasure * soap_new_req_eml20__MolarVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarVolumeUom uom)
{
	eml20__MolarVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarVolumeMeasure::__item = __item;
		_p->eml20__MolarVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MolarVolumeMeasure * soap_new_set_eml20__MolarVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MolarVolumeUom uom)
{
	eml20__MolarVolumeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MolarVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MolarVolumeMeasure::__item = __item;
		_p->eml20__MolarVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MolarVolumeMeasure(struct soap *soap, eml20__MolarVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure ? "eml20:MolarVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MolarVolumeMeasure(struct soap *soap, const char *URL, eml20__MolarVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure ? "eml20:MolarVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MolarVolumeMeasure(struct soap *soap, const char *URL, eml20__MolarVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure ? "eml20:MolarVolumeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MolarVolumeMeasure(struct soap *soap, const char *URL, eml20__MolarVolumeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MolarVolumeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure ? "eml20:MolarVolumeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MolarVolumeMeasure * SOAP_FMAC4 soap_get_eml20__MolarVolumeMeasure(struct soap*, eml20__MolarVolumeMeasure *, const char*, const char*);

inline int soap_read_eml20__MolarVolumeMeasure(struct soap *soap, eml20__MolarVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MolarVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MolarVolumeMeasure(struct soap *soap, const char *URL, eml20__MolarVolumeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MolarVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MolarVolumeMeasure(struct soap *soap, eml20__MolarVolumeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MolarVolumeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerMassMeasure(struct soap*, const char*, int, const eml20__VolumePerMassMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerMassMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerMassMeasure(struct soap*, const char*, eml20__VolumePerMassMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerMassMeasure * soap_new_eml20__VolumePerMassMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerMassMeasure * soap_new_req_eml20__VolumePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerMassUom uom)
{
	eml20__VolumePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerMassMeasure::__item = __item;
		_p->eml20__VolumePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerMassMeasure * soap_new_set_eml20__VolumePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerMassUom uom)
{
	eml20__VolumePerMassMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerMassMeasure::__item = __item;
		_p->eml20__VolumePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerMassMeasure(struct soap *soap, eml20__VolumePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure ? "eml20:VolumePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerMassMeasure(struct soap *soap, const char *URL, eml20__VolumePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure ? "eml20:VolumePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerMassMeasure(struct soap *soap, const char *URL, eml20__VolumePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure ? "eml20:VolumePerMassMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerMassMeasure(struct soap *soap, const char *URL, eml20__VolumePerMassMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerMassMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure ? "eml20:VolumePerMassMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerMassMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerMassMeasure(struct soap*, eml20__VolumePerMassMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerMassMeasure(struct soap *soap, eml20__VolumePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerMassMeasure(struct soap *soap, const char *URL, eml20__VolumePerMassMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerMassMeasure(struct soap *soap, eml20__VolumePerMassMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerMassMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MassPerTimeMeasure(struct soap*, const char*, int, const eml20__MassPerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__MassPerTimeMeasure * SOAP_FMAC4 soap_in_eml20__MassPerTimeMeasure(struct soap*, const char*, eml20__MassPerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__MassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MassPerTimeMeasure * soap_new_eml20__MassPerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MassPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MassPerTimeMeasure * soap_new_req_eml20__MassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimeUom uom)
{
	eml20__MassPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimeMeasure::__item = __item;
		_p->eml20__MassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MassPerTimeMeasure * soap_new_set_eml20__MassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MassPerTimeUom uom)
{
	eml20__MassPerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MassPerTimeMeasure::__item = __item;
		_p->eml20__MassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MassPerTimeMeasure(struct soap *soap, eml20__MassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure ? "eml20:MassPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MassPerTimeMeasure(struct soap *soap, const char *URL, eml20__MassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure ? "eml20:MassPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MassPerTimeMeasure(struct soap *soap, const char *URL, eml20__MassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure ? "eml20:MassPerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MassPerTimeMeasure(struct soap *soap, const char *URL, eml20__MassPerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MassPerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure ? "eml20:MassPerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MassPerTimeMeasure * SOAP_FMAC4 soap_get_eml20__MassPerTimeMeasure(struct soap*, eml20__MassPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__MassPerTimeMeasure(struct soap *soap, eml20__MassPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MassPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MassPerTimeMeasure(struct soap *soap, const char *URL, eml20__MassPerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MassPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MassPerTimeMeasure(struct soap *soap, eml20__MassPerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MassPerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatFlowRateMeasure(struct soap*, const char*, int, const eml20__HeatFlowRateMeasure *, const char*);
SOAP_FMAC3 eml20__HeatFlowRateMeasure * SOAP_FMAC4 soap_in_eml20__HeatFlowRateMeasure(struct soap*, const char*, eml20__HeatFlowRateMeasure *, const char*);
SOAP_FMAC1 eml20__HeatFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__HeatFlowRateMeasure * soap_new_eml20__HeatFlowRateMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__HeatFlowRateMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__HeatFlowRateMeasure * soap_new_req_eml20__HeatFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatFlowRateUom uom)
{
	eml20__HeatFlowRateMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatFlowRateMeasure::__item = __item;
		_p->eml20__HeatFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline eml20__HeatFlowRateMeasure * soap_new_set_eml20__HeatFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatFlowRateUom uom)
{
	eml20__HeatFlowRateMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatFlowRateMeasure::__item = __item;
		_p->eml20__HeatFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__HeatFlowRateMeasure(struct soap *soap, eml20__HeatFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure ? "eml20:HeatFlowRateMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatFlowRateMeasure(struct soap *soap, const char *URL, eml20__HeatFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure ? "eml20:HeatFlowRateMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatFlowRateMeasure(struct soap *soap, const char *URL, eml20__HeatFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure ? "eml20:HeatFlowRateMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatFlowRateMeasure(struct soap *soap, const char *URL, eml20__HeatFlowRateMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatFlowRateMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure ? "eml20:HeatFlowRateMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__HeatFlowRateMeasure * SOAP_FMAC4 soap_get_eml20__HeatFlowRateMeasure(struct soap*, eml20__HeatFlowRateMeasure *, const char*, const char*);

inline int soap_read_eml20__HeatFlowRateMeasure(struct soap *soap, eml20__HeatFlowRateMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatFlowRateMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatFlowRateMeasure(struct soap *soap, const char *URL, eml20__HeatFlowRateMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatFlowRateMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatFlowRateMeasure(struct soap *soap, eml20__HeatFlowRateMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatFlowRateMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumetricThermalExpansionMeasure(struct soap*, const char*, int, const eml20__VolumetricThermalExpansionMeasure *, const char*);
SOAP_FMAC3 eml20__VolumetricThermalExpansionMeasure * SOAP_FMAC4 soap_in_eml20__VolumetricThermalExpansionMeasure(struct soap*, const char*, eml20__VolumetricThermalExpansionMeasure *, const char*);
SOAP_FMAC1 eml20__VolumetricThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumetricThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumetricThermalExpansionMeasure * soap_new_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumetricThermalExpansionMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumetricThermalExpansionMeasure * soap_new_req_eml20__VolumetricThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumetricThermalExpansionUom uom)
{
	eml20__VolumetricThermalExpansionMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumetricThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumetricThermalExpansionMeasure::__item = __item;
		_p->eml20__VolumetricThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumetricThermalExpansionMeasure * soap_new_set_eml20__VolumetricThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumetricThermalExpansionUom uom)
{
	eml20__VolumetricThermalExpansionMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumetricThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumetricThermalExpansionMeasure::__item = __item;
		_p->eml20__VolumetricThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, eml20__VolumetricThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure ? "eml20:VolumetricThermalExpansionMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__VolumetricThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure ? "eml20:VolumetricThermalExpansionMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__VolumetricThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure ? "eml20:VolumetricThermalExpansionMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__VolumetricThermalExpansionMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumetricThermalExpansionMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure ? "eml20:VolumetricThermalExpansionMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumetricThermalExpansionMeasure * SOAP_FMAC4 soap_get_eml20__VolumetricThermalExpansionMeasure(struct soap*, eml20__VolumetricThermalExpansionMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, eml20__VolumetricThermalExpansionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumetricThermalExpansionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, const char *URL, eml20__VolumetricThermalExpansionMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumetricThermalExpansionMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumetricThermalExpansionMeasure(struct soap *soap, eml20__VolumetricThermalExpansionMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumetricThermalExpansionMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticFluxMeasure(struct soap*, const char*, int, const eml20__MagneticFluxMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticFluxMeasure * SOAP_FMAC4 soap_in_eml20__MagneticFluxMeasure(struct soap*, const char*, eml20__MagneticFluxMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticFluxMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticFluxMeasure * soap_new_eml20__MagneticFluxMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticFluxMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticFluxMeasure * soap_new_req_eml20__MagneticFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxUom uom)
{
	eml20__MagneticFluxMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxMeasure::__item = __item;
		_p->eml20__MagneticFluxMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticFluxMeasure * soap_new_set_eml20__MagneticFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticFluxUom uom)
{
	eml20__MagneticFluxMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticFluxMeasure::__item = __item;
		_p->eml20__MagneticFluxMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticFluxMeasure(struct soap *soap, eml20__MagneticFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure ? "eml20:MagneticFluxMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticFluxMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure ? "eml20:MagneticFluxMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticFluxMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure ? "eml20:MagneticFluxMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticFluxMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticFluxMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure ? "eml20:MagneticFluxMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticFluxMeasure * SOAP_FMAC4 soap_get_eml20__MagneticFluxMeasure(struct soap*, eml20__MagneticFluxMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticFluxMeasure(struct soap *soap, eml20__MagneticFluxMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticFluxMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticFluxMeasure(struct soap *soap, const char *URL, eml20__MagneticFluxMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticFluxMeasure(struct soap *soap, eml20__MagneticFluxMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticFluxMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimeMeasure(struct soap*, const char*, int, const eml20__VolumePerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimeMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimeMeasure(struct soap*, const char*, eml20__VolumePerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimeMeasure * soap_new_eml20__VolumePerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimeMeasure * soap_new_req_eml20__VolumePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimeUom uom)
{
	eml20__VolumePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimeMeasure::__item = __item;
		_p->eml20__VolumePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimeMeasure * soap_new_set_eml20__VolumePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimeUom uom)
{
	eml20__VolumePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimeMeasure::__item = __item;
		_p->eml20__VolumePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimeMeasure(struct soap *soap, eml20__VolumePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure ? "eml20:VolumePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure ? "eml20:VolumePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure ? "eml20:VolumePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure ? "eml20:VolumePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimeMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimeMeasure(struct soap*, eml20__VolumePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimeMeasure(struct soap *soap, eml20__VolumePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimeMeasure(struct soap *soap, eml20__VolumePerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LinearAccelerationMeasure(struct soap*, const char*, int, const eml20__LinearAccelerationMeasure *, const char*);
SOAP_FMAC3 eml20__LinearAccelerationMeasure * SOAP_FMAC4 soap_in_eml20__LinearAccelerationMeasure(struct soap*, const char*, eml20__LinearAccelerationMeasure *, const char*);
SOAP_FMAC1 eml20__LinearAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml20__LinearAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LinearAccelerationMeasure * soap_new_eml20__LinearAccelerationMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LinearAccelerationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LinearAccelerationMeasure * soap_new_req_eml20__LinearAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LinearAccelerationUom uom)
{
	eml20__LinearAccelerationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LinearAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LinearAccelerationMeasure::__item = __item;
		_p->eml20__LinearAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LinearAccelerationMeasure * soap_new_set_eml20__LinearAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LinearAccelerationUom uom)
{
	eml20__LinearAccelerationMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LinearAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LinearAccelerationMeasure::__item = __item;
		_p->eml20__LinearAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LinearAccelerationMeasure(struct soap *soap, eml20__LinearAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure ? "eml20:LinearAccelerationMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LinearAccelerationMeasure(struct soap *soap, const char *URL, eml20__LinearAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure ? "eml20:LinearAccelerationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LinearAccelerationMeasure(struct soap *soap, const char *URL, eml20__LinearAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure ? "eml20:LinearAccelerationMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LinearAccelerationMeasure(struct soap *soap, const char *URL, eml20__LinearAccelerationMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LinearAccelerationMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure ? "eml20:LinearAccelerationMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LinearAccelerationMeasure * SOAP_FMAC4 soap_get_eml20__LinearAccelerationMeasure(struct soap*, eml20__LinearAccelerationMeasure *, const char*, const char*);

inline int soap_read_eml20__LinearAccelerationMeasure(struct soap *soap, eml20__LinearAccelerationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LinearAccelerationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LinearAccelerationMeasure(struct soap *soap, const char *URL, eml20__LinearAccelerationMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LinearAccelerationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LinearAccelerationMeasure(struct soap *soap, eml20__LinearAccelerationMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LinearAccelerationMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__MagneticVectorPotentialMeasure(struct soap*, const char*, int, const eml20__MagneticVectorPotentialMeasure *, const char*);
SOAP_FMAC3 eml20__MagneticVectorPotentialMeasure * SOAP_FMAC4 soap_in_eml20__MagneticVectorPotentialMeasure(struct soap*, const char*, eml20__MagneticVectorPotentialMeasure *, const char*);
SOAP_FMAC1 eml20__MagneticVectorPotentialMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticVectorPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__MagneticVectorPotentialMeasure * soap_new_eml20__MagneticVectorPotentialMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__MagneticVectorPotentialMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__MagneticVectorPotentialMeasure * soap_new_req_eml20__MagneticVectorPotentialMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticVectorPotentialUom uom)
{
	eml20__MagneticVectorPotentialMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticVectorPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticVectorPotentialMeasure::__item = __item;
		_p->eml20__MagneticVectorPotentialMeasure::uom = uom;
	}
	return _p;
}

inline eml20__MagneticVectorPotentialMeasure * soap_new_set_eml20__MagneticVectorPotentialMeasure(
	struct soap *soap,
	double __item,
	enum eml20__MagneticVectorPotentialUom uom)
{
	eml20__MagneticVectorPotentialMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__MagneticVectorPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__MagneticVectorPotentialMeasure::__item = __item;
		_p->eml20__MagneticVectorPotentialMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__MagneticVectorPotentialMeasure(struct soap *soap, eml20__MagneticVectorPotentialMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticVectorPotentialMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure ? "eml20:MagneticVectorPotentialMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__MagneticVectorPotentialMeasure(struct soap *soap, const char *URL, eml20__MagneticVectorPotentialMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticVectorPotentialMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure ? "eml20:MagneticVectorPotentialMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__MagneticVectorPotentialMeasure(struct soap *soap, const char *URL, eml20__MagneticVectorPotentialMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticVectorPotentialMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure ? "eml20:MagneticVectorPotentialMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__MagneticVectorPotentialMeasure(struct soap *soap, const char *URL, eml20__MagneticVectorPotentialMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:MagneticVectorPotentialMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure ? "eml20:MagneticVectorPotentialMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__MagneticVectorPotentialMeasure * SOAP_FMAC4 soap_get_eml20__MagneticVectorPotentialMeasure(struct soap*, eml20__MagneticVectorPotentialMeasure *, const char*, const char*);

inline int soap_read_eml20__MagneticVectorPotentialMeasure(struct soap *soap, eml20__MagneticVectorPotentialMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__MagneticVectorPotentialMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__MagneticVectorPotentialMeasure(struct soap *soap, const char *URL, eml20__MagneticVectorPotentialMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__MagneticVectorPotentialMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__MagneticVectorPotentialMeasure(struct soap *soap, eml20__MagneticVectorPotentialMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__MagneticVectorPotentialMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__APINeutronMeasure(struct soap*, const char*, int, const eml20__APINeutronMeasure *, const char*);
SOAP_FMAC3 eml20__APINeutronMeasure * SOAP_FMAC4 soap_in_eml20__APINeutronMeasure(struct soap*, const char*, eml20__APINeutronMeasure *, const char*);
SOAP_FMAC1 eml20__APINeutronMeasure * SOAP_FMAC2 soap_instantiate_eml20__APINeutronMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__APINeutronMeasure * soap_new_eml20__APINeutronMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__APINeutronMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__APINeutronMeasure * soap_new_req_eml20__APINeutronMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APINeutronUom uom)
{
	eml20__APINeutronMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APINeutronMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APINeutronMeasure::__item = __item;
		_p->eml20__APINeutronMeasure::uom = uom;
	}
	return _p;
}

inline eml20__APINeutronMeasure * soap_new_set_eml20__APINeutronMeasure(
	struct soap *soap,
	double __item,
	enum eml20__APINeutronUom uom)
{
	eml20__APINeutronMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__APINeutronMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__APINeutronMeasure::__item = __item;
		_p->eml20__APINeutronMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__APINeutronMeasure(struct soap *soap, eml20__APINeutronMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APINeutronMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure ? "eml20:APINeutronMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__APINeutronMeasure(struct soap *soap, const char *URL, eml20__APINeutronMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APINeutronMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure ? "eml20:APINeutronMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__APINeutronMeasure(struct soap *soap, const char *URL, eml20__APINeutronMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APINeutronMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure ? "eml20:APINeutronMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__APINeutronMeasure(struct soap *soap, const char *URL, eml20__APINeutronMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:APINeutronMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure ? "eml20:APINeutronMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__APINeutronMeasure * SOAP_FMAC4 soap_get_eml20__APINeutronMeasure(struct soap*, eml20__APINeutronMeasure *, const char*, const char*);

inline int soap_read_eml20__APINeutronMeasure(struct soap *soap, eml20__APINeutronMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__APINeutronMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__APINeutronMeasure(struct soap *soap, const char *URL, eml20__APINeutronMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__APINeutronMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__APINeutronMeasure(struct soap *soap, eml20__APINeutronMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__APINeutronMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__HeatTransferCoefficientMeasure(struct soap*, const char*, int, const eml20__HeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC3 eml20__HeatTransferCoefficientMeasure * SOAP_FMAC4 soap_in_eml20__HeatTransferCoefficientMeasure(struct soap*, const char*, eml20__HeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC1 eml20__HeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__HeatTransferCoefficientMeasure * soap_new_eml20__HeatTransferCoefficientMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__HeatTransferCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__HeatTransferCoefficientMeasure * soap_new_req_eml20__HeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatTransferCoefficientUom uom)
{
	eml20__HeatTransferCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatTransferCoefficientMeasure::__item = __item;
		_p->eml20__HeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml20__HeatTransferCoefficientMeasure * soap_new_set_eml20__HeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml20__HeatTransferCoefficientUom uom)
{
	eml20__HeatTransferCoefficientMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__HeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__HeatTransferCoefficientMeasure::__item = __item;
		_p->eml20__HeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__HeatTransferCoefficientMeasure(struct soap *soap, eml20__HeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure ? "eml20:HeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__HeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__HeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure ? "eml20:HeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__HeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__HeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure ? "eml20:HeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__HeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__HeatTransferCoefficientMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:HeatTransferCoefficientMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure ? "eml20:HeatTransferCoefficientMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__HeatTransferCoefficientMeasure * SOAP_FMAC4 soap_get_eml20__HeatTransferCoefficientMeasure(struct soap*, eml20__HeatTransferCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml20__HeatTransferCoefficientMeasure(struct soap *soap, eml20__HeatTransferCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__HeatTransferCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__HeatTransferCoefficientMeasure(struct soap *soap, const char *URL, eml20__HeatTransferCoefficientMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__HeatTransferCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__HeatTransferCoefficientMeasure(struct soap *soap, eml20__HeatTransferCoefficientMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__HeatTransferCoefficientMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DimensionlessMeasure(struct soap*, const char*, int, const eml20__DimensionlessMeasure *, const char*);
SOAP_FMAC3 eml20__DimensionlessMeasure * SOAP_FMAC4 soap_in_eml20__DimensionlessMeasure(struct soap*, const char*, eml20__DimensionlessMeasure *, const char*);
SOAP_FMAC1 eml20__DimensionlessMeasure * SOAP_FMAC2 soap_instantiate_eml20__DimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DimensionlessMeasure * soap_new_eml20__DimensionlessMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DimensionlessMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__DimensionlessMeasure * soap_new_req_eml20__DimensionlessMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DimensionlessUom uom)
{
	eml20__DimensionlessMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DimensionlessMeasure::__item = __item;
		_p->eml20__DimensionlessMeasure::uom = uom;
	}
	return _p;
}

inline eml20__DimensionlessMeasure * soap_new_set_eml20__DimensionlessMeasure(
	struct soap *soap,
	double __item,
	enum eml20__DimensionlessUom uom)
{
	eml20__DimensionlessMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__DimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DimensionlessMeasure::__item = __item;
		_p->eml20__DimensionlessMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__DimensionlessMeasure(struct soap *soap, eml20__DimensionlessMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DimensionlessMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure ? "eml20:DimensionlessMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DimensionlessMeasure(struct soap *soap, const char *URL, eml20__DimensionlessMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DimensionlessMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure ? "eml20:DimensionlessMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DimensionlessMeasure(struct soap *soap, const char *URL, eml20__DimensionlessMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DimensionlessMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure ? "eml20:DimensionlessMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DimensionlessMeasure(struct soap *soap, const char *URL, eml20__DimensionlessMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DimensionlessMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure ? "eml20:DimensionlessMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DimensionlessMeasure * SOAP_FMAC4 soap_get_eml20__DimensionlessMeasure(struct soap*, eml20__DimensionlessMeasure *, const char*, const char*);

inline int soap_read_eml20__DimensionlessMeasure(struct soap *soap, eml20__DimensionlessMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DimensionlessMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DimensionlessMeasure(struct soap *soap, const char *URL, eml20__DimensionlessMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DimensionlessMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DimensionlessMeasure(struct soap *soap, eml20__DimensionlessMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DimensionlessMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PowerPerPowerMeasure(struct soap*, const char*, int, const eml20__PowerPerPowerMeasure *, const char*);
SOAP_FMAC3 eml20__PowerPerPowerMeasure * SOAP_FMAC4 soap_in_eml20__PowerPerPowerMeasure(struct soap*, const char*, eml20__PowerPerPowerMeasure *, const char*);
SOAP_FMAC1 eml20__PowerPerPowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerPowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PowerPerPowerMeasure * soap_new_eml20__PowerPerPowerMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PowerPerPowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PowerPerPowerMeasure * soap_new_req_eml20__PowerPerPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerPowerUom uom)
{
	eml20__PowerPerPowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerPowerMeasure::__item = __item;
		_p->eml20__PowerPerPowerMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PowerPerPowerMeasure * soap_new_set_eml20__PowerPerPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PowerPerPowerUom uom)
{
	eml20__PowerPerPowerMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PowerPerPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PowerPerPowerMeasure::__item = __item;
		_p->eml20__PowerPerPowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PowerPerPowerMeasure(struct soap *soap, eml20__PowerPerPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure ? "eml20:PowerPerPowerMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PowerPerPowerMeasure(struct soap *soap, const char *URL, eml20__PowerPerPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure ? "eml20:PowerPerPowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PowerPerPowerMeasure(struct soap *soap, const char *URL, eml20__PowerPerPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure ? "eml20:PowerPerPowerMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PowerPerPowerMeasure(struct soap *soap, const char *URL, eml20__PowerPerPowerMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PowerPerPowerMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure ? "eml20:PowerPerPowerMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PowerPerPowerMeasure * SOAP_FMAC4 soap_get_eml20__PowerPerPowerMeasure(struct soap*, eml20__PowerPerPowerMeasure *, const char*, const char*);

inline int soap_read_eml20__PowerPerPowerMeasure(struct soap *soap, eml20__PowerPerPowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PowerPerPowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PowerPerPowerMeasure(struct soap *soap, const char *URL, eml20__PowerPerPowerMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PowerPerPowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PowerPerPowerMeasure(struct soap *soap, eml20__PowerPerPowerMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PowerPerPowerMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__RadiantIntensityMeasure(struct soap*, const char*, int, const eml20__RadiantIntensityMeasure *, const char*);
SOAP_FMAC3 eml20__RadiantIntensityMeasure * SOAP_FMAC4 soap_in_eml20__RadiantIntensityMeasure(struct soap*, const char*, eml20__RadiantIntensityMeasure *, const char*);
SOAP_FMAC1 eml20__RadiantIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__RadiantIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__RadiantIntensityMeasure * soap_new_eml20__RadiantIntensityMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__RadiantIntensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__RadiantIntensityMeasure * soap_new_req_eml20__RadiantIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__RadiantIntensityUom uom)
{
	eml20__RadiantIntensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__RadiantIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__RadiantIntensityMeasure::__item = __item;
		_p->eml20__RadiantIntensityMeasure::uom = uom;
	}
	return _p;
}

inline eml20__RadiantIntensityMeasure * soap_new_set_eml20__RadiantIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml20__RadiantIntensityUom uom)
{
	eml20__RadiantIntensityMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__RadiantIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__RadiantIntensityMeasure::__item = __item;
		_p->eml20__RadiantIntensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__RadiantIntensityMeasure(struct soap *soap, eml20__RadiantIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadiantIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure ? "eml20:RadiantIntensityMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__RadiantIntensityMeasure(struct soap *soap, const char *URL, eml20__RadiantIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadiantIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure ? "eml20:RadiantIntensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__RadiantIntensityMeasure(struct soap *soap, const char *URL, eml20__RadiantIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadiantIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure ? "eml20:RadiantIntensityMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__RadiantIntensityMeasure(struct soap *soap, const char *URL, eml20__RadiantIntensityMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:RadiantIntensityMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure ? "eml20:RadiantIntensityMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__RadiantIntensityMeasure * SOAP_FMAC4 soap_get_eml20__RadiantIntensityMeasure(struct soap*, eml20__RadiantIntensityMeasure *, const char*, const char*);

inline int soap_read_eml20__RadiantIntensityMeasure(struct soap *soap, eml20__RadiantIntensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__RadiantIntensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__RadiantIntensityMeasure(struct soap *soap, const char *URL, eml20__RadiantIntensityMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__RadiantIntensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__RadiantIntensityMeasure(struct soap *soap, eml20__RadiantIntensityMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__RadiantIntensityMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceMeasure(struct soap*, const char*, int, const eml20__ForceMeasure *, const char*);
SOAP_FMAC3 eml20__ForceMeasure * SOAP_FMAC4 soap_in_eml20__ForceMeasure(struct soap*, const char*, eml20__ForceMeasure *, const char*);
SOAP_FMAC1 eml20__ForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForceMeasure * soap_new_eml20__ForceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForceMeasure * soap_new_req_eml20__ForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceUom uom)
{
	eml20__ForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceMeasure::__item = __item;
		_p->eml20__ForceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForceMeasure * soap_new_set_eml20__ForceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceUom uom)
{
	eml20__ForceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceMeasure::__item = __item;
		_p->eml20__ForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForceMeasure(struct soap *soap, eml20__ForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure ? "eml20:ForceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceMeasure(struct soap *soap, const char *URL, eml20__ForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure ? "eml20:ForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceMeasure(struct soap *soap, const char *URL, eml20__ForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure ? "eml20:ForceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceMeasure(struct soap *soap, const char *URL, eml20__ForceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure ? "eml20:ForceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForceMeasure * SOAP_FMAC4 soap_get_eml20__ForceMeasure(struct soap*, eml20__ForceMeasure *, const char*, const char*);

inline int soap_read_eml20__ForceMeasure(struct soap *soap, eml20__ForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceMeasure(struct soap *soap, const char *URL, eml20__ForceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceMeasure(struct soap *soap, eml20__ForceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__IlluminanceMeasure(struct soap*, const char*, int, const eml20__IlluminanceMeasure *, const char*);
SOAP_FMAC3 eml20__IlluminanceMeasure * SOAP_FMAC4 soap_in_eml20__IlluminanceMeasure(struct soap*, const char*, eml20__IlluminanceMeasure *, const char*);
SOAP_FMAC1 eml20__IlluminanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__IlluminanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__IlluminanceMeasure * soap_new_eml20__IlluminanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__IlluminanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__IlluminanceMeasure * soap_new_req_eml20__IlluminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__IlluminanceUom uom)
{
	eml20__IlluminanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__IlluminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__IlluminanceMeasure::__item = __item;
		_p->eml20__IlluminanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__IlluminanceMeasure * soap_new_set_eml20__IlluminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__IlluminanceUom uom)
{
	eml20__IlluminanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__IlluminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__IlluminanceMeasure::__item = __item;
		_p->eml20__IlluminanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__IlluminanceMeasure(struct soap *soap, eml20__IlluminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IlluminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure ? "eml20:IlluminanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__IlluminanceMeasure(struct soap *soap, const char *URL, eml20__IlluminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IlluminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure ? "eml20:IlluminanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__IlluminanceMeasure(struct soap *soap, const char *URL, eml20__IlluminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IlluminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure ? "eml20:IlluminanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__IlluminanceMeasure(struct soap *soap, const char *URL, eml20__IlluminanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:IlluminanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure ? "eml20:IlluminanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__IlluminanceMeasure * SOAP_FMAC4 soap_get_eml20__IlluminanceMeasure(struct soap*, eml20__IlluminanceMeasure *, const char*, const char*);

inline int soap_read_eml20__IlluminanceMeasure(struct soap *soap, eml20__IlluminanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__IlluminanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__IlluminanceMeasure(struct soap *soap, const char *URL, eml20__IlluminanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__IlluminanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__IlluminanceMeasure(struct soap *soap, eml20__IlluminanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__IlluminanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__EnergyMeasure(struct soap*, const char*, int, const eml20__EnergyMeasure *, const char*);
SOAP_FMAC3 eml20__EnergyMeasure * SOAP_FMAC4 soap_in_eml20__EnergyMeasure(struct soap*, const char*, eml20__EnergyMeasure *, const char*);
SOAP_FMAC1 eml20__EnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__EnergyMeasure * soap_new_eml20__EnergyMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__EnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__EnergyMeasure * soap_new_req_eml20__EnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyUom uom)
{
	eml20__EnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyMeasure::__item = __item;
		_p->eml20__EnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml20__EnergyMeasure * soap_new_set_eml20__EnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml20__EnergyUom uom)
{
	eml20__EnergyMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__EnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__EnergyMeasure::__item = __item;
		_p->eml20__EnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__EnergyMeasure(struct soap *soap, eml20__EnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure ? "eml20:EnergyMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__EnergyMeasure(struct soap *soap, const char *URL, eml20__EnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure ? "eml20:EnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__EnergyMeasure(struct soap *soap, const char *URL, eml20__EnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure ? "eml20:EnergyMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__EnergyMeasure(struct soap *soap, const char *URL, eml20__EnergyMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:EnergyMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure ? "eml20:EnergyMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__EnergyMeasure * SOAP_FMAC4 soap_get_eml20__EnergyMeasure(struct soap*, eml20__EnergyMeasure *, const char*, const char*);

inline int soap_read_eml20__EnergyMeasure(struct soap *soap, eml20__EnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__EnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__EnergyMeasure(struct soap *soap, const char *URL, eml20__EnergyMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__EnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__EnergyMeasure(struct soap *soap, eml20__EnergyMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__EnergyMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceAreaMeasure(struct soap*, const char*, int, const eml20__ForceAreaMeasure *, const char*);
SOAP_FMAC3 eml20__ForceAreaMeasure * SOAP_FMAC4 soap_in_eml20__ForceAreaMeasure(struct soap*, const char*, eml20__ForceAreaMeasure *, const char*);
SOAP_FMAC1 eml20__ForceAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForceAreaMeasure * soap_new_eml20__ForceAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForceAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForceAreaMeasure * soap_new_req_eml20__ForceAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceAreaUom uom)
{
	eml20__ForceAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceAreaMeasure::__item = __item;
		_p->eml20__ForceAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForceAreaMeasure * soap_new_set_eml20__ForceAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceAreaUom uom)
{
	eml20__ForceAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceAreaMeasure::__item = __item;
		_p->eml20__ForceAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForceAreaMeasure(struct soap *soap, eml20__ForceAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure ? "eml20:ForceAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceAreaMeasure(struct soap *soap, const char *URL, eml20__ForceAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure ? "eml20:ForceAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceAreaMeasure(struct soap *soap, const char *URL, eml20__ForceAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure ? "eml20:ForceAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceAreaMeasure(struct soap *soap, const char *URL, eml20__ForceAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure ? "eml20:ForceAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForceAreaMeasure * SOAP_FMAC4 soap_get_eml20__ForceAreaMeasure(struct soap*, eml20__ForceAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__ForceAreaMeasure(struct soap *soap, eml20__ForceAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceAreaMeasure(struct soap *soap, const char *URL, eml20__ForceAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceAreaMeasure(struct soap *soap, eml20__ForceAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ThermalInsulanceMeasure(struct soap*, const char*, int, const eml20__ThermalInsulanceMeasure *, const char*);
SOAP_FMAC3 eml20__ThermalInsulanceMeasure * SOAP_FMAC4 soap_in_eml20__ThermalInsulanceMeasure(struct soap*, const char*, eml20__ThermalInsulanceMeasure *, const char*);
SOAP_FMAC1 eml20__ThermalInsulanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalInsulanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ThermalInsulanceMeasure * soap_new_eml20__ThermalInsulanceMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ThermalInsulanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ThermalInsulanceMeasure * soap_new_req_eml20__ThermalInsulanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalInsulanceUom uom)
{
	eml20__ThermalInsulanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalInsulanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalInsulanceMeasure::__item = __item;
		_p->eml20__ThermalInsulanceMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ThermalInsulanceMeasure * soap_new_set_eml20__ThermalInsulanceMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ThermalInsulanceUom uom)
{
	eml20__ThermalInsulanceMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ThermalInsulanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ThermalInsulanceMeasure::__item = __item;
		_p->eml20__ThermalInsulanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ThermalInsulanceMeasure(struct soap *soap, eml20__ThermalInsulanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalInsulanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure ? "eml20:ThermalInsulanceMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ThermalInsulanceMeasure(struct soap *soap, const char *URL, eml20__ThermalInsulanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalInsulanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure ? "eml20:ThermalInsulanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ThermalInsulanceMeasure(struct soap *soap, const char *URL, eml20__ThermalInsulanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalInsulanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure ? "eml20:ThermalInsulanceMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ThermalInsulanceMeasure(struct soap *soap, const char *URL, eml20__ThermalInsulanceMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ThermalInsulanceMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure ? "eml20:ThermalInsulanceMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ThermalInsulanceMeasure * SOAP_FMAC4 soap_get_eml20__ThermalInsulanceMeasure(struct soap*, eml20__ThermalInsulanceMeasure *, const char*, const char*);

inline int soap_read_eml20__ThermalInsulanceMeasure(struct soap *soap, eml20__ThermalInsulanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ThermalInsulanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ThermalInsulanceMeasure(struct soap *soap, const char *URL, eml20__ThermalInsulanceMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ThermalInsulanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ThermalInsulanceMeasure(struct soap *soap, eml20__ThermalInsulanceMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ThermalInsulanceMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PermeabilityLengthMeasure(struct soap*, const char*, int, const eml20__PermeabilityLengthMeasure *, const char*);
SOAP_FMAC3 eml20__PermeabilityLengthMeasure * SOAP_FMAC4 soap_in_eml20__PermeabilityLengthMeasure(struct soap*, const char*, eml20__PermeabilityLengthMeasure *, const char*);
SOAP_FMAC1 eml20__PermeabilityLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermeabilityLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PermeabilityLengthMeasure * soap_new_eml20__PermeabilityLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PermeabilityLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PermeabilityLengthMeasure * soap_new_req_eml20__PermeabilityLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermeabilityLengthUom uom)
{
	eml20__PermeabilityLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermeabilityLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermeabilityLengthMeasure::__item = __item;
		_p->eml20__PermeabilityLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PermeabilityLengthMeasure * soap_new_set_eml20__PermeabilityLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PermeabilityLengthUom uom)
{
	eml20__PermeabilityLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PermeabilityLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PermeabilityLengthMeasure::__item = __item;
		_p->eml20__PermeabilityLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PermeabilityLengthMeasure(struct soap *soap, eml20__PermeabilityLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure ? "eml20:PermeabilityLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PermeabilityLengthMeasure(struct soap *soap, const char *URL, eml20__PermeabilityLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure ? "eml20:PermeabilityLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PermeabilityLengthMeasure(struct soap *soap, const char *URL, eml20__PermeabilityLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure ? "eml20:PermeabilityLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PermeabilityLengthMeasure(struct soap *soap, const char *URL, eml20__PermeabilityLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PermeabilityLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure ? "eml20:PermeabilityLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PermeabilityLengthMeasure * SOAP_FMAC4 soap_get_eml20__PermeabilityLengthMeasure(struct soap*, eml20__PermeabilityLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__PermeabilityLengthMeasure(struct soap *soap, eml20__PermeabilityLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PermeabilityLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PermeabilityLengthMeasure(struct soap *soap, const char *URL, eml20__PermeabilityLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PermeabilityLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PermeabilityLengthMeasure(struct soap *soap, eml20__PermeabilityLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PermeabilityLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerTimeMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerTimeMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerTimeMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerTimeMeasure(struct soap*, const char*, eml20__VolumePerTimePerTimeMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerTimeMeasure * soap_new_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerTimeMeasure * soap_new_req_eml20__VolumePerTimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerTimeUom uom)
{
	eml20__VolumePerTimePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerTimeMeasure::__item = __item;
		_p->eml20__VolumePerTimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerTimeMeasure * soap_new_set_eml20__VolumePerTimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerTimeUom uom)
{
	eml20__VolumePerTimePerTimeMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerTimeMeasure::__item = __item;
		_p->eml20__VolumePerTimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, eml20__VolumePerTimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure ? "eml20:VolumePerTimePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure ? "eml20:VolumePerTimePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure ? "eml20:VolumePerTimePerTimeMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerTimeMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerTimeMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure ? "eml20:VolumePerTimePerTimeMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerTimeMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerTimeMeasure(struct soap*, eml20__VolumePerTimePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, eml20__VolumePerTimePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerTimeMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerTimeMeasure(struct soap *soap, eml20__VolumePerTimePerTimeMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerTimeMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerLengthMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerLengthMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerLengthMeasure(struct soap*, const char*, eml20__VolumePerTimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerLengthMeasure * soap_new_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerLengthMeasure * soap_new_req_eml20__VolumePerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerLengthUom uom)
{
	eml20__VolumePerTimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerLengthMeasure * soap_new_set_eml20__VolumePerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerLengthUom uom)
{
	eml20__VolumePerTimePerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerLengthMeasure::__item = __item;
		_p->eml20__VolumePerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, eml20__VolumePerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure ? "eml20:VolumePerTimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure ? "eml20:VolumePerTimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure ? "eml20:VolumePerTimePerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure ? "eml20:VolumePerTimePerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerLengthMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerLengthMeasure(struct soap*, eml20__VolumePerTimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, eml20__VolumePerTimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerLengthMeasure(struct soap *soap, eml20__VolumePerTimePerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__TemperatureIntervalMeasure(struct soap*, const char*, int, const eml20__TemperatureIntervalMeasure *, const char*);
SOAP_FMAC3 eml20__TemperatureIntervalMeasure * SOAP_FMAC4 soap_in_eml20__TemperatureIntervalMeasure(struct soap*, const char*, eml20__TemperatureIntervalMeasure *, const char*);
SOAP_FMAC1 eml20__TemperatureIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__TemperatureIntervalMeasure * soap_new_eml20__TemperatureIntervalMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__TemperatureIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__TemperatureIntervalMeasure * soap_new_req_eml20__TemperatureIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalUom uom)
{
	eml20__TemperatureIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalMeasure::__item = __item;
		_p->eml20__TemperatureIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml20__TemperatureIntervalMeasure * soap_new_set_eml20__TemperatureIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml20__TemperatureIntervalUom uom)
{
	eml20__TemperatureIntervalMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__TemperatureIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__TemperatureIntervalMeasure::__item = __item;
		_p->eml20__TemperatureIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__TemperatureIntervalMeasure(struct soap *soap, eml20__TemperatureIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure ? "eml20:TemperatureIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__TemperatureIntervalMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure ? "eml20:TemperatureIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__TemperatureIntervalMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure ? "eml20:TemperatureIntervalMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__TemperatureIntervalMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:TemperatureIntervalMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure ? "eml20:TemperatureIntervalMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__TemperatureIntervalMeasure * SOAP_FMAC4 soap_get_eml20__TemperatureIntervalMeasure(struct soap*, eml20__TemperatureIntervalMeasure *, const char*, const char*);

inline int soap_read_eml20__TemperatureIntervalMeasure(struct soap *soap, eml20__TemperatureIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__TemperatureIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__TemperatureIntervalMeasure(struct soap *soap, const char *URL, eml20__TemperatureIntervalMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__TemperatureIntervalMeasure(struct soap *soap, eml20__TemperatureIntervalMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__TemperatureIntervalMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__LengthPerLengthMeasure(struct soap*, const char*, int, const eml20__LengthPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__LengthPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__LengthPerLengthMeasure(struct soap*, const char*, eml20__LengthPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__LengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__LengthPerLengthMeasure * soap_new_eml20__LengthPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__LengthPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__LengthPerLengthMeasure * soap_new_req_eml20__LengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerLengthUom uom)
{
	eml20__LengthPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerLengthMeasure::__item = __item;
		_p->eml20__LengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__LengthPerLengthMeasure * soap_new_set_eml20__LengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__LengthPerLengthUom uom)
{
	eml20__LengthPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__LengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__LengthPerLengthMeasure::__item = __item;
		_p->eml20__LengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__LengthPerLengthMeasure(struct soap *soap, eml20__LengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure ? "eml20:LengthPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__LengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__LengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure ? "eml20:LengthPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__LengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__LengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure ? "eml20:LengthPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__LengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__LengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:LengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure ? "eml20:LengthPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__LengthPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__LengthPerLengthMeasure(struct soap*, eml20__LengthPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__LengthPerLengthMeasure(struct soap *soap, eml20__LengthPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__LengthPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__LengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__LengthPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__LengthPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__LengthPerLengthMeasure(struct soap *soap, eml20__LengthPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__LengthPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VolumePerTimePerAreaMeasure(struct soap*, const char*, int, const eml20__VolumePerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__VolumePerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__VolumePerTimePerAreaMeasure(struct soap*, const char*, eml20__VolumePerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__VolumePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VolumePerTimePerAreaMeasure * soap_new_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VolumePerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__VolumePerTimePerAreaMeasure * soap_new_req_eml20__VolumePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerAreaUom uom)
{
	eml20__VolumePerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerAreaMeasure::__item = __item;
		_p->eml20__VolumePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__VolumePerTimePerAreaMeasure * soap_new_set_eml20__VolumePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__VolumePerTimePerAreaUom uom)
{
	eml20__VolumePerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__VolumePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VolumePerTimePerAreaMeasure::__item = __item;
		_p->eml20__VolumePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, eml20__VolumePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure ? "eml20:VolumePerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure ? "eml20:VolumePerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure ? "eml20:VolumePerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VolumePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure ? "eml20:VolumePerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VolumePerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__VolumePerTimePerAreaMeasure(struct soap*, eml20__VolumePerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, eml20__VolumePerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VolumePerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__VolumePerTimePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VolumePerTimePerAreaMeasure(struct soap *soap, eml20__VolumePerTimePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VolumePerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, const char*, int, const eml20__AmountOfSubstancePerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml20__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, const char*, eml20__AmountOfSubstancePerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml20__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AmountOfSubstancePerTimePerAreaMeasure * soap_new_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__AmountOfSubstancePerTimePerAreaMeasure * soap_new_req_eml20__AmountOfSubstancePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerTimePerAreaUom uom)
{
	eml20__AmountOfSubstancePerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerTimePerAreaMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml20__AmountOfSubstancePerTimePerAreaMeasure * soap_new_set_eml20__AmountOfSubstancePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml20__AmountOfSubstancePerTimePerAreaUom uom)
{
	eml20__AmountOfSubstancePerTimePerAreaMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AmountOfSubstancePerTimePerAreaMeasure::__item = __item;
		_p->eml20__AmountOfSubstancePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure ? "eml20:AmountOfSubstancePerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure ? "eml20:AmountOfSubstancePerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure ? "eml20:AmountOfSubstancePerTimePerAreaMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimePerAreaMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AmountOfSubstancePerTimePerAreaMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure ? "eml20:AmountOfSubstancePerTimePerAreaMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, eml20__AmountOfSubstancePerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, const char *URL, eml20__AmountOfSubstancePerTimePerAreaMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, eml20__AmountOfSubstancePerTimePerAreaMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AmountOfSubstancePerTimePerAreaMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ForceLengthPerLengthMeasure(struct soap*, const char*, int, const eml20__ForceLengthPerLengthMeasure *, const char*);
SOAP_FMAC3 eml20__ForceLengthPerLengthMeasure * SOAP_FMAC4 soap_in_eml20__ForceLengthPerLengthMeasure(struct soap*, const char*, eml20__ForceLengthPerLengthMeasure *, const char*);
SOAP_FMAC1 eml20__ForceLengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceLengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ForceLengthPerLengthMeasure * soap_new_eml20__ForceLengthPerLengthMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ForceLengthPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__ForceLengthPerLengthMeasure * soap_new_req_eml20__ForceLengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceLengthPerLengthUom uom)
{
	eml20__ForceLengthPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceLengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceLengthPerLengthMeasure::__item = __item;
		_p->eml20__ForceLengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml20__ForceLengthPerLengthMeasure * soap_new_set_eml20__ForceLengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml20__ForceLengthPerLengthUom uom)
{
	eml20__ForceLengthPerLengthMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__ForceLengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ForceLengthPerLengthMeasure::__item = __item;
		_p->eml20__ForceLengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__ForceLengthPerLengthMeasure(struct soap *soap, eml20__ForceLengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceLengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure ? "eml20:ForceLengthPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ForceLengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__ForceLengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceLengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure ? "eml20:ForceLengthPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ForceLengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__ForceLengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceLengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure ? "eml20:ForceLengthPerLengthMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ForceLengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__ForceLengthPerLengthMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ForceLengthPerLengthMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure ? "eml20:ForceLengthPerLengthMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ForceLengthPerLengthMeasure * SOAP_FMAC4 soap_get_eml20__ForceLengthPerLengthMeasure(struct soap*, eml20__ForceLengthPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml20__ForceLengthPerLengthMeasure(struct soap *soap, eml20__ForceLengthPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ForceLengthPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ForceLengthPerLengthMeasure(struct soap *soap, const char *URL, eml20__ForceLengthPerLengthMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ForceLengthPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ForceLengthPerLengthMeasure(struct soap *soap, eml20__ForceLengthPerLengthMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ForceLengthPerLengthMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__PressureSquaredMeasure(struct soap*, const char*, int, const eml20__PressureSquaredMeasure *, const char*);
SOAP_FMAC3 eml20__PressureSquaredMeasure * SOAP_FMAC4 soap_in_eml20__PressureSquaredMeasure(struct soap*, const char*, eml20__PressureSquaredMeasure *, const char*);
SOAP_FMAC1 eml20__PressureSquaredMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureSquaredMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml20__PressureSquaredMeasure * soap_new_eml20__PressureSquaredMeasure(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__PressureSquaredMeasure(soap, n, NULL, NULL, NULL);
}

inline eml20__PressureSquaredMeasure * soap_new_req_eml20__PressureSquaredMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureSquaredUom uom)
{
	eml20__PressureSquaredMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureSquaredMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureSquaredMeasure::__item = __item;
		_p->eml20__PressureSquaredMeasure::uom = uom;
	}
	return _p;
}

inline eml20__PressureSquaredMeasure * soap_new_set_eml20__PressureSquaredMeasure(
	struct soap *soap,
	double __item,
	enum eml20__PressureSquaredUom uom)
{
	eml20__PressureSquaredMeasure *_p = gsoap_resqml2_0_1::soap_new_eml20__PressureSquaredMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__PressureSquaredMeasure::__item = __item;
		_p->eml20__PressureSquaredMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml20__PressureSquaredMeasure(struct soap *soap, eml20__PressureSquaredMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure ? "eml20:PressureSquaredMeasure" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__PressureSquaredMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure ? "eml20:PressureSquaredMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__PressureSquaredMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure ? "eml20:PressureSquaredMeasure" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__PressureSquaredMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredMeasure const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:PressureSquaredMeasure", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure ? "eml20:PressureSquaredMeasure" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__PressureSquaredMeasure * SOAP_FMAC4 soap_get_eml20__PressureSquaredMeasure(struct soap*, eml20__PressureSquaredMeasure *, const char*, const char*);

inline int soap_read_eml20__PressureSquaredMeasure(struct soap *soap, eml20__PressureSquaredMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__PressureSquaredMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__PressureSquaredMeasure(struct soap *soap, const char *URL, eml20__PressureSquaredMeasure *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__PressureSquaredMeasure(struct soap *soap, eml20__PressureSquaredMeasure *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__PressureSquaredMeasure(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__DataObjectReference(struct soap*, const char*, int, const eml20__DataObjectReference *, const char*);
SOAP_FMAC3 eml20__DataObjectReference * SOAP_FMAC4 soap_in_eml20__DataObjectReference(struct soap*, const char*, eml20__DataObjectReference *, const char*);
SOAP_FMAC1 eml20__DataObjectReference * SOAP_FMAC2 soap_instantiate_eml20__DataObjectReference(struct soap*, int, const char*, const char*, size_t*);

inline eml20__DataObjectReference * soap_new_eml20__DataObjectReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__DataObjectReference(soap, n, NULL, NULL, NULL);
}

inline eml20__DataObjectReference * soap_new_req_eml20__DataObjectReference(
	struct soap *soap,
	const std::string& ContentType,
	const std::string& Title,
	const std::string& UUID)
{
	eml20__DataObjectReference *_p = gsoap_resqml2_0_1::soap_new_eml20__DataObjectReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DataObjectReference::ContentType = ContentType;
		_p->eml20__DataObjectReference::Title = Title;
		_p->eml20__DataObjectReference::UUID = UUID;
	}
	return _p;
}

inline eml20__DataObjectReference * soap_new_set_eml20__DataObjectReference(
	struct soap *soap,
	const std::string& ContentType,
	const std::string& Title,
	const std::string& UUID,
	std::string *UuidAuthority,
	std::string *VersionString)
{
	eml20__DataObjectReference *_p = gsoap_resqml2_0_1::soap_new_eml20__DataObjectReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DataObjectReference::ContentType = ContentType;
		_p->eml20__DataObjectReference::Title = Title;
		_p->eml20__DataObjectReference::UUID = UUID;
		_p->eml20__DataObjectReference::UuidAuthority = UuidAuthority;
		_p->eml20__DataObjectReference::VersionString = VersionString;
	}
	return _p;
}

inline int soap_write_eml20__DataObjectReference(struct soap *soap, eml20__DataObjectReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataObjectReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference ? "eml20:DataObjectReference" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__DataObjectReference(struct soap *soap, const char *URL, eml20__DataObjectReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataObjectReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference ? "eml20:DataObjectReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__DataObjectReference(struct soap *soap, const char *URL, eml20__DataObjectReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataObjectReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference ? "eml20:DataObjectReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__DataObjectReference(struct soap *soap, const char *URL, eml20__DataObjectReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:DataObjectReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference ? "eml20:DataObjectReference" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__DataObjectReference * SOAP_FMAC4 soap_get_eml20__DataObjectReference(struct soap*, eml20__DataObjectReference *, const char*, const char*);

inline int soap_read_eml20__DataObjectReference(struct soap *soap, eml20__DataObjectReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__DataObjectReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__DataObjectReference(struct soap *soap, const char *URL, eml20__DataObjectReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__DataObjectReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__DataObjectReference(struct soap *soap, eml20__DataObjectReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__DataObjectReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__obj_USCOREEpcExternalPartReference(struct soap*, const char*, int, const eml20__obj_USCOREEpcExternalPartReference *, const char*);
SOAP_FMAC3 eml20__obj_USCOREEpcExternalPartReference * SOAP_FMAC4 soap_in_eml20__obj_USCOREEpcExternalPartReference(struct soap*, const char*, eml20__obj_USCOREEpcExternalPartReference *, const char*);
SOAP_FMAC1 eml20__obj_USCOREEpcExternalPartReference * SOAP_FMAC2 soap_instantiate_eml20__obj_USCOREEpcExternalPartReference(struct soap*, int, const char*, const char*, size_t*);

inline eml20__obj_USCOREEpcExternalPartReference * soap_new_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__obj_USCOREEpcExternalPartReference(soap, n, NULL, NULL, NULL);
}

inline eml20__obj_USCOREEpcExternalPartReference * soap_new_req_eml20__obj_USCOREEpcExternalPartReference(
	struct soap *soap,
	const std::string& MimeType,
	eml20__Citation *Citation__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__obj_USCOREEpcExternalPartReference *_p = gsoap_resqml2_0_1::soap_new_eml20__obj_USCOREEpcExternalPartReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__obj_USCOREEpcExternalPartReference::MimeType = MimeType;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline eml20__obj_USCOREEpcExternalPartReference * soap_new_set_eml20__obj_USCOREEpcExternalPartReference(
	struct soap *soap,
	const std::string& MimeType,
	eml20__Citation *Citation__1,
	const std::vector<eml20__ObjectAlias *> & Aliases__1,
	eml20__CustomData *CustomData__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__obj_USCOREEpcExternalPartReference *_p = gsoap_resqml2_0_1::soap_new_eml20__obj_USCOREEpcExternalPartReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__obj_USCOREEpcExternalPartReference::MimeType = MimeType;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__1;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline int soap_write_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:obj_EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference ? "eml20:obj_EpcExternalPartReference" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:obj_EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference ? "eml20:obj_EpcExternalPartReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:obj_EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference ? "eml20:obj_EpcExternalPartReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:obj_EpcExternalPartReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference ? "eml20:obj_EpcExternalPartReference" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__obj_USCOREEpcExternalPartReference * SOAP_FMAC4 soap_get_eml20__obj_USCOREEpcExternalPartReference(struct soap*, eml20__obj_USCOREEpcExternalPartReference *, const char*, const char*);

inline int soap_read_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, eml20__obj_USCOREEpcExternalPartReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__obj_USCOREEpcExternalPartReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, const char *URL, eml20__obj_USCOREEpcExternalPartReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__obj_USCOREEpcExternalPartReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__obj_USCOREEpcExternalPartReference(struct soap *soap, eml20__obj_USCOREEpcExternalPartReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__obj_USCOREEpcExternalPartReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__Hdf5Dataset(struct soap*, const char*, int, const eml20__Hdf5Dataset *, const char*);
SOAP_FMAC3 eml20__Hdf5Dataset * SOAP_FMAC4 soap_in_eml20__Hdf5Dataset(struct soap*, const char*, eml20__Hdf5Dataset *, const char*);
SOAP_FMAC1 eml20__Hdf5Dataset * SOAP_FMAC2 soap_instantiate_eml20__Hdf5Dataset(struct soap*, int, const char*, const char*, size_t*);

inline eml20__Hdf5Dataset * soap_new_eml20__Hdf5Dataset(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__Hdf5Dataset(soap, n, NULL, NULL, NULL);
}

inline eml20__Hdf5Dataset * soap_new_req_eml20__Hdf5Dataset(
	struct soap *soap,
	const std::string& PathInHdfFile,
	eml20__DataObjectReference *HdfProxy)
{
	eml20__Hdf5Dataset *_p = gsoap_resqml2_0_1::soap_new_eml20__Hdf5Dataset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__Hdf5Dataset::PathInHdfFile = PathInHdfFile;
		_p->eml20__Hdf5Dataset::HdfProxy = HdfProxy;
	}
	return _p;
}

inline eml20__Hdf5Dataset * soap_new_set_eml20__Hdf5Dataset(
	struct soap *soap,
	const std::string& PathInHdfFile,
	eml20__DataObjectReference *HdfProxy)
{
	eml20__Hdf5Dataset *_p = gsoap_resqml2_0_1::soap_new_eml20__Hdf5Dataset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__Hdf5Dataset::PathInHdfFile = PathInHdfFile;
		_p->eml20__Hdf5Dataset::HdfProxy = HdfProxy;
	}
	return _p;
}

inline int soap_write_eml20__Hdf5Dataset(struct soap *soap, eml20__Hdf5Dataset const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Hdf5Dataset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset ? "eml20:Hdf5Dataset" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__Hdf5Dataset(struct soap *soap, const char *URL, eml20__Hdf5Dataset const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Hdf5Dataset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset ? "eml20:Hdf5Dataset" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__Hdf5Dataset(struct soap *soap, const char *URL, eml20__Hdf5Dataset const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Hdf5Dataset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset ? "eml20:Hdf5Dataset" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__Hdf5Dataset(struct soap *soap, const char *URL, eml20__Hdf5Dataset const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Hdf5Dataset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset ? "eml20:Hdf5Dataset" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__Hdf5Dataset * SOAP_FMAC4 soap_get_eml20__Hdf5Dataset(struct soap*, eml20__Hdf5Dataset *, const char*, const char*);

inline int soap_read_eml20__Hdf5Dataset(struct soap *soap, eml20__Hdf5Dataset *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__Hdf5Dataset(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__Hdf5Dataset(struct soap *soap, const char *URL, eml20__Hdf5Dataset *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__Hdf5Dataset(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__Hdf5Dataset(struct soap *soap, eml20__Hdf5Dataset *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__Hdf5Dataset(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ProjectedUnknownCrs(struct soap*, const char*, int, const eml20__ProjectedUnknownCrs *, const char*);
SOAP_FMAC3 eml20__ProjectedUnknownCrs * SOAP_FMAC4 soap_in_eml20__ProjectedUnknownCrs(struct soap*, const char*, eml20__ProjectedUnknownCrs *, const char*);
SOAP_FMAC1 eml20__ProjectedUnknownCrs * SOAP_FMAC2 soap_instantiate_eml20__ProjectedUnknownCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ProjectedUnknownCrs * soap_new_eml20__ProjectedUnknownCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ProjectedUnknownCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__ProjectedUnknownCrs * soap_new_req_eml20__ProjectedUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml20__ProjectedUnknownCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline eml20__ProjectedUnknownCrs * soap_new_set_eml20__ProjectedUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml20__ProjectedUnknownCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline int soap_write_eml20__ProjectedUnknownCrs(struct soap *soap, eml20__ProjectedUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs ? "eml20:ProjectedUnknownCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ProjectedUnknownCrs(struct soap *soap, const char *URL, eml20__ProjectedUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs ? "eml20:ProjectedUnknownCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ProjectedUnknownCrs(struct soap *soap, const char *URL, eml20__ProjectedUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs ? "eml20:ProjectedUnknownCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ProjectedUnknownCrs(struct soap *soap, const char *URL, eml20__ProjectedUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs ? "eml20:ProjectedUnknownCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ProjectedUnknownCrs * SOAP_FMAC4 soap_get_eml20__ProjectedUnknownCrs(struct soap*, eml20__ProjectedUnknownCrs *, const char*, const char*);

inline int soap_read_eml20__ProjectedUnknownCrs(struct soap *soap, eml20__ProjectedUnknownCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ProjectedUnknownCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ProjectedUnknownCrs(struct soap *soap, const char *URL, eml20__ProjectedUnknownCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ProjectedUnknownCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ProjectedUnknownCrs(struct soap *soap, eml20__ProjectedUnknownCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ProjectedUnknownCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ProjectedCrsEpsgCode(struct soap*, const char*, int, const eml20__ProjectedCrsEpsgCode *, const char*);
SOAP_FMAC3 eml20__ProjectedCrsEpsgCode * SOAP_FMAC4 soap_in_eml20__ProjectedCrsEpsgCode(struct soap*, const char*, eml20__ProjectedCrsEpsgCode *, const char*);
SOAP_FMAC1 eml20__ProjectedCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml20__ProjectedCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ProjectedCrsEpsgCode * soap_new_eml20__ProjectedCrsEpsgCode(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ProjectedCrsEpsgCode(soap, n, NULL, NULL, NULL);
}

inline eml20__ProjectedCrsEpsgCode * soap_new_req_eml20__ProjectedCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml20__ProjectedCrsEpsgCode *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline eml20__ProjectedCrsEpsgCode * soap_new_set_eml20__ProjectedCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml20__ProjectedCrsEpsgCode *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline int soap_write_eml20__ProjectedCrsEpsgCode(struct soap *soap, eml20__ProjectedCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode ? "eml20:ProjectedCrsEpsgCode" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ProjectedCrsEpsgCode(struct soap *soap, const char *URL, eml20__ProjectedCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode ? "eml20:ProjectedCrsEpsgCode" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ProjectedCrsEpsgCode(struct soap *soap, const char *URL, eml20__ProjectedCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode ? "eml20:ProjectedCrsEpsgCode" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ProjectedCrsEpsgCode(struct soap *soap, const char *URL, eml20__ProjectedCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode ? "eml20:ProjectedCrsEpsgCode" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ProjectedCrsEpsgCode * SOAP_FMAC4 soap_get_eml20__ProjectedCrsEpsgCode(struct soap*, eml20__ProjectedCrsEpsgCode *, const char*, const char*);

inline int soap_read_eml20__ProjectedCrsEpsgCode(struct soap *soap, eml20__ProjectedCrsEpsgCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ProjectedCrsEpsgCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ProjectedCrsEpsgCode(struct soap *soap, const char *URL, eml20__ProjectedCrsEpsgCode *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ProjectedCrsEpsgCode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ProjectedCrsEpsgCode(struct soap *soap, eml20__ProjectedCrsEpsgCode *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ProjectedCrsEpsgCode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbstractProjectedCrs(struct soap*, const char*, int, const eml20__AbstractProjectedCrs *, const char*);
SOAP_FMAC3 eml20__AbstractProjectedCrs * SOAP_FMAC4 soap_in_eml20__AbstractProjectedCrs(struct soap*, const char*, eml20__AbstractProjectedCrs *, const char*);
SOAP_FMAC1 eml20__AbstractProjectedCrs * SOAP_FMAC2 soap_instantiate_eml20__AbstractProjectedCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AbstractProjectedCrs * soap_new_eml20__AbstractProjectedCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AbstractProjectedCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__AbstractProjectedCrs * soap_new_req_eml20__AbstractProjectedCrs(
	struct soap *soap)
{
	eml20__AbstractProjectedCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml20__AbstractProjectedCrs * soap_new_set_eml20__AbstractProjectedCrs(
	struct soap *soap)
{
	eml20__AbstractProjectedCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_eml20__AbstractProjectedCrs(struct soap *soap, eml20__AbstractProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs ? "eml20:AbstractProjectedCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbstractProjectedCrs(struct soap *soap, const char *URL, eml20__AbstractProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs ? "eml20:AbstractProjectedCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbstractProjectedCrs(struct soap *soap, const char *URL, eml20__AbstractProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs ? "eml20:AbstractProjectedCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbstractProjectedCrs(struct soap *soap, const char *URL, eml20__AbstractProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs ? "eml20:AbstractProjectedCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AbstractProjectedCrs * SOAP_FMAC4 soap_get_eml20__AbstractProjectedCrs(struct soap*, eml20__AbstractProjectedCrs *, const char*, const char*);

inline int soap_read_eml20__AbstractProjectedCrs(struct soap *soap, eml20__AbstractProjectedCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbstractProjectedCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbstractProjectedCrs(struct soap *soap, const char *URL, eml20__AbstractProjectedCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbstractProjectedCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbstractProjectedCrs(struct soap *soap, eml20__AbstractProjectedCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbstractProjectedCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbstractVerticalCrs(struct soap*, const char*, int, const eml20__AbstractVerticalCrs *, const char*);
SOAP_FMAC3 eml20__AbstractVerticalCrs * SOAP_FMAC4 soap_in_eml20__AbstractVerticalCrs(struct soap*, const char*, eml20__AbstractVerticalCrs *, const char*);
SOAP_FMAC1 eml20__AbstractVerticalCrs * SOAP_FMAC2 soap_instantiate_eml20__AbstractVerticalCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AbstractVerticalCrs * soap_new_eml20__AbstractVerticalCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AbstractVerticalCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__AbstractVerticalCrs * soap_new_req_eml20__AbstractVerticalCrs(
	struct soap *soap)
{
	eml20__AbstractVerticalCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractVerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml20__AbstractVerticalCrs * soap_new_set_eml20__AbstractVerticalCrs(
	struct soap *soap)
{
	eml20__AbstractVerticalCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractVerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_eml20__AbstractVerticalCrs(struct soap *soap, eml20__AbstractVerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractVerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs ? "eml20:AbstractVerticalCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbstractVerticalCrs(struct soap *soap, const char *URL, eml20__AbstractVerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractVerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs ? "eml20:AbstractVerticalCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbstractVerticalCrs(struct soap *soap, const char *URL, eml20__AbstractVerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractVerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs ? "eml20:AbstractVerticalCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbstractVerticalCrs(struct soap *soap, const char *URL, eml20__AbstractVerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractVerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs ? "eml20:AbstractVerticalCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AbstractVerticalCrs * SOAP_FMAC4 soap_get_eml20__AbstractVerticalCrs(struct soap*, eml20__AbstractVerticalCrs *, const char*, const char*);

inline int soap_read_eml20__AbstractVerticalCrs(struct soap *soap, eml20__AbstractVerticalCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbstractVerticalCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbstractVerticalCrs(struct soap *soap, const char *URL, eml20__AbstractVerticalCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbstractVerticalCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbstractVerticalCrs(struct soap *soap, eml20__AbstractVerticalCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbstractVerticalCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VerticalCrs(struct soap*, const char*, int, const eml20__VerticalCrs *, const char*);
SOAP_FMAC3 eml20__VerticalCrs * SOAP_FMAC4 soap_in_eml20__VerticalCrs(struct soap*, const char*, eml20__VerticalCrs *, const char*);
SOAP_FMAC1 eml20__VerticalCrs * SOAP_FMAC2 soap_instantiate_eml20__VerticalCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VerticalCrs * soap_new_eml20__VerticalCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VerticalCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__VerticalCrs * soap_new_req_eml20__VerticalCrs(
	struct soap *soap,
	enum eml20__VerticalDirection Direction,
	eml20__AbstractVerticalCrs *AbstractVerticalCrs,
	enum eml20__LengthUom uom,
	eml20__Citation *Citation__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__VerticalCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalCrs::Direction = Direction;
		_p->eml20__VerticalCrs::AbstractVerticalCrs = AbstractVerticalCrs;
		_p->eml20__VerticalCrs::uom = uom;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline eml20__VerticalCrs * soap_new_set_eml20__VerticalCrs(
	struct soap *soap,
	enum eml20__VerticalDirection Direction,
	eml20__AbstractVerticalCrs *AbstractVerticalCrs,
	enum eml20__LengthUom uom,
	eml20__Citation *Citation__1,
	const std::vector<eml20__ObjectAlias *> & Aliases__1,
	eml20__CustomData *CustomData__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__VerticalCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalCrs::Direction = Direction;
		_p->eml20__VerticalCrs::AbstractVerticalCrs = AbstractVerticalCrs;
		_p->eml20__VerticalCrs::uom = uom;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__1;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline int soap_write_eml20__VerticalCrs(struct soap *soap, eml20__VerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs ? "eml20:VerticalCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VerticalCrs(struct soap *soap, const char *URL, eml20__VerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs ? "eml20:VerticalCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VerticalCrs(struct soap *soap, const char *URL, eml20__VerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs ? "eml20:VerticalCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VerticalCrs(struct soap *soap, const char *URL, eml20__VerticalCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs ? "eml20:VerticalCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VerticalCrs * SOAP_FMAC4 soap_get_eml20__VerticalCrs(struct soap*, eml20__VerticalCrs *, const char*, const char*);

inline int soap_read_eml20__VerticalCrs(struct soap *soap, eml20__VerticalCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VerticalCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VerticalCrs(struct soap *soap, const char *URL, eml20__VerticalCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VerticalCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VerticalCrs(struct soap *soap, eml20__VerticalCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VerticalCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ProjectedCrs(struct soap*, const char*, int, const eml20__ProjectedCrs *, const char*);
SOAP_FMAC3 eml20__ProjectedCrs * SOAP_FMAC4 soap_in_eml20__ProjectedCrs(struct soap*, const char*, eml20__ProjectedCrs *, const char*);
SOAP_FMAC1 eml20__ProjectedCrs * SOAP_FMAC2 soap_instantiate_eml20__ProjectedCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ProjectedCrs * soap_new_eml20__ProjectedCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ProjectedCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__ProjectedCrs * soap_new_req_eml20__ProjectedCrs(
	struct soap *soap,
	enum eml20__AxisOrder2d AxisOrder,
	eml20__AbstractProjectedCrs *AbstractProjectedCrs,
	eml20__Citation *Citation__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__ProjectedCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedCrs::AxisOrder = AxisOrder;
		_p->eml20__ProjectedCrs::AbstractProjectedCrs = AbstractProjectedCrs;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline eml20__ProjectedCrs * soap_new_set_eml20__ProjectedCrs(
	struct soap *soap,
	enum eml20__AxisOrder2d AxisOrder,
	eml20__AbstractProjectedCrs *AbstractProjectedCrs,
	enum eml20__LengthUom *uom,
	eml20__Citation *Citation__1,
	const std::vector<eml20__ObjectAlias *> & Aliases__1,
	eml20__CustomData *CustomData__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	eml20__ProjectedCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__ProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ProjectedCrs::AxisOrder = AxisOrder;
		_p->eml20__ProjectedCrs::AbstractProjectedCrs = AbstractProjectedCrs;
		_p->eml20__ProjectedCrs::uom = uom;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__1;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline int soap_write_eml20__ProjectedCrs(struct soap *soap, eml20__ProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs ? "eml20:ProjectedCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ProjectedCrs(struct soap *soap, const char *URL, eml20__ProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs ? "eml20:ProjectedCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ProjectedCrs(struct soap *soap, const char *URL, eml20__ProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs ? "eml20:ProjectedCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ProjectedCrs(struct soap *soap, const char *URL, eml20__ProjectedCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ProjectedCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs ? "eml20:ProjectedCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ProjectedCrs * SOAP_FMAC4 soap_get_eml20__ProjectedCrs(struct soap*, eml20__ProjectedCrs *, const char*, const char*);

inline int soap_read_eml20__ProjectedCrs(struct soap *soap, eml20__ProjectedCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ProjectedCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ProjectedCrs(struct soap *soap, const char *URL, eml20__ProjectedCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ProjectedCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ProjectedCrs(struct soap *soap, eml20__ProjectedCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ProjectedCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VerticalUnknownCrs(struct soap*, const char*, int, const eml20__VerticalUnknownCrs *, const char*);
SOAP_FMAC3 eml20__VerticalUnknownCrs * SOAP_FMAC4 soap_in_eml20__VerticalUnknownCrs(struct soap*, const char*, eml20__VerticalUnknownCrs *, const char*);
SOAP_FMAC1 eml20__VerticalUnknownCrs * SOAP_FMAC2 soap_instantiate_eml20__VerticalUnknownCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VerticalUnknownCrs * soap_new_eml20__VerticalUnknownCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VerticalUnknownCrs(soap, n, NULL, NULL, NULL);
}

inline eml20__VerticalUnknownCrs * soap_new_req_eml20__VerticalUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml20__VerticalUnknownCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline eml20__VerticalUnknownCrs * soap_new_set_eml20__VerticalUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml20__VerticalUnknownCrs *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline int soap_write_eml20__VerticalUnknownCrs(struct soap *soap, eml20__VerticalUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs ? "eml20:VerticalUnknownCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VerticalUnknownCrs(struct soap *soap, const char *URL, eml20__VerticalUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs ? "eml20:VerticalUnknownCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VerticalUnknownCrs(struct soap *soap, const char *URL, eml20__VerticalUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs ? "eml20:VerticalUnknownCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VerticalUnknownCrs(struct soap *soap, const char *URL, eml20__VerticalUnknownCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalUnknownCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs ? "eml20:VerticalUnknownCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VerticalUnknownCrs * SOAP_FMAC4 soap_get_eml20__VerticalUnknownCrs(struct soap*, eml20__VerticalUnknownCrs *, const char*, const char*);

inline int soap_read_eml20__VerticalUnknownCrs(struct soap *soap, eml20__VerticalUnknownCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VerticalUnknownCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VerticalUnknownCrs(struct soap *soap, const char *URL, eml20__VerticalUnknownCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VerticalUnknownCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VerticalUnknownCrs(struct soap *soap, eml20__VerticalUnknownCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VerticalUnknownCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__VerticalCrsEpsgCode(struct soap*, const char*, int, const eml20__VerticalCrsEpsgCode *, const char*);
SOAP_FMAC3 eml20__VerticalCrsEpsgCode * SOAP_FMAC4 soap_in_eml20__VerticalCrsEpsgCode(struct soap*, const char*, eml20__VerticalCrsEpsgCode *, const char*);
SOAP_FMAC1 eml20__VerticalCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml20__VerticalCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);

inline eml20__VerticalCrsEpsgCode * soap_new_eml20__VerticalCrsEpsgCode(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__VerticalCrsEpsgCode(soap, n, NULL, NULL, NULL);
}

inline eml20__VerticalCrsEpsgCode * soap_new_req_eml20__VerticalCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml20__VerticalCrsEpsgCode *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline eml20__VerticalCrsEpsgCode * soap_new_set_eml20__VerticalCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml20__VerticalCrsEpsgCode *_p = gsoap_resqml2_0_1::soap_new_eml20__VerticalCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__VerticalCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline int soap_write_eml20__VerticalCrsEpsgCode(struct soap *soap, eml20__VerticalCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode ? "eml20:VerticalCrsEpsgCode" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__VerticalCrsEpsgCode(struct soap *soap, const char *URL, eml20__VerticalCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode ? "eml20:VerticalCrsEpsgCode" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__VerticalCrsEpsgCode(struct soap *soap, const char *URL, eml20__VerticalCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode ? "eml20:VerticalCrsEpsgCode" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__VerticalCrsEpsgCode(struct soap *soap, const char *URL, eml20__VerticalCrsEpsgCode const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:VerticalCrsEpsgCode", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode ? "eml20:VerticalCrsEpsgCode" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__VerticalCrsEpsgCode * SOAP_FMAC4 soap_get_eml20__VerticalCrsEpsgCode(struct soap*, eml20__VerticalCrsEpsgCode *, const char*, const char*);

inline int soap_read_eml20__VerticalCrsEpsgCode(struct soap *soap, eml20__VerticalCrsEpsgCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__VerticalCrsEpsgCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__VerticalCrsEpsgCode(struct soap *soap, const char *URL, eml20__VerticalCrsEpsgCode *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__VerticalCrsEpsgCode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__VerticalCrsEpsgCode(struct soap *soap, eml20__VerticalCrsEpsgCode *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__VerticalCrsEpsgCode(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__ObjectAlias(struct soap*, const char*, int, const eml20__ObjectAlias *, const char*);
SOAP_FMAC3 eml20__ObjectAlias * SOAP_FMAC4 soap_in_eml20__ObjectAlias(struct soap*, const char*, eml20__ObjectAlias *, const char*);
SOAP_FMAC1 eml20__ObjectAlias * SOAP_FMAC2 soap_instantiate_eml20__ObjectAlias(struct soap*, int, const char*, const char*, size_t*);

inline eml20__ObjectAlias * soap_new_eml20__ObjectAlias(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__ObjectAlias(soap, n, NULL, NULL, NULL);
}

inline eml20__ObjectAlias * soap_new_req_eml20__ObjectAlias(
	struct soap *soap,
	const std::string& Identifier)
{
	eml20__ObjectAlias *_p = gsoap_resqml2_0_1::soap_new_eml20__ObjectAlias(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ObjectAlias::Identifier = Identifier;
	}
	return _p;
}

inline eml20__ObjectAlias * soap_new_set_eml20__ObjectAlias(
	struct soap *soap,
	const std::string& Identifier,
	std::string *Description,
	std::string *authority)
{
	eml20__ObjectAlias *_p = gsoap_resqml2_0_1::soap_new_eml20__ObjectAlias(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__ObjectAlias::Identifier = Identifier;
		_p->eml20__ObjectAlias::Description = Description;
		_p->eml20__ObjectAlias::authority = authority;
	}
	return _p;
}

inline int soap_write_eml20__ObjectAlias(struct soap *soap, eml20__ObjectAlias const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ObjectAlias", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias ? "eml20:ObjectAlias" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__ObjectAlias(struct soap *soap, const char *URL, eml20__ObjectAlias const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ObjectAlias", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias ? "eml20:ObjectAlias" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__ObjectAlias(struct soap *soap, const char *URL, eml20__ObjectAlias const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ObjectAlias", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias ? "eml20:ObjectAlias" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__ObjectAlias(struct soap *soap, const char *URL, eml20__ObjectAlias const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:ObjectAlias", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias ? "eml20:ObjectAlias" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__ObjectAlias * SOAP_FMAC4 soap_get_eml20__ObjectAlias(struct soap*, eml20__ObjectAlias *, const char*, const char*);

inline int soap_read_eml20__ObjectAlias(struct soap *soap, eml20__ObjectAlias *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__ObjectAlias(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__ObjectAlias(struct soap *soap, const char *URL, eml20__ObjectAlias *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__ObjectAlias(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__ObjectAlias(struct soap *soap, eml20__ObjectAlias *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__ObjectAlias(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbstractObject(struct soap*, const char*, int, const eml20__AbstractObject *, const char*);
SOAP_FMAC3 eml20__AbstractObject * SOAP_FMAC4 soap_in_eml20__AbstractObject(struct soap*, const char*, eml20__AbstractObject *, const char*);
SOAP_FMAC1 eml20__AbstractObject * SOAP_FMAC2 soap_instantiate_eml20__AbstractObject(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AbstractObject * soap_new_eml20__AbstractObject(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AbstractObject(soap, n, NULL, NULL, NULL);
}

inline eml20__AbstractObject * soap_new_req_eml20__AbstractObject(
	struct soap *soap,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml20__AbstractObject *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractObject::schemaVersion = schemaVersion;
		_p->eml20__AbstractObject::uuid = uuid;
	}
	return _p;
}

inline eml20__AbstractObject * soap_new_set_eml20__AbstractObject(
	struct soap *soap,
	eml20__Citation *Citation,
	const std::vector<eml20__ObjectAlias *> & Aliases,
	eml20__CustomData *CustomData,
	const std::string& schemaVersion,
	const std::string& uuid,
	std::string *objectVersion)
{
	eml20__AbstractObject *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractObject::Citation = Citation;
		_p->eml20__AbstractObject::Aliases = Aliases;
		_p->eml20__AbstractObject::CustomData = CustomData;
		_p->eml20__AbstractObject::schemaVersion = schemaVersion;
		_p->eml20__AbstractObject::uuid = uuid;
		_p->eml20__AbstractObject::objectVersion = objectVersion;
	}
	return _p;
}

inline int soap_write_eml20__AbstractObject(struct soap *soap, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject ? "eml20:AbstractObject" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbstractObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject ? "eml20:AbstractObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbstractObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject ? "eml20:AbstractObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbstractObject(struct soap *soap, const char *URL, eml20__AbstractObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject ? "eml20:AbstractObject" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AbstractObject * SOAP_FMAC4 soap_get_eml20__AbstractObject(struct soap*, eml20__AbstractObject *, const char*, const char*);

inline int soap_read_eml20__AbstractObject(struct soap *soap, eml20__AbstractObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbstractObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbstractObject(struct soap *soap, const char *URL, eml20__AbstractObject *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbstractObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbstractObject(struct soap *soap, eml20__AbstractObject *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbstractObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__Citation(struct soap*, const char*, int, const eml20__Citation *, const char*);
SOAP_FMAC3 eml20__Citation * SOAP_FMAC4 soap_in_eml20__Citation(struct soap*, const char*, eml20__Citation *, const char*);
SOAP_FMAC1 eml20__Citation * SOAP_FMAC2 soap_instantiate_eml20__Citation(struct soap*, int, const char*, const char*, size_t*);

inline eml20__Citation * soap_new_eml20__Citation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__Citation(soap, n, NULL, NULL, NULL);
}

inline eml20__Citation * soap_new_req_eml20__Citation(
	struct soap *soap,
	const std::string& Title,
	const std::string& Originator,
	const struct tm& Creation,
	const std::string& Format)
{
	eml20__Citation *_p = gsoap_resqml2_0_1::soap_new_eml20__Citation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__Citation::Title = Title;
		_p->eml20__Citation::Originator = Originator;
		_p->eml20__Citation::Creation = Creation;
		_p->eml20__Citation::Format = Format;
	}
	return _p;
}

inline eml20__Citation * soap_new_set_eml20__Citation(
	struct soap *soap,
	const std::string& Title,
	const std::string& Originator,
	const struct tm& Creation,
	const std::string& Format,
	std::string *Editor,
	struct tm *LastUpdate,
	std::string *VersionString,
	std::string *Description,
	std::string *DescriptiveKeywords)
{
	eml20__Citation *_p = gsoap_resqml2_0_1::soap_new_eml20__Citation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__Citation::Title = Title;
		_p->eml20__Citation::Originator = Originator;
		_p->eml20__Citation::Creation = Creation;
		_p->eml20__Citation::Format = Format;
		_p->eml20__Citation::Editor = Editor;
		_p->eml20__Citation::LastUpdate = LastUpdate;
		_p->eml20__Citation::VersionString = VersionString;
		_p->eml20__Citation::Description = Description;
		_p->eml20__Citation::DescriptiveKeywords = DescriptiveKeywords;
	}
	return _p;
}

inline int soap_write_eml20__Citation(struct soap *soap, eml20__Citation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Citation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation ? "eml20:Citation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__Citation(struct soap *soap, const char *URL, eml20__Citation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Citation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation ? "eml20:Citation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__Citation(struct soap *soap, const char *URL, eml20__Citation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Citation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation ? "eml20:Citation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__Citation(struct soap *soap, const char *URL, eml20__Citation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:Citation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation ? "eml20:Citation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__Citation * SOAP_FMAC4 soap_get_eml20__Citation(struct soap*, eml20__Citation *, const char*, const char*);

inline int soap_read_eml20__Citation(struct soap *soap, eml20__Citation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__Citation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__Citation(struct soap *soap, const char *URL, eml20__Citation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__Citation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__Citation(struct soap *soap, eml20__Citation *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__Citation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__CustomData(struct soap*, const char*, int, const eml20__CustomData *, const char*);
SOAP_FMAC3 eml20__CustomData * SOAP_FMAC4 soap_in_eml20__CustomData(struct soap*, const char*, eml20__CustomData *, const char*);
SOAP_FMAC1 eml20__CustomData * SOAP_FMAC2 soap_instantiate_eml20__CustomData(struct soap*, int, const char*, const char*, size_t*);

inline eml20__CustomData * soap_new_eml20__CustomData(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__CustomData(soap, n, NULL, NULL, NULL);
}

inline eml20__CustomData * soap_new_req_eml20__CustomData(
	struct soap *soap)
{
	eml20__CustomData *_p = gsoap_resqml2_0_1::soap_new_eml20__CustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml20__CustomData * soap_new_set_eml20__CustomData(
	struct soap *soap,
	const std::vector<char *> & __any)
{
	eml20__CustomData *_p = gsoap_resqml2_0_1::soap_new_eml20__CustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__CustomData::__any = __any;
	}
	return _p;
}

inline int soap_write_eml20__CustomData(struct soap *soap, eml20__CustomData const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CustomData", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData ? "eml20:CustomData" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__CustomData(struct soap *soap, const char *URL, eml20__CustomData const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CustomData", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData ? "eml20:CustomData" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__CustomData(struct soap *soap, const char *URL, eml20__CustomData const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CustomData", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData ? "eml20:CustomData" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__CustomData(struct soap *soap, const char *URL, eml20__CustomData const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:CustomData", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData ? "eml20:CustomData" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__CustomData * SOAP_FMAC4 soap_get_eml20__CustomData(struct soap*, eml20__CustomData *, const char*, const char*);

inline int soap_read_eml20__CustomData(struct soap *soap, eml20__CustomData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__CustomData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__CustomData(struct soap *soap, const char *URL, eml20__CustomData *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__CustomData(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__CustomData(struct soap *soap, eml20__CustomData *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__CustomData(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml20__AbstractCitedDataObject(struct soap*, const char*, int, const eml20__AbstractCitedDataObject *, const char*);
SOAP_FMAC3 eml20__AbstractCitedDataObject * SOAP_FMAC4 soap_in_eml20__AbstractCitedDataObject(struct soap*, const char*, eml20__AbstractCitedDataObject *, const char*);
SOAP_FMAC1 eml20__AbstractCitedDataObject * SOAP_FMAC2 soap_instantiate_eml20__AbstractCitedDataObject(struct soap*, int, const char*, const char*, size_t*);

inline eml20__AbstractCitedDataObject * soap_new_eml20__AbstractCitedDataObject(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_eml20__AbstractCitedDataObject(soap, n, NULL, NULL, NULL);
}

inline eml20__AbstractCitedDataObject * soap_new_req_eml20__AbstractCitedDataObject(
	struct soap *soap,
	eml20__Citation *Citation,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml20__AbstractCitedDataObject *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractCitedDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion;
		_p->eml20__AbstractCitedDataObject::uuid = uuid;
	}
	return _p;
}

inline eml20__AbstractCitedDataObject * soap_new_set_eml20__AbstractCitedDataObject(
	struct soap *soap,
	eml20__Citation *Citation,
	const std::vector<eml20__ObjectAlias *> & Aliases,
	eml20__CustomData *CustomData,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml20__AbstractCitedDataObject *_p = gsoap_resqml2_0_1::soap_new_eml20__AbstractCitedDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion;
		_p->eml20__AbstractCitedDataObject::uuid = uuid;
	}
	return _p;
}

inline int soap_write_eml20__AbstractCitedDataObject(struct soap *soap, eml20__AbstractCitedDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractCitedDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject ? "eml20:AbstractCitedDataObject" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_eml20__AbstractCitedDataObject(struct soap *soap, const char *URL, eml20__AbstractCitedDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractCitedDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject ? "eml20:AbstractCitedDataObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_eml20__AbstractCitedDataObject(struct soap *soap, const char *URL, eml20__AbstractCitedDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractCitedDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject ? "eml20:AbstractCitedDataObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_eml20__AbstractCitedDataObject(struct soap *soap, const char *URL, eml20__AbstractCitedDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml20:AbstractCitedDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject ? "eml20:AbstractCitedDataObject" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 eml20__AbstractCitedDataObject * SOAP_FMAC4 soap_get_eml20__AbstractCitedDataObject(struct soap*, eml20__AbstractCitedDataObject *, const char*, const char*);

inline int soap_read_eml20__AbstractCitedDataObject(struct soap *soap, eml20__AbstractCitedDataObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_eml20__AbstractCitedDataObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_eml20__AbstractCitedDataObject(struct soap *soap, const char *URL, eml20__AbstractCitedDataObject *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_eml20__AbstractCitedDataObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_eml20__AbstractCitedDataObject(struct soap *soap, eml20__AbstractCitedDataObject *p)
{
	if (gsoap_resqml2_0_1::soap_read_eml20__AbstractCitedDataObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, const char*, int, const resqml20__obj_USCOREDiscretePropertySeries *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREDiscretePropertySeries * SOAP_FMAC4 soap_in_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, const char*, resqml20__obj_USCOREDiscretePropertySeries *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREDiscretePropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREDiscretePropertySeries * soap_new_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREDiscretePropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREDiscretePropertySeries * soap_new_req_resqml20__obj_USCOREDiscretePropertySeries(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREDiscretePropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDiscretePropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREDiscretePropertySeries * soap_new_set_resqml20__obj_USCOREDiscretePropertySeries(
	struct soap *soap,
	resqml20__AbstractIntegerArray *RealizationIndices,
	resqml20__TimeIndices *SeriesTimeIndices,
	const std::vector<LONG64> & MinimumValue__1,
	const std::vector<LONG64> & MaximumValue__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	ULONG64 *RealizationIndex__3,
	ULONG64 *TimeStep__3,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	eml20__DataObjectReference *LocalCrs__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREDiscretePropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDiscretePropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDiscretePropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml20__obj_USCOREDiscretePropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml20__obj_USCOREDiscreteProperty::MinimumValue = MinimumValue__1;
		_p->resqml20__obj_USCOREDiscreteProperty::MaximumValue = MaximumValue__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__3;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__3;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries ? "resqml20:obj_DiscretePropertySeries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries ? "resqml20:obj_DiscretePropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries ? "resqml20:obj_DiscretePropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscretePropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries ? "resqml20:obj_DiscretePropertySeries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREDiscretePropertySeries * SOAP_FMAC4 soap_get_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, resqml20__obj_USCOREDiscretePropertySeries *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, resqml20__obj_USCOREDiscretePropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREDiscretePropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscretePropertySeries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDiscretePropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREDiscretePropertySeries(struct soap *soap, resqml20__obj_USCOREDiscretePropertySeries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDiscretePropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORECommentPropertySeries(struct soap*, const char*, int, const resqml20__obj_USCORECommentPropertySeries *, const char*);
SOAP_FMAC3 resqml20__obj_USCORECommentPropertySeries * SOAP_FMAC4 soap_in_resqml20__obj_USCORECommentPropertySeries(struct soap*, const char*, resqml20__obj_USCORECommentPropertySeries *, const char*);
SOAP_FMAC1 resqml20__obj_USCORECommentPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECommentPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORECommentPropertySeries * soap_new_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORECommentPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORECommentPropertySeries * soap_new_req_resqml20__obj_USCORECommentPropertySeries(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORECommentPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECommentPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORECommentPropertySeries * soap_new_set_resqml20__obj_USCORECommentPropertySeries(
	struct soap *soap,
	resqml20__AbstractIntegerArray *RealizationIndices,
	resqml20__TimeIndices *SeriesTimeIndices,
	std::string *Language__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	ULONG64 *RealizationIndex__3,
	ULONG64 *TimeStep__3,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	eml20__DataObjectReference *LocalCrs__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORECommentPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECommentPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECommentPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml20__obj_USCORECommentPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml20__obj_USCORECommentProperty::Language = Language__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__3;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__3;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries ? "resqml20:obj_CommentPropertySeries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries ? "resqml20:obj_CommentPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries ? "resqml20:obj_CommentPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries ? "resqml20:obj_CommentPropertySeries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORECommentPropertySeries * SOAP_FMAC4 soap_get_resqml20__obj_USCORECommentPropertySeries(struct soap*, resqml20__obj_USCORECommentPropertySeries *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, resqml20__obj_USCORECommentPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORECommentPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECommentPropertySeries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECommentPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORECommentPropertySeries(struct soap *soap, resqml20__obj_USCORECommentPropertySeries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECommentPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, const char*, int, const resqml20__obj_USCORECategoricalPropertySeries *, const char*);
SOAP_FMAC3 resqml20__obj_USCORECategoricalPropertySeries * SOAP_FMAC4 soap_in_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, const char*, resqml20__obj_USCORECategoricalPropertySeries *, const char*);
SOAP_FMAC1 resqml20__obj_USCORECategoricalPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORECategoricalPropertySeries * soap_new_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORECategoricalPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORECategoricalPropertySeries * soap_new_req_resqml20__obj_USCORECategoricalPropertySeries(
	struct soap *soap,
	eml20__DataObjectReference *Lookup__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORECategoricalPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECategoricalPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECategoricalProperty::Lookup = Lookup__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORECategoricalPropertySeries * soap_new_set_resqml20__obj_USCORECategoricalPropertySeries(
	struct soap *soap,
	resqml20__AbstractIntegerArray *RealizationIndices,
	resqml20__TimeIndices *SeriesTimeIndices,
	eml20__DataObjectReference *Lookup__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	ULONG64 *RealizationIndex__3,
	ULONG64 *TimeStep__3,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	eml20__DataObjectReference *LocalCrs__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORECategoricalPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECategoricalPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECategoricalPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml20__obj_USCORECategoricalPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml20__obj_USCORECategoricalProperty::Lookup = Lookup__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__3;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__3;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries ? "resqml20:obj_CategoricalPropertySeries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries ? "resqml20:obj_CategoricalPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries ? "resqml20:obj_CategoricalPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries ? "resqml20:obj_CategoricalPropertySeries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORECategoricalPropertySeries * SOAP_FMAC4 soap_get_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, resqml20__obj_USCORECategoricalPropertySeries *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, resqml20__obj_USCORECategoricalPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORECategoricalPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalPropertySeries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECategoricalPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORECategoricalPropertySeries(struct soap *soap, resqml20__obj_USCORECategoricalPropertySeries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECategoricalPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, const char*, int, const resqml20__obj_USCOREContinuousPropertySeries *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREContinuousPropertySeries * SOAP_FMAC4 soap_in_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, const char*, resqml20__obj_USCOREContinuousPropertySeries *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREContinuousPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREContinuousPropertySeries * soap_new_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREContinuousPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREContinuousPropertySeries * soap_new_req_resqml20__obj_USCOREContinuousPropertySeries(
	struct soap *soap,
	enum resqml20__ResqmlUom UOM__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREContinuousPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREContinuousPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREContinuousProperty::UOM = UOM__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREContinuousPropertySeries * soap_new_set_resqml20__obj_USCOREContinuousPropertySeries(
	struct soap *soap,
	resqml20__AbstractIntegerArray *RealizationIndices,
	resqml20__TimeIndices *SeriesTimeIndices,
	const std::vector<double> & MinimumValue__1,
	const std::vector<double> & MaximumValue__1,
	enum resqml20__ResqmlUom UOM__1,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__2,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__2,
	ULONG64 Count__3,
	enum resqml20__IndexableElements IndexableElement__3,
	ULONG64 *RealizationIndex__3,
	ULONG64 *TimeStep__3,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *SupportingRepresentation__3,
	eml20__DataObjectReference *LocalCrs__3,
	resqml20__AbstractPropertyKind *PropertyKind__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREContinuousPropertySeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREContinuousPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREContinuousPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml20__obj_USCOREContinuousPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml20__obj_USCOREContinuousProperty::MinimumValue = MinimumValue__1;
		_p->resqml20__obj_USCOREContinuousProperty::MaximumValue = MaximumValue__1;
		_p->resqml20__obj_USCOREContinuousProperty::UOM = UOM__1;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__2;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__2;
		_p->resqml20__AbstractProperty::Count = Count__3;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__3;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__3;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__3;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__3;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__3;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries ? "resqml20:obj_ContinuousPropertySeries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries ? "resqml20:obj_ContinuousPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries ? "resqml20:obj_ContinuousPropertySeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousPropertySeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries ? "resqml20:obj_ContinuousPropertySeries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREContinuousPropertySeries * SOAP_FMAC4 soap_get_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, resqml20__obj_USCOREContinuousPropertySeries *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, resqml20__obj_USCOREContinuousPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREContinuousPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousPropertySeries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREContinuousPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREContinuousPropertySeries(struct soap *soap, resqml20__obj_USCOREContinuousPropertySeries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREContinuousPropertySeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeIndices(struct soap*, const char*, int, const resqml20__TimeIndices *, const char*);
SOAP_FMAC3 resqml20__TimeIndices * SOAP_FMAC4 soap_in_resqml20__TimeIndices(struct soap*, const char*, resqml20__TimeIndices *, const char*);
SOAP_FMAC1 resqml20__TimeIndices * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndices(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeIndices * soap_new_resqml20__TimeIndices(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeIndices(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeIndices * soap_new_req_resqml20__TimeIndices(
	struct soap *soap,
	ULONG64 TimeIndexCount,
	bool UseInterval,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__TimeIndices *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndices::TimeIndexCount = TimeIndexCount;
		_p->resqml20__TimeIndices::UseInterval = UseInterval;
		_p->resqml20__TimeIndices::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml20__TimeIndices * soap_new_set_resqml20__TimeIndices(
	struct soap *soap,
	ULONG64 TimeIndexCount,
	ULONG64 *TimeIndexStart,
	resqml20__AbstractIntegerArray *SimulatorTimeStep,
	bool UseInterval,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__TimeIndices *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndices::TimeIndexCount = TimeIndexCount;
		_p->resqml20__TimeIndices::TimeIndexStart = TimeIndexStart;
		_p->resqml20__TimeIndices::SimulatorTimeStep = SimulatorTimeStep;
		_p->resqml20__TimeIndices::UseInterval = UseInterval;
		_p->resqml20__TimeIndices::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml20__TimeIndices(struct soap *soap, resqml20__TimeIndices const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices ? "resqml20:TimeIndices" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeIndices(struct soap *soap, const char *URL, resqml20__TimeIndices const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices ? "resqml20:TimeIndices" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeIndices(struct soap *soap, const char *URL, resqml20__TimeIndices const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices ? "resqml20:TimeIndices" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeIndices(struct soap *soap, const char *URL, resqml20__TimeIndices const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices ? "resqml20:TimeIndices" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeIndices * SOAP_FMAC4 soap_get_resqml20__TimeIndices(struct soap*, resqml20__TimeIndices *, const char*, const char*);

inline int soap_read_resqml20__TimeIndices(struct soap *soap, resqml20__TimeIndices *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeIndices(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeIndices(struct soap *soap, const char *URL, resqml20__TimeIndices *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeIndices(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeIndices(struct soap *soap, resqml20__TimeIndices *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeIndices(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntervalGridCells(struct soap*, const char*, int, const resqml20__IntervalGridCells *, const char*);
SOAP_FMAC3 resqml20__IntervalGridCells * SOAP_FMAC4 soap_in_resqml20__IntervalGridCells(struct soap*, const char*, resqml20__IntervalGridCells *, const char*);
SOAP_FMAC1 resqml20__IntervalGridCells * SOAP_FMAC2 soap_instantiate_resqml20__IntervalGridCells(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntervalGridCells * soap_new_resqml20__IntervalGridCells(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntervalGridCells(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntervalGridCells * soap_new_req_resqml20__IntervalGridCells(
	struct soap *soap,
	ULONG64 CellCount,
	resqml20__AbstractIntegerArray *GridIndices,
	resqml20__AbstractIntegerArray *CellIndices,
	resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml20__DataObjectReference *> & Grids)
{
	resqml20__IntervalGridCells *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntervalGridCells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntervalGridCells::CellCount = CellCount;
		_p->resqml20__IntervalGridCells::GridIndices = GridIndices;
		_p->resqml20__IntervalGridCells::CellIndices = CellIndices;
		_p->resqml20__IntervalGridCells::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml20__IntervalGridCells::Grids = Grids;
	}
	return _p;
}

inline resqml20__IntervalGridCells * soap_new_set_resqml20__IntervalGridCells(
	struct soap *soap,
	ULONG64 CellCount,
	resqml20__AbstractIntegerArray *GridIndices,
	resqml20__AbstractIntegerArray *CellIndices,
	resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml20__DataObjectReference *> & Grids)
{
	resqml20__IntervalGridCells *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntervalGridCells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntervalGridCells::CellCount = CellCount;
		_p->resqml20__IntervalGridCells::GridIndices = GridIndices;
		_p->resqml20__IntervalGridCells::CellIndices = CellIndices;
		_p->resqml20__IntervalGridCells::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml20__IntervalGridCells::Grids = Grids;
	}
	return _p;
}

inline int soap_write_resqml20__IntervalGridCells(struct soap *soap, resqml20__IntervalGridCells const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalGridCells", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells ? "resqml20:IntervalGridCells" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntervalGridCells(struct soap *soap, const char *URL, resqml20__IntervalGridCells const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalGridCells", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells ? "resqml20:IntervalGridCells" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntervalGridCells(struct soap *soap, const char *URL, resqml20__IntervalGridCells const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalGridCells", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells ? "resqml20:IntervalGridCells" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntervalGridCells(struct soap *soap, const char *URL, resqml20__IntervalGridCells const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalGridCells", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells ? "resqml20:IntervalGridCells" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntervalGridCells * SOAP_FMAC4 soap_get_resqml20__IntervalGridCells(struct soap*, resqml20__IntervalGridCells *, const char*, const char*);

inline int soap_read_resqml20__IntervalGridCells(struct soap *soap, resqml20__IntervalGridCells *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntervalGridCells(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntervalGridCells(struct soap *soap, const char *URL, resqml20__IntervalGridCells *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntervalGridCells(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntervalGridCells(struct soap *soap, resqml20__IntervalGridCells *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntervalGridCells(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StreamlineWellbores(struct soap*, const char*, int, const resqml20__StreamlineWellbores *, const char*);
SOAP_FMAC3 resqml20__StreamlineWellbores * SOAP_FMAC4 soap_in_resqml20__StreamlineWellbores(struct soap*, const char*, resqml20__StreamlineWellbores *, const char*);
SOAP_FMAC1 resqml20__StreamlineWellbores * SOAP_FMAC2 soap_instantiate_resqml20__StreamlineWellbores(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StreamlineWellbores * soap_new_resqml20__StreamlineWellbores(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StreamlineWellbores(soap, n, NULL, NULL, NULL);
}

inline resqml20__StreamlineWellbores * soap_new_req_resqml20__StreamlineWellbores(
	struct soap *soap,
	resqml20__AbstractIntegerArray *InjectorPerLine,
	resqml20__AbstractIntegerArray *ProducerPerLine,
	const std::vector<eml20__DataObjectReference *> & WellboreTrajectoryRepresentation)
{
	resqml20__StreamlineWellbores *_p = gsoap_resqml2_0_1::soap_new_resqml20__StreamlineWellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StreamlineWellbores::InjectorPerLine = InjectorPerLine;
		_p->resqml20__StreamlineWellbores::ProducerPerLine = ProducerPerLine;
		_p->resqml20__StreamlineWellbores::WellboreTrajectoryRepresentation = WellboreTrajectoryRepresentation;
	}
	return _p;
}

inline resqml20__StreamlineWellbores * soap_new_set_resqml20__StreamlineWellbores(
	struct soap *soap,
	resqml20__AbstractIntegerArray *InjectorPerLine,
	resqml20__AbstractIntegerArray *ProducerPerLine,
	const std::vector<eml20__DataObjectReference *> & WellboreTrajectoryRepresentation)
{
	resqml20__StreamlineWellbores *_p = gsoap_resqml2_0_1::soap_new_resqml20__StreamlineWellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StreamlineWellbores::InjectorPerLine = InjectorPerLine;
		_p->resqml20__StreamlineWellbores::ProducerPerLine = ProducerPerLine;
		_p->resqml20__StreamlineWellbores::WellboreTrajectoryRepresentation = WellboreTrajectoryRepresentation;
	}
	return _p;
}

inline int soap_write_resqml20__StreamlineWellbores(struct soap *soap, resqml20__StreamlineWellbores const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlineWellbores", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores ? "resqml20:StreamlineWellbores" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StreamlineWellbores(struct soap *soap, const char *URL, resqml20__StreamlineWellbores const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlineWellbores", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores ? "resqml20:StreamlineWellbores" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StreamlineWellbores(struct soap *soap, const char *URL, resqml20__StreamlineWellbores const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlineWellbores", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores ? "resqml20:StreamlineWellbores" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StreamlineWellbores(struct soap *soap, const char *URL, resqml20__StreamlineWellbores const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlineWellbores", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores ? "resqml20:StreamlineWellbores" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StreamlineWellbores * SOAP_FMAC4 soap_get_resqml20__StreamlineWellbores(struct soap*, resqml20__StreamlineWellbores *, const char*, const char*);

inline int soap_read_resqml20__StreamlineWellbores(struct soap *soap, resqml20__StreamlineWellbores *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StreamlineWellbores(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StreamlineWellbores(struct soap *soap, const char *URL, resqml20__StreamlineWellbores *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StreamlineWellbores(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StreamlineWellbores(struct soap *soap, resqml20__StreamlineWellbores *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StreamlineWellbores(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREStreamlinesRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStreamlinesRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, const char*, resqml20__obj_USCOREStreamlinesRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStreamlinesRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStreamlinesRepresentation * soap_new_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStreamlinesRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStreamlinesRepresentation * soap_new_req_resqml20__obj_USCOREStreamlinesRepresentation(
	struct soap *soap,
	ULONG64 LineCount,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREStreamlinesRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStreamlinesRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStreamlinesRepresentation::LineCount = LineCount;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREStreamlinesRepresentation * soap_new_set_resqml20__obj_USCOREStreamlinesRepresentation(
	struct soap *soap,
	ULONG64 LineCount,
	resqml20__StreamlineWellbores *StreamlineWellbores,
	resqml20__StreamlinePolylineSetPatch *Geometry,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREStreamlinesRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStreamlinesRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStreamlinesRepresentation::LineCount = LineCount;
		_p->resqml20__obj_USCOREStreamlinesRepresentation::StreamlineWellbores = StreamlineWellbores;
		_p->resqml20__obj_USCOREStreamlinesRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation ? "resqml20:obj_StreamlinesRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation ? "resqml20:obj_StreamlinesRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation ? "resqml20:obj_StreamlinesRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation ? "resqml20:obj_StreamlinesRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStreamlinesRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, resqml20__obj_USCOREStreamlinesRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, resqml20__obj_USCOREStreamlinesRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStreamlinesRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStreamlinesRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStreamlinesRepresentation(struct soap *soap, resqml20__obj_USCOREStreamlinesRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStreamlinesRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStreamlinesFeature(struct soap*, const char*, int, const resqml20__obj_USCOREStreamlinesFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStreamlinesFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStreamlinesFeature(struct soap*, const char*, resqml20__obj_USCOREStreamlinesFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStreamlinesFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStreamlinesFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStreamlinesFeature * soap_new_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStreamlinesFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStreamlinesFeature * soap_new_req_resqml20__obj_USCOREStreamlinesFeature(
	struct soap *soap,
	enum resqml20__StreamlineFlux Flux,
	resqml20__TimeIndex *TimeIndex,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStreamlinesFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStreamlinesFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStreamlinesFeature::Flux = Flux;
		_p->resqml20__obj_USCOREStreamlinesFeature::TimeIndex = TimeIndex;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREStreamlinesFeature * soap_new_set_resqml20__obj_USCOREStreamlinesFeature(
	struct soap *soap,
	enum resqml20__StreamlineFlux Flux,
	std::string *OtherFlux,
	resqml20__TimeIndex *TimeIndex,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStreamlinesFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStreamlinesFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStreamlinesFeature::Flux = Flux;
		_p->resqml20__obj_USCOREStreamlinesFeature::OtherFlux = OtherFlux;
		_p->resqml20__obj_USCOREStreamlinesFeature::TimeIndex = TimeIndex;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature ? "resqml20:obj_StreamlinesFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature ? "resqml20:obj_StreamlinesFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature ? "resqml20:obj_StreamlinesFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StreamlinesFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature ? "resqml20:obj_StreamlinesFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStreamlinesFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStreamlinesFeature(struct soap*, resqml20__obj_USCOREStreamlinesFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, resqml20__obj_USCOREStreamlinesFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStreamlinesFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStreamlinesFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStreamlinesFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStreamlinesFeature(struct soap *soap, resqml20__obj_USCOREStreamlinesFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStreamlinesFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StreamlinePolylineSetPatch(struct soap*, const char*, int, const resqml20__StreamlinePolylineSetPatch *, const char*);
SOAP_FMAC3 resqml20__StreamlinePolylineSetPatch * SOAP_FMAC4 soap_in_resqml20__StreamlinePolylineSetPatch(struct soap*, const char*, resqml20__StreamlinePolylineSetPatch *, const char*);
SOAP_FMAC1 resqml20__StreamlinePolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml20__StreamlinePolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StreamlinePolylineSetPatch * soap_new_resqml20__StreamlinePolylineSetPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StreamlinePolylineSetPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__StreamlinePolylineSetPatch * soap_new_req_resqml20__StreamlinePolylineSetPatch(
	struct soap *soap,
	ULONG64 NodeCount,
	ULONG64 IntervalCount,
	resqml20__AbstractBooleanArray *ClosedPolylines,
	resqml20__AbstractIntegerArray *NodeCountPerPolyline,
	ULONG64 PatchIndex__1)
{
	resqml20__StreamlinePolylineSetPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__StreamlinePolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StreamlinePolylineSetPatch::NodeCount = NodeCount;
		_p->resqml20__StreamlinePolylineSetPatch::IntervalCount = IntervalCount;
		_p->resqml20__StreamlinePolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml20__StreamlinePolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__StreamlinePolylineSetPatch * soap_new_set_resqml20__StreamlinePolylineSetPatch(
	struct soap *soap,
	ULONG64 NodeCount,
	ULONG64 IntervalCount,
	resqml20__AbstractBooleanArray *ClosedPolylines,
	resqml20__AbstractIntegerArray *NodeCountPerPolyline,
	resqml20__IntervalGridCells *IntervalGridCells,
	ULONG64 PatchIndex__1)
{
	resqml20__StreamlinePolylineSetPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__StreamlinePolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StreamlinePolylineSetPatch::NodeCount = NodeCount;
		_p->resqml20__StreamlinePolylineSetPatch::IntervalCount = IntervalCount;
		_p->resqml20__StreamlinePolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml20__StreamlinePolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml20__StreamlinePolylineSetPatch::IntervalGridCells = IntervalGridCells;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__StreamlinePolylineSetPatch(struct soap *soap, resqml20__StreamlinePolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinePolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch ? "resqml20:StreamlinePolylineSetPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StreamlinePolylineSetPatch(struct soap *soap, const char *URL, resqml20__StreamlinePolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinePolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch ? "resqml20:StreamlinePolylineSetPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StreamlinePolylineSetPatch(struct soap *soap, const char *URL, resqml20__StreamlinePolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinePolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch ? "resqml20:StreamlinePolylineSetPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StreamlinePolylineSetPatch(struct soap *soap, const char *URL, resqml20__StreamlinePolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StreamlinePolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch ? "resqml20:StreamlinePolylineSetPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StreamlinePolylineSetPatch * SOAP_FMAC4 soap_get_resqml20__StreamlinePolylineSetPatch(struct soap*, resqml20__StreamlinePolylineSetPatch *, const char*, const char*);

inline int soap_read_resqml20__StreamlinePolylineSetPatch(struct soap *soap, resqml20__StreamlinePolylineSetPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StreamlinePolylineSetPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StreamlinePolylineSetPatch(struct soap *soap, const char *URL, resqml20__StreamlinePolylineSetPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StreamlinePolylineSetPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StreamlinePolylineSetPatch(struct soap *soap, resqml20__StreamlinePolylineSetPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StreamlinePolylineSetPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREActivityTemplate(struct soap*, const char*, int, const resqml20__obj_USCOREActivityTemplate *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREActivityTemplate * SOAP_FMAC4 soap_in_resqml20__obj_USCOREActivityTemplate(struct soap*, const char*, resqml20__obj_USCOREActivityTemplate *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREActivityTemplate * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREActivityTemplate(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREActivityTemplate * soap_new_resqml20__obj_USCOREActivityTemplate(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREActivityTemplate(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREActivityTemplate * soap_new_req_resqml20__obj_USCOREActivityTemplate(
	struct soap *soap,
	const std::vector<resqml20__ParameterTemplate *> & Parameter,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREActivityTemplate *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREActivityTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREActivityTemplate::Parameter = Parameter;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREActivityTemplate * soap_new_set_resqml20__obj_USCOREActivityTemplate(
	struct soap *soap,
	const std::vector<resqml20__ParameterTemplate *> & Parameter,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREActivityTemplate *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREActivityTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREActivityTemplate::Parameter = Parameter;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREActivityTemplate(struct soap *soap, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate ? "resqml20:obj_ActivityTemplate" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate ? "resqml20:obj_ActivityTemplate" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate ? "resqml20:obj_ActivityTemplate" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ActivityTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate ? "resqml20:obj_ActivityTemplate" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREActivityTemplate * SOAP_FMAC4 soap_get_resqml20__obj_USCOREActivityTemplate(struct soap*, resqml20__obj_USCOREActivityTemplate *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREActivityTemplate(struct soap *soap, resqml20__obj_USCOREActivityTemplate *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREActivityTemplate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREActivityTemplate(struct soap *soap, const char *URL, resqml20__obj_USCOREActivityTemplate *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREActivityTemplate(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREActivityTemplate(struct soap *soap, resqml20__obj_USCOREActivityTemplate *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREActivityTemplate(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractActivityParameter(struct soap*, const char*, int, const resqml20__AbstractActivityParameter *, const char*);
SOAP_FMAC3 resqml20__AbstractActivityParameter * SOAP_FMAC4 soap_in_resqml20__AbstractActivityParameter(struct soap*, const char*, resqml20__AbstractActivityParameter *, const char*);
SOAP_FMAC1 resqml20__AbstractActivityParameter * SOAP_FMAC2 soap_instantiate_resqml20__AbstractActivityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractActivityParameter * soap_new_resqml20__AbstractActivityParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractActivityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractActivityParameter * soap_new_req_resqml20__AbstractActivityParameter(
	struct soap *soap,
	const std::string& Title)
{
	resqml20__AbstractActivityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractActivityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractActivityParameter::Title = Title;
	}
	return _p;
}

inline resqml20__AbstractActivityParameter * soap_new_set_resqml20__AbstractActivityParameter(
	struct soap *soap,
	const std::string& Title,
	LONG64 *Index,
	std::string *Selection,
	const std::vector<resqml20__AbstractParameterKey *> & Key)
{
	resqml20__AbstractActivityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractActivityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractActivityParameter::Title = Title;
		_p->resqml20__AbstractActivityParameter::Index = Index;
		_p->resqml20__AbstractActivityParameter::Selection = Selection;
		_p->resqml20__AbstractActivityParameter::Key = Key;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractActivityParameter(struct soap *soap, resqml20__AbstractActivityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractActivityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter ? "resqml20:AbstractActivityParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractActivityParameter(struct soap *soap, const char *URL, resqml20__AbstractActivityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractActivityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter ? "resqml20:AbstractActivityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractActivityParameter(struct soap *soap, const char *URL, resqml20__AbstractActivityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractActivityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter ? "resqml20:AbstractActivityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractActivityParameter(struct soap *soap, const char *URL, resqml20__AbstractActivityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractActivityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter ? "resqml20:AbstractActivityParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractActivityParameter * SOAP_FMAC4 soap_get_resqml20__AbstractActivityParameter(struct soap*, resqml20__AbstractActivityParameter *, const char*, const char*);

inline int soap_read_resqml20__AbstractActivityParameter(struct soap *soap, resqml20__AbstractActivityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractActivityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractActivityParameter(struct soap *soap, const char *URL, resqml20__AbstractActivityParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractActivityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractActivityParameter(struct soap *soap, resqml20__AbstractActivityParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractActivityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeIndexParameter(struct soap*, const char*, int, const resqml20__TimeIndexParameter *, const char*);
SOAP_FMAC3 resqml20__TimeIndexParameter * SOAP_FMAC4 soap_in_resqml20__TimeIndexParameter(struct soap*, const char*, resqml20__TimeIndexParameter *, const char*);
SOAP_FMAC1 resqml20__TimeIndexParameter * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndexParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeIndexParameter * soap_new_resqml20__TimeIndexParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeIndexParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeIndexParameter * soap_new_req_resqml20__TimeIndexParameter(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex,
	const std::string& Title__1)
{
	resqml20__TimeIndexParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndexParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndexParameter::TimeIndex = TimeIndex;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
	}
	return _p;
}

inline resqml20__TimeIndexParameter * soap_new_set_resqml20__TimeIndexParameter(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex,
	const std::string& Title__1,
	LONG64 *Index__1,
	std::string *Selection__1,
	const std::vector<resqml20__AbstractParameterKey *> & Key__1)
{
	resqml20__TimeIndexParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndexParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndexParameter::TimeIndex = TimeIndex;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
		_p->resqml20__AbstractActivityParameter::Index = Index__1;
		_p->resqml20__AbstractActivityParameter::Selection = Selection__1;
		_p->resqml20__AbstractActivityParameter::Key = Key__1;
	}
	return _p;
}

inline int soap_write_resqml20__TimeIndexParameter(struct soap *soap, resqml20__TimeIndexParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter ? "resqml20:TimeIndexParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeIndexParameter(struct soap *soap, const char *URL, resqml20__TimeIndexParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter ? "resqml20:TimeIndexParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeIndexParameter(struct soap *soap, const char *URL, resqml20__TimeIndexParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter ? "resqml20:TimeIndexParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeIndexParameter(struct soap *soap, const char *URL, resqml20__TimeIndexParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter ? "resqml20:TimeIndexParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeIndexParameter * SOAP_FMAC4 soap_get_resqml20__TimeIndexParameter(struct soap*, resqml20__TimeIndexParameter *, const char*, const char*);

inline int soap_read_resqml20__TimeIndexParameter(struct soap *soap, resqml20__TimeIndexParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeIndexParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeIndexParameter(struct soap *soap, const char *URL, resqml20__TimeIndexParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeIndexParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeIndexParameter(struct soap *soap, resqml20__TimeIndexParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeIndexParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractParameterKey(struct soap*, const char*, int, const resqml20__AbstractParameterKey *, const char*);
SOAP_FMAC3 resqml20__AbstractParameterKey * SOAP_FMAC4 soap_in_resqml20__AbstractParameterKey(struct soap*, const char*, resqml20__AbstractParameterKey *, const char*);
SOAP_FMAC1 resqml20__AbstractParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractParameterKey * soap_new_resqml20__AbstractParameterKey(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractParameterKey * soap_new_req_resqml20__AbstractParameterKey(
	struct soap *soap)
{
	resqml20__AbstractParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractParameterKey * soap_new_set_resqml20__AbstractParameterKey(
	struct soap *soap)
{
	resqml20__AbstractParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractParameterKey(struct soap *soap, resqml20__AbstractParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey ? "resqml20:AbstractParameterKey" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractParameterKey(struct soap *soap, const char *URL, resqml20__AbstractParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey ? "resqml20:AbstractParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractParameterKey(struct soap *soap, const char *URL, resqml20__AbstractParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey ? "resqml20:AbstractParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractParameterKey(struct soap *soap, const char *URL, resqml20__AbstractParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey ? "resqml20:AbstractParameterKey" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractParameterKey * SOAP_FMAC4 soap_get_resqml20__AbstractParameterKey(struct soap*, resqml20__AbstractParameterKey *, const char*, const char*);

inline int soap_read_resqml20__AbstractParameterKey(struct soap *soap, resqml20__AbstractParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractParameterKey(struct soap *soap, const char *URL, resqml20__AbstractParameterKey *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractParameterKey(struct soap *soap, resqml20__AbstractParameterKey *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__FloatingPointQuantityParameter(struct soap*, const char*, int, const resqml20__FloatingPointQuantityParameter *, const char*);
SOAP_FMAC3 resqml20__FloatingPointQuantityParameter * SOAP_FMAC4 soap_in_resqml20__FloatingPointQuantityParameter(struct soap*, const char*, resqml20__FloatingPointQuantityParameter *, const char*);
SOAP_FMAC1 resqml20__FloatingPointQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml20__FloatingPointQuantityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__FloatingPointQuantityParameter * soap_new_resqml20__FloatingPointQuantityParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__FloatingPointQuantityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__FloatingPointQuantityParameter * soap_new_req_resqml20__FloatingPointQuantityParameter(
	struct soap *soap,
	double Value,
	enum resqml20__ResqmlUom Uom,
	const std::string& Title__1)
{
	resqml20__FloatingPointQuantityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__FloatingPointQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__FloatingPointQuantityParameter::Value = Value;
		_p->resqml20__FloatingPointQuantityParameter::Uom = Uom;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
	}
	return _p;
}

inline resqml20__FloatingPointQuantityParameter * soap_new_set_resqml20__FloatingPointQuantityParameter(
	struct soap *soap,
	double Value,
	enum resqml20__ResqmlUom Uom,
	const std::string& Title__1,
	LONG64 *Index__1,
	std::string *Selection__1,
	const std::vector<resqml20__AbstractParameterKey *> & Key__1)
{
	resqml20__FloatingPointQuantityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__FloatingPointQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__FloatingPointQuantityParameter::Value = Value;
		_p->resqml20__FloatingPointQuantityParameter::Uom = Uom;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
		_p->resqml20__AbstractActivityParameter::Index = Index__1;
		_p->resqml20__AbstractActivityParameter::Selection = Selection__1;
		_p->resqml20__AbstractActivityParameter::Key = Key__1;
	}
	return _p;
}

inline int soap_write_resqml20__FloatingPointQuantityParameter(struct soap *soap, resqml20__FloatingPointQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FloatingPointQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter ? "resqml20:FloatingPointQuantityParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__FloatingPointQuantityParameter(struct soap *soap, const char *URL, resqml20__FloatingPointQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FloatingPointQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter ? "resqml20:FloatingPointQuantityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__FloatingPointQuantityParameter(struct soap *soap, const char *URL, resqml20__FloatingPointQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FloatingPointQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter ? "resqml20:FloatingPointQuantityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__FloatingPointQuantityParameter(struct soap *soap, const char *URL, resqml20__FloatingPointQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FloatingPointQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter ? "resqml20:FloatingPointQuantityParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__FloatingPointQuantityParameter * SOAP_FMAC4 soap_get_resqml20__FloatingPointQuantityParameter(struct soap*, resqml20__FloatingPointQuantityParameter *, const char*, const char*);

inline int soap_read_resqml20__FloatingPointQuantityParameter(struct soap *soap, resqml20__FloatingPointQuantityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__FloatingPointQuantityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__FloatingPointQuantityParameter(struct soap *soap, const char *URL, resqml20__FloatingPointQuantityParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__FloatingPointQuantityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__FloatingPointQuantityParameter(struct soap *soap, resqml20__FloatingPointQuantityParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__FloatingPointQuantityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeIndexParameterKey(struct soap*, const char*, int, const resqml20__TimeIndexParameterKey *, const char*);
SOAP_FMAC3 resqml20__TimeIndexParameterKey * SOAP_FMAC4 soap_in_resqml20__TimeIndexParameterKey(struct soap*, const char*, resqml20__TimeIndexParameterKey *, const char*);
SOAP_FMAC1 resqml20__TimeIndexParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndexParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeIndexParameterKey * soap_new_resqml20__TimeIndexParameterKey(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeIndexParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeIndexParameterKey * soap_new_req_resqml20__TimeIndexParameterKey(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex)
{
	resqml20__TimeIndexParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndexParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndexParameterKey::TimeIndex = TimeIndex;
	}
	return _p;
}

inline resqml20__TimeIndexParameterKey * soap_new_set_resqml20__TimeIndexParameterKey(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex)
{
	resqml20__TimeIndexParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndexParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndexParameterKey::TimeIndex = TimeIndex;
	}
	return _p;
}

inline int soap_write_resqml20__TimeIndexParameterKey(struct soap *soap, resqml20__TimeIndexParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey ? "resqml20:TimeIndexParameterKey" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeIndexParameterKey(struct soap *soap, const char *URL, resqml20__TimeIndexParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey ? "resqml20:TimeIndexParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeIndexParameterKey(struct soap *soap, const char *URL, resqml20__TimeIndexParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey ? "resqml20:TimeIndexParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeIndexParameterKey(struct soap *soap, const char *URL, resqml20__TimeIndexParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndexParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey ? "resqml20:TimeIndexParameterKey" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeIndexParameterKey * SOAP_FMAC4 soap_get_resqml20__TimeIndexParameterKey(struct soap*, resqml20__TimeIndexParameterKey *, const char*, const char*);

inline int soap_read_resqml20__TimeIndexParameterKey(struct soap *soap, resqml20__TimeIndexParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeIndexParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeIndexParameterKey(struct soap *soap, const char *URL, resqml20__TimeIndexParameterKey *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeIndexParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeIndexParameterKey(struct soap *soap, resqml20__TimeIndexParameterKey *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeIndexParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerQuantityParameter(struct soap*, const char*, int, const resqml20__IntegerQuantityParameter *, const char*);
SOAP_FMAC3 resqml20__IntegerQuantityParameter * SOAP_FMAC4 soap_in_resqml20__IntegerQuantityParameter(struct soap*, const char*, resqml20__IntegerQuantityParameter *, const char*);
SOAP_FMAC1 resqml20__IntegerQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml20__IntegerQuantityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerQuantityParameter * soap_new_resqml20__IntegerQuantityParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerQuantityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerQuantityParameter * soap_new_req_resqml20__IntegerQuantityParameter(
	struct soap *soap,
	LONG64 Value,
	const std::string& Title__1)
{
	resqml20__IntegerQuantityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerQuantityParameter::Value = Value;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
	}
	return _p;
}

inline resqml20__IntegerQuantityParameter * soap_new_set_resqml20__IntegerQuantityParameter(
	struct soap *soap,
	LONG64 Value,
	const std::string& Title__1,
	LONG64 *Index__1,
	std::string *Selection__1,
	const std::vector<resqml20__AbstractParameterKey *> & Key__1)
{
	resqml20__IntegerQuantityParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerQuantityParameter::Value = Value;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
		_p->resqml20__AbstractActivityParameter::Index = Index__1;
		_p->resqml20__AbstractActivityParameter::Selection = Selection__1;
		_p->resqml20__AbstractActivityParameter::Key = Key__1;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerQuantityParameter(struct soap *soap, resqml20__IntegerQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter ? "resqml20:IntegerQuantityParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerQuantityParameter(struct soap *soap, const char *URL, resqml20__IntegerQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter ? "resqml20:IntegerQuantityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerQuantityParameter(struct soap *soap, const char *URL, resqml20__IntegerQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter ? "resqml20:IntegerQuantityParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerQuantityParameter(struct soap *soap, const char *URL, resqml20__IntegerQuantityParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerQuantityParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter ? "resqml20:IntegerQuantityParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerQuantityParameter * SOAP_FMAC4 soap_get_resqml20__IntegerQuantityParameter(struct soap*, resqml20__IntegerQuantityParameter *, const char*, const char*);

inline int soap_read_resqml20__IntegerQuantityParameter(struct soap *soap, resqml20__IntegerQuantityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerQuantityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerQuantityParameter(struct soap *soap, const char *URL, resqml20__IntegerQuantityParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerQuantityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerQuantityParameter(struct soap *soap, resqml20__IntegerQuantityParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerQuantityParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParameterTemplate(struct soap*, const char*, int, const resqml20__ParameterTemplate *, const char*);
SOAP_FMAC3 resqml20__ParameterTemplate * SOAP_FMAC4 soap_in_resqml20__ParameterTemplate(struct soap*, const char*, resqml20__ParameterTemplate *, const char*);
SOAP_FMAC1 resqml20__ParameterTemplate * SOAP_FMAC2 soap_instantiate_resqml20__ParameterTemplate(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParameterTemplate * soap_new_resqml20__ParameterTemplate(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParameterTemplate(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParameterTemplate * soap_new_req_resqml20__ParameterTemplate(
	struct soap *soap,
	bool IsInput,
	bool IsOutput,
	const std::string& Title,
	LONG64 MaxOccurs,
	LONG64 MinOccurs)
{
	resqml20__ParameterTemplate *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParameterTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParameterTemplate::IsInput = IsInput;
		_p->resqml20__ParameterTemplate::IsOutput = IsOutput;
		_p->resqml20__ParameterTemplate::Title = Title;
		_p->resqml20__ParameterTemplate::MaxOccurs = MaxOccurs;
		_p->resqml20__ParameterTemplate::MinOccurs = MinOccurs;
	}
	return _p;
}

inline resqml20__ParameterTemplate * soap_new_set_resqml20__ParameterTemplate(
	struct soap *soap,
	const std::vector<std::string> & KeyConstraint,
	bool IsInput,
	const std::vector<enum resqml20__ParameterKind> & AllowedKind,
	bool IsOutput,
	const std::string& Title,
	std::string *DataObjectContentType,
	LONG64 MaxOccurs,
	LONG64 MinOccurs,
	std::string *Constraint,
	const std::vector<resqml20__AbstractActivityParameter *> & DefaultValue)
{
	resqml20__ParameterTemplate *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParameterTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParameterTemplate::KeyConstraint = KeyConstraint;
		_p->resqml20__ParameterTemplate::IsInput = IsInput;
		_p->resqml20__ParameterTemplate::AllowedKind = AllowedKind;
		_p->resqml20__ParameterTemplate::IsOutput = IsOutput;
		_p->resqml20__ParameterTemplate::Title = Title;
		_p->resqml20__ParameterTemplate::DataObjectContentType = DataObjectContentType;
		_p->resqml20__ParameterTemplate::MaxOccurs = MaxOccurs;
		_p->resqml20__ParameterTemplate::MinOccurs = MinOccurs;
		_p->resqml20__ParameterTemplate::Constraint = Constraint;
		_p->resqml20__ParameterTemplate::DefaultValue = DefaultValue;
	}
	return _p;
}

inline int soap_write_resqml20__ParameterTemplate(struct soap *soap, resqml20__ParameterTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParameterTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate ? "resqml20:ParameterTemplate" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParameterTemplate(struct soap *soap, const char *URL, resqml20__ParameterTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParameterTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate ? "resqml20:ParameterTemplate" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParameterTemplate(struct soap *soap, const char *URL, resqml20__ParameterTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParameterTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate ? "resqml20:ParameterTemplate" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParameterTemplate(struct soap *soap, const char *URL, resqml20__ParameterTemplate const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParameterTemplate", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate ? "resqml20:ParameterTemplate" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParameterTemplate * SOAP_FMAC4 soap_get_resqml20__ParameterTemplate(struct soap*, resqml20__ParameterTemplate *, const char*, const char*);

inline int soap_read_resqml20__ParameterTemplate(struct soap *soap, resqml20__ParameterTemplate *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParameterTemplate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParameterTemplate(struct soap *soap, const char *URL, resqml20__ParameterTemplate *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParameterTemplate(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParameterTemplate(struct soap *soap, resqml20__ParameterTemplate *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParameterTemplate(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StringParameter(struct soap*, const char*, int, const resqml20__StringParameter *, const char*);
SOAP_FMAC3 resqml20__StringParameter * SOAP_FMAC4 soap_in_resqml20__StringParameter(struct soap*, const char*, resqml20__StringParameter *, const char*);
SOAP_FMAC1 resqml20__StringParameter * SOAP_FMAC2 soap_instantiate_resqml20__StringParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StringParameter * soap_new_resqml20__StringParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StringParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__StringParameter * soap_new_req_resqml20__StringParameter(
	struct soap *soap,
	const std::string& Value,
	const std::string& Title__1)
{
	resqml20__StringParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringParameter::Value = Value;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
	}
	return _p;
}

inline resqml20__StringParameter * soap_new_set_resqml20__StringParameter(
	struct soap *soap,
	const std::string& Value,
	const std::string& Title__1,
	LONG64 *Index__1,
	std::string *Selection__1,
	const std::vector<resqml20__AbstractParameterKey *> & Key__1)
{
	resqml20__StringParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringParameter::Value = Value;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
		_p->resqml20__AbstractActivityParameter::Index = Index__1;
		_p->resqml20__AbstractActivityParameter::Selection = Selection__1;
		_p->resqml20__AbstractActivityParameter::Key = Key__1;
	}
	return _p;
}

inline int soap_write_resqml20__StringParameter(struct soap *soap, resqml20__StringParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter ? "resqml20:StringParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StringParameter(struct soap *soap, const char *URL, resqml20__StringParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter ? "resqml20:StringParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StringParameter(struct soap *soap, const char *URL, resqml20__StringParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter ? "resqml20:StringParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StringParameter(struct soap *soap, const char *URL, resqml20__StringParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter ? "resqml20:StringParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StringParameter * SOAP_FMAC4 soap_get_resqml20__StringParameter(struct soap*, resqml20__StringParameter *, const char*, const char*);

inline int soap_read_resqml20__StringParameter(struct soap *soap, resqml20__StringParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StringParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StringParameter(struct soap *soap, const char *URL, resqml20__StringParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StringParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StringParameter(struct soap *soap, resqml20__StringParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StringParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREActivity(struct soap*, const char*, int, const resqml20__obj_USCOREActivity *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREActivity * SOAP_FMAC4 soap_in_resqml20__obj_USCOREActivity(struct soap*, const char*, resqml20__obj_USCOREActivity *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREActivity * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREActivity(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREActivity * soap_new_resqml20__obj_USCOREActivity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREActivity(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREActivity * soap_new_req_resqml20__obj_USCOREActivity(
	struct soap *soap,
	eml20__DataObjectReference *ActivityDescriptor,
	const std::vector<resqml20__AbstractActivityParameter *> & Parameter,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREActivity *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREActivity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREActivity::ActivityDescriptor = ActivityDescriptor;
		_p->resqml20__obj_USCOREActivity::Parameter = Parameter;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREActivity * soap_new_set_resqml20__obj_USCOREActivity(
	struct soap *soap,
	eml20__DataObjectReference *Parent,
	eml20__DataObjectReference *ActivityDescriptor,
	const std::vector<resqml20__AbstractActivityParameter *> & Parameter,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREActivity *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREActivity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREActivity::Parent = Parent;
		_p->resqml20__obj_USCOREActivity::ActivityDescriptor = ActivityDescriptor;
		_p->resqml20__obj_USCOREActivity::Parameter = Parameter;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREActivity(struct soap *soap, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity ? "resqml20:obj_Activity" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREActivity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity ? "resqml20:obj_Activity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREActivity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity ? "resqml20:obj_Activity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREActivity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Activity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity ? "resqml20:obj_Activity" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREActivity * SOAP_FMAC4 soap_get_resqml20__obj_USCOREActivity(struct soap*, resqml20__obj_USCOREActivity *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREActivity(struct soap *soap, resqml20__obj_USCOREActivity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREActivity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREActivity(struct soap *soap, const char *URL, resqml20__obj_USCOREActivity *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREActivity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREActivity(struct soap *soap, resqml20__obj_USCOREActivity *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREActivity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ObjectParameterKey(struct soap*, const char*, int, const resqml20__ObjectParameterKey *, const char*);
SOAP_FMAC3 resqml20__ObjectParameterKey * SOAP_FMAC4 soap_in_resqml20__ObjectParameterKey(struct soap*, const char*, resqml20__ObjectParameterKey *, const char*);
SOAP_FMAC1 resqml20__ObjectParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__ObjectParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ObjectParameterKey * soap_new_resqml20__ObjectParameterKey(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ObjectParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml20__ObjectParameterKey * soap_new_req_resqml20__ObjectParameterKey(
	struct soap *soap,
	eml20__DataObjectReference *DataObject)
{
	resqml20__ObjectParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__ObjectParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ObjectParameterKey::DataObject = DataObject;
	}
	return _p;
}

inline resqml20__ObjectParameterKey * soap_new_set_resqml20__ObjectParameterKey(
	struct soap *soap,
	eml20__DataObjectReference *DataObject)
{
	resqml20__ObjectParameterKey *_p = gsoap_resqml2_0_1::soap_new_resqml20__ObjectParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ObjectParameterKey::DataObject = DataObject;
	}
	return _p;
}

inline int soap_write_resqml20__ObjectParameterKey(struct soap *soap, resqml20__ObjectParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ObjectParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey ? "resqml20:ObjectParameterKey" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ObjectParameterKey(struct soap *soap, const char *URL, resqml20__ObjectParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ObjectParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey ? "resqml20:ObjectParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ObjectParameterKey(struct soap *soap, const char *URL, resqml20__ObjectParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ObjectParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey ? "resqml20:ObjectParameterKey" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ObjectParameterKey(struct soap *soap, const char *URL, resqml20__ObjectParameterKey const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ObjectParameterKey", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey ? "resqml20:ObjectParameterKey" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ObjectParameterKey * SOAP_FMAC4 soap_get_resqml20__ObjectParameterKey(struct soap*, resqml20__ObjectParameterKey *, const char*, const char*);

inline int soap_read_resqml20__ObjectParameterKey(struct soap *soap, resqml20__ObjectParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ObjectParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ObjectParameterKey(struct soap *soap, const char *URL, resqml20__ObjectParameterKey *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ObjectParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ObjectParameterKey(struct soap *soap, resqml20__ObjectParameterKey *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ObjectParameterKey(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DataObjectParameter(struct soap*, const char*, int, const resqml20__DataObjectParameter *, const char*);
SOAP_FMAC3 resqml20__DataObjectParameter * SOAP_FMAC4 soap_in_resqml20__DataObjectParameter(struct soap*, const char*, resqml20__DataObjectParameter *, const char*);
SOAP_FMAC1 resqml20__DataObjectParameter * SOAP_FMAC2 soap_instantiate_resqml20__DataObjectParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__DataObjectParameter * soap_new_resqml20__DataObjectParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__DataObjectParameter(soap, n, NULL, NULL, NULL);
}

inline resqml20__DataObjectParameter * soap_new_req_resqml20__DataObjectParameter(
	struct soap *soap,
	eml20__DataObjectReference *DataObject,
	const std::string& Title__1)
{
	resqml20__DataObjectParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__DataObjectParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DataObjectParameter::DataObject = DataObject;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
	}
	return _p;
}

inline resqml20__DataObjectParameter * soap_new_set_resqml20__DataObjectParameter(
	struct soap *soap,
	eml20__DataObjectReference *DataObject,
	const std::string& Title__1,
	LONG64 *Index__1,
	std::string *Selection__1,
	const std::vector<resqml20__AbstractParameterKey *> & Key__1)
{
	resqml20__DataObjectParameter *_p = gsoap_resqml2_0_1::soap_new_resqml20__DataObjectParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DataObjectParameter::DataObject = DataObject;
		_p->resqml20__AbstractActivityParameter::Title = Title__1;
		_p->resqml20__AbstractActivityParameter::Index = Index__1;
		_p->resqml20__AbstractActivityParameter::Selection = Selection__1;
		_p->resqml20__AbstractActivityParameter::Key = Key__1;
	}
	return _p;
}

inline int soap_write_resqml20__DataObjectParameter(struct soap *soap, resqml20__DataObjectParameter const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DataObjectParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter ? "resqml20:DataObjectParameter" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DataObjectParameter(struct soap *soap, const char *URL, resqml20__DataObjectParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DataObjectParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter ? "resqml20:DataObjectParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DataObjectParameter(struct soap *soap, const char *URL, resqml20__DataObjectParameter const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DataObjectParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter ? "resqml20:DataObjectParameter" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DataObjectParameter(struct soap *soap, const char *URL, resqml20__DataObjectParameter const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DataObjectParameter", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter ? "resqml20:DataObjectParameter" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__DataObjectParameter * SOAP_FMAC4 soap_get_resqml20__DataObjectParameter(struct soap*, resqml20__DataObjectParameter *, const char*, const char*);

inline int soap_read_resqml20__DataObjectParameter(struct soap *soap, resqml20__DataObjectParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DataObjectParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DataObjectParameter(struct soap *soap, const char *URL, resqml20__DataObjectParameter *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DataObjectParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DataObjectParameter(struct soap *soap, resqml20__DataObjectParameter *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DataObjectParameter(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__WitsmlWellboreReference(struct soap*, const char*, int, const resqml20__WitsmlWellboreReference *, const char*);
SOAP_FMAC3 resqml20__WitsmlWellboreReference * SOAP_FMAC4 soap_in_resqml20__WitsmlWellboreReference(struct soap*, const char*, resqml20__WitsmlWellboreReference *, const char*);
SOAP_FMAC1 resqml20__WitsmlWellboreReference * SOAP_FMAC2 soap_instantiate_resqml20__WitsmlWellboreReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__WitsmlWellboreReference * soap_new_resqml20__WitsmlWellboreReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__WitsmlWellboreReference(soap, n, NULL, NULL, NULL);
}

inline resqml20__WitsmlWellboreReference * soap_new_req_resqml20__WitsmlWellboreReference(
	struct soap *soap,
	eml20__DataObjectReference *WitsmlWell,
	eml20__DataObjectReference *WitsmlWellbore)
{
	resqml20__WitsmlWellboreReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__WitsmlWellboreReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__WitsmlWellboreReference::WitsmlWell = WitsmlWell;
		_p->resqml20__WitsmlWellboreReference::WitsmlWellbore = WitsmlWellbore;
	}
	return _p;
}

inline resqml20__WitsmlWellboreReference * soap_new_set_resqml20__WitsmlWellboreReference(
	struct soap *soap,
	eml20__DataObjectReference *WitsmlWell,
	eml20__DataObjectReference *WitsmlWellbore)
{
	resqml20__WitsmlWellboreReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__WitsmlWellboreReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__WitsmlWellboreReference::WitsmlWell = WitsmlWell;
		_p->resqml20__WitsmlWellboreReference::WitsmlWellbore = WitsmlWellbore;
	}
	return _p;
}

inline int soap_write_resqml20__WitsmlWellboreReference(struct soap *soap, resqml20__WitsmlWellboreReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WitsmlWellboreReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference ? "resqml20:WitsmlWellboreReference" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__WitsmlWellboreReference(struct soap *soap, const char *URL, resqml20__WitsmlWellboreReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WitsmlWellboreReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference ? "resqml20:WitsmlWellboreReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__WitsmlWellboreReference(struct soap *soap, const char *URL, resqml20__WitsmlWellboreReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WitsmlWellboreReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference ? "resqml20:WitsmlWellboreReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__WitsmlWellboreReference(struct soap *soap, const char *URL, resqml20__WitsmlWellboreReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WitsmlWellboreReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference ? "resqml20:WitsmlWellboreReference" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__WitsmlWellboreReference * SOAP_FMAC4 soap_get_resqml20__WitsmlWellboreReference(struct soap*, resqml20__WitsmlWellboreReference *, const char*, const char*);

inline int soap_read_resqml20__WitsmlWellboreReference(struct soap *soap, resqml20__WitsmlWellboreReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__WitsmlWellboreReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__WitsmlWellboreReference(struct soap *soap, const char *URL, resqml20__WitsmlWellboreReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__WitsmlWellboreReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__WitsmlWellboreReference(struct soap *soap, resqml20__WitsmlWellboreReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__WitsmlWellboreReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractSeismicSurveyFeature(struct soap*, const char*, int, const resqml20__AbstractSeismicSurveyFeature *, const char*);
SOAP_FMAC3 resqml20__AbstractSeismicSurveyFeature * SOAP_FMAC4 soap_in_resqml20__AbstractSeismicSurveyFeature(struct soap*, const char*, resqml20__AbstractSeismicSurveyFeature *, const char*);
SOAP_FMAC1 resqml20__AbstractSeismicSurveyFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSeismicSurveyFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractSeismicSurveyFeature * soap_new_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractSeismicSurveyFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractSeismicSurveyFeature * soap_new_req_resqml20__AbstractSeismicSurveyFeature(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractSeismicSurveyFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSeismicSurveyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__AbstractSeismicSurveyFeature * soap_new_set_resqml20__AbstractSeismicSurveyFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractSeismicSurveyFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSeismicSurveyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, resqml20__AbstractSeismicSurveyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicSurveyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature ? "resqml20:AbstractSeismicSurveyFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, const char *URL, resqml20__AbstractSeismicSurveyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicSurveyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature ? "resqml20:AbstractSeismicSurveyFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, const char *URL, resqml20__AbstractSeismicSurveyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicSurveyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature ? "resqml20:AbstractSeismicSurveyFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, const char *URL, resqml20__AbstractSeismicSurveyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicSurveyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature ? "resqml20:AbstractSeismicSurveyFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractSeismicSurveyFeature * SOAP_FMAC4 soap_get_resqml20__AbstractSeismicSurveyFeature(struct soap*, resqml20__AbstractSeismicSurveyFeature *, const char*, const char*);

inline int soap_read_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, resqml20__AbstractSeismicSurveyFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractSeismicSurveyFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, const char *URL, resqml20__AbstractSeismicSurveyFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractSeismicSurveyFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractSeismicSurveyFeature(struct soap *soap, resqml20__AbstractSeismicSurveyFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractSeismicSurveyFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, const char*, int, const resqml20__obj_USCORESeismicLatticeFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESeismicLatticeFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, const char*, resqml20__obj_USCORESeismicLatticeFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESeismicLatticeFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESeismicLatticeFeature * soap_new_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESeismicLatticeFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESeismicLatticeFeature * soap_new_req_resqml20__obj_USCORESeismicLatticeFeature(
	struct soap *soap,
	ULONG64 CrosslineCount,
	LONG64 CrosslineIndexIncrement,
	LONG64 FirstCrosslineIndex,
	LONG64 FirstInlineIndex,
	ULONG64 InlineCount,
	LONG64 InlineIndexIncrement,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLatticeFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLatticeFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESeismicLatticeFeature::CrosslineCount = CrosslineCount;
		_p->resqml20__obj_USCORESeismicLatticeFeature::CrosslineIndexIncrement = CrosslineIndexIncrement;
		_p->resqml20__obj_USCORESeismicLatticeFeature::FirstCrosslineIndex = FirstCrosslineIndex;
		_p->resqml20__obj_USCORESeismicLatticeFeature::FirstInlineIndex = FirstInlineIndex;
		_p->resqml20__obj_USCORESeismicLatticeFeature::InlineCount = InlineCount;
		_p->resqml20__obj_USCORESeismicLatticeFeature::InlineIndexIncrement = InlineIndexIncrement;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORESeismicLatticeFeature * soap_new_set_resqml20__obj_USCORESeismicLatticeFeature(
	struct soap *soap,
	ULONG64 CrosslineCount,
	LONG64 CrosslineIndexIncrement,
	LONG64 FirstCrosslineIndex,
	LONG64 FirstInlineIndex,
	ULONG64 InlineCount,
	LONG64 InlineIndexIncrement,
	resqml20__SeismicLatticeSetFeature *IsPartOf,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLatticeFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLatticeFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESeismicLatticeFeature::CrosslineCount = CrosslineCount;
		_p->resqml20__obj_USCORESeismicLatticeFeature::CrosslineIndexIncrement = CrosslineIndexIncrement;
		_p->resqml20__obj_USCORESeismicLatticeFeature::FirstCrosslineIndex = FirstCrosslineIndex;
		_p->resqml20__obj_USCORESeismicLatticeFeature::FirstInlineIndex = FirstInlineIndex;
		_p->resqml20__obj_USCORESeismicLatticeFeature::InlineCount = InlineCount;
		_p->resqml20__obj_USCORESeismicLatticeFeature::InlineIndexIncrement = InlineIndexIncrement;
		_p->resqml20__obj_USCORESeismicLatticeFeature::IsPartOf = IsPartOf;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature ? "resqml20:obj_SeismicLatticeFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature ? "resqml20:obj_SeismicLatticeFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature ? "resqml20:obj_SeismicLatticeFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLatticeFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature ? "resqml20:obj_SeismicLatticeFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESeismicLatticeFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, resqml20__obj_USCORESeismicLatticeFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, resqml20__obj_USCORESeismicLatticeFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESeismicLatticeFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLatticeFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLatticeFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESeismicLatticeFeature(struct soap *soap, resqml20__obj_USCORESeismicLatticeFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLatticeFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESeismicLineFeature(struct soap*, const char*, int, const resqml20__obj_USCORESeismicLineFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESeismicLineFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCORESeismicLineFeature(struct soap*, const char*, resqml20__obj_USCORESeismicLineFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESeismicLineFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLineFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESeismicLineFeature * soap_new_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESeismicLineFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESeismicLineFeature * soap_new_req_resqml20__obj_USCORESeismicLineFeature(
	struct soap *soap,
	LONG64 FirstTraceIndex,
	ULONG64 TraceCount,
	LONG64 TraceIndexIncrement,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLineFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLineFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESeismicLineFeature::FirstTraceIndex = FirstTraceIndex;
		_p->resqml20__obj_USCORESeismicLineFeature::TraceCount = TraceCount;
		_p->resqml20__obj_USCORESeismicLineFeature::TraceIndexIncrement = TraceIndexIncrement;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORESeismicLineFeature * soap_new_set_resqml20__obj_USCORESeismicLineFeature(
	struct soap *soap,
	LONG64 FirstTraceIndex,
	ULONG64 TraceCount,
	LONG64 TraceIndexIncrement,
	eml20__DataObjectReference *IsPartOf,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLineFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLineFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESeismicLineFeature::FirstTraceIndex = FirstTraceIndex;
		_p->resqml20__obj_USCORESeismicLineFeature::TraceCount = TraceCount;
		_p->resqml20__obj_USCORESeismicLineFeature::TraceIndexIncrement = TraceIndexIncrement;
		_p->resqml20__obj_USCORESeismicLineFeature::IsPartOf = IsPartOf;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature ? "resqml20:obj_SeismicLineFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature ? "resqml20:obj_SeismicLineFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature ? "resqml20:obj_SeismicLineFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature ? "resqml20:obj_SeismicLineFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESeismicLineFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCORESeismicLineFeature(struct soap*, resqml20__obj_USCORESeismicLineFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, resqml20__obj_USCORESeismicLineFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESeismicLineFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLineFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESeismicLineFeature(struct soap *soap, resqml20__obj_USCORESeismicLineFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLineFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREWellboreFeature(struct soap*, const char*, int, const resqml20__obj_USCOREWellboreFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREWellboreFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREWellboreFeature(struct soap*, const char*, resqml20__obj_USCOREWellboreFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREWellboreFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREWellboreFeature * soap_new_resqml20__obj_USCOREWellboreFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREWellboreFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREWellboreFeature * soap_new_req_resqml20__obj_USCOREWellboreFeature(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREWellboreFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREWellboreFeature * soap_new_set_resqml20__obj_USCOREWellboreFeature(
	struct soap *soap,
	resqml20__WitsmlWellboreReference *WitsmlWellbore,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREWellboreFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreFeature::WitsmlWellbore = WitsmlWellbore;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREWellboreFeature(struct soap *soap, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature ? "resqml20:obj_WellboreFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREWellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature ? "resqml20:obj_WellboreFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREWellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature ? "resqml20:obj_WellboreFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREWellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature ? "resqml20:obj_WellboreFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREWellboreFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREWellboreFeature(struct soap*, resqml20__obj_USCOREWellboreFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREWellboreFeature(struct soap *soap, resqml20__obj_USCOREWellboreFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREWellboreFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREWellboreFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREWellboreFeature(struct soap *soap, resqml20__obj_USCOREWellboreFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, const char*, int, const resqml20__obj_USCORESeismicLineSetFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESeismicLineSetFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, const char*, resqml20__obj_USCORESeismicLineSetFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESeismicLineSetFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESeismicLineSetFeature * soap_new_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESeismicLineSetFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESeismicLineSetFeature * soap_new_req_resqml20__obj_USCORESeismicLineSetFeature(
	struct soap *soap,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLineSetFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLineSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORESeismicLineSetFeature * soap_new_set_resqml20__obj_USCORESeismicLineSetFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESeismicLineSetFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESeismicLineSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature ? "resqml20:obj_SeismicLineSetFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature ? "resqml20:obj_SeismicLineSetFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature ? "resqml20:obj_SeismicLineSetFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SeismicLineSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature ? "resqml20:obj_SeismicLineSetFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESeismicLineSetFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, resqml20__obj_USCORESeismicLineSetFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, resqml20__obj_USCORESeismicLineSetFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESeismicLineSetFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, const char *URL, resqml20__obj_USCORESeismicLineSetFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLineSetFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESeismicLineSetFeature(struct soap *soap, resqml20__obj_USCORESeismicLineSetFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESeismicLineSetFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SeismicLatticeSetFeature(struct soap*, const char*, int, const resqml20__SeismicLatticeSetFeature *, const char*);
SOAP_FMAC3 resqml20__SeismicLatticeSetFeature * SOAP_FMAC4 soap_in_resqml20__SeismicLatticeSetFeature(struct soap*, const char*, resqml20__SeismicLatticeSetFeature *, const char*);
SOAP_FMAC1 resqml20__SeismicLatticeSetFeature * SOAP_FMAC2 soap_instantiate_resqml20__SeismicLatticeSetFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SeismicLatticeSetFeature * soap_new_resqml20__SeismicLatticeSetFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SeismicLatticeSetFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__SeismicLatticeSetFeature * soap_new_req_resqml20__SeismicLatticeSetFeature(
	struct soap *soap,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__SeismicLatticeSetFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__SeismicLatticeSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__SeismicLatticeSetFeature * soap_new_set_resqml20__SeismicLatticeSetFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__SeismicLatticeSetFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__SeismicLatticeSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__SeismicLatticeSetFeature(struct soap *soap, resqml20__SeismicLatticeSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature ? "resqml20:SeismicLatticeSetFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SeismicLatticeSetFeature(struct soap *soap, const char *URL, resqml20__SeismicLatticeSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature ? "resqml20:SeismicLatticeSetFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SeismicLatticeSetFeature(struct soap *soap, const char *URL, resqml20__SeismicLatticeSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature ? "resqml20:SeismicLatticeSetFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SeismicLatticeSetFeature(struct soap *soap, const char *URL, resqml20__SeismicLatticeSetFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SeismicLatticeSetFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature ? "resqml20:SeismicLatticeSetFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SeismicLatticeSetFeature * SOAP_FMAC4 soap_get_resqml20__SeismicLatticeSetFeature(struct soap*, resqml20__SeismicLatticeSetFeature *, const char*, const char*);

inline int soap_read_resqml20__SeismicLatticeSetFeature(struct soap *soap, resqml20__SeismicLatticeSetFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SeismicLatticeSetFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SeismicLatticeSetFeature(struct soap *soap, const char *URL, resqml20__SeismicLatticeSetFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SeismicLatticeSetFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SeismicLatticeSetFeature(struct soap *soap, resqml20__SeismicLatticeSetFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SeismicLatticeSetFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREFrontierFeature(struct soap*, const char*, int, const resqml20__obj_USCOREFrontierFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREFrontierFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREFrontierFeature(struct soap*, const char*, resqml20__obj_USCOREFrontierFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREFrontierFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFrontierFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREFrontierFeature * soap_new_resqml20__obj_USCOREFrontierFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREFrontierFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREFrontierFeature * soap_new_req_resqml20__obj_USCOREFrontierFeature(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREFrontierFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFrontierFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREFrontierFeature * soap_new_set_resqml20__obj_USCOREFrontierFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREFrontierFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFrontierFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREFrontierFeature(struct soap *soap, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature ? "resqml20:obj_FrontierFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREFrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature ? "resqml20:obj_FrontierFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREFrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature ? "resqml20:obj_FrontierFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREFrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FrontierFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature ? "resqml20:obj_FrontierFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREFrontierFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREFrontierFeature(struct soap*, resqml20__obj_USCOREFrontierFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREFrontierFeature(struct soap *soap, resqml20__obj_USCOREFrontierFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREFrontierFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREFrontierFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFrontierFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFrontierFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREFrontierFeature(struct soap *soap, resqml20__obj_USCOREFrontierFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFrontierFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractTechnicalFeature(struct soap*, const char*, int, const resqml20__AbstractTechnicalFeature *, const char*);
SOAP_FMAC3 resqml20__AbstractTechnicalFeature * SOAP_FMAC4 soap_in_resqml20__AbstractTechnicalFeature(struct soap*, const char*, resqml20__AbstractTechnicalFeature *, const char*);
SOAP_FMAC1 resqml20__AbstractTechnicalFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractTechnicalFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractTechnicalFeature * soap_new_resqml20__AbstractTechnicalFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractTechnicalFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractTechnicalFeature * soap_new_req_resqml20__AbstractTechnicalFeature(
	struct soap *soap,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractTechnicalFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractTechnicalFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractTechnicalFeature * soap_new_set_resqml20__AbstractTechnicalFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractTechnicalFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractTechnicalFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractTechnicalFeature(struct soap *soap, resqml20__AbstractTechnicalFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTechnicalFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature ? "resqml20:AbstractTechnicalFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractTechnicalFeature(struct soap *soap, const char *URL, resqml20__AbstractTechnicalFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTechnicalFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature ? "resqml20:AbstractTechnicalFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractTechnicalFeature(struct soap *soap, const char *URL, resqml20__AbstractTechnicalFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTechnicalFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature ? "resqml20:AbstractTechnicalFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractTechnicalFeature(struct soap *soap, const char *URL, resqml20__AbstractTechnicalFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTechnicalFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature ? "resqml20:AbstractTechnicalFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractTechnicalFeature * SOAP_FMAC4 soap_get_resqml20__AbstractTechnicalFeature(struct soap*, resqml20__AbstractTechnicalFeature *, const char*, const char*);

inline int soap_read_resqml20__AbstractTechnicalFeature(struct soap *soap, resqml20__AbstractTechnicalFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractTechnicalFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractTechnicalFeature(struct soap *soap, const char *URL, resqml20__AbstractTechnicalFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractTechnicalFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractTechnicalFeature(struct soap *soap, resqml20__AbstractTechnicalFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractTechnicalFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactRepresentationReference(struct soap*, const char*, int, const resqml20__ContactRepresentationReference *, const char*);
SOAP_FMAC3 resqml20__ContactRepresentationReference * SOAP_FMAC4 soap_in_resqml20__ContactRepresentationReference(struct soap*, const char*, resqml20__ContactRepresentationReference *, const char*);
SOAP_FMAC1 resqml20__ContactRepresentationReference * SOAP_FMAC2 soap_instantiate_resqml20__ContactRepresentationReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ContactRepresentationReference * soap_new_resqml20__ContactRepresentationReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ContactRepresentationReference(soap, n, NULL, NULL, NULL);
}

inline resqml20__ContactRepresentationReference * soap_new_req_resqml20__ContactRepresentationReference(
	struct soap *soap,
	eml20__DataObjectReference *Representation,
	ULONG64 Index__1)
{
	resqml20__ContactRepresentationReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactRepresentationReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactRepresentationReference::Representation = Representation;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline resqml20__ContactRepresentationReference * soap_new_set_resqml20__ContactRepresentationReference(
	struct soap *soap,
	eml20__DataObjectReference *Representation,
	ULONG64 Index__1)
{
	resqml20__ContactRepresentationReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactRepresentationReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactRepresentationReference::Representation = Representation;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline int soap_write_resqml20__ContactRepresentationReference(struct soap *soap, resqml20__ContactRepresentationReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactRepresentationReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference ? "resqml20:ContactRepresentationReference" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactRepresentationReference(struct soap *soap, const char *URL, resqml20__ContactRepresentationReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactRepresentationReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference ? "resqml20:ContactRepresentationReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactRepresentationReference(struct soap *soap, const char *URL, resqml20__ContactRepresentationReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactRepresentationReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference ? "resqml20:ContactRepresentationReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactRepresentationReference(struct soap *soap, const char *URL, resqml20__ContactRepresentationReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactRepresentationReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference ? "resqml20:ContactRepresentationReference" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ContactRepresentationReference * SOAP_FMAC4 soap_get_resqml20__ContactRepresentationReference(struct soap*, resqml20__ContactRepresentationReference *, const char*, const char*);

inline int soap_read_resqml20__ContactRepresentationReference(struct soap *soap, resqml20__ContactRepresentationReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactRepresentationReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactRepresentationReference(struct soap *soap, const char *URL, resqml20__ContactRepresentationReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactRepresentationReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactRepresentationReference(struct soap *soap, resqml20__ContactRepresentationReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactRepresentationReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactIdentity(struct soap*, const char*, int, const resqml20__ContactIdentity *, const char*);
SOAP_FMAC3 resqml20__ContactIdentity * SOAP_FMAC4 soap_in_resqml20__ContactIdentity(struct soap*, const char*, resqml20__ContactIdentity *, const char*);
SOAP_FMAC1 resqml20__ContactIdentity * SOAP_FMAC2 soap_instantiate_resqml20__ContactIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ContactIdentity * soap_new_resqml20__ContactIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ContactIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml20__ContactIdentity * soap_new_req_resqml20__ContactIdentity(
	struct soap *soap,
	enum resqml20__IdentityKind IdentityKind,
	resqml20__AbstractIntegerArray *ListOfContactRepresentations)
{
	resqml20__ContactIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactIdentity::IdentityKind = IdentityKind;
		_p->resqml20__ContactIdentity::ListOfContactRepresentations = ListOfContactRepresentations;
	}
	return _p;
}

inline resqml20__ContactIdentity * soap_new_set_resqml20__ContactIdentity(
	struct soap *soap,
	enum resqml20__IdentityKind IdentityKind,
	resqml20__AbstractIntegerArray *ListOfContactRepresentations,
	resqml20__AbstractIntegerArray *ListOfIdenticalNodes)
{
	resqml20__ContactIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactIdentity::IdentityKind = IdentityKind;
		_p->resqml20__ContactIdentity::ListOfContactRepresentations = ListOfContactRepresentations;
		_p->resqml20__ContactIdentity::ListOfIdenticalNodes = ListOfIdenticalNodes;
	}
	return _p;
}

inline int soap_write_resqml20__ContactIdentity(struct soap *soap, resqml20__ContactIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity ? "resqml20:ContactIdentity" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactIdentity(struct soap *soap, const char *URL, resqml20__ContactIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity ? "resqml20:ContactIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactIdentity(struct soap *soap, const char *URL, resqml20__ContactIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity ? "resqml20:ContactIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactIdentity(struct soap *soap, const char *URL, resqml20__ContactIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity ? "resqml20:ContactIdentity" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ContactIdentity * SOAP_FMAC4 soap_get_resqml20__ContactIdentity(struct soap*, resqml20__ContactIdentity *, const char*, const char*);

inline int soap_read_resqml20__ContactIdentity(struct soap *soap, resqml20__ContactIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactIdentity(struct soap *soap, const char *URL, resqml20__ContactIdentity *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactIdentity(struct soap *soap, resqml20__ContactIdentity *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__OrientedMacroFace(struct soap*, const char*, int, const resqml20__OrientedMacroFace *, const char*);
SOAP_FMAC3 resqml20__OrientedMacroFace * SOAP_FMAC4 soap_in_resqml20__OrientedMacroFace(struct soap*, const char*, resqml20__OrientedMacroFace *, const char*);
SOAP_FMAC1 resqml20__OrientedMacroFace * SOAP_FMAC2 soap_instantiate_resqml20__OrientedMacroFace(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__OrientedMacroFace * soap_new_resqml20__OrientedMacroFace(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__OrientedMacroFace(soap, n, NULL, NULL, NULL);
}

inline resqml20__OrientedMacroFace * soap_new_req_resqml20__OrientedMacroFace(
	struct soap *soap,
	ULONG64 PatchIndexOfRepresentation,
	ULONG64 RepresentationIndex,
	bool SideIsPlus)
{
	resqml20__OrientedMacroFace *_p = gsoap_resqml2_0_1::soap_new_resqml20__OrientedMacroFace(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__OrientedMacroFace::PatchIndexOfRepresentation = PatchIndexOfRepresentation;
		_p->resqml20__OrientedMacroFace::RepresentationIndex = RepresentationIndex;
		_p->resqml20__OrientedMacroFace::SideIsPlus = SideIsPlus;
	}
	return _p;
}

inline resqml20__OrientedMacroFace * soap_new_set_resqml20__OrientedMacroFace(
	struct soap *soap,
	ULONG64 PatchIndexOfRepresentation,
	ULONG64 RepresentationIndex,
	bool SideIsPlus)
{
	resqml20__OrientedMacroFace *_p = gsoap_resqml2_0_1::soap_new_resqml20__OrientedMacroFace(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__OrientedMacroFace::PatchIndexOfRepresentation = PatchIndexOfRepresentation;
		_p->resqml20__OrientedMacroFace::RepresentationIndex = RepresentationIndex;
		_p->resqml20__OrientedMacroFace::SideIsPlus = SideIsPlus;
	}
	return _p;
}

inline int soap_write_resqml20__OrientedMacroFace(struct soap *soap, resqml20__OrientedMacroFace const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrientedMacroFace", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace ? "resqml20:OrientedMacroFace" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__OrientedMacroFace(struct soap *soap, const char *URL, resqml20__OrientedMacroFace const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrientedMacroFace", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace ? "resqml20:OrientedMacroFace" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__OrientedMacroFace(struct soap *soap, const char *URL, resqml20__OrientedMacroFace const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrientedMacroFace", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace ? "resqml20:OrientedMacroFace" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__OrientedMacroFace(struct soap *soap, const char *URL, resqml20__OrientedMacroFace const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OrientedMacroFace", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace ? "resqml20:OrientedMacroFace" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__OrientedMacroFace * SOAP_FMAC4 soap_get_resqml20__OrientedMacroFace(struct soap*, resqml20__OrientedMacroFace *, const char*, const char*);

inline int soap_read_resqml20__OrientedMacroFace(struct soap *soap, resqml20__OrientedMacroFace *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__OrientedMacroFace(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__OrientedMacroFace(struct soap *soap, const char *URL, resqml20__OrientedMacroFace *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__OrientedMacroFace(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__OrientedMacroFace(struct soap *soap, resqml20__OrientedMacroFace *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__OrientedMacroFace(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PolylineSetPatch(struct soap*, const char*, int, const resqml20__PolylineSetPatch *, const char*);
SOAP_FMAC3 resqml20__PolylineSetPatch * SOAP_FMAC4 soap_in_resqml20__PolylineSetPatch(struct soap*, const char*, resqml20__PolylineSetPatch *, const char*);
SOAP_FMAC1 resqml20__PolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml20__PolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PolylineSetPatch * soap_new_resqml20__PolylineSetPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PolylineSetPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__PolylineSetPatch * soap_new_req_resqml20__PolylineSetPatch(
	struct soap *soap,
	resqml20__AbstractBooleanArray *ClosedPolylines,
	resqml20__AbstractIntegerArray *NodeCountPerPolyline,
	resqml20__PointGeometry *Geometry,
	ULONG64 PatchIndex__1)
{
	resqml20__PolylineSetPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__PolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml20__PolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml20__PolylineSetPatch::Geometry = Geometry;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__PolylineSetPatch * soap_new_set_resqml20__PolylineSetPatch(
	struct soap *soap,
	resqml20__AbstractBooleanArray *ClosedPolylines,
	resqml20__AbstractIntegerArray *NodeCountPerPolyline,
	resqml20__PointGeometry *Geometry,
	ULONG64 PatchIndex__1)
{
	resqml20__PolylineSetPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__PolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml20__PolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml20__PolylineSetPatch::Geometry = Geometry;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__PolylineSetPatch(struct soap *soap, resqml20__PolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch ? "resqml20:PolylineSetPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PolylineSetPatch(struct soap *soap, const char *URL, resqml20__PolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch ? "resqml20:PolylineSetPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PolylineSetPatch(struct soap *soap, const char *URL, resqml20__PolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch ? "resqml20:PolylineSetPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PolylineSetPatch(struct soap *soap, const char *URL, resqml20__PolylineSetPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PolylineSetPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch ? "resqml20:PolylineSetPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PolylineSetPatch * SOAP_FMAC4 soap_get_resqml20__PolylineSetPatch(struct soap*, resqml20__PolylineSetPatch *, const char*, const char*);

inline int soap_read_resqml20__PolylineSetPatch(struct soap *soap, resqml20__PolylineSetPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PolylineSetPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PolylineSetPatch(struct soap *soap, const char *URL, resqml20__PolylineSetPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PolylineSetPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PolylineSetPatch(struct soap *soap, resqml20__PolylineSetPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PolylineSetPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREGrid2dSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, const char*, resqml20__obj_USCOREGrid2dSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGrid2dSetRepresentation * soap_new_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGrid2dSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGrid2dSetRepresentation * soap_new_req_resqml20__obj_USCOREGrid2dSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__Grid2dPatch *> & Grid2dPatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGrid2dSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGrid2dSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGrid2dSetRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGrid2dSetRepresentation * soap_new_set_resqml20__obj_USCOREGrid2dSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__Grid2dPatch *> & Grid2dPatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	const std::vector<resqml20__PatchBoundaries *> & Boundaries__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGrid2dSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGrid2dSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGrid2dSetRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->resqml20__AbstractSurfaceRepresentation::Boundaries = Boundaries__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation ? "resqml20:obj_Grid2dSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation ? "resqml20:obj_Grid2dSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation ? "resqml20:obj_Grid2dSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation ? "resqml20:obj_Grid2dSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, resqml20__obj_USCOREGrid2dSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGrid2dSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGrid2dSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGrid2dSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Grid2dPatch(struct soap*, const char*, int, const resqml20__Grid2dPatch *, const char*);
SOAP_FMAC3 resqml20__Grid2dPatch * SOAP_FMAC4 soap_in_resqml20__Grid2dPatch(struct soap*, const char*, resqml20__Grid2dPatch *, const char*);
SOAP_FMAC1 resqml20__Grid2dPatch * SOAP_FMAC2 soap_instantiate_resqml20__Grid2dPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Grid2dPatch * soap_new_resqml20__Grid2dPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Grid2dPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__Grid2dPatch * soap_new_req_resqml20__Grid2dPatch(
	struct soap *soap,
	ULONG64 FastestAxisCount,
	ULONG64 SlowestAxisCount,
	resqml20__PointGeometry *Geometry,
	ULONG64 PatchIndex__1)
{
	resqml20__Grid2dPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__Grid2dPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Grid2dPatch::FastestAxisCount = FastestAxisCount;
		_p->resqml20__Grid2dPatch::SlowestAxisCount = SlowestAxisCount;
		_p->resqml20__Grid2dPatch::Geometry = Geometry;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__Grid2dPatch * soap_new_set_resqml20__Grid2dPatch(
	struct soap *soap,
	ULONG64 FastestAxisCount,
	ULONG64 SlowestAxisCount,
	resqml20__PointGeometry *Geometry,
	ULONG64 PatchIndex__1)
{
	resqml20__Grid2dPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__Grid2dPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Grid2dPatch::FastestAxisCount = FastestAxisCount;
		_p->resqml20__Grid2dPatch::SlowestAxisCount = SlowestAxisCount;
		_p->resqml20__Grid2dPatch::Geometry = Geometry;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__Grid2dPatch(struct soap *soap, resqml20__Grid2dPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch ? "resqml20:Grid2dPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Grid2dPatch(struct soap *soap, const char *URL, resqml20__Grid2dPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch ? "resqml20:Grid2dPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Grid2dPatch(struct soap *soap, const char *URL, resqml20__Grid2dPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch ? "resqml20:Grid2dPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Grid2dPatch(struct soap *soap, const char *URL, resqml20__Grid2dPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Grid2dPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch ? "resqml20:Grid2dPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Grid2dPatch * SOAP_FMAC4 soap_get_resqml20__Grid2dPatch(struct soap*, resqml20__Grid2dPatch *, const char*, const char*);

inline int soap_read_resqml20__Grid2dPatch(struct soap *soap, resqml20__Grid2dPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Grid2dPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Grid2dPatch(struct soap *soap, const char *URL, resqml20__Grid2dPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Grid2dPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Grid2dPatch(struct soap *soap, resqml20__Grid2dPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Grid2dPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractSurfaceRepresentation(struct soap*, const char*, int, const resqml20__AbstractSurfaceRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractSurfaceRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractSurfaceRepresentation(struct soap*, const char*, resqml20__AbstractSurfaceRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractSurfaceRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSurfaceRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractSurfaceRepresentation * soap_new_resqml20__AbstractSurfaceRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractSurfaceRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractSurfaceRepresentation * soap_new_req_resqml20__AbstractSurfaceRepresentation(
	struct soap *soap,
	enum resqml20__SurfaceRole SurfaceRole,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractSurfaceRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSurfaceRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractSurfaceRepresentation * soap_new_set_resqml20__AbstractSurfaceRepresentation(
	struct soap *soap,
	enum resqml20__SurfaceRole SurfaceRole,
	const std::vector<resqml20__PatchBoundaries *> & Boundaries,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractSurfaceRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSurfaceRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole;
		_p->resqml20__AbstractSurfaceRepresentation::Boundaries = Boundaries;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractSurfaceRepresentation(struct soap *soap, resqml20__AbstractSurfaceRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation ? "resqml20:AbstractSurfaceRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractSurfaceRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation ? "resqml20:AbstractSurfaceRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractSurfaceRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation ? "resqml20:AbstractSurfaceRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractSurfaceRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation ? "resqml20:AbstractSurfaceRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractSurfaceRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractSurfaceRepresentation(struct soap*, resqml20__AbstractSurfaceRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractSurfaceRepresentation(struct soap *soap, resqml20__AbstractSurfaceRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractSurfaceRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractSurfaceRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractSurfaceRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractSurfaceRepresentation(struct soap *soap, resqml20__AbstractSurfaceRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractSurfaceRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PatchBoundaries(struct soap*, const char*, int, const resqml20__PatchBoundaries *, const char*);
SOAP_FMAC3 resqml20__PatchBoundaries * SOAP_FMAC4 soap_in_resqml20__PatchBoundaries(struct soap*, const char*, resqml20__PatchBoundaries *, const char*);
SOAP_FMAC1 resqml20__PatchBoundaries * SOAP_FMAC2 soap_instantiate_resqml20__PatchBoundaries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PatchBoundaries * soap_new_resqml20__PatchBoundaries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PatchBoundaries(soap, n, NULL, NULL, NULL);
}

inline resqml20__PatchBoundaries * soap_new_req_resqml20__PatchBoundaries(
	struct soap *soap,
	ULONG64 ReferencedPatch)
{
	resqml20__PatchBoundaries *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchBoundaries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchBoundaries::ReferencedPatch = ReferencedPatch;
	}
	return _p;
}

inline resqml20__PatchBoundaries * soap_new_set_resqml20__PatchBoundaries(
	struct soap *soap,
	const std::vector<eml20__DataObjectReference *> & InnerRing,
	eml20__DataObjectReference *OuterRing,
	ULONG64 ReferencedPatch)
{
	resqml20__PatchBoundaries *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchBoundaries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchBoundaries::InnerRing = InnerRing;
		_p->resqml20__PatchBoundaries::OuterRing = OuterRing;
		_p->resqml20__PatchBoundaries::ReferencedPatch = ReferencedPatch;
	}
	return _p;
}

inline int soap_write_resqml20__PatchBoundaries(struct soap *soap, resqml20__PatchBoundaries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchBoundaries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries ? "resqml20:PatchBoundaries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PatchBoundaries(struct soap *soap, const char *URL, resqml20__PatchBoundaries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchBoundaries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries ? "resqml20:PatchBoundaries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PatchBoundaries(struct soap *soap, const char *URL, resqml20__PatchBoundaries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchBoundaries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries ? "resqml20:PatchBoundaries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PatchBoundaries(struct soap *soap, const char *URL, resqml20__PatchBoundaries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchBoundaries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries ? "resqml20:PatchBoundaries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PatchBoundaries * SOAP_FMAC4 soap_get_resqml20__PatchBoundaries(struct soap*, resqml20__PatchBoundaries *, const char*, const char*);

inline int soap_read_resqml20__PatchBoundaries(struct soap *soap, resqml20__PatchBoundaries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PatchBoundaries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PatchBoundaries(struct soap *soap, const char *URL, resqml20__PatchBoundaries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PatchBoundaries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PatchBoundaries(struct soap *soap, resqml20__PatchBoundaries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PatchBoundaries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREGrid2dRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGrid2dRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, const char*, resqml20__obj_USCOREGrid2dRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGrid2dRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGrid2dRepresentation * soap_new_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGrid2dRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGrid2dRepresentation * soap_new_req_resqml20__obj_USCOREGrid2dRepresentation(
	struct soap *soap,
	resqml20__Grid2dPatch *Grid2dPatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGrid2dRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGrid2dRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGrid2dRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGrid2dRepresentation * soap_new_set_resqml20__obj_USCOREGrid2dRepresentation(
	struct soap *soap,
	resqml20__Grid2dPatch *Grid2dPatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	const std::vector<resqml20__PatchBoundaries *> & Boundaries__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGrid2dRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGrid2dRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGrid2dRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->resqml20__AbstractSurfaceRepresentation::Boundaries = Boundaries__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation ? "resqml20:obj_Grid2dRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation ? "resqml20:obj_Grid2dRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation ? "resqml20:obj_Grid2dRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_Grid2dRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation ? "resqml20:obj_Grid2dRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGrid2dRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, resqml20__obj_USCOREGrid2dRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGrid2dRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGrid2dRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGrid2dRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGrid2dRepresentation(struct soap *soap, resqml20__obj_USCOREGrid2dRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGrid2dRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPolylineRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREPolylineRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPolylineRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPolylineRepresentation(struct soap*, const char*, resqml20__obj_USCOREPolylineRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPolylineRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPolylineRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPolylineRepresentation * soap_new_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPolylineRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPolylineRepresentation * soap_new_req_resqml20__obj_USCOREPolylineRepresentation(
	struct soap *soap,
	bool IsClosed,
	resqml20__NodePatch *NodePatch,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPolylineRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPolylineRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPolylineRepresentation::IsClosed = IsClosed;
		_p->resqml20__obj_USCOREPolylineRepresentation::NodePatch = NodePatch;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREPolylineRepresentation * soap_new_set_resqml20__obj_USCOREPolylineRepresentation(
	struct soap *soap,
	enum resqml20__LineRole *LineRole,
	bool IsClosed,
	resqml20__NodePatch *NodePatch,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPolylineRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPolylineRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPolylineRepresentation::LineRole = LineRole;
		_p->resqml20__obj_USCOREPolylineRepresentation::IsClosed = IsClosed;
		_p->resqml20__obj_USCOREPolylineRepresentation::NodePatch = NodePatch;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation ? "resqml20:obj_PolylineRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation ? "resqml20:obj_PolylineRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation ? "resqml20:obj_PolylineRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation ? "resqml20:obj_PolylineRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPolylineRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPolylineRepresentation(struct soap*, resqml20__obj_USCOREPolylineRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPolylineRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPolylineRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPolylineRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPolylineRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TrianglePatch(struct soap*, const char*, int, const resqml20__TrianglePatch *, const char*);
SOAP_FMAC3 resqml20__TrianglePatch * SOAP_FMAC4 soap_in_resqml20__TrianglePatch(struct soap*, const char*, resqml20__TrianglePatch *, const char*);
SOAP_FMAC1 resqml20__TrianglePatch * SOAP_FMAC2 soap_instantiate_resqml20__TrianglePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TrianglePatch * soap_new_resqml20__TrianglePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TrianglePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__TrianglePatch * soap_new_req_resqml20__TrianglePatch(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml20__AbstractIntegerArray *Triangles,
	resqml20__PointGeometry *Geometry,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__TrianglePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__TrianglePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TrianglePatch::NodeCount = NodeCount;
		_p->resqml20__TrianglePatch::Triangles = Triangles;
		_p->resqml20__TrianglePatch::Geometry = Geometry;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__TrianglePatch * soap_new_set_resqml20__TrianglePatch(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml20__AbstractIntegerArray *Triangles,
	resqml20__PointGeometry *Geometry,
	const std::vector<resqml20__EdgePatch *> & SplitEdgePatch,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__TrianglePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__TrianglePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TrianglePatch::NodeCount = NodeCount;
		_p->resqml20__TrianglePatch::Triangles = Triangles;
		_p->resqml20__TrianglePatch::Geometry = Geometry;
		_p->resqml20__TrianglePatch::SplitEdgePatch = SplitEdgePatch;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__TrianglePatch(struct soap *soap, resqml20__TrianglePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TrianglePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch ? "resqml20:TrianglePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TrianglePatch(struct soap *soap, const char *URL, resqml20__TrianglePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TrianglePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch ? "resqml20:TrianglePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TrianglePatch(struct soap *soap, const char *URL, resqml20__TrianglePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TrianglePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch ? "resqml20:TrianglePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TrianglePatch(struct soap *soap, const char *URL, resqml20__TrianglePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TrianglePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch ? "resqml20:TrianglePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TrianglePatch * SOAP_FMAC4 soap_get_resqml20__TrianglePatch(struct soap*, resqml20__TrianglePatch *, const char*, const char*);

inline int soap_read_resqml20__TrianglePatch(struct soap *soap, resqml20__TrianglePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TrianglePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TrianglePatch(struct soap *soap, const char *URL, resqml20__TrianglePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TrianglePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TrianglePatch(struct soap *soap, resqml20__TrianglePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TrianglePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, const char*, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_req_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous__2,
	const std::vector<eml20__DataObjectReference *> & Representation__2,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__2;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_set_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml20__SealedContactRepresentationPart *> & SealedContactRepresentation,
	const std::vector<resqml20__ContactIdentity *> & ContactIdentity__1,
	bool IsHomogeneous__2,
	const std::vector<eml20__DataObjectReference *> & Representation__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESealedSurfaceFrameworkRepresentation::SealedContactRepresentation = SealedContactRepresentation;
		_p->resqml20__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__2;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation ? "resqml20:obj_SealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation ? "resqml20:obj_SealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation ? "resqml20:obj_SealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation ? "resqml20:obj_SealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__NodePatch(struct soap*, const char*, int, const resqml20__NodePatch *, const char*);
SOAP_FMAC3 resqml20__NodePatch * SOAP_FMAC4 soap_in_resqml20__NodePatch(struct soap*, const char*, resqml20__NodePatch *, const char*);
SOAP_FMAC1 resqml20__NodePatch * SOAP_FMAC2 soap_instantiate_resqml20__NodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__NodePatch * soap_new_resqml20__NodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__NodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__NodePatch * soap_new_req_resqml20__NodePatch(
	struct soap *soap,
	resqml20__PointGeometry *Geometry,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__NodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__NodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NodePatch::Geometry = Geometry;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__NodePatch * soap_new_set_resqml20__NodePatch(
	struct soap *soap,
	resqml20__PointGeometry *Geometry,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__NodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__NodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NodePatch::Geometry = Geometry;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__NodePatch(struct soap *soap, resqml20__NodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch ? "resqml20:NodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__NodePatch(struct soap *soap, const char *URL, resqml20__NodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch ? "resqml20:NodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__NodePatch(struct soap *soap, const char *URL, resqml20__NodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch ? "resqml20:NodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__NodePatch(struct soap *soap, const char *URL, resqml20__NodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch ? "resqml20:NodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__NodePatch * SOAP_FMAC4 soap_get_resqml20__NodePatch(struct soap*, resqml20__NodePatch *, const char*, const char*);

inline int soap_read_resqml20__NodePatch(struct soap *soap, resqml20__NodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__NodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__NodePatch(struct soap *soap, const char *URL, resqml20__NodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__NodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__NodePatch(struct soap *soap, resqml20__NodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__NodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREPolylineSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPolylineSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, const char*, resqml20__obj_USCOREPolylineSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPolylineSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPolylineSetRepresentation * soap_new_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPolylineSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPolylineSetRepresentation * soap_new_req_resqml20__obj_USCOREPolylineSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__PolylineSetPatch *> & LinePatch,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPolylineSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPolylineSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPolylineSetRepresentation::LinePatch = LinePatch;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREPolylineSetRepresentation * soap_new_set_resqml20__obj_USCOREPolylineSetRepresentation(
	struct soap *soap,
	enum resqml20__LineRole *LineRole,
	const std::vector<resqml20__PolylineSetPatch *> & LinePatch,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPolylineSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPolylineSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPolylineSetRepresentation::LineRole = LineRole;
		_p->resqml20__obj_USCOREPolylineSetRepresentation::LinePatch = LinePatch;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation ? "resqml20:obj_PolylineSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation ? "resqml20:obj_PolylineSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation ? "resqml20:obj_PolylineSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PolylineSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation ? "resqml20:obj_PolylineSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPolylineSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, resqml20__obj_USCOREPolylineSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPolylineSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPolylineSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPolylineSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPolylineSetRepresentation(struct soap *soap, resqml20__obj_USCOREPolylineSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPolylineSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__VolumeShell(struct soap*, const char*, int, const resqml20__VolumeShell *, const char*);
SOAP_FMAC3 resqml20__VolumeShell * SOAP_FMAC4 soap_in_resqml20__VolumeShell(struct soap*, const char*, resqml20__VolumeShell *, const char*);
SOAP_FMAC1 resqml20__VolumeShell * SOAP_FMAC2 soap_instantiate_resqml20__VolumeShell(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__VolumeShell * soap_new_resqml20__VolumeShell(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__VolumeShell(soap, n, NULL, NULL, NULL);
}

inline resqml20__VolumeShell * soap_new_req_resqml20__VolumeShell(
	struct soap *soap,
	const std::string& ShellUid,
	const std::vector<resqml20__OrientedMacroFace *> & MacroFaces)
{
	resqml20__VolumeShell *_p = gsoap_resqml2_0_1::soap_new_resqml20__VolumeShell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VolumeShell::ShellUid = ShellUid;
		_p->resqml20__VolumeShell::MacroFaces = MacroFaces;
	}
	return _p;
}

inline resqml20__VolumeShell * soap_new_set_resqml20__VolumeShell(
	struct soap *soap,
	const std::string& ShellUid,
	const std::vector<resqml20__OrientedMacroFace *> & MacroFaces)
{
	resqml20__VolumeShell *_p = gsoap_resqml2_0_1::soap_new_resqml20__VolumeShell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VolumeShell::ShellUid = ShellUid;
		_p->resqml20__VolumeShell::MacroFaces = MacroFaces;
	}
	return _p;
}

inline int soap_write_resqml20__VolumeShell(struct soap *soap, resqml20__VolumeShell const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeShell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell ? "resqml20:VolumeShell" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__VolumeShell(struct soap *soap, const char *URL, resqml20__VolumeShell const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeShell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell ? "resqml20:VolumeShell" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__VolumeShell(struct soap *soap, const char *URL, resqml20__VolumeShell const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeShell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell ? "resqml20:VolumeShell" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__VolumeShell(struct soap *soap, const char *URL, resqml20__VolumeShell const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeShell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell ? "resqml20:VolumeShell" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__VolumeShell * SOAP_FMAC4 soap_get_resqml20__VolumeShell(struct soap*, resqml20__VolumeShell *, const char*, const char*);

inline int soap_read_resqml20__VolumeShell(struct soap *soap, resqml20__VolumeShell *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__VolumeShell(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__VolumeShell(struct soap *soap, const char *URL, resqml20__VolumeShell *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__VolumeShell(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__VolumeShell(struct soap *soap, resqml20__VolumeShell *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__VolumeShell(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__VolumeRegion(struct soap*, const char*, int, const resqml20__VolumeRegion *, const char*);
SOAP_FMAC3 resqml20__VolumeRegion * SOAP_FMAC4 soap_in_resqml20__VolumeRegion(struct soap*, const char*, resqml20__VolumeRegion *, const char*);
SOAP_FMAC1 resqml20__VolumeRegion * SOAP_FMAC2 soap_instantiate_resqml20__VolumeRegion(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__VolumeRegion * soap_new_resqml20__VolumeRegion(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__VolumeRegion(soap, n, NULL, NULL, NULL);
}

inline resqml20__VolumeRegion * soap_new_req_resqml20__VolumeRegion(
	struct soap *soap,
	ULONG64 PatchIndex,
	eml20__DataObjectReference *Represents,
	resqml20__VolumeShell *ExternalShell)
{
	resqml20__VolumeRegion *_p = gsoap_resqml2_0_1::soap_new_resqml20__VolumeRegion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VolumeRegion::PatchIndex = PatchIndex;
		_p->resqml20__VolumeRegion::Represents = Represents;
		_p->resqml20__VolumeRegion::ExternalShell = ExternalShell;
	}
	return _p;
}

inline resqml20__VolumeRegion * soap_new_set_resqml20__VolumeRegion(
	struct soap *soap,
	ULONG64 PatchIndex,
	const std::vector<resqml20__VolumeShell *> & InternalShells,
	eml20__DataObjectReference *Represents,
	resqml20__VolumeShell *ExternalShell)
{
	resqml20__VolumeRegion *_p = gsoap_resqml2_0_1::soap_new_resqml20__VolumeRegion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VolumeRegion::PatchIndex = PatchIndex;
		_p->resqml20__VolumeRegion::InternalShells = InternalShells;
		_p->resqml20__VolumeRegion::Represents = Represents;
		_p->resqml20__VolumeRegion::ExternalShell = ExternalShell;
	}
	return _p;
}

inline int soap_write_resqml20__VolumeRegion(struct soap *soap, resqml20__VolumeRegion const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeRegion", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion ? "resqml20:VolumeRegion" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__VolumeRegion(struct soap *soap, const char *URL, resqml20__VolumeRegion const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeRegion", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion ? "resqml20:VolumeRegion" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__VolumeRegion(struct soap *soap, const char *URL, resqml20__VolumeRegion const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeRegion", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion ? "resqml20:VolumeRegion" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__VolumeRegion(struct soap *soap, const char *URL, resqml20__VolumeRegion const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VolumeRegion", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion ? "resqml20:VolumeRegion" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__VolumeRegion * SOAP_FMAC4 soap_get_resqml20__VolumeRegion(struct soap*, resqml20__VolumeRegion *, const char*, const char*);

inline int soap_read_resqml20__VolumeRegion(struct soap *soap, resqml20__VolumeRegion *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__VolumeRegion(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__VolumeRegion(struct soap *soap, const char *URL, resqml20__VolumeRegion *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__VolumeRegion(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__VolumeRegion(struct soap *soap, resqml20__VolumeRegion *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__VolumeRegion(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__EdgePatch(struct soap*, const char*, int, const resqml20__EdgePatch *, const char*);
SOAP_FMAC3 resqml20__EdgePatch * SOAP_FMAC4 soap_in_resqml20__EdgePatch(struct soap*, const char*, resqml20__EdgePatch *, const char*);
SOAP_FMAC1 resqml20__EdgePatch * SOAP_FMAC2 soap_instantiate_resqml20__EdgePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__EdgePatch * soap_new_resqml20__EdgePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__EdgePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__EdgePatch * soap_new_req_resqml20__EdgePatch(
	struct soap *soap,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__EdgePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__EdgePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__EdgePatch * soap_new_set_resqml20__EdgePatch(
	struct soap *soap,
	resqml20__AbstractIntegerArray *SplitEdges,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__EdgePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__EdgePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__EdgePatch::SplitEdges = SplitEdges;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__EdgePatch(struct soap *soap, resqml20__EdgePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EdgePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch ? "resqml20:EdgePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__EdgePatch(struct soap *soap, const char *URL, resqml20__EdgePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EdgePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch ? "resqml20:EdgePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__EdgePatch(struct soap *soap, const char *URL, resqml20__EdgePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EdgePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch ? "resqml20:EdgePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__EdgePatch(struct soap *soap, const char *URL, resqml20__EdgePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:EdgePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch ? "resqml20:EdgePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__EdgePatch * SOAP_FMAC4 soap_get_resqml20__EdgePatch(struct soap*, resqml20__EdgePatch *, const char*, const char*);

inline int soap_read_resqml20__EdgePatch(struct soap *soap, resqml20__EdgePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__EdgePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__EdgePatch(struct soap *soap, const char *URL, resqml20__EdgePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__EdgePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__EdgePatch(struct soap *soap, resqml20__EdgePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__EdgePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORESealedVolumeFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, const char*, resqml20__obj_USCORESealedVolumeFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_req_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(
	struct soap *soap,
	eml20__DataObjectReference *BasedOn,
	const std::vector<resqml20__VolumeShell *> & Shells,
	const std::vector<resqml20__VolumeRegion *> & Regions,
	bool IsHomogeneous__1,
	const std::vector<eml20__DataObjectReference *> & Representation__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORESealedVolumeFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::BasedOn = BasedOn;
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::Shells = Shells;
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::Regions = Regions;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_set_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(
	struct soap *soap,
	eml20__DataObjectReference *BasedOn,
	const std::vector<resqml20__VolumeShell *> & Shells,
	const std::vector<resqml20__VolumeRegion *> & Regions,
	bool IsHomogeneous__1,
	const std::vector<eml20__DataObjectReference *> & Representation__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORESealedVolumeFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::BasedOn = BasedOn;
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::Shells = Shells;
		_p->resqml20__obj_USCORESealedVolumeFrameworkRepresentation::Regions = Regions;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation ? "resqml20:obj_SealedVolumeFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation ? "resqml20:obj_SealedVolumeFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation ? "resqml20:obj_SealedVolumeFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SealedVolumeFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation ? "resqml20:obj_SealedVolumeFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, resqml20__obj_USCORESealedVolumeFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedVolumeFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESealedVolumeFrameworkRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORESealedVolumeFrameworkRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPointSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREPointSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPointSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPointSetRepresentation(struct soap*, const char*, resqml20__obj_USCOREPointSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPointSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPointSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPointSetRepresentation * soap_new_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPointSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPointSetRepresentation * soap_new_req_resqml20__obj_USCOREPointSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__NodePatch *> & NodePatch,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPointSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPointSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPointSetRepresentation::NodePatch = NodePatch;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREPointSetRepresentation * soap_new_set_resqml20__obj_USCOREPointSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__NodePatch *> & NodePatch,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPointSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPointSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPointSetRepresentation::NodePatch = NodePatch;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation ? "resqml20:obj_PointSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation ? "resqml20:obj_PointSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation ? "resqml20:obj_PointSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation ? "resqml20:obj_PointSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPointSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPointSetRepresentation(struct soap*, resqml20__obj_USCOREPointSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, resqml20__obj_USCOREPointSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPointSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPointSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPointSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPointSetRepresentation(struct soap *soap, resqml20__obj_USCOREPointSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPointSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml20__AbstractSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, const char*, resqml20__AbstractSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractSurfaceFrameworkRepresentation * soap_new_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractSurfaceFrameworkRepresentation * soap_new_req_resqml20__AbstractSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous__1,
	const std::vector<eml20__DataObjectReference *> & Representation__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__AbstractSurfaceFrameworkRepresentation * soap_new_set_resqml20__AbstractSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml20__ContactIdentity *> & ContactIdentity,
	bool IsHomogeneous__1,
	const std::vector<eml20__DataObjectReference *> & Representation__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, resqml20__AbstractSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation ? "resqml20:AbstractSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation ? "resqml20:AbstractSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation ? "resqml20:AbstractSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation ? "resqml20:AbstractSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, resqml20__AbstractSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, resqml20__AbstractSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__AbstractSurfaceFrameworkRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap *soap, resqml20__AbstractSurfaceFrameworkRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractContactRepresentationPart(struct soap*, const char*, int, const resqml20__AbstractContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml20__AbstractContactRepresentationPart * SOAP_FMAC4 soap_in_resqml20__AbstractContactRepresentationPart(struct soap*, const char*, resqml20__AbstractContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml20__AbstractContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__AbstractContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractContactRepresentationPart * soap_new_resqml20__AbstractContactRepresentationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractContactRepresentationPart * soap_new_req_resqml20__AbstractContactRepresentationPart(
	struct soap *soap,
	ULONG64 Index)
{
	resqml20__AbstractContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractContactRepresentationPart::Index = Index;
	}
	return _p;
}

inline resqml20__AbstractContactRepresentationPart * soap_new_set_resqml20__AbstractContactRepresentationPart(
	struct soap *soap,
	ULONG64 Index)
{
	resqml20__AbstractContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractContactRepresentationPart::Index = Index;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractContactRepresentationPart(struct soap *soap, resqml20__AbstractContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart ? "resqml20:AbstractContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractContactRepresentationPart(struct soap *soap, const char *URL, resqml20__AbstractContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart ? "resqml20:AbstractContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractContactRepresentationPart(struct soap *soap, const char *URL, resqml20__AbstractContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart ? "resqml20:AbstractContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractContactRepresentationPart(struct soap *soap, const char *URL, resqml20__AbstractContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart ? "resqml20:AbstractContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractContactRepresentationPart * SOAP_FMAC4 soap_get_resqml20__AbstractContactRepresentationPart(struct soap*, resqml20__AbstractContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml20__AbstractContactRepresentationPart(struct soap *soap, resqml20__AbstractContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractContactRepresentationPart(struct soap *soap, const char *URL, resqml20__AbstractContactRepresentationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractContactRepresentationPart(struct soap *soap, resqml20__AbstractContactRepresentationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREPlaneSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPlaneSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, const char*, resqml20__obj_USCOREPlaneSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPlaneSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPlaneSetRepresentation * soap_new_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPlaneSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPlaneSetRepresentation * soap_new_req_resqml20__obj_USCOREPlaneSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__AbstractPlaneGeometry *> & Planes,
	enum resqml20__SurfaceRole SurfaceRole__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREPlaneSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPlaneSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPlaneSetRepresentation::Planes = Planes;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREPlaneSetRepresentation * soap_new_set_resqml20__obj_USCOREPlaneSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__AbstractPlaneGeometry *> & Planes,
	enum resqml20__SurfaceRole SurfaceRole__1,
	const std::vector<resqml20__PatchBoundaries *> & Boundaries__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREPlaneSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPlaneSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPlaneSetRepresentation::Planes = Planes;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->resqml20__AbstractSurfaceRepresentation::Boundaries = Boundaries__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation ? "resqml20:obj_PlaneSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation ? "resqml20:obj_PlaneSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation ? "resqml20:obj_PlaneSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PlaneSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation ? "resqml20:obj_PlaneSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPlaneSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, resqml20__obj_USCOREPlaneSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, resqml20__obj_USCOREPlaneSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPlaneSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREPlaneSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPlaneSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPlaneSetRepresentation(struct soap *soap, resqml20__obj_USCOREPlaneSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPlaneSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactPatch(struct soap*, const char*, int, const resqml20__ContactPatch *, const char*);
SOAP_FMAC3 resqml20__ContactPatch * SOAP_FMAC4 soap_in_resqml20__ContactPatch(struct soap*, const char*, resqml20__ContactPatch *, const char*);
SOAP_FMAC1 resqml20__ContactPatch * SOAP_FMAC2 soap_instantiate_resqml20__ContactPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ContactPatch * soap_new_resqml20__ContactPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ContactPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__ContactPatch * soap_new_req_resqml20__ContactPatch(
	struct soap *soap,
	ULONG64 RepresentationIndex,
	resqml20__AbstractIntegerArray *SupportingRepresentationNodes,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__ContactPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactPatch::RepresentationIndex = RepresentationIndex;
		_p->resqml20__ContactPatch::SupportingRepresentationNodes = SupportingRepresentationNodes;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__ContactPatch * soap_new_set_resqml20__ContactPatch(
	struct soap *soap,
	ULONG64 RepresentationIndex,
	resqml20__AbstractIntegerArray *SupportingRepresentationNodes,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__ContactPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactPatch::RepresentationIndex = RepresentationIndex;
		_p->resqml20__ContactPatch::SupportingRepresentationNodes = SupportingRepresentationNodes;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__ContactPatch(struct soap *soap, resqml20__ContactPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch ? "resqml20:ContactPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactPatch(struct soap *soap, const char *URL, resqml20__ContactPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch ? "resqml20:ContactPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactPatch(struct soap *soap, const char *URL, resqml20__ContactPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch ? "resqml20:ContactPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactPatch(struct soap *soap, const char *URL, resqml20__ContactPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch ? "resqml20:ContactPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ContactPatch * SOAP_FMAC4 soap_get_resqml20__ContactPatch(struct soap*, resqml20__ContactPatch *, const char*, const char*);

inline int soap_read_resqml20__ContactPatch(struct soap *soap, resqml20__ContactPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactPatch(struct soap *soap, const char *URL, resqml20__ContactPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactPatch(struct soap *soap, resqml20__ContactPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SealedContactRepresentationPart(struct soap*, const char*, int, const resqml20__SealedContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml20__SealedContactRepresentationPart * SOAP_FMAC4 soap_in_resqml20__SealedContactRepresentationPart(struct soap*, const char*, resqml20__SealedContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml20__SealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__SealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SealedContactRepresentationPart * soap_new_resqml20__SealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__SealedContactRepresentationPart * soap_new_req_resqml20__SealedContactRepresentationPart(
	struct soap *soap,
	enum resqml20__IdentityKind IdentityKind,
	const std::vector<resqml20__ContactPatch *> & Contact,
	ULONG64 Index__1)
{
	resqml20__SealedContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__SealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SealedContactRepresentationPart::IdentityKind = IdentityKind;
		_p->resqml20__SealedContactRepresentationPart::Contact = Contact;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline resqml20__SealedContactRepresentationPart * soap_new_set_resqml20__SealedContactRepresentationPart(
	struct soap *soap,
	resqml20__AbstractIntegerArray *IdenticalNodeIndices,
	enum resqml20__IdentityKind IdentityKind,
	const std::vector<resqml20__ContactPatch *> & Contact,
	ULONG64 Index__1)
{
	resqml20__SealedContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__SealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SealedContactRepresentationPart::IdenticalNodeIndices = IdenticalNodeIndices;
		_p->resqml20__SealedContactRepresentationPart::IdentityKind = IdentityKind;
		_p->resqml20__SealedContactRepresentationPart::Contact = Contact;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline int soap_write_resqml20__SealedContactRepresentationPart(struct soap *soap, resqml20__SealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart ? "resqml20:SealedContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__SealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart ? "resqml20:SealedContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__SealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart ? "resqml20:SealedContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__SealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart ? "resqml20:SealedContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SealedContactRepresentationPart * SOAP_FMAC4 soap_get_resqml20__SealedContactRepresentationPart(struct soap*, resqml20__SealedContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml20__SealedContactRepresentationPart(struct soap *soap, resqml20__SealedContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SealedContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__SealedContactRepresentationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SealedContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SealedContactRepresentationPart(struct soap *soap, resqml20__SealedContactRepresentationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SealedContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__NonSealedContactRepresentationPart(struct soap*, const char*, int, const resqml20__NonSealedContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml20__NonSealedContactRepresentationPart * SOAP_FMAC4 soap_in_resqml20__NonSealedContactRepresentationPart(struct soap*, const char*, resqml20__NonSealedContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml20__NonSealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__NonSealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__NonSealedContactRepresentationPart * soap_new_resqml20__NonSealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__NonSealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__NonSealedContactRepresentationPart * soap_new_req_resqml20__NonSealedContactRepresentationPart(
	struct soap *soap,
	resqml20__AbstractGeometry *Geometry,
	ULONG64 Index__1)
{
	resqml20__NonSealedContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__NonSealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NonSealedContactRepresentationPart::Geometry = Geometry;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline resqml20__NonSealedContactRepresentationPart * soap_new_set_resqml20__NonSealedContactRepresentationPart(
	struct soap *soap,
	const std::vector<resqml20__ContactPatch *> & Contact,
	resqml20__AbstractGeometry *Geometry,
	ULONG64 Index__1)
{
	resqml20__NonSealedContactRepresentationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__NonSealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NonSealedContactRepresentationPart::Contact = Contact;
		_p->resqml20__NonSealedContactRepresentationPart::Geometry = Geometry;
		_p->resqml20__AbstractContactRepresentationPart::Index = Index__1;
	}
	return _p;
}

inline int soap_write_resqml20__NonSealedContactRepresentationPart(struct soap *soap, resqml20__NonSealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart ? "resqml20:NonSealedContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__NonSealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__NonSealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart ? "resqml20:NonSealedContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__NonSealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__NonSealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart ? "resqml20:NonSealedContactRepresentationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__NonSealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__NonSealedContactRepresentationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NonSealedContactRepresentationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart ? "resqml20:NonSealedContactRepresentationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__NonSealedContactRepresentationPart * SOAP_FMAC4 soap_get_resqml20__NonSealedContactRepresentationPart(struct soap*, resqml20__NonSealedContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml20__NonSealedContactRepresentationPart(struct soap *soap, resqml20__NonSealedContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__NonSealedContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__NonSealedContactRepresentationPart(struct soap *soap, const char *URL, resqml20__NonSealedContactRepresentationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__NonSealedContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__NonSealedContactRepresentationPart(struct soap *soap, resqml20__NonSealedContactRepresentationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__NonSealedContactRepresentationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORETriangulatedSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, const char*, resqml20__obj_USCORETriangulatedSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORETriangulatedSetRepresentation * soap_new_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORETriangulatedSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORETriangulatedSetRepresentation * soap_new_req_resqml20__obj_USCORETriangulatedSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__TrianglePatch *> & TrianglePatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORETriangulatedSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETriangulatedSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETriangulatedSetRepresentation::TrianglePatch = TrianglePatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORETriangulatedSetRepresentation * soap_new_set_resqml20__obj_USCORETriangulatedSetRepresentation(
	struct soap *soap,
	const std::vector<resqml20__TrianglePatch *> & TrianglePatch,
	enum resqml20__SurfaceRole SurfaceRole__1,
	const std::vector<resqml20__PatchBoundaries *> & Boundaries__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORETriangulatedSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETriangulatedSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETriangulatedSetRepresentation::TrianglePatch = TrianglePatch;
		_p->resqml20__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole__1;
		_p->resqml20__AbstractSurfaceRepresentation::Boundaries = Boundaries__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation ? "resqml20:obj_TriangulatedSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation ? "resqml20:obj_TriangulatedSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation ? "resqml20:obj_TriangulatedSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TriangulatedSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation ? "resqml20:obj_TriangulatedSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, resqml20__obj_USCORETriangulatedSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, resqml20__obj_USCORETriangulatedSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORETriangulatedSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETriangulatedSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETriangulatedSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap *soap, resqml20__obj_USCORETriangulatedSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETriangulatedSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, const char*, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_req_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous__2,
	const std::vector<eml20__DataObjectReference *> & Representation__2,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__2;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_set_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml20__AbstractContactRepresentationPart *> & NonSealedContactRepresentation,
	const std::vector<resqml20__ContactIdentity *> & ContactIdentity__1,
	bool IsHomogeneous__2,
	const std::vector<eml20__DataObjectReference *> & Representation__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation::NonSealedContactRepresentation = NonSealedContactRepresentation;
		_p->resqml20__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity__1;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous__2;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation ? "resqml20:obj_NonSealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation ? "resqml20:obj_NonSealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation ? "resqml20:obj_NonSealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_NonSealedSurfaceFrameworkRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation ? "resqml20:obj_NonSealedSurfaceFrameworkRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREWellboreMarkerFrameRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, const char*, resqml20__obj_USCOREWellboreMarkerFrameRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_req_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(
	struct soap *soap,
	const std::vector<resqml20__WellboreMarker *> & WellboreMarker,
	ULONG64 NodeCount__1,
	resqml20__AbstractDoubleArray *NodeMd__1,
	eml20__DataObjectReference *Trajectory__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREWellboreMarkerFrameRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreMarkerFrameRepresentation::WellboreMarker = WellboreMarker;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_set_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(
	struct soap *soap,
	const std::vector<resqml20__WellboreMarker *> & WellboreMarker,
	ULONG64 NodeCount__1,
	resqml20__AbstractDoubleArray *NodeMd__1,
	eml20__DataObjectReference *WitsmlLogReference__1,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphiUnits__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	eml20__DataObjectReference *Trajectory__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREWellboreMarkerFrameRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreMarkerFrameRepresentation::WellboreMarker = WellboreMarker;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation ? "resqml20:obj_WellboreMarkerFrameRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation ? "resqml20:obj_WellboreMarkerFrameRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation ? "resqml20:obj_WellboreMarkerFrameRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreMarkerFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation ? "resqml20:obj_WellboreMarkerFrameRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, resqml20__obj_USCOREWellboreMarkerFrameRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreMarkerFrameRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreMarkerFrameRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreMarkerFrameRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__WellboreMarker(struct soap*, const char*, int, const resqml20__WellboreMarker *, const char*);
SOAP_FMAC3 resqml20__WellboreMarker * SOAP_FMAC4 soap_in_resqml20__WellboreMarker(struct soap*, const char*, resqml20__WellboreMarker *, const char*);
SOAP_FMAC1 resqml20__WellboreMarker * SOAP_FMAC2 soap_instantiate_resqml20__WellboreMarker(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__WellboreMarker * soap_new_resqml20__WellboreMarker(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__WellboreMarker(soap, n, NULL, NULL, NULL);
}

inline resqml20__WellboreMarker * soap_new_req_resqml20__WellboreMarker(
	struct soap *soap,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__WellboreMarker *_p = gsoap_resqml2_0_1::soap_new_resqml20__WellboreMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__WellboreMarker * soap_new_set_resqml20__WellboreMarker(
	struct soap *soap,
	enum resqml20__FluidContact *FluidContact,
	enum resqml20__FluidMarker *FluidMarker,
	enum resqml20__GeologicBoundaryKind *GeologicBoundaryKind,
	eml20__DataObjectReference *WitsmlFormationMarker,
	eml20__DataObjectReference *Interpretation,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__WellboreMarker *_p = gsoap_resqml2_0_1::soap_new_resqml20__WellboreMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__WellboreMarker::FluidContact = FluidContact;
		_p->resqml20__WellboreMarker::FluidMarker = FluidMarker;
		_p->resqml20__WellboreMarker::GeologicBoundaryKind = GeologicBoundaryKind;
		_p->resqml20__WellboreMarker::WitsmlFormationMarker = WitsmlFormationMarker;
		_p->resqml20__WellboreMarker::Interpretation = Interpretation;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__WellboreMarker(struct soap *soap, resqml20__WellboreMarker const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarker", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker ? "resqml20:WellboreMarker" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__WellboreMarker(struct soap *soap, const char *URL, resqml20__WellboreMarker const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarker", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker ? "resqml20:WellboreMarker" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__WellboreMarker(struct soap *soap, const char *URL, resqml20__WellboreMarker const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarker", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker ? "resqml20:WellboreMarker" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__WellboreMarker(struct soap *soap, const char *URL, resqml20__WellboreMarker const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreMarker", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker ? "resqml20:WellboreMarker" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__WellboreMarker * SOAP_FMAC4 soap_get_resqml20__WellboreMarker(struct soap*, resqml20__WellboreMarker *, const char*, const char*);

inline int soap_read_resqml20__WellboreMarker(struct soap *soap, resqml20__WellboreMarker *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__WellboreMarker(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__WellboreMarker(struct soap *soap, const char *URL, resqml20__WellboreMarker *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__WellboreMarker(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__WellboreMarker(struct soap *soap, resqml20__WellboreMarker *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__WellboreMarker(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREMdDatum(struct soap*, const char*, int, const resqml20__obj_USCOREMdDatum *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREMdDatum * SOAP_FMAC4 soap_in_resqml20__obj_USCOREMdDatum(struct soap*, const char*, resqml20__obj_USCOREMdDatum *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREMdDatum * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREMdDatum(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREMdDatum * soap_new_resqml20__obj_USCOREMdDatum(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREMdDatum(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREMdDatum * soap_new_req_resqml20__obj_USCOREMdDatum(
	struct soap *soap,
	resqml20__Point3d *Location,
	enum resqml20__MdReference MdReference,
	eml20__DataObjectReference *LocalCrs,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREMdDatum *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREMdDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREMdDatum::Location = Location;
		_p->resqml20__obj_USCOREMdDatum::MdReference = MdReference;
		_p->resqml20__obj_USCOREMdDatum::LocalCrs = LocalCrs;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREMdDatum * soap_new_set_resqml20__obj_USCOREMdDatum(
	struct soap *soap,
	resqml20__Point3d *Location,
	enum resqml20__MdReference MdReference,
	eml20__DataObjectReference *LocalCrs,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREMdDatum *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREMdDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREMdDatum::Location = Location;
		_p->resqml20__obj_USCOREMdDatum::MdReference = MdReference;
		_p->resqml20__obj_USCOREMdDatum::LocalCrs = LocalCrs;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREMdDatum(struct soap *soap, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum ? "resqml20:obj_MdDatum" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREMdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum ? "resqml20:obj_MdDatum" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREMdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum ? "resqml20:obj_MdDatum" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREMdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_MdDatum", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum ? "resqml20:obj_MdDatum" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREMdDatum * SOAP_FMAC4 soap_get_resqml20__obj_USCOREMdDatum(struct soap*, resqml20__obj_USCOREMdDatum *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREMdDatum(struct soap *soap, resqml20__obj_USCOREMdDatum *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREMdDatum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREMdDatum(struct soap *soap, const char *URL, resqml20__obj_USCOREMdDatum *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREMdDatum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREMdDatum(struct soap *soap, resqml20__obj_USCOREMdDatum *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREMdDatum(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREWellboreTrajectoryRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, const char*, resqml20__obj_USCOREWellboreTrajectoryRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREWellboreTrajectoryRepresentation * soap_new_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREWellboreTrajectoryRepresentation * soap_new_req_resqml20__obj_USCOREWellboreTrajectoryRepresentation(
	struct soap *soap,
	double StartMd,
	double FinishMd,
	enum eml20__LengthUom MdUom,
	eml20__DataObjectReference *MdDatum,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreTrajectoryRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::StartMd = StartMd;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::FinishMd = FinishMd;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::MdUom = MdUom;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::MdDatum = MdDatum;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREWellboreTrajectoryRepresentation * soap_new_set_resqml20__obj_USCOREWellboreTrajectoryRepresentation(
	struct soap *soap,
	double StartMd,
	double FinishMd,
	enum eml20__LengthUom MdUom,
	enum resqml20__MdDomain *MdDomain,
	eml20__DataObjectReference *WitsmlTrajectory,
	resqml20__AbstractParametricLineGeometry *Geometry,
	eml20__DataObjectReference *MdDatum,
	eml20__DataObjectReference *DeviationSurvey,
	resqml20__WellboreTrajectoryParentIntersection *ParentIntersection,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreTrajectoryRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::StartMd = StartMd;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::FinishMd = FinishMd;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::MdUom = MdUom;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::MdDomain = MdDomain;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::WitsmlTrajectory = WitsmlTrajectory;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::Geometry = Geometry;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::MdDatum = MdDatum;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::DeviationSurvey = DeviationSurvey;
		_p->resqml20__obj_USCOREWellboreTrajectoryRepresentation::ParentIntersection = ParentIntersection;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation ? "resqml20:obj_WellboreTrajectoryRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation ? "resqml20:obj_WellboreTrajectoryRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation ? "resqml20:obj_WellboreTrajectoryRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreTrajectoryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation ? "resqml20:obj_WellboreTrajectoryRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, resqml20__obj_USCOREWellboreTrajectoryRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreTrajectoryRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreTrajectoryRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreTrajectoryRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreTrajectoryRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREWellboreFrameRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, const char*, resqml20__obj_USCOREWellboreFrameRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREWellboreFrameRepresentation * soap_new_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREWellboreFrameRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREWellboreFrameRepresentation * soap_new_req_resqml20__obj_USCOREWellboreFrameRepresentation(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml20__AbstractDoubleArray *NodeMd,
	eml20__DataObjectReference *Trajectory,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreFrameRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREWellboreFrameRepresentation * soap_new_set_resqml20__obj_USCOREWellboreFrameRepresentation(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml20__AbstractDoubleArray *NodeMd,
	eml20__DataObjectReference *WitsmlLogReference,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphiUnits,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits,
	eml20__DataObjectReference *Trajectory,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreFrameRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation ? "resqml20:obj_WellboreFrameRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation ? "resqml20:obj_WellboreFrameRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation ? "resqml20:obj_WellboreFrameRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreFrameRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation ? "resqml20:obj_WellboreFrameRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, resqml20__obj_USCOREWellboreFrameRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreFrameRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREWellboreFrameRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreFrameRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreFrameRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap *soap, resqml20__obj_USCOREWellboreFrameRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreFrameRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREDeviationSurveyRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, const char*, resqml20__obj_USCOREDeviationSurveyRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREDeviationSurveyRepresentation * soap_new_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREDeviationSurveyRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREDeviationSurveyRepresentation * soap_new_req_resqml20__obj_USCOREDeviationSurveyRepresentation(
	struct soap *soap,
	bool IsFinal,
	ULONG64 StationCount,
	enum eml20__LengthUom MdUom,
	resqml20__AbstractDoubleArray *Mds,
	resqml20__Point3d *FirstStationLocation,
	enum eml20__PlaneAngleUom AngleUom,
	resqml20__AbstractDoubleArray *Azimuths,
	resqml20__AbstractDoubleArray *Inclinations,
	eml20__DataObjectReference *MdDatum,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREDeviationSurveyRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDeviationSurveyRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::IsFinal = IsFinal;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::StationCount = StationCount;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::MdUom = MdUom;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Mds = Mds;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::FirstStationLocation = FirstStationLocation;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::AngleUom = AngleUom;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Azimuths = Azimuths;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Inclinations = Inclinations;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::MdDatum = MdDatum;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREDeviationSurveyRepresentation * soap_new_set_resqml20__obj_USCOREDeviationSurveyRepresentation(
	struct soap *soap,
	eml20__DataObjectReference *WitsmlDeviationSurvey,
	bool IsFinal,
	ULONG64 StationCount,
	enum eml20__LengthUom MdUom,
	resqml20__AbstractDoubleArray *Mds,
	resqml20__Point3d *FirstStationLocation,
	enum eml20__PlaneAngleUom AngleUom,
	resqml20__AbstractDoubleArray *Azimuths,
	resqml20__AbstractDoubleArray *Inclinations,
	eml20__DataObjectReference *MdDatum,
	resqml20__TimeIndex *TimeIndex,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREDeviationSurveyRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDeviationSurveyRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::WitsmlDeviationSurvey = WitsmlDeviationSurvey;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::IsFinal = IsFinal;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::StationCount = StationCount;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::MdUom = MdUom;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Mds = Mds;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::FirstStationLocation = FirstStationLocation;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::AngleUom = AngleUom;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Azimuths = Azimuths;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::Inclinations = Inclinations;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::MdDatum = MdDatum;
		_p->resqml20__obj_USCOREDeviationSurveyRepresentation::TimeIndex = TimeIndex;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation ? "resqml20:obj_DeviationSurveyRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation ? "resqml20:obj_DeviationSurveyRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation ? "resqml20:obj_DeviationSurveyRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DeviationSurveyRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation ? "resqml20:obj_DeviationSurveyRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, resqml20__obj_USCOREDeviationSurveyRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, resqml20__obj_USCOREDeviationSurveyRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREDeviationSurveyRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREDeviationSurveyRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDeviationSurveyRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, resqml20__obj_USCOREDeviationSurveyRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDeviationSurveyRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__WellboreTrajectoryParentIntersection(struct soap*, const char*, int, const resqml20__WellboreTrajectoryParentIntersection *, const char*);
SOAP_FMAC3 resqml20__WellboreTrajectoryParentIntersection * SOAP_FMAC4 soap_in_resqml20__WellboreTrajectoryParentIntersection(struct soap*, const char*, resqml20__WellboreTrajectoryParentIntersection *, const char*);
SOAP_FMAC1 resqml20__WellboreTrajectoryParentIntersection * SOAP_FMAC2 soap_instantiate_resqml20__WellboreTrajectoryParentIntersection(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__WellboreTrajectoryParentIntersection * soap_new_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__WellboreTrajectoryParentIntersection(soap, n, NULL, NULL, NULL);
}

inline resqml20__WellboreTrajectoryParentIntersection * soap_new_req_resqml20__WellboreTrajectoryParentIntersection(
	struct soap *soap,
	double KickoffMd,
	double ParentMd,
	eml20__DataObjectReference *ParentTrajectory)
{
	resqml20__WellboreTrajectoryParentIntersection *_p = gsoap_resqml2_0_1::soap_new_resqml20__WellboreTrajectoryParentIntersection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__WellboreTrajectoryParentIntersection::KickoffMd = KickoffMd;
		_p->resqml20__WellboreTrajectoryParentIntersection::ParentMd = ParentMd;
		_p->resqml20__WellboreTrajectoryParentIntersection::ParentTrajectory = ParentTrajectory;
	}
	return _p;
}

inline resqml20__WellboreTrajectoryParentIntersection * soap_new_set_resqml20__WellboreTrajectoryParentIntersection(
	struct soap *soap,
	double KickoffMd,
	double ParentMd,
	eml20__DataObjectReference *ParentTrajectory)
{
	resqml20__WellboreTrajectoryParentIntersection *_p = gsoap_resqml2_0_1::soap_new_resqml20__WellboreTrajectoryParentIntersection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__WellboreTrajectoryParentIntersection::KickoffMd = KickoffMd;
		_p->resqml20__WellboreTrajectoryParentIntersection::ParentMd = ParentMd;
		_p->resqml20__WellboreTrajectoryParentIntersection::ParentTrajectory = ParentTrajectory;
	}
	return _p;
}

inline int soap_write_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, resqml20__WellboreTrajectoryParentIntersection const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryParentIntersection", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection ? "resqml20:WellboreTrajectoryParentIntersection" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, const char *URL, resqml20__WellboreTrajectoryParentIntersection const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryParentIntersection", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection ? "resqml20:WellboreTrajectoryParentIntersection" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, const char *URL, resqml20__WellboreTrajectoryParentIntersection const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryParentIntersection", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection ? "resqml20:WellboreTrajectoryParentIntersection" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, const char *URL, resqml20__WellboreTrajectoryParentIntersection const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:WellboreTrajectoryParentIntersection", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection ? "resqml20:WellboreTrajectoryParentIntersection" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__WellboreTrajectoryParentIntersection * SOAP_FMAC4 soap_get_resqml20__WellboreTrajectoryParentIntersection(struct soap*, resqml20__WellboreTrajectoryParentIntersection *, const char*, const char*);

inline int soap_read_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, resqml20__WellboreTrajectoryParentIntersection *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__WellboreTrajectoryParentIntersection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, const char *URL, resqml20__WellboreTrajectoryParentIntersection *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__WellboreTrajectoryParentIntersection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__WellboreTrajectoryParentIntersection(struct soap *soap, resqml20__WellboreTrajectoryParentIntersection *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__WellboreTrajectoryParentIntersection(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREBlockedWellboreRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, const char*, resqml20__obj_USCOREBlockedWellboreRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREBlockedWellboreRepresentation * soap_new_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREBlockedWellboreRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREBlockedWellboreRepresentation * soap_new_req_resqml20__obj_USCOREBlockedWellboreRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml20__AbstractIntegerArray *CellIndices,
	resqml20__AbstractIntegerArray *GridIndices,
	resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml20__DataObjectReference *> & Grid,
	ULONG64 NodeCount__1,
	resqml20__AbstractDoubleArray *NodeMd__1,
	eml20__DataObjectReference *Trajectory__1,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREBlockedWellboreRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBlockedWellboreRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::CellCount = CellCount;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::CellIndices = CellIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::GridIndices = GridIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::Grid = Grid;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREBlockedWellboreRepresentation * soap_new_set_resqml20__obj_USCOREBlockedWellboreRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml20__AbstractIntegerArray *CellIndices,
	resqml20__AbstractIntegerArray *GridIndices,
	resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml20__DataObjectReference *> & Grid,
	ULONG64 NodeCount__1,
	resqml20__AbstractDoubleArray *NodeMd__1,
	eml20__DataObjectReference *WitsmlLogReference__1,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphiUnits__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	eml20__DataObjectReference *Trajectory__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREBlockedWellboreRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBlockedWellboreRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::CellCount = CellCount;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::CellIndices = CellIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::GridIndices = GridIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml20__obj_USCOREBlockedWellboreRepresentation::Grid = Grid;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation ? "resqml20:obj_BlockedWellboreRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation ? "resqml20:obj_BlockedWellboreRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation ? "resqml20:obj_BlockedWellboreRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BlockedWellboreRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation ? "resqml20:obj_BlockedWellboreRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, resqml20__obj_USCOREBlockedWellboreRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, resqml20__obj_USCOREBlockedWellboreRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREBlockedWellboreRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREBlockedWellboreRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBlockedWellboreRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, resqml20__obj_USCOREBlockedWellboreRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBlockedWellboreRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractResqmlDataObject(struct soap*, const char*, int, const resqml20__AbstractResqmlDataObject *, const char*);
SOAP_FMAC3 resqml20__AbstractResqmlDataObject * SOAP_FMAC4 soap_in_resqml20__AbstractResqmlDataObject(struct soap*, const char*, resqml20__AbstractResqmlDataObject *, const char*);
SOAP_FMAC1 resqml20__AbstractResqmlDataObject * SOAP_FMAC2 soap_instantiate_resqml20__AbstractResqmlDataObject(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractResqmlDataObject * soap_new_resqml20__AbstractResqmlDataObject(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractResqmlDataObject(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractResqmlDataObject * soap_new_req_resqml20__AbstractResqmlDataObject(
	struct soap *soap,
	eml20__Citation *Citation__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	resqml20__AbstractResqmlDataObject *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractResqmlDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline resqml20__AbstractResqmlDataObject * soap_new_set_resqml20__AbstractResqmlDataObject(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata,
	eml20__Citation *Citation__1,
	const std::vector<eml20__ObjectAlias *> & Aliases__1,
	eml20__CustomData *CustomData__1,
	const std::string& schemaVersion__1,
	const std::string& uuid__1)
{
	resqml20__AbstractResqmlDataObject *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractResqmlDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__1;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__1;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__1;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__1;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__1;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractResqmlDataObject(struct soap *soap, resqml20__AbstractResqmlDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractResqmlDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject ? "resqml20:AbstractResqmlDataObject" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractResqmlDataObject(struct soap *soap, const char *URL, resqml20__AbstractResqmlDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractResqmlDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject ? "resqml20:AbstractResqmlDataObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractResqmlDataObject(struct soap *soap, const char *URL, resqml20__AbstractResqmlDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractResqmlDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject ? "resqml20:AbstractResqmlDataObject" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractResqmlDataObject(struct soap *soap, const char *URL, resqml20__AbstractResqmlDataObject const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractResqmlDataObject", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject ? "resqml20:AbstractResqmlDataObject" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractResqmlDataObject * SOAP_FMAC4 soap_get_resqml20__AbstractResqmlDataObject(struct soap*, resqml20__AbstractResqmlDataObject *, const char*, const char*);

inline int soap_read_resqml20__AbstractResqmlDataObject(struct soap *soap, resqml20__AbstractResqmlDataObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractResqmlDataObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractResqmlDataObject(struct soap *soap, const char *URL, resqml20__AbstractResqmlDataObject *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractResqmlDataObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractResqmlDataObject(struct soap *soap, resqml20__AbstractResqmlDataObject *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractResqmlDataObject(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORETimeSeries(struct soap*, const char*, int, const resqml20__obj_USCORETimeSeries *, const char*);
SOAP_FMAC3 resqml20__obj_USCORETimeSeries * SOAP_FMAC4 soap_in_resqml20__obj_USCORETimeSeries(struct soap*, const char*, resqml20__obj_USCORETimeSeries *, const char*);
SOAP_FMAC1 resqml20__obj_USCORETimeSeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETimeSeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORETimeSeries * soap_new_resqml20__obj_USCORETimeSeries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORETimeSeries(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORETimeSeries * soap_new_req_resqml20__obj_USCORETimeSeries(
	struct soap *soap,
	const std::vector<resqml20__Timestamp *> & Time,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORETimeSeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETimeSeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETimeSeries::Time = Time;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCORETimeSeries * soap_new_set_resqml20__obj_USCORETimeSeries(
	struct soap *soap,
	const std::vector<resqml20__Timestamp *> & Time,
	resqml20__TimeSeriesParentage *TimeSeriesParentage,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORETimeSeries *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETimeSeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETimeSeries::Time = Time;
		_p->resqml20__obj_USCORETimeSeries::TimeSeriesParentage = TimeSeriesParentage;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORETimeSeries(struct soap *soap, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries ? "resqml20:obj_TimeSeries" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORETimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries ? "resqml20:obj_TimeSeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORETimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries ? "resqml20:obj_TimeSeries" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORETimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TimeSeries", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries ? "resqml20:obj_TimeSeries" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORETimeSeries * SOAP_FMAC4 soap_get_resqml20__obj_USCORETimeSeries(struct soap*, resqml20__obj_USCORETimeSeries *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORETimeSeries(struct soap *soap, resqml20__obj_USCORETimeSeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORETimeSeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORETimeSeries(struct soap *soap, const char *URL, resqml20__obj_USCORETimeSeries *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETimeSeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORETimeSeries(struct soap *soap, resqml20__obj_USCORETimeSeries *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETimeSeries(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, const char*, int, const resqml20__obj_USCORELocalDepth3dCrs *, const char*);
SOAP_FMAC3 resqml20__obj_USCORELocalDepth3dCrs * SOAP_FMAC4 soap_in_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, const char*, resqml20__obj_USCORELocalDepth3dCrs *, const char*);
SOAP_FMAC1 resqml20__obj_USCORELocalDepth3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORELocalDepth3dCrs * soap_new_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORELocalDepth3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORELocalDepth3dCrs * soap_new_req_resqml20__obj_USCORELocalDepth3dCrs(
	struct soap *soap,
	double YOffset__1,
	double ZOffset__1,
	eml20__PlaneAngleMeasure *ArealRotation__1,
	enum eml20__AxisOrder2d ProjectedAxisOrder__1,
	enum eml20__LengthUom ProjectedUom__1,
	enum eml20__LengthUom VerticalUom__1,
	double XOffset__1,
	bool ZIncreasingDownward__1,
	eml20__AbstractVerticalCrs *VerticalCrs__1,
	eml20__AbstractProjectedCrs *ProjectedCrs__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORELocalDepth3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalDepth3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom__1;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCORELocalDepth3dCrs * soap_new_set_resqml20__obj_USCORELocalDepth3dCrs(
	struct soap *soap,
	double YOffset__1,
	double ZOffset__1,
	eml20__PlaneAngleMeasure *ArealRotation__1,
	enum eml20__AxisOrder2d ProjectedAxisOrder__1,
	enum eml20__LengthUom ProjectedUom__1,
	enum eml20__LengthUom VerticalUom__1,
	double XOffset__1,
	bool ZIncreasingDownward__1,
	eml20__AbstractVerticalCrs *VerticalCrs__1,
	eml20__AbstractProjectedCrs *ProjectedCrs__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORELocalDepth3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalDepth3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom__1;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs ? "resqml20:obj_LocalDepth3dCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs ? "resqml20:obj_LocalDepth3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs ? "resqml20:obj_LocalDepth3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalDepth3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs ? "resqml20:obj_LocalDepth3dCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORELocalDepth3dCrs * SOAP_FMAC4 soap_get_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, resqml20__obj_USCORELocalDepth3dCrs *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, resqml20__obj_USCORELocalDepth3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORELocalDepth3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalDepth3dCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalDepth3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORELocalDepth3dCrs(struct soap *soap, resqml20__obj_USCORELocalDepth3dCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalDepth3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__NameValuePair(struct soap*, const char*, int, const resqml20__NameValuePair *, const char*);
SOAP_FMAC3 resqml20__NameValuePair * SOAP_FMAC4 soap_in_resqml20__NameValuePair(struct soap*, const char*, resqml20__NameValuePair *, const char*);
SOAP_FMAC1 resqml20__NameValuePair * SOAP_FMAC2 soap_instantiate_resqml20__NameValuePair(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__NameValuePair * soap_new_resqml20__NameValuePair(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__NameValuePair(soap, n, NULL, NULL, NULL);
}

inline resqml20__NameValuePair * soap_new_req_resqml20__NameValuePair(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{
	resqml20__NameValuePair *_p = gsoap_resqml2_0_1::soap_new_resqml20__NameValuePair(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NameValuePair::Name = Name;
		_p->resqml20__NameValuePair::Value = Value;
	}
	return _p;
}

inline resqml20__NameValuePair * soap_new_set_resqml20__NameValuePair(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{
	resqml20__NameValuePair *_p = gsoap_resqml2_0_1::soap_new_resqml20__NameValuePair(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NameValuePair::Name = Name;
		_p->resqml20__NameValuePair::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml20__NameValuePair(struct soap *soap, resqml20__NameValuePair const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NameValuePair", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair ? "resqml20:NameValuePair" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__NameValuePair(struct soap *soap, const char *URL, resqml20__NameValuePair const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NameValuePair", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair ? "resqml20:NameValuePair" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__NameValuePair(struct soap *soap, const char *URL, resqml20__NameValuePair const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NameValuePair", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair ? "resqml20:NameValuePair" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__NameValuePair(struct soap *soap, const char *URL, resqml20__NameValuePair const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NameValuePair", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair ? "resqml20:NameValuePair" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__NameValuePair * SOAP_FMAC4 soap_get_resqml20__NameValuePair(struct soap*, resqml20__NameValuePair *, const char*, const char*);

inline int soap_read_resqml20__NameValuePair(struct soap *soap, resqml20__NameValuePair *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__NameValuePair(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__NameValuePair(struct soap *soap, const char *URL, resqml20__NameValuePair *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__NameValuePair(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__NameValuePair(struct soap *soap, resqml20__NameValuePair *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__NameValuePair(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ResqmlJaggedArray(struct soap*, const char*, int, const resqml20__ResqmlJaggedArray *, const char*);
SOAP_FMAC3 resqml20__ResqmlJaggedArray * SOAP_FMAC4 soap_in_resqml20__ResqmlJaggedArray(struct soap*, const char*, resqml20__ResqmlJaggedArray *, const char*);
SOAP_FMAC1 resqml20__ResqmlJaggedArray * SOAP_FMAC2 soap_instantiate_resqml20__ResqmlJaggedArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ResqmlJaggedArray * soap_new_resqml20__ResqmlJaggedArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ResqmlJaggedArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__ResqmlJaggedArray * soap_new_req_resqml20__ResqmlJaggedArray(
	struct soap *soap,
	resqml20__AbstractValueArray *Elements,
	resqml20__AbstractIntegerArray *CumulativeLength)
{
	resqml20__ResqmlJaggedArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ResqmlJaggedArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ResqmlJaggedArray::Elements = Elements;
		_p->resqml20__ResqmlJaggedArray::CumulativeLength = CumulativeLength;
	}
	return _p;
}

inline resqml20__ResqmlJaggedArray * soap_new_set_resqml20__ResqmlJaggedArray(
	struct soap *soap,
	resqml20__AbstractValueArray *Elements,
	resqml20__AbstractIntegerArray *CumulativeLength)
{
	resqml20__ResqmlJaggedArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ResqmlJaggedArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ResqmlJaggedArray::Elements = Elements;
		_p->resqml20__ResqmlJaggedArray::CumulativeLength = CumulativeLength;
	}
	return _p;
}

inline int soap_write_resqml20__ResqmlJaggedArray(struct soap *soap, resqml20__ResqmlJaggedArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ResqmlJaggedArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray ? "resqml20:ResqmlJaggedArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ResqmlJaggedArray(struct soap *soap, const char *URL, resqml20__ResqmlJaggedArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ResqmlJaggedArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray ? "resqml20:ResqmlJaggedArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ResqmlJaggedArray(struct soap *soap, const char *URL, resqml20__ResqmlJaggedArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ResqmlJaggedArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray ? "resqml20:ResqmlJaggedArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ResqmlJaggedArray(struct soap *soap, const char *URL, resqml20__ResqmlJaggedArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ResqmlJaggedArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray ? "resqml20:ResqmlJaggedArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ResqmlJaggedArray * SOAP_FMAC4 soap_get_resqml20__ResqmlJaggedArray(struct soap*, resqml20__ResqmlJaggedArray *, const char*, const char*);

inline int soap_read_resqml20__ResqmlJaggedArray(struct soap *soap, resqml20__ResqmlJaggedArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ResqmlJaggedArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ResqmlJaggedArray(struct soap *soap, const char *URL, resqml20__ResqmlJaggedArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ResqmlJaggedArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ResqmlJaggedArray(struct soap *soap, resqml20__ResqmlJaggedArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ResqmlJaggedArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractLocal3dCrs(struct soap*, const char*, int, const resqml20__AbstractLocal3dCrs *, const char*);
SOAP_FMAC3 resqml20__AbstractLocal3dCrs * SOAP_FMAC4 soap_in_resqml20__AbstractLocal3dCrs(struct soap*, const char*, resqml20__AbstractLocal3dCrs *, const char*);
SOAP_FMAC1 resqml20__AbstractLocal3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__AbstractLocal3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractLocal3dCrs * soap_new_resqml20__AbstractLocal3dCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractLocal3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractLocal3dCrs * soap_new_req_resqml20__AbstractLocal3dCrs(
	struct soap *soap,
	double YOffset,
	double ZOffset,
	eml20__PlaneAngleMeasure *ArealRotation,
	enum eml20__AxisOrder2d ProjectedAxisOrder,
	enum eml20__LengthUom ProjectedUom,
	enum eml20__LengthUom VerticalUom,
	double XOffset,
	bool ZIncreasingDownward,
	eml20__AbstractVerticalCrs *VerticalCrs,
	eml20__AbstractProjectedCrs *ProjectedCrs,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractLocal3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractLocal3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractLocal3dCrs * soap_new_set_resqml20__AbstractLocal3dCrs(
	struct soap *soap,
	double YOffset,
	double ZOffset,
	eml20__PlaneAngleMeasure *ArealRotation,
	enum eml20__AxisOrder2d ProjectedAxisOrder,
	enum eml20__LengthUom ProjectedUom,
	enum eml20__LengthUom VerticalUom,
	double XOffset,
	bool ZIncreasingDownward,
	eml20__AbstractVerticalCrs *VerticalCrs,
	eml20__AbstractProjectedCrs *ProjectedCrs,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractLocal3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractLocal3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractLocal3dCrs(struct soap *soap, resqml20__AbstractLocal3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractLocal3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs ? "resqml20:AbstractLocal3dCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractLocal3dCrs(struct soap *soap, const char *URL, resqml20__AbstractLocal3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractLocal3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs ? "resqml20:AbstractLocal3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractLocal3dCrs(struct soap *soap, const char *URL, resqml20__AbstractLocal3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractLocal3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs ? "resqml20:AbstractLocal3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractLocal3dCrs(struct soap *soap, const char *URL, resqml20__AbstractLocal3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractLocal3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs ? "resqml20:AbstractLocal3dCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractLocal3dCrs * SOAP_FMAC4 soap_get_resqml20__AbstractLocal3dCrs(struct soap*, resqml20__AbstractLocal3dCrs *, const char*, const char*);

inline int soap_read_resqml20__AbstractLocal3dCrs(struct soap *soap, resqml20__AbstractLocal3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractLocal3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractLocal3dCrs(struct soap *soap, const char *URL, resqml20__AbstractLocal3dCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractLocal3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractLocal3dCrs(struct soap *soap, resqml20__AbstractLocal3dCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractLocal3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Timestamp(struct soap*, const char*, int, const resqml20__Timestamp *, const char*);
SOAP_FMAC3 resqml20__Timestamp * SOAP_FMAC4 soap_in_resqml20__Timestamp(struct soap*, const char*, resqml20__Timestamp *, const char*);
SOAP_FMAC1 resqml20__Timestamp * SOAP_FMAC2 soap_instantiate_resqml20__Timestamp(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Timestamp * soap_new_resqml20__Timestamp(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Timestamp(soap, n, NULL, NULL, NULL);
}

inline resqml20__Timestamp * soap_new_req_resqml20__Timestamp(
	struct soap *soap,
	const struct tm& DateTime)
{
	resqml20__Timestamp *_p = gsoap_resqml2_0_1::soap_new_resqml20__Timestamp(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Timestamp::DateTime = DateTime;
	}
	return _p;
}

inline resqml20__Timestamp * soap_new_set_resqml20__Timestamp(
	struct soap *soap,
	const struct tm& DateTime,
	LONG64 *YearOffset)
{
	resqml20__Timestamp *_p = gsoap_resqml2_0_1::soap_new_resqml20__Timestamp(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Timestamp::DateTime = DateTime;
		_p->resqml20__Timestamp::YearOffset = YearOffset;
	}
	return _p;
}

inline int soap_write_resqml20__Timestamp(struct soap *soap, resqml20__Timestamp const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Timestamp", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp ? "resqml20:Timestamp" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Timestamp(struct soap *soap, const char *URL, resqml20__Timestamp const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Timestamp", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp ? "resqml20:Timestamp" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Timestamp(struct soap *soap, const char *URL, resqml20__Timestamp const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Timestamp", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp ? "resqml20:Timestamp" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Timestamp(struct soap *soap, const char *URL, resqml20__Timestamp const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Timestamp", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp ? "resqml20:Timestamp" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Timestamp * SOAP_FMAC4 soap_get_resqml20__Timestamp(struct soap*, resqml20__Timestamp *, const char*, const char*);

inline int soap_read_resqml20__Timestamp(struct soap *soap, resqml20__Timestamp *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Timestamp(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Timestamp(struct soap *soap, const char *URL, resqml20__Timestamp *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Timestamp(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Timestamp(struct soap *soap, resqml20__Timestamp *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Timestamp(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeIndex(struct soap*, const char*, int, const resqml20__TimeIndex *, const char*);
SOAP_FMAC3 resqml20__TimeIndex * SOAP_FMAC4 soap_in_resqml20__TimeIndex(struct soap*, const char*, resqml20__TimeIndex *, const char*);
SOAP_FMAC1 resqml20__TimeIndex * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeIndex * soap_new_resqml20__TimeIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeIndex(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeIndex * soap_new_req_resqml20__TimeIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__TimeIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndex::Index = Index;
		_p->resqml20__TimeIndex::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml20__TimeIndex * soap_new_set_resqml20__TimeIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__TimeIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeIndex::Index = Index;
		_p->resqml20__TimeIndex::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml20__TimeIndex(struct soap *soap, resqml20__TimeIndex const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex ? "resqml20:TimeIndex" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeIndex(struct soap *soap, const char *URL, resqml20__TimeIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex ? "resqml20:TimeIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeIndex(struct soap *soap, const char *URL, resqml20__TimeIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex ? "resqml20:TimeIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeIndex(struct soap *soap, const char *URL, resqml20__TimeIndex const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex ? "resqml20:TimeIndex" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeIndex * SOAP_FMAC4 soap_get_resqml20__TimeIndex(struct soap*, resqml20__TimeIndex *, const char*, const char*);

inline int soap_read_resqml20__TimeIndex(struct soap *soap, resqml20__TimeIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeIndex(struct soap *soap, const char *URL, resqml20__TimeIndex *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeIndex(struct soap *soap, resqml20__TimeIndex *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORELocalTime3dCrs(struct soap*, const char*, int, const resqml20__obj_USCORELocalTime3dCrs *, const char*);
SOAP_FMAC3 resqml20__obj_USCORELocalTime3dCrs * SOAP_FMAC4 soap_in_resqml20__obj_USCORELocalTime3dCrs(struct soap*, const char*, resqml20__obj_USCORELocalTime3dCrs *, const char*);
SOAP_FMAC1 resqml20__obj_USCORELocalTime3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalTime3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORELocalTime3dCrs * soap_new_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORELocalTime3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORELocalTime3dCrs * soap_new_req_resqml20__obj_USCORELocalTime3dCrs(
	struct soap *soap,
	enum eml20__TimeUom TimeUom,
	double YOffset__1,
	double ZOffset__1,
	eml20__PlaneAngleMeasure *ArealRotation__1,
	enum eml20__AxisOrder2d ProjectedAxisOrder__1,
	enum eml20__LengthUom ProjectedUom__1,
	enum eml20__LengthUom VerticalUom__1,
	double XOffset__1,
	bool ZIncreasingDownward__1,
	eml20__AbstractVerticalCrs *VerticalCrs__1,
	eml20__AbstractProjectedCrs *ProjectedCrs__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORELocalTime3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalTime3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORELocalTime3dCrs::TimeUom = TimeUom;
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom__1;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCORELocalTime3dCrs * soap_new_set_resqml20__obj_USCORELocalTime3dCrs(
	struct soap *soap,
	enum eml20__TimeUom TimeUom,
	double YOffset__1,
	double ZOffset__1,
	eml20__PlaneAngleMeasure *ArealRotation__1,
	enum eml20__AxisOrder2d ProjectedAxisOrder__1,
	enum eml20__LengthUom ProjectedUom__1,
	enum eml20__LengthUom VerticalUom__1,
	double XOffset__1,
	bool ZIncreasingDownward__1,
	eml20__AbstractVerticalCrs *VerticalCrs__1,
	eml20__AbstractProjectedCrs *ProjectedCrs__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORELocalTime3dCrs *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalTime3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORELocalTime3dCrs::TimeUom = TimeUom;
		_p->resqml20__AbstractLocal3dCrs::YOffset = YOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZOffset = ZOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ArealRotation = ArealRotation__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedUom = ProjectedUom__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalUom = VerticalUom__1;
		_p->resqml20__AbstractLocal3dCrs::XOffset = XOffset__1;
		_p->resqml20__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward__1;
		_p->resqml20__AbstractLocal3dCrs::VerticalCrs = VerticalCrs__1;
		_p->resqml20__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs ? "resqml20:obj_LocalTime3dCrs" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs ? "resqml20:obj_LocalTime3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs ? "resqml20:obj_LocalTime3dCrs" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalTime3dCrs", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs ? "resqml20:obj_LocalTime3dCrs" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORELocalTime3dCrs * SOAP_FMAC4 soap_get_resqml20__obj_USCORELocalTime3dCrs(struct soap*, resqml20__obj_USCORELocalTime3dCrs *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, resqml20__obj_USCORELocalTime3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORELocalTime3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, const char *URL, resqml20__obj_USCORELocalTime3dCrs *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalTime3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORELocalTime3dCrs(struct soap *soap, resqml20__obj_USCORELocalTime3dCrs *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalTime3dCrs(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeSeriesParentage(struct soap*, const char*, int, const resqml20__TimeSeriesParentage *, const char*);
SOAP_FMAC3 resqml20__TimeSeriesParentage * SOAP_FMAC4 soap_in_resqml20__TimeSeriesParentage(struct soap*, const char*, resqml20__TimeSeriesParentage *, const char*);
SOAP_FMAC1 resqml20__TimeSeriesParentage * SOAP_FMAC2 soap_instantiate_resqml20__TimeSeriesParentage(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeSeriesParentage * soap_new_resqml20__TimeSeriesParentage(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeSeriesParentage(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeSeriesParentage * soap_new_req_resqml20__TimeSeriesParentage(
	struct soap *soap,
	bool HasOverlap,
	resqml20__TimeIndex *ParentTimeIndex)
{
	resqml20__TimeSeriesParentage *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeSeriesParentage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeSeriesParentage::HasOverlap = HasOverlap;
		_p->resqml20__TimeSeriesParentage::ParentTimeIndex = ParentTimeIndex;
	}
	return _p;
}

inline resqml20__TimeSeriesParentage * soap_new_set_resqml20__TimeSeriesParentage(
	struct soap *soap,
	bool HasOverlap,
	resqml20__TimeIndex *ParentTimeIndex)
{
	resqml20__TimeSeriesParentage *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeSeriesParentage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeSeriesParentage::HasOverlap = HasOverlap;
		_p->resqml20__TimeSeriesParentage::ParentTimeIndex = ParentTimeIndex;
	}
	return _p;
}

inline int soap_write_resqml20__TimeSeriesParentage(struct soap *soap, resqml20__TimeSeriesParentage const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeriesParentage", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage ? "resqml20:TimeSeriesParentage" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeSeriesParentage(struct soap *soap, const char *URL, resqml20__TimeSeriesParentage const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeriesParentage", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage ? "resqml20:TimeSeriesParentage" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeSeriesParentage(struct soap *soap, const char *URL, resqml20__TimeSeriesParentage const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeriesParentage", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage ? "resqml20:TimeSeriesParentage" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeSeriesParentage(struct soap *soap, const char *URL, resqml20__TimeSeriesParentage const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeSeriesParentage", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage ? "resqml20:TimeSeriesParentage" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeSeriesParentage * SOAP_FMAC4 soap_get_resqml20__TimeSeriesParentage(struct soap*, resqml20__TimeSeriesParentage *, const char*, const char*);

inline int soap_read_resqml20__TimeSeriesParentage(struct soap *soap, resqml20__TimeSeriesParentage *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeSeriesParentage(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeSeriesParentage(struct soap *soap, const char *URL, resqml20__TimeSeriesParentage *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeSeriesParentage(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeSeriesParentage(struct soap *soap, resqml20__TimeSeriesParentage *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeSeriesParentage(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3d(struct soap*, const char*, int, const resqml20__Point3d *, const char*);
SOAP_FMAC3 resqml20__Point3d * SOAP_FMAC4 soap_in_resqml20__Point3d(struct soap*, const char*, resqml20__Point3d *, const char*);
SOAP_FMAC1 resqml20__Point3d * SOAP_FMAC2 soap_instantiate_resqml20__Point3d(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3d * soap_new_resqml20__Point3d(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3d(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3d * soap_new_req_resqml20__Point3d(
	struct soap *soap,
	double Coordinate1,
	double Coordinate2,
	double Coordinate3)
{
	resqml20__Point3d *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3d::Coordinate1 = Coordinate1;
		_p->resqml20__Point3d::Coordinate2 = Coordinate2;
		_p->resqml20__Point3d::Coordinate3 = Coordinate3;
	}
	return _p;
}

inline resqml20__Point3d * soap_new_set_resqml20__Point3d(
	struct soap *soap,
	double Coordinate1,
	double Coordinate2,
	double Coordinate3)
{
	resqml20__Point3d *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3d::Coordinate1 = Coordinate1;
		_p->resqml20__Point3d::Coordinate2 = Coordinate2;
		_p->resqml20__Point3d::Coordinate3 = Coordinate3;
	}
	return _p;
}

inline int soap_write_resqml20__Point3d(struct soap *soap, resqml20__Point3d const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d ? "resqml20:Point3d" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3d(struct soap *soap, const char *URL, resqml20__Point3d const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d ? "resqml20:Point3d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3d(struct soap *soap, const char *URL, resqml20__Point3d const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d ? "resqml20:Point3d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3d(struct soap *soap, const char *URL, resqml20__Point3d const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d ? "resqml20:Point3d" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3d * SOAP_FMAC4 soap_get_resqml20__Point3d(struct soap*, resqml20__Point3d *, const char*, const char*);

inline int soap_read_resqml20__Point3d(struct soap *soap, resqml20__Point3d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3d(struct soap *soap, const char *URL, resqml20__Point3d *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3d(struct soap *soap, resqml20__Point3d *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractFeature(struct soap*, const char*, int, const resqml20__AbstractFeature *, const char*);
SOAP_FMAC3 resqml20__AbstractFeature * SOAP_FMAC4 soap_in_resqml20__AbstractFeature(struct soap*, const char*, resqml20__AbstractFeature *, const char*);
SOAP_FMAC1 resqml20__AbstractFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractFeature * soap_new_resqml20__AbstractFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractFeature * soap_new_req_resqml20__AbstractFeature(
	struct soap *soap,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractFeature * soap_new_set_resqml20__AbstractFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractFeature(struct soap *soap, resqml20__AbstractFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature ? "resqml20:AbstractFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractFeature(struct soap *soap, const char *URL, resqml20__AbstractFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature ? "resqml20:AbstractFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractFeature(struct soap *soap, const char *URL, resqml20__AbstractFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature ? "resqml20:AbstractFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractFeature(struct soap *soap, const char *URL, resqml20__AbstractFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature ? "resqml20:AbstractFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractFeature * SOAP_FMAC4 soap_get_resqml20__AbstractFeature(struct soap*, resqml20__AbstractFeature *, const char*, const char*);

inline int soap_read_resqml20__AbstractFeature(struct soap *soap, resqml20__AbstractFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractFeature(struct soap *soap, const char *URL, resqml20__AbstractFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractFeature(struct soap *soap, resqml20__AbstractFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, const char*, int, const resqml20__obj_USCORETectonicBoundaryFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCORETectonicBoundaryFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, const char*, resqml20__obj_USCORETectonicBoundaryFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCORETectonicBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORETectonicBoundaryFeature * soap_new_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORETectonicBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORETectonicBoundaryFeature * soap_new_req_resqml20__obj_USCORETectonicBoundaryFeature(
	struct soap *soap,
	enum resqml20__TectonicBoundaryKind TectonicBoundaryKind,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETectonicBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETectonicBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETectonicBoundaryFeature::TectonicBoundaryKind = TectonicBoundaryKind;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORETectonicBoundaryFeature * soap_new_set_resqml20__obj_USCORETectonicBoundaryFeature(
	struct soap *soap,
	enum resqml20__TectonicBoundaryKind TectonicBoundaryKind,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETectonicBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETectonicBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETectonicBoundaryFeature::TectonicBoundaryKind = TectonicBoundaryKind;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature ? "resqml20:obj_TectonicBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature ? "resqml20:obj_TectonicBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature ? "resqml20:obj_TectonicBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TectonicBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature ? "resqml20:obj_TectonicBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORETectonicBoundaryFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, resqml20__obj_USCORETectonicBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, resqml20__obj_USCORETectonicBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORETectonicBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCORETectonicBoundaryFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETectonicBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORETectonicBoundaryFeature(struct soap *soap, resqml20__obj_USCORETectonicBoundaryFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETectonicBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREOrganizationFeature(struct soap*, const char*, int, const resqml20__obj_USCOREOrganizationFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREOrganizationFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREOrganizationFeature(struct soap*, const char*, resqml20__obj_USCOREOrganizationFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREOrganizationFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREOrganizationFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREOrganizationFeature * soap_new_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREOrganizationFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREOrganizationFeature * soap_new_req_resqml20__obj_USCOREOrganizationFeature(
	struct soap *soap,
	enum resqml20__OrganizationKind OrganizationKind,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREOrganizationFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREOrganizationFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREOrganizationFeature::OrganizationKind = OrganizationKind;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREOrganizationFeature * soap_new_set_resqml20__obj_USCOREOrganizationFeature(
	struct soap *soap,
	enum resqml20__OrganizationKind OrganizationKind,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREOrganizationFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREOrganizationFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREOrganizationFeature::OrganizationKind = OrganizationKind;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature ? "resqml20:obj_OrganizationFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature ? "resqml20:obj_OrganizationFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature ? "resqml20:obj_OrganizationFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_OrganizationFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature ? "resqml20:obj_OrganizationFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREOrganizationFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREOrganizationFeature(struct soap*, resqml20__obj_USCOREOrganizationFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, resqml20__obj_USCOREOrganizationFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREOrganizationFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREOrganizationFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREOrganizationFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREOrganizationFeature(struct soap *soap, resqml20__obj_USCOREOrganizationFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREOrganizationFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeobodyFeature(struct soap*, const char*, int, const resqml20__obj_USCOREGeobodyFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeobodyFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeobodyFeature(struct soap*, const char*, resqml20__obj_USCOREGeobodyFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeobodyFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeobodyFeature * soap_new_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeobodyFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeobodyFeature * soap_new_req_resqml20__obj_USCOREGeobodyFeature(
	struct soap *soap,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREGeobodyFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREGeobodyFeature * soap_new_set_resqml20__obj_USCOREGeobodyFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREGeobodyFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature ? "resqml20:obj_GeobodyFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature ? "resqml20:obj_GeobodyFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature ? "resqml20:obj_GeobodyFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature ? "resqml20:obj_GeobodyFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeobodyFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeobodyFeature(struct soap*, resqml20__obj_USCOREGeobodyFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, resqml20__obj_USCOREGeobodyFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeobodyFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeobodyFeature(struct soap *soap, resqml20__obj_USCOREGeobodyFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, const char*, int, const resqml20__obj_USCOREGeneticBoundaryFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, const char*, resqml20__obj_USCOREGeneticBoundaryFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeneticBoundaryFeature * soap_new_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeneticBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeneticBoundaryFeature * soap_new_req_resqml20__obj_USCOREGeneticBoundaryFeature(
	struct soap *soap,
	enum resqml20__GeneticBoundaryKind GeneticBoundaryKind,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREGeneticBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeneticBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGeneticBoundaryFeature::GeneticBoundaryKind = GeneticBoundaryKind;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREGeneticBoundaryFeature * soap_new_set_resqml20__obj_USCOREGeneticBoundaryFeature(
	struct soap *soap,
	enum resqml20__GeneticBoundaryKind GeneticBoundaryKind,
	resqml20__Timestamp *AbsoluteAge,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREGeneticBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeneticBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGeneticBoundaryFeature::GeneticBoundaryKind = GeneticBoundaryKind;
		_p->resqml20__obj_USCOREGeneticBoundaryFeature::AbsoluteAge = AbsoluteAge;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature ? "resqml20:obj_GeneticBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature ? "resqml20:obj_GeneticBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature ? "resqml20:obj_GeneticBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeneticBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature ? "resqml20:obj_GeneticBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, resqml20__obj_USCOREGeneticBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, resqml20__obj_USCOREGeneticBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeneticBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeneticBoundaryFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeneticBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap *soap, resqml20__obj_USCOREGeneticBoundaryFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeneticBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractGeologicFeature(struct soap*, const char*, int, const resqml20__AbstractGeologicFeature *, const char*);
SOAP_FMAC3 resqml20__AbstractGeologicFeature * SOAP_FMAC4 soap_in_resqml20__AbstractGeologicFeature(struct soap*, const char*, resqml20__AbstractGeologicFeature *, const char*);
SOAP_FMAC1 resqml20__AbstractGeologicFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGeologicFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractGeologicFeature * soap_new_resqml20__AbstractGeologicFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractGeologicFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractGeologicFeature * soap_new_req_resqml20__AbstractGeologicFeature(
	struct soap *soap,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractGeologicFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGeologicFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractGeologicFeature * soap_new_set_resqml20__AbstractGeologicFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractGeologicFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGeologicFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractGeologicFeature(struct soap *soap, resqml20__AbstractGeologicFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeologicFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature ? "resqml20:AbstractGeologicFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractGeologicFeature(struct soap *soap, const char *URL, resqml20__AbstractGeologicFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeologicFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature ? "resqml20:AbstractGeologicFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractGeologicFeature(struct soap *soap, const char *URL, resqml20__AbstractGeologicFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeologicFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature ? "resqml20:AbstractGeologicFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractGeologicFeature(struct soap *soap, const char *URL, resqml20__AbstractGeologicFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeologicFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature ? "resqml20:AbstractGeologicFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractGeologicFeature * SOAP_FMAC4 soap_get_resqml20__AbstractGeologicFeature(struct soap*, resqml20__AbstractGeologicFeature *, const char*, const char*);

inline int soap_read_resqml20__AbstractGeologicFeature(struct soap *soap, resqml20__AbstractGeologicFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractGeologicFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractGeologicFeature(struct soap *soap, const char *URL, resqml20__AbstractGeologicFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractGeologicFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractGeologicFeature(struct soap *soap, resqml20__AbstractGeologicFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractGeologicFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, const char*, int, const resqml20__obj_USCOREStratigraphicUnitFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, const char*, resqml20__obj_USCOREStratigraphicUnitFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStratigraphicUnitFeature * soap_new_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStratigraphicUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStratigraphicUnitFeature * soap_new_req_resqml20__obj_USCOREStratigraphicUnitFeature(
	struct soap *soap,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREStratigraphicUnitFeature * soap_new_set_resqml20__obj_USCOREStratigraphicUnitFeature(
	struct soap *soap,
	eml20__DataObjectReference *ChronostratigraphicBottom,
	eml20__DataObjectReference *ChronostratigraphicTop,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicUnitFeature::ChronostratigraphicBottom = ChronostratigraphicBottom;
		_p->resqml20__obj_USCOREStratigraphicUnitFeature::ChronostratigraphicTop = ChronostratigraphicTop;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature ? "resqml20:obj_StratigraphicUnitFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature ? "resqml20:obj_StratigraphicUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature ? "resqml20:obj_StratigraphicUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature ? "resqml20:obj_StratigraphicUnitFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, resqml20__obj_USCOREStratigraphicUnitFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStratigraphicUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, const char*, int, const resqml20__obj_USCOREGlobalChronostratigraphicColumn *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, const char*, resqml20__obj_USCOREGlobalChronostratigraphicColumn *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGlobalChronostratigraphicColumn * soap_new_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGlobalChronostratigraphicColumn * soap_new_req_resqml20__obj_USCOREGlobalChronostratigraphicColumn(
	struct soap *soap,
	const std::vector<resqml20__ChronostratigraphicRank *> & ChronostratigraphicColumnComponent,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREGlobalChronostratigraphicColumn *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGlobalChronostratigraphicColumn::ChronostratigraphicColumnComponent = ChronostratigraphicColumnComponent;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREGlobalChronostratigraphicColumn * soap_new_set_resqml20__obj_USCOREGlobalChronostratigraphicColumn(
	struct soap *soap,
	const std::vector<resqml20__ChronostratigraphicRank *> & ChronostratigraphicColumnComponent,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREGlobalChronostratigraphicColumn *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGlobalChronostratigraphicColumn::ChronostratigraphicColumnComponent = ChronostratigraphicColumnComponent;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn ? "resqml20:obj_GlobalChronostratigraphicColumn" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn ? "resqml20:obj_GlobalChronostratigraphicColumn" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn ? "resqml20:obj_GlobalChronostratigraphicColumn" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GlobalChronostratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn ? "resqml20:obj_GlobalChronostratigraphicColumn" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, resqml20__obj_USCOREGlobalChronostratigraphicColumn *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, resqml20__obj_USCOREGlobalChronostratigraphicColumn *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREGlobalChronostratigraphicColumn *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, resqml20__obj_USCOREGlobalChronostratigraphicColumn *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGlobalChronostratigraphicColumn(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ChronostratigraphicRank(struct soap*, const char*, int, const resqml20__ChronostratigraphicRank *, const char*);
SOAP_FMAC3 resqml20__ChronostratigraphicRank * SOAP_FMAC4 soap_in_resqml20__ChronostratigraphicRank(struct soap*, const char*, resqml20__ChronostratigraphicRank *, const char*);
SOAP_FMAC1 resqml20__ChronostratigraphicRank * SOAP_FMAC2 soap_instantiate_resqml20__ChronostratigraphicRank(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ChronostratigraphicRank * soap_new_resqml20__ChronostratigraphicRank(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ChronostratigraphicRank(soap, n, NULL, NULL, NULL);
}

inline resqml20__ChronostratigraphicRank * soap_new_req_resqml20__ChronostratigraphicRank(
	struct soap *soap,
	const std::string& Name,
	const std::vector<eml20__DataObjectReference *> & Contains)
{
	resqml20__ChronostratigraphicRank *_p = gsoap_resqml2_0_1::soap_new_resqml20__ChronostratigraphicRank(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ChronostratigraphicRank::Name = Name;
		_p->resqml20__ChronostratigraphicRank::Contains = Contains;
	}
	return _p;
}

inline resqml20__ChronostratigraphicRank * soap_new_set_resqml20__ChronostratigraphicRank(
	struct soap *soap,
	const std::string& Name,
	const std::vector<eml20__DataObjectReference *> & Contains)
{
	resqml20__ChronostratigraphicRank *_p = gsoap_resqml2_0_1::soap_new_resqml20__ChronostratigraphicRank(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ChronostratigraphicRank::Name = Name;
		_p->resqml20__ChronostratigraphicRank::Contains = Contains;
	}
	return _p;
}

inline int soap_write_resqml20__ChronostratigraphicRank(struct soap *soap, resqml20__ChronostratigraphicRank const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ChronostratigraphicRank", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank ? "resqml20:ChronostratigraphicRank" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ChronostratigraphicRank(struct soap *soap, const char *URL, resqml20__ChronostratigraphicRank const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ChronostratigraphicRank", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank ? "resqml20:ChronostratigraphicRank" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ChronostratigraphicRank(struct soap *soap, const char *URL, resqml20__ChronostratigraphicRank const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ChronostratigraphicRank", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank ? "resqml20:ChronostratigraphicRank" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ChronostratigraphicRank(struct soap *soap, const char *URL, resqml20__ChronostratigraphicRank const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ChronostratigraphicRank", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank ? "resqml20:ChronostratigraphicRank" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ChronostratigraphicRank * SOAP_FMAC4 soap_get_resqml20__ChronostratigraphicRank(struct soap*, resqml20__ChronostratigraphicRank *, const char*, const char*);

inline int soap_read_resqml20__ChronostratigraphicRank(struct soap *soap, resqml20__ChronostratigraphicRank *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ChronostratigraphicRank(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ChronostratigraphicRank(struct soap *soap, const char *URL, resqml20__ChronostratigraphicRank *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ChronostratigraphicRank(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ChronostratigraphicRank(struct soap *soap, resqml20__ChronostratigraphicRank *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ChronostratigraphicRank(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREBoundaryFeature(struct soap*, const char*, int, const resqml20__obj_USCOREBoundaryFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREBoundaryFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREBoundaryFeature(struct soap*, const char*, resqml20__obj_USCOREBoundaryFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREBoundaryFeature * soap_new_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREBoundaryFeature * soap_new_req_resqml20__obj_USCOREBoundaryFeature(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREBoundaryFeature * soap_new_set_resqml20__obj_USCOREBoundaryFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature ? "resqml20:obj_BoundaryFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature ? "resqml20:obj_BoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature ? "resqml20:obj_BoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature ? "resqml20:obj_BoundaryFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREBoundaryFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREBoundaryFeature(struct soap*, resqml20__obj_USCOREBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, resqml20__obj_USCOREBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREBoundaryFeature(struct soap *soap, resqml20__obj_USCOREBoundaryFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, const char*, int, const resqml20__obj_USCORERockFluidUnitFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERockFluidUnitFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, const char*, resqml20__obj_USCORERockFluidUnitFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERockFluidUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERockFluidUnitFeature * soap_new_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERockFluidUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERockFluidUnitFeature * soap_new_req_resqml20__obj_USCORERockFluidUnitFeature(
	struct soap *soap,
	enum resqml20__Phase Phase,
	eml20__DataObjectReference *FluidBoundaryBottom,
	eml20__DataObjectReference *FluidBoundaryTop,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORERockFluidUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERockFluidUnitFeature::Phase = Phase;
		_p->resqml20__obj_USCORERockFluidUnitFeature::FluidBoundaryBottom = FluidBoundaryBottom;
		_p->resqml20__obj_USCORERockFluidUnitFeature::FluidBoundaryTop = FluidBoundaryTop;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORERockFluidUnitFeature * soap_new_set_resqml20__obj_USCORERockFluidUnitFeature(
	struct soap *soap,
	enum resqml20__Phase Phase,
	eml20__DataObjectReference *FluidBoundaryBottom,
	eml20__DataObjectReference *FluidBoundaryTop,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORERockFluidUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERockFluidUnitFeature::Phase = Phase;
		_p->resqml20__obj_USCORERockFluidUnitFeature::FluidBoundaryBottom = FluidBoundaryBottom;
		_p->resqml20__obj_USCORERockFluidUnitFeature::FluidBoundaryTop = FluidBoundaryTop;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature ? "resqml20:obj_RockFluidUnitFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature ? "resqml20:obj_RockFluidUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature ? "resqml20:obj_RockFluidUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature ? "resqml20:obj_RockFluidUnitFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERockFluidUnitFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, resqml20__obj_USCORERockFluidUnitFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, resqml20__obj_USCORERockFluidUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERockFluidUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERockFluidUnitFeature(struct soap *soap, resqml20__obj_USCORERockFluidUnitFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, const char*, int, const resqml20__obj_USCOREGeologicUnitFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeologicUnitFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, const char*, resqml20__obj_USCOREGeologicUnitFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeologicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeologicUnitFeature * soap_new_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeologicUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeologicUnitFeature * soap_new_req_resqml20__obj_USCOREGeologicUnitFeature(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeologicUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeologicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGeologicUnitFeature * soap_new_set_resqml20__obj_USCOREGeologicUnitFeature(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeologicUnitFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeologicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature ? "resqml20:obj_GeologicUnitFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature ? "resqml20:obj_GeologicUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature ? "resqml20:obj_GeologicUnitFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature ? "resqml20:obj_GeologicUnitFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeologicUnitFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, resqml20__obj_USCOREGeologicUnitFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, resqml20__obj_USCOREGeologicUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeologicUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeologicUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeologicUnitFeature(struct soap *soap, resqml20__obj_USCOREGeologicUnitFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeologicUnitFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, const char*, int, const resqml20__obj_USCOREFluidBoundaryFeature *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREFluidBoundaryFeature * SOAP_FMAC4 soap_in_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, const char*, resqml20__obj_USCOREFluidBoundaryFeature *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREFluidBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREFluidBoundaryFeature * soap_new_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREFluidBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREFluidBoundaryFeature * soap_new_req_resqml20__obj_USCOREFluidBoundaryFeature(
	struct soap *soap,
	enum resqml20__FluidContact FluidContact,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREFluidBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFluidBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREFluidBoundaryFeature::FluidContact = FluidContact;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREFluidBoundaryFeature * soap_new_set_resqml20__obj_USCOREFluidBoundaryFeature(
	struct soap *soap,
	enum resqml20__FluidContact FluidContact,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREFluidBoundaryFeature *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFluidBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREFluidBoundaryFeature::FluidContact = FluidContact;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature ? "resqml20:obj_FluidBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature ? "resqml20:obj_FluidBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature ? "resqml20:obj_FluidBoundaryFeature" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FluidBoundaryFeature", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature ? "resqml20:obj_FluidBoundaryFeature" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREFluidBoundaryFeature * SOAP_FMAC4 soap_get_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, resqml20__obj_USCOREFluidBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, resqml20__obj_USCOREFluidBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREFluidBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, const char *URL, resqml20__obj_USCOREFluidBoundaryFeature *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFluidBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREFluidBoundaryFeature(struct soap *soap, resqml20__obj_USCOREFluidBoundaryFeature *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFluidBoundaryFeature(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, const char*, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_req_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(
	struct soap *soap,
	enum resqml20__OrderingCriteria OrderingCriteria__1,
	enum resqml20__Domain Domain__3,
	eml20__DataObjectReference *InterpretedFeature__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__3;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_set_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(
	struct soap *soap,
	eml20__DataObjectReference *IsOccurrenceOf,
	const std::vector<resqml20__GeologicUnitInterpretationIndex *> & GeologicUnitIndex,
	enum resqml20__OrderingCriteria OrderingCriteria__1,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation__2,
	enum resqml20__Domain Domain__3,
	eml20__DataObjectReference *InterpretedFeature__3,
	resqml20__TimeInterval *HasOccuredDuring__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicOccurrenceInterpretation::IsOccurrenceOf = IsOccurrenceOf;
		_p->resqml20__obj_USCOREStratigraphicOccurrenceInterpretation::GeologicUnitIndex = GeologicUnitIndex;
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria__1;
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation__2;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__3;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__3;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation ? "resqml20:obj_StratigraphicOccurrenceInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation ? "resqml20:obj_StratigraphicOccurrenceInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation ? "resqml20:obj_StratigraphicOccurrenceInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicOccurrenceInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation ? "resqml20:obj_StratigraphicOccurrenceInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREStratigraphicUnitInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, const char*, resqml20__obj_USCOREStratigraphicUnitInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStratigraphicUnitInterpretation * soap_new_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStratigraphicUnitInterpretation * soap_new_req_resqml20__obj_USCOREStratigraphicUnitInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStratigraphicUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREStratigraphicUnitInterpretation * soap_new_set_resqml20__obj_USCOREStratigraphicUnitInterpretation(
	struct soap *soap,
	enum resqml20__DepositionMode *DepositionMode,
	eml20__LengthMeasure *MaxThickness,
	eml20__LengthMeasure *MinThickness,
	enum resqml20__GeologicUnitComposition *GeologicUnitComposition__1,
	enum resqml20__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStratigraphicUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicUnitInterpretation::DepositionMode = DepositionMode;
		_p->resqml20__obj_USCOREStratigraphicUnitInterpretation::MaxThickness = MaxThickness;
		_p->resqml20__obj_USCOREStratigraphicUnitInterpretation::MinThickness = MinThickness;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition__1;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation ? "resqml20:obj_StratigraphicUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation ? "resqml20:obj_StratigraphicUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation ? "resqml20:obj_StratigraphicUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation ? "resqml20:obj_StratigraphicUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, resqml20__obj_USCOREStratigraphicUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicUnitInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicUnitInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREGeologicUnitInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, const char*, resqml20__obj_USCOREGeologicUnitInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeologicUnitInterpretation * soap_new_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeologicUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeologicUnitInterpretation * soap_new_req_resqml20__obj_USCOREGeologicUnitInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGeologicUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeologicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREGeologicUnitInterpretation * soap_new_set_resqml20__obj_USCOREGeologicUnitInterpretation(
	struct soap *soap,
	enum resqml20__GeologicUnitComposition *GeologicUnitComposition,
	enum resqml20__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGeologicUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeologicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation ? "resqml20:obj_GeologicUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation ? "resqml20:obj_GeologicUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation ? "resqml20:obj_GeologicUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeologicUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation ? "resqml20:obj_GeologicUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, resqml20__obj_USCOREGeologicUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREGeologicUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeologicUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeologicUnitInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeologicUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap *soap, resqml20__obj_USCOREGeologicUnitInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeologicUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREHorizonInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREHorizonInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREHorizonInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREHorizonInterpretation(struct soap*, const char*, resqml20__obj_USCOREHorizonInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREHorizonInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREHorizonInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREHorizonInterpretation * soap_new_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREHorizonInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREHorizonInterpretation * soap_new_req_resqml20__obj_USCOREHorizonInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREHorizonInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREHorizonInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREHorizonInterpretation * soap_new_set_resqml20__obj_USCOREHorizonInterpretation(
	struct soap *soap,
	const std::vector<enum resqml20__BoundaryRelation> & BoundaryRelation,
	enum resqml20__SequenceStratigraphySurface *SequenceStratigraphySurface,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREHorizonInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREHorizonInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREHorizonInterpretation::BoundaryRelation = BoundaryRelation;
		_p->resqml20__obj_USCOREHorizonInterpretation::SequenceStratigraphySurface = SequenceStratigraphySurface;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation ? "resqml20:obj_HorizonInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation ? "resqml20:obj_HorizonInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation ? "resqml20:obj_HorizonInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_HorizonInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation ? "resqml20:obj_HorizonInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREHorizonInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREHorizonInterpretation(struct soap*, resqml20__obj_USCOREHorizonInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, resqml20__obj_USCOREHorizonInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREHorizonInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREHorizonInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREHorizonInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREHorizonInterpretation(struct soap *soap, resqml20__obj_USCOREHorizonInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREHorizonInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__RockFluidUnitInterpretationIndex(struct soap*, const char*, int, const resqml20__RockFluidUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml20__RockFluidUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml20__RockFluidUnitInterpretationIndex(struct soap*, const char*, resqml20__RockFluidUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml20__RockFluidUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__RockFluidUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__RockFluidUnitInterpretationIndex * soap_new_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__RockFluidUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml20__RockFluidUnitInterpretationIndex * soap_new_req_resqml20__RockFluidUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *RockFluidUnit)
{
	resqml20__RockFluidUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__RockFluidUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__RockFluidUnitInterpretationIndex::Index = Index;
		_p->resqml20__RockFluidUnitInterpretationIndex::RockFluidUnit = RockFluidUnit;
	}
	return _p;
}

inline resqml20__RockFluidUnitInterpretationIndex * soap_new_set_resqml20__RockFluidUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *RockFluidUnit)
{
	resqml20__RockFluidUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__RockFluidUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__RockFluidUnitInterpretationIndex::Index = Index;
		_p->resqml20__RockFluidUnitInterpretationIndex::RockFluidUnit = RockFluidUnit;
	}
	return _p;
}

inline int soap_write_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, resqml20__RockFluidUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex ? "resqml20:RockFluidUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__RockFluidUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex ? "resqml20:RockFluidUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__RockFluidUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex ? "resqml20:RockFluidUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__RockFluidUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RockFluidUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex ? "resqml20:RockFluidUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__RockFluidUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml20__RockFluidUnitInterpretationIndex(struct soap*, resqml20__RockFluidUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, resqml20__RockFluidUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__RockFluidUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__RockFluidUnitInterpretationIndex *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__RockFluidUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__RockFluidUnitInterpretationIndex(struct soap *soap, resqml20__RockFluidUnitInterpretationIndex *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__RockFluidUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, const char*, int, const resqml20__AbstractStratigraphicOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml20__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, const char*, resqml20__AbstractStratigraphicOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml20__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractStratigraphicOrganizationInterpretation * soap_new_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractStratigraphicOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractStratigraphicOrganizationInterpretation * soap_new_req_resqml20__AbstractStratigraphicOrganizationInterpretation(
	struct soap *soap,
	enum resqml20__OrderingCriteria OrderingCriteria,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractStratigraphicOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractStratigraphicOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__AbstractStratigraphicOrganizationInterpretation * soap_new_set_resqml20__AbstractStratigraphicOrganizationInterpretation(
	struct soap *soap,
	enum resqml20__OrderingCriteria OrderingCriteria,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractStratigraphicOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractStratigraphicOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, resqml20__AbstractStratigraphicOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractStratigraphicOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation ? "resqml20:AbstractStratigraphicOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractStratigraphicOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractStratigraphicOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation ? "resqml20:AbstractStratigraphicOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractStratigraphicOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractStratigraphicOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation ? "resqml20:AbstractStratigraphicOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractStratigraphicOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractStratigraphicOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation ? "resqml20:AbstractStratigraphicOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, resqml20__AbstractStratigraphicOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, resqml20__AbstractStratigraphicOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractStratigraphicOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractStratigraphicOrganizationInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractStratigraphicOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, resqml20__AbstractStratigraphicOrganizationInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractStratigraphicOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREStratigraphicColumnRankInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, const char*, resqml20__obj_USCOREStratigraphicColumnRankInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_req_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(
	struct soap *soap,
	ULONG64 Index,
	const std::vector<resqml20__StratigraphicUnitInterpretationIndex *> & StratigraphicUnits,
	enum resqml20__OrderingCriteria OrderingCriteria__1,
	enum resqml20__Domain Domain__3,
	eml20__DataObjectReference *InterpretedFeature__3,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicColumnRankInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicColumnRankInterpretation::Index = Index;
		_p->resqml20__obj_USCOREStratigraphicColumnRankInterpretation::StratigraphicUnits = StratigraphicUnits;
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__3;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_set_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(
	struct soap *soap,
	ULONG64 Index,
	const std::vector<resqml20__StratigraphicUnitInterpretationIndex *> & StratigraphicUnits,
	enum resqml20__OrderingCriteria OrderingCriteria__1,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation__2,
	enum resqml20__Domain Domain__3,
	eml20__DataObjectReference *InterpretedFeature__3,
	resqml20__TimeInterval *HasOccuredDuring__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREStratigraphicColumnRankInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicColumnRankInterpretation::Index = Index;
		_p->resqml20__obj_USCOREStratigraphicColumnRankInterpretation::StratigraphicUnits = StratigraphicUnits;
		_p->resqml20__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria__1;
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation__2;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__3;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__3;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation ? "resqml20:obj_StratigraphicColumnRankInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation ? "resqml20:obj_StratigraphicColumnRankInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation ? "resqml20:obj_StratigraphicColumnRankInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumnRankInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation ? "resqml20:obj_StratigraphicColumnRankInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, resqml20__obj_USCOREStratigraphicColumnRankInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicColumnRankInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumnRankInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, resqml20__obj_USCOREStratigraphicColumnRankInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__FaultThrow(struct soap*, const char*, int, const resqml20__FaultThrow *, const char*);
SOAP_FMAC3 resqml20__FaultThrow * SOAP_FMAC4 soap_in_resqml20__FaultThrow(struct soap*, const char*, resqml20__FaultThrow *, const char*);
SOAP_FMAC1 resqml20__FaultThrow * SOAP_FMAC2 soap_instantiate_resqml20__FaultThrow(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__FaultThrow * soap_new_resqml20__FaultThrow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__FaultThrow(soap, n, NULL, NULL, NULL);
}

inline resqml20__FaultThrow * soap_new_req_resqml20__FaultThrow(
	struct soap *soap,
	const std::vector<enum resqml20__ThrowKind> & Throw)
{
	resqml20__FaultThrow *_p = gsoap_resqml2_0_1::soap_new_resqml20__FaultThrow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__FaultThrow::Throw = Throw;
	}
	return _p;
}

inline resqml20__FaultThrow * soap_new_set_resqml20__FaultThrow(
	struct soap *soap,
	const std::vector<enum resqml20__ThrowKind> & Throw,
	resqml20__TimeInterval *HasOccuredDuring)
{
	resqml20__FaultThrow *_p = gsoap_resqml2_0_1::soap_new_resqml20__FaultThrow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__FaultThrow::Throw = Throw;
		_p->resqml20__FaultThrow::HasOccuredDuring = HasOccuredDuring;
	}
	return _p;
}

inline int soap_write_resqml20__FaultThrow(struct soap *soap, resqml20__FaultThrow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultThrow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow ? "resqml20:FaultThrow" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__FaultThrow(struct soap *soap, const char *URL, resqml20__FaultThrow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultThrow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow ? "resqml20:FaultThrow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__FaultThrow(struct soap *soap, const char *URL, resqml20__FaultThrow const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultThrow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow ? "resqml20:FaultThrow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__FaultThrow(struct soap *soap, const char *URL, resqml20__FaultThrow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:FaultThrow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow ? "resqml20:FaultThrow" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__FaultThrow * SOAP_FMAC4 soap_get_resqml20__FaultThrow(struct soap*, resqml20__FaultThrow *, const char*, const char*);

inline int soap_read_resqml20__FaultThrow(struct soap *soap, resqml20__FaultThrow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__FaultThrow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__FaultThrow(struct soap *soap, const char *URL, resqml20__FaultThrow *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__FaultThrow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__FaultThrow(struct soap *soap, resqml20__FaultThrow *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__FaultThrow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREEarthModelInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREEarthModelInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, const char*, resqml20__obj_USCOREEarthModelInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREEarthModelInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREEarthModelInterpretation * soap_new_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREEarthModelInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREEarthModelInterpretation * soap_new_req_resqml20__obj_USCOREEarthModelInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREEarthModelInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREEarthModelInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREEarthModelInterpretation * soap_new_set_resqml20__obj_USCOREEarthModelInterpretation(
	struct soap *soap,
	const std::vector<eml20__DataObjectReference *> & StratigraphicOccurrences,
	eml20__DataObjectReference *StratigraphicColumn,
	eml20__DataObjectReference *Structure,
	eml20__DataObjectReference *Fluid,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREEarthModelInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREEarthModelInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREEarthModelInterpretation::StratigraphicOccurrences = StratigraphicOccurrences;
		_p->resqml20__obj_USCOREEarthModelInterpretation::StratigraphicColumn = StratigraphicColumn;
		_p->resqml20__obj_USCOREEarthModelInterpretation::Structure = Structure;
		_p->resqml20__obj_USCOREEarthModelInterpretation::Fluid = Fluid;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation ? "resqml20:obj_EarthModelInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation ? "resqml20:obj_EarthModelInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation ? "resqml20:obj_EarthModelInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_EarthModelInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation ? "resqml20:obj_EarthModelInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREEarthModelInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, resqml20__obj_USCOREEarthModelInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, resqml20__obj_USCOREEarthModelInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREEarthModelInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREEarthModelInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREEarthModelInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREEarthModelInterpretation(struct soap *soap, resqml20__obj_USCOREEarthModelInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREEarthModelInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractContactInterpretationPart(struct soap*, const char*, int, const resqml20__AbstractContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml20__AbstractContactInterpretationPart * SOAP_FMAC4 soap_in_resqml20__AbstractContactInterpretationPart(struct soap*, const char*, resqml20__AbstractContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml20__AbstractContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__AbstractContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractContactInterpretationPart * soap_new_resqml20__AbstractContactInterpretationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractContactInterpretationPart * soap_new_req_resqml20__AbstractContactInterpretationPart(
	struct soap *soap,
	enum resqml20__ContactRelationship ContactRelationship,
	ULONG64 Index)
{
	resqml20__AbstractContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index;
	}
	return _p;
}

inline resqml20__AbstractContactInterpretationPart * soap_new_set_resqml20__AbstractContactInterpretationPart(
	struct soap *soap,
	enum resqml20__ContactRelationship ContactRelationship,
	ULONG64 Index,
	eml20__DataObjectReference *PartOf)
{
	resqml20__AbstractContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index;
		_p->resqml20__AbstractContactInterpretationPart::PartOf = PartOf;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractContactInterpretationPart(struct soap *soap, resqml20__AbstractContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart ? "resqml20:AbstractContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractContactInterpretationPart(struct soap *soap, const char *URL, resqml20__AbstractContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart ? "resqml20:AbstractContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractContactInterpretationPart(struct soap *soap, const char *URL, resqml20__AbstractContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart ? "resqml20:AbstractContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractContactInterpretationPart(struct soap *soap, const char *URL, resqml20__AbstractContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart ? "resqml20:AbstractContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractContactInterpretationPart * SOAP_FMAC4 soap_get_resqml20__AbstractContactInterpretationPart(struct soap*, resqml20__AbstractContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml20__AbstractContactInterpretationPart(struct soap *soap, resqml20__AbstractContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractContactInterpretationPart(struct soap *soap, const char *URL, resqml20__AbstractContactInterpretationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractContactInterpretationPart(struct soap *soap, resqml20__AbstractContactInterpretationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREBoundaryFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, const char*, resqml20__obj_USCOREBoundaryFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREBoundaryFeatureInterpretation * soap_new_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREBoundaryFeatureInterpretation * soap_new_req_resqml20__obj_USCOREBoundaryFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREBoundaryFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREBoundaryFeatureInterpretation * soap_new_set_resqml20__obj_USCOREBoundaryFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREBoundaryFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation ? "resqml20:obj_BoundaryFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation ? "resqml20:obj_BoundaryFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation ? "resqml20:obj_BoundaryFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_BoundaryFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation ? "resqml20:obj_BoundaryFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, resqml20__obj_USCOREBoundaryFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREBoundaryFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREBoundaryFeatureInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREBoundaryFeatureInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREBoundaryFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREGeobodyInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeobodyInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, const char*, resqml20__obj_USCOREGeobodyInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeobodyInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeobodyInterpretation * soap_new_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeobodyInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeobodyInterpretation * soap_new_req_resqml20__obj_USCOREGeobodyInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeobodyInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGeobodyInterpretation * soap_new_set_resqml20__obj_USCOREGeobodyInterpretation(
	struct soap *soap,
	enum resqml20__Geobody3dShape *Geobody3dShape,
	enum resqml20__GeologicUnitComposition *GeologicUnitComposition__1,
	enum resqml20__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeobodyInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGeobodyInterpretation::Geobody3dShape = Geobody3dShape;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition__1;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation ? "resqml20:obj_GeobodyInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation ? "resqml20:obj_GeobodyInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation ? "resqml20:obj_GeobodyInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation ? "resqml20:obj_GeobodyInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeobodyInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, resqml20__obj_USCOREGeobodyInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeobodyInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeobodyInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStratigraphicColumn(struct soap*, const char*, int, const resqml20__obj_USCOREStratigraphicColumn *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicColumn * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStratigraphicColumn(struct soap*, const char*, resqml20__obj_USCOREStratigraphicColumn *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStratigraphicColumn * soap_new_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStratigraphicColumn(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStratigraphicColumn * soap_new_req_resqml20__obj_USCOREStratigraphicColumn(
	struct soap *soap,
	const std::vector<eml20__DataObjectReference *> & Ranks,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREStratigraphicColumn *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicColumn::Ranks = Ranks;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREStratigraphicColumn * soap_new_set_resqml20__obj_USCOREStratigraphicColumn(
	struct soap *soap,
	const std::vector<eml20__DataObjectReference *> & Ranks,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREStratigraphicColumn *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStratigraphicColumn::Ranks = Ranks;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn ? "resqml20:obj_StratigraphicColumn" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn ? "resqml20:obj_StratigraphicColumn" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn ? "resqml20:obj_StratigraphicColumn" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StratigraphicColumn", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn ? "resqml20:obj_StratigraphicColumn" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStratigraphicColumn * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStratigraphicColumn(struct soap*, resqml20__obj_USCOREStratigraphicColumn *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, resqml20__obj_USCOREStratigraphicColumn *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStratigraphicColumn(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, const char *URL, resqml20__obj_USCOREStratigraphicColumn *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicColumn(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStratigraphicColumn(struct soap *soap, resqml20__obj_USCOREStratigraphicColumn *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStratigraphicColumn(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREFaultInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREFaultInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREFaultInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREFaultInterpretation(struct soap*, const char*, resqml20__obj_USCOREFaultInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREFaultInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFaultInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREFaultInterpretation * soap_new_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREFaultInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREFaultInterpretation * soap_new_req_resqml20__obj_USCOREFaultInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREFaultInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFaultInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREFaultInterpretation * soap_new_set_resqml20__obj_USCOREFaultInterpretation(
	struct soap *soap,
	bool *IsListric,
	eml20__LengthMeasure *MaximumThrow,
	eml20__PlaneAngleMeasure *MeanAzimuth,
	eml20__PlaneAngleMeasure *MeanDip,
	const std::vector<resqml20__FaultThrow *> & ThrowInterpretation,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREFaultInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREFaultInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREFaultInterpretation::IsListric = IsListric;
		_p->resqml20__obj_USCOREFaultInterpretation::MaximumThrow = MaximumThrow;
		_p->resqml20__obj_USCOREFaultInterpretation::MeanAzimuth = MeanAzimuth;
		_p->resqml20__obj_USCOREFaultInterpretation::MeanDip = MeanDip;
		_p->resqml20__obj_USCOREFaultInterpretation::ThrowInterpretation = ThrowInterpretation;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation ? "resqml20:obj_FaultInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation ? "resqml20:obj_FaultInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation ? "resqml20:obj_FaultInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_FaultInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation ? "resqml20:obj_FaultInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREFaultInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREFaultInterpretation(struct soap*, resqml20__obj_USCOREFaultInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, resqml20__obj_USCOREFaultInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREFaultInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREFaultInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFaultInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREFaultInterpretation(struct soap *soap, resqml20__obj_USCOREFaultInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREFaultInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__HorizonInterpretationIndex(struct soap*, const char*, int, const resqml20__HorizonInterpretationIndex *, const char*);
SOAP_FMAC3 resqml20__HorizonInterpretationIndex * SOAP_FMAC4 soap_in_resqml20__HorizonInterpretationIndex(struct soap*, const char*, resqml20__HorizonInterpretationIndex *, const char*);
SOAP_FMAC1 resqml20__HorizonInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__HorizonInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__HorizonInterpretationIndex * soap_new_resqml20__HorizonInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__HorizonInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml20__HorizonInterpretationIndex * soap_new_req_resqml20__HorizonInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *Horizon)
{
	resqml20__HorizonInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__HorizonInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__HorizonInterpretationIndex::Index = Index;
		_p->resqml20__HorizonInterpretationIndex::Horizon = Horizon;
	}
	return _p;
}

inline resqml20__HorizonInterpretationIndex * soap_new_set_resqml20__HorizonInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	ULONG64 *StratigraphicRank,
	eml20__DataObjectReference *Horizon)
{
	resqml20__HorizonInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__HorizonInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__HorizonInterpretationIndex::Index = Index;
		_p->resqml20__HorizonInterpretationIndex::StratigraphicRank = StratigraphicRank;
		_p->resqml20__HorizonInterpretationIndex::Horizon = Horizon;
	}
	return _p;
}

inline int soap_write_resqml20__HorizonInterpretationIndex(struct soap *soap, resqml20__HorizonInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex ? "resqml20:HorizonInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__HorizonInterpretationIndex(struct soap *soap, const char *URL, resqml20__HorizonInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex ? "resqml20:HorizonInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__HorizonInterpretationIndex(struct soap *soap, const char *URL, resqml20__HorizonInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex ? "resqml20:HorizonInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__HorizonInterpretationIndex(struct soap *soap, const char *URL, resqml20__HorizonInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizonInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex ? "resqml20:HorizonInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__HorizonInterpretationIndex * SOAP_FMAC4 soap_get_resqml20__HorizonInterpretationIndex(struct soap*, resqml20__HorizonInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml20__HorizonInterpretationIndex(struct soap *soap, resqml20__HorizonInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__HorizonInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__HorizonInterpretationIndex(struct soap *soap, const char *URL, resqml20__HorizonInterpretationIndex *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__HorizonInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__HorizonInterpretationIndex(struct soap *soap, resqml20__HorizonInterpretationIndex *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__HorizonInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__MultipleContactInterpretationPart(struct soap*, const char*, int, const resqml20__MultipleContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml20__MultipleContactInterpretationPart * SOAP_FMAC4 soap_in_resqml20__MultipleContactInterpretationPart(struct soap*, const char*, resqml20__MultipleContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml20__MultipleContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__MultipleContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__MultipleContactInterpretationPart * soap_new_resqml20__MultipleContactInterpretationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__MultipleContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__MultipleContactInterpretationPart * soap_new_req_resqml20__MultipleContactInterpretationPart(
	struct soap *soap,
	const std::vector<ULONG64> & With,
	enum resqml20__ContactRelationship ContactRelationship__1,
	ULONG64 Index__1)
{
	resqml20__MultipleContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__MultipleContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__MultipleContactInterpretationPart::With = With;
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship__1;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index__1;
	}
	return _p;
}

inline resqml20__MultipleContactInterpretationPart * soap_new_set_resqml20__MultipleContactInterpretationPart(
	struct soap *soap,
	const std::vector<ULONG64> & With,
	enum resqml20__ContactRelationship ContactRelationship__1,
	ULONG64 Index__1,
	eml20__DataObjectReference *PartOf__1)
{
	resqml20__MultipleContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__MultipleContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__MultipleContactInterpretationPart::With = With;
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship__1;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index__1;
		_p->resqml20__AbstractContactInterpretationPart::PartOf = PartOf__1;
	}
	return _p;
}

inline int soap_write_resqml20__MultipleContactInterpretationPart(struct soap *soap, resqml20__MultipleContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MultipleContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart ? "resqml20:MultipleContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__MultipleContactInterpretationPart(struct soap *soap, const char *URL, resqml20__MultipleContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MultipleContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart ? "resqml20:MultipleContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__MultipleContactInterpretationPart(struct soap *soap, const char *URL, resqml20__MultipleContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MultipleContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart ? "resqml20:MultipleContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__MultipleContactInterpretationPart(struct soap *soap, const char *URL, resqml20__MultipleContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:MultipleContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart ? "resqml20:MultipleContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__MultipleContactInterpretationPart * SOAP_FMAC4 soap_get_resqml20__MultipleContactInterpretationPart(struct soap*, resqml20__MultipleContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml20__MultipleContactInterpretationPart(struct soap *soap, resqml20__MultipleContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__MultipleContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__MultipleContactInterpretationPart(struct soap *soap, const char *URL, resqml20__MultipleContactInterpretationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__MultipleContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__MultipleContactInterpretationPart(struct soap *soap, resqml20__MultipleContactInterpretationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__MultipleContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREStructuralOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, const char*, resqml20__obj_USCOREStructuralOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStructuralOrganizationInterpretation * soap_new_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStructuralOrganizationInterpretation * soap_new_req_resqml20__obj_USCOREStructuralOrganizationInterpretation(
	struct soap *soap,
	enum resqml20__OrderingCriteria OrderingCriteria,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStructuralOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREStructuralOrganizationInterpretation * soap_new_set_resqml20__obj_USCOREStructuralOrganizationInterpretation(
	struct soap *soap,
	enum resqml20__OrderingCriteria OrderingCriteria,
	const std::vector<eml20__DataObjectReference *> & Faults,
	const std::vector<resqml20__HorizonInterpretationIndex *> & Horizons,
	const std::vector<eml20__DataObjectReference *> & Sides,
	const std::vector<eml20__DataObjectReference *> & TopFrontier,
	const std::vector<eml20__DataObjectReference *> & BottomFrontier,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREStructuralOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::Faults = Faults;
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::Horizons = Horizons;
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::Sides = Sides;
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::TopFrontier = TopFrontier;
		_p->resqml20__obj_USCOREStructuralOrganizationInterpretation::BottomFrontier = BottomFrontier;
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation ? "resqml20:obj_StructuralOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation ? "resqml20:obj_StructuralOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation ? "resqml20:obj_StructuralOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StructuralOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation ? "resqml20:obj_StructuralOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, resqml20__obj_USCOREStructuralOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, resqml20__obj_USCOREStructuralOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREStructuralOrganizationInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, resqml20__obj_USCOREStructuralOrganizationInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStructuralOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREGeobodyBoundaryInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, const char*, resqml20__obj_USCOREGeobodyBoundaryInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGeobodyBoundaryInterpretation * soap_new_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGeobodyBoundaryInterpretation * soap_new_req_resqml20__obj_USCOREGeobodyBoundaryInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeobodyBoundaryInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGeobodyBoundaryInterpretation * soap_new_set_resqml20__obj_USCOREGeobodyBoundaryInterpretation(
	struct soap *soap,
	const std::vector<enum resqml20__BoundaryRelation> & BoundaryRelation,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGeobodyBoundaryInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGeobodyBoundaryInterpretation::BoundaryRelation = BoundaryRelation;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation ? "resqml20:obj_GeobodyBoundaryInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation ? "resqml20:obj_GeobodyBoundaryInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation ? "resqml20:obj_GeobodyBoundaryInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GeobodyBoundaryInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation ? "resqml20:obj_GeobodyBoundaryInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, resqml20__obj_USCOREGeobodyBoundaryInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyBoundaryInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGeobodyBoundaryInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, resqml20__obj_USCOREGeobodyBoundaryInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGeobodyBoundaryInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GeologicUnitInterpretationIndex(struct soap*, const char*, int, const resqml20__GeologicUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml20__GeologicUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml20__GeologicUnitInterpretationIndex(struct soap*, const char*, resqml20__GeologicUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml20__GeologicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__GeologicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__GeologicUnitInterpretationIndex * soap_new_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__GeologicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml20__GeologicUnitInterpretationIndex * soap_new_req_resqml20__GeologicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *Unit)
{
	resqml20__GeologicUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__GeologicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GeologicUnitInterpretationIndex::Index = Index;
		_p->resqml20__GeologicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline resqml20__GeologicUnitInterpretationIndex * soap_new_set_resqml20__GeologicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *Unit)
{
	resqml20__GeologicUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__GeologicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GeologicUnitInterpretationIndex::Index = Index;
		_p->resqml20__GeologicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline int soap_write_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, resqml20__GeologicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex ? "resqml20:GeologicUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__GeologicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex ? "resqml20:GeologicUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__GeologicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex ? "resqml20:GeologicUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__GeologicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GeologicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex ? "resqml20:GeologicUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__GeologicUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml20__GeologicUnitInterpretationIndex(struct soap*, resqml20__GeologicUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, resqml20__GeologicUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GeologicUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__GeologicUnitInterpretationIndex *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GeologicUnitInterpretationIndex(struct soap *soap, resqml20__GeologicUnitInterpretationIndex *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GeologicUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREWellboreInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREWellboreInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREWellboreInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREWellboreInterpretation(struct soap*, const char*, resqml20__obj_USCOREWellboreInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREWellboreInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREWellboreInterpretation * soap_new_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREWellboreInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREWellboreInterpretation * soap_new_req_resqml20__obj_USCOREWellboreInterpretation(
	struct soap *soap,
	bool IsDrilled,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreInterpretation::IsDrilled = IsDrilled;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREWellboreInterpretation * soap_new_set_resqml20__obj_USCOREWellboreInterpretation(
	struct soap *soap,
	bool IsDrilled,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREWellboreInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREWellboreInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREWellboreInterpretation::IsDrilled = IsDrilled;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation ? "resqml20:obj_WellboreInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation ? "resqml20:obj_WellboreInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation ? "resqml20:obj_WellboreInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_WellboreInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation ? "resqml20:obj_WellboreInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREWellboreInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREWellboreInterpretation(struct soap*, resqml20__obj_USCOREWellboreInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, resqml20__obj_USCOREWellboreInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREWellboreInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREWellboreInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREWellboreInterpretation(struct soap *soap, resqml20__obj_USCOREWellboreInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREWellboreInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, const char*, int, const resqml20__obj_USCOREGenericFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, const char*, resqml20__obj_USCOREGenericFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGenericFeatureInterpretation * soap_new_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGenericFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGenericFeatureInterpretation * soap_new_req_resqml20__obj_USCOREGenericFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGenericFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGenericFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREGenericFeatureInterpretation * soap_new_set_resqml20__obj_USCOREGenericFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGenericFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGenericFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation ? "resqml20:obj_GenericFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation ? "resqml20:obj_GenericFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation ? "resqml20:obj_GenericFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GenericFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation ? "resqml20:obj_GenericFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, resqml20__obj_USCOREGenericFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREGenericFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGenericFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCOREGenericFeatureInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGenericFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap *soap, resqml20__obj_USCOREGenericFeatureInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGenericFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, const char*, int, const resqml20__obj_USCORERockFluidUnitInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, const char*, resqml20__obj_USCORERockFluidUnitInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERockFluidUnitInterpretation * soap_new_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERockFluidUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERockFluidUnitInterpretation * soap_new_req_resqml20__obj_USCORERockFluidUnitInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORERockFluidUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORERockFluidUnitInterpretation * soap_new_set_resqml20__obj_USCORERockFluidUnitInterpretation(
	struct soap *soap,
	enum resqml20__Phase *Phase,
	enum resqml20__GeologicUnitComposition *GeologicUnitComposition__1,
	enum resqml20__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORERockFluidUnitInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERockFluidUnitInterpretation::Phase = Phase;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition__1;
		_p->resqml20__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation ? "resqml20:obj_RockFluidUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation ? "resqml20:obj_RockFluidUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation ? "resqml20:obj_RockFluidUnitInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidUnitInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation ? "resqml20:obj_RockFluidUnitInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, resqml20__obj_USCORERockFluidUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERockFluidUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidUnitInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidUnitInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidUnitInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ContactElementReference(struct soap*, const char*, int, const resqml20__ContactElementReference *, const char*);
SOAP_FMAC3 resqml20__ContactElementReference * SOAP_FMAC4 soap_in_resqml20__ContactElementReference(struct soap*, const char*, resqml20__ContactElementReference *, const char*);
SOAP_FMAC1 resqml20__ContactElementReference * SOAP_FMAC2 soap_instantiate_resqml20__ContactElementReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ContactElementReference * soap_new_resqml20__ContactElementReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ContactElementReference(soap, n, NULL, NULL, NULL);
}

inline resqml20__ContactElementReference * soap_new_req_resqml20__ContactElementReference(
	struct soap *soap,
	const std::string& ContentType__1,
	const std::string& Title__1,
	const std::string& UUID__1)
{
	resqml20__ContactElementReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactElementReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__DataObjectReference::ContentType = ContentType__1;
		_p->eml20__DataObjectReference::Title = Title__1;
		_p->eml20__DataObjectReference::UUID = UUID__1;
	}
	return _p;
}

inline resqml20__ContactElementReference * soap_new_set_resqml20__ContactElementReference(
	struct soap *soap,
	enum resqml20__ContactSide *Qualifier,
	enum resqml20__ContactMode *SecondaryQualifier,
	const std::string& ContentType__1,
	const std::string& Title__1,
	const std::string& UUID__1,
	std::string *UuidAuthority__1,
	std::string *VersionString__1)
{
	resqml20__ContactElementReference *_p = gsoap_resqml2_0_1::soap_new_resqml20__ContactElementReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ContactElementReference::Qualifier = Qualifier;
		_p->resqml20__ContactElementReference::SecondaryQualifier = SecondaryQualifier;
		_p->eml20__DataObjectReference::ContentType = ContentType__1;
		_p->eml20__DataObjectReference::Title = Title__1;
		_p->eml20__DataObjectReference::UUID = UUID__1;
		_p->eml20__DataObjectReference::UuidAuthority = UuidAuthority__1;
		_p->eml20__DataObjectReference::VersionString = VersionString__1;
	}
	return _p;
}

inline int soap_write_resqml20__ContactElementReference(struct soap *soap, resqml20__ContactElementReference const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactElementReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference ? "resqml20:ContactElementReference" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ContactElementReference(struct soap *soap, const char *URL, resqml20__ContactElementReference const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactElementReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference ? "resqml20:ContactElementReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ContactElementReference(struct soap *soap, const char *URL, resqml20__ContactElementReference const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactElementReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference ? "resqml20:ContactElementReference" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ContactElementReference(struct soap *soap, const char *URL, resqml20__ContactElementReference const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ContactElementReference", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference ? "resqml20:ContactElementReference" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ContactElementReference * SOAP_FMAC4 soap_get_resqml20__ContactElementReference(struct soap*, resqml20__ContactElementReference *, const char*, const char*);

inline int soap_read_resqml20__ContactElementReference(struct soap *soap, resqml20__ContactElementReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ContactElementReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ContactElementReference(struct soap *soap, const char *URL, resqml20__ContactElementReference *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ContactElementReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ContactElementReference(struct soap *soap, resqml20__ContactElementReference *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ContactElementReference(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char*, int, const resqml20__StratigraphicUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml20__StratigraphicUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char*, resqml20__StratigraphicUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml20__StratigraphicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StratigraphicUnitInterpretationIndex * soap_new_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StratigraphicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml20__StratigraphicUnitInterpretationIndex * soap_new_req_resqml20__StratigraphicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *Unit)
{
	resqml20__StratigraphicUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__StratigraphicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StratigraphicUnitInterpretationIndex::Index = Index;
		_p->resqml20__StratigraphicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline resqml20__StratigraphicUnitInterpretationIndex * soap_new_set_resqml20__StratigraphicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml20__DataObjectReference *Unit)
{
	resqml20__StratigraphicUnitInterpretationIndex *_p = gsoap_resqml2_0_1::soap_new_resqml20__StratigraphicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StratigraphicUnitInterpretationIndex::Index = Index;
		_p->resqml20__StratigraphicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline int soap_write_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, resqml20__StratigraphicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex ? "resqml20:StratigraphicUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__StratigraphicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex ? "resqml20:StratigraphicUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__StratigraphicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex ? "resqml20:StratigraphicUnitInterpretationIndex" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__StratigraphicUnitInterpretationIndex const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StratigraphicUnitInterpretationIndex", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex ? "resqml20:StratigraphicUnitInterpretationIndex" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StratigraphicUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, resqml20__StratigraphicUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, resqml20__StratigraphicUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StratigraphicUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, const char *URL, resqml20__StratigraphicUnitInterpretationIndex *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StratigraphicUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, resqml20__StratigraphicUnitInterpretationIndex *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StratigraphicUnitInterpretationIndex(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BinaryContactInterpretationPart(struct soap*, const char*, int, const resqml20__BinaryContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml20__BinaryContactInterpretationPart * SOAP_FMAC4 soap_in_resqml20__BinaryContactInterpretationPart(struct soap*, const char*, resqml20__BinaryContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml20__BinaryContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__BinaryContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__BinaryContactInterpretationPart * soap_new_resqml20__BinaryContactInterpretationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__BinaryContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml20__BinaryContactInterpretationPart * soap_new_req_resqml20__BinaryContactInterpretationPart(
	struct soap *soap,
	resqml20__ContactElementReference *DirectObject,
	enum resqml20__ContactVerb Verb,
	resqml20__ContactElementReference *Subject,
	enum resqml20__ContactRelationship ContactRelationship__1,
	ULONG64 Index__1)
{
	resqml20__BinaryContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__BinaryContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BinaryContactInterpretationPart::DirectObject = DirectObject;
		_p->resqml20__BinaryContactInterpretationPart::Verb = Verb;
		_p->resqml20__BinaryContactInterpretationPart::Subject = Subject;
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship__1;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index__1;
	}
	return _p;
}

inline resqml20__BinaryContactInterpretationPart * soap_new_set_resqml20__BinaryContactInterpretationPart(
	struct soap *soap,
	resqml20__ContactElementReference *DirectObject,
	enum resqml20__ContactVerb Verb,
	resqml20__ContactElementReference *Subject,
	enum resqml20__ContactRelationship ContactRelationship__1,
	ULONG64 Index__1,
	eml20__DataObjectReference *PartOf__1)
{
	resqml20__BinaryContactInterpretationPart *_p = gsoap_resqml2_0_1::soap_new_resqml20__BinaryContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BinaryContactInterpretationPart::DirectObject = DirectObject;
		_p->resqml20__BinaryContactInterpretationPart::Verb = Verb;
		_p->resqml20__BinaryContactInterpretationPart::Subject = Subject;
		_p->resqml20__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship__1;
		_p->resqml20__AbstractContactInterpretationPart::Index = Index__1;
		_p->resqml20__AbstractContactInterpretationPart::PartOf = PartOf__1;
	}
	return _p;
}

inline int soap_write_resqml20__BinaryContactInterpretationPart(struct soap *soap, resqml20__BinaryContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BinaryContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart ? "resqml20:BinaryContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BinaryContactInterpretationPart(struct soap *soap, const char *URL, resqml20__BinaryContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BinaryContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart ? "resqml20:BinaryContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BinaryContactInterpretationPart(struct soap *soap, const char *URL, resqml20__BinaryContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BinaryContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart ? "resqml20:BinaryContactInterpretationPart" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BinaryContactInterpretationPart(struct soap *soap, const char *URL, resqml20__BinaryContactInterpretationPart const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BinaryContactInterpretationPart", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart ? "resqml20:BinaryContactInterpretationPart" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__BinaryContactInterpretationPart * SOAP_FMAC4 soap_get_resqml20__BinaryContactInterpretationPart(struct soap*, resqml20__BinaryContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml20__BinaryContactInterpretationPart(struct soap *soap, resqml20__BinaryContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BinaryContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BinaryContactInterpretationPart(struct soap *soap, const char *URL, resqml20__BinaryContactInterpretationPart *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BinaryContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BinaryContactInterpretationPart(struct soap *soap, resqml20__BinaryContactInterpretationPart *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BinaryContactInterpretationPart(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractOrganizationInterpretation(struct soap*, const char*, int, const resqml20__AbstractOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml20__AbstractOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml20__AbstractOrganizationInterpretation(struct soap*, const char*, resqml20__AbstractOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml20__AbstractOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractOrganizationInterpretation * soap_new_resqml20__AbstractOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractOrganizationInterpretation * soap_new_req_resqml20__AbstractOrganizationInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractOrganizationInterpretation * soap_new_set_resqml20__AbstractOrganizationInterpretation(
	struct soap *soap,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation,
	enum resqml20__Domain Domain__1,
	eml20__DataObjectReference *InterpretedFeature__1,
	resqml20__TimeInterval *HasOccuredDuring__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__1;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__1;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractOrganizationInterpretation(struct soap *soap, resqml20__AbstractOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation ? "resqml20:AbstractOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation ? "resqml20:AbstractOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation ? "resqml20:AbstractOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation ? "resqml20:AbstractOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml20__AbstractOrganizationInterpretation(struct soap*, resqml20__AbstractOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml20__AbstractOrganizationInterpretation(struct soap *soap, resqml20__AbstractOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__AbstractOrganizationInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractOrganizationInterpretation(struct soap *soap, resqml20__AbstractOrganizationInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TimeInterval(struct soap*, const char*, int, const resqml20__TimeInterval *, const char*);
SOAP_FMAC3 resqml20__TimeInterval * SOAP_FMAC4 soap_in_resqml20__TimeInterval(struct soap*, const char*, resqml20__TimeInterval *, const char*);
SOAP_FMAC1 resqml20__TimeInterval * SOAP_FMAC2 soap_instantiate_resqml20__TimeInterval(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TimeInterval * soap_new_resqml20__TimeInterval(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TimeInterval(soap, n, NULL, NULL, NULL);
}

inline resqml20__TimeInterval * soap_new_req_resqml20__TimeInterval(
	struct soap *soap,
	eml20__DataObjectReference *ChronoBottom,
	eml20__DataObjectReference *ChronoTop)
{
	resqml20__TimeInterval *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeInterval(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeInterval::ChronoBottom = ChronoBottom;
		_p->resqml20__TimeInterval::ChronoTop = ChronoTop;
	}
	return _p;
}

inline resqml20__TimeInterval * soap_new_set_resqml20__TimeInterval(
	struct soap *soap,
	eml20__DataObjectReference *ChronoBottom,
	eml20__DataObjectReference *ChronoTop)
{
	resqml20__TimeInterval *_p = gsoap_resqml2_0_1::soap_new_resqml20__TimeInterval(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TimeInterval::ChronoBottom = ChronoBottom;
		_p->resqml20__TimeInterval::ChronoTop = ChronoTop;
	}
	return _p;
}

inline int soap_write_resqml20__TimeInterval(struct soap *soap, resqml20__TimeInterval const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeInterval", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval ? "resqml20:TimeInterval" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TimeInterval(struct soap *soap, const char *URL, resqml20__TimeInterval const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeInterval", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval ? "resqml20:TimeInterval" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TimeInterval(struct soap *soap, const char *URL, resqml20__TimeInterval const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeInterval", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval ? "resqml20:TimeInterval" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TimeInterval(struct soap *soap, const char *URL, resqml20__TimeInterval const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TimeInterval", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval ? "resqml20:TimeInterval" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TimeInterval * SOAP_FMAC4 soap_get_resqml20__TimeInterval(struct soap*, resqml20__TimeInterval *, const char*, const char*);

inline int soap_read_resqml20__TimeInterval(struct soap *soap, resqml20__TimeInterval *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TimeInterval(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TimeInterval(struct soap *soap, const char *URL, resqml20__TimeInterval *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TimeInterval(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TimeInterval(struct soap *soap, resqml20__TimeInterval *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TimeInterval(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, const char*, int, const resqml20__obj_USCORERockFluidOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, const char*, resqml20__obj_USCORERockFluidOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERockFluidOrganizationInterpretation * soap_new_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERockFluidOrganizationInterpretation * soap_new_req_resqml20__obj_USCORERockFluidOrganizationInterpretation(
	struct soap *soap,
	resqml20__RockFluidUnitInterpretationIndex *RockFluidUnitIndex,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORERockFluidOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERockFluidOrganizationInterpretation::RockFluidUnitIndex = RockFluidUnitIndex;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORERockFluidOrganizationInterpretation * soap_new_set_resqml20__obj_USCORERockFluidOrganizationInterpretation(
	struct soap *soap,
	resqml20__RockFluidUnitInterpretationIndex *RockFluidUnitIndex,
	const std::vector<resqml20__AbstractContactInterpretationPart *> & ContactInterpretation__1,
	enum resqml20__Domain Domain__2,
	eml20__DataObjectReference *InterpretedFeature__2,
	resqml20__TimeInterval *HasOccuredDuring__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORERockFluidOrganizationInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERockFluidOrganizationInterpretation::RockFluidUnitIndex = RockFluidUnitIndex;
		_p->resqml20__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation__1;
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain__2;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature__2;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation ? "resqml20:obj_RockFluidOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation ? "resqml20:obj_RockFluidOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation ? "resqml20:obj_RockFluidOrganizationInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RockFluidOrganizationInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation ? "resqml20:obj_RockFluidOrganizationInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, resqml20__obj_USCORERockFluidOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, const char *URL, resqml20__obj_USCORERockFluidOrganizationInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, resqml20__obj_USCORERockFluidOrganizationInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERockFluidOrganizationInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractFeatureInterpretation(struct soap*, const char*, int, const resqml20__AbstractFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml20__AbstractFeatureInterpretation * SOAP_FMAC4 soap_in_resqml20__AbstractFeatureInterpretation(struct soap*, const char*, resqml20__AbstractFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml20__AbstractFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractFeatureInterpretation * soap_new_resqml20__AbstractFeatureInterpretation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractFeatureInterpretation * soap_new_req_resqml20__AbstractFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain,
	eml20__DataObjectReference *InterpretedFeature,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractFeatureInterpretation * soap_new_set_resqml20__AbstractFeatureInterpretation(
	struct soap *soap,
	enum resqml20__Domain Domain,
	eml20__DataObjectReference *InterpretedFeature,
	resqml20__TimeInterval *HasOccuredDuring,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractFeatureInterpretation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractFeatureInterpretation::Domain = Domain;
		_p->resqml20__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature;
		_p->resqml20__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractFeatureInterpretation(struct soap *soap, resqml20__AbstractFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation ? "resqml20:AbstractFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractFeatureInterpretation(struct soap *soap, const char *URL, resqml20__AbstractFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation ? "resqml20:AbstractFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractFeatureInterpretation(struct soap *soap, const char *URL, resqml20__AbstractFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation ? "resqml20:AbstractFeatureInterpretation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractFeatureInterpretation(struct soap *soap, const char *URL, resqml20__AbstractFeatureInterpretation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractFeatureInterpretation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation ? "resqml20:AbstractFeatureInterpretation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractFeatureInterpretation * SOAP_FMAC4 soap_get_resqml20__AbstractFeatureInterpretation(struct soap*, resqml20__AbstractFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml20__AbstractFeatureInterpretation(struct soap *soap, resqml20__AbstractFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractFeatureInterpretation(struct soap *soap, const char *URL, resqml20__AbstractFeatureInterpretation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractFeatureInterpretation(struct soap *soap, resqml20__AbstractFeatureInterpretation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractFeatureInterpretation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractParentWindow(struct soap*, const char*, int, const resqml20__AbstractParentWindow *, const char*);
SOAP_FMAC3 resqml20__AbstractParentWindow * SOAP_FMAC4 soap_in_resqml20__AbstractParentWindow(struct soap*, const char*, resqml20__AbstractParentWindow *, const char*);
SOAP_FMAC1 resqml20__AbstractParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractParentWindow * soap_new_resqml20__AbstractParentWindow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractParentWindow * soap_new_req_resqml20__AbstractParentWindow(
	struct soap *soap)
{
	resqml20__AbstractParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractParentWindow * soap_new_set_resqml20__AbstractParentWindow(
	struct soap *soap,
	resqml20__CellOverlap *CellOverlap)
{
	resqml20__AbstractParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractParentWindow::CellOverlap = CellOverlap;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractParentWindow(struct soap *soap, resqml20__AbstractParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow ? "resqml20:AbstractParentWindow" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractParentWindow(struct soap *soap, const char *URL, resqml20__AbstractParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow ? "resqml20:AbstractParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractParentWindow(struct soap *soap, const char *URL, resqml20__AbstractParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow ? "resqml20:AbstractParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractParentWindow(struct soap *soap, const char *URL, resqml20__AbstractParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow ? "resqml20:AbstractParentWindow" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractParentWindow * SOAP_FMAC4 soap_get_resqml20__AbstractParentWindow(struct soap*, resqml20__AbstractParentWindow *, const char*, const char*);

inline int soap_read_resqml20__AbstractParentWindow(struct soap *soap, resqml20__AbstractParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractParentWindow(struct soap *soap, const char *URL, resqml20__AbstractParentWindow *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractParentWindow(struct soap *soap, resqml20__AbstractParentWindow *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractColumnLayerGridGeometry(struct soap*, const char*, int, const resqml20__AbstractColumnLayerGridGeometry *, const char*);
SOAP_FMAC3 resqml20__AbstractColumnLayerGridGeometry * SOAP_FMAC4 soap_in_resqml20__AbstractColumnLayerGridGeometry(struct soap*, const char*, resqml20__AbstractColumnLayerGridGeometry *, const char*);
SOAP_FMAC1 resqml20__AbstractColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractColumnLayerGridGeometry * soap_new_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractColumnLayerGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractColumnLayerGridGeometry * soap_new_req_resqml20__AbstractColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml20__KDirection KDirection,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined,
	enum resqml20__PillarShape PillarShape,
	resqml20__AbstractPoint3dArray *Points__2,
	eml20__DataObjectReference *LocalCrs__3)
{
	resqml20__AbstractColumnLayerGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape;
		_p->resqml20__PointGeometry::Points = Points__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__3;
	}
	return _p;
}

inline resqml20__AbstractColumnLayerGridGeometry * soap_new_set_resqml20__AbstractColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml20__KDirection KDirection,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined,
	enum resqml20__PillarShape PillarShape,
	resqml20__AbstractBooleanArray *CellGeometryIsDefined,
	resqml20__AbstractBooleanArray *NodeIsColocatedInKDirection,
	resqml20__AbstractBooleanArray *NodeIsColocatedOnKEdge,
	resqml20__ColumnLayerSubnodeTopology *SubnodeTopology,
	resqml20__ColumnLayerSplitCoordinateLines *SplitCoordinateLines,
	resqml20__SplitNodePatch *SplitNodes,
	const std::vector<resqml20__AdditionalGridPoints *> & AdditionalGridPoints__1,
	resqml20__AbstractPoint3dArray *Points__2,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates__2,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *LocalCrs__3)
{
	resqml20__AbstractColumnLayerGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape;
		_p->resqml20__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge;
		_p->resqml20__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes;
		_p->resqml20__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints__1;
		_p->resqml20__PointGeometry::Points = Points__2;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates__2;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, resqml20__AbstractColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry ? "resqml20:AbstractColumnLayerGridGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry ? "resqml20:AbstractColumnLayerGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry ? "resqml20:AbstractColumnLayerGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry ? "resqml20:AbstractColumnLayerGridGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractColumnLayerGridGeometry * SOAP_FMAC4 soap_get_resqml20__AbstractColumnLayerGridGeometry(struct soap*, resqml20__AbstractColumnLayerGridGeometry *, const char*, const char*);

inline int soap_read_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, resqml20__AbstractColumnLayerGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractColumnLayerGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractColumnLayerGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractColumnLayerGridGeometry(struct soap *soap, resqml20__AbstractColumnLayerGridGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractColumnLayerGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Intervals(struct soap*, const char*, int, const resqml20__Intervals *, const char*);
SOAP_FMAC3 resqml20__Intervals * SOAP_FMAC4 soap_in_resqml20__Intervals(struct soap*, const char*, resqml20__Intervals *, const char*);
SOAP_FMAC1 resqml20__Intervals * SOAP_FMAC2 soap_instantiate_resqml20__Intervals(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Intervals * soap_new_resqml20__Intervals(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Intervals(soap, n, NULL, NULL, NULL);
}

inline resqml20__Intervals * soap_new_req_resqml20__Intervals(
	struct soap *soap,
	ULONG64 IntervalCount,
	resqml20__AbstractIntegerArray *ParentCountPerInterval,
	resqml20__AbstractIntegerArray *ChildCountPerInterval)
{
	resqml20__Intervals *_p = gsoap_resqml2_0_1::soap_new_resqml20__Intervals(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Intervals::IntervalCount = IntervalCount;
		_p->resqml20__Intervals::ParentCountPerInterval = ParentCountPerInterval;
		_p->resqml20__Intervals::ChildCountPerInterval = ChildCountPerInterval;
	}
	return _p;
}

inline resqml20__Intervals * soap_new_set_resqml20__Intervals(
	struct soap *soap,
	ULONG64 IntervalCount,
	resqml20__AbstractIntegerArray *ParentCountPerInterval,
	resqml20__AbstractIntegerArray *ChildCountPerInterval,
	resqml20__AbstractDoubleArray *ChildCellWeights)
{
	resqml20__Intervals *_p = gsoap_resqml2_0_1::soap_new_resqml20__Intervals(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Intervals::IntervalCount = IntervalCount;
		_p->resqml20__Intervals::ParentCountPerInterval = ParentCountPerInterval;
		_p->resqml20__Intervals::ChildCountPerInterval = ChildCountPerInterval;
		_p->resqml20__Intervals::ChildCellWeights = ChildCellWeights;
	}
	return _p;
}

inline int soap_write_resqml20__Intervals(struct soap *soap, resqml20__Intervals const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Intervals", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals ? "resqml20:Intervals" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Intervals(struct soap *soap, const char *URL, resqml20__Intervals const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Intervals", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals ? "resqml20:Intervals" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Intervals(struct soap *soap, const char *URL, resqml20__Intervals const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Intervals", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals ? "resqml20:Intervals" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Intervals(struct soap *soap, const char *URL, resqml20__Intervals const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Intervals", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals ? "resqml20:Intervals" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Intervals * SOAP_FMAC4 soap_get_resqml20__Intervals(struct soap*, resqml20__Intervals *, const char*, const char*);

inline int soap_read_resqml20__Intervals(struct soap *soap, resqml20__Intervals *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Intervals(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Intervals(struct soap *soap, const char *URL, resqml20__Intervals *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Intervals(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Intervals(struct soap *soap, resqml20__Intervals *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Intervals(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__OverlapVolume(struct soap*, const char*, int, const resqml20__OverlapVolume *, const char*);
SOAP_FMAC3 resqml20__OverlapVolume * SOAP_FMAC4 soap_in_resqml20__OverlapVolume(struct soap*, const char*, resqml20__OverlapVolume *, const char*);
SOAP_FMAC1 resqml20__OverlapVolume * SOAP_FMAC2 soap_instantiate_resqml20__OverlapVolume(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__OverlapVolume * soap_new_resqml20__OverlapVolume(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__OverlapVolume(soap, n, NULL, NULL, NULL);
}

inline resqml20__OverlapVolume * soap_new_req_resqml20__OverlapVolume(
	struct soap *soap)
{
	resqml20__OverlapVolume *_p = gsoap_resqml2_0_1::soap_new_resqml20__OverlapVolume(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__OverlapVolume * soap_new_set_resqml20__OverlapVolume(
	struct soap *soap,
	struct __resqml20__OverlapVolume_sequence *__OverlapVolume_sequence)
{
	resqml20__OverlapVolume *_p = gsoap_resqml2_0_1::soap_new_resqml20__OverlapVolume(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__OverlapVolume::__OverlapVolume_sequence = __OverlapVolume_sequence;
	}
	return _p;
}

inline int soap_write_resqml20__OverlapVolume(struct soap *soap, resqml20__OverlapVolume const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OverlapVolume", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume ? "resqml20:OverlapVolume" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__OverlapVolume(struct soap *soap, const char *URL, resqml20__OverlapVolume const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OverlapVolume", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume ? "resqml20:OverlapVolume" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__OverlapVolume(struct soap *soap, const char *URL, resqml20__OverlapVolume const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OverlapVolume", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume ? "resqml20:OverlapVolume" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__OverlapVolume(struct soap *soap, const char *URL, resqml20__OverlapVolume const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:OverlapVolume", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume ? "resqml20:OverlapVolume" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__OverlapVolume * SOAP_FMAC4 soap_get_resqml20__OverlapVolume(struct soap*, resqml20__OverlapVolume *, const char*, const char*);

inline int soap_read_resqml20__OverlapVolume(struct soap *soap, resqml20__OverlapVolume *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__OverlapVolume(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__OverlapVolume(struct soap *soap, const char *URL, resqml20__OverlapVolume *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__OverlapVolume(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__OverlapVolume(struct soap *soap, resqml20__OverlapVolume *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__OverlapVolume(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__VariableSubnodePatch(struct soap*, const char*, int, const resqml20__VariableSubnodePatch *, const char*);
SOAP_FMAC3 resqml20__VariableSubnodePatch * SOAP_FMAC4 soap_in_resqml20__VariableSubnodePatch(struct soap*, const char*, resqml20__VariableSubnodePatch *, const char*);
SOAP_FMAC1 resqml20__VariableSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__VariableSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__VariableSubnodePatch * soap_new_resqml20__VariableSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__VariableSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__VariableSubnodePatch * soap_new_req_resqml20__VariableSubnodePatch(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ObjectIndices,
	resqml20__AbstractIntegerArray *SubnodeCountPerSelectedObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__VariableSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__VariableSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VariableSubnodePatch::ObjectIndices = ObjectIndices;
		_p->resqml20__VariableSubnodePatch::SubnodeCountPerSelectedObject = SubnodeCountPerSelectedObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__VariableSubnodePatch * soap_new_set_resqml20__VariableSubnodePatch(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ObjectIndices,
	resqml20__AbstractIntegerArray *SubnodeCountPerSelectedObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__VariableSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__VariableSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__VariableSubnodePatch::ObjectIndices = ObjectIndices;
		_p->resqml20__VariableSubnodePatch::SubnodeCountPerSelectedObject = SubnodeCountPerSelectedObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__VariableSubnodePatch(struct soap *soap, resqml20__VariableSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VariableSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch ? "resqml20:VariableSubnodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__VariableSubnodePatch(struct soap *soap, const char *URL, resqml20__VariableSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VariableSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch ? "resqml20:VariableSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__VariableSubnodePatch(struct soap *soap, const char *URL, resqml20__VariableSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VariableSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch ? "resqml20:VariableSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__VariableSubnodePatch(struct soap *soap, const char *URL, resqml20__VariableSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:VariableSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch ? "resqml20:VariableSubnodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__VariableSubnodePatch * SOAP_FMAC4 soap_get_resqml20__VariableSubnodePatch(struct soap*, resqml20__VariableSubnodePatch *, const char*, const char*);

inline int soap_read_resqml20__VariableSubnodePatch(struct soap *soap, resqml20__VariableSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__VariableSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__VariableSubnodePatch(struct soap *soap, const char *URL, resqml20__VariableSubnodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__VariableSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__VariableSubnodePatch(struct soap *soap, resqml20__VariableSubnodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__VariableSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnLayerSplitColumnEdges(struct soap*, const char*, int, const resqml20__ColumnLayerSplitColumnEdges *, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSplitColumnEdges * SOAP_FMAC4 soap_in_resqml20__ColumnLayerSplitColumnEdges(struct soap*, const char*, resqml20__ColumnLayerSplitColumnEdges *, const char*);
SOAP_FMAC1 resqml20__ColumnLayerSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ColumnLayerSplitColumnEdges * soap_new_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ColumnLayerSplitColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml20__ColumnLayerSplitColumnEdges * soap_new_req_resqml20__ColumnLayerSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentColumnEdgeIndices,
	resqml20__AbstractIntegerArray *ColumnPerSplitColumnEdge)
{
	resqml20__ColumnLayerSplitColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerSplitColumnEdges::Count = Count;
		_p->resqml20__ColumnLayerSplitColumnEdges::ParentColumnEdgeIndices = ParentColumnEdgeIndices;
		_p->resqml20__ColumnLayerSplitColumnEdges::ColumnPerSplitColumnEdge = ColumnPerSplitColumnEdge;
	}
	return _p;
}

inline resqml20__ColumnLayerSplitColumnEdges * soap_new_set_resqml20__ColumnLayerSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentColumnEdgeIndices,
	resqml20__AbstractIntegerArray *ColumnPerSplitColumnEdge)
{
	resqml20__ColumnLayerSplitColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerSplitColumnEdges::Count = Count;
		_p->resqml20__ColumnLayerSplitColumnEdges::ParentColumnEdgeIndices = ParentColumnEdgeIndices;
		_p->resqml20__ColumnLayerSplitColumnEdges::ColumnPerSplitColumnEdge = ColumnPerSplitColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, resqml20__ColumnLayerSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges ? "resqml20:ColumnLayerSplitColumnEdges" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges ? "resqml20:ColumnLayerSplitColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges ? "resqml20:ColumnLayerSplitColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges ? "resqml20:ColumnLayerSplitColumnEdges" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ColumnLayerSplitColumnEdges * SOAP_FMAC4 soap_get_resqml20__ColumnLayerSplitColumnEdges(struct soap*, resqml20__ColumnLayerSplitColumnEdges *, const char*, const char*);

inline int soap_read_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, resqml20__ColumnLayerSplitColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnLayerSplitColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitColumnEdges *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSplitColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnLayerSplitColumnEdges(struct soap *soap, resqml20__ColumnLayerSplitColumnEdges *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSplitColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__CellOverlap(struct soap*, const char*, int, const resqml20__CellOverlap *, const char*);
SOAP_FMAC3 resqml20__CellOverlap * SOAP_FMAC4 soap_in_resqml20__CellOverlap(struct soap*, const char*, resqml20__CellOverlap *, const char*);
SOAP_FMAC1 resqml20__CellOverlap * SOAP_FMAC2 soap_instantiate_resqml20__CellOverlap(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__CellOverlap * soap_new_resqml20__CellOverlap(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__CellOverlap(soap, n, NULL, NULL, NULL);
}

inline resqml20__CellOverlap * soap_new_req_resqml20__CellOverlap(
	struct soap *soap)
{
	resqml20__CellOverlap *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellOverlap(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__CellOverlap * soap_new_set_resqml20__CellOverlap(
	struct soap *soap,
	struct __resqml20__CellOverlap_sequence *__CellOverlap_sequence)
{
	resqml20__CellOverlap *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellOverlap(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellOverlap::__CellOverlap_sequence = __CellOverlap_sequence;
	}
	return _p;
}

inline int soap_write_resqml20__CellOverlap(struct soap *soap, resqml20__CellOverlap const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellOverlap", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap ? "resqml20:CellOverlap" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__CellOverlap(struct soap *soap, const char *URL, resqml20__CellOverlap const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellOverlap", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap ? "resqml20:CellOverlap" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__CellOverlap(struct soap *soap, const char *URL, resqml20__CellOverlap const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellOverlap", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap ? "resqml20:CellOverlap" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__CellOverlap(struct soap *soap, const char *URL, resqml20__CellOverlap const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellOverlap", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap ? "resqml20:CellOverlap" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__CellOverlap * SOAP_FMAC4 soap_get_resqml20__CellOverlap(struct soap*, resqml20__CellOverlap *, const char*, const char*);

inline int soap_read_resqml20__CellOverlap(struct soap *soap, resqml20__CellOverlap *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__CellOverlap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__CellOverlap(struct soap *soap, const char *URL, resqml20__CellOverlap *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__CellOverlap(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__CellOverlap(struct soap *soap, resqml20__CellOverlap *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__CellOverlap(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, const char*, int, const resqml20__UnstructuredGridHingeNodeFaces *, const char*);
SOAP_FMAC3 resqml20__UnstructuredGridHingeNodeFaces * SOAP_FMAC4 soap_in_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, const char*, resqml20__UnstructuredGridHingeNodeFaces *, const char*);
SOAP_FMAC1 resqml20__UnstructuredGridHingeNodeFaces * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UnstructuredGridHingeNodeFaces * soap_new_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UnstructuredGridHingeNodeFaces(soap, n, NULL, NULL, NULL);
}

inline resqml20__UnstructuredGridHingeNodeFaces * soap_new_req_resqml20__UnstructuredGridHingeNodeFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *FaceIndices)
{
	resqml20__UnstructuredGridHingeNodeFaces *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredGridHingeNodeFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredGridHingeNodeFaces::Count = Count;
		_p->resqml20__UnstructuredGridHingeNodeFaces::FaceIndices = FaceIndices;
	}
	return _p;
}

inline resqml20__UnstructuredGridHingeNodeFaces * soap_new_set_resqml20__UnstructuredGridHingeNodeFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *FaceIndices)
{
	resqml20__UnstructuredGridHingeNodeFaces *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredGridHingeNodeFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredGridHingeNodeFaces::Count = Count;
		_p->resqml20__UnstructuredGridHingeNodeFaces::FaceIndices = FaceIndices;
	}
	return _p;
}

inline int soap_write_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, resqml20__UnstructuredGridHingeNodeFaces const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridHingeNodeFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces ? "resqml20:UnstructuredGridHingeNodeFaces" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, const char *URL, resqml20__UnstructuredGridHingeNodeFaces const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridHingeNodeFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces ? "resqml20:UnstructuredGridHingeNodeFaces" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, const char *URL, resqml20__UnstructuredGridHingeNodeFaces const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridHingeNodeFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces ? "resqml20:UnstructuredGridHingeNodeFaces" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, const char *URL, resqml20__UnstructuredGridHingeNodeFaces const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridHingeNodeFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces ? "resqml20:UnstructuredGridHingeNodeFaces" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UnstructuredGridHingeNodeFaces * SOAP_FMAC4 soap_get_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, resqml20__UnstructuredGridHingeNodeFaces *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, resqml20__UnstructuredGridHingeNodeFaces *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredGridHingeNodeFaces(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, const char *URL, resqml20__UnstructuredGridHingeNodeFaces *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredGridHingeNodeFaces(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredGridHingeNodeFaces(struct soap *soap, resqml20__UnstructuredGridHingeNodeFaces *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredGridHingeNodeFaces(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractGridGeometry(struct soap*, const char*, int, const resqml20__AbstractGridGeometry *, const char*);
SOAP_FMAC3 resqml20__AbstractGridGeometry * SOAP_FMAC4 soap_in_resqml20__AbstractGridGeometry(struct soap*, const char*, resqml20__AbstractGridGeometry *, const char*);
SOAP_FMAC1 resqml20__AbstractGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractGridGeometry * soap_new_resqml20__AbstractGridGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractGridGeometry * soap_new_req_resqml20__AbstractGridGeometry(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *Points__1,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__AbstractGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PointGeometry::Points = Points__1;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline resqml20__AbstractGridGeometry * soap_new_set_resqml20__AbstractGridGeometry(
	struct soap *soap,
	const std::vector<resqml20__AdditionalGridPoints *> & AdditionalGridPoints,
	resqml20__AbstractPoint3dArray *Points__1,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates__1,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__AbstractGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints;
		_p->resqml20__PointGeometry::Points = Points__1;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates__1;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractGridGeometry(struct soap *soap, resqml20__AbstractGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry ? "resqml20:AbstractGridGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry ? "resqml20:AbstractGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry ? "resqml20:AbstractGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry ? "resqml20:AbstractGridGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractGridGeometry * SOAP_FMAC4 soap_get_resqml20__AbstractGridGeometry(struct soap*, resqml20__AbstractGridGeometry *, const char*, const char*);

inline int soap_read_resqml20__AbstractGridGeometry(struct soap *soap, resqml20__AbstractGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractGridGeometry(struct soap *soap, const char *URL, resqml20__AbstractGridGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractGridGeometry(struct soap *soap, resqml20__AbstractGridGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREGridConnectionSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, const char*, resqml20__obj_USCOREGridConnectionSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGridConnectionSetRepresentation * soap_new_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGridConnectionSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGridConnectionSetRepresentation * soap_new_req_resqml20__obj_USCOREGridConnectionSetRepresentation(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *CellIndexPairs,
	const std::vector<eml20__DataObjectReference *> & Grid,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGridConnectionSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGridConnectionSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::Count = Count;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::CellIndexPairs = CellIndexPairs;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::Grid = Grid;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREGridConnectionSetRepresentation * soap_new_set_resqml20__obj_USCOREGridConnectionSetRepresentation(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *CellIndexPairs,
	resqml20__AbstractIntegerArray *GridIndexPairs,
	resqml20__AbstractIntegerArray *LocalFacePerCellIndexPairs,
	resqml20__ConnectionInterpretations *ConnectionInterpretations,
	const std::vector<eml20__DataObjectReference *> & Grid,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREGridConnectionSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGridConnectionSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::Count = Count;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::CellIndexPairs = CellIndexPairs;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::GridIndexPairs = GridIndexPairs;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::LocalFacePerCellIndexPairs = LocalFacePerCellIndexPairs;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::ConnectionInterpretations = ConnectionInterpretations;
		_p->resqml20__obj_USCOREGridConnectionSetRepresentation::Grid = Grid;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation ? "resqml20:obj_GridConnectionSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation ? "resqml20:obj_GridConnectionSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation ? "resqml20:obj_GridConnectionSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GridConnectionSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation ? "resqml20:obj_GridConnectionSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, resqml20__obj_USCOREGridConnectionSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, resqml20__obj_USCOREGridConnectionSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGridConnectionSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGridConnectionSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGridConnectionSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, resqml20__obj_USCOREGridConnectionSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGridConnectionSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORETruncatedIjkGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, const char*, resqml20__obj_USCORETruncatedIjkGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORETruncatedIjkGridRepresentation * soap_new_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORETruncatedIjkGridRepresentation * soap_new_req_resqml20__obj_USCORETruncatedIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	resqml20__IjkGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__TruncationCellPatch *TruncationCells__1,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETruncatedIjkGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Ni = Ni;
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Nj = Nj;
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORETruncatedIjkGridRepresentation * soap_new_set_resqml20__obj_USCORETruncatedIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	resqml20__IjkGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__TruncationCellPatch *TruncationCells__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__2,
	resqml20__AbstractParentWindow *ParentWindow__2,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETruncatedIjkGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Ni = Ni;
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Nj = Nj;
		_p->resqml20__obj_USCORETruncatedIjkGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells__1;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__2;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__2;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation ? "resqml20:obj_TruncatedIjkGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation ? "resqml20:obj_TruncatedIjkGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation ? "resqml20:obj_TruncatedIjkGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedIjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation ? "resqml20:obj_TruncatedIjkGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, resqml20__obj_USCORETruncatedIjkGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedIjkGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedIjkGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedIjkGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETruncatedIjkGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GpGridIjkGridPatch(struct soap*, const char*, int, const resqml20__GpGridIjkGridPatch *, const char*);
SOAP_FMAC3 resqml20__GpGridIjkGridPatch * SOAP_FMAC4 soap_in_resqml20__GpGridIjkGridPatch(struct soap*, const char*, resqml20__GpGridIjkGridPatch *, const char*);
SOAP_FMAC1 resqml20__GpGridIjkGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridIjkGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__GpGridIjkGridPatch * soap_new_resqml20__GpGridIjkGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__GpGridIjkGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__GpGridIjkGridPatch * soap_new_req_resqml20__GpGridIjkGridPatch(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridIjkGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridIjkGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridIjkGridPatch::Ni = Ni;
		_p->resqml20__GpGridIjkGridPatch::Nj = Nj;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__GpGridIjkGridPatch * soap_new_set_resqml20__GpGridIjkGridPatch(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	bool *RadialGridIsComplete,
	resqml20__IjkGridGeometry *Geometry,
	resqml20__TruncationCellPatch *TruncationCells,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridIjkGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridIjkGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridIjkGridPatch::Ni = Ni;
		_p->resqml20__GpGridIjkGridPatch::Nj = Nj;
		_p->resqml20__GpGridIjkGridPatch::RadialGridIsComplete = RadialGridIsComplete;
		_p->resqml20__GpGridIjkGridPatch::Geometry = Geometry;
		_p->resqml20__GpGridIjkGridPatch::TruncationCells = TruncationCells;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__GpGridIjkGridPatch(struct soap *soap, resqml20__GpGridIjkGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridIjkGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch ? "resqml20:GpGridIjkGridPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GpGridIjkGridPatch(struct soap *soap, const char *URL, resqml20__GpGridIjkGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridIjkGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch ? "resqml20:GpGridIjkGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GpGridIjkGridPatch(struct soap *soap, const char *URL, resqml20__GpGridIjkGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridIjkGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch ? "resqml20:GpGridIjkGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GpGridIjkGridPatch(struct soap *soap, const char *URL, resqml20__GpGridIjkGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridIjkGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch ? "resqml20:GpGridIjkGridPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__GpGridIjkGridPatch * SOAP_FMAC4 soap_get_resqml20__GpGridIjkGridPatch(struct soap*, resqml20__GpGridIjkGridPatch *, const char*, const char*);

inline int soap_read_resqml20__GpGridIjkGridPatch(struct soap *soap, resqml20__GpGridIjkGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GpGridIjkGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GpGridIjkGridPatch(struct soap *soap, const char *URL, resqml20__GpGridIjkGridPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GpGridIjkGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GpGridIjkGridPatch(struct soap *soap, resqml20__GpGridIjkGridPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GpGridIjkGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml20__AbstractColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, const char*, resqml20__AbstractColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractColumnLayerGridRepresentation * soap_new_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractColumnLayerGridRepresentation * soap_new_req_resqml20__AbstractColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__AbstractColumnLayerGridRepresentation * soap_new_set_resqml20__AbstractColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphicUnits,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	resqml20__AbstractParentWindow *ParentWindow__1,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml20__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__1;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation ? "resqml20:AbstractColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation ? "resqml20:AbstractColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation ? "resqml20:AbstractColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation ? "resqml20:AbstractColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, resqml20__AbstractColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractColumnLayerGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractColumnLayerGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__CellParentWindow(struct soap*, const char*, int, const resqml20__CellParentWindow *, const char*);
SOAP_FMAC3 resqml20__CellParentWindow * SOAP_FMAC4 soap_in_resqml20__CellParentWindow(struct soap*, const char*, resqml20__CellParentWindow *, const char*);
SOAP_FMAC1 resqml20__CellParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__CellParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__CellParentWindow * soap_new_resqml20__CellParentWindow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__CellParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml20__CellParentWindow * soap_new_req_resqml20__CellParentWindow(
	struct soap *soap,
	resqml20__AbstractIntegerArray *CellIndices,
	eml20__DataObjectReference *ParentGrid)
{
	resqml20__CellParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellParentWindow::CellIndices = CellIndices;
		_p->resqml20__CellParentWindow::ParentGrid = ParentGrid;
	}
	return _p;
}

inline resqml20__CellParentWindow * soap_new_set_resqml20__CellParentWindow(
	struct soap *soap,
	resqml20__AbstractIntegerArray *CellIndices,
	eml20__DataObjectReference *ParentGrid,
	resqml20__CellOverlap *CellOverlap__1)
{
	resqml20__CellParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellParentWindow::CellIndices = CellIndices;
		_p->resqml20__CellParentWindow::ParentGrid = ParentGrid;
		_p->resqml20__AbstractParentWindow::CellOverlap = CellOverlap__1;
	}
	return _p;
}

inline int soap_write_resqml20__CellParentWindow(struct soap *soap, resqml20__CellParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow ? "resqml20:CellParentWindow" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__CellParentWindow(struct soap *soap, const char *URL, resqml20__CellParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow ? "resqml20:CellParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__CellParentWindow(struct soap *soap, const char *URL, resqml20__CellParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow ? "resqml20:CellParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__CellParentWindow(struct soap *soap, const char *URL, resqml20__CellParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow ? "resqml20:CellParentWindow" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__CellParentWindow * SOAP_FMAC4 soap_get_resqml20__CellParentWindow(struct soap*, resqml20__CellParentWindow *, const char*, const char*);

inline int soap_read_resqml20__CellParentWindow(struct soap *soap, resqml20__CellParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__CellParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__CellParentWindow(struct soap *soap, const char *URL, resqml20__CellParentWindow *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__CellParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__CellParentWindow(struct soap *soap, resqml20__CellParentWindow *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__CellParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_req_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml20__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__TruncationCellPatch *TruncationCells__1,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_set_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml20__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__TruncationCellPatch *TruncationCells__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__2,
	resqml20__AbstractParentWindow *ParentWindow__2,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells__1;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__2;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__2;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Edges(struct soap*, const char*, int, const resqml20__Edges *, const char*);
SOAP_FMAC3 resqml20__Edges * SOAP_FMAC4 soap_in_resqml20__Edges(struct soap*, const char*, resqml20__Edges *, const char*);
SOAP_FMAC1 resqml20__Edges * SOAP_FMAC2 soap_instantiate_resqml20__Edges(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Edges * soap_new_resqml20__Edges(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Edges(soap, n, NULL, NULL, NULL);
}

inline resqml20__Edges * soap_new_req_resqml20__Edges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *NodesPerEdge)
{
	resqml20__Edges *_p = gsoap_resqml2_0_1::soap_new_resqml20__Edges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Edges::Count = Count;
		_p->resqml20__Edges::NodesPerEdge = NodesPerEdge;
	}
	return _p;
}

inline resqml20__Edges * soap_new_set_resqml20__Edges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *NodesPerEdge)
{
	resqml20__Edges *_p = gsoap_resqml2_0_1::soap_new_resqml20__Edges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Edges::Count = Count;
		_p->resqml20__Edges::NodesPerEdge = NodesPerEdge;
	}
	return _p;
}

inline int soap_write_resqml20__Edges(struct soap *soap, resqml20__Edges const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Edges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges ? "resqml20:Edges" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Edges(struct soap *soap, const char *URL, resqml20__Edges const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Edges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges ? "resqml20:Edges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Edges(struct soap *soap, const char *URL, resqml20__Edges const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Edges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges ? "resqml20:Edges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Edges(struct soap *soap, const char *URL, resqml20__Edges const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Edges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges ? "resqml20:Edges" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Edges * SOAP_FMAC4 soap_get_resqml20__Edges(struct soap*, resqml20__Edges *, const char*, const char*);

inline int soap_read_resqml20__Edges(struct soap *soap, resqml20__Edges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Edges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Edges(struct soap *soap, const char *URL, resqml20__Edges *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Edges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Edges(struct soap *soap, resqml20__Edges *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Edges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredGridGeometry(struct soap*, const char*, int, const resqml20__UnstructuredGridGeometry *, const char*);
SOAP_FMAC3 resqml20__UnstructuredGridGeometry * SOAP_FMAC4 soap_in_resqml20__UnstructuredGridGeometry(struct soap*, const char*, resqml20__UnstructuredGridGeometry *, const char*);
SOAP_FMAC1 resqml20__UnstructuredGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UnstructuredGridGeometry * soap_new_resqml20__UnstructuredGridGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UnstructuredGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__UnstructuredGridGeometry * soap_new_req_resqml20__UnstructuredGridGeometry(
	struct soap *soap,
	enum resqml20__CellShape CellShape,
	ULONG64 NodeCount,
	ULONG64 FaceCount,
	resqml20__ResqmlJaggedArray *NodesPerFace,
	resqml20__ResqmlJaggedArray *FacesPerCell,
	resqml20__AbstractBooleanArray *CellFaceIsRightHanded,
	resqml20__AbstractPoint3dArray *Points__2,
	eml20__DataObjectReference *LocalCrs__3)
{
	resqml20__UnstructuredGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredGridGeometry::CellShape = CellShape;
		_p->resqml20__UnstructuredGridGeometry::NodeCount = NodeCount;
		_p->resqml20__UnstructuredGridGeometry::FaceCount = FaceCount;
		_p->resqml20__UnstructuredGridGeometry::NodesPerFace = NodesPerFace;
		_p->resqml20__UnstructuredGridGeometry::FacesPerCell = FacesPerCell;
		_p->resqml20__UnstructuredGridGeometry::CellFaceIsRightHanded = CellFaceIsRightHanded;
		_p->resqml20__PointGeometry::Points = Points__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__3;
	}
	return _p;
}

inline resqml20__UnstructuredGridGeometry * soap_new_set_resqml20__UnstructuredGridGeometry(
	struct soap *soap,
	enum resqml20__CellShape CellShape,
	ULONG64 NodeCount,
	ULONG64 FaceCount,
	resqml20__ResqmlJaggedArray *NodesPerFace,
	resqml20__ResqmlJaggedArray *FacesPerCell,
	resqml20__AbstractBooleanArray *CellFaceIsRightHanded,
	resqml20__UnstructuredGridHingeNodeFaces *HingeNodeFaces,
	resqml20__UnstructuredSubnodeTopology *SubnodeTopology,
	const std::vector<resqml20__AdditionalGridPoints *> & AdditionalGridPoints__1,
	resqml20__AbstractPoint3dArray *Points__2,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates__2,
	resqml20__TimeIndex *TimeIndex__3,
	eml20__DataObjectReference *LocalCrs__3)
{
	resqml20__UnstructuredGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredGridGeometry::CellShape = CellShape;
		_p->resqml20__UnstructuredGridGeometry::NodeCount = NodeCount;
		_p->resqml20__UnstructuredGridGeometry::FaceCount = FaceCount;
		_p->resqml20__UnstructuredGridGeometry::NodesPerFace = NodesPerFace;
		_p->resqml20__UnstructuredGridGeometry::FacesPerCell = FacesPerCell;
		_p->resqml20__UnstructuredGridGeometry::CellFaceIsRightHanded = CellFaceIsRightHanded;
		_p->resqml20__UnstructuredGridGeometry::HingeNodeFaces = HingeNodeFaces;
		_p->resqml20__UnstructuredGridGeometry::SubnodeTopology = SubnodeTopology;
		_p->resqml20__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints__1;
		_p->resqml20__PointGeometry::Points = Points__2;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates__2;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__3;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__3;
	}
	return _p;
}

inline int soap_write_resqml20__UnstructuredGridGeometry(struct soap *soap, resqml20__UnstructuredGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry ? "resqml20:UnstructuredGridGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry ? "resqml20:UnstructuredGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry ? "resqml20:UnstructuredGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry ? "resqml20:UnstructuredGridGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UnstructuredGridGeometry * SOAP_FMAC4 soap_get_resqml20__UnstructuredGridGeometry(struct soap*, resqml20__UnstructuredGridGeometry *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredGridGeometry(struct soap *soap, resqml20__UnstructuredGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredGridGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredGridGeometry(struct soap *soap, resqml20__UnstructuredGridGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__NodesPerCell(struct soap*, const char*, int, const resqml20__NodesPerCell *, const char*);
SOAP_FMAC3 resqml20__NodesPerCell * SOAP_FMAC4 soap_in_resqml20__NodesPerCell(struct soap*, const char*, resqml20__NodesPerCell *, const char*);
SOAP_FMAC1 resqml20__NodesPerCell * SOAP_FMAC2 soap_instantiate_resqml20__NodesPerCell(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__NodesPerCell * soap_new_resqml20__NodesPerCell(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__NodesPerCell(soap, n, NULL, NULL, NULL);
}

inline resqml20__NodesPerCell * soap_new_req_resqml20__NodesPerCell(
	struct soap *soap,
	resqml20__ResqmlJaggedArray *NodesPerCell)
{
	resqml20__NodesPerCell *_p = gsoap_resqml2_0_1::soap_new_resqml20__NodesPerCell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NodesPerCell::NodesPerCell = NodesPerCell;
	}
	return _p;
}

inline resqml20__NodesPerCell * soap_new_set_resqml20__NodesPerCell(
	struct soap *soap,
	resqml20__ResqmlJaggedArray *NodesPerCell)
{
	resqml20__NodesPerCell *_p = gsoap_resqml2_0_1::soap_new_resqml20__NodesPerCell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__NodesPerCell::NodesPerCell = NodesPerCell;
	}
	return _p;
}

inline int soap_write_resqml20__NodesPerCell(struct soap *soap, resqml20__NodesPerCell const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodesPerCell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell ? "resqml20:NodesPerCell" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__NodesPerCell(struct soap *soap, const char *URL, resqml20__NodesPerCell const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodesPerCell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell ? "resqml20:NodesPerCell" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__NodesPerCell(struct soap *soap, const char *URL, resqml20__NodesPerCell const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodesPerCell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell ? "resqml20:NodesPerCell" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__NodesPerCell(struct soap *soap, const char *URL, resqml20__NodesPerCell const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:NodesPerCell", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell ? "resqml20:NodesPerCell" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__NodesPerCell * SOAP_FMAC4 soap_get_resqml20__NodesPerCell(struct soap*, resqml20__NodesPerCell *, const char*, const char*);

inline int soap_read_resqml20__NodesPerCell(struct soap *soap, resqml20__NodesPerCell *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__NodesPerCell(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__NodesPerCell(struct soap *soap, const char *URL, resqml20__NodesPerCell *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__NodesPerCell(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__NodesPerCell(struct soap *soap, resqml20__NodesPerCell *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__NodesPerCell(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__CellFluidPhaseUnits(struct soap*, const char*, int, const resqml20__CellFluidPhaseUnits *, const char*);
SOAP_FMAC3 resqml20__CellFluidPhaseUnits * SOAP_FMAC4 soap_in_resqml20__CellFluidPhaseUnits(struct soap*, const char*, resqml20__CellFluidPhaseUnits *, const char*);
SOAP_FMAC1 resqml20__CellFluidPhaseUnits * SOAP_FMAC2 soap_instantiate_resqml20__CellFluidPhaseUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__CellFluidPhaseUnits * soap_new_resqml20__CellFluidPhaseUnits(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__CellFluidPhaseUnits(soap, n, NULL, NULL, NULL);
}

inline resqml20__CellFluidPhaseUnits * soap_new_req_resqml20__CellFluidPhaseUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *PhaseUnitIndices,
	eml20__DataObjectReference *FluidOrganization)
{
	resqml20__CellFluidPhaseUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellFluidPhaseUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellFluidPhaseUnits::PhaseUnitIndices = PhaseUnitIndices;
		_p->resqml20__CellFluidPhaseUnits::FluidOrganization = FluidOrganization;
	}
	return _p;
}

inline resqml20__CellFluidPhaseUnits * soap_new_set_resqml20__CellFluidPhaseUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *PhaseUnitIndices,
	eml20__DataObjectReference *FluidOrganization)
{
	resqml20__CellFluidPhaseUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellFluidPhaseUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellFluidPhaseUnits::PhaseUnitIndices = PhaseUnitIndices;
		_p->resqml20__CellFluidPhaseUnits::FluidOrganization = FluidOrganization;
	}
	return _p;
}

inline int soap_write_resqml20__CellFluidPhaseUnits(struct soap *soap, resqml20__CellFluidPhaseUnits const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellFluidPhaseUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits ? "resqml20:CellFluidPhaseUnits" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__CellFluidPhaseUnits(struct soap *soap, const char *URL, resqml20__CellFluidPhaseUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellFluidPhaseUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits ? "resqml20:CellFluidPhaseUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__CellFluidPhaseUnits(struct soap *soap, const char *URL, resqml20__CellFluidPhaseUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellFluidPhaseUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits ? "resqml20:CellFluidPhaseUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__CellFluidPhaseUnits(struct soap *soap, const char *URL, resqml20__CellFluidPhaseUnits const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellFluidPhaseUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits ? "resqml20:CellFluidPhaseUnits" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__CellFluidPhaseUnits * SOAP_FMAC4 soap_get_resqml20__CellFluidPhaseUnits(struct soap*, resqml20__CellFluidPhaseUnits *, const char*, const char*);

inline int soap_read_resqml20__CellFluidPhaseUnits(struct soap *soap, resqml20__CellFluidPhaseUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__CellFluidPhaseUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__CellFluidPhaseUnits(struct soap *soap, const char *URL, resqml20__CellFluidPhaseUnits *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__CellFluidPhaseUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__CellFluidPhaseUnits(struct soap *soap, resqml20__CellFluidPhaseUnits *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__CellFluidPhaseUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SplitEdges(struct soap*, const char*, int, const resqml20__SplitEdges *, const char*);
SOAP_FMAC3 resqml20__SplitEdges * SOAP_FMAC4 soap_in_resqml20__SplitEdges(struct soap*, const char*, resqml20__SplitEdges *, const char*);
SOAP_FMAC1 resqml20__SplitEdges * SOAP_FMAC2 soap_instantiate_resqml20__SplitEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SplitEdges * soap_new_resqml20__SplitEdges(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SplitEdges(soap, n, NULL, NULL, NULL);
}

inline resqml20__SplitEdges * soap_new_req_resqml20__SplitEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentEdgeIndices,
	resqml20__ResqmlJaggedArray *FacesPerSplitEdge)
{
	resqml20__SplitEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitEdges::Count = Count;
		_p->resqml20__SplitEdges::ParentEdgeIndices = ParentEdgeIndices;
		_p->resqml20__SplitEdges::FacesPerSplitEdge = FacesPerSplitEdge;
	}
	return _p;
}

inline resqml20__SplitEdges * soap_new_set_resqml20__SplitEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentEdgeIndices,
	resqml20__ResqmlJaggedArray *FacesPerSplitEdge)
{
	resqml20__SplitEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitEdges::Count = Count;
		_p->resqml20__SplitEdges::ParentEdgeIndices = ParentEdgeIndices;
		_p->resqml20__SplitEdges::FacesPerSplitEdge = FacesPerSplitEdge;
	}
	return _p;
}

inline int soap_write_resqml20__SplitEdges(struct soap *soap, resqml20__SplitEdges const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges ? "resqml20:SplitEdges" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SplitEdges(struct soap *soap, const char *URL, resqml20__SplitEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges ? "resqml20:SplitEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SplitEdges(struct soap *soap, const char *URL, resqml20__SplitEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges ? "resqml20:SplitEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SplitEdges(struct soap *soap, const char *URL, resqml20__SplitEdges const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges ? "resqml20:SplitEdges" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SplitEdges * SOAP_FMAC4 soap_get_resqml20__SplitEdges(struct soap*, resqml20__SplitEdges *, const char*, const char*);

inline int soap_read_resqml20__SplitEdges(struct soap *soap, resqml20__SplitEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SplitEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SplitEdges(struct soap *soap, const char *URL, resqml20__SplitEdges *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SplitEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SplitEdges(struct soap *soap, resqml20__SplitEdges *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SplitEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml20__AbstractTruncatedColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, const char*, resqml20__AbstractTruncatedColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractTruncatedColumnLayerGridRepresentation * soap_new_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractTruncatedColumnLayerGridRepresentation * soap_new_req_resqml20__AbstractTruncatedColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml20__TruncationCellPatch *TruncationCells,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractTruncatedColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__AbstractTruncatedColumnLayerGridRepresentation * soap_new_set_resqml20__AbstractTruncatedColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml20__TruncationCellPatch *TruncationCells,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	resqml20__AbstractParentWindow *ParentWindow__1,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__AbstractTruncatedColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml20__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__1;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractTruncatedColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTruncatedColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation ? "resqml20:AbstractTruncatedColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractTruncatedColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTruncatedColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation ? "resqml20:AbstractTruncatedColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractTruncatedColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTruncatedColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation ? "resqml20:AbstractTruncatedColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractTruncatedColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractTruncatedColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation ? "resqml20:AbstractTruncatedColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, resqml20__AbstractTruncatedColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractTruncatedColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractTruncatedColumnLayerGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, resqml20__AbstractTruncatedColumnLayerGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractTruncatedColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ConnectionInterpretations(struct soap*, const char*, int, const resqml20__ConnectionInterpretations *, const char*);
SOAP_FMAC3 resqml20__ConnectionInterpretations * SOAP_FMAC4 soap_in_resqml20__ConnectionInterpretations(struct soap*, const char*, resqml20__ConnectionInterpretations *, const char*);
SOAP_FMAC1 resqml20__ConnectionInterpretations * SOAP_FMAC2 soap_instantiate_resqml20__ConnectionInterpretations(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ConnectionInterpretations * soap_new_resqml20__ConnectionInterpretations(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ConnectionInterpretations(soap, n, NULL, NULL, NULL);
}

inline resqml20__ConnectionInterpretations * soap_new_req_resqml20__ConnectionInterpretations(
	struct soap *soap,
	resqml20__ResqmlJaggedArray *InterpretationIndices,
	const std::vector<eml20__DataObjectReference *> & FeatureInterpretation)
{
	resqml20__ConnectionInterpretations *_p = gsoap_resqml2_0_1::soap_new_resqml20__ConnectionInterpretations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ConnectionInterpretations::InterpretationIndices = InterpretationIndices;
		_p->resqml20__ConnectionInterpretations::FeatureInterpretation = FeatureInterpretation;
	}
	return _p;
}

inline resqml20__ConnectionInterpretations * soap_new_set_resqml20__ConnectionInterpretations(
	struct soap *soap,
	resqml20__ResqmlJaggedArray *InterpretationIndices,
	const std::vector<eml20__DataObjectReference *> & FeatureInterpretation)
{
	resqml20__ConnectionInterpretations *_p = gsoap_resqml2_0_1::soap_new_resqml20__ConnectionInterpretations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ConnectionInterpretations::InterpretationIndices = InterpretationIndices;
		_p->resqml20__ConnectionInterpretations::FeatureInterpretation = FeatureInterpretation;
	}
	return _p;
}

inline int soap_write_resqml20__ConnectionInterpretations(struct soap *soap, resqml20__ConnectionInterpretations const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ConnectionInterpretations", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations ? "resqml20:ConnectionInterpretations" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ConnectionInterpretations(struct soap *soap, const char *URL, resqml20__ConnectionInterpretations const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ConnectionInterpretations", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations ? "resqml20:ConnectionInterpretations" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ConnectionInterpretations(struct soap *soap, const char *URL, resqml20__ConnectionInterpretations const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ConnectionInterpretations", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations ? "resqml20:ConnectionInterpretations" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ConnectionInterpretations(struct soap *soap, const char *URL, resqml20__ConnectionInterpretations const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ConnectionInterpretations", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations ? "resqml20:ConnectionInterpretations" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ConnectionInterpretations * SOAP_FMAC4 soap_get_resqml20__ConnectionInterpretations(struct soap*, resqml20__ConnectionInterpretations *, const char*, const char*);

inline int soap_read_resqml20__ConnectionInterpretations(struct soap *soap, resqml20__ConnectionInterpretations *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ConnectionInterpretations(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ConnectionInterpretations(struct soap *soap, const char *URL, resqml20__ConnectionInterpretations *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ConnectionInterpretations(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ConnectionInterpretations(struct soap *soap, resqml20__ConnectionInterpretations *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ConnectionInterpretations(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IjkGridGeometry(struct soap*, const char*, int, const resqml20__IjkGridGeometry *, const char*);
SOAP_FMAC3 resqml20__IjkGridGeometry * SOAP_FMAC4 soap_in_resqml20__IjkGridGeometry(struct soap*, const char*, resqml20__IjkGridGeometry *, const char*);
SOAP_FMAC1 resqml20__IjkGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__IjkGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IjkGridGeometry * soap_new_resqml20__IjkGridGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IjkGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__IjkGridGeometry * soap_new_req_resqml20__IjkGridGeometry(
	struct soap *soap,
	bool GridIsRighthanded,
	enum resqml20__KDirection KDirection__1,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined__1,
	enum resqml20__PillarShape PillarShape__1,
	resqml20__AbstractPoint3dArray *Points__3,
	eml20__DataObjectReference *LocalCrs__4)
{
	resqml20__IjkGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjkGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjkGridGeometry::GridIsRighthanded = GridIsRighthanded;
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape__1;
		_p->resqml20__PointGeometry::Points = Points__3;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__4;
	}
	return _p;
}

inline resqml20__IjkGridGeometry * soap_new_set_resqml20__IjkGridGeometry(
	struct soap *soap,
	bool GridIsRighthanded,
	resqml20__IjGaps *IjGaps,
	enum resqml20__KDirection KDirection__1,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined__1,
	enum resqml20__PillarShape PillarShape__1,
	resqml20__AbstractBooleanArray *CellGeometryIsDefined__1,
	resqml20__AbstractBooleanArray *NodeIsColocatedInKDirection__1,
	resqml20__AbstractBooleanArray *NodeIsColocatedOnKEdge__1,
	resqml20__ColumnLayerSubnodeTopology *SubnodeTopology__1,
	resqml20__ColumnLayerSplitCoordinateLines *SplitCoordinateLines__1,
	resqml20__SplitNodePatch *SplitNodes__1,
	const std::vector<resqml20__AdditionalGridPoints *> & AdditionalGridPoints__2,
	resqml20__AbstractPoint3dArray *Points__3,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates__3,
	resqml20__TimeIndex *TimeIndex__4,
	eml20__DataObjectReference *LocalCrs__4)
{
	resqml20__IjkGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjkGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjkGridGeometry::GridIsRighthanded = GridIsRighthanded;
		_p->resqml20__IjkGridGeometry::IjGaps = IjGaps;
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes__1;
		_p->resqml20__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints__2;
		_p->resqml20__PointGeometry::Points = Points__3;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates__3;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__4;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__4;
	}
	return _p;
}

inline int soap_write_resqml20__IjkGridGeometry(struct soap *soap, resqml20__IjkGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry ? "resqml20:IjkGridGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IjkGridGeometry(struct soap *soap, const char *URL, resqml20__IjkGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry ? "resqml20:IjkGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IjkGridGeometry(struct soap *soap, const char *URL, resqml20__IjkGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry ? "resqml20:IjkGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IjkGridGeometry(struct soap *soap, const char *URL, resqml20__IjkGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry ? "resqml20:IjkGridGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IjkGridGeometry * SOAP_FMAC4 soap_get_resqml20__IjkGridGeometry(struct soap*, resqml20__IjkGridGeometry *, const char*, const char*);

inline int soap_read_resqml20__IjkGridGeometry(struct soap *soap, resqml20__IjkGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IjkGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IjkGridGeometry(struct soap *soap, const char *URL, resqml20__IjkGridGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IjkGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IjkGridGeometry(struct soap *soap, resqml20__IjkGridGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IjkGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, int, const resqml20__UnstructuredColumnLayerGridGeometry *, const char*);
SOAP_FMAC3 resqml20__UnstructuredColumnLayerGridGeometry * SOAP_FMAC4 soap_in_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, resqml20__UnstructuredColumnLayerGridGeometry *, const char*);
SOAP_FMAC1 resqml20__UnstructuredColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UnstructuredColumnLayerGridGeometry * soap_new_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UnstructuredColumnLayerGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__UnstructuredColumnLayerGridGeometry * soap_new_req_resqml20__UnstructuredColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml20__ColumnShape ColumnShape,
	ULONG64 PillarCount,
	resqml20__ResqmlJaggedArray *PillarsPerColumn,
	resqml20__AbstractBooleanArray *ColumnIsRightHanded,
	enum resqml20__KDirection KDirection__1,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined__1,
	enum resqml20__PillarShape PillarShape__1,
	resqml20__AbstractPoint3dArray *Points__3,
	eml20__DataObjectReference *LocalCrs__4)
{
	resqml20__UnstructuredColumnLayerGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredColumnLayerGridGeometry::ColumnShape = ColumnShape;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::PillarCount = PillarCount;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::PillarsPerColumn = PillarsPerColumn;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::ColumnIsRightHanded = ColumnIsRightHanded;
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape__1;
		_p->resqml20__PointGeometry::Points = Points__3;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__4;
	}
	return _p;
}

inline resqml20__UnstructuredColumnLayerGridGeometry * soap_new_set_resqml20__UnstructuredColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml20__ColumnShape ColumnShape,
	ULONG64 PillarCount,
	resqml20__ResqmlJaggedArray *PillarsPerColumn,
	resqml20__AbstractBooleanArray *ColumnIsRightHanded,
	resqml20__UnstructuredColumnEdges *ColumnEdges,
	enum resqml20__KDirection KDirection__1,
	resqml20__AbstractBooleanArray *PillarGeometryIsDefined__1,
	enum resqml20__PillarShape PillarShape__1,
	resqml20__AbstractBooleanArray *CellGeometryIsDefined__1,
	resqml20__AbstractBooleanArray *NodeIsColocatedInKDirection__1,
	resqml20__AbstractBooleanArray *NodeIsColocatedOnKEdge__1,
	resqml20__ColumnLayerSubnodeTopology *SubnodeTopology__1,
	resqml20__ColumnLayerSplitCoordinateLines *SplitCoordinateLines__1,
	resqml20__SplitNodePatch *SplitNodes__1,
	const std::vector<resqml20__AdditionalGridPoints *> & AdditionalGridPoints__2,
	resqml20__AbstractPoint3dArray *Points__3,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates__3,
	resqml20__TimeIndex *TimeIndex__4,
	eml20__DataObjectReference *LocalCrs__4)
{
	resqml20__UnstructuredColumnLayerGridGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredColumnLayerGridGeometry::ColumnShape = ColumnShape;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::PillarCount = PillarCount;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::PillarsPerColumn = PillarsPerColumn;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::ColumnIsRightHanded = ColumnIsRightHanded;
		_p->resqml20__UnstructuredColumnLayerGridGeometry::ColumnEdges = ColumnEdges;
		_p->resqml20__AbstractColumnLayerGridGeometry::KDirection = KDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::PillarShape = PillarShape__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines__1;
		_p->resqml20__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes__1;
		_p->resqml20__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints__2;
		_p->resqml20__PointGeometry::Points = Points__3;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates__3;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__4;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__4;
	}
	return _p;
}

inline int soap_write_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, resqml20__UnstructuredColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry ? "resqml20:UnstructuredColumnLayerGridGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry ? "resqml20:UnstructuredColumnLayerGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry ? "resqml20:UnstructuredColumnLayerGridGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredColumnLayerGridGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnLayerGridGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry ? "resqml20:UnstructuredColumnLayerGridGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UnstructuredColumnLayerGridGeometry * SOAP_FMAC4 soap_get_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, resqml20__UnstructuredColumnLayerGridGeometry *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, resqml20__UnstructuredColumnLayerGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredColumnLayerGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, const char *URL, resqml20__UnstructuredColumnLayerGridGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnLayerGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredColumnLayerGridGeometry(struct soap *soap, resqml20__UnstructuredColumnLayerGridGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnLayerGridGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Activation(struct soap*, const char*, int, const resqml20__Activation *, const char*);
SOAP_FMAC3 resqml20__Activation * SOAP_FMAC4 soap_in_resqml20__Activation(struct soap*, const char*, resqml20__Activation *, const char*);
SOAP_FMAC1 resqml20__Activation * SOAP_FMAC2 soap_instantiate_resqml20__Activation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Activation * soap_new_resqml20__Activation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Activation(soap, n, NULL, NULL, NULL);
}

inline resqml20__Activation * soap_new_req_resqml20__Activation(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ActivationToggleIndices,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__Activation *_p = gsoap_resqml2_0_1::soap_new_resqml20__Activation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Activation::ActivationToggleIndices = ActivationToggleIndices;
		_p->resqml20__Activation::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml20__Activation * soap_new_set_resqml20__Activation(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ActivationToggleIndices,
	eml20__DataObjectReference *TimeSeries)
{
	resqml20__Activation *_p = gsoap_resqml2_0_1::soap_new_resqml20__Activation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Activation::ActivationToggleIndices = ActivationToggleIndices;
		_p->resqml20__Activation::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml20__Activation(struct soap *soap, resqml20__Activation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation ? "resqml20:Activation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Activation(struct soap *soap, const char *URL, resqml20__Activation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation ? "resqml20:Activation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Activation(struct soap *soap, const char *URL, resqml20__Activation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation ? "resqml20:Activation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Activation(struct soap *soap, const char *URL, resqml20__Activation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Activation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation ? "resqml20:Activation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Activation * SOAP_FMAC4 soap_get_resqml20__Activation(struct soap*, resqml20__Activation *, const char*, const char*);

inline int soap_read_resqml20__Activation(struct soap *soap, resqml20__Activation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Activation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Activation(struct soap *soap, const char *URL, resqml20__Activation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Activation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Activation(struct soap *soap, resqml20__Activation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Activation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Regrid(struct soap*, const char*, int, const resqml20__Regrid *, const char*);
SOAP_FMAC3 resqml20__Regrid * SOAP_FMAC4 soap_in_resqml20__Regrid(struct soap*, const char*, resqml20__Regrid *, const char*);
SOAP_FMAC1 resqml20__Regrid * SOAP_FMAC2 soap_instantiate_resqml20__Regrid(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Regrid * soap_new_resqml20__Regrid(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Regrid(soap, n, NULL, NULL, NULL);
}

inline resqml20__Regrid * soap_new_req_resqml20__Regrid(
	struct soap *soap,
	ULONG64 InitialIndexOnParentGrid)
{
	resqml20__Regrid *_p = gsoap_resqml2_0_1::soap_new_resqml20__Regrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Regrid::InitialIndexOnParentGrid = InitialIndexOnParentGrid;
	}
	return _p;
}

inline resqml20__Regrid * soap_new_set_resqml20__Regrid(
	struct soap *soap,
	ULONG64 InitialIndexOnParentGrid,
	resqml20__Intervals *Intervals)
{
	resqml20__Regrid *_p = gsoap_resqml2_0_1::soap_new_resqml20__Regrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Regrid::InitialIndexOnParentGrid = InitialIndexOnParentGrid;
		_p->resqml20__Regrid::Intervals = Intervals;
	}
	return _p;
}

inline int soap_write_resqml20__Regrid(struct soap *soap, resqml20__Regrid const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Regrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid ? "resqml20:Regrid" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Regrid(struct soap *soap, const char *URL, resqml20__Regrid const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Regrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid ? "resqml20:Regrid" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Regrid(struct soap *soap, const char *URL, resqml20__Regrid const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Regrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid ? "resqml20:Regrid" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Regrid(struct soap *soap, const char *URL, resqml20__Regrid const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Regrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid ? "resqml20:Regrid" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Regrid * SOAP_FMAC4 soap_get_resqml20__Regrid(struct soap*, resqml20__Regrid *, const char*, const char*);

inline int soap_read_resqml20__Regrid(struct soap *soap, resqml20__Regrid *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Regrid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Regrid(struct soap *soap, const char *URL, resqml20__Regrid *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Regrid(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Regrid(struct soap *soap, resqml20__Regrid *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Regrid(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntervalStratigraphicUnits(struct soap*, const char*, int, const resqml20__IntervalStratigraphicUnits *, const char*);
SOAP_FMAC3 resqml20__IntervalStratigraphicUnits * SOAP_FMAC4 soap_in_resqml20__IntervalStratigraphicUnits(struct soap*, const char*, resqml20__IntervalStratigraphicUnits *, const char*);
SOAP_FMAC1 resqml20__IntervalStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml20__IntervalStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntervalStratigraphicUnits * soap_new_resqml20__IntervalStratigraphicUnits(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntervalStratigraphicUnits(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntervalStratigraphicUnits * soap_new_req_resqml20__IntervalStratigraphicUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *UnitIndices,
	eml20__DataObjectReference *StratigraphicOrganization)
{
	resqml20__IntervalStratigraphicUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntervalStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntervalStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml20__IntervalStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline resqml20__IntervalStratigraphicUnits * soap_new_set_resqml20__IntervalStratigraphicUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *UnitIndices,
	eml20__DataObjectReference *StratigraphicOrganization)
{
	resqml20__IntervalStratigraphicUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntervalStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntervalStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml20__IntervalStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline int soap_write_resqml20__IntervalStratigraphicUnits(struct soap *soap, resqml20__IntervalStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits ? "resqml20:IntervalStratigraphicUnits" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntervalStratigraphicUnits(struct soap *soap, const char *URL, resqml20__IntervalStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits ? "resqml20:IntervalStratigraphicUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntervalStratigraphicUnits(struct soap *soap, const char *URL, resqml20__IntervalStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits ? "resqml20:IntervalStratigraphicUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntervalStratigraphicUnits(struct soap *soap, const char *URL, resqml20__IntervalStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntervalStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits ? "resqml20:IntervalStratigraphicUnits" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntervalStratigraphicUnits * SOAP_FMAC4 soap_get_resqml20__IntervalStratigraphicUnits(struct soap*, resqml20__IntervalStratigraphicUnits *, const char*, const char*);

inline int soap_read_resqml20__IntervalStratigraphicUnits(struct soap *soap, resqml20__IntervalStratigraphicUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntervalStratigraphicUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntervalStratigraphicUnits(struct soap *soap, const char *URL, resqml20__IntervalStratigraphicUnits *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntervalStratigraphicUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntervalStratigraphicUnits(struct soap *soap, resqml20__IntervalStratigraphicUnits *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntervalStratigraphicUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GpGridUnstructuredGridPatch(struct soap*, const char*, int, const resqml20__GpGridUnstructuredGridPatch *, const char*);
SOAP_FMAC3 resqml20__GpGridUnstructuredGridPatch * SOAP_FMAC4 soap_in_resqml20__GpGridUnstructuredGridPatch(struct soap*, const char*, resqml20__GpGridUnstructuredGridPatch *, const char*);
SOAP_FMAC1 resqml20__GpGridUnstructuredGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridUnstructuredGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__GpGridUnstructuredGridPatch * soap_new_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__GpGridUnstructuredGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__GpGridUnstructuredGridPatch * soap_new_req_resqml20__GpGridUnstructuredGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredCellCount,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridUnstructuredGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridUnstructuredGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridUnstructuredGridPatch::UnstructuredCellCount = UnstructuredCellCount;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__GpGridUnstructuredGridPatch * soap_new_set_resqml20__GpGridUnstructuredGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredCellCount,
	resqml20__UnstructuredGridGeometry *Geometry,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridUnstructuredGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridUnstructuredGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridUnstructuredGridPatch::UnstructuredCellCount = UnstructuredCellCount;
		_p->resqml20__GpGridUnstructuredGridPatch::Geometry = Geometry;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, resqml20__GpGridUnstructuredGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch ? "resqml20:GpGridUnstructuredGridPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch ? "resqml20:GpGridUnstructuredGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch ? "resqml20:GpGridUnstructuredGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch ? "resqml20:GpGridUnstructuredGridPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__GpGridUnstructuredGridPatch * SOAP_FMAC4 soap_get_resqml20__GpGridUnstructuredGridPatch(struct soap*, resqml20__GpGridUnstructuredGridPatch *, const char*, const char*);

inline int soap_read_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, resqml20__GpGridUnstructuredGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GpGridUnstructuredGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredGridPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GpGridUnstructuredGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GpGridUnstructuredGridPatch(struct soap *soap, resqml20__GpGridUnstructuredGridPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GpGridUnstructuredGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TruncationCellPatch(struct soap*, const char*, int, const resqml20__TruncationCellPatch *, const char*);
SOAP_FMAC3 resqml20__TruncationCellPatch * SOAP_FMAC4 soap_in_resqml20__TruncationCellPatch(struct soap*, const char*, resqml20__TruncationCellPatch *, const char*);
SOAP_FMAC1 resqml20__TruncationCellPatch * SOAP_FMAC2 soap_instantiate_resqml20__TruncationCellPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TruncationCellPatch * soap_new_resqml20__TruncationCellPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TruncationCellPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__TruncationCellPatch * soap_new_req_resqml20__TruncationCellPatch(
	struct soap *soap,
	ULONG64 TruncationNodeCount,
	ULONG64 TruncationFaceCount,
	ULONG64 TruncationCellCount,
	resqml20__ResqmlJaggedArray *NodesPerTruncationFace,
	resqml20__AbstractIntegerArray *ParentCellIndices,
	resqml20__ResqmlJaggedArray *LocalFacesPerCell,
	resqml20__ResqmlJaggedArray *TruncationFacesPerCell,
	resqml20__AbstractBooleanArray *TruncationCellFaceIsRightHanded,
	ULONG64 PatchIndex__1)
{
	resqml20__TruncationCellPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__TruncationCellPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TruncationCellPatch::TruncationNodeCount = TruncationNodeCount;
		_p->resqml20__TruncationCellPatch::TruncationFaceCount = TruncationFaceCount;
		_p->resqml20__TruncationCellPatch::TruncationCellCount = TruncationCellCount;
		_p->resqml20__TruncationCellPatch::NodesPerTruncationFace = NodesPerTruncationFace;
		_p->resqml20__TruncationCellPatch::ParentCellIndices = ParentCellIndices;
		_p->resqml20__TruncationCellPatch::LocalFacesPerCell = LocalFacesPerCell;
		_p->resqml20__TruncationCellPatch::TruncationFacesPerCell = TruncationFacesPerCell;
		_p->resqml20__TruncationCellPatch::TruncationCellFaceIsRightHanded = TruncationCellFaceIsRightHanded;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__TruncationCellPatch * soap_new_set_resqml20__TruncationCellPatch(
	struct soap *soap,
	ULONG64 TruncationNodeCount,
	ULONG64 TruncationFaceCount,
	ULONG64 TruncationCellCount,
	resqml20__ResqmlJaggedArray *NodesPerTruncationFace,
	resqml20__AbstractIntegerArray *ParentCellIndices,
	resqml20__ResqmlJaggedArray *LocalFacesPerCell,
	resqml20__ResqmlJaggedArray *TruncationFacesPerCell,
	resqml20__AbstractBooleanArray *TruncationCellFaceIsRightHanded,
	ULONG64 PatchIndex__1)
{
	resqml20__TruncationCellPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__TruncationCellPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TruncationCellPatch::TruncationNodeCount = TruncationNodeCount;
		_p->resqml20__TruncationCellPatch::TruncationFaceCount = TruncationFaceCount;
		_p->resqml20__TruncationCellPatch::TruncationCellCount = TruncationCellCount;
		_p->resqml20__TruncationCellPatch::NodesPerTruncationFace = NodesPerTruncationFace;
		_p->resqml20__TruncationCellPatch::ParentCellIndices = ParentCellIndices;
		_p->resqml20__TruncationCellPatch::LocalFacesPerCell = LocalFacesPerCell;
		_p->resqml20__TruncationCellPatch::TruncationFacesPerCell = TruncationFacesPerCell;
		_p->resqml20__TruncationCellPatch::TruncationCellFaceIsRightHanded = TruncationCellFaceIsRightHanded;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__TruncationCellPatch(struct soap *soap, resqml20__TruncationCellPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncationCellPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch ? "resqml20:TruncationCellPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TruncationCellPatch(struct soap *soap, const char *URL, resqml20__TruncationCellPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncationCellPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch ? "resqml20:TruncationCellPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TruncationCellPatch(struct soap *soap, const char *URL, resqml20__TruncationCellPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncationCellPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch ? "resqml20:TruncationCellPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TruncationCellPatch(struct soap *soap, const char *URL, resqml20__TruncationCellPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TruncationCellPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch ? "resqml20:TruncationCellPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TruncationCellPatch * SOAP_FMAC4 soap_get_resqml20__TruncationCellPatch(struct soap*, resqml20__TruncationCellPatch *, const char*, const char*);

inline int soap_read_resqml20__TruncationCellPatch(struct soap *soap, resqml20__TruncationCellPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TruncationCellPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TruncationCellPatch(struct soap *soap, const char *URL, resqml20__TruncationCellPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TruncationCellPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TruncationCellPatch(struct soap *soap, resqml20__TruncationCellPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TruncationCellPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IjSplitColumnEdges(struct soap*, const char*, int, const resqml20__IjSplitColumnEdges *, const char*);
SOAP_FMAC3 resqml20__IjSplitColumnEdges * SOAP_FMAC4 soap_in_resqml20__IjSplitColumnEdges(struct soap*, const char*, resqml20__IjSplitColumnEdges *, const char*);
SOAP_FMAC1 resqml20__IjSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__IjSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IjSplitColumnEdges * soap_new_resqml20__IjSplitColumnEdges(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IjSplitColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml20__IjSplitColumnEdges * soap_new_req_resqml20__IjSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__ResqmlJaggedArray *PillarsPerSplitColumnEdge)
{
	resqml20__IjSplitColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjSplitColumnEdges::Count = Count;
		_p->resqml20__IjSplitColumnEdges::PillarsPerSplitColumnEdge = PillarsPerSplitColumnEdge;
	}
	return _p;
}

inline resqml20__IjSplitColumnEdges * soap_new_set_resqml20__IjSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__ResqmlJaggedArray *PillarsPerSplitColumnEdge)
{
	resqml20__IjSplitColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjSplitColumnEdges::Count = Count;
		_p->resqml20__IjSplitColumnEdges::PillarsPerSplitColumnEdge = PillarsPerSplitColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml20__IjSplitColumnEdges(struct soap *soap, resqml20__IjSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges ? "resqml20:IjSplitColumnEdges" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IjSplitColumnEdges(struct soap *soap, const char *URL, resqml20__IjSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges ? "resqml20:IjSplitColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IjSplitColumnEdges(struct soap *soap, const char *URL, resqml20__IjSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges ? "resqml20:IjSplitColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IjSplitColumnEdges(struct soap *soap, const char *URL, resqml20__IjSplitColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjSplitColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges ? "resqml20:IjSplitColumnEdges" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IjSplitColumnEdges * SOAP_FMAC4 soap_get_resqml20__IjSplitColumnEdges(struct soap*, resqml20__IjSplitColumnEdges *, const char*, const char*);

inline int soap_read_resqml20__IjSplitColumnEdges(struct soap *soap, resqml20__IjSplitColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IjSplitColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IjSplitColumnEdges(struct soap *soap, const char *URL, resqml20__IjSplitColumnEdges *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IjSplitColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IjSplitColumnEdges(struct soap *soap, resqml20__IjSplitColumnEdges *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IjSplitColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AdditionalGridPoints(struct soap*, const char*, int, const resqml20__AdditionalGridPoints *, const char*);
SOAP_FMAC3 resqml20__AdditionalGridPoints * SOAP_FMAC4 soap_in_resqml20__AdditionalGridPoints(struct soap*, const char*, resqml20__AdditionalGridPoints *, const char*);
SOAP_FMAC1 resqml20__AdditionalGridPoints * SOAP_FMAC2 soap_instantiate_resqml20__AdditionalGridPoints(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AdditionalGridPoints * soap_new_resqml20__AdditionalGridPoints(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AdditionalGridPoints(soap, n, NULL, NULL, NULL);
}

inline resqml20__AdditionalGridPoints * soap_new_req_resqml20__AdditionalGridPoints(
	struct soap *soap,
	enum resqml20__GridGeometryAttachment Attachment,
	resqml20__AbstractPoint3dArray *Points)
{
	resqml20__AdditionalGridPoints *_p = gsoap_resqml2_0_1::soap_new_resqml20__AdditionalGridPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AdditionalGridPoints::Attachment = Attachment;
		_p->resqml20__AdditionalGridPoints::Points = Points;
	}
	return _p;
}

inline resqml20__AdditionalGridPoints * soap_new_set_resqml20__AdditionalGridPoints(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	enum resqml20__GridGeometryAttachment Attachment,
	resqml20__AbstractPoint3dArray *Points)
{
	resqml20__AdditionalGridPoints *_p = gsoap_resqml2_0_1::soap_new_resqml20__AdditionalGridPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AdditionalGridPoints::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml20__AdditionalGridPoints::Attachment = Attachment;
		_p->resqml20__AdditionalGridPoints::Points = Points;
	}
	return _p;
}

inline int soap_write_resqml20__AdditionalGridPoints(struct soap *soap, resqml20__AdditionalGridPoints const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints ? "resqml20:AdditionalGridPoints" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AdditionalGridPoints(struct soap *soap, const char *URL, resqml20__AdditionalGridPoints const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints ? "resqml20:AdditionalGridPoints" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AdditionalGridPoints(struct soap *soap, const char *URL, resqml20__AdditionalGridPoints const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints ? "resqml20:AdditionalGridPoints" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AdditionalGridPoints(struct soap *soap, const char *URL, resqml20__AdditionalGridPoints const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints ? "resqml20:AdditionalGridPoints" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AdditionalGridPoints * SOAP_FMAC4 soap_get_resqml20__AdditionalGridPoints(struct soap*, resqml20__AdditionalGridPoints *, const char*, const char*);

inline int soap_read_resqml20__AdditionalGridPoints(struct soap *soap, resqml20__AdditionalGridPoints *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AdditionalGridPoints(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AdditionalGridPoints(struct soap *soap, const char *URL, resqml20__AdditionalGridPoints *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AdditionalGridPoints(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AdditionalGridPoints(struct soap *soap, resqml20__AdditionalGridPoints *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AdditionalGridPoints(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredColumnEdges(struct soap*, const char*, int, const resqml20__UnstructuredColumnEdges *, const char*);
SOAP_FMAC3 resqml20__UnstructuredColumnEdges * SOAP_FMAC4 soap_in_resqml20__UnstructuredColumnEdges(struct soap*, const char*, resqml20__UnstructuredColumnEdges *, const char*);
SOAP_FMAC1 resqml20__UnstructuredColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UnstructuredColumnEdges * soap_new_resqml20__UnstructuredColumnEdges(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UnstructuredColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml20__UnstructuredColumnEdges * soap_new_req_resqml20__UnstructuredColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__ResqmlJaggedArray *PillarsPerColumnEdge)
{
	resqml20__UnstructuredColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredColumnEdges::Count = Count;
		_p->resqml20__UnstructuredColumnEdges::PillarsPerColumnEdge = PillarsPerColumnEdge;
	}
	return _p;
}

inline resqml20__UnstructuredColumnEdges * soap_new_set_resqml20__UnstructuredColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml20__ResqmlJaggedArray *PillarsPerColumnEdge)
{
	resqml20__UnstructuredColumnEdges *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredColumnEdges::Count = Count;
		_p->resqml20__UnstructuredColumnEdges::PillarsPerColumnEdge = PillarsPerColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml20__UnstructuredColumnEdges(struct soap *soap, resqml20__UnstructuredColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges ? "resqml20:UnstructuredColumnEdges" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredColumnEdges(struct soap *soap, const char *URL, resqml20__UnstructuredColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges ? "resqml20:UnstructuredColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredColumnEdges(struct soap *soap, const char *URL, resqml20__UnstructuredColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges ? "resqml20:UnstructuredColumnEdges" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredColumnEdges(struct soap *soap, const char *URL, resqml20__UnstructuredColumnEdges const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredColumnEdges", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges ? "resqml20:UnstructuredColumnEdges" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UnstructuredColumnEdges * SOAP_FMAC4 soap_get_resqml20__UnstructuredColumnEdges(struct soap*, resqml20__UnstructuredColumnEdges *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredColumnEdges(struct soap *soap, resqml20__UnstructuredColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredColumnEdges(struct soap *soap, const char *URL, resqml20__UnstructuredColumnEdges *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredColumnEdges(struct soap *soap, resqml20__UnstructuredColumnEdges *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredColumnEdges(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnLayerSubnodeTopology(struct soap*, const char*, int, const resqml20__ColumnLayerSubnodeTopology *, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSubnodeTopology * SOAP_FMAC4 soap_in_resqml20__ColumnLayerSubnodeTopology(struct soap*, const char*, resqml20__ColumnLayerSubnodeTopology *, const char*);
SOAP_FMAC1 resqml20__ColumnLayerSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ColumnLayerSubnodeTopology * soap_new_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ColumnLayerSubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml20__ColumnLayerSubnodeTopology * soap_new_req_resqml20__ColumnLayerSubnodeTopology(
	struct soap *soap)
{
	resqml20__ColumnLayerSubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__ColumnLayerSubnodeTopology * soap_new_set_resqml20__ColumnLayerSubnodeTopology(
	struct soap *soap,
	const std::vector<resqml20__ColumnSubnodePatch *> & ColumnSubnodes,
	const std::vector<resqml20__VariableSubnodePatch *> & VariableSubnodes__1,
	const std::vector<resqml20__UniformSubnodePatch *> & UniformSubnodes__1)
{
	resqml20__ColumnLayerSubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerSubnodeTopology::ColumnSubnodes = ColumnSubnodes;
		_p->resqml20__SubnodeTopology::VariableSubnodes = VariableSubnodes__1;
		_p->resqml20__SubnodeTopology::UniformSubnodes = UniformSubnodes__1;
	}
	return _p;
}

inline int soap_write_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, resqml20__ColumnLayerSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology ? "resqml20:ColumnLayerSubnodeTopology" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, const char *URL, resqml20__ColumnLayerSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology ? "resqml20:ColumnLayerSubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, const char *URL, resqml20__ColumnLayerSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology ? "resqml20:ColumnLayerSubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, const char *URL, resqml20__ColumnLayerSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology ? "resqml20:ColumnLayerSubnodeTopology" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ColumnLayerSubnodeTopology * SOAP_FMAC4 soap_get_resqml20__ColumnLayerSubnodeTopology(struct soap*, resqml20__ColumnLayerSubnodeTopology *, const char*, const char*);

inline int soap_read_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, resqml20__ColumnLayerSubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnLayerSubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, const char *URL, resqml20__ColumnLayerSubnodeTopology *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnLayerSubnodeTopology(struct soap *soap, resqml20__ColumnLayerSubnodeTopology *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SubnodePatch(struct soap*, const char*, int, const resqml20__SubnodePatch *, const char*);
SOAP_FMAC3 resqml20__SubnodePatch * SOAP_FMAC4 soap_in_resqml20__SubnodePatch(struct soap*, const char*, resqml20__SubnodePatch *, const char*);
SOAP_FMAC1 resqml20__SubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__SubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SubnodePatch * soap_new_resqml20__SubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__SubnodePatch * soap_new_req_resqml20__SubnodePatch(
	struct soap *soap,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode,
	ULONG64 PatchIndex__1)
{
	resqml20__SubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__SubnodePatch * soap_new_set_resqml20__SubnodePatch(
	struct soap *soap,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode,
	ULONG64 PatchIndex__1)
{
	resqml20__SubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__SubnodePatch(struct soap *soap, resqml20__SubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch ? "resqml20:SubnodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SubnodePatch(struct soap *soap, const char *URL, resqml20__SubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch ? "resqml20:SubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SubnodePatch(struct soap *soap, const char *URL, resqml20__SubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch ? "resqml20:SubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SubnodePatch(struct soap *soap, const char *URL, resqml20__SubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch ? "resqml20:SubnodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SubnodePatch * SOAP_FMAC4 soap_get_resqml20__SubnodePatch(struct soap*, resqml20__SubnodePatch *, const char*, const char*);

inline int soap_read_resqml20__SubnodePatch(struct soap *soap, resqml20__SubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SubnodePatch(struct soap *soap, const char *URL, resqml20__SubnodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SubnodePatch(struct soap *soap, resqml20__SubnodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__KGaps(struct soap*, const char*, int, const resqml20__KGaps *, const char*);
SOAP_FMAC3 resqml20__KGaps * SOAP_FMAC4 soap_in_resqml20__KGaps(struct soap*, const char*, resqml20__KGaps *, const char*);
SOAP_FMAC1 resqml20__KGaps * SOAP_FMAC2 soap_instantiate_resqml20__KGaps(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__KGaps * soap_new_resqml20__KGaps(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__KGaps(soap, n, NULL, NULL, NULL);
}

inline resqml20__KGaps * soap_new_req_resqml20__KGaps(
	struct soap *soap)
{
	resqml20__KGaps *_p = gsoap_resqml2_0_1::soap_new_resqml20__KGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__KGaps * soap_new_set_resqml20__KGaps(
	struct soap *soap,
	struct __resqml20__KGaps_sequence *__KGaps_sequence)
{
	resqml20__KGaps *_p = gsoap_resqml2_0_1::soap_new_resqml20__KGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__KGaps::__KGaps_sequence = __KGaps_sequence;
	}
	return _p;
}

inline int soap_write_resqml20__KGaps(struct soap *soap, resqml20__KGaps const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:KGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps ? "resqml20:KGaps" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__KGaps(struct soap *soap, const char *URL, resqml20__KGaps const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:KGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps ? "resqml20:KGaps" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__KGaps(struct soap *soap, const char *URL, resqml20__KGaps const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:KGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps ? "resqml20:KGaps" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__KGaps(struct soap *soap, const char *URL, resqml20__KGaps const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:KGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps ? "resqml20:KGaps" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__KGaps * SOAP_FMAC4 soap_get_resqml20__KGaps(struct soap*, resqml20__KGaps *, const char*, const char*);

inline int soap_read_resqml20__KGaps(struct soap *soap, resqml20__KGaps *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__KGaps(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__KGaps(struct soap *soap, const char *URL, resqml20__KGaps *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__KGaps(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__KGaps(struct soap *soap, resqml20__KGaps *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__KGaps(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UniformSubnodePatch(struct soap*, const char*, int, const resqml20__UniformSubnodePatch *, const char*);
SOAP_FMAC3 resqml20__UniformSubnodePatch * SOAP_FMAC4 soap_in_resqml20__UniformSubnodePatch(struct soap*, const char*, resqml20__UniformSubnodePatch *, const char*);
SOAP_FMAC1 resqml20__UniformSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__UniformSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UniformSubnodePatch * soap_new_resqml20__UniformSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UniformSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__UniformSubnodePatch * soap_new_req_resqml20__UniformSubnodePatch(
	struct soap *soap,
	ULONG64 SubnodeCountPerObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__UniformSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__UniformSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UniformSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__UniformSubnodePatch * soap_new_set_resqml20__UniformSubnodePatch(
	struct soap *soap,
	ULONG64 SubnodeCountPerObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__UniformSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__UniformSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UniformSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__UniformSubnodePatch(struct soap *soap, resqml20__UniformSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UniformSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch ? "resqml20:UniformSubnodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UniformSubnodePatch(struct soap *soap, const char *URL, resqml20__UniformSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UniformSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch ? "resqml20:UniformSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UniformSubnodePatch(struct soap *soap, const char *URL, resqml20__UniformSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UniformSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch ? "resqml20:UniformSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UniformSubnodePatch(struct soap *soap, const char *URL, resqml20__UniformSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UniformSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch ? "resqml20:UniformSubnodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UniformSubnodePatch * SOAP_FMAC4 soap_get_resqml20__UniformSubnodePatch(struct soap*, resqml20__UniformSubnodePatch *, const char*, const char*);

inline int soap_read_resqml20__UniformSubnodePatch(struct soap *soap, resqml20__UniformSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UniformSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UniformSubnodePatch(struct soap *soap, const char *URL, resqml20__UniformSubnodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UniformSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UniformSubnodePatch(struct soap *soap, resqml20__UniformSubnodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UniformSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, const char*, int, const resqml20__ColumnLayerSplitCoordinateLines *, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSplitCoordinateLines * SOAP_FMAC4 soap_in_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, const char*, resqml20__ColumnLayerSplitCoordinateLines *, const char*);
SOAP_FMAC1 resqml20__ColumnLayerSplitCoordinateLines * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ColumnLayerSplitCoordinateLines * soap_new_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ColumnLayerSplitCoordinateLines(soap, n, NULL, NULL, NULL);
}

inline resqml20__ColumnLayerSplitCoordinateLines * soap_new_req_resqml20__ColumnLayerSplitCoordinateLines(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *PillarIndices,
	resqml20__ResqmlJaggedArray *ColumnsPerSplitCoordinateLine)
{
	resqml20__ColumnLayerSplitCoordinateLines *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSplitCoordinateLines(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerSplitCoordinateLines::Count = Count;
		_p->resqml20__ColumnLayerSplitCoordinateLines::PillarIndices = PillarIndices;
		_p->resqml20__ColumnLayerSplitCoordinateLines::ColumnsPerSplitCoordinateLine = ColumnsPerSplitCoordinateLine;
	}
	return _p;
}

inline resqml20__ColumnLayerSplitCoordinateLines * soap_new_set_resqml20__ColumnLayerSplitCoordinateLines(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *PillarIndices,
	resqml20__ResqmlJaggedArray *ColumnsPerSplitCoordinateLine,
	resqml20__ColumnLayerSplitColumnEdges *SplitColumnEdges)
{
	resqml20__ColumnLayerSplitCoordinateLines *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerSplitCoordinateLines(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerSplitCoordinateLines::Count = Count;
		_p->resqml20__ColumnLayerSplitCoordinateLines::PillarIndices = PillarIndices;
		_p->resqml20__ColumnLayerSplitCoordinateLines::ColumnsPerSplitCoordinateLine = ColumnsPerSplitCoordinateLine;
		_p->resqml20__ColumnLayerSplitCoordinateLines::SplitColumnEdges = SplitColumnEdges;
	}
	return _p;
}

inline int soap_write_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, resqml20__ColumnLayerSplitCoordinateLines const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitCoordinateLines", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines ? "resqml20:ColumnLayerSplitCoordinateLines" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitCoordinateLines const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitCoordinateLines", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines ? "resqml20:ColumnLayerSplitCoordinateLines" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitCoordinateLines const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitCoordinateLines", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines ? "resqml20:ColumnLayerSplitCoordinateLines" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitCoordinateLines const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerSplitCoordinateLines", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines ? "resqml20:ColumnLayerSplitCoordinateLines" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ColumnLayerSplitCoordinateLines * SOAP_FMAC4 soap_get_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, resqml20__ColumnLayerSplitCoordinateLines *, const char*, const char*);

inline int soap_read_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, resqml20__ColumnLayerSplitCoordinateLines *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnLayerSplitCoordinateLines(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, const char *URL, resqml20__ColumnLayerSplitCoordinateLines *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSplitCoordinateLines(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnLayerSplitCoordinateLines(struct soap *soap, resqml20__ColumnLayerSplitCoordinateLines *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerSplitCoordinateLines(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GpGridColumnLayerGrid(struct soap*, const char*, int, const resqml20__GpGridColumnLayerGrid *, const char*);
SOAP_FMAC3 resqml20__GpGridColumnLayerGrid * SOAP_FMAC4 soap_in_resqml20__GpGridColumnLayerGrid(struct soap*, const char*, resqml20__GpGridColumnLayerGrid *, const char*);
SOAP_FMAC1 resqml20__GpGridColumnLayerGrid * SOAP_FMAC2 soap_instantiate_resqml20__GpGridColumnLayerGrid(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__GpGridColumnLayerGrid * soap_new_resqml20__GpGridColumnLayerGrid(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__GpGridColumnLayerGrid(soap, n, NULL, NULL, NULL);
}

inline resqml20__GpGridColumnLayerGrid * soap_new_req_resqml20__GpGridColumnLayerGrid(
	struct soap *soap,
	ULONG64 Nk)
{
	resqml20__GpGridColumnLayerGrid *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridColumnLayerGrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridColumnLayerGrid::Nk = Nk;
	}
	return _p;
}

inline resqml20__GpGridColumnLayerGrid * soap_new_set_resqml20__GpGridColumnLayerGrid(
	struct soap *soap,
	ULONG64 Nk,
	resqml20__KGaps *KGaps,
	const std::vector<resqml20__GpGridIjkGridPatch *> & IjkGridPatch,
	const std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> & UnstructuredColumnLayerGridPatch)
{
	resqml20__GpGridColumnLayerGrid *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridColumnLayerGrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridColumnLayerGrid::Nk = Nk;
		_p->resqml20__GpGridColumnLayerGrid::KGaps = KGaps;
		_p->resqml20__GpGridColumnLayerGrid::IjkGridPatch = IjkGridPatch;
		_p->resqml20__GpGridColumnLayerGrid::UnstructuredColumnLayerGridPatch = UnstructuredColumnLayerGridPatch;
	}
	return _p;
}

inline int soap_write_resqml20__GpGridColumnLayerGrid(struct soap *soap, resqml20__GpGridColumnLayerGrid const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridColumnLayerGrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid ? "resqml20:GpGridColumnLayerGrid" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GpGridColumnLayerGrid(struct soap *soap, const char *URL, resqml20__GpGridColumnLayerGrid const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridColumnLayerGrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid ? "resqml20:GpGridColumnLayerGrid" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GpGridColumnLayerGrid(struct soap *soap, const char *URL, resqml20__GpGridColumnLayerGrid const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridColumnLayerGrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid ? "resqml20:GpGridColumnLayerGrid" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GpGridColumnLayerGrid(struct soap *soap, const char *URL, resqml20__GpGridColumnLayerGrid const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridColumnLayerGrid", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid ? "resqml20:GpGridColumnLayerGrid" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__GpGridColumnLayerGrid * SOAP_FMAC4 soap_get_resqml20__GpGridColumnLayerGrid(struct soap*, resqml20__GpGridColumnLayerGrid *, const char*, const char*);

inline int soap_read_resqml20__GpGridColumnLayerGrid(struct soap *soap, resqml20__GpGridColumnLayerGrid *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GpGridColumnLayerGrid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GpGridColumnLayerGrid(struct soap *soap, const char *URL, resqml20__GpGridColumnLayerGrid *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GpGridColumnLayerGrid(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GpGridColumnLayerGrid(struct soap *soap, resqml20__GpGridColumnLayerGrid *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GpGridColumnLayerGrid(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, int, const resqml20__GpGridUnstructuredColumnLayerGridPatch *, const char*);
SOAP_FMAC3 resqml20__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC4 soap_in_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, resqml20__GpGridUnstructuredColumnLayerGridPatch *, const char*);
SOAP_FMAC1 resqml20__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__GpGridUnstructuredColumnLayerGridPatch * soap_new_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__GpGridUnstructuredColumnLayerGridPatch * soap_new_req_resqml20__GpGridUnstructuredColumnLayerGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredColumnCount,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridUnstructuredColumnLayerGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridUnstructuredColumnLayerGridPatch::UnstructuredColumnCount = UnstructuredColumnCount;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__GpGridUnstructuredColumnLayerGridPatch * soap_new_set_resqml20__GpGridUnstructuredColumnLayerGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredColumnCount,
	resqml20__UnstructuredColumnLayerGridGeometry *Geometry,
	resqml20__TruncationCellPatch *TruncationCells,
	ULONG64 PatchIndex__1)
{
	resqml20__GpGridUnstructuredColumnLayerGridPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__GpGridUnstructuredColumnLayerGridPatch::UnstructuredColumnCount = UnstructuredColumnCount;
		_p->resqml20__GpGridUnstructuredColumnLayerGridPatch::Geometry = Geometry;
		_p->resqml20__GpGridUnstructuredColumnLayerGridPatch::TruncationCells = TruncationCells;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, resqml20__GpGridUnstructuredColumnLayerGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredColumnLayerGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch ? "resqml20:GpGridUnstructuredColumnLayerGridPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredColumnLayerGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredColumnLayerGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch ? "resqml20:GpGridUnstructuredColumnLayerGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredColumnLayerGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredColumnLayerGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch ? "resqml20:GpGridUnstructuredColumnLayerGridPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredColumnLayerGridPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:GpGridUnstructuredColumnLayerGridPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch ? "resqml20:GpGridUnstructuredColumnLayerGridPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC4 soap_get_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml20__GpGridUnstructuredColumnLayerGridPatch *, const char*, const char*);

inline int soap_read_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, resqml20__GpGridUnstructuredColumnLayerGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, const char *URL, resqml20__GpGridUnstructuredColumnLayerGridPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, resqml20__GpGridUnstructuredColumnLayerGridPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__GpGridUnstructuredColumnLayerGridPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__UnstructuredSubnodeTopology(struct soap*, const char*, int, const resqml20__UnstructuredSubnodeTopology *, const char*);
SOAP_FMAC3 resqml20__UnstructuredSubnodeTopology * SOAP_FMAC4 soap_in_resqml20__UnstructuredSubnodeTopology(struct soap*, const char*, resqml20__UnstructuredSubnodeTopology *, const char*);
SOAP_FMAC1 resqml20__UnstructuredSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__UnstructuredSubnodeTopology * soap_new_resqml20__UnstructuredSubnodeTopology(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__UnstructuredSubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml20__UnstructuredSubnodeTopology * soap_new_req_resqml20__UnstructuredSubnodeTopology(
	struct soap *soap)
{
	resqml20__UnstructuredSubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__UnstructuredSubnodeTopology * soap_new_set_resqml20__UnstructuredSubnodeTopology(
	struct soap *soap,
	resqml20__Edges *Edges,
	resqml20__NodesPerCell *NodesPerCell,
	const std::vector<resqml20__VariableSubnodePatch *> & VariableSubnodes__1,
	const std::vector<resqml20__UniformSubnodePatch *> & UniformSubnodes__1)
{
	resqml20__UnstructuredSubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__UnstructuredSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__UnstructuredSubnodeTopology::Edges = Edges;
		_p->resqml20__UnstructuredSubnodeTopology::NodesPerCell = NodesPerCell;
		_p->resqml20__SubnodeTopology::VariableSubnodes = VariableSubnodes__1;
		_p->resqml20__SubnodeTopology::UniformSubnodes = UniformSubnodes__1;
	}
	return _p;
}

inline int soap_write_resqml20__UnstructuredSubnodeTopology(struct soap *soap, resqml20__UnstructuredSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology ? "resqml20:UnstructuredSubnodeTopology" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__UnstructuredSubnodeTopology(struct soap *soap, const char *URL, resqml20__UnstructuredSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology ? "resqml20:UnstructuredSubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__UnstructuredSubnodeTopology(struct soap *soap, const char *URL, resqml20__UnstructuredSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology ? "resqml20:UnstructuredSubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__UnstructuredSubnodeTopology(struct soap *soap, const char *URL, resqml20__UnstructuredSubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:UnstructuredSubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology ? "resqml20:UnstructuredSubnodeTopology" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__UnstructuredSubnodeTopology * SOAP_FMAC4 soap_get_resqml20__UnstructuredSubnodeTopology(struct soap*, resqml20__UnstructuredSubnodeTopology *, const char*, const char*);

inline int soap_read_resqml20__UnstructuredSubnodeTopology(struct soap *soap, resqml20__UnstructuredSubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__UnstructuredSubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__UnstructuredSubnodeTopology(struct soap *soap, const char *URL, resqml20__UnstructuredSubnodeTopology *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredSubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__UnstructuredSubnodeTopology(struct soap *soap, resqml20__UnstructuredSubnodeTopology *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__UnstructuredSubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnLayerParentWindow(struct soap*, const char*, int, const resqml20__ColumnLayerParentWindow *, const char*);
SOAP_FMAC3 resqml20__ColumnLayerParentWindow * SOAP_FMAC4 soap_in_resqml20__ColumnLayerParentWindow(struct soap*, const char*, resqml20__ColumnLayerParentWindow *, const char*);
SOAP_FMAC1 resqml20__ColumnLayerParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ColumnLayerParentWindow * soap_new_resqml20__ColumnLayerParentWindow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ColumnLayerParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml20__ColumnLayerParentWindow * soap_new_req_resqml20__ColumnLayerParentWindow(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ColumnIndices,
	resqml20__Regrid *KRegrid,
	eml20__DataObjectReference *ParentGrid)
{
	resqml20__ColumnLayerParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerParentWindow::ColumnIndices = ColumnIndices;
		_p->resqml20__ColumnLayerParentWindow::KRegrid = KRegrid;
		_p->resqml20__ColumnLayerParentWindow::ParentGrid = ParentGrid;
	}
	return _p;
}

inline resqml20__ColumnLayerParentWindow * soap_new_set_resqml20__ColumnLayerParentWindow(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ColumnIndices,
	resqml20__AbstractIntegerArray *OmitParentCells,
	resqml20__Regrid *KRegrid,
	eml20__DataObjectReference *ParentGrid,
	resqml20__CellOverlap *CellOverlap__1)
{
	resqml20__ColumnLayerParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnLayerParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnLayerParentWindow::ColumnIndices = ColumnIndices;
		_p->resqml20__ColumnLayerParentWindow::OmitParentCells = OmitParentCells;
		_p->resqml20__ColumnLayerParentWindow::KRegrid = KRegrid;
		_p->resqml20__ColumnLayerParentWindow::ParentGrid = ParentGrid;
		_p->resqml20__AbstractParentWindow::CellOverlap = CellOverlap__1;
	}
	return _p;
}

inline int soap_write_resqml20__ColumnLayerParentWindow(struct soap *soap, resqml20__ColumnLayerParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow ? "resqml20:ColumnLayerParentWindow" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnLayerParentWindow(struct soap *soap, const char *URL, resqml20__ColumnLayerParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow ? "resqml20:ColumnLayerParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnLayerParentWindow(struct soap *soap, const char *URL, resqml20__ColumnLayerParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow ? "resqml20:ColumnLayerParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnLayerParentWindow(struct soap *soap, const char *URL, resqml20__ColumnLayerParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnLayerParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow ? "resqml20:ColumnLayerParentWindow" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ColumnLayerParentWindow * SOAP_FMAC4 soap_get_resqml20__ColumnLayerParentWindow(struct soap*, resqml20__ColumnLayerParentWindow *, const char*, const char*);

inline int soap_read_resqml20__ColumnLayerParentWindow(struct soap *soap, resqml20__ColumnLayerParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnLayerParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnLayerParentWindow(struct soap *soap, const char *URL, resqml20__ColumnLayerParentWindow *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnLayerParentWindow(struct soap *soap, resqml20__ColumnLayerParentWindow *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnLayerParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREIjkGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREIjkGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, const char*, resqml20__obj_USCOREIjkGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREIjkGridRepresentation * soap_new_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREIjkGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREIjkGridRepresentation * soap_new_req_resqml20__obj_USCOREIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	ULONG64 Nk__1,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREIjkGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREIjkGridRepresentation::Ni = Ni;
		_p->resqml20__obj_USCOREIjkGridRepresentation::Nj = Nj;
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREIjkGridRepresentation * soap_new_set_resqml20__obj_USCOREIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	bool *RadialGridIsComplete,
	resqml20__KGaps *KGaps,
	resqml20__IjkGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphicUnits__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__2,
	resqml20__AbstractParentWindow *ParentWindow__2,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREIjkGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREIjkGridRepresentation::Ni = Ni;
		_p->resqml20__obj_USCOREIjkGridRepresentation::Nj = Nj;
		_p->resqml20__obj_USCOREIjkGridRepresentation::RadialGridIsComplete = RadialGridIsComplete;
		_p->resqml20__obj_USCOREIjkGridRepresentation::KGaps = KGaps;
		_p->resqml20__obj_USCOREIjkGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits__1;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__2;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__2;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation ? "resqml20:obj_IjkGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation ? "resqml20:obj_IjkGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation ? "resqml20:obj_IjkGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_IjkGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation ? "resqml20:obj_IjkGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREIjkGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, resqml20__obj_USCOREIjkGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, resqml20__obj_USCOREIjkGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREIjkGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREIjkGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREIjkGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREIjkGridRepresentation(struct soap *soap, resqml20__obj_USCOREIjkGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREIjkGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IjGaps(struct soap*, const char*, int, const resqml20__IjGaps *, const char*);
SOAP_FMAC3 resqml20__IjGaps * SOAP_FMAC4 soap_in_resqml20__IjGaps(struct soap*, const char*, resqml20__IjGaps *, const char*);
SOAP_FMAC1 resqml20__IjGaps * SOAP_FMAC2 soap_instantiate_resqml20__IjGaps(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IjGaps * soap_new_resqml20__IjGaps(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IjGaps(soap, n, NULL, NULL, NULL);
}

inline resqml20__IjGaps * soap_new_req_resqml20__IjGaps(
	struct soap *soap)
{
	resqml20__IjGaps *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__IjGaps * soap_new_set_resqml20__IjGaps(
	struct soap *soap,
	struct __resqml20__IjGaps_sequence *__IjGaps_sequence)
{
	resqml20__IjGaps *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjGaps::__IjGaps_sequence = __IjGaps_sequence;
	}
	return _p;
}

inline int soap_write_resqml20__IjGaps(struct soap *soap, resqml20__IjGaps const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps ? "resqml20:IjGaps" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IjGaps(struct soap *soap, const char *URL, resqml20__IjGaps const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps ? "resqml20:IjGaps" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IjGaps(struct soap *soap, const char *URL, resqml20__IjGaps const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps ? "resqml20:IjGaps" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IjGaps(struct soap *soap, const char *URL, resqml20__IjGaps const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjGaps", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps ? "resqml20:IjGaps" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IjGaps * SOAP_FMAC4 soap_get_resqml20__IjGaps(struct soap*, resqml20__IjGaps *, const char*, const char*);

inline int soap_read_resqml20__IjGaps(struct soap *soap, resqml20__IjGaps *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IjGaps(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IjGaps(struct soap *soap, const char *URL, resqml20__IjGaps *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IjGaps(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IjGaps(struct soap *soap, resqml20__IjGaps *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IjGaps(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_req_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	ULONG64 Nk__1,
	eml20__Citation *Citation__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_set_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml20__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk__1,
	resqml20__IntervalStratigraphicUnits *IntervalStratigraphicUnits__1,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__2,
	resqml20__AbstractParentWindow *ParentWindow__2,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__2,
	eml20__DataObjectReference *RepresentedInterpretation__3,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__4,
	eml20__Citation *Citation__5,
	const std::vector<eml20__ObjectAlias *> & Aliases__5,
	eml20__CustomData *CustomData__5,
	const std::string& schemaVersion__5,
	const std::string& uuid__5)
{
	resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractColumnLayerGridRepresentation::Nk = Nk__1;
		_p->resqml20__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits__1;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__2;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__2;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__2;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__3;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__4;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__5;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__5;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__5;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__5;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__5;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_UnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_UnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_UnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredColumnLayerGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation ? "resqml20:obj_UnstructuredColumnLayerGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SplitFaces(struct soap*, const char*, int, const resqml20__SplitFaces *, const char*);
SOAP_FMAC3 resqml20__SplitFaces * SOAP_FMAC4 soap_in_resqml20__SplitFaces(struct soap*, const char*, resqml20__SplitFaces *, const char*);
SOAP_FMAC1 resqml20__SplitFaces * SOAP_FMAC2 soap_instantiate_resqml20__SplitFaces(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SplitFaces * soap_new_resqml20__SplitFaces(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SplitFaces(soap, n, NULL, NULL, NULL);
}

inline resqml20__SplitFaces * soap_new_req_resqml20__SplitFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentFaceIndices,
	resqml20__AbstractIntegerArray *CellIndices)
{
	resqml20__SplitFaces *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitFaces::Count = Count;
		_p->resqml20__SplitFaces::ParentFaceIndices = ParentFaceIndices;
		_p->resqml20__SplitFaces::CellIndices = CellIndices;
	}
	return _p;
}

inline resqml20__SplitFaces * soap_new_set_resqml20__SplitFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentFaceIndices,
	resqml20__AbstractIntegerArray *CellIndices,
	resqml20__SplitEdges *SplitEdges)
{
	resqml20__SplitFaces *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitFaces::Count = Count;
		_p->resqml20__SplitFaces::ParentFaceIndices = ParentFaceIndices;
		_p->resqml20__SplitFaces::CellIndices = CellIndices;
		_p->resqml20__SplitFaces::SplitEdges = SplitEdges;
	}
	return _p;
}

inline int soap_write_resqml20__SplitFaces(struct soap *soap, resqml20__SplitFaces const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces ? "resqml20:SplitFaces" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SplitFaces(struct soap *soap, const char *URL, resqml20__SplitFaces const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces ? "resqml20:SplitFaces" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SplitFaces(struct soap *soap, const char *URL, resqml20__SplitFaces const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces ? "resqml20:SplitFaces" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SplitFaces(struct soap *soap, const char *URL, resqml20__SplitFaces const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitFaces", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces ? "resqml20:SplitFaces" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SplitFaces * SOAP_FMAC4 soap_get_resqml20__SplitFaces(struct soap*, resqml20__SplitFaces *, const char*, const char*);

inline int soap_read_resqml20__SplitFaces(struct soap *soap, resqml20__SplitFaces *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SplitFaces(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SplitFaces(struct soap *soap, const char *URL, resqml20__SplitFaces *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SplitFaces(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SplitFaces(struct soap *soap, resqml20__SplitFaces *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SplitFaces(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SubnodeTopology(struct soap*, const char*, int, const resqml20__SubnodeTopology *, const char*);
SOAP_FMAC3 resqml20__SubnodeTopology * SOAP_FMAC4 soap_in_resqml20__SubnodeTopology(struct soap*, const char*, resqml20__SubnodeTopology *, const char*);
SOAP_FMAC1 resqml20__SubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__SubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SubnodeTopology * soap_new_resqml20__SubnodeTopology(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml20__SubnodeTopology * soap_new_req_resqml20__SubnodeTopology(
	struct soap *soap)
{
	resqml20__SubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__SubnodeTopology * soap_new_set_resqml20__SubnodeTopology(
	struct soap *soap,
	const std::vector<resqml20__VariableSubnodePatch *> & VariableSubnodes,
	const std::vector<resqml20__UniformSubnodePatch *> & UniformSubnodes)
{
	resqml20__SubnodeTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SubnodeTopology::VariableSubnodes = VariableSubnodes;
		_p->resqml20__SubnodeTopology::UniformSubnodes = UniformSubnodes;
	}
	return _p;
}

inline int soap_write_resqml20__SubnodeTopology(struct soap *soap, resqml20__SubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology ? "resqml20:SubnodeTopology" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SubnodeTopology(struct soap *soap, const char *URL, resqml20__SubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology ? "resqml20:SubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SubnodeTopology(struct soap *soap, const char *URL, resqml20__SubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology ? "resqml20:SubnodeTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SubnodeTopology(struct soap *soap, const char *URL, resqml20__SubnodeTopology const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubnodeTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology ? "resqml20:SubnodeTopology" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SubnodeTopology * SOAP_FMAC4 soap_get_resqml20__SubnodeTopology(struct soap*, resqml20__SubnodeTopology *, const char*, const char*);

inline int soap_read_resqml20__SubnodeTopology(struct soap *soap, resqml20__SubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SubnodeTopology(struct soap *soap, const char *URL, resqml20__SubnodeTopology *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SubnodeTopology(struct soap *soap, resqml20__SubnodeTopology *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SubnodeTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractGridRepresentation(struct soap*, const char*, int, const resqml20__AbstractGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractGridRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractGridRepresentation(struct soap*, const char*, resqml20__AbstractGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractGridRepresentation * soap_new_resqml20__AbstractGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractGridRepresentation * soap_new_req_resqml20__AbstractGridRepresentation(
	struct soap *soap,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractGridRepresentation * soap_new_set_resqml20__AbstractGridRepresentation(
	struct soap *soap,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits,
	resqml20__AbstractParentWindow *ParentWindow,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractGridRepresentation(struct soap *soap, resqml20__AbstractGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation ? "resqml20:AbstractGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation ? "resqml20:AbstractGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation ? "resqml20:AbstractGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation ? "resqml20:AbstractGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractGridRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractGridRepresentation(struct soap*, resqml20__AbstractGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractGridRepresentation(struct soap *soap, resqml20__AbstractGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractGridRepresentation(struct soap *soap, const char *URL, resqml20__AbstractGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractGridRepresentation(struct soap *soap, resqml20__AbstractGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORELocalGridSet(struct soap*, const char*, int, const resqml20__obj_USCORELocalGridSet *, const char*);
SOAP_FMAC3 resqml20__obj_USCORELocalGridSet * SOAP_FMAC4 soap_in_resqml20__obj_USCORELocalGridSet(struct soap*, const char*, resqml20__obj_USCORELocalGridSet *, const char*);
SOAP_FMAC1 resqml20__obj_USCORELocalGridSet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalGridSet(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORELocalGridSet * soap_new_resqml20__obj_USCORELocalGridSet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORELocalGridSet(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORELocalGridSet * soap_new_req_resqml20__obj_USCORELocalGridSet(
	struct soap *soap,
	const std::vector<eml20__DataObjectReference *> & ChildGrid,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORELocalGridSet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalGridSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORELocalGridSet::ChildGrid = ChildGrid;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCORELocalGridSet * soap_new_set_resqml20__obj_USCORELocalGridSet(
	struct soap *soap,
	resqml20__Activation *Activation,
	const std::vector<eml20__DataObjectReference *> & ChildGrid,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORELocalGridSet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORELocalGridSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORELocalGridSet::Activation = Activation;
		_p->resqml20__obj_USCORELocalGridSet::ChildGrid = ChildGrid;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORELocalGridSet(struct soap *soap, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet ? "resqml20:obj_LocalGridSet" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORELocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet ? "resqml20:obj_LocalGridSet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORELocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet ? "resqml20:obj_LocalGridSet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORELocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_LocalGridSet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet ? "resqml20:obj_LocalGridSet" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORELocalGridSet * SOAP_FMAC4 soap_get_resqml20__obj_USCORELocalGridSet(struct soap*, resqml20__obj_USCORELocalGridSet *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORELocalGridSet(struct soap *soap, resqml20__obj_USCORELocalGridSet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORELocalGridSet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORELocalGridSet(struct soap *soap, const char *URL, resqml20__obj_USCORELocalGridSet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalGridSet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORELocalGridSet(struct soap *soap, resqml20__obj_USCORELocalGridSet *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORELocalGridSet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__CellStratigraphicUnits(struct soap*, const char*, int, const resqml20__CellStratigraphicUnits *, const char*);
SOAP_FMAC3 resqml20__CellStratigraphicUnits * SOAP_FMAC4 soap_in_resqml20__CellStratigraphicUnits(struct soap*, const char*, resqml20__CellStratigraphicUnits *, const char*);
SOAP_FMAC1 resqml20__CellStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml20__CellStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__CellStratigraphicUnits * soap_new_resqml20__CellStratigraphicUnits(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__CellStratigraphicUnits(soap, n, NULL, NULL, NULL);
}

inline resqml20__CellStratigraphicUnits * soap_new_req_resqml20__CellStratigraphicUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *UnitIndices,
	eml20__DataObjectReference *StratigraphicOrganization)
{
	resqml20__CellStratigraphicUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml20__CellStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline resqml20__CellStratigraphicUnits * soap_new_set_resqml20__CellStratigraphicUnits(
	struct soap *soap,
	resqml20__AbstractIntegerArray *UnitIndices,
	eml20__DataObjectReference *StratigraphicOrganization)
{
	resqml20__CellStratigraphicUnits *_p = gsoap_resqml2_0_1::soap_new_resqml20__CellStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__CellStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml20__CellStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline int soap_write_resqml20__CellStratigraphicUnits(struct soap *soap, resqml20__CellStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits ? "resqml20:CellStratigraphicUnits" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__CellStratigraphicUnits(struct soap *soap, const char *URL, resqml20__CellStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits ? "resqml20:CellStratigraphicUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__CellStratigraphicUnits(struct soap *soap, const char *URL, resqml20__CellStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits ? "resqml20:CellStratigraphicUnits" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__CellStratigraphicUnits(struct soap *soap, const char *URL, resqml20__CellStratigraphicUnits const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:CellStratigraphicUnits", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits ? "resqml20:CellStratigraphicUnits" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__CellStratigraphicUnits * SOAP_FMAC4 soap_get_resqml20__CellStratigraphicUnits(struct soap*, resqml20__CellStratigraphicUnits *, const char*, const char*);

inline int soap_read_resqml20__CellStratigraphicUnits(struct soap *soap, resqml20__CellStratigraphicUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__CellStratigraphicUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__CellStratigraphicUnits(struct soap *soap, const char *URL, resqml20__CellStratigraphicUnits *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__CellStratigraphicUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__CellStratigraphicUnits(struct soap *soap, resqml20__CellStratigraphicUnits *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__CellStratigraphicUnits(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ColumnSubnodePatch(struct soap*, const char*, int, const resqml20__ColumnSubnodePatch *, const char*);
SOAP_FMAC3 resqml20__ColumnSubnodePatch * SOAP_FMAC4 soap_in_resqml20__ColumnSubnodePatch(struct soap*, const char*, resqml20__ColumnSubnodePatch *, const char*);
SOAP_FMAC1 resqml20__ColumnSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__ColumnSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ColumnSubnodePatch * soap_new_resqml20__ColumnSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ColumnSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__ColumnSubnodePatch * soap_new_req_resqml20__ColumnSubnodePatch(
	struct soap *soap,
	resqml20__AbstractIntegerArray *SubnodeCountPerObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__ColumnSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__ColumnSubnodePatch * soap_new_set_resqml20__ColumnSubnodePatch(
	struct soap *soap,
	resqml20__AbstractIntegerArray *SubnodeCountPerObject,
	enum resqml20__SubnodeNodeObject SubnodeNodeObject__1,
	resqml20__AbstractValueArray *NodeWeightsPerSubnode__1,
	ULONG64 PatchIndex__2)
{
	resqml20__ColumnSubnodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__ColumnSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ColumnSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml20__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject__1;
		_p->resqml20__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__ColumnSubnodePatch(struct soap *soap, resqml20__ColumnSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch ? "resqml20:ColumnSubnodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ColumnSubnodePatch(struct soap *soap, const char *URL, resqml20__ColumnSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch ? "resqml20:ColumnSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ColumnSubnodePatch(struct soap *soap, const char *URL, resqml20__ColumnSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch ? "resqml20:ColumnSubnodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ColumnSubnodePatch(struct soap *soap, const char *URL, resqml20__ColumnSubnodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ColumnSubnodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch ? "resqml20:ColumnSubnodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ColumnSubnodePatch * SOAP_FMAC4 soap_get_resqml20__ColumnSubnodePatch(struct soap*, resqml20__ColumnSubnodePatch *, const char*, const char*);

inline int soap_read_resqml20__ColumnSubnodePatch(struct soap *soap, resqml20__ColumnSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ColumnSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ColumnSubnodePatch(struct soap *soap, const char *URL, resqml20__ColumnSubnodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ColumnSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ColumnSubnodePatch(struct soap *soap, resqml20__ColumnSubnodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ColumnSubnodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IjkParentWindow(struct soap*, const char*, int, const resqml20__IjkParentWindow *, const char*);
SOAP_FMAC3 resqml20__IjkParentWindow * SOAP_FMAC4 soap_in_resqml20__IjkParentWindow(struct soap*, const char*, resqml20__IjkParentWindow *, const char*);
SOAP_FMAC1 resqml20__IjkParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__IjkParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IjkParentWindow * soap_new_resqml20__IjkParentWindow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IjkParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml20__IjkParentWindow * soap_new_req_resqml20__IjkParentWindow(
	struct soap *soap,
	resqml20__Regrid *JRegrid,
	eml20__DataObjectReference *ParentGrid,
	resqml20__Regrid *KRegrid,
	resqml20__Regrid *IRegrid)
{
	resqml20__IjkParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjkParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjkParentWindow::JRegrid = JRegrid;
		_p->resqml20__IjkParentWindow::ParentGrid = ParentGrid;
		_p->resqml20__IjkParentWindow::KRegrid = KRegrid;
		_p->resqml20__IjkParentWindow::IRegrid = IRegrid;
	}
	return _p;
}

inline resqml20__IjkParentWindow * soap_new_set_resqml20__IjkParentWindow(
	struct soap *soap,
	resqml20__AbstractIntegerArray *OmitParentCells,
	resqml20__Regrid *JRegrid,
	eml20__DataObjectReference *ParentGrid,
	resqml20__Regrid *KRegrid,
	resqml20__Regrid *IRegrid,
	resqml20__CellOverlap *CellOverlap__1)
{
	resqml20__IjkParentWindow *_p = gsoap_resqml2_0_1::soap_new_resqml20__IjkParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IjkParentWindow::OmitParentCells = OmitParentCells;
		_p->resqml20__IjkParentWindow::JRegrid = JRegrid;
		_p->resqml20__IjkParentWindow::ParentGrid = ParentGrid;
		_p->resqml20__IjkParentWindow::KRegrid = KRegrid;
		_p->resqml20__IjkParentWindow::IRegrid = IRegrid;
		_p->resqml20__AbstractParentWindow::CellOverlap = CellOverlap__1;
	}
	return _p;
}

inline int soap_write_resqml20__IjkParentWindow(struct soap *soap, resqml20__IjkParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow ? "resqml20:IjkParentWindow" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IjkParentWindow(struct soap *soap, const char *URL, resqml20__IjkParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow ? "resqml20:IjkParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IjkParentWindow(struct soap *soap, const char *URL, resqml20__IjkParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow ? "resqml20:IjkParentWindow" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IjkParentWindow(struct soap *soap, const char *URL, resqml20__IjkParentWindow const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IjkParentWindow", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow ? "resqml20:IjkParentWindow" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IjkParentWindow * SOAP_FMAC4 soap_get_resqml20__IjkParentWindow(struct soap*, resqml20__IjkParentWindow *, const char*, const char*);

inline int soap_read_resqml20__IjkParentWindow(struct soap *soap, resqml20__IjkParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IjkParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IjkParentWindow(struct soap *soap, const char *URL, resqml20__IjkParentWindow *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IjkParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IjkParentWindow(struct soap *soap, resqml20__IjkParentWindow *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IjkParentWindow(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SplitNodePatch(struct soap*, const char*, int, const resqml20__SplitNodePatch *, const char*);
SOAP_FMAC3 resqml20__SplitNodePatch * SOAP_FMAC4 soap_in_resqml20__SplitNodePatch(struct soap*, const char*, resqml20__SplitNodePatch *, const char*);
SOAP_FMAC1 resqml20__SplitNodePatch * SOAP_FMAC2 soap_instantiate_resqml20__SplitNodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SplitNodePatch * soap_new_resqml20__SplitNodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SplitNodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__SplitNodePatch * soap_new_req_resqml20__SplitNodePatch(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentNodeIndices,
	resqml20__ResqmlJaggedArray *CellsPerSplitNode,
	ULONG64 PatchIndex__1)
{
	resqml20__SplitNodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitNodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitNodePatch::Count = Count;
		_p->resqml20__SplitNodePatch::ParentNodeIndices = ParentNodeIndices;
		_p->resqml20__SplitNodePatch::CellsPerSplitNode = CellsPerSplitNode;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__SplitNodePatch * soap_new_set_resqml20__SplitNodePatch(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentNodeIndices,
	resqml20__ResqmlJaggedArray *CellsPerSplitNode,
	resqml20__SplitFaces *SplitFaces,
	ULONG64 PatchIndex__1)
{
	resqml20__SplitNodePatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SplitNodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SplitNodePatch::Count = Count;
		_p->resqml20__SplitNodePatch::ParentNodeIndices = ParentNodeIndices;
		_p->resqml20__SplitNodePatch::CellsPerSplitNode = CellsPerSplitNode;
		_p->resqml20__SplitNodePatch::SplitFaces = SplitFaces;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__SplitNodePatch(struct soap *soap, resqml20__SplitNodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitNodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch ? "resqml20:SplitNodePatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SplitNodePatch(struct soap *soap, const char *URL, resqml20__SplitNodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitNodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch ? "resqml20:SplitNodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SplitNodePatch(struct soap *soap, const char *URL, resqml20__SplitNodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitNodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch ? "resqml20:SplitNodePatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SplitNodePatch(struct soap *soap, const char *URL, resqml20__SplitNodePatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SplitNodePatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch ? "resqml20:SplitNodePatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SplitNodePatch * SOAP_FMAC4 soap_get_resqml20__SplitNodePatch(struct soap*, resqml20__SplitNodePatch *, const char*, const char*);

inline int soap_read_resqml20__SplitNodePatch(struct soap *soap, resqml20__SplitNodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SplitNodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SplitNodePatch(struct soap *soap, const char *URL, resqml20__SplitNodePatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SplitNodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SplitNodePatch(struct soap *soap, resqml20__SplitNodePatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SplitNodePatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREGpGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREGpGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREGpGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREGpGridRepresentation(struct soap*, const char*, resqml20__obj_USCOREGpGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREGpGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGpGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREGpGridRepresentation * soap_new_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREGpGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREGpGridRepresentation * soap_new_req_resqml20__obj_USCOREGpGridRepresentation(
	struct soap *soap,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGpGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGpGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREGpGridRepresentation * soap_new_set_resqml20__obj_USCOREGpGridRepresentation(
	struct soap *soap,
	const std::vector<resqml20__GpGridColumnLayerGrid *> & ColumnLayerGrid,
	const std::vector<resqml20__GpGridUnstructuredGridPatch *> & UnstructuredGridPatch,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	resqml20__AbstractParentWindow *ParentWindow__1,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREGpGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREGpGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREGpGridRepresentation::ColumnLayerGrid = ColumnLayerGrid;
		_p->resqml20__obj_USCOREGpGridRepresentation::UnstructuredGridPatch = UnstructuredGridPatch;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__1;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation ? "resqml20:obj_GpGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation ? "resqml20:obj_GpGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation ? "resqml20:obj_GpGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_GpGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation ? "resqml20:obj_GpGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREGpGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREGpGridRepresentation(struct soap*, resqml20__obj_USCOREGpGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, resqml20__obj_USCOREGpGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREGpGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREGpGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGpGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREGpGridRepresentation(struct soap *soap, resqml20__obj_USCOREGpGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREGpGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AdditionalGridTopology(struct soap*, const char*, int, const resqml20__AdditionalGridTopology *, const char*);
SOAP_FMAC3 resqml20__AdditionalGridTopology * SOAP_FMAC4 soap_in_resqml20__AdditionalGridTopology(struct soap*, const char*, resqml20__AdditionalGridTopology *, const char*);
SOAP_FMAC1 resqml20__AdditionalGridTopology * SOAP_FMAC2 soap_instantiate_resqml20__AdditionalGridTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AdditionalGridTopology * soap_new_resqml20__AdditionalGridTopology(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AdditionalGridTopology(soap, n, NULL, NULL, NULL);
}

inline resqml20__AdditionalGridTopology * soap_new_req_resqml20__AdditionalGridTopology(
	struct soap *soap)
{
	resqml20__AdditionalGridTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__AdditionalGridTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AdditionalGridTopology * soap_new_set_resqml20__AdditionalGridTopology(
	struct soap *soap,
	resqml20__SplitEdges *SplitEdges,
	resqml20__SplitNodePatch *SplitNodes,
	resqml20__ColumnLayerSplitColumnEdges *SplitColumnEdges,
	resqml20__UnstructuredColumnEdges *UnstructuredColumnEdges,
	resqml20__SplitFaces *SplitFaces,
	resqml20__IjSplitColumnEdges *IjSplitColumnEdges,
	resqml20__UnstructuredSubnodeTopology *UnstructuredSubnodeTopology,
	resqml20__ColumnLayerSubnodeTopology *ColumnLayerSubnodeTopology)
{
	resqml20__AdditionalGridTopology *_p = gsoap_resqml2_0_1::soap_new_resqml20__AdditionalGridTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AdditionalGridTopology::SplitEdges = SplitEdges;
		_p->resqml20__AdditionalGridTopology::SplitNodes = SplitNodes;
		_p->resqml20__AdditionalGridTopology::SplitColumnEdges = SplitColumnEdges;
		_p->resqml20__AdditionalGridTopology::UnstructuredColumnEdges = UnstructuredColumnEdges;
		_p->resqml20__AdditionalGridTopology::SplitFaces = SplitFaces;
		_p->resqml20__AdditionalGridTopology::IjSplitColumnEdges = IjSplitColumnEdges;
		_p->resqml20__AdditionalGridTopology::UnstructuredSubnodeTopology = UnstructuredSubnodeTopology;
		_p->resqml20__AdditionalGridTopology::ColumnLayerSubnodeTopology = ColumnLayerSubnodeTopology;
	}
	return _p;
}

inline int soap_write_resqml20__AdditionalGridTopology(struct soap *soap, resqml20__AdditionalGridTopology const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology ? "resqml20:AdditionalGridTopology" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AdditionalGridTopology(struct soap *soap, const char *URL, resqml20__AdditionalGridTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology ? "resqml20:AdditionalGridTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AdditionalGridTopology(struct soap *soap, const char *URL, resqml20__AdditionalGridTopology const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology ? "resqml20:AdditionalGridTopology" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AdditionalGridTopology(struct soap *soap, const char *URL, resqml20__AdditionalGridTopology const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AdditionalGridTopology", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology ? "resqml20:AdditionalGridTopology" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AdditionalGridTopology * SOAP_FMAC4 soap_get_resqml20__AdditionalGridTopology(struct soap*, resqml20__AdditionalGridTopology *, const char*, const char*);

inline int soap_read_resqml20__AdditionalGridTopology(struct soap *soap, resqml20__AdditionalGridTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AdditionalGridTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AdditionalGridTopology(struct soap *soap, const char *URL, resqml20__AdditionalGridTopology *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AdditionalGridTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AdditionalGridTopology(struct soap *soap, resqml20__AdditionalGridTopology *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AdditionalGridTopology(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, const char*, int, const resqml20__obj_USCOREUnstructuredGridRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, const char*, resqml20__obj_USCOREUnstructuredGridRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREUnstructuredGridRepresentation * soap_new_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREUnstructuredGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREUnstructuredGridRepresentation * soap_new_req_resqml20__obj_USCOREUnstructuredGridRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREUnstructuredGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREUnstructuredGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREUnstructuredGridRepresentation::CellCount = CellCount;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREUnstructuredGridRepresentation * soap_new_set_resqml20__obj_USCOREUnstructuredGridRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml20__UnstructuredGridGeometry *Geometry,
	resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits__1,
	resqml20__AbstractParentWindow *ParentWindow__1,
	resqml20__CellStratigraphicUnits *CellStratigraphicUnits__1,
	eml20__DataObjectReference *RepresentedInterpretation__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREUnstructuredGridRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREUnstructuredGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREUnstructuredGridRepresentation::CellCount = CellCount;
		_p->resqml20__obj_USCOREUnstructuredGridRepresentation::Geometry = Geometry;
		_p->resqml20__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits__1;
		_p->resqml20__AbstractGridRepresentation::ParentWindow = ParentWindow__1;
		_p->resqml20__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits__1;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation ? "resqml20:obj_UnstructuredGridRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation ? "resqml20:obj_UnstructuredGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation ? "resqml20:obj_UnstructuredGridRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_UnstructuredGridRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation ? "resqml20:obj_UnstructuredGridRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, resqml20__obj_USCOREUnstructuredGridRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREUnstructuredGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCOREUnstructuredGridRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREUnstructuredGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, resqml20__obj_USCOREUnstructuredGridRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREUnstructuredGridRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORESubRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORESubRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORESubRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORESubRepresentation(struct soap*, const char*, resqml20__obj_USCORESubRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORESubRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESubRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORESubRepresentation * soap_new_resqml20__obj_USCORESubRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORESubRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORESubRepresentation * soap_new_req_resqml20__obj_USCORESubRepresentation(
	struct soap *soap,
	eml20__DataObjectReference *SupportingRepresentation,
	const std::vector<resqml20__SubRepresentationPatch *> & SubRepresentationPatch,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORESubRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESubRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESubRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__obj_USCORESubRepresentation::SubRepresentationPatch = SubRepresentationPatch;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCORESubRepresentation * soap_new_set_resqml20__obj_USCORESubRepresentation(
	struct soap *soap,
	resqml20__AdditionalGridTopology *AdditionalGridTopology,
	eml20__DataObjectReference *SupportingRepresentation,
	const std::vector<resqml20__SubRepresentationPatch *> & SubRepresentationPatch,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORESubRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORESubRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORESubRepresentation::AdditionalGridTopology = AdditionalGridTopology;
		_p->resqml20__obj_USCORESubRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__obj_USCORESubRepresentation::SubRepresentationPatch = SubRepresentationPatch;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORESubRepresentation(struct soap *soap, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation ? "resqml20:obj_SubRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORESubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation ? "resqml20:obj_SubRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORESubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation ? "resqml20:obj_SubRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORESubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_SubRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation ? "resqml20:obj_SubRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORESubRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORESubRepresentation(struct soap*, resqml20__obj_USCORESubRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORESubRepresentation(struct soap *soap, resqml20__obj_USCORESubRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORESubRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORESubRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORESubRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESubRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORESubRepresentation(struct soap *soap, resqml20__obj_USCORESubRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORESubRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PatchOfGeometry(struct soap*, const char*, int, const resqml20__PatchOfGeometry *, const char*);
SOAP_FMAC3 resqml20__PatchOfGeometry * SOAP_FMAC4 soap_in_resqml20__PatchOfGeometry(struct soap*, const char*, resqml20__PatchOfGeometry *, const char*);
SOAP_FMAC1 resqml20__PatchOfGeometry * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PatchOfGeometry * soap_new_resqml20__PatchOfGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PatchOfGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__PatchOfGeometry * soap_new_req_resqml20__PatchOfGeometry(
	struct soap *soap,
	resqml20__AbstractGeometry *Geometry)
{
	resqml20__PatchOfGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfGeometry::Geometry = Geometry;
	}
	return _p;
}

inline resqml20__PatchOfGeometry * soap_new_set_resqml20__PatchOfGeometry(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml20__AbstractGeometry *Geometry)
{
	resqml20__PatchOfGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfGeometry::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml20__PatchOfGeometry::Geometry = Geometry;
	}
	return _p;
}

inline int soap_write_resqml20__PatchOfGeometry(struct soap *soap, resqml20__PatchOfGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry ? "resqml20:PatchOfGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PatchOfGeometry(struct soap *soap, const char *URL, resqml20__PatchOfGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry ? "resqml20:PatchOfGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PatchOfGeometry(struct soap *soap, const char *URL, resqml20__PatchOfGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry ? "resqml20:PatchOfGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PatchOfGeometry(struct soap *soap, const char *URL, resqml20__PatchOfGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry ? "resqml20:PatchOfGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PatchOfGeometry * SOAP_FMAC4 soap_get_resqml20__PatchOfGeometry(struct soap*, resqml20__PatchOfGeometry *, const char*, const char*);

inline int soap_read_resqml20__PatchOfGeometry(struct soap *soap, resqml20__PatchOfGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PatchOfGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PatchOfGeometry(struct soap *soap, const char *URL, resqml20__PatchOfGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PatchOfGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PatchOfGeometry(struct soap *soap, resqml20__PatchOfGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PatchOfGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractRepresentation(struct soap*, const char*, int, const resqml20__AbstractRepresentation *, const char*);
SOAP_FMAC3 resqml20__AbstractRepresentation * SOAP_FMAC4 soap_in_resqml20__AbstractRepresentation(struct soap*, const char*, resqml20__AbstractRepresentation *, const char*);
SOAP_FMAC1 resqml20__AbstractRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractRepresentation * soap_new_resqml20__AbstractRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractRepresentation * soap_new_req_resqml20__AbstractRepresentation(
	struct soap *soap,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractRepresentation * soap_new_set_resqml20__AbstractRepresentation(
	struct soap *soap,
	eml20__DataObjectReference *RepresentedInterpretation,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractRepresentation(struct soap *soap, resqml20__AbstractRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation ? "resqml20:AbstractRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractRepresentation(struct soap *soap, const char *URL, resqml20__AbstractRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation ? "resqml20:AbstractRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractRepresentation(struct soap *soap, const char *URL, resqml20__AbstractRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation ? "resqml20:AbstractRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractRepresentation(struct soap *soap, const char *URL, resqml20__AbstractRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation ? "resqml20:AbstractRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractRepresentation * SOAP_FMAC4 soap_get_resqml20__AbstractRepresentation(struct soap*, resqml20__AbstractRepresentation *, const char*, const char*);

inline int soap_read_resqml20__AbstractRepresentation(struct soap *soap, resqml20__AbstractRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractRepresentation(struct soap *soap, const char *URL, resqml20__AbstractRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractRepresentation(struct soap *soap, resqml20__AbstractRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ElementIdentity(struct soap*, const char*, int, const resqml20__ElementIdentity *, const char*);
SOAP_FMAC3 resqml20__ElementIdentity * SOAP_FMAC4 soap_in_resqml20__ElementIdentity(struct soap*, const char*, resqml20__ElementIdentity *, const char*);
SOAP_FMAC1 resqml20__ElementIdentity * SOAP_FMAC2 soap_instantiate_resqml20__ElementIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ElementIdentity * soap_new_resqml20__ElementIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ElementIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml20__ElementIdentity * soap_new_req_resqml20__ElementIdentity(
	struct soap *soap,
	enum resqml20__IdentityKind IdentityKind,
	enum resqml20__IndexableElements IndexableElement,
	eml20__DataObjectReference *Representation)
{
	resqml20__ElementIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__ElementIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ElementIdentity::IdentityKind = IdentityKind;
		_p->resqml20__ElementIdentity::IndexableElement = IndexableElement;
		_p->resqml20__ElementIdentity::Representation = Representation;
	}
	return _p;
}

inline resqml20__ElementIdentity * soap_new_set_resqml20__ElementIdentity(
	struct soap *soap,
	resqml20__AbstractIntegerArray *ElementIndices,
	enum resqml20__IdentityKind IdentityKind,
	enum resqml20__IndexableElements IndexableElement,
	eml20__DataObjectReference *Representation,
	resqml20__TimeIndex *FromTimeIndex,
	resqml20__TimeIndex *ToTimeIndex)
{
	resqml20__ElementIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__ElementIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ElementIdentity::ElementIndices = ElementIndices;
		_p->resqml20__ElementIdentity::IdentityKind = IdentityKind;
		_p->resqml20__ElementIdentity::IndexableElement = IndexableElement;
		_p->resqml20__ElementIdentity::Representation = Representation;
		_p->resqml20__ElementIdentity::FromTimeIndex = FromTimeIndex;
		_p->resqml20__ElementIdentity::ToTimeIndex = ToTimeIndex;
	}
	return _p;
}

inline int soap_write_resqml20__ElementIdentity(struct soap *soap, resqml20__ElementIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity ? "resqml20:ElementIdentity" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ElementIdentity(struct soap *soap, const char *URL, resqml20__ElementIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity ? "resqml20:ElementIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ElementIdentity(struct soap *soap, const char *URL, resqml20__ElementIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity ? "resqml20:ElementIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ElementIdentity(struct soap *soap, const char *URL, resqml20__ElementIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity ? "resqml20:ElementIdentity" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ElementIdentity * SOAP_FMAC4 soap_get_resqml20__ElementIdentity(struct soap*, resqml20__ElementIdentity *, const char*, const char*);

inline int soap_read_resqml20__ElementIdentity(struct soap *soap, resqml20__ElementIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ElementIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ElementIdentity(struct soap *soap, const char *URL, resqml20__ElementIdentity *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ElementIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ElementIdentity(struct soap *soap, resqml20__ElementIdentity *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ElementIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, const char*, int, const resqml20__obj_USCORERepresentationIdentitySet *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERepresentationIdentitySet * SOAP_FMAC4 soap_in_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, const char*, resqml20__obj_USCORERepresentationIdentitySet *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERepresentationIdentitySet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERepresentationIdentitySet * soap_new_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERepresentationIdentitySet(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERepresentationIdentitySet * soap_new_req_resqml20__obj_USCORERepresentationIdentitySet(
	struct soap *soap,
	const std::vector<resqml20__RepresentationIdentity *> & RepresentationIdentity,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORERepresentationIdentitySet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERepresentationIdentitySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationIdentitySet::RepresentationIdentity = RepresentationIdentity;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCORERepresentationIdentitySet * soap_new_set_resqml20__obj_USCORERepresentationIdentitySet(
	struct soap *soap,
	const std::vector<resqml20__RepresentationIdentity *> & RepresentationIdentity,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCORERepresentationIdentitySet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERepresentationIdentitySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationIdentitySet::RepresentationIdentity = RepresentationIdentity;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet ? "resqml20:obj_RepresentationIdentitySet" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet ? "resqml20:obj_RepresentationIdentitySet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet ? "resqml20:obj_RepresentationIdentitySet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationIdentitySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet ? "resqml20:obj_RepresentationIdentitySet" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERepresentationIdentitySet * SOAP_FMAC4 soap_get_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, resqml20__obj_USCORERepresentationIdentitySet *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, resqml20__obj_USCORERepresentationIdentitySet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERepresentationIdentitySet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationIdentitySet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERepresentationIdentitySet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERepresentationIdentitySet(struct soap *soap, resqml20__obj_USCORERepresentationIdentitySet *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERepresentationIdentitySet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__RepresentationIdentity(struct soap*, const char*, int, const resqml20__RepresentationIdentity *, const char*);
SOAP_FMAC3 resqml20__RepresentationIdentity * SOAP_FMAC4 soap_in_resqml20__RepresentationIdentity(struct soap*, const char*, resqml20__RepresentationIdentity *, const char*);
SOAP_FMAC1 resqml20__RepresentationIdentity * SOAP_FMAC2 soap_instantiate_resqml20__RepresentationIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__RepresentationIdentity * soap_new_resqml20__RepresentationIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__RepresentationIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml20__RepresentationIdentity * soap_new_req_resqml20__RepresentationIdentity(
	struct soap *soap,
	ULONG64 IdenticalElementCount,
	const std::vector<resqml20__ElementIdentity *> & ElementIdentity)
{
	resqml20__RepresentationIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__RepresentationIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__RepresentationIdentity::IdenticalElementCount = IdenticalElementCount;
		_p->resqml20__RepresentationIdentity::ElementIdentity = ElementIdentity;
	}
	return _p;
}

inline resqml20__RepresentationIdentity * soap_new_set_resqml20__RepresentationIdentity(
	struct soap *soap,
	ULONG64 IdenticalElementCount,
	const std::vector<resqml20__ElementIdentity *> & ElementIdentity,
	resqml20__AdditionalGridTopology *AdditionalGridTopology)
{
	resqml20__RepresentationIdentity *_p = gsoap_resqml2_0_1::soap_new_resqml20__RepresentationIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__RepresentationIdentity::IdenticalElementCount = IdenticalElementCount;
		_p->resqml20__RepresentationIdentity::ElementIdentity = ElementIdentity;
		_p->resqml20__RepresentationIdentity::AdditionalGridTopology = AdditionalGridTopology;
	}
	return _p;
}

inline int soap_write_resqml20__RepresentationIdentity(struct soap *soap, resqml20__RepresentationIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity ? "resqml20:RepresentationIdentity" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__RepresentationIdentity(struct soap *soap, const char *URL, resqml20__RepresentationIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity ? "resqml20:RepresentationIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__RepresentationIdentity(struct soap *soap, const char *URL, resqml20__RepresentationIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity ? "resqml20:RepresentationIdentity" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__RepresentationIdentity(struct soap *soap, const char *URL, resqml20__RepresentationIdentity const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:RepresentationIdentity", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity ? "resqml20:RepresentationIdentity" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__RepresentationIdentity * SOAP_FMAC4 soap_get_resqml20__RepresentationIdentity(struct soap*, resqml20__RepresentationIdentity *, const char*, const char*);

inline int soap_read_resqml20__RepresentationIdentity(struct soap *soap, resqml20__RepresentationIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__RepresentationIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__RepresentationIdentity(struct soap *soap, const char *URL, resqml20__RepresentationIdentity *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__RepresentationIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__RepresentationIdentity(struct soap *soap, resqml20__RepresentationIdentity *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__RepresentationIdentity(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORERedefinedGeometryRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, const char*, resqml20__obj_USCORERedefinedGeometryRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERedefinedGeometryRepresentation * soap_new_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERedefinedGeometryRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERedefinedGeometryRepresentation * soap_new_req_resqml20__obj_USCORERedefinedGeometryRepresentation(
	struct soap *soap,
	const std::vector<resqml20__PatchOfGeometry *> & PatchOfGeometry,
	eml20__DataObjectReference *SupportingRepresentation,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORERedefinedGeometryRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERedefinedGeometryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERedefinedGeometryRepresentation::PatchOfGeometry = PatchOfGeometry;
		_p->resqml20__obj_USCORERedefinedGeometryRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCORERedefinedGeometryRepresentation * soap_new_set_resqml20__obj_USCORERedefinedGeometryRepresentation(
	struct soap *soap,
	const std::vector<resqml20__PatchOfGeometry *> & PatchOfGeometry,
	eml20__DataObjectReference *SupportingRepresentation,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORERedefinedGeometryRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERedefinedGeometryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERedefinedGeometryRepresentation::PatchOfGeometry = PatchOfGeometry;
		_p->resqml20__obj_USCORERedefinedGeometryRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation ? "resqml20:obj_RedefinedGeometryRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation ? "resqml20:obj_RedefinedGeometryRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation ? "resqml20:obj_RedefinedGeometryRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RedefinedGeometryRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation ? "resqml20:obj_RedefinedGeometryRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, resqml20__obj_USCORERedefinedGeometryRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, resqml20__obj_USCORERedefinedGeometryRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERedefinedGeometryRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERedefinedGeometryRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERedefinedGeometryRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, resqml20__obj_USCORERedefinedGeometryRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERedefinedGeometryRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, const char*, int, const resqml20__obj_USCORERepresentationSetRepresentation *, const char*);
SOAP_FMAC3 resqml20__obj_USCORERepresentationSetRepresentation * SOAP_FMAC4 soap_in_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, const char*, resqml20__obj_USCORERepresentationSetRepresentation *, const char*);
SOAP_FMAC1 resqml20__obj_USCORERepresentationSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORERepresentationSetRepresentation * soap_new_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORERepresentationSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORERepresentationSetRepresentation * soap_new_req_resqml20__obj_USCORERepresentationSetRepresentation(
	struct soap *soap,
	bool IsHomogeneous,
	const std::vector<eml20__DataObjectReference *> & Representation,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORERepresentationSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERepresentationSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCORERepresentationSetRepresentation * soap_new_set_resqml20__obj_USCORERepresentationSetRepresentation(
	struct soap *soap,
	bool IsHomogeneous,
	const std::vector<eml20__DataObjectReference *> & Representation,
	eml20__DataObjectReference *RepresentedInterpretation__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCORERepresentationSetRepresentation *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORERepresentationSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous;
		_p->resqml20__obj_USCORERepresentationSetRepresentation::Representation = Representation;
		_p->resqml20__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation ? "resqml20:obj_RepresentationSetRepresentation" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation ? "resqml20:obj_RepresentationSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation ? "resqml20:obj_RepresentationSetRepresentation" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_RepresentationSetRepresentation", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation ? "resqml20:obj_RepresentationSetRepresentation" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORERepresentationSetRepresentation * SOAP_FMAC4 soap_get_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, resqml20__obj_USCORERepresentationSetRepresentation *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, resqml20__obj_USCORERepresentationSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORERepresentationSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, const char *URL, resqml20__obj_USCORERepresentationSetRepresentation *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERepresentationSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORERepresentationSetRepresentation(struct soap *soap, resqml20__obj_USCORERepresentationSetRepresentation *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORERepresentationSetRepresentation(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__SubRepresentationPatch(struct soap*, const char*, int, const resqml20__SubRepresentationPatch *, const char*);
SOAP_FMAC3 resqml20__SubRepresentationPatch * SOAP_FMAC4 soap_in_resqml20__SubRepresentationPatch(struct soap*, const char*, resqml20__SubRepresentationPatch *, const char*);
SOAP_FMAC1 resqml20__SubRepresentationPatch * SOAP_FMAC2 soap_instantiate_resqml20__SubRepresentationPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__SubRepresentationPatch * soap_new_resqml20__SubRepresentationPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__SubRepresentationPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__SubRepresentationPatch * soap_new_req_resqml20__SubRepresentationPatch(
	struct soap *soap,
	const std::vector<resqml20__ElementIndices *> & ElementIndices,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__SubRepresentationPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubRepresentationPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SubRepresentationPatch::ElementIndices = ElementIndices;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline resqml20__SubRepresentationPatch * soap_new_set_resqml20__SubRepresentationPatch(
	struct soap *soap,
	const std::vector<resqml20__ElementIndices *> & ElementIndices,
	ULONG64 Count__1,
	ULONG64 PatchIndex__2)
{
	resqml20__SubRepresentationPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__SubRepresentationPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__SubRepresentationPatch::ElementIndices = ElementIndices;
		_p->resqml20__Patch1d::Count = Count__1;
		_p->resqml20__Patch::PatchIndex = PatchIndex__2;
	}
	return _p;
}

inline int soap_write_resqml20__SubRepresentationPatch(struct soap *soap, resqml20__SubRepresentationPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentationPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch ? "resqml20:SubRepresentationPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__SubRepresentationPatch(struct soap *soap, const char *URL, resqml20__SubRepresentationPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentationPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch ? "resqml20:SubRepresentationPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__SubRepresentationPatch(struct soap *soap, const char *URL, resqml20__SubRepresentationPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentationPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch ? "resqml20:SubRepresentationPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__SubRepresentationPatch(struct soap *soap, const char *URL, resqml20__SubRepresentationPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:SubRepresentationPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch ? "resqml20:SubRepresentationPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__SubRepresentationPatch * SOAP_FMAC4 soap_get_resqml20__SubRepresentationPatch(struct soap*, resqml20__SubRepresentationPatch *, const char*, const char*);

inline int soap_read_resqml20__SubRepresentationPatch(struct soap *soap, resqml20__SubRepresentationPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__SubRepresentationPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__SubRepresentationPatch(struct soap *soap, const char *URL, resqml20__SubRepresentationPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__SubRepresentationPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__SubRepresentationPatch(struct soap *soap, resqml20__SubRepresentationPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__SubRepresentationPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ElementIndices(struct soap*, const char*, int, const resqml20__ElementIndices *, const char*);
SOAP_FMAC3 resqml20__ElementIndices * SOAP_FMAC4 soap_in_resqml20__ElementIndices(struct soap*, const char*, resqml20__ElementIndices *, const char*);
SOAP_FMAC1 resqml20__ElementIndices * SOAP_FMAC2 soap_instantiate_resqml20__ElementIndices(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ElementIndices * soap_new_resqml20__ElementIndices(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ElementIndices(soap, n, NULL, NULL, NULL);
}

inline resqml20__ElementIndices * soap_new_req_resqml20__ElementIndices(
	struct soap *soap,
	enum resqml20__IndexableElements IndexableElement,
	resqml20__AbstractIntegerArray *Indices)
{
	resqml20__ElementIndices *_p = gsoap_resqml2_0_1::soap_new_resqml20__ElementIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ElementIndices::IndexableElement = IndexableElement;
		_p->resqml20__ElementIndices::Indices = Indices;
	}
	return _p;
}

inline resqml20__ElementIndices * soap_new_set_resqml20__ElementIndices(
	struct soap *soap,
	enum resqml20__IndexableElements IndexableElement,
	resqml20__AbstractIntegerArray *Indices)
{
	resqml20__ElementIndices *_p = gsoap_resqml2_0_1::soap_new_resqml20__ElementIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ElementIndices::IndexableElement = IndexableElement;
		_p->resqml20__ElementIndices::Indices = Indices;
	}
	return _p;
}

inline int soap_write_resqml20__ElementIndices(struct soap *soap, resqml20__ElementIndices const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices ? "resqml20:ElementIndices" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ElementIndices(struct soap *soap, const char *URL, resqml20__ElementIndices const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices ? "resqml20:ElementIndices" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ElementIndices(struct soap *soap, const char *URL, resqml20__ElementIndices const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices ? "resqml20:ElementIndices" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ElementIndices(struct soap *soap, const char *URL, resqml20__ElementIndices const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ElementIndices", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices ? "resqml20:ElementIndices" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ElementIndices * SOAP_FMAC4 soap_get_resqml20__ElementIndices(struct soap*, resqml20__ElementIndices *, const char*, const char*);

inline int soap_read_resqml20__ElementIndices(struct soap *soap, resqml20__ElementIndices *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ElementIndices(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ElementIndices(struct soap *soap, const char *URL, resqml20__ElementIndices *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ElementIndices(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ElementIndices(struct soap *soap, resqml20__ElementIndices *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ElementIndices(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Patch(struct soap*, const char*, int, const resqml20__Patch *, const char*);
SOAP_FMAC3 resqml20__Patch * SOAP_FMAC4 soap_in_resqml20__Patch(struct soap*, const char*, resqml20__Patch *, const char*);
SOAP_FMAC1 resqml20__Patch * SOAP_FMAC2 soap_instantiate_resqml20__Patch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Patch * soap_new_resqml20__Patch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Patch(soap, n, NULL, NULL, NULL);
}

inline resqml20__Patch * soap_new_req_resqml20__Patch(
	struct soap *soap,
	ULONG64 PatchIndex)
{
	resqml20__Patch *_p = gsoap_resqml2_0_1::soap_new_resqml20__Patch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Patch::PatchIndex = PatchIndex;
	}
	return _p;
}

inline resqml20__Patch * soap_new_set_resqml20__Patch(
	struct soap *soap,
	ULONG64 PatchIndex)
{
	resqml20__Patch *_p = gsoap_resqml2_0_1::soap_new_resqml20__Patch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Patch::PatchIndex = PatchIndex;
	}
	return _p;
}

inline int soap_write_resqml20__Patch(struct soap *soap, resqml20__Patch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch ? "resqml20:Patch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Patch(struct soap *soap, const char *URL, resqml20__Patch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch ? "resqml20:Patch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Patch(struct soap *soap, const char *URL, resqml20__Patch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch ? "resqml20:Patch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Patch(struct soap *soap, const char *URL, resqml20__Patch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch ? "resqml20:Patch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Patch * SOAP_FMAC4 soap_get_resqml20__Patch(struct soap*, resqml20__Patch *, const char*, const char*);

inline int soap_read_resqml20__Patch(struct soap *soap, resqml20__Patch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Patch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Patch(struct soap *soap, const char *URL, resqml20__Patch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Patch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Patch(struct soap *soap, resqml20__Patch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Patch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Patch1d(struct soap*, const char*, int, const resqml20__Patch1d *, const char*);
SOAP_FMAC3 resqml20__Patch1d * SOAP_FMAC4 soap_in_resqml20__Patch1d(struct soap*, const char*, resqml20__Patch1d *, const char*);
SOAP_FMAC1 resqml20__Patch1d * SOAP_FMAC2 soap_instantiate_resqml20__Patch1d(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Patch1d * soap_new_resqml20__Patch1d(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Patch1d(soap, n, NULL, NULL, NULL);
}

inline resqml20__Patch1d * soap_new_req_resqml20__Patch1d(
	struct soap *soap,
	ULONG64 Count,
	ULONG64 PatchIndex__1)
{
	resqml20__Patch1d *_p = gsoap_resqml2_0_1::soap_new_resqml20__Patch1d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Patch1d::Count = Count;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline resqml20__Patch1d * soap_new_set_resqml20__Patch1d(
	struct soap *soap,
	ULONG64 Count,
	ULONG64 PatchIndex__1)
{
	resqml20__Patch1d *_p = gsoap_resqml2_0_1::soap_new_resqml20__Patch1d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Patch1d::Count = Count;
		_p->resqml20__Patch::PatchIndex = PatchIndex__1;
	}
	return _p;
}

inline int soap_write_resqml20__Patch1d(struct soap *soap, resqml20__Patch1d const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch1d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d ? "resqml20:Patch1d" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Patch1d(struct soap *soap, const char *URL, resqml20__Patch1d const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch1d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d ? "resqml20:Patch1d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Patch1d(struct soap *soap, const char *URL, resqml20__Patch1d const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch1d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d ? "resqml20:Patch1d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Patch1d(struct soap *soap, const char *URL, resqml20__Patch1d const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Patch1d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d ? "resqml20:Patch1d" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Patch1d * SOAP_FMAC4 soap_get_resqml20__Patch1d(struct soap*, resqml20__Patch1d *, const char*, const char*);

inline int soap_read_resqml20__Patch1d(struct soap *soap, resqml20__Patch1d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Patch1d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Patch1d(struct soap *soap, const char *URL, resqml20__Patch1d *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Patch1d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Patch1d(struct soap *soap, resqml20__Patch1d *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Patch1d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Seismic2dCoordinates(struct soap*, const char*, int, const resqml20__Seismic2dCoordinates *, const char*);
SOAP_FMAC3 resqml20__Seismic2dCoordinates * SOAP_FMAC4 soap_in_resqml20__Seismic2dCoordinates(struct soap*, const char*, resqml20__Seismic2dCoordinates *, const char*);
SOAP_FMAC1 resqml20__Seismic2dCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__Seismic2dCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Seismic2dCoordinates * soap_new_resqml20__Seismic2dCoordinates(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Seismic2dCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml20__Seismic2dCoordinates * soap_new_req_resqml20__Seismic2dCoordinates(
	struct soap *soap,
	resqml20__AbstractDoubleArray *LineAbscissa,
	eml20__DataObjectReference *SeismicSupport__1)
{
	resqml20__Seismic2dCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__Seismic2dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Seismic2dCoordinates::LineAbscissa = LineAbscissa;
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport__1;
	}
	return _p;
}

inline resqml20__Seismic2dCoordinates * soap_new_set_resqml20__Seismic2dCoordinates(
	struct soap *soap,
	resqml20__AbstractDoubleArray *LineAbscissa,
	resqml20__AbstractDoubleArray *VerticalCoordinates,
	eml20__DataObjectReference *SeismicSupport__1)
{
	resqml20__Seismic2dCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__Seismic2dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Seismic2dCoordinates::LineAbscissa = LineAbscissa;
		_p->resqml20__Seismic2dCoordinates::VerticalCoordinates = VerticalCoordinates;
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport__1;
	}
	return _p;
}

inline int soap_write_resqml20__Seismic2dCoordinates(struct soap *soap, resqml20__Seismic2dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic2dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates ? "resqml20:Seismic2dCoordinates" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Seismic2dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic2dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic2dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates ? "resqml20:Seismic2dCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Seismic2dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic2dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic2dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates ? "resqml20:Seismic2dCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Seismic2dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic2dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic2dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates ? "resqml20:Seismic2dCoordinates" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Seismic2dCoordinates * SOAP_FMAC4 soap_get_resqml20__Seismic2dCoordinates(struct soap*, resqml20__Seismic2dCoordinates *, const char*, const char*);

inline int soap_read_resqml20__Seismic2dCoordinates(struct soap *soap, resqml20__Seismic2dCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Seismic2dCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Seismic2dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic2dCoordinates *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Seismic2dCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Seismic2dCoordinates(struct soap *soap, resqml20__Seismic2dCoordinates *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Seismic2dCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractSeismicCoordinates(struct soap*, const char*, int, const resqml20__AbstractSeismicCoordinates *, const char*);
SOAP_FMAC3 resqml20__AbstractSeismicCoordinates * SOAP_FMAC4 soap_in_resqml20__AbstractSeismicCoordinates(struct soap*, const char*, resqml20__AbstractSeismicCoordinates *, const char*);
SOAP_FMAC1 resqml20__AbstractSeismicCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSeismicCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractSeismicCoordinates * soap_new_resqml20__AbstractSeismicCoordinates(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractSeismicCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractSeismicCoordinates * soap_new_req_resqml20__AbstractSeismicCoordinates(
	struct soap *soap,
	eml20__DataObjectReference *SeismicSupport)
{
	resqml20__AbstractSeismicCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSeismicCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport;
	}
	return _p;
}

inline resqml20__AbstractSeismicCoordinates * soap_new_set_resqml20__AbstractSeismicCoordinates(
	struct soap *soap,
	eml20__DataObjectReference *SeismicSupport)
{
	resqml20__AbstractSeismicCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractSeismicCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractSeismicCoordinates(struct soap *soap, resqml20__AbstractSeismicCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates ? "resqml20:AbstractSeismicCoordinates" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractSeismicCoordinates(struct soap *soap, const char *URL, resqml20__AbstractSeismicCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates ? "resqml20:AbstractSeismicCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractSeismicCoordinates(struct soap *soap, const char *URL, resqml20__AbstractSeismicCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates ? "resqml20:AbstractSeismicCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractSeismicCoordinates(struct soap *soap, const char *URL, resqml20__AbstractSeismicCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractSeismicCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates ? "resqml20:AbstractSeismicCoordinates" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractSeismicCoordinates * SOAP_FMAC4 soap_get_resqml20__AbstractSeismicCoordinates(struct soap*, resqml20__AbstractSeismicCoordinates *, const char*, const char*);

inline int soap_read_resqml20__AbstractSeismicCoordinates(struct soap *soap, resqml20__AbstractSeismicCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractSeismicCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractSeismicCoordinates(struct soap *soap, const char *URL, resqml20__AbstractSeismicCoordinates *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractSeismicCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractSeismicCoordinates(struct soap *soap, resqml20__AbstractSeismicCoordinates *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractSeismicCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Seismic3dCoordinates(struct soap*, const char*, int, const resqml20__Seismic3dCoordinates *, const char*);
SOAP_FMAC3 resqml20__Seismic3dCoordinates * SOAP_FMAC4 soap_in_resqml20__Seismic3dCoordinates(struct soap*, const char*, resqml20__Seismic3dCoordinates *, const char*);
SOAP_FMAC1 resqml20__Seismic3dCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__Seismic3dCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Seismic3dCoordinates * soap_new_resqml20__Seismic3dCoordinates(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Seismic3dCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml20__Seismic3dCoordinates * soap_new_req_resqml20__Seismic3dCoordinates(
	struct soap *soap,
	resqml20__AbstractDoubleArray *CrosslineCoordinates,
	resqml20__AbstractDoubleArray *InlineCoordinates,
	eml20__DataObjectReference *SeismicSupport__1)
{
	resqml20__Seismic3dCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__Seismic3dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Seismic3dCoordinates::CrosslineCoordinates = CrosslineCoordinates;
		_p->resqml20__Seismic3dCoordinates::InlineCoordinates = InlineCoordinates;
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport__1;
	}
	return _p;
}

inline resqml20__Seismic3dCoordinates * soap_new_set_resqml20__Seismic3dCoordinates(
	struct soap *soap,
	resqml20__AbstractDoubleArray *CrosslineCoordinates,
	resqml20__AbstractDoubleArray *InlineCoordinates,
	resqml20__AbstractDoubleArray *VerticalCoordinates,
	eml20__DataObjectReference *SeismicSupport__1)
{
	resqml20__Seismic3dCoordinates *_p = gsoap_resqml2_0_1::soap_new_resqml20__Seismic3dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Seismic3dCoordinates::CrosslineCoordinates = CrosslineCoordinates;
		_p->resqml20__Seismic3dCoordinates::InlineCoordinates = InlineCoordinates;
		_p->resqml20__Seismic3dCoordinates::VerticalCoordinates = VerticalCoordinates;
		_p->resqml20__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport__1;
	}
	return _p;
}

inline int soap_write_resqml20__Seismic3dCoordinates(struct soap *soap, resqml20__Seismic3dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic3dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates ? "resqml20:Seismic3dCoordinates" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Seismic3dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic3dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic3dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates ? "resqml20:Seismic3dCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Seismic3dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic3dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic3dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates ? "resqml20:Seismic3dCoordinates" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Seismic3dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic3dCoordinates const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Seismic3dCoordinates", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates ? "resqml20:Seismic3dCoordinates" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Seismic3dCoordinates * SOAP_FMAC4 soap_get_resqml20__Seismic3dCoordinates(struct soap*, resqml20__Seismic3dCoordinates *, const char*, const char*);

inline int soap_read_resqml20__Seismic3dCoordinates(struct soap *soap, resqml20__Seismic3dCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Seismic3dCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Seismic3dCoordinates(struct soap *soap, const char *URL, resqml20__Seismic3dCoordinates *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Seismic3dCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Seismic3dCoordinates(struct soap *soap, resqml20__Seismic3dCoordinates *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Seismic3dCoordinates(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, const char*, int, const resqml20__Point3dFromRepresentationLatticeArray *, const char*);
SOAP_FMAC3 resqml20__Point3dFromRepresentationLatticeArray * SOAP_FMAC4 soap_in_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, const char*, resqml20__Point3dFromRepresentationLatticeArray *, const char*);
SOAP_FMAC1 resqml20__Point3dFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dFromRepresentationLatticeArray * soap_new_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dFromRepresentationLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dFromRepresentationLatticeArray * soap_new_req_resqml20__Point3dFromRepresentationLatticeArray(
	struct soap *soap,
	resqml20__IntegerLatticeArray *NodeIndicesOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation)
{
	resqml20__Point3dFromRepresentationLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dFromRepresentationLatticeArray::NodeIndicesOnSupportingRepresentation = NodeIndicesOnSupportingRepresentation;
		_p->resqml20__Point3dFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline resqml20__Point3dFromRepresentationLatticeArray * soap_new_set_resqml20__Point3dFromRepresentationLatticeArray(
	struct soap *soap,
	resqml20__IntegerLatticeArray *NodeIndicesOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation)
{
	resqml20__Point3dFromRepresentationLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dFromRepresentationLatticeArray::NodeIndicesOnSupportingRepresentation = NodeIndicesOnSupportingRepresentation;
		_p->resqml20__Point3dFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, resqml20__Point3dFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray ? "resqml20:Point3dFromRepresentationLatticeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray ? "resqml20:Point3dFromRepresentationLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray ? "resqml20:Point3dFromRepresentationLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray ? "resqml20:Point3dFromRepresentationLatticeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dFromRepresentationLatticeArray * SOAP_FMAC4 soap_get_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, resqml20__Point3dFromRepresentationLatticeArray *, const char*, const char*);

inline int soap_read_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, resqml20__Point3dFromRepresentationLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dFromRepresentationLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dFromRepresentationLatticeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dFromRepresentationLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dFromRepresentationLatticeArray(struct soap *soap, resqml20__Point3dFromRepresentationLatticeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dFromRepresentationLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractParametricLineGeometry(struct soap*, const char*, int, const resqml20__AbstractParametricLineGeometry *, const char*);
SOAP_FMAC3 resqml20__AbstractParametricLineGeometry * SOAP_FMAC4 soap_in_resqml20__AbstractParametricLineGeometry(struct soap*, const char*, resqml20__AbstractParametricLineGeometry *, const char*);
SOAP_FMAC1 resqml20__AbstractParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractParametricLineGeometry * soap_new_resqml20__AbstractParametricLineGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractParametricLineGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractParametricLineGeometry * soap_new_req_resqml20__AbstractParametricLineGeometry(
	struct soap *soap,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__AbstractParametricLineGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline resqml20__AbstractParametricLineGeometry * soap_new_set_resqml20__AbstractParametricLineGeometry(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex__1,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__AbstractParametricLineGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__1;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractParametricLineGeometry(struct soap *soap, resqml20__AbstractParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry ? "resqml20:AbstractParametricLineGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractParametricLineGeometry(struct soap *soap, const char *URL, resqml20__AbstractParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry ? "resqml20:AbstractParametricLineGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractParametricLineGeometry(struct soap *soap, const char *URL, resqml20__AbstractParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry ? "resqml20:AbstractParametricLineGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractParametricLineGeometry(struct soap *soap, const char *URL, resqml20__AbstractParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry ? "resqml20:AbstractParametricLineGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractParametricLineGeometry * SOAP_FMAC4 soap_get_resqml20__AbstractParametricLineGeometry(struct soap*, resqml20__AbstractParametricLineGeometry *, const char*, const char*);

inline int soap_read_resqml20__AbstractParametricLineGeometry(struct soap *soap, resqml20__AbstractParametricLineGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractParametricLineGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractParametricLineGeometry(struct soap *soap, const char *URL, resqml20__AbstractParametricLineGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractParametricLineGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractParametricLineGeometry(struct soap *soap, resqml20__AbstractParametricLineGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractParametricLineGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractPlaneGeometry(struct soap*, const char*, int, const resqml20__AbstractPlaneGeometry *, const char*);
SOAP_FMAC3 resqml20__AbstractPlaneGeometry * SOAP_FMAC4 soap_in_resqml20__AbstractPlaneGeometry(struct soap*, const char*, resqml20__AbstractPlaneGeometry *, const char*);
SOAP_FMAC1 resqml20__AbstractPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractPlaneGeometry * soap_new_resqml20__AbstractPlaneGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractPlaneGeometry * soap_new_req_resqml20__AbstractPlaneGeometry(
	struct soap *soap,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__AbstractPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline resqml20__AbstractPlaneGeometry * soap_new_set_resqml20__AbstractPlaneGeometry(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex__1,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__AbstractPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__1;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractPlaneGeometry(struct soap *soap, resqml20__AbstractPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry ? "resqml20:AbstractPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractPlaneGeometry(struct soap *soap, const char *URL, resqml20__AbstractPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry ? "resqml20:AbstractPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractPlaneGeometry(struct soap *soap, const char *URL, resqml20__AbstractPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry ? "resqml20:AbstractPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractPlaneGeometry(struct soap *soap, const char *URL, resqml20__AbstractPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry ? "resqml20:AbstractPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractPlaneGeometry * SOAP_FMAC4 soap_get_resqml20__AbstractPlaneGeometry(struct soap*, resqml20__AbstractPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml20__AbstractPlaneGeometry(struct soap *soap, resqml20__AbstractPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractPlaneGeometry(struct soap *soap, const char *URL, resqml20__AbstractPlaneGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractPlaneGeometry(struct soap *soap, resqml20__AbstractPlaneGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__TiltedPlaneGeometry(struct soap*, const char*, int, const resqml20__TiltedPlaneGeometry *, const char*);
SOAP_FMAC3 resqml20__TiltedPlaneGeometry * SOAP_FMAC4 soap_in_resqml20__TiltedPlaneGeometry(struct soap*, const char*, resqml20__TiltedPlaneGeometry *, const char*);
SOAP_FMAC1 resqml20__TiltedPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__TiltedPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__TiltedPlaneGeometry * soap_new_resqml20__TiltedPlaneGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__TiltedPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__TiltedPlaneGeometry * soap_new_req_resqml20__TiltedPlaneGeometry(
	struct soap *soap,
	const std::vector<resqml20__ThreePoint3d *> & Plane,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__TiltedPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__TiltedPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TiltedPlaneGeometry::Plane = Plane;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline resqml20__TiltedPlaneGeometry * soap_new_set_resqml20__TiltedPlaneGeometry(
	struct soap *soap,
	const std::vector<resqml20__ThreePoint3d *> & Plane,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__TiltedPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__TiltedPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__TiltedPlaneGeometry::Plane = Plane;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline int soap_write_resqml20__TiltedPlaneGeometry(struct soap *soap, resqml20__TiltedPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TiltedPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry ? "resqml20:TiltedPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__TiltedPlaneGeometry(struct soap *soap, const char *URL, resqml20__TiltedPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TiltedPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry ? "resqml20:TiltedPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__TiltedPlaneGeometry(struct soap *soap, const char *URL, resqml20__TiltedPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TiltedPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry ? "resqml20:TiltedPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__TiltedPlaneGeometry(struct soap *soap, const char *URL, resqml20__TiltedPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:TiltedPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry ? "resqml20:TiltedPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__TiltedPlaneGeometry * SOAP_FMAC4 soap_get_resqml20__TiltedPlaneGeometry(struct soap*, resqml20__TiltedPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml20__TiltedPlaneGeometry(struct soap *soap, resqml20__TiltedPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__TiltedPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__TiltedPlaneGeometry(struct soap *soap, const char *URL, resqml20__TiltedPlaneGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__TiltedPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__TiltedPlaneGeometry(struct soap *soap, resqml20__TiltedPlaneGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__TiltedPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParametricLineIntersections(struct soap*, const char*, int, const resqml20__ParametricLineIntersections *, const char*);
SOAP_FMAC3 resqml20__ParametricLineIntersections * SOAP_FMAC4 soap_in_resqml20__ParametricLineIntersections(struct soap*, const char*, resqml20__ParametricLineIntersections *, const char*);
SOAP_FMAC1 resqml20__ParametricLineIntersections * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineIntersections(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParametricLineIntersections * soap_new_resqml20__ParametricLineIntersections(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParametricLineIntersections(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParametricLineIntersections * soap_new_req_resqml20__ParametricLineIntersections(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *IntersectionLinePairs,
	resqml20__AbstractValueArray *ParameterValuePairs)
{
	resqml20__ParametricLineIntersections *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineIntersections(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineIntersections::Count = Count;
		_p->resqml20__ParametricLineIntersections::IntersectionLinePairs = IntersectionLinePairs;
		_p->resqml20__ParametricLineIntersections::ParameterValuePairs = ParameterValuePairs;
	}
	return _p;
}

inline resqml20__ParametricLineIntersections * soap_new_set_resqml20__ParametricLineIntersections(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *IntersectionLinePairs,
	resqml20__AbstractValueArray *ParameterValuePairs)
{
	resqml20__ParametricLineIntersections *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineIntersections(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineIntersections::Count = Count;
		_p->resqml20__ParametricLineIntersections::IntersectionLinePairs = IntersectionLinePairs;
		_p->resqml20__ParametricLineIntersections::ParameterValuePairs = ParameterValuePairs;
	}
	return _p;
}

inline int soap_write_resqml20__ParametricLineIntersections(struct soap *soap, resqml20__ParametricLineIntersections const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineIntersections", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections ? "resqml20:ParametricLineIntersections" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParametricLineIntersections(struct soap *soap, const char *URL, resqml20__ParametricLineIntersections const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineIntersections", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections ? "resqml20:ParametricLineIntersections" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParametricLineIntersections(struct soap *soap, const char *URL, resqml20__ParametricLineIntersections const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineIntersections", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections ? "resqml20:ParametricLineIntersections" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParametricLineIntersections(struct soap *soap, const char *URL, resqml20__ParametricLineIntersections const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineIntersections", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections ? "resqml20:ParametricLineIntersections" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParametricLineIntersections * SOAP_FMAC4 soap_get_resqml20__ParametricLineIntersections(struct soap*, resqml20__ParametricLineIntersections *, const char*, const char*);

inline int soap_read_resqml20__ParametricLineIntersections(struct soap *soap, resqml20__ParametricLineIntersections *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParametricLineIntersections(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParametricLineIntersections(struct soap *soap, const char *URL, resqml20__ParametricLineIntersections *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineIntersections(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParametricLineIntersections(struct soap *soap, resqml20__ParametricLineIntersections *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineIntersections(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractParametricLineArray(struct soap*, const char*, int, const resqml20__AbstractParametricLineArray *, const char*);
SOAP_FMAC3 resqml20__AbstractParametricLineArray * SOAP_FMAC4 soap_in_resqml20__AbstractParametricLineArray(struct soap*, const char*, resqml20__AbstractParametricLineArray *, const char*);
SOAP_FMAC1 resqml20__AbstractParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParametricLineArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractParametricLineArray * soap_new_resqml20__AbstractParametricLineArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractParametricLineArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractParametricLineArray * soap_new_req_resqml20__AbstractParametricLineArray(
	struct soap *soap)
{
	resqml20__AbstractParametricLineArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractParametricLineArray * soap_new_set_resqml20__AbstractParametricLineArray(
	struct soap *soap)
{
	resqml20__AbstractParametricLineArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractParametricLineArray(struct soap *soap, resqml20__AbstractParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray ? "resqml20:AbstractParametricLineArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractParametricLineArray(struct soap *soap, const char *URL, resqml20__AbstractParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray ? "resqml20:AbstractParametricLineArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractParametricLineArray(struct soap *soap, const char *URL, resqml20__AbstractParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray ? "resqml20:AbstractParametricLineArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractParametricLineArray(struct soap *soap, const char *URL, resqml20__AbstractParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray ? "resqml20:AbstractParametricLineArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractParametricLineArray * SOAP_FMAC4 soap_get_resqml20__AbstractParametricLineArray(struct soap*, resqml20__AbstractParametricLineArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractParametricLineArray(struct soap *soap, resqml20__AbstractParametricLineArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractParametricLineArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractParametricLineArray(struct soap *soap, const char *URL, resqml20__AbstractParametricLineArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractParametricLineArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractParametricLineArray(struct soap *soap, resqml20__AbstractParametricLineArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractParametricLineArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dParametricArray(struct soap*, const char*, int, const resqml20__Point3dParametricArray *, const char*);
SOAP_FMAC3 resqml20__Point3dParametricArray * SOAP_FMAC4 soap_in_resqml20__Point3dParametricArray(struct soap*, const char*, resqml20__Point3dParametricArray *, const char*);
SOAP_FMAC1 resqml20__Point3dParametricArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dParametricArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dParametricArray * soap_new_resqml20__Point3dParametricArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dParametricArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dParametricArray * soap_new_req_resqml20__Point3dParametricArray(
	struct soap *soap,
	resqml20__AbstractValueArray *Parameters,
	resqml20__AbstractParametricLineArray *ParametricLines)
{
	resqml20__Point3dParametricArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dParametricArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dParametricArray::Parameters = Parameters;
		_p->resqml20__Point3dParametricArray::ParametricLines = ParametricLines;
	}
	return _p;
}

inline resqml20__Point3dParametricArray * soap_new_set_resqml20__Point3dParametricArray(
	struct soap *soap,
	resqml20__AbstractValueArray *Parameters,
	resqml20__AbstractIntegerArray *ParametricLineIndices,
	resqml20__AbstractIntegerArray *TruncatedLineIndices,
	resqml20__AbstractParametricLineArray *ParametricLines)
{
	resqml20__Point3dParametricArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dParametricArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dParametricArray::Parameters = Parameters;
		_p->resqml20__Point3dParametricArray::ParametricLineIndices = ParametricLineIndices;
		_p->resqml20__Point3dParametricArray::TruncatedLineIndices = TruncatedLineIndices;
		_p->resqml20__Point3dParametricArray::ParametricLines = ParametricLines;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dParametricArray(struct soap *soap, resqml20__Point3dParametricArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dParametricArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray ? "resqml20:Point3dParametricArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dParametricArray(struct soap *soap, const char *URL, resqml20__Point3dParametricArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dParametricArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray ? "resqml20:Point3dParametricArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dParametricArray(struct soap *soap, const char *URL, resqml20__Point3dParametricArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dParametricArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray ? "resqml20:Point3dParametricArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dParametricArray(struct soap *soap, const char *URL, resqml20__Point3dParametricArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dParametricArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray ? "resqml20:Point3dParametricArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dParametricArray * SOAP_FMAC4 soap_get_resqml20__Point3dParametricArray(struct soap*, resqml20__Point3dParametricArray *, const char*, const char*);

inline int soap_read_resqml20__Point3dParametricArray(struct soap *soap, resqml20__Point3dParametricArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dParametricArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dParametricArray(struct soap *soap, const char *URL, resqml20__Point3dParametricArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dParametricArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dParametricArray(struct soap *soap, resqml20__Point3dParametricArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dParametricArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParametricLineArray(struct soap*, const char*, int, const resqml20__ParametricLineArray *, const char*);
SOAP_FMAC3 resqml20__ParametricLineArray * SOAP_FMAC4 soap_in_resqml20__ParametricLineArray(struct soap*, const char*, resqml20__ParametricLineArray *, const char*);
SOAP_FMAC1 resqml20__ParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParametricLineArray * soap_new_resqml20__ParametricLineArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParametricLineArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParametricLineArray * soap_new_req_resqml20__ParametricLineArray(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	resqml20__AbstractIntegerArray *LineKindIndices)
{
	resqml20__ParametricLineArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineArray::ControlPoints = ControlPoints;
		_p->resqml20__ParametricLineArray::KnotCount = KnotCount;
		_p->resqml20__ParametricLineArray::LineKindIndices = LineKindIndices;
	}
	return _p;
}

inline resqml20__ParametricLineArray * soap_new_set_resqml20__ParametricLineArray(
	struct soap *soap,
	resqml20__AbstractDoubleArray *ControlPointParameters,
	resqml20__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	resqml20__AbstractIntegerArray *LineKindIndices,
	resqml20__AbstractPoint3dArray *TangentVectors,
	resqml20__ParametricLineIntersections *ParametricLineIntersections)
{
	resqml20__ParametricLineArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineArray::ControlPointParameters = ControlPointParameters;
		_p->resqml20__ParametricLineArray::ControlPoints = ControlPoints;
		_p->resqml20__ParametricLineArray::KnotCount = KnotCount;
		_p->resqml20__ParametricLineArray::LineKindIndices = LineKindIndices;
		_p->resqml20__ParametricLineArray::TangentVectors = TangentVectors;
		_p->resqml20__ParametricLineArray::ParametricLineIntersections = ParametricLineIntersections;
	}
	return _p;
}

inline int soap_write_resqml20__ParametricLineArray(struct soap *soap, resqml20__ParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray ? "resqml20:ParametricLineArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParametricLineArray(struct soap *soap, const char *URL, resqml20__ParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray ? "resqml20:ParametricLineArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParametricLineArray(struct soap *soap, const char *URL, resqml20__ParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray ? "resqml20:ParametricLineArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParametricLineArray(struct soap *soap, const char *URL, resqml20__ParametricLineArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray ? "resqml20:ParametricLineArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParametricLineArray * SOAP_FMAC4 soap_get_resqml20__ParametricLineArray(struct soap*, resqml20__ParametricLineArray *, const char*, const char*);

inline int soap_read_resqml20__ParametricLineArray(struct soap *soap, resqml20__ParametricLineArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParametricLineArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParametricLineArray(struct soap *soap, const char *URL, resqml20__ParametricLineArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParametricLineArray(struct soap *soap, resqml20__ParametricLineArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, const char*, int, const resqml20__ParametricLineFromRepresentationGeometry *, const char*);
SOAP_FMAC3 resqml20__ParametricLineFromRepresentationGeometry * SOAP_FMAC4 soap_in_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, const char*, resqml20__ParametricLineFromRepresentationGeometry *, const char*);
SOAP_FMAC1 resqml20__ParametricLineFromRepresentationGeometry * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParametricLineFromRepresentationGeometry * soap_new_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParametricLineFromRepresentationGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParametricLineFromRepresentationGeometry * soap_new_req_resqml20__ParametricLineFromRepresentationGeometry(
	struct soap *soap,
	ULONG64 LineIndiexOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__ParametricLineFromRepresentationGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineFromRepresentationGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineFromRepresentationGeometry::LineIndiexOnSupportingRepresentation = LineIndiexOnSupportingRepresentation;
		_p->resqml20__ParametricLineFromRepresentationGeometry::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline resqml20__ParametricLineFromRepresentationGeometry * soap_new_set_resqml20__ParametricLineFromRepresentationGeometry(
	struct soap *soap,
	ULONG64 LineIndiexOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__ParametricLineFromRepresentationGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineFromRepresentationGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineFromRepresentationGeometry::LineIndiexOnSupportingRepresentation = LineIndiexOnSupportingRepresentation;
		_p->resqml20__ParametricLineFromRepresentationGeometry::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline int soap_write_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, resqml20__ParametricLineFromRepresentationGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry ? "resqml20:ParametricLineFromRepresentationGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry ? "resqml20:ParametricLineFromRepresentationGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry ? "resqml20:ParametricLineFromRepresentationGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry ? "resqml20:ParametricLineFromRepresentationGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParametricLineFromRepresentationGeometry * SOAP_FMAC4 soap_get_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, resqml20__ParametricLineFromRepresentationGeometry *, const char*, const char*);

inline int soap_read_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, resqml20__ParametricLineFromRepresentationGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParametricLineFromRepresentationGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineFromRepresentationGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParametricLineFromRepresentationGeometry(struct soap *soap, resqml20__ParametricLineFromRepresentationGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineFromRepresentationGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ThreePoint3d(struct soap*, const char*, int, const resqml20__ThreePoint3d *, const char*);
SOAP_FMAC3 resqml20__ThreePoint3d * SOAP_FMAC4 soap_in_resqml20__ThreePoint3d(struct soap*, const char*, resqml20__ThreePoint3d *, const char*);
SOAP_FMAC1 resqml20__ThreePoint3d * SOAP_FMAC2 soap_instantiate_resqml20__ThreePoint3d(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ThreePoint3d * soap_new_resqml20__ThreePoint3d(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ThreePoint3d(soap, n, NULL, NULL, NULL);
}

inline resqml20__ThreePoint3d * soap_new_req_resqml20__ThreePoint3d(
	struct soap *soap,
	const std::vector<resqml20__Point3d *> & Point3d)
{
	resqml20__ThreePoint3d *_p = gsoap_resqml2_0_1::soap_new_resqml20__ThreePoint3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ThreePoint3d::Point3d = Point3d;
	}
	return _p;
}

inline resqml20__ThreePoint3d * soap_new_set_resqml20__ThreePoint3d(
	struct soap *soap,
	const std::vector<resqml20__Point3d *> & Point3d)
{
	resqml20__ThreePoint3d *_p = gsoap_resqml2_0_1::soap_new_resqml20__ThreePoint3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ThreePoint3d::Point3d = Point3d;
	}
	return _p;
}

inline int soap_write_resqml20__ThreePoint3d(struct soap *soap, resqml20__ThreePoint3d const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ThreePoint3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d ? "resqml20:ThreePoint3d" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ThreePoint3d(struct soap *soap, const char *URL, resqml20__ThreePoint3d const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ThreePoint3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d ? "resqml20:ThreePoint3d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ThreePoint3d(struct soap *soap, const char *URL, resqml20__ThreePoint3d const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ThreePoint3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d ? "resqml20:ThreePoint3d" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ThreePoint3d(struct soap *soap, const char *URL, resqml20__ThreePoint3d const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ThreePoint3d", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d ? "resqml20:ThreePoint3d" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ThreePoint3d * SOAP_FMAC4 soap_get_resqml20__ThreePoint3d(struct soap*, resqml20__ThreePoint3d *, const char*, const char*);

inline int soap_read_resqml20__ThreePoint3d(struct soap *soap, resqml20__ThreePoint3d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ThreePoint3d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ThreePoint3d(struct soap *soap, const char *URL, resqml20__ThreePoint3d *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ThreePoint3d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ThreePoint3d(struct soap *soap, resqml20__ThreePoint3d *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ThreePoint3d(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dHdf5Array(struct soap*, const char*, int, const resqml20__Point3dHdf5Array *, const char*);
SOAP_FMAC3 resqml20__Point3dHdf5Array * SOAP_FMAC4 soap_in_resqml20__Point3dHdf5Array(struct soap*, const char*, resqml20__Point3dHdf5Array *, const char*);
SOAP_FMAC1 resqml20__Point3dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__Point3dHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dHdf5Array * soap_new_resqml20__Point3dHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dHdf5Array * soap_new_req_resqml20__Point3dHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Coordinates)
{
	resqml20__Point3dHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline resqml20__Point3dHdf5Array * soap_new_set_resqml20__Point3dHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Coordinates)
{
	resqml20__Point3dHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dHdf5Array(struct soap *soap, resqml20__Point3dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array ? "resqml20:Point3dHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dHdf5Array(struct soap *soap, const char *URL, resqml20__Point3dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array ? "resqml20:Point3dHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dHdf5Array(struct soap *soap, const char *URL, resqml20__Point3dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array ? "resqml20:Point3dHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dHdf5Array(struct soap *soap, const char *URL, resqml20__Point3dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array ? "resqml20:Point3dHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dHdf5Array * SOAP_FMAC4 soap_get_resqml20__Point3dHdf5Array(struct soap*, resqml20__Point3dHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__Point3dHdf5Array(struct soap *soap, resqml20__Point3dHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dHdf5Array(struct soap *soap, const char *URL, resqml20__Point3dHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dHdf5Array(struct soap *soap, resqml20__Point3dHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractGeometry(struct soap*, const char*, int, const resqml20__AbstractGeometry *, const char*);
SOAP_FMAC3 resqml20__AbstractGeometry * SOAP_FMAC4 soap_in_resqml20__AbstractGeometry(struct soap*, const char*, resqml20__AbstractGeometry *, const char*);
SOAP_FMAC1 resqml20__AbstractGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractGeometry * soap_new_resqml20__AbstractGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractGeometry * soap_new_req_resqml20__AbstractGeometry(
	struct soap *soap,
	eml20__DataObjectReference *LocalCrs)
{
	resqml20__AbstractGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs;
	}
	return _p;
}

inline resqml20__AbstractGeometry * soap_new_set_resqml20__AbstractGeometry(
	struct soap *soap,
	resqml20__TimeIndex *TimeIndex,
	eml20__DataObjectReference *LocalCrs)
{
	resqml20__AbstractGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractGeometry(struct soap *soap, resqml20__AbstractGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry ? "resqml20:AbstractGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractGeometry(struct soap *soap, const char *URL, resqml20__AbstractGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry ? "resqml20:AbstractGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractGeometry(struct soap *soap, const char *URL, resqml20__AbstractGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry ? "resqml20:AbstractGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractGeometry(struct soap *soap, const char *URL, resqml20__AbstractGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry ? "resqml20:AbstractGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractGeometry * SOAP_FMAC4 soap_get_resqml20__AbstractGeometry(struct soap*, resqml20__AbstractGeometry *, const char*, const char*);

inline int soap_read_resqml20__AbstractGeometry(struct soap *soap, resqml20__AbstractGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractGeometry(struct soap *soap, const char *URL, resqml20__AbstractGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractGeometry(struct soap *soap, resqml20__AbstractGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractPoint3dArray(struct soap*, const char*, int, const resqml20__AbstractPoint3dArray *, const char*);
SOAP_FMAC3 resqml20__AbstractPoint3dArray * SOAP_FMAC4 soap_in_resqml20__AbstractPoint3dArray(struct soap*, const char*, resqml20__AbstractPoint3dArray *, const char*);
SOAP_FMAC1 resqml20__AbstractPoint3dArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPoint3dArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractPoint3dArray * soap_new_resqml20__AbstractPoint3dArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractPoint3dArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractPoint3dArray * soap_new_req_resqml20__AbstractPoint3dArray(
	struct soap *soap)
{
	resqml20__AbstractPoint3dArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPoint3dArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractPoint3dArray * soap_new_set_resqml20__AbstractPoint3dArray(
	struct soap *soap)
{
	resqml20__AbstractPoint3dArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPoint3dArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractPoint3dArray(struct soap *soap, resqml20__AbstractPoint3dArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPoint3dArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray ? "resqml20:AbstractPoint3dArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractPoint3dArray(struct soap *soap, const char *URL, resqml20__AbstractPoint3dArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPoint3dArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray ? "resqml20:AbstractPoint3dArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractPoint3dArray(struct soap *soap, const char *URL, resqml20__AbstractPoint3dArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPoint3dArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray ? "resqml20:AbstractPoint3dArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractPoint3dArray(struct soap *soap, const char *URL, resqml20__AbstractPoint3dArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPoint3dArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray ? "resqml20:AbstractPoint3dArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractPoint3dArray * SOAP_FMAC4 soap_get_resqml20__AbstractPoint3dArray(struct soap*, resqml20__AbstractPoint3dArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractPoint3dArray(struct soap *soap, resqml20__AbstractPoint3dArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractPoint3dArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractPoint3dArray(struct soap *soap, const char *URL, resqml20__AbstractPoint3dArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractPoint3dArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractPoint3dArray(struct soap *soap, resqml20__AbstractPoint3dArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractPoint3dArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PointGeometry(struct soap*, const char*, int, const resqml20__PointGeometry *, const char*);
SOAP_FMAC3 resqml20__PointGeometry * SOAP_FMAC4 soap_in_resqml20__PointGeometry(struct soap*, const char*, resqml20__PointGeometry *, const char*);
SOAP_FMAC1 resqml20__PointGeometry * SOAP_FMAC2 soap_instantiate_resqml20__PointGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PointGeometry * soap_new_resqml20__PointGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PointGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__PointGeometry * soap_new_req_resqml20__PointGeometry(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *Points,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__PointGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__PointGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PointGeometry::Points = Points;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline resqml20__PointGeometry * soap_new_set_resqml20__PointGeometry(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *Points,
	resqml20__AbstractSeismicCoordinates *SeismicCoordinates,
	resqml20__TimeIndex *TimeIndex__1,
	eml20__DataObjectReference *LocalCrs__1)
{
	resqml20__PointGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__PointGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PointGeometry::Points = Points;
		_p->resqml20__PointGeometry::SeismicCoordinates = SeismicCoordinates;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__1;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__1;
	}
	return _p;
}

inline int soap_write_resqml20__PointGeometry(struct soap *soap, resqml20__PointGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry ? "resqml20:PointGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PointGeometry(struct soap *soap, const char *URL, resqml20__PointGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry ? "resqml20:PointGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PointGeometry(struct soap *soap, const char *URL, resqml20__PointGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry ? "resqml20:PointGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PointGeometry(struct soap *soap, const char *URL, resqml20__PointGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PointGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry ? "resqml20:PointGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PointGeometry * SOAP_FMAC4 soap_get_resqml20__PointGeometry(struct soap*, resqml20__PointGeometry *, const char*, const char*);

inline int soap_read_resqml20__PointGeometry(struct soap *soap, resqml20__PointGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PointGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PointGeometry(struct soap *soap, const char *URL, resqml20__PointGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PointGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PointGeometry(struct soap *soap, resqml20__PointGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PointGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__HorizontalPlaneGeometry(struct soap*, const char*, int, const resqml20__HorizontalPlaneGeometry *, const char*);
SOAP_FMAC3 resqml20__HorizontalPlaneGeometry * SOAP_FMAC4 soap_in_resqml20__HorizontalPlaneGeometry(struct soap*, const char*, resqml20__HorizontalPlaneGeometry *, const char*);
SOAP_FMAC1 resqml20__HorizontalPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__HorizontalPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__HorizontalPlaneGeometry * soap_new_resqml20__HorizontalPlaneGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__HorizontalPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__HorizontalPlaneGeometry * soap_new_req_resqml20__HorizontalPlaneGeometry(
	struct soap *soap,
	double Coordinate,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__HorizontalPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__HorizontalPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__HorizontalPlaneGeometry::Coordinate = Coordinate;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline resqml20__HorizontalPlaneGeometry * soap_new_set_resqml20__HorizontalPlaneGeometry(
	struct soap *soap,
	double Coordinate,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__HorizontalPlaneGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__HorizontalPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__HorizontalPlaneGeometry::Coordinate = Coordinate;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline int soap_write_resqml20__HorizontalPlaneGeometry(struct soap *soap, resqml20__HorizontalPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizontalPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry ? "resqml20:HorizontalPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__HorizontalPlaneGeometry(struct soap *soap, const char *URL, resqml20__HorizontalPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizontalPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry ? "resqml20:HorizontalPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__HorizontalPlaneGeometry(struct soap *soap, const char *URL, resqml20__HorizontalPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizontalPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry ? "resqml20:HorizontalPlaneGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__HorizontalPlaneGeometry(struct soap *soap, const char *URL, resqml20__HorizontalPlaneGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:HorizontalPlaneGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry ? "resqml20:HorizontalPlaneGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__HorizontalPlaneGeometry * SOAP_FMAC4 soap_get_resqml20__HorizontalPlaneGeometry(struct soap*, resqml20__HorizontalPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml20__HorizontalPlaneGeometry(struct soap *soap, resqml20__HorizontalPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__HorizontalPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__HorizontalPlaneGeometry(struct soap *soap, const char *URL, resqml20__HorizontalPlaneGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__HorizontalPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__HorizontalPlaneGeometry(struct soap *soap, resqml20__HorizontalPlaneGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__HorizontalPlaneGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dZValueArray(struct soap*, const char*, int, const resqml20__Point3dZValueArray *, const char*);
SOAP_FMAC3 resqml20__Point3dZValueArray * SOAP_FMAC4 soap_in_resqml20__Point3dZValueArray(struct soap*, const char*, resqml20__Point3dZValueArray *, const char*);
SOAP_FMAC1 resqml20__Point3dZValueArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dZValueArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dZValueArray * soap_new_resqml20__Point3dZValueArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dZValueArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dZValueArray * soap_new_req_resqml20__Point3dZValueArray(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *SupportingGeometry,
	resqml20__AbstractDoubleArray *ZValues)
{
	resqml20__Point3dZValueArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dZValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dZValueArray::SupportingGeometry = SupportingGeometry;
		_p->resqml20__Point3dZValueArray::ZValues = ZValues;
	}
	return _p;
}

inline resqml20__Point3dZValueArray * soap_new_set_resqml20__Point3dZValueArray(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *SupportingGeometry,
	resqml20__AbstractDoubleArray *ZValues)
{
	resqml20__Point3dZValueArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dZValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dZValueArray::SupportingGeometry = SupportingGeometry;
		_p->resqml20__Point3dZValueArray::ZValues = ZValues;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dZValueArray(struct soap *soap, resqml20__Point3dZValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dZValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray ? "resqml20:Point3dZValueArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dZValueArray(struct soap *soap, const char *URL, resqml20__Point3dZValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dZValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray ? "resqml20:Point3dZValueArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dZValueArray(struct soap *soap, const char *URL, resqml20__Point3dZValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dZValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray ? "resqml20:Point3dZValueArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dZValueArray(struct soap *soap, const char *URL, resqml20__Point3dZValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dZValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray ? "resqml20:Point3dZValueArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dZValueArray * SOAP_FMAC4 soap_get_resqml20__Point3dZValueArray(struct soap*, resqml20__Point3dZValueArray *, const char*, const char*);

inline int soap_read_resqml20__Point3dZValueArray(struct soap *soap, resqml20__Point3dZValueArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dZValueArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dZValueArray(struct soap *soap, const char *URL, resqml20__Point3dZValueArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dZValueArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dZValueArray(struct soap *soap, resqml20__Point3dZValueArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dZValueArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dLatticeArray(struct soap*, const char*, int, const resqml20__Point3dLatticeArray *, const char*);
SOAP_FMAC3 resqml20__Point3dLatticeArray * SOAP_FMAC4 soap_in_resqml20__Point3dLatticeArray(struct soap*, const char*, resqml20__Point3dLatticeArray *, const char*);
SOAP_FMAC1 resqml20__Point3dLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dLatticeArray * soap_new_resqml20__Point3dLatticeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dLatticeArray * soap_new_req_resqml20__Point3dLatticeArray(
	struct soap *soap,
	resqml20__Point3d *Origin,
	const std::vector<resqml20__Point3dOffset *> & Offset)
{
	resqml20__Point3dLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dLatticeArray::Origin = Origin;
		_p->resqml20__Point3dLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml20__Point3dLatticeArray * soap_new_set_resqml20__Point3dLatticeArray(
	struct soap *soap,
	bool *AllDimensionsAreOrthogonal,
	resqml20__Point3d *Origin,
	const std::vector<resqml20__Point3dOffset *> & Offset)
{
	resqml20__Point3dLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dLatticeArray::AllDimensionsAreOrthogonal = AllDimensionsAreOrthogonal;
		_p->resqml20__Point3dLatticeArray::Origin = Origin;
		_p->resqml20__Point3dLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dLatticeArray(struct soap *soap, resqml20__Point3dLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray ? "resqml20:Point3dLatticeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray ? "resqml20:Point3dLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray ? "resqml20:Point3dLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray ? "resqml20:Point3dLatticeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dLatticeArray * SOAP_FMAC4 soap_get_resqml20__Point3dLatticeArray(struct soap*, resqml20__Point3dLatticeArray *, const char*, const char*);

inline int soap_read_resqml20__Point3dLatticeArray(struct soap *soap, resqml20__Point3dLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dLatticeArray(struct soap *soap, const char *URL, resqml20__Point3dLatticeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dLatticeArray(struct soap *soap, resqml20__Point3dLatticeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, const char*, int, const resqml20__ParametricLineFromRepresentationLatticeArray *, const char*);
SOAP_FMAC3 resqml20__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC4 soap_in_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, const char*, resqml20__ParametricLineFromRepresentationLatticeArray *, const char*);
SOAP_FMAC1 resqml20__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParametricLineFromRepresentationLatticeArray * soap_new_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParametricLineFromRepresentationLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParametricLineFromRepresentationLatticeArray * soap_new_req_resqml20__ParametricLineFromRepresentationLatticeArray(
	struct soap *soap,
	resqml20__IntegerLatticeArray *LineIndicesOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation)
{
	resqml20__ParametricLineFromRepresentationLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineFromRepresentationLatticeArray::LineIndicesOnSupportingRepresentation = LineIndicesOnSupportingRepresentation;
		_p->resqml20__ParametricLineFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline resqml20__ParametricLineFromRepresentationLatticeArray * soap_new_set_resqml20__ParametricLineFromRepresentationLatticeArray(
	struct soap *soap,
	resqml20__IntegerLatticeArray *LineIndicesOnSupportingRepresentation,
	eml20__DataObjectReference *SupportingRepresentation)
{
	resqml20__ParametricLineFromRepresentationLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineFromRepresentationLatticeArray::LineIndicesOnSupportingRepresentation = LineIndicesOnSupportingRepresentation;
		_p->resqml20__ParametricLineFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline int soap_write_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, resqml20__ParametricLineFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray ? "resqml20:ParametricLineFromRepresentationLatticeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray ? "resqml20:ParametricLineFromRepresentationLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray ? "resqml20:ParametricLineFromRepresentationLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineFromRepresentationLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray ? "resqml20:ParametricLineFromRepresentationLatticeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC4 soap_get_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, resqml20__ParametricLineFromRepresentationLatticeArray *, const char*, const char*);

inline int soap_read_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, resqml20__ParametricLineFromRepresentationLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParametricLineFromRepresentationLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, const char *URL, resqml20__ParametricLineFromRepresentationLatticeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineFromRepresentationLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap *soap, resqml20__ParametricLineFromRepresentationLatticeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineFromRepresentationLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__ParametricLineGeometry(struct soap*, const char*, int, const resqml20__ParametricLineGeometry *, const char*);
SOAP_FMAC3 resqml20__ParametricLineGeometry * SOAP_FMAC4 soap_in_resqml20__ParametricLineGeometry(struct soap*, const char*, resqml20__ParametricLineGeometry *, const char*);
SOAP_FMAC1 resqml20__ParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__ParametricLineGeometry * soap_new_resqml20__ParametricLineGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__ParametricLineGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml20__ParametricLineGeometry * soap_new_req_resqml20__ParametricLineGeometry(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	LONG64 LineKindIndex,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__ParametricLineGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineGeometry::ControlPoints = ControlPoints;
		_p->resqml20__ParametricLineGeometry::KnotCount = KnotCount;
		_p->resqml20__ParametricLineGeometry::LineKindIndex = LineKindIndex;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline resqml20__ParametricLineGeometry * soap_new_set_resqml20__ParametricLineGeometry(
	struct soap *soap,
	resqml20__AbstractDoubleArray *ControlPointParameters,
	resqml20__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	LONG64 LineKindIndex,
	resqml20__AbstractPoint3dArray *TangentVectors,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *LocalCrs__2)
{
	resqml20__ParametricLineGeometry *_p = gsoap_resqml2_0_1::soap_new_resqml20__ParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__ParametricLineGeometry::ControlPointParameters = ControlPointParameters;
		_p->resqml20__ParametricLineGeometry::ControlPoints = ControlPoints;
		_p->resqml20__ParametricLineGeometry::KnotCount = KnotCount;
		_p->resqml20__ParametricLineGeometry::LineKindIndex = LineKindIndex;
		_p->resqml20__ParametricLineGeometry::TangentVectors = TangentVectors;
		_p->resqml20__AbstractGeometry::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractGeometry::LocalCrs = LocalCrs__2;
	}
	return _p;
}

inline int soap_write_resqml20__ParametricLineGeometry(struct soap *soap, resqml20__ParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry ? "resqml20:ParametricLineGeometry" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__ParametricLineGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry ? "resqml20:ParametricLineGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__ParametricLineGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry ? "resqml20:ParametricLineGeometry" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__ParametricLineGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineGeometry const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:ParametricLineGeometry", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry ? "resqml20:ParametricLineGeometry" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__ParametricLineGeometry * SOAP_FMAC4 soap_get_resqml20__ParametricLineGeometry(struct soap*, resqml20__ParametricLineGeometry *, const char*, const char*);

inline int soap_read_resqml20__ParametricLineGeometry(struct soap *soap, resqml20__ParametricLineGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__ParametricLineGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__ParametricLineGeometry(struct soap *soap, const char *URL, resqml20__ParametricLineGeometry *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__ParametricLineGeometry(struct soap *soap, resqml20__ParametricLineGeometry *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__ParametricLineGeometry(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point2dHdf5Array(struct soap*, const char*, int, const resqml20__Point2dHdf5Array *, const char*);
SOAP_FMAC3 resqml20__Point2dHdf5Array * SOAP_FMAC4 soap_in_resqml20__Point2dHdf5Array(struct soap*, const char*, resqml20__Point2dHdf5Array *, const char*);
SOAP_FMAC1 resqml20__Point2dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__Point2dHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point2dHdf5Array * soap_new_resqml20__Point2dHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point2dHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point2dHdf5Array * soap_new_req_resqml20__Point2dHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Coordinates)
{
	resqml20__Point2dHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point2dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point2dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline resqml20__Point2dHdf5Array * soap_new_set_resqml20__Point2dHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Coordinates)
{
	resqml20__Point2dHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point2dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point2dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline int soap_write_resqml20__Point2dHdf5Array(struct soap *soap, resqml20__Point2dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point2dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array ? "resqml20:Point2dHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point2dHdf5Array(struct soap *soap, const char *URL, resqml20__Point2dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point2dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array ? "resqml20:Point2dHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point2dHdf5Array(struct soap *soap, const char *URL, resqml20__Point2dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point2dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array ? "resqml20:Point2dHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point2dHdf5Array(struct soap *soap, const char *URL, resqml20__Point2dHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point2dHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array ? "resqml20:Point2dHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point2dHdf5Array * SOAP_FMAC4 soap_get_resqml20__Point2dHdf5Array(struct soap*, resqml20__Point2dHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__Point2dHdf5Array(struct soap *soap, resqml20__Point2dHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point2dHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point2dHdf5Array(struct soap *soap, const char *URL, resqml20__Point2dHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point2dHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point2dHdf5Array(struct soap *soap, resqml20__Point2dHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point2dHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__Point3dOffset(struct soap*, const char*, int, const resqml20__Point3dOffset *, const char*);
SOAP_FMAC3 resqml20__Point3dOffset * SOAP_FMAC4 soap_in_resqml20__Point3dOffset(struct soap*, const char*, resqml20__Point3dOffset *, const char*);
SOAP_FMAC1 resqml20__Point3dOffset * SOAP_FMAC2 soap_instantiate_resqml20__Point3dOffset(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__Point3dOffset * soap_new_resqml20__Point3dOffset(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__Point3dOffset(soap, n, NULL, NULL, NULL);
}

inline resqml20__Point3dOffset * soap_new_req_resqml20__Point3dOffset(
	struct soap *soap,
	resqml20__Point3d *Offset,
	resqml20__AbstractDoubleArray *Spacing)
{
	resqml20__Point3dOffset *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dOffset::Offset = Offset;
		_p->resqml20__Point3dOffset::Spacing = Spacing;
	}
	return _p;
}

inline resqml20__Point3dOffset * soap_new_set_resqml20__Point3dOffset(
	struct soap *soap,
	resqml20__Point3d *Offset,
	resqml20__AbstractDoubleArray *Spacing)
{
	resqml20__Point3dOffset *_p = gsoap_resqml2_0_1::soap_new_resqml20__Point3dOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__Point3dOffset::Offset = Offset;
		_p->resqml20__Point3dOffset::Spacing = Spacing;
	}
	return _p;
}

inline int soap_write_resqml20__Point3dOffset(struct soap *soap, resqml20__Point3dOffset const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dOffset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset ? "resqml20:Point3dOffset" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__Point3dOffset(struct soap *soap, const char *URL, resqml20__Point3dOffset const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dOffset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset ? "resqml20:Point3dOffset" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__Point3dOffset(struct soap *soap, const char *URL, resqml20__Point3dOffset const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dOffset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset ? "resqml20:Point3dOffset" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__Point3dOffset(struct soap *soap, const char *URL, resqml20__Point3dOffset const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:Point3dOffset", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset ? "resqml20:Point3dOffset" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__Point3dOffset * SOAP_FMAC4 soap_get_resqml20__Point3dOffset(struct soap*, resqml20__Point3dOffset *, const char*, const char*);

inline int soap_read_resqml20__Point3dOffset(struct soap *soap, resqml20__Point3dOffset *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__Point3dOffset(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__Point3dOffset(struct soap *soap, const char *URL, resqml20__Point3dOffset *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__Point3dOffset(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__Point3dOffset(struct soap *soap, resqml20__Point3dOffset *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__Point3dOffset(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, const char*, int, const resqml20__BooleanArrayFromDiscretePropertyArray *, const char*);
SOAP_FMAC3 resqml20__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC4 soap_in_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, const char*, resqml20__BooleanArrayFromDiscretePropertyArray *, const char*);
SOAP_FMAC1 resqml20__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__BooleanArrayFromDiscretePropertyArray * soap_new_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__BooleanArrayFromDiscretePropertyArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__BooleanArrayFromDiscretePropertyArray * soap_new_req_resqml20__BooleanArrayFromDiscretePropertyArray(
	struct soap *soap,
	LONG64 Value,
	eml20__DataObjectReference *Property)
{
	resqml20__BooleanArrayFromDiscretePropertyArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanArrayFromDiscretePropertyArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanArrayFromDiscretePropertyArray::Value = Value;
		_p->resqml20__BooleanArrayFromDiscretePropertyArray::Property = Property;
	}
	return _p;
}

inline resqml20__BooleanArrayFromDiscretePropertyArray * soap_new_set_resqml20__BooleanArrayFromDiscretePropertyArray(
	struct soap *soap,
	LONG64 Value,
	eml20__DataObjectReference *Property)
{
	resqml20__BooleanArrayFromDiscretePropertyArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanArrayFromDiscretePropertyArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanArrayFromDiscretePropertyArray::Value = Value;
		_p->resqml20__BooleanArrayFromDiscretePropertyArray::Property = Property;
	}
	return _p;
}

inline int soap_write_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, resqml20__BooleanArrayFromDiscretePropertyArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromDiscretePropertyArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray ? "resqml20:BooleanArrayFromDiscretePropertyArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromDiscretePropertyArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromDiscretePropertyArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray ? "resqml20:BooleanArrayFromDiscretePropertyArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromDiscretePropertyArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromDiscretePropertyArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray ? "resqml20:BooleanArrayFromDiscretePropertyArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromDiscretePropertyArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromDiscretePropertyArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray ? "resqml20:BooleanArrayFromDiscretePropertyArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC4 soap_get_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, resqml20__BooleanArrayFromDiscretePropertyArray *, const char*, const char*);

inline int soap_read_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, resqml20__BooleanArrayFromDiscretePropertyArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BooleanArrayFromDiscretePropertyArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromDiscretePropertyArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BooleanArrayFromDiscretePropertyArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap *soap, resqml20__BooleanArrayFromDiscretePropertyArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BooleanArrayFromDiscretePropertyArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DoubleLookup(struct soap*, const char*, int, const resqml20__DoubleLookup *, const char*);
SOAP_FMAC3 resqml20__DoubleLookup * SOAP_FMAC4 soap_in_resqml20__DoubleLookup(struct soap*, const char*, resqml20__DoubleLookup *, const char*);
SOAP_FMAC1 resqml20__DoubleLookup * SOAP_FMAC2 soap_instantiate_resqml20__DoubleLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__DoubleLookup * soap_new_resqml20__DoubleLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__DoubleLookup(soap, n, NULL, NULL, NULL);
}

inline resqml20__DoubleLookup * soap_new_req_resqml20__DoubleLookup(
	struct soap *soap,
	double Key,
	double Value)
{
	resqml20__DoubleLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleLookup::Key = Key;
		_p->resqml20__DoubleLookup::Value = Value;
	}
	return _p;
}

inline resqml20__DoubleLookup * soap_new_set_resqml20__DoubleLookup(
	struct soap *soap,
	double Key,
	double Value)
{
	resqml20__DoubleLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleLookup::Key = Key;
		_p->resqml20__DoubleLookup::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml20__DoubleLookup(struct soap *soap, resqml20__DoubleLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup ? "resqml20:DoubleLookup" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DoubleLookup(struct soap *soap, const char *URL, resqml20__DoubleLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup ? "resqml20:DoubleLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DoubleLookup(struct soap *soap, const char *URL, resqml20__DoubleLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup ? "resqml20:DoubleLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DoubleLookup(struct soap *soap, const char *URL, resqml20__DoubleLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup ? "resqml20:DoubleLookup" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__DoubleLookup * SOAP_FMAC4 soap_get_resqml20__DoubleLookup(struct soap*, resqml20__DoubleLookup *, const char*, const char*);

inline int soap_read_resqml20__DoubleLookup(struct soap *soap, resqml20__DoubleLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DoubleLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DoubleLookup(struct soap *soap, const char *URL, resqml20__DoubleLookup *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DoubleLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DoubleLookup(struct soap *soap, resqml20__DoubleLookup *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DoubleLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__LocalPropertyKind(struct soap*, const char*, int, const resqml20__LocalPropertyKind *, const char*);
SOAP_FMAC3 resqml20__LocalPropertyKind * SOAP_FMAC4 soap_in_resqml20__LocalPropertyKind(struct soap*, const char*, resqml20__LocalPropertyKind *, const char*);
SOAP_FMAC1 resqml20__LocalPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__LocalPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__LocalPropertyKind * soap_new_resqml20__LocalPropertyKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__LocalPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml20__LocalPropertyKind * soap_new_req_resqml20__LocalPropertyKind(
	struct soap *soap,
	eml20__DataObjectReference *LocalPropertyKind)
{
	resqml20__LocalPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__LocalPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__LocalPropertyKind::LocalPropertyKind = LocalPropertyKind;
	}
	return _p;
}

inline resqml20__LocalPropertyKind * soap_new_set_resqml20__LocalPropertyKind(
	struct soap *soap,
	eml20__DataObjectReference *LocalPropertyKind)
{
	resqml20__LocalPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__LocalPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__LocalPropertyKind::LocalPropertyKind = LocalPropertyKind;
	}
	return _p;
}

inline int soap_write_resqml20__LocalPropertyKind(struct soap *soap, resqml20__LocalPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind ? "resqml20:LocalPropertyKind" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__LocalPropertyKind(struct soap *soap, const char *URL, resqml20__LocalPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind ? "resqml20:LocalPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__LocalPropertyKind(struct soap *soap, const char *URL, resqml20__LocalPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind ? "resqml20:LocalPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__LocalPropertyKind(struct soap *soap, const char *URL, resqml20__LocalPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:LocalPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind ? "resqml20:LocalPropertyKind" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__LocalPropertyKind * SOAP_FMAC4 soap_get_resqml20__LocalPropertyKind(struct soap*, resqml20__LocalPropertyKind *, const char*, const char*);

inline int soap_read_resqml20__LocalPropertyKind(struct soap *soap, resqml20__LocalPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__LocalPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__LocalPropertyKind(struct soap *soap, const char *URL, resqml20__LocalPropertyKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__LocalPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__LocalPropertyKind(struct soap *soap, resqml20__LocalPropertyKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__LocalPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractValuesProperty(struct soap*, const char*, int, const resqml20__AbstractValuesProperty *, const char*);
SOAP_FMAC3 resqml20__AbstractValuesProperty * SOAP_FMAC4 soap_in_resqml20__AbstractValuesProperty(struct soap*, const char*, resqml20__AbstractValuesProperty *, const char*);
SOAP_FMAC1 resqml20__AbstractValuesProperty * SOAP_FMAC2 soap_instantiate_resqml20__AbstractValuesProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractValuesProperty * soap_new_resqml20__AbstractValuesProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractValuesProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractValuesProperty * soap_new_req_resqml20__AbstractValuesProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues,
	ULONG64 Count__1,
	enum resqml20__IndexableElements IndexableElement__1,
	eml20__DataObjectReference *SupportingRepresentation__1,
	resqml20__AbstractPropertyKind *PropertyKind__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractValuesProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractValuesProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues;
		_p->resqml20__AbstractProperty::Count = Count__1;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__1;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__1;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__AbstractValuesProperty * soap_new_set_resqml20__AbstractValuesProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues,
	const std::vector<resqml20__PropertyKindFacet *> & Facet,
	ULONG64 Count__1,
	enum resqml20__IndexableElements IndexableElement__1,
	ULONG64 *RealizationIndex__1,
	ULONG64 *TimeStep__1,
	resqml20__TimeIndex *TimeIndex__1,
	eml20__DataObjectReference *SupportingRepresentation__1,
	eml20__DataObjectReference *LocalCrs__1,
	resqml20__AbstractPropertyKind *PropertyKind__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__AbstractValuesProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractValuesProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues;
		_p->resqml20__AbstractValuesProperty::Facet = Facet;
		_p->resqml20__AbstractProperty::Count = Count__1;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__1;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__1;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__1;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__1;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__1;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__1;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractValuesProperty(struct soap *soap, resqml20__AbstractValuesProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValuesProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty ? "resqml20:AbstractValuesProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractValuesProperty(struct soap *soap, const char *URL, resqml20__AbstractValuesProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValuesProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty ? "resqml20:AbstractValuesProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractValuesProperty(struct soap *soap, const char *URL, resqml20__AbstractValuesProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValuesProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty ? "resqml20:AbstractValuesProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractValuesProperty(struct soap *soap, const char *URL, resqml20__AbstractValuesProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValuesProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty ? "resqml20:AbstractValuesProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractValuesProperty * SOAP_FMAC4 soap_get_resqml20__AbstractValuesProperty(struct soap*, resqml20__AbstractValuesProperty *, const char*, const char*);

inline int soap_read_resqml20__AbstractValuesProperty(struct soap *soap, resqml20__AbstractValuesProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractValuesProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractValuesProperty(struct soap *soap, const char *URL, resqml20__AbstractValuesProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractValuesProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractValuesProperty(struct soap *soap, resqml20__AbstractValuesProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractValuesProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StandardPropertyKind(struct soap*, const char*, int, const resqml20__StandardPropertyKind *, const char*);
SOAP_FMAC3 resqml20__StandardPropertyKind * SOAP_FMAC4 soap_in_resqml20__StandardPropertyKind(struct soap*, const char*, resqml20__StandardPropertyKind *, const char*);
SOAP_FMAC1 resqml20__StandardPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__StandardPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StandardPropertyKind * soap_new_resqml20__StandardPropertyKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StandardPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml20__StandardPropertyKind * soap_new_req_resqml20__StandardPropertyKind(
	struct soap *soap,
	enum resqml20__ResqmlPropertyKind Kind)
{
	resqml20__StandardPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__StandardPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StandardPropertyKind::Kind = Kind;
	}
	return _p;
}

inline resqml20__StandardPropertyKind * soap_new_set_resqml20__StandardPropertyKind(
	struct soap *soap,
	enum resqml20__ResqmlPropertyKind Kind)
{
	resqml20__StandardPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__StandardPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StandardPropertyKind::Kind = Kind;
	}
	return _p;
}

inline int soap_write_resqml20__StandardPropertyKind(struct soap *soap, resqml20__StandardPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StandardPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind ? "resqml20:StandardPropertyKind" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StandardPropertyKind(struct soap *soap, const char *URL, resqml20__StandardPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StandardPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind ? "resqml20:StandardPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StandardPropertyKind(struct soap *soap, const char *URL, resqml20__StandardPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StandardPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind ? "resqml20:StandardPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StandardPropertyKind(struct soap *soap, const char *URL, resqml20__StandardPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StandardPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind ? "resqml20:StandardPropertyKind" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StandardPropertyKind * SOAP_FMAC4 soap_get_resqml20__StandardPropertyKind(struct soap*, resqml20__StandardPropertyKind *, const char*, const char*);

inline int soap_read_resqml20__StandardPropertyKind(struct soap *soap, resqml20__StandardPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StandardPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StandardPropertyKind(struct soap *soap, const char *URL, resqml20__StandardPropertyKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StandardPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StandardPropertyKind(struct soap *soap, resqml20__StandardPropertyKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StandardPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PropertyValuesPatch(struct soap*, const char*, int, const resqml20__PropertyValuesPatch *, const char*);
SOAP_FMAC3 resqml20__PropertyValuesPatch * SOAP_FMAC4 soap_in_resqml20__PropertyValuesPatch(struct soap*, const char*, resqml20__PropertyValuesPatch *, const char*);
SOAP_FMAC1 resqml20__PropertyValuesPatch * SOAP_FMAC2 soap_instantiate_resqml20__PropertyValuesPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PropertyValuesPatch * soap_new_resqml20__PropertyValuesPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PropertyValuesPatch(soap, n, NULL, NULL, NULL);
}

inline resqml20__PropertyValuesPatch * soap_new_req_resqml20__PropertyValuesPatch(
	struct soap *soap,
	ULONG64 patchUid,
	resqml20__AbstractValueArray *values)
{
	resqml20__PropertyValuesPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__PropertyValuesPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PropertyValuesPatch::patchUid = patchUid;
		_p->resqml20__PropertyValuesPatch::values = values;
	}
	return _p;
}

inline resqml20__PropertyValuesPatch * soap_new_set_resqml20__PropertyValuesPatch(
	struct soap *soap,
	ULONG64 patchUid,
	resqml20__AbstractValueArray *values)
{
	resqml20__PropertyValuesPatch *_p = gsoap_resqml2_0_1::soap_new_resqml20__PropertyValuesPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PropertyValuesPatch::patchUid = patchUid;
		_p->resqml20__PropertyValuesPatch::values = values;
	}
	return _p;
}

inline int soap_write_resqml20__PropertyValuesPatch(struct soap *soap, resqml20__PropertyValuesPatch const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyValuesPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch ? "resqml20:PropertyValuesPatch" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PropertyValuesPatch(struct soap *soap, const char *URL, resqml20__PropertyValuesPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyValuesPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch ? "resqml20:PropertyValuesPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PropertyValuesPatch(struct soap *soap, const char *URL, resqml20__PropertyValuesPatch const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyValuesPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch ? "resqml20:PropertyValuesPatch" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PropertyValuesPatch(struct soap *soap, const char *URL, resqml20__PropertyValuesPatch const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyValuesPatch", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch ? "resqml20:PropertyValuesPatch" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PropertyValuesPatch * SOAP_FMAC4 soap_get_resqml20__PropertyValuesPatch(struct soap*, resqml20__PropertyValuesPatch *, const char*, const char*);

inline int soap_read_resqml20__PropertyValuesPatch(struct soap *soap, resqml20__PropertyValuesPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PropertyValuesPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PropertyValuesPatch(struct soap *soap, const char *URL, resqml20__PropertyValuesPatch *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PropertyValuesPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PropertyValuesPatch(struct soap *soap, resqml20__PropertyValuesPatch *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PropertyValuesPatch(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractBooleanArray(struct soap*, const char*, int, const resqml20__AbstractBooleanArray *, const char*);
SOAP_FMAC3 resqml20__AbstractBooleanArray * SOAP_FMAC4 soap_in_resqml20__AbstractBooleanArray(struct soap*, const char*, resqml20__AbstractBooleanArray *, const char*);
SOAP_FMAC1 resqml20__AbstractBooleanArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractBooleanArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractBooleanArray * soap_new_resqml20__AbstractBooleanArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractBooleanArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractBooleanArray * soap_new_req_resqml20__AbstractBooleanArray(
	struct soap *soap)
{
	resqml20__AbstractBooleanArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractBooleanArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractBooleanArray * soap_new_set_resqml20__AbstractBooleanArray(
	struct soap *soap)
{
	resqml20__AbstractBooleanArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractBooleanArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractBooleanArray(struct soap *soap, resqml20__AbstractBooleanArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractBooleanArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray ? "resqml20:AbstractBooleanArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractBooleanArray(struct soap *soap, const char *URL, resqml20__AbstractBooleanArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractBooleanArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray ? "resqml20:AbstractBooleanArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractBooleanArray(struct soap *soap, const char *URL, resqml20__AbstractBooleanArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractBooleanArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray ? "resqml20:AbstractBooleanArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractBooleanArray(struct soap *soap, const char *URL, resqml20__AbstractBooleanArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractBooleanArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray ? "resqml20:AbstractBooleanArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractBooleanArray * SOAP_FMAC4 soap_get_resqml20__AbstractBooleanArray(struct soap*, resqml20__AbstractBooleanArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractBooleanArray(struct soap *soap, resqml20__AbstractBooleanArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractBooleanArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractBooleanArray(struct soap *soap, const char *URL, resqml20__AbstractBooleanArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractBooleanArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractBooleanArray(struct soap *soap, resqml20__AbstractBooleanArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractBooleanArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractIntegerArray(struct soap*, const char*, int, const resqml20__AbstractIntegerArray *, const char*);
SOAP_FMAC3 resqml20__AbstractIntegerArray * SOAP_FMAC4 soap_in_resqml20__AbstractIntegerArray(struct soap*, const char*, resqml20__AbstractIntegerArray *, const char*);
SOAP_FMAC1 resqml20__AbstractIntegerArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractIntegerArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractIntegerArray * soap_new_resqml20__AbstractIntegerArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractIntegerArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractIntegerArray * soap_new_req_resqml20__AbstractIntegerArray(
	struct soap *soap)
{
	resqml20__AbstractIntegerArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractIntegerArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractIntegerArray * soap_new_set_resqml20__AbstractIntegerArray(
	struct soap *soap)
{
	resqml20__AbstractIntegerArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractIntegerArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractIntegerArray(struct soap *soap, resqml20__AbstractIntegerArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractIntegerArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray ? "resqml20:AbstractIntegerArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractIntegerArray(struct soap *soap, const char *URL, resqml20__AbstractIntegerArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractIntegerArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray ? "resqml20:AbstractIntegerArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractIntegerArray(struct soap *soap, const char *URL, resqml20__AbstractIntegerArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractIntegerArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray ? "resqml20:AbstractIntegerArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractIntegerArray(struct soap *soap, const char *URL, resqml20__AbstractIntegerArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractIntegerArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray ? "resqml20:AbstractIntegerArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractIntegerArray * SOAP_FMAC4 soap_get_resqml20__AbstractIntegerArray(struct soap*, resqml20__AbstractIntegerArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractIntegerArray(struct soap *soap, resqml20__AbstractIntegerArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractIntegerArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractIntegerArray(struct soap *soap, const char *URL, resqml20__AbstractIntegerArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractIntegerArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractIntegerArray(struct soap *soap, resqml20__AbstractIntegerArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractIntegerArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractProperty(struct soap*, const char*, int, const resqml20__AbstractProperty *, const char*);
SOAP_FMAC3 resqml20__AbstractProperty * SOAP_FMAC4 soap_in_resqml20__AbstractProperty(struct soap*, const char*, resqml20__AbstractProperty *, const char*);
SOAP_FMAC1 resqml20__AbstractProperty * SOAP_FMAC2 soap_instantiate_resqml20__AbstractProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractProperty * soap_new_resqml20__AbstractProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractProperty * soap_new_req_resqml20__AbstractProperty(
	struct soap *soap,
	ULONG64 Count,
	enum resqml20__IndexableElements IndexableElement,
	eml20__DataObjectReference *SupportingRepresentation,
	resqml20__AbstractPropertyKind *PropertyKind,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractProperty::Count = Count;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractProperty * soap_new_set_resqml20__AbstractProperty(
	struct soap *soap,
	ULONG64 Count,
	enum resqml20__IndexableElements IndexableElement,
	ULONG64 *RealizationIndex,
	ULONG64 *TimeStep,
	resqml20__TimeIndex *TimeIndex,
	eml20__DataObjectReference *SupportingRepresentation,
	eml20__DataObjectReference *LocalCrs,
	resqml20__AbstractPropertyKind *PropertyKind,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractProperty::Count = Count;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractProperty(struct soap *soap, resqml20__AbstractProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty ? "resqml20:AbstractProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractProperty(struct soap *soap, const char *URL, resqml20__AbstractProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty ? "resqml20:AbstractProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractProperty(struct soap *soap, const char *URL, resqml20__AbstractProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty ? "resqml20:AbstractProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractProperty(struct soap *soap, const char *URL, resqml20__AbstractProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty ? "resqml20:AbstractProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractProperty * SOAP_FMAC4 soap_get_resqml20__AbstractProperty(struct soap*, resqml20__AbstractProperty *, const char*, const char*);

inline int soap_read_resqml20__AbstractProperty(struct soap *soap, resqml20__AbstractProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractProperty(struct soap *soap, const char *URL, resqml20__AbstractProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractProperty(struct soap *soap, resqml20__AbstractProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPropertySet(struct soap*, const char*, int, const resqml20__obj_USCOREPropertySet *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPropertySet * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPropertySet(struct soap*, const char*, resqml20__obj_USCOREPropertySet *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPropertySet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPropertySet(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPropertySet * soap_new_resqml20__obj_USCOREPropertySet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPropertySet(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPropertySet * soap_new_req_resqml20__obj_USCOREPropertySet(
	struct soap *soap,
	enum resqml20__TimeSetKind TimeSetKind,
	bool HasSinglePropertyKind,
	bool HasMultipleRealizations,
	const std::vector<eml20__DataObjectReference *> & Properties,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREPropertySet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPropertySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPropertySet::TimeSetKind = TimeSetKind;
		_p->resqml20__obj_USCOREPropertySet::HasSinglePropertyKind = HasSinglePropertyKind;
		_p->resqml20__obj_USCOREPropertySet::HasMultipleRealizations = HasMultipleRealizations;
		_p->resqml20__obj_USCOREPropertySet::Properties = Properties;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREPropertySet * soap_new_set_resqml20__obj_USCOREPropertySet(
	struct soap *soap,
	enum resqml20__TimeSetKind TimeSetKind,
	bool HasSinglePropertyKind,
	bool HasMultipleRealizations,
	const std::vector<eml20__DataObjectReference *> & ParentSet,
	const std::vector<eml20__DataObjectReference *> & Properties,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREPropertySet *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPropertySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPropertySet::TimeSetKind = TimeSetKind;
		_p->resqml20__obj_USCOREPropertySet::HasSinglePropertyKind = HasSinglePropertyKind;
		_p->resqml20__obj_USCOREPropertySet::HasMultipleRealizations = HasMultipleRealizations;
		_p->resqml20__obj_USCOREPropertySet::ParentSet = ParentSet;
		_p->resqml20__obj_USCOREPropertySet::Properties = Properties;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPropertySet(struct soap *soap, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet ? "resqml20:obj_PropertySet" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet ? "resqml20:obj_PropertySet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet ? "resqml20:obj_PropertySet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertySet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet ? "resqml20:obj_PropertySet" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPropertySet * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPropertySet(struct soap*, resqml20__obj_USCOREPropertySet *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPropertySet(struct soap *soap, resqml20__obj_USCOREPropertySet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPropertySet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPropertySet(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertySet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPropertySet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPropertySet(struct soap *soap, resqml20__obj_USCOREPropertySet *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPropertySet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerRangeArray(struct soap*, const char*, int, const resqml20__IntegerRangeArray *, const char*);
SOAP_FMAC3 resqml20__IntegerRangeArray * SOAP_FMAC4 soap_in_resqml20__IntegerRangeArray(struct soap*, const char*, resqml20__IntegerRangeArray *, const char*);
SOAP_FMAC1 resqml20__IntegerRangeArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerRangeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerRangeArray * soap_new_resqml20__IntegerRangeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerRangeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerRangeArray * soap_new_req_resqml20__IntegerRangeArray(
	struct soap *soap,
	ULONG64 Count,
	LONG64 Value)
{
	resqml20__IntegerRangeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerRangeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerRangeArray::Count = Count;
		_p->resqml20__IntegerRangeArray::Value = Value;
	}
	return _p;
}

inline resqml20__IntegerRangeArray * soap_new_set_resqml20__IntegerRangeArray(
	struct soap *soap,
	ULONG64 Count,
	LONG64 Value)
{
	resqml20__IntegerRangeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerRangeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerRangeArray::Count = Count;
		_p->resqml20__IntegerRangeArray::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerRangeArray(struct soap *soap, resqml20__IntegerRangeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerRangeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray ? "resqml20:IntegerRangeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerRangeArray(struct soap *soap, const char *URL, resqml20__IntegerRangeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerRangeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray ? "resqml20:IntegerRangeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerRangeArray(struct soap *soap, const char *URL, resqml20__IntegerRangeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerRangeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray ? "resqml20:IntegerRangeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerRangeArray(struct soap *soap, const char *URL, resqml20__IntegerRangeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerRangeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray ? "resqml20:IntegerRangeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerRangeArray * SOAP_FMAC4 soap_get_resqml20__IntegerRangeArray(struct soap*, resqml20__IntegerRangeArray *, const char*, const char*);

inline int soap_read_resqml20__IntegerRangeArray(struct soap *soap, resqml20__IntegerRangeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerRangeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerRangeArray(struct soap *soap, const char *URL, resqml20__IntegerRangeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerRangeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerRangeArray(struct soap *soap, resqml20__IntegerRangeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerRangeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractPropertyLookup(struct soap*, const char*, int, const resqml20__AbstractPropertyLookup *, const char*);
SOAP_FMAC3 resqml20__AbstractPropertyLookup * SOAP_FMAC4 soap_in_resqml20__AbstractPropertyLookup(struct soap*, const char*, resqml20__AbstractPropertyLookup *, const char*);
SOAP_FMAC1 resqml20__AbstractPropertyLookup * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPropertyLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractPropertyLookup * soap_new_resqml20__AbstractPropertyLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractPropertyLookup(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractPropertyLookup * soap_new_req_resqml20__AbstractPropertyLookup(
	struct soap *soap,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractPropertyLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPropertyLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__AbstractPropertyLookup * soap_new_set_resqml20__AbstractPropertyLookup(
	struct soap *soap,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__AbstractPropertyLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPropertyLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__AbstractPropertyLookup(struct soap *soap, resqml20__AbstractPropertyLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup ? "resqml20:AbstractPropertyLookup" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractPropertyLookup(struct soap *soap, const char *URL, resqml20__AbstractPropertyLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup ? "resqml20:AbstractPropertyLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractPropertyLookup(struct soap *soap, const char *URL, resqml20__AbstractPropertyLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup ? "resqml20:AbstractPropertyLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractPropertyLookup(struct soap *soap, const char *URL, resqml20__AbstractPropertyLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup ? "resqml20:AbstractPropertyLookup" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractPropertyLookup * SOAP_FMAC4 soap_get_resqml20__AbstractPropertyLookup(struct soap*, resqml20__AbstractPropertyLookup *, const char*, const char*);

inline int soap_read_resqml20__AbstractPropertyLookup(struct soap *soap, resqml20__AbstractPropertyLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractPropertyLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractPropertyLookup(struct soap *soap, const char *URL, resqml20__AbstractPropertyLookup *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractPropertyLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractPropertyLookup(struct soap *soap, resqml20__AbstractPropertyLookup *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractPropertyLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractValueArray(struct soap*, const char*, int, const resqml20__AbstractValueArray *, const char*);
SOAP_FMAC3 resqml20__AbstractValueArray * SOAP_FMAC4 soap_in_resqml20__AbstractValueArray(struct soap*, const char*, resqml20__AbstractValueArray *, const char*);
SOAP_FMAC1 resqml20__AbstractValueArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractValueArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractValueArray * soap_new_resqml20__AbstractValueArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractValueArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractValueArray * soap_new_req_resqml20__AbstractValueArray(
	struct soap *soap)
{
	resqml20__AbstractValueArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractValueArray * soap_new_set_resqml20__AbstractValueArray(
	struct soap *soap)
{
	resqml20__AbstractValueArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractValueArray(struct soap *soap, resqml20__AbstractValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray ? "resqml20:AbstractValueArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractValueArray(struct soap *soap, const char *URL, resqml20__AbstractValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray ? "resqml20:AbstractValueArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractValueArray(struct soap *soap, const char *URL, resqml20__AbstractValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray ? "resqml20:AbstractValueArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractValueArray(struct soap *soap, const char *URL, resqml20__AbstractValueArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractValueArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray ? "resqml20:AbstractValueArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractValueArray * SOAP_FMAC4 soap_get_resqml20__AbstractValueArray(struct soap*, resqml20__AbstractValueArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractValueArray(struct soap *soap, resqml20__AbstractValueArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractValueArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractValueArray(struct soap *soap, const char *URL, resqml20__AbstractValueArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractValueArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractValueArray(struct soap *soap, resqml20__AbstractValueArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractValueArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PatchOfValues(struct soap*, const char*, int, const resqml20__PatchOfValues *, const char*);
SOAP_FMAC3 resqml20__PatchOfValues * SOAP_FMAC4 soap_in_resqml20__PatchOfValues(struct soap*, const char*, resqml20__PatchOfValues *, const char*);
SOAP_FMAC1 resqml20__PatchOfValues * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfValues(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PatchOfValues * soap_new_resqml20__PatchOfValues(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PatchOfValues(soap, n, NULL, NULL, NULL);
}

inline resqml20__PatchOfValues * soap_new_req_resqml20__PatchOfValues(
	struct soap *soap,
	resqml20__AbstractValueArray *Values)
{
	resqml20__PatchOfValues *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfValues(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfValues::Values = Values;
	}
	return _p;
}

inline resqml20__PatchOfValues * soap_new_set_resqml20__PatchOfValues(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml20__AbstractValueArray *Values)
{
	resqml20__PatchOfValues *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfValues(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfValues::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml20__PatchOfValues::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml20__PatchOfValues(struct soap *soap, resqml20__PatchOfValues const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfValues", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues ? "resqml20:PatchOfValues" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PatchOfValues(struct soap *soap, const char *URL, resqml20__PatchOfValues const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfValues", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues ? "resqml20:PatchOfValues" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PatchOfValues(struct soap *soap, const char *URL, resqml20__PatchOfValues const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfValues", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues ? "resqml20:PatchOfValues" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PatchOfValues(struct soap *soap, const char *URL, resqml20__PatchOfValues const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfValues", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues ? "resqml20:PatchOfValues" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PatchOfValues * SOAP_FMAC4 soap_get_resqml20__PatchOfValues(struct soap*, resqml20__PatchOfValues *, const char*, const char*);

inline int soap_read_resqml20__PatchOfValues(struct soap *soap, resqml20__PatchOfValues *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PatchOfValues(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PatchOfValues(struct soap *soap, const char *URL, resqml20__PatchOfValues *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PatchOfValues(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PatchOfValues(struct soap *soap, resqml20__PatchOfValues *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PatchOfValues(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractPropertyKind(struct soap*, const char*, int, const resqml20__AbstractPropertyKind *, const char*);
SOAP_FMAC3 resqml20__AbstractPropertyKind * SOAP_FMAC4 soap_in_resqml20__AbstractPropertyKind(struct soap*, const char*, resqml20__AbstractPropertyKind *, const char*);
SOAP_FMAC1 resqml20__AbstractPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractPropertyKind * soap_new_resqml20__AbstractPropertyKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractPropertyKind * soap_new_req_resqml20__AbstractPropertyKind(
	struct soap *soap)
{
	resqml20__AbstractPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractPropertyKind * soap_new_set_resqml20__AbstractPropertyKind(
	struct soap *soap)
{
	resqml20__AbstractPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractPropertyKind(struct soap *soap, resqml20__AbstractPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind ? "resqml20:AbstractPropertyKind" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractPropertyKind(struct soap *soap, const char *URL, resqml20__AbstractPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind ? "resqml20:AbstractPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractPropertyKind(struct soap *soap, const char *URL, resqml20__AbstractPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind ? "resqml20:AbstractPropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractPropertyKind(struct soap *soap, const char *URL, resqml20__AbstractPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractPropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind ? "resqml20:AbstractPropertyKind" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractPropertyKind * SOAP_FMAC4 soap_get_resqml20__AbstractPropertyKind(struct soap*, resqml20__AbstractPropertyKind *, const char*, const char*);

inline int soap_read_resqml20__AbstractPropertyKind(struct soap *soap, resqml20__AbstractPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractPropertyKind(struct soap *soap, const char *URL, resqml20__AbstractPropertyKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractPropertyKind(struct soap *soap, resqml20__AbstractPropertyKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BooleanHdf5Array(struct soap*, const char*, int, const resqml20__BooleanHdf5Array *, const char*);
SOAP_FMAC3 resqml20__BooleanHdf5Array * SOAP_FMAC4 soap_in_resqml20__BooleanHdf5Array(struct soap*, const char*, resqml20__BooleanHdf5Array *, const char*);
SOAP_FMAC1 resqml20__BooleanHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__BooleanHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__BooleanHdf5Array * soap_new_resqml20__BooleanHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__BooleanHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__BooleanHdf5Array * soap_new_req_resqml20__BooleanHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__BooleanHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml20__BooleanHdf5Array * soap_new_set_resqml20__BooleanHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__BooleanHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml20__BooleanHdf5Array(struct soap *soap, resqml20__BooleanHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array ? "resqml20:BooleanHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BooleanHdf5Array(struct soap *soap, const char *URL, resqml20__BooleanHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array ? "resqml20:BooleanHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BooleanHdf5Array(struct soap *soap, const char *URL, resqml20__BooleanHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array ? "resqml20:BooleanHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BooleanHdf5Array(struct soap *soap, const char *URL, resqml20__BooleanHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array ? "resqml20:BooleanHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__BooleanHdf5Array * SOAP_FMAC4 soap_get_resqml20__BooleanHdf5Array(struct soap*, resqml20__BooleanHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__BooleanHdf5Array(struct soap *soap, resqml20__BooleanHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BooleanHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BooleanHdf5Array(struct soap *soap, const char *URL, resqml20__BooleanHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BooleanHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BooleanHdf5Array(struct soap *soap, resqml20__BooleanHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BooleanHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StringHdf5Array(struct soap*, const char*, int, const resqml20__StringHdf5Array *, const char*);
SOAP_FMAC3 resqml20__StringHdf5Array * SOAP_FMAC4 soap_in_resqml20__StringHdf5Array(struct soap*, const char*, resqml20__StringHdf5Array *, const char*);
SOAP_FMAC1 resqml20__StringHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__StringHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StringHdf5Array * soap_new_resqml20__StringHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StringHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__StringHdf5Array * soap_new_req_resqml20__StringHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__StringHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml20__StringHdf5Array * soap_new_set_resqml20__StringHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__StringHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml20__StringHdf5Array(struct soap *soap, resqml20__StringHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array ? "resqml20:StringHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StringHdf5Array(struct soap *soap, const char *URL, resqml20__StringHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array ? "resqml20:StringHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StringHdf5Array(struct soap *soap, const char *URL, resqml20__StringHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array ? "resqml20:StringHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StringHdf5Array(struct soap *soap, const char *URL, resqml20__StringHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array ? "resqml20:StringHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StringHdf5Array * SOAP_FMAC4 soap_get_resqml20__StringHdf5Array(struct soap*, resqml20__StringHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__StringHdf5Array(struct soap *soap, resqml20__StringHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StringHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StringHdf5Array(struct soap *soap, const char *URL, resqml20__StringHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StringHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StringHdf5Array(struct soap *soap, resqml20__StringHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StringHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREStringTableLookup(struct soap*, const char*, int, const resqml20__obj_USCOREStringTableLookup *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREStringTableLookup * SOAP_FMAC4 soap_in_resqml20__obj_USCOREStringTableLookup(struct soap*, const char*, resqml20__obj_USCOREStringTableLookup *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREStringTableLookup * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStringTableLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREStringTableLookup * soap_new_resqml20__obj_USCOREStringTableLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREStringTableLookup(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREStringTableLookup * soap_new_req_resqml20__obj_USCOREStringTableLookup(
	struct soap *soap,
	const std::vector<resqml20__StringLookup *> & Value,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREStringTableLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStringTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStringTableLookup::Value = Value;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREStringTableLookup * soap_new_set_resqml20__obj_USCOREStringTableLookup(
	struct soap *soap,
	const std::vector<resqml20__StringLookup *> & Value,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREStringTableLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREStringTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREStringTableLookup::Value = Value;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREStringTableLookup(struct soap *soap, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup ? "resqml20:obj_StringTableLookup" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREStringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup ? "resqml20:obj_StringTableLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREStringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup ? "resqml20:obj_StringTableLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREStringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_StringTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup ? "resqml20:obj_StringTableLookup" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREStringTableLookup * SOAP_FMAC4 soap_get_resqml20__obj_USCOREStringTableLookup(struct soap*, resqml20__obj_USCOREStringTableLookup *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREStringTableLookup(struct soap *soap, resqml20__obj_USCOREStringTableLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREStringTableLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREStringTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREStringTableLookup *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStringTableLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREStringTableLookup(struct soap *soap, resqml20__obj_USCOREStringTableLookup *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREStringTableLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPropertyKind(struct soap*, const char*, int, const resqml20__obj_USCOREPropertyKind *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPropertyKind * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPropertyKind(struct soap*, const char*, resqml20__obj_USCOREPropertyKind *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPropertyKind * soap_new_resqml20__obj_USCOREPropertyKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPropertyKind * soap_new_req_resqml20__obj_USCOREPropertyKind(
	struct soap *soap,
	const std::string& NamingSystem,
	bool IsAbstract,
	enum resqml20__ResqmlUom RepresentativeUom,
	resqml20__AbstractPropertyKind *ParentPropertyKind,
	eml20__Citation *Citation__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPropertyKind::NamingSystem = NamingSystem;
		_p->resqml20__obj_USCOREPropertyKind::IsAbstract = IsAbstract;
		_p->resqml20__obj_USCOREPropertyKind::RepresentativeUom = RepresentativeUom;
		_p->resqml20__obj_USCOREPropertyKind::ParentPropertyKind = ParentPropertyKind;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline resqml20__obj_USCOREPropertyKind * soap_new_set_resqml20__obj_USCOREPropertyKind(
	struct soap *soap,
	const std::string& NamingSystem,
	bool IsAbstract,
	enum resqml20__ResqmlUom RepresentativeUom,
	resqml20__AbstractPropertyKind *ParentPropertyKind,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__1,
	eml20__Citation *Citation__2,
	const std::vector<eml20__ObjectAlias *> & Aliases__2,
	eml20__CustomData *CustomData__2,
	const std::string& schemaVersion__2,
	const std::string& uuid__2)
{
	resqml20__obj_USCOREPropertyKind *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPropertyKind::NamingSystem = NamingSystem;
		_p->resqml20__obj_USCOREPropertyKind::IsAbstract = IsAbstract;
		_p->resqml20__obj_USCOREPropertyKind::RepresentativeUom = RepresentativeUom;
		_p->resqml20__obj_USCOREPropertyKind::ParentPropertyKind = ParentPropertyKind;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__2;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__2;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__2;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__2;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__2;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPropertyKind(struct soap *soap, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind ? "resqml20:obj_PropertyKind" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind ? "resqml20:obj_PropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind ? "resqml20:obj_PropertyKind" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PropertyKind", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind ? "resqml20:obj_PropertyKind" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPropertyKind * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPropertyKind(struct soap*, resqml20__obj_USCOREPropertyKind *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPropertyKind(struct soap *soap, resqml20__obj_USCOREPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPropertyKind(struct soap *soap, const char *URL, resqml20__obj_USCOREPropertyKind *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPropertyKind(struct soap *soap, resqml20__obj_USCOREPropertyKind *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPropertyKind(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerLatticeArray(struct soap*, const char*, int, const resqml20__IntegerLatticeArray *, const char*);
SOAP_FMAC3 resqml20__IntegerLatticeArray * SOAP_FMAC4 soap_in_resqml20__IntegerLatticeArray(struct soap*, const char*, resqml20__IntegerLatticeArray *, const char*);
SOAP_FMAC1 resqml20__IntegerLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerLatticeArray * soap_new_resqml20__IntegerLatticeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerLatticeArray * soap_new_req_resqml20__IntegerLatticeArray(
	struct soap *soap,
	LONG64 StartValue,
	const std::vector<resqml20__IntegerConstantArray *> & Offset)
{
	resqml20__IntegerLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerLatticeArray::StartValue = StartValue;
		_p->resqml20__IntegerLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml20__IntegerLatticeArray * soap_new_set_resqml20__IntegerLatticeArray(
	struct soap *soap,
	LONG64 StartValue,
	const std::vector<resqml20__IntegerConstantArray *> & Offset)
{
	resqml20__IntegerLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerLatticeArray::StartValue = StartValue;
		_p->resqml20__IntegerLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerLatticeArray(struct soap *soap, resqml20__IntegerLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray ? "resqml20:IntegerLatticeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerLatticeArray(struct soap *soap, const char *URL, resqml20__IntegerLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray ? "resqml20:IntegerLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerLatticeArray(struct soap *soap, const char *URL, resqml20__IntegerLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray ? "resqml20:IntegerLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerLatticeArray(struct soap *soap, const char *URL, resqml20__IntegerLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray ? "resqml20:IntegerLatticeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerLatticeArray * SOAP_FMAC4 soap_get_resqml20__IntegerLatticeArray(struct soap*, resqml20__IntegerLatticeArray *, const char*, const char*);

inline int soap_read_resqml20__IntegerLatticeArray(struct soap *soap, resqml20__IntegerLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerLatticeArray(struct soap *soap, const char *URL, resqml20__IntegerLatticeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerLatticeArray(struct soap *soap, resqml20__IntegerLatticeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__AbstractDoubleArray(struct soap*, const char*, int, const resqml20__AbstractDoubleArray *, const char*);
SOAP_FMAC3 resqml20__AbstractDoubleArray * SOAP_FMAC4 soap_in_resqml20__AbstractDoubleArray(struct soap*, const char*, resqml20__AbstractDoubleArray *, const char*);
SOAP_FMAC1 resqml20__AbstractDoubleArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractDoubleArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__AbstractDoubleArray * soap_new_resqml20__AbstractDoubleArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__AbstractDoubleArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__AbstractDoubleArray * soap_new_req_resqml20__AbstractDoubleArray(
	struct soap *soap)
{
	resqml20__AbstractDoubleArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractDoubleArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml20__AbstractDoubleArray * soap_new_set_resqml20__AbstractDoubleArray(
	struct soap *soap)
{
	resqml20__AbstractDoubleArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__AbstractDoubleArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml20__AbstractDoubleArray(struct soap *soap, resqml20__AbstractDoubleArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractDoubleArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray ? "resqml20:AbstractDoubleArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__AbstractDoubleArray(struct soap *soap, const char *URL, resqml20__AbstractDoubleArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractDoubleArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray ? "resqml20:AbstractDoubleArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__AbstractDoubleArray(struct soap *soap, const char *URL, resqml20__AbstractDoubleArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractDoubleArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray ? "resqml20:AbstractDoubleArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__AbstractDoubleArray(struct soap *soap, const char *URL, resqml20__AbstractDoubleArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:AbstractDoubleArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray ? "resqml20:AbstractDoubleArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__AbstractDoubleArray * SOAP_FMAC4 soap_get_resqml20__AbstractDoubleArray(struct soap*, resqml20__AbstractDoubleArray *, const char*, const char*);

inline int soap_read_resqml20__AbstractDoubleArray(struct soap *soap, resqml20__AbstractDoubleArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__AbstractDoubleArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__AbstractDoubleArray(struct soap *soap, const char *URL, resqml20__AbstractDoubleArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__AbstractDoubleArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__AbstractDoubleArray(struct soap *soap, resqml20__AbstractDoubleArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__AbstractDoubleArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORECategoricalProperty(struct soap*, const char*, int, const resqml20__obj_USCORECategoricalProperty *, const char*);
SOAP_FMAC3 resqml20__obj_USCORECategoricalProperty * SOAP_FMAC4 soap_in_resqml20__obj_USCORECategoricalProperty(struct soap*, const char*, resqml20__obj_USCORECategoricalProperty *, const char*);
SOAP_FMAC1 resqml20__obj_USCORECategoricalProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECategoricalProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORECategoricalProperty * soap_new_resqml20__obj_USCORECategoricalProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORECategoricalProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORECategoricalProperty * soap_new_req_resqml20__obj_USCORECategoricalProperty(
	struct soap *soap,
	eml20__DataObjectReference *Lookup,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORECategoricalProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECategoricalProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECategoricalProperty::Lookup = Lookup;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORECategoricalProperty * soap_new_set_resqml20__obj_USCORECategoricalProperty(
	struct soap *soap,
	eml20__DataObjectReference *Lookup,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	ULONG64 *RealizationIndex__2,
	ULONG64 *TimeStep__2,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	eml20__DataObjectReference *LocalCrs__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORECategoricalProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECategoricalProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECategoricalProperty::Lookup = Lookup;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__2;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__2;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORECategoricalProperty(struct soap *soap, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty ? "resqml20:obj_CategoricalProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORECategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty ? "resqml20:obj_CategoricalProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORECategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty ? "resqml20:obj_CategoricalProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORECategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CategoricalProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty ? "resqml20:obj_CategoricalProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORECategoricalProperty * SOAP_FMAC4 soap_get_resqml20__obj_USCORECategoricalProperty(struct soap*, resqml20__obj_USCORECategoricalProperty *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORECategoricalProperty(struct soap *soap, resqml20__obj_USCORECategoricalProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORECategoricalProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORECategoricalProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECategoricalProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECategoricalProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORECategoricalProperty(struct soap *soap, resqml20__obj_USCORECategoricalProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECategoricalProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREDiscreteProperty(struct soap*, const char*, int, const resqml20__obj_USCOREDiscreteProperty *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREDiscreteProperty * SOAP_FMAC4 soap_in_resqml20__obj_USCOREDiscreteProperty(struct soap*, const char*, resqml20__obj_USCOREDiscreteProperty *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREDiscreteProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDiscreteProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREDiscreteProperty * soap_new_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREDiscreteProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREDiscreteProperty * soap_new_req_resqml20__obj_USCOREDiscreteProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREDiscreteProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDiscreteProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREDiscreteProperty * soap_new_set_resqml20__obj_USCOREDiscreteProperty(
	struct soap *soap,
	const std::vector<LONG64> & MinimumValue,
	const std::vector<LONG64> & MaximumValue,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	ULONG64 *RealizationIndex__2,
	ULONG64 *TimeStep__2,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	eml20__DataObjectReference *LocalCrs__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREDiscreteProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDiscreteProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDiscreteProperty::MinimumValue = MinimumValue;
		_p->resqml20__obj_USCOREDiscreteProperty::MaximumValue = MaximumValue;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__2;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__2;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty ? "resqml20:obj_DiscreteProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty ? "resqml20:obj_DiscreteProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty ? "resqml20:obj_DiscreteProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DiscreteProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty ? "resqml20:obj_DiscreteProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREDiscreteProperty * SOAP_FMAC4 soap_get_resqml20__obj_USCOREDiscreteProperty(struct soap*, resqml20__obj_USCOREDiscreteProperty *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, resqml20__obj_USCOREDiscreteProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREDiscreteProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREDiscreteProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDiscreteProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREDiscreteProperty(struct soap *soap, resqml20__obj_USCOREDiscreteProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDiscreteProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCORECommentProperty(struct soap*, const char*, int, const resqml20__obj_USCORECommentProperty *, const char*);
SOAP_FMAC3 resqml20__obj_USCORECommentProperty * SOAP_FMAC4 soap_in_resqml20__obj_USCORECommentProperty(struct soap*, const char*, resqml20__obj_USCORECommentProperty *, const char*);
SOAP_FMAC1 resqml20__obj_USCORECommentProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECommentProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCORECommentProperty * soap_new_resqml20__obj_USCORECommentProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCORECommentProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCORECommentProperty * soap_new_req_resqml20__obj_USCORECommentProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORECommentProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECommentProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCORECommentProperty * soap_new_set_resqml20__obj_USCORECommentProperty(
	struct soap *soap,
	std::string *Language,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	ULONG64 *RealizationIndex__2,
	ULONG64 *TimeStep__2,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	eml20__DataObjectReference *LocalCrs__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCORECommentProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCORECommentProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCORECommentProperty::Language = Language;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__2;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__2;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCORECommentProperty(struct soap *soap, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty ? "resqml20:obj_CommentProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCORECommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty ? "resqml20:obj_CommentProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCORECommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty ? "resqml20:obj_CommentProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCORECommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_CommentProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty ? "resqml20:obj_CommentProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCORECommentProperty * SOAP_FMAC4 soap_get_resqml20__obj_USCORECommentProperty(struct soap*, resqml20__obj_USCORECommentProperty *, const char*, const char*);

inline int soap_read_resqml20__obj_USCORECommentProperty(struct soap *soap, resqml20__obj_USCORECommentProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCORECommentProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCORECommentProperty(struct soap *soap, const char *URL, resqml20__obj_USCORECommentProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECommentProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCORECommentProperty(struct soap *soap, resqml20__obj_USCORECommentProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCORECommentProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PatchOfPoints(struct soap*, const char*, int, const resqml20__PatchOfPoints *, const char*);
SOAP_FMAC3 resqml20__PatchOfPoints * SOAP_FMAC4 soap_in_resqml20__PatchOfPoints(struct soap*, const char*, resqml20__PatchOfPoints *, const char*);
SOAP_FMAC1 resqml20__PatchOfPoints * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfPoints(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PatchOfPoints * soap_new_resqml20__PatchOfPoints(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PatchOfPoints(soap, n, NULL, NULL, NULL);
}

inline resqml20__PatchOfPoints * soap_new_req_resqml20__PatchOfPoints(
	struct soap *soap,
	resqml20__AbstractPoint3dArray *Points)
{
	resqml20__PatchOfPoints *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfPoints::Points = Points;
	}
	return _p;
}

inline resqml20__PatchOfPoints * soap_new_set_resqml20__PatchOfPoints(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml20__AbstractPoint3dArray *Points)
{
	resqml20__PatchOfPoints *_p = gsoap_resqml2_0_1::soap_new_resqml20__PatchOfPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PatchOfPoints::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml20__PatchOfPoints::Points = Points;
	}
	return _p;
}

inline int soap_write_resqml20__PatchOfPoints(struct soap *soap, resqml20__PatchOfPoints const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints ? "resqml20:PatchOfPoints" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PatchOfPoints(struct soap *soap, const char *URL, resqml20__PatchOfPoints const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints ? "resqml20:PatchOfPoints" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PatchOfPoints(struct soap *soap, const char *URL, resqml20__PatchOfPoints const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints ? "resqml20:PatchOfPoints" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PatchOfPoints(struct soap *soap, const char *URL, resqml20__PatchOfPoints const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PatchOfPoints", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints ? "resqml20:PatchOfPoints" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PatchOfPoints * SOAP_FMAC4 soap_get_resqml20__PatchOfPoints(struct soap*, resqml20__PatchOfPoints *, const char*, const char*);

inline int soap_read_resqml20__PatchOfPoints(struct soap *soap, resqml20__PatchOfPoints *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PatchOfPoints(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PatchOfPoints(struct soap *soap, const char *URL, resqml20__PatchOfPoints *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PatchOfPoints(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PatchOfPoints(struct soap *soap, resqml20__PatchOfPoints *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PatchOfPoints(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DoubleHdf5Array(struct soap*, const char*, int, const resqml20__DoubleHdf5Array *, const char*);
SOAP_FMAC3 resqml20__DoubleHdf5Array * SOAP_FMAC4 soap_in_resqml20__DoubleHdf5Array(struct soap*, const char*, resqml20__DoubleHdf5Array *, const char*);
SOAP_FMAC1 resqml20__DoubleHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__DoubleHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__DoubleHdf5Array * soap_new_resqml20__DoubleHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__DoubleHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__DoubleHdf5Array * soap_new_req_resqml20__DoubleHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__DoubleHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml20__DoubleHdf5Array * soap_new_set_resqml20__DoubleHdf5Array(
	struct soap *soap,
	eml20__Hdf5Dataset *Values)
{
	resqml20__DoubleHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml20__DoubleHdf5Array(struct soap *soap, resqml20__DoubleHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array ? "resqml20:DoubleHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DoubleHdf5Array(struct soap *soap, const char *URL, resqml20__DoubleHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array ? "resqml20:DoubleHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DoubleHdf5Array(struct soap *soap, const char *URL, resqml20__DoubleHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array ? "resqml20:DoubleHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DoubleHdf5Array(struct soap *soap, const char *URL, resqml20__DoubleHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array ? "resqml20:DoubleHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__DoubleHdf5Array * SOAP_FMAC4 soap_get_resqml20__DoubleHdf5Array(struct soap*, resqml20__DoubleHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__DoubleHdf5Array(struct soap *soap, resqml20__DoubleHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DoubleHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DoubleHdf5Array(struct soap *soap, const char *URL, resqml20__DoubleHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DoubleHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DoubleHdf5Array(struct soap *soap, resqml20__DoubleHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DoubleHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DoubleConstantArray(struct soap*, const char*, int, const resqml20__DoubleConstantArray *, const char*);
SOAP_FMAC3 resqml20__DoubleConstantArray * SOAP_FMAC4 soap_in_resqml20__DoubleConstantArray(struct soap*, const char*, resqml20__DoubleConstantArray *, const char*);
SOAP_FMAC1 resqml20__DoubleConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__DoubleConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__DoubleConstantArray * soap_new_resqml20__DoubleConstantArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__DoubleConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__DoubleConstantArray * soap_new_req_resqml20__DoubleConstantArray(
	struct soap *soap,
	double Value,
	ULONG64 Count)
{
	resqml20__DoubleConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleConstantArray::Value = Value;
		_p->resqml20__DoubleConstantArray::Count = Count;
	}
	return _p;
}

inline resqml20__DoubleConstantArray * soap_new_set_resqml20__DoubleConstantArray(
	struct soap *soap,
	double Value,
	ULONG64 Count)
{
	resqml20__DoubleConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleConstantArray::Value = Value;
		_p->resqml20__DoubleConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml20__DoubleConstantArray(struct soap *soap, resqml20__DoubleConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray ? "resqml20:DoubleConstantArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DoubleConstantArray(struct soap *soap, const char *URL, resqml20__DoubleConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray ? "resqml20:DoubleConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DoubleConstantArray(struct soap *soap, const char *URL, resqml20__DoubleConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray ? "resqml20:DoubleConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DoubleConstantArray(struct soap *soap, const char *URL, resqml20__DoubleConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray ? "resqml20:DoubleConstantArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__DoubleConstantArray * SOAP_FMAC4 soap_get_resqml20__DoubleConstantArray(struct soap*, resqml20__DoubleConstantArray *, const char*, const char*);

inline int soap_read_resqml20__DoubleConstantArray(struct soap *soap, resqml20__DoubleConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DoubleConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DoubleConstantArray(struct soap *soap, const char *URL, resqml20__DoubleConstantArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DoubleConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DoubleConstantArray(struct soap *soap, resqml20__DoubleConstantArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DoubleConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__DoubleLatticeArray(struct soap*, const char*, int, const resqml20__DoubleLatticeArray *, const char*);
SOAP_FMAC3 resqml20__DoubleLatticeArray * SOAP_FMAC4 soap_in_resqml20__DoubleLatticeArray(struct soap*, const char*, resqml20__DoubleLatticeArray *, const char*);
SOAP_FMAC1 resqml20__DoubleLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__DoubleLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__DoubleLatticeArray * soap_new_resqml20__DoubleLatticeArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__DoubleLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__DoubleLatticeArray * soap_new_req_resqml20__DoubleLatticeArray(
	struct soap *soap,
	double StartValue,
	const std::vector<resqml20__DoubleConstantArray *> & Offset)
{
	resqml20__DoubleLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleLatticeArray::StartValue = StartValue;
		_p->resqml20__DoubleLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml20__DoubleLatticeArray * soap_new_set_resqml20__DoubleLatticeArray(
	struct soap *soap,
	double StartValue,
	const std::vector<resqml20__DoubleConstantArray *> & Offset)
{
	resqml20__DoubleLatticeArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__DoubleLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__DoubleLatticeArray::StartValue = StartValue;
		_p->resqml20__DoubleLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml20__DoubleLatticeArray(struct soap *soap, resqml20__DoubleLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray ? "resqml20:DoubleLatticeArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__DoubleLatticeArray(struct soap *soap, const char *URL, resqml20__DoubleLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray ? "resqml20:DoubleLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__DoubleLatticeArray(struct soap *soap, const char *URL, resqml20__DoubleLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray ? "resqml20:DoubleLatticeArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__DoubleLatticeArray(struct soap *soap, const char *URL, resqml20__DoubleLatticeArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:DoubleLatticeArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray ? "resqml20:DoubleLatticeArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__DoubleLatticeArray * SOAP_FMAC4 soap_get_resqml20__DoubleLatticeArray(struct soap*, resqml20__DoubleLatticeArray *, const char*, const char*);

inline int soap_read_resqml20__DoubleLatticeArray(struct soap *soap, resqml20__DoubleLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__DoubleLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__DoubleLatticeArray(struct soap *soap, const char *URL, resqml20__DoubleLatticeArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__DoubleLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__DoubleLatticeArray(struct soap *soap, resqml20__DoubleLatticeArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__DoubleLatticeArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREPointsProperty(struct soap*, const char*, int, const resqml20__obj_USCOREPointsProperty *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREPointsProperty * SOAP_FMAC4 soap_in_resqml20__obj_USCOREPointsProperty(struct soap*, const char*, resqml20__obj_USCOREPointsProperty *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREPointsProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPointsProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREPointsProperty * soap_new_resqml20__obj_USCOREPointsProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREPointsProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREPointsProperty * soap_new_req_resqml20__obj_USCOREPointsProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfPoints *> & PatchOfPoints,
	ULONG64 Count__1,
	enum resqml20__IndexableElements IndexableElement__1,
	eml20__DataObjectReference *SupportingRepresentation__1,
	resqml20__AbstractPropertyKind *PropertyKind__1,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPointsProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPointsProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPointsProperty::PatchOfPoints = PatchOfPoints;
		_p->resqml20__AbstractProperty::Count = Count__1;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__1;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__1;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__1;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREPointsProperty * soap_new_set_resqml20__obj_USCOREPointsProperty(
	struct soap *soap,
	const std::vector<resqml20__PatchOfPoints *> & PatchOfPoints,
	ULONG64 Count__1,
	enum resqml20__IndexableElements IndexableElement__1,
	ULONG64 *RealizationIndex__1,
	ULONG64 *TimeStep__1,
	resqml20__TimeIndex *TimeIndex__1,
	eml20__DataObjectReference *SupportingRepresentation__1,
	eml20__DataObjectReference *LocalCrs__1,
	resqml20__AbstractPropertyKind *PropertyKind__1,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREPointsProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREPointsProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREPointsProperty::PatchOfPoints = PatchOfPoints;
		_p->resqml20__AbstractProperty::Count = Count__1;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__1;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__1;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__1;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__1;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__1;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__1;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__1;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREPointsProperty(struct soap *soap, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty ? "resqml20:obj_PointsProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREPointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty ? "resqml20:obj_PointsProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREPointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty ? "resqml20:obj_PointsProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREPointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_PointsProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty ? "resqml20:obj_PointsProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREPointsProperty * SOAP_FMAC4 soap_get_resqml20__obj_USCOREPointsProperty(struct soap*, resqml20__obj_USCOREPointsProperty *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREPointsProperty(struct soap *soap, resqml20__obj_USCOREPointsProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREPointsProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREPointsProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREPointsProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPointsProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREPointsProperty(struct soap *soap, resqml20__obj_USCOREPointsProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREPointsProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__StringLookup(struct soap*, const char*, int, const resqml20__StringLookup *, const char*);
SOAP_FMAC3 resqml20__StringLookup * SOAP_FMAC4 soap_in_resqml20__StringLookup(struct soap*, const char*, resqml20__StringLookup *, const char*);
SOAP_FMAC1 resqml20__StringLookup * SOAP_FMAC2 soap_instantiate_resqml20__StringLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__StringLookup * soap_new_resqml20__StringLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__StringLookup(soap, n, NULL, NULL, NULL);
}

inline resqml20__StringLookup * soap_new_req_resqml20__StringLookup(
	struct soap *soap,
	LONG64 Key,
	const std::string& Value)
{
	resqml20__StringLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringLookup::Key = Key;
		_p->resqml20__StringLookup::Value = Value;
	}
	return _p;
}

inline resqml20__StringLookup * soap_new_set_resqml20__StringLookup(
	struct soap *soap,
	LONG64 Key,
	const std::string& Value)
{
	resqml20__StringLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__StringLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__StringLookup::Key = Key;
		_p->resqml20__StringLookup::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml20__StringLookup(struct soap *soap, resqml20__StringLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup ? "resqml20:StringLookup" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__StringLookup(struct soap *soap, const char *URL, resqml20__StringLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup ? "resqml20:StringLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__StringLookup(struct soap *soap, const char *URL, resqml20__StringLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup ? "resqml20:StringLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__StringLookup(struct soap *soap, const char *URL, resqml20__StringLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:StringLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup ? "resqml20:StringLookup" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__StringLookup * SOAP_FMAC4 soap_get_resqml20__StringLookup(struct soap*, resqml20__StringLookup *, const char*, const char*);

inline int soap_read_resqml20__StringLookup(struct soap *soap, resqml20__StringLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__StringLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__StringLookup(struct soap *soap, const char *URL, resqml20__StringLookup *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__StringLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__StringLookup(struct soap *soap, resqml20__StringLookup *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__StringLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREContinuousProperty(struct soap*, const char*, int, const resqml20__obj_USCOREContinuousProperty *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREContinuousProperty * SOAP_FMAC4 soap_in_resqml20__obj_USCOREContinuousProperty(struct soap*, const char*, resqml20__obj_USCOREContinuousProperty *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREContinuousProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREContinuousProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREContinuousProperty * soap_new_resqml20__obj_USCOREContinuousProperty(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREContinuousProperty(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREContinuousProperty * soap_new_req_resqml20__obj_USCOREContinuousProperty(
	struct soap *soap,
	enum resqml20__ResqmlUom UOM,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	eml20__Citation *Citation__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREContinuousProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREContinuousProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREContinuousProperty::UOM = UOM;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline resqml20__obj_USCOREContinuousProperty * soap_new_set_resqml20__obj_USCOREContinuousProperty(
	struct soap *soap,
	const std::vector<double> & MinimumValue,
	const std::vector<double> & MaximumValue,
	enum resqml20__ResqmlUom UOM,
	const std::vector<resqml20__PatchOfValues *> & PatchOfValues__1,
	const std::vector<resqml20__PropertyKindFacet *> & Facet__1,
	ULONG64 Count__2,
	enum resqml20__IndexableElements IndexableElement__2,
	ULONG64 *RealizationIndex__2,
	ULONG64 *TimeStep__2,
	resqml20__TimeIndex *TimeIndex__2,
	eml20__DataObjectReference *SupportingRepresentation__2,
	eml20__DataObjectReference *LocalCrs__2,
	resqml20__AbstractPropertyKind *PropertyKind__2,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__3,
	eml20__Citation *Citation__4,
	const std::vector<eml20__ObjectAlias *> & Aliases__4,
	eml20__CustomData *CustomData__4,
	const std::string& schemaVersion__4,
	const std::string& uuid__4)
{
	resqml20__obj_USCOREContinuousProperty *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREContinuousProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREContinuousProperty::MinimumValue = MinimumValue;
		_p->resqml20__obj_USCOREContinuousProperty::MaximumValue = MaximumValue;
		_p->resqml20__obj_USCOREContinuousProperty::UOM = UOM;
		_p->resqml20__AbstractValuesProperty::PatchOfValues = PatchOfValues__1;
		_p->resqml20__AbstractValuesProperty::Facet = Facet__1;
		_p->resqml20__AbstractProperty::Count = Count__2;
		_p->resqml20__AbstractProperty::IndexableElement = IndexableElement__2;
		_p->resqml20__AbstractProperty::RealizationIndex = RealizationIndex__2;
		_p->resqml20__AbstractProperty::TimeStep = TimeStep__2;
		_p->resqml20__AbstractProperty::TimeIndex = TimeIndex__2;
		_p->resqml20__AbstractProperty::SupportingRepresentation = SupportingRepresentation__2;
		_p->resqml20__AbstractProperty::LocalCrs = LocalCrs__2;
		_p->resqml20__AbstractProperty::PropertyKind = PropertyKind__2;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__3;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__4;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__4;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__4;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__4;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__4;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREContinuousProperty(struct soap *soap, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty ? "resqml20:obj_ContinuousProperty" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty ? "resqml20:obj_ContinuousProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty ? "resqml20:obj_ContinuousProperty" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_ContinuousProperty", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty ? "resqml20:obj_ContinuousProperty" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREContinuousProperty * SOAP_FMAC4 soap_get_resqml20__obj_USCOREContinuousProperty(struct soap*, resqml20__obj_USCOREContinuousProperty *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREContinuousProperty(struct soap *soap, resqml20__obj_USCOREContinuousProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREContinuousProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREContinuousProperty(struct soap *soap, const char *URL, resqml20__obj_USCOREContinuousProperty *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREContinuousProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREContinuousProperty(struct soap *soap, resqml20__obj_USCOREContinuousProperty *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREContinuousProperty(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerHdf5Array(struct soap*, const char*, int, const resqml20__IntegerHdf5Array *, const char*);
SOAP_FMAC3 resqml20__IntegerHdf5Array * SOAP_FMAC4 soap_in_resqml20__IntegerHdf5Array(struct soap*, const char*, resqml20__IntegerHdf5Array *, const char*);
SOAP_FMAC1 resqml20__IntegerHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__IntegerHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerHdf5Array * soap_new_resqml20__IntegerHdf5Array(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerHdf5Array * soap_new_req_resqml20__IntegerHdf5Array(
	struct soap *soap,
	LONG64 NullValue,
	eml20__Hdf5Dataset *Values)
{
	resqml20__IntegerHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerHdf5Array::NullValue = NullValue;
		_p->resqml20__IntegerHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml20__IntegerHdf5Array * soap_new_set_resqml20__IntegerHdf5Array(
	struct soap *soap,
	LONG64 NullValue,
	eml20__Hdf5Dataset *Values)
{
	resqml20__IntegerHdf5Array *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerHdf5Array::NullValue = NullValue;
		_p->resqml20__IntegerHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerHdf5Array(struct soap *soap, resqml20__IntegerHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array ? "resqml20:IntegerHdf5Array" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerHdf5Array(struct soap *soap, const char *URL, resqml20__IntegerHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array ? "resqml20:IntegerHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerHdf5Array(struct soap *soap, const char *URL, resqml20__IntegerHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array ? "resqml20:IntegerHdf5Array" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerHdf5Array(struct soap *soap, const char *URL, resqml20__IntegerHdf5Array const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerHdf5Array", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array ? "resqml20:IntegerHdf5Array" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerHdf5Array * SOAP_FMAC4 soap_get_resqml20__IntegerHdf5Array(struct soap*, resqml20__IntegerHdf5Array *, const char*, const char*);

inline int soap_read_resqml20__IntegerHdf5Array(struct soap *soap, resqml20__IntegerHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerHdf5Array(struct soap *soap, const char *URL, resqml20__IntegerHdf5Array *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerHdf5Array(struct soap *soap, resqml20__IntegerHdf5Array *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerHdf5Array(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__PropertyKindFacet(struct soap*, const char*, int, const resqml20__PropertyKindFacet *, const char*);
SOAP_FMAC3 resqml20__PropertyKindFacet * SOAP_FMAC4 soap_in_resqml20__PropertyKindFacet(struct soap*, const char*, resqml20__PropertyKindFacet *, const char*);
SOAP_FMAC1 resqml20__PropertyKindFacet * SOAP_FMAC2 soap_instantiate_resqml20__PropertyKindFacet(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__PropertyKindFacet * soap_new_resqml20__PropertyKindFacet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__PropertyKindFacet(soap, n, NULL, NULL, NULL);
}

inline resqml20__PropertyKindFacet * soap_new_req_resqml20__PropertyKindFacet(
	struct soap *soap,
	enum resqml20__Facet Facet,
	const std::string& Value)
{
	resqml20__PropertyKindFacet *_p = gsoap_resqml2_0_1::soap_new_resqml20__PropertyKindFacet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PropertyKindFacet::Facet = Facet;
		_p->resqml20__PropertyKindFacet::Value = Value;
	}
	return _p;
}

inline resqml20__PropertyKindFacet * soap_new_set_resqml20__PropertyKindFacet(
	struct soap *soap,
	enum resqml20__Facet Facet,
	const std::string& Value)
{
	resqml20__PropertyKindFacet *_p = gsoap_resqml2_0_1::soap_new_resqml20__PropertyKindFacet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__PropertyKindFacet::Facet = Facet;
		_p->resqml20__PropertyKindFacet::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml20__PropertyKindFacet(struct soap *soap, resqml20__PropertyKindFacet const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKindFacet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet ? "resqml20:PropertyKindFacet" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__PropertyKindFacet(struct soap *soap, const char *URL, resqml20__PropertyKindFacet const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKindFacet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet ? "resqml20:PropertyKindFacet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__PropertyKindFacet(struct soap *soap, const char *URL, resqml20__PropertyKindFacet const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKindFacet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet ? "resqml20:PropertyKindFacet" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__PropertyKindFacet(struct soap *soap, const char *URL, resqml20__PropertyKindFacet const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:PropertyKindFacet", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet ? "resqml20:PropertyKindFacet" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__PropertyKindFacet * SOAP_FMAC4 soap_get_resqml20__PropertyKindFacet(struct soap*, resqml20__PropertyKindFacet *, const char*, const char*);

inline int soap_read_resqml20__PropertyKindFacet(struct soap *soap, resqml20__PropertyKindFacet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__PropertyKindFacet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__PropertyKindFacet(struct soap *soap, const char *URL, resqml20__PropertyKindFacet *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__PropertyKindFacet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__PropertyKindFacet(struct soap *soap, resqml20__PropertyKindFacet *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__PropertyKindFacet(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__obj_USCOREDoubleTableLookup(struct soap*, const char*, int, const resqml20__obj_USCOREDoubleTableLookup *, const char*);
SOAP_FMAC3 resqml20__obj_USCOREDoubleTableLookup * SOAP_FMAC4 soap_in_resqml20__obj_USCOREDoubleTableLookup(struct soap*, const char*, resqml20__obj_USCOREDoubleTableLookup *, const char*);
SOAP_FMAC1 resqml20__obj_USCOREDoubleTableLookup * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDoubleTableLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__obj_USCOREDoubleTableLookup * soap_new_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__obj_USCOREDoubleTableLookup(soap, n, NULL, NULL, NULL);
}

inline resqml20__obj_USCOREDoubleTableLookup * soap_new_req_resqml20__obj_USCOREDoubleTableLookup(
	struct soap *soap,
	const std::vector<resqml20__DoubleLookup *> & Value,
	eml20__Citation *Citation__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREDoubleTableLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDoubleTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDoubleTableLookup::Value = Value;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline resqml20__obj_USCOREDoubleTableLookup * soap_new_set_resqml20__obj_USCOREDoubleTableLookup(
	struct soap *soap,
	const std::vector<resqml20__DoubleLookup *> & Value,
	const std::vector<resqml20__NameValuePair *> & ExtraMetadata__2,
	eml20__Citation *Citation__3,
	const std::vector<eml20__ObjectAlias *> & Aliases__3,
	eml20__CustomData *CustomData__3,
	const std::string& schemaVersion__3,
	const std::string& uuid__3)
{
	resqml20__obj_USCOREDoubleTableLookup *_p = gsoap_resqml2_0_1::soap_new_resqml20__obj_USCOREDoubleTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__obj_USCOREDoubleTableLookup::Value = Value;
		_p->resqml20__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata__2;
		_p->eml20__AbstractCitedDataObject::Citation = Citation__3;
		_p->eml20__AbstractCitedDataObject::Aliases = Aliases__3;
		_p->eml20__AbstractCitedDataObject::CustomData = CustomData__3;
		_p->eml20__AbstractCitedDataObject::schemaVersion = schemaVersion__3;
		_p->eml20__AbstractCitedDataObject::uuid = uuid__3;
	}
	return _p;
}

inline int soap_write_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup ? "resqml20:obj_DoubleTableLookup" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup ? "resqml20:obj_DoubleTableLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup ? "resqml20:obj_DoubleTableLookup" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:obj_DoubleTableLookup", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup ? "resqml20:obj_DoubleTableLookup" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__obj_USCOREDoubleTableLookup * SOAP_FMAC4 soap_get_resqml20__obj_USCOREDoubleTableLookup(struct soap*, resqml20__obj_USCOREDoubleTableLookup *, const char*, const char*);

inline int soap_read_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, resqml20__obj_USCOREDoubleTableLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__obj_USCOREDoubleTableLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, const char *URL, resqml20__obj_USCOREDoubleTableLookup *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDoubleTableLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__obj_USCOREDoubleTableLookup(struct soap *soap, resqml20__obj_USCOREDoubleTableLookup *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__obj_USCOREDoubleTableLookup(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerConstantArray(struct soap*, const char*, int, const resqml20__IntegerConstantArray *, const char*);
SOAP_FMAC3 resqml20__IntegerConstantArray * SOAP_FMAC4 soap_in_resqml20__IntegerConstantArray(struct soap*, const char*, resqml20__IntegerConstantArray *, const char*);
SOAP_FMAC1 resqml20__IntegerConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerConstantArray * soap_new_resqml20__IntegerConstantArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerConstantArray * soap_new_req_resqml20__IntegerConstantArray(
	struct soap *soap,
	LONG64 Value,
	ULONG64 Count)
{
	resqml20__IntegerConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerConstantArray::Value = Value;
		_p->resqml20__IntegerConstantArray::Count = Count;
	}
	return _p;
}

inline resqml20__IntegerConstantArray * soap_new_set_resqml20__IntegerConstantArray(
	struct soap *soap,
	LONG64 Value,
	ULONG64 Count)
{
	resqml20__IntegerConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerConstantArray::Value = Value;
		_p->resqml20__IntegerConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerConstantArray(struct soap *soap, resqml20__IntegerConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray ? "resqml20:IntegerConstantArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerConstantArray(struct soap *soap, const char *URL, resqml20__IntegerConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray ? "resqml20:IntegerConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerConstantArray(struct soap *soap, const char *URL, resqml20__IntegerConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray ? "resqml20:IntegerConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerConstantArray(struct soap *soap, const char *URL, resqml20__IntegerConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray ? "resqml20:IntegerConstantArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerConstantArray * SOAP_FMAC4 soap_get_resqml20__IntegerConstantArray(struct soap*, resqml20__IntegerConstantArray *, const char*, const char*);

inline int soap_read_resqml20__IntegerConstantArray(struct soap *soap, resqml20__IntegerConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerConstantArray(struct soap *soap, const char *URL, resqml20__IntegerConstantArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerConstantArray(struct soap *soap, resqml20__IntegerConstantArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BooleanConstantArray(struct soap*, const char*, int, const resqml20__BooleanConstantArray *, const char*);
SOAP_FMAC3 resqml20__BooleanConstantArray * SOAP_FMAC4 soap_in_resqml20__BooleanConstantArray(struct soap*, const char*, resqml20__BooleanConstantArray *, const char*);
SOAP_FMAC1 resqml20__BooleanConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__BooleanConstantArray * soap_new_resqml20__BooleanConstantArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__BooleanConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__BooleanConstantArray * soap_new_req_resqml20__BooleanConstantArray(
	struct soap *soap,
	bool Value,
	ULONG64 Count)
{
	resqml20__BooleanConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanConstantArray::Value = Value;
		_p->resqml20__BooleanConstantArray::Count = Count;
	}
	return _p;
}

inline resqml20__BooleanConstantArray * soap_new_set_resqml20__BooleanConstantArray(
	struct soap *soap,
	bool Value,
	ULONG64 Count)
{
	resqml20__BooleanConstantArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanConstantArray::Value = Value;
		_p->resqml20__BooleanConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml20__BooleanConstantArray(struct soap *soap, resqml20__BooleanConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray ? "resqml20:BooleanConstantArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BooleanConstantArray(struct soap *soap, const char *URL, resqml20__BooleanConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray ? "resqml20:BooleanConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BooleanConstantArray(struct soap *soap, const char *URL, resqml20__BooleanConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray ? "resqml20:BooleanConstantArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BooleanConstantArray(struct soap *soap, const char *URL, resqml20__BooleanConstantArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanConstantArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray ? "resqml20:BooleanConstantArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__BooleanConstantArray * SOAP_FMAC4 soap_get_resqml20__BooleanConstantArray(struct soap*, resqml20__BooleanConstantArray *, const char*, const char*);

inline int soap_read_resqml20__BooleanConstantArray(struct soap *soap, resqml20__BooleanConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BooleanConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BooleanConstantArray(struct soap *soap, const char *URL, resqml20__BooleanConstantArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BooleanConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BooleanConstantArray(struct soap *soap, resqml20__BooleanConstantArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BooleanConstantArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__BooleanArrayFromIndexArray(struct soap*, const char*, int, const resqml20__BooleanArrayFromIndexArray *, const char*);
SOAP_FMAC3 resqml20__BooleanArrayFromIndexArray * SOAP_FMAC4 soap_in_resqml20__BooleanArrayFromIndexArray(struct soap*, const char*, resqml20__BooleanArrayFromIndexArray *, const char*);
SOAP_FMAC1 resqml20__BooleanArrayFromIndexArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanArrayFromIndexArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__BooleanArrayFromIndexArray * soap_new_resqml20__BooleanArrayFromIndexArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__BooleanArrayFromIndexArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__BooleanArrayFromIndexArray * soap_new_req_resqml20__BooleanArrayFromIndexArray(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *Indices,
	bool IndexIsTrue)
{
	resqml20__BooleanArrayFromIndexArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanArrayFromIndexArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanArrayFromIndexArray::Count = Count;
		_p->resqml20__BooleanArrayFromIndexArray::Indices = Indices;
		_p->resqml20__BooleanArrayFromIndexArray::IndexIsTrue = IndexIsTrue;
	}
	return _p;
}

inline resqml20__BooleanArrayFromIndexArray * soap_new_set_resqml20__BooleanArrayFromIndexArray(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *Indices,
	bool IndexIsTrue)
{
	resqml20__BooleanArrayFromIndexArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__BooleanArrayFromIndexArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__BooleanArrayFromIndexArray::Count = Count;
		_p->resqml20__BooleanArrayFromIndexArray::Indices = Indices;
		_p->resqml20__BooleanArrayFromIndexArray::IndexIsTrue = IndexIsTrue;
	}
	return _p;
}

inline int soap_write_resqml20__BooleanArrayFromIndexArray(struct soap *soap, resqml20__BooleanArrayFromIndexArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromIndexArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray ? "resqml20:BooleanArrayFromIndexArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__BooleanArrayFromIndexArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromIndexArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromIndexArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray ? "resqml20:BooleanArrayFromIndexArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__BooleanArrayFromIndexArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromIndexArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromIndexArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray ? "resqml20:BooleanArrayFromIndexArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__BooleanArrayFromIndexArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromIndexArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:BooleanArrayFromIndexArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray ? "resqml20:BooleanArrayFromIndexArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__BooleanArrayFromIndexArray * SOAP_FMAC4 soap_get_resqml20__BooleanArrayFromIndexArray(struct soap*, resqml20__BooleanArrayFromIndexArray *, const char*, const char*);

inline int soap_read_resqml20__BooleanArrayFromIndexArray(struct soap *soap, resqml20__BooleanArrayFromIndexArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__BooleanArrayFromIndexArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__BooleanArrayFromIndexArray(struct soap *soap, const char *URL, resqml20__BooleanArrayFromIndexArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__BooleanArrayFromIndexArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__BooleanArrayFromIndexArray(struct soap *soap, resqml20__BooleanArrayFromIndexArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__BooleanArrayFromIndexArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, const char*, int, const resqml20__IntegerArrayFromBooleanMaskArray *, const char*);
SOAP_FMAC3 resqml20__IntegerArrayFromBooleanMaskArray * SOAP_FMAC4 soap_in_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, const char*, resqml20__IntegerArrayFromBooleanMaskArray *, const char*);
SOAP_FMAC1 resqml20__IntegerArrayFromBooleanMaskArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml20__IntegerArrayFromBooleanMaskArray * soap_new_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_resqml20__IntegerArrayFromBooleanMaskArray(soap, n, NULL, NULL, NULL);
}

inline resqml20__IntegerArrayFromBooleanMaskArray * soap_new_req_resqml20__IntegerArrayFromBooleanMaskArray(
	struct soap *soap,
	ULONG64 TotalIndexCount,
	resqml20__AbstractBooleanArray *Mask)
{
	resqml20__IntegerArrayFromBooleanMaskArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerArrayFromBooleanMaskArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerArrayFromBooleanMaskArray::TotalIndexCount = TotalIndexCount;
		_p->resqml20__IntegerArrayFromBooleanMaskArray::Mask = Mask;
	}
	return _p;
}

inline resqml20__IntegerArrayFromBooleanMaskArray * soap_new_set_resqml20__IntegerArrayFromBooleanMaskArray(
	struct soap *soap,
	ULONG64 TotalIndexCount,
	resqml20__AbstractBooleanArray *Mask)
{
	resqml20__IntegerArrayFromBooleanMaskArray *_p = gsoap_resqml2_0_1::soap_new_resqml20__IntegerArrayFromBooleanMaskArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml20__IntegerArrayFromBooleanMaskArray::TotalIndexCount = TotalIndexCount;
		_p->resqml20__IntegerArrayFromBooleanMaskArray::Mask = Mask;
	}
	return _p;
}

inline int soap_write_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, resqml20__IntegerArrayFromBooleanMaskArray const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerArrayFromBooleanMaskArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray ? "resqml20:IntegerArrayFromBooleanMaskArray" : NULL) || soap_end_send(soap))
		return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, const char *URL, resqml20__IntegerArrayFromBooleanMaskArray const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerArrayFromBooleanMaskArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray ? "resqml20:IntegerArrayFromBooleanMaskArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, const char *URL, resqml20__IntegerArrayFromBooleanMaskArray const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerArrayFromBooleanMaskArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray ? "resqml20:IntegerArrayFromBooleanMaskArray" : NULL) || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, const char *URL, resqml20__IntegerArrayFromBooleanMaskArray const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml20:IntegerArrayFromBooleanMaskArray", p->soap_type() == SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray ? "resqml20:IntegerArrayFromBooleanMaskArray" : NULL) || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 resqml20__IntegerArrayFromBooleanMaskArray * SOAP_FMAC4 soap_get_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, resqml20__IntegerArrayFromBooleanMaskArray *, const char*, const char*);

inline int soap_read_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, resqml20__IntegerArrayFromBooleanMaskArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_resqml20__IntegerArrayFromBooleanMaskArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, const char *URL, resqml20__IntegerArrayFromBooleanMaskArray *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_resqml20__IntegerArrayFromBooleanMaskArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_resqml20__IntegerArrayFromBooleanMaskArray(struct soap *soap, resqml20__IntegerArrayFromBooleanMaskArray *p)
{
	if (gsoap_resqml2_0_1::soap_read_resqml20__IntegerArrayFromBooleanMaskArray(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI_DEFINED

inline void soap_default_xsd__anyURI(struct soap *soap, std::string *p)
{
	(void)soap; /* appease -Wall -Werror */
	p->erase();
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);

#define soap_xsd__anyURI2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anyURI(soap, s, a) soap_s2stdchar((soap), (s), (a), 4, 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_new_xsd__anyURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__anyURI(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_xsd__anyURI(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_xsd__anyURI(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__anyURI(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__anyURI(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_xsd__anyURI(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__anyURI(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_xsd__anyURI(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_xsd__anyURI(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_xsd__anyURI(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__string_DEFINED

inline void soap_default_std__string(struct soap *soap, std::string *p)
{
	(void)soap; /* appease -Wall -Werror */
	p->erase();
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);

#define soap_std__string2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2std__string(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{
	std::string *_p = gsoap_resqml2_0_1::soap_new_std__string(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{
	std::string *_p = gsoap_resqml2_0_1::soap_new_std__string(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_std__string(struct soap *soap, std::string const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_std__string(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_std__string(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_std__string(struct soap *soap, const char *URL, std::string const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

inline int soap_read_std__string(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_std__string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_std__string(struct soap *soap, const char *URL, std::string *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_std__string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_std__string(struct soap *soap, std::string *p)
{
	if (gsoap_resqml2_0_1::soap_read_std__string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{
	struct SOAP_ENV__Fault *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{
	struct SOAP_ENV__Fault *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Fault(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Fault(struct soap *soap, const char *URL, struct SOAP_ENV__Fault *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_SOAP_ENV__Fault(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (gsoap_resqml2_0_1::soap_read_SOAP_ENV__Fault(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{
	struct SOAP_ENV__Reason *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{
	struct SOAP_ENV__Reason *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Reason(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Reason(struct soap *soap, const char *URL, struct SOAP_ENV__Reason *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_SOAP_ENV__Reason(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (gsoap_resqml2_0_1::soap_read_SOAP_ENV__Reason(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Detail(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Detail(struct soap *soap, const char *URL, struct SOAP_ENV__Detail *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_SOAP_ENV__Detail(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (gsoap_resqml2_0_1::soap_read_SOAP_ENV__Detail(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{
	struct SOAP_ENV__Code *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{
	struct SOAP_ENV__Code *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Code(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Code(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Code(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Code(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Code(struct soap *soap, const char *URL, struct SOAP_ENV__Code *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_SOAP_ENV__Code(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (gsoap_resqml2_0_1::soap_read_SOAP_ENV__Code(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = gsoap_resqml2_0_1::soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Header(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Header(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Header(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_SOAP_ENV__Header(soap, p), 0) || gsoap_resqml2_0_1::soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_SOAP_ENV__Header(struct soap *soap, const char *URL, struct SOAP_ENV__Header *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_SOAP_ENV__Header(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (gsoap_resqml2_0_1::soap_read_SOAP_ENV__Header(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___resqml20__OverlapVolume_sequence(struct soap*, struct __resqml20__OverlapVolume_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___resqml20__OverlapVolume_sequence(struct soap*, const struct __resqml20__OverlapVolume_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml20__OverlapVolume_sequence(struct soap*, const char*, int, const struct __resqml20__OverlapVolume_sequence *, const char*);
SOAP_FMAC3 struct __resqml20__OverlapVolume_sequence * SOAP_FMAC4 soap_in___resqml20__OverlapVolume_sequence(struct soap*, const char*, struct __resqml20__OverlapVolume_sequence *, const char*);
SOAP_FMAC1 struct __resqml20__OverlapVolume_sequence * SOAP_FMAC2 soap_instantiate___resqml20__OverlapVolume_sequence(struct soap*, int, const char*, const char*, size_t*);

inline struct __resqml20__OverlapVolume_sequence * soap_new___resqml20__OverlapVolume_sequence(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate___resqml20__OverlapVolume_sequence(soap, n, NULL, NULL, NULL);
}

inline struct __resqml20__OverlapVolume_sequence * soap_new_req___resqml20__OverlapVolume_sequence(
	struct soap *soap,
	enum eml20__VolumeUom VolumeUom,
	resqml20__AbstractDoubleArray *OverlapVolumes)
{
	struct __resqml20__OverlapVolume_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__OverlapVolume_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__OverlapVolume_sequence(soap, _p);
		_p->VolumeUom = VolumeUom;
		_p->OverlapVolumes = OverlapVolumes;
	}
	return _p;
}

inline struct __resqml20__OverlapVolume_sequence * soap_new_set___resqml20__OverlapVolume_sequence(
	struct soap *soap,
	enum eml20__VolumeUom VolumeUom,
	resqml20__AbstractDoubleArray *OverlapVolumes)
{
	struct __resqml20__OverlapVolume_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__OverlapVolume_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__OverlapVolume_sequence(soap, _p);
		_p->VolumeUom = VolumeUom;
		_p->OverlapVolumes = OverlapVolumes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___resqml20__OverlapVolume_sequence(struct soap*, const struct __resqml20__OverlapVolume_sequence *, const char*, const char*);

inline int soap_write___resqml20__OverlapVolume_sequence(struct soap *soap, struct __resqml20__OverlapVolume_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize___resqml20__OverlapVolume_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__OverlapVolume_sequence(soap, p, "-resqml20:OverlapVolume-sequence", "-resqml20:OverlapVolume-sequence") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___resqml20__OverlapVolume_sequence(struct soap *soap, const char *URL, struct __resqml20__OverlapVolume_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__OverlapVolume_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__OverlapVolume_sequence(soap, p, "-resqml20:OverlapVolume-sequence", "-resqml20:OverlapVolume-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___resqml20__OverlapVolume_sequence(struct soap *soap, const char *URL, struct __resqml20__OverlapVolume_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__OverlapVolume_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__OverlapVolume_sequence(soap, p, "-resqml20:OverlapVolume-sequence", "-resqml20:OverlapVolume-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___resqml20__OverlapVolume_sequence(struct soap *soap, const char *URL, struct __resqml20__OverlapVolume_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__OverlapVolume_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__OverlapVolume_sequence(soap, p, "-resqml20:OverlapVolume-sequence", "-resqml20:OverlapVolume-sequence") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __resqml20__OverlapVolume_sequence * SOAP_FMAC4 soap_get___resqml20__OverlapVolume_sequence(struct soap*, struct __resqml20__OverlapVolume_sequence *, const char*, const char*);

inline int soap_read___resqml20__OverlapVolume_sequence(struct soap *soap, struct __resqml20__OverlapVolume_sequence *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__OverlapVolume_sequence(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get___resqml20__OverlapVolume_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___resqml20__OverlapVolume_sequence(struct soap *soap, const char *URL, struct __resqml20__OverlapVolume_sequence *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read___resqml20__OverlapVolume_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___resqml20__OverlapVolume_sequence(struct soap *soap, struct __resqml20__OverlapVolume_sequence *p)
{
	if (gsoap_resqml2_0_1::soap_read___resqml20__OverlapVolume_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___resqml20__CellOverlap_sequence(struct soap*, struct __resqml20__CellOverlap_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___resqml20__CellOverlap_sequence(struct soap*, const struct __resqml20__CellOverlap_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml20__CellOverlap_sequence(struct soap*, const char*, int, const struct __resqml20__CellOverlap_sequence *, const char*);
SOAP_FMAC3 struct __resqml20__CellOverlap_sequence * SOAP_FMAC4 soap_in___resqml20__CellOverlap_sequence(struct soap*, const char*, struct __resqml20__CellOverlap_sequence *, const char*);
SOAP_FMAC1 struct __resqml20__CellOverlap_sequence * SOAP_FMAC2 soap_instantiate___resqml20__CellOverlap_sequence(struct soap*, int, const char*, const char*, size_t*);

inline struct __resqml20__CellOverlap_sequence * soap_new___resqml20__CellOverlap_sequence(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate___resqml20__CellOverlap_sequence(soap, n, NULL, NULL, NULL);
}

inline struct __resqml20__CellOverlap_sequence * soap_new_req___resqml20__CellOverlap_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentChildCellPairs)
{
	struct __resqml20__CellOverlap_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__CellOverlap_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__CellOverlap_sequence(soap, _p);
		_p->Count = Count;
		_p->ParentChildCellPairs = ParentChildCellPairs;
	}
	return _p;
}

inline struct __resqml20__CellOverlap_sequence * soap_new_set___resqml20__CellOverlap_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractIntegerArray *ParentChildCellPairs,
	resqml20__OverlapVolume *OverlapVolume)
{
	struct __resqml20__CellOverlap_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__CellOverlap_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__CellOverlap_sequence(soap, _p);
		_p->Count = Count;
		_p->ParentChildCellPairs = ParentChildCellPairs;
		_p->OverlapVolume = OverlapVolume;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___resqml20__CellOverlap_sequence(struct soap*, const struct __resqml20__CellOverlap_sequence *, const char*, const char*);

inline int soap_write___resqml20__CellOverlap_sequence(struct soap *soap, struct __resqml20__CellOverlap_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize___resqml20__CellOverlap_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__CellOverlap_sequence(soap, p, "-resqml20:CellOverlap-sequence", "-resqml20:CellOverlap-sequence") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___resqml20__CellOverlap_sequence(struct soap *soap, const char *URL, struct __resqml20__CellOverlap_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__CellOverlap_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__CellOverlap_sequence(soap, p, "-resqml20:CellOverlap-sequence", "-resqml20:CellOverlap-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___resqml20__CellOverlap_sequence(struct soap *soap, const char *URL, struct __resqml20__CellOverlap_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__CellOverlap_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__CellOverlap_sequence(soap, p, "-resqml20:CellOverlap-sequence", "-resqml20:CellOverlap-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___resqml20__CellOverlap_sequence(struct soap *soap, const char *URL, struct __resqml20__CellOverlap_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__CellOverlap_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__CellOverlap_sequence(soap, p, "-resqml20:CellOverlap-sequence", "-resqml20:CellOverlap-sequence") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __resqml20__CellOverlap_sequence * SOAP_FMAC4 soap_get___resqml20__CellOverlap_sequence(struct soap*, struct __resqml20__CellOverlap_sequence *, const char*, const char*);

inline int soap_read___resqml20__CellOverlap_sequence(struct soap *soap, struct __resqml20__CellOverlap_sequence *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__CellOverlap_sequence(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get___resqml20__CellOverlap_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___resqml20__CellOverlap_sequence(struct soap *soap, const char *URL, struct __resqml20__CellOverlap_sequence *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read___resqml20__CellOverlap_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___resqml20__CellOverlap_sequence(struct soap *soap, struct __resqml20__CellOverlap_sequence *p)
{
	if (gsoap_resqml2_0_1::soap_read___resqml20__CellOverlap_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___resqml20__KGaps_sequence(struct soap*, struct __resqml20__KGaps_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___resqml20__KGaps_sequence(struct soap*, const struct __resqml20__KGaps_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml20__KGaps_sequence(struct soap*, const char*, int, const struct __resqml20__KGaps_sequence *, const char*);
SOAP_FMAC3 struct __resqml20__KGaps_sequence * SOAP_FMAC4 soap_in___resqml20__KGaps_sequence(struct soap*, const char*, struct __resqml20__KGaps_sequence *, const char*);
SOAP_FMAC1 struct __resqml20__KGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml20__KGaps_sequence(struct soap*, int, const char*, const char*, size_t*);

inline struct __resqml20__KGaps_sequence * soap_new___resqml20__KGaps_sequence(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate___resqml20__KGaps_sequence(soap, n, NULL, NULL, NULL);
}

inline struct __resqml20__KGaps_sequence * soap_new_req___resqml20__KGaps_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractBooleanArray *GapAfterLayer)
{
	struct __resqml20__KGaps_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__KGaps_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__KGaps_sequence(soap, _p);
		_p->Count = Count;
		_p->GapAfterLayer = GapAfterLayer;
	}
	return _p;
}

inline struct __resqml20__KGaps_sequence * soap_new_set___resqml20__KGaps_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml20__AbstractBooleanArray *GapAfterLayer)
{
	struct __resqml20__KGaps_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__KGaps_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__KGaps_sequence(soap, _p);
		_p->Count = Count;
		_p->GapAfterLayer = GapAfterLayer;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___resqml20__KGaps_sequence(struct soap*, const struct __resqml20__KGaps_sequence *, const char*, const char*);

inline int soap_write___resqml20__KGaps_sequence(struct soap *soap, struct __resqml20__KGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize___resqml20__KGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__KGaps_sequence(soap, p, "-resqml20:KGaps-sequence", "-resqml20:KGaps-sequence") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___resqml20__KGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__KGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__KGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__KGaps_sequence(soap, p, "-resqml20:KGaps-sequence", "-resqml20:KGaps-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___resqml20__KGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__KGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__KGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__KGaps_sequence(soap, p, "-resqml20:KGaps-sequence", "-resqml20:KGaps-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___resqml20__KGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__KGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__KGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__KGaps_sequence(soap, p, "-resqml20:KGaps-sequence", "-resqml20:KGaps-sequence") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __resqml20__KGaps_sequence * SOAP_FMAC4 soap_get___resqml20__KGaps_sequence(struct soap*, struct __resqml20__KGaps_sequence *, const char*, const char*);

inline int soap_read___resqml20__KGaps_sequence(struct soap *soap, struct __resqml20__KGaps_sequence *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__KGaps_sequence(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get___resqml20__KGaps_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___resqml20__KGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__KGaps_sequence *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read___resqml20__KGaps_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___resqml20__KGaps_sequence(struct soap *soap, struct __resqml20__KGaps_sequence *p)
{
	if (gsoap_resqml2_0_1::soap_read___resqml20__KGaps_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___resqml20__IjGaps_sequence(struct soap*, struct __resqml20__IjGaps_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___resqml20__IjGaps_sequence(struct soap*, const struct __resqml20__IjGaps_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml20__IjGaps_sequence(struct soap*, const char*, int, const struct __resqml20__IjGaps_sequence *, const char*);
SOAP_FMAC3 struct __resqml20__IjGaps_sequence * SOAP_FMAC4 soap_in___resqml20__IjGaps_sequence(struct soap*, const char*, struct __resqml20__IjGaps_sequence *, const char*);
SOAP_FMAC1 struct __resqml20__IjGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml20__IjGaps_sequence(struct soap*, int, const char*, const char*, size_t*);

inline struct __resqml20__IjGaps_sequence * soap_new___resqml20__IjGaps_sequence(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate___resqml20__IjGaps_sequence(soap, n, NULL, NULL, NULL);
}

inline struct __resqml20__IjGaps_sequence * soap_new_req___resqml20__IjGaps_sequence(
	struct soap *soap,
	ULONG64 SplitPillarCount,
	resqml20__AbstractIntegerArray *ParentPillarIndices,
	resqml20__ResqmlJaggedArray *ColumnsPerSplitPillar)
{
	struct __resqml20__IjGaps_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__IjGaps_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__IjGaps_sequence(soap, _p);
		_p->SplitPillarCount = SplitPillarCount;
		_p->ParentPillarIndices = ParentPillarIndices;
		_p->ColumnsPerSplitPillar = ColumnsPerSplitPillar;
	}
	return _p;
}

inline struct __resqml20__IjGaps_sequence * soap_new_set___resqml20__IjGaps_sequence(
	struct soap *soap,
	ULONG64 SplitPillarCount,
	resqml20__AbstractIntegerArray *ParentPillarIndices,
	resqml20__ResqmlJaggedArray *ColumnsPerSplitPillar,
	resqml20__IjSplitColumnEdges *IjSplitColumnEdges)
{
	struct __resqml20__IjGaps_sequence *_p = gsoap_resqml2_0_1::soap_new___resqml20__IjGaps_sequence(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__IjGaps_sequence(soap, _p);
		_p->SplitPillarCount = SplitPillarCount;
		_p->ParentPillarIndices = ParentPillarIndices;
		_p->ColumnsPerSplitPillar = ColumnsPerSplitPillar;
		_p->IjSplitColumnEdges = IjSplitColumnEdges;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___resqml20__IjGaps_sequence(struct soap*, const struct __resqml20__IjGaps_sequence *, const char*, const char*);

inline int soap_write___resqml20__IjGaps_sequence(struct soap *soap, struct __resqml20__IjGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize___resqml20__IjGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__IjGaps_sequence(soap, p, "-resqml20:IjGaps-sequence", "-resqml20:IjGaps-sequence") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT___resqml20__IjGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__IjGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__IjGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__IjGaps_sequence(soap, p, "-resqml20:IjGaps-sequence", "-resqml20:IjGaps-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH___resqml20__IjGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__IjGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__IjGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__IjGaps_sequence(soap, p, "-resqml20:IjGaps-sequence", "-resqml20:IjGaps-sequence") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send___resqml20__IjGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__IjGaps_sequence const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize___resqml20__IjGaps_sequence(soap, p), 0) || gsoap_resqml2_0_1::soap_put___resqml20__IjGaps_sequence(soap, p, "-resqml20:IjGaps-sequence", "-resqml20:IjGaps-sequence") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct __resqml20__IjGaps_sequence * SOAP_FMAC4 soap_get___resqml20__IjGaps_sequence(struct soap*, struct __resqml20__IjGaps_sequence *, const char*, const char*);

inline int soap_read___resqml20__IjGaps_sequence(struct soap *soap, struct __resqml20__IjGaps_sequence *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default___resqml20__IjGaps_sequence(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get___resqml20__IjGaps_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET___resqml20__IjGaps_sequence(struct soap *soap, const char *URL, struct __resqml20__IjGaps_sequence *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read___resqml20__IjGaps_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv___resqml20__IjGaps_sequence(struct soap *soap, struct __resqml20__IjGaps_sequence *p)
{
	if (gsoap_resqml2_0_1::soap_read___resqml20__IjGaps_sequence(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_xsd__dateTime_DEFINED
#define SOAP_TYPE_xsd__dateTime_DEFINED

}
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__dateTime(struct soap*, struct tm *);
SOAP_FMAC1 void SOAP_FMAC2 soap_serialize_xsd__dateTime(struct soap*, const struct tm *);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__dateTime2s(struct soap*, struct tm);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__dateTime(struct soap*, const char*, int, const struct tm *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__dateTime(struct soap*, const char*, struct tm *);
SOAP_FMAC1 struct tm * SOAP_FMAC2 soap_in_xsd__dateTime(struct soap*, const char*, struct tm *, const char*);

namespace gsoap_resqml2_0_1 {
SOAP_FMAC1 struct tm * SOAP_FMAC2 soap_instantiate_xsd__dateTime(struct soap*, int, const char*, const char*, size_t*);

inline struct tm * soap_new_xsd__dateTime(struct soap *soap, int n = -1)
{
	return soap_instantiate_xsd__dateTime(soap, n, NULL, NULL, NULL);
}

inline struct tm * soap_new_req_xsd__dateTime(
	struct soap *soap,
	int tm_sec,
	int tm_min,
	int tm_hour,
	int tm_mday,
	int tm_mon,
	int tm_year,
	int tm_isdst)
{
	struct tm *_p = soap_new_xsd__dateTime(soap);
	if (_p)
	{	
		_p->tm_sec = tm_sec;
		_p->tm_min = tm_min;
		_p->tm_hour = tm_hour;
		_p->tm_mday = tm_mday;
		_p->tm_mon = tm_mon;
		_p->tm_year = tm_year;
		_p->tm_isdst = tm_isdst;
	}
	return _p;
}

inline struct tm * soap_new_set_xsd__dateTime(
	struct soap *soap,
	int tm_sec,
	int tm_min,
	int tm_hour,
	int tm_mday,
	int tm_mon,
	int tm_year,
	int tm_isdst)
{
	struct tm *_p = soap_new_xsd__dateTime(soap);
	if (_p)
	{	
		_p->tm_sec = tm_sec;
		_p->tm_min = tm_min;
		_p->tm_hour = tm_hour;
		_p->tm_mday = tm_mday;
		_p->tm_mon = tm_mon;
		_p->tm_year = tm_year;
		_p->tm_isdst = tm_isdst;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__dateTime(struct soap*, const struct tm *, const char*, const char*);

inline int soap_write_xsd__dateTime(struct soap *soap, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (soap_serialize_xsd__dateTime(soap, p), 0) || soap_put_xsd__dateTime(soap, p, "xsd:dateTime", "xsd:dateTime") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_xsd__dateTime(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, p), 0) || soap_put_xsd__dateTime(soap, p, "xsd:dateTime", "xsd:dateTime") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_xsd__dateTime(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, p), 0) || soap_put_xsd__dateTime(soap, p, "xsd:dateTime", "xsd:dateTime") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_xsd__dateTime(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, p), 0) || soap_put_xsd__dateTime(soap, p, "xsd:dateTime", "xsd:dateTime") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct tm * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, struct tm *, const char*, const char*);

inline int soap_read_xsd__dateTime(struct soap *soap, struct tm *p)
{
	if (p)
	{	soap_default_xsd__dateTime(soap, p);
		if (soap_begin_recv(soap) || soap_get_xsd__dateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_xsd__dateTime(struct soap *soap, const char *URL, struct tm *p)
{
	if (soap_GET(soap, URL, NULL) || soap_read_xsd__dateTime(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_xsd__dateTime(struct soap *soap, struct tm *p)
{
	if (soap_read_xsd__dateTime(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_tm_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_tm_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tm(struct soap*, struct tm *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tm(struct soap*, const struct tm *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tm(struct soap*, const char*, int, const struct tm *, const char*);
SOAP_FMAC3 struct tm * SOAP_FMAC4 soap_in_tm(struct soap*, const char*, struct tm *, const char*);
SOAP_FMAC1 struct tm * SOAP_FMAC2 soap_instantiate_tm(struct soap*, int, const char*, const char*, size_t*);

inline struct tm * soap_new_tm(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_tm(soap, n, NULL, NULL, NULL);
}

inline struct tm * soap_new_req_tm(
	struct soap *soap,
	int tm_sec,
	int tm_min,
	int tm_hour,
	int tm_mday,
	int tm_mon,
	int tm_year,
	int tm_isdst)
{
	struct tm *_p = gsoap_resqml2_0_1::soap_new_tm(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_tm(soap, _p);
		_p->tm_sec = tm_sec;
		_p->tm_min = tm_min;
		_p->tm_hour = tm_hour;
		_p->tm_mday = tm_mday;
		_p->tm_mon = tm_mon;
		_p->tm_year = tm_year;
		_p->tm_isdst = tm_isdst;
	}
	return _p;
}

inline struct tm * soap_new_set_tm(
	struct soap *soap,
	int tm_sec,
	int tm_min,
	int tm_hour,
	int tm_mday,
	int tm_mon,
	int tm_year,
	int tm_isdst)
{
	struct tm *_p = gsoap_resqml2_0_1::soap_new_tm(soap);
	if (_p)
	{	gsoap_resqml2_0_1::soap_default_tm(soap, _p);
		_p->tm_sec = tm_sec;
		_p->tm_min = tm_min;
		_p->tm_hour = tm_hour;
		_p->tm_mday = tm_mday;
		_p->tm_mon = tm_mon;
		_p->tm_year = tm_year;
		_p->tm_isdst = tm_isdst;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tm(struct soap*, const struct tm *, const char*, const char*);

inline int soap_write_tm(struct soap *soap, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_begin_send(soap) || (gsoap_resqml2_0_1::soap_serialize_tm(soap, p), 0) || gsoap_resqml2_0_1::soap_put_tm(soap, p, "tm", "tm") || soap_end_send(soap))
			return soap->error;
	return SOAP_OK;
}

inline int soap_PUT_tm(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_tm(soap, p), 0) || gsoap_resqml2_0_1::soap_put_tm(soap, p, "tm", "tm") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_tm(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_tm(soap, p), 0) || gsoap_resqml2_0_1::soap_put_tm(soap, p, "tm", "tm") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_tm(struct soap *soap, const char *URL, struct tm const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (gsoap_resqml2_0_1::soap_serialize_tm(soap, p), 0) || gsoap_resqml2_0_1::soap_put_tm(soap, p, "tm", "tm") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 struct tm * SOAP_FMAC4 soap_get_tm(struct soap*, struct tm *, const char*, const char*);

inline int soap_read_tm(struct soap *soap, struct tm *p)
{
	if (p)
	{	gsoap_resqml2_0_1::soap_default_tm(soap, p);
		if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_tm(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_tm(struct soap *soap, const char *URL, struct tm *p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_tm(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_tm(struct soap *soap, struct tm *p)
{
	if (gsoap_resqml2_0_1::soap_read_tm(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TimeIndices(struct soap*, resqml20__TimeIndices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TimeIndices(struct soap*, const char *, int, resqml20__TimeIndices *const*, const char *);
SOAP_FMAC3 resqml20__TimeIndices ** SOAP_FMAC4 soap_in_PointerToresqml20__TimeIndices(struct soap*, const char*, resqml20__TimeIndices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TimeIndices(struct soap*, resqml20__TimeIndices *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TimeIndices ** SOAP_FMAC4 soap_get_PointerToresqml20__TimeIndices(struct soap*, resqml20__TimeIndices **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SeismicLatticeSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SeismicLatticeSetFeature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SeismicLatticeSetFeature(struct soap*, resqml20__SeismicLatticeSetFeature *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SeismicLatticeSetFeature(struct soap*, const char *, int, resqml20__SeismicLatticeSetFeature *const*, const char *);
SOAP_FMAC3 resqml20__SeismicLatticeSetFeature ** SOAP_FMAC4 soap_in_PointerToresqml20__SeismicLatticeSetFeature(struct soap*, const char*, resqml20__SeismicLatticeSetFeature **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SeismicLatticeSetFeature(struct soap*, resqml20__SeismicLatticeSetFeature *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SeismicLatticeSetFeature ** SOAP_FMAC4 soap_get_PointerToresqml20__SeismicLatticeSetFeature(struct soap*, resqml20__SeismicLatticeSetFeature **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SealedContactRepresentationPart(struct soap*, resqml20__SealedContactRepresentationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SealedContactRepresentationPart(struct soap*, const char *, int, resqml20__SealedContactRepresentationPart *const*, const char *);
SOAP_FMAC3 resqml20__SealedContactRepresentationPart ** SOAP_FMAC4 soap_in_PointerToresqml20__SealedContactRepresentationPart(struct soap*, const char*, resqml20__SealedContactRepresentationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SealedContactRepresentationPart(struct soap*, resqml20__SealedContactRepresentationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SealedContactRepresentationPart ** SOAP_FMAC4 soap_get_PointerToresqml20__SealedContactRepresentationPart(struct soap*, resqml20__SealedContactRepresentationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractContactRepresentationPart(struct soap*, resqml20__AbstractContactRepresentationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractContactRepresentationPart(struct soap*, const char *, int, resqml20__AbstractContactRepresentationPart *const*, const char *);
SOAP_FMAC3 resqml20__AbstractContactRepresentationPart ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractContactRepresentationPart(struct soap*, const char*, resqml20__AbstractContactRepresentationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractContactRepresentationPart(struct soap*, resqml20__AbstractContactRepresentationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractContactRepresentationPart ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractContactRepresentationPart(struct soap*, resqml20__AbstractContactRepresentationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, resqml20__GeologicUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, const char *, int, resqml20__GeologicUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml20__GeologicUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, const char*, resqml20__GeologicUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, resqml20__GeologicUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml20__GeologicUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, resqml20__GeologicUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, resqml20__StratigraphicUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char *, int, resqml20__StratigraphicUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml20__StratigraphicUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char*, resqml20__StratigraphicUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, resqml20__StratigraphicUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml20__StratigraphicUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, resqml20__StratigraphicUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WitsmlWellboreReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WitsmlWellboreReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__WitsmlWellboreReference(struct soap*, resqml20__WitsmlWellboreReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__WitsmlWellboreReference(struct soap*, const char *, int, resqml20__WitsmlWellboreReference *const*, const char *);
SOAP_FMAC3 resqml20__WitsmlWellboreReference ** SOAP_FMAC4 soap_in_PointerToresqml20__WitsmlWellboreReference(struct soap*, const char*, resqml20__WitsmlWellboreReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__WitsmlWellboreReference(struct soap*, resqml20__WitsmlWellboreReference *const*, const char*, const char*);
SOAP_FMAC3 resqml20__WitsmlWellboreReference ** SOAP_FMAC4 soap_get_PointerToresqml20__WitsmlWellboreReference(struct soap*, resqml20__WitsmlWellboreReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Grid2dPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Grid2dPatch(struct soap*, resqml20__Grid2dPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Grid2dPatch(struct soap*, const char *, int, resqml20__Grid2dPatch *const*, const char *);
SOAP_FMAC3 resqml20__Grid2dPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__Grid2dPatch(struct soap*, const char*, resqml20__Grid2dPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Grid2dPatch(struct soap*, resqml20__Grid2dPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Grid2dPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__Grid2dPatch(struct soap*, resqml20__Grid2dPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeRegion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__VolumeRegion(struct soap*, resqml20__VolumeRegion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__VolumeRegion(struct soap*, const char *, int, resqml20__VolumeRegion *const*, const char *);
SOAP_FMAC3 resqml20__VolumeRegion ** SOAP_FMAC4 soap_in_PointerToresqml20__VolumeRegion(struct soap*, const char*, resqml20__VolumeRegion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__VolumeRegion(struct soap*, resqml20__VolumeRegion *const*, const char*, const char*);
SOAP_FMAC3 resqml20__VolumeRegion ** SOAP_FMAC4 soap_get_PointerToresqml20__VolumeRegion(struct soap*, resqml20__VolumeRegion **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ContactIdentity(struct soap*, resqml20__ContactIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ContactIdentity(struct soap*, const char *, int, resqml20__ContactIdentity *const*, const char *);
SOAP_FMAC3 resqml20__ContactIdentity ** SOAP_FMAC4 soap_in_PointerToresqml20__ContactIdentity(struct soap*, const char*, resqml20__ContactIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ContactIdentity(struct soap*, resqml20__ContactIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ContactIdentity ** SOAP_FMAC4 soap_get_PointerToresqml20__ContactIdentity(struct soap*, resqml20__ContactIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractPlaneGeometry(struct soap*, resqml20__AbstractPlaneGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractPlaneGeometry(struct soap*, const char *, int, resqml20__AbstractPlaneGeometry *const*, const char *);
SOAP_FMAC3 resqml20__AbstractPlaneGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractPlaneGeometry(struct soap*, const char*, resqml20__AbstractPlaneGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractPlaneGeometry(struct soap*, resqml20__AbstractPlaneGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractPlaneGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractPlaneGeometry(struct soap*, resqml20__AbstractPlaneGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TrianglePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TrianglePatch(struct soap*, resqml20__TrianglePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TrianglePatch(struct soap*, const char *, int, resqml20__TrianglePatch *const*, const char *);
SOAP_FMAC3 resqml20__TrianglePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__TrianglePatch(struct soap*, const char*, resqml20__TrianglePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TrianglePatch(struct soap*, resqml20__TrianglePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TrianglePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__TrianglePatch(struct soap*, resqml20__TrianglePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__WellboreMarker(struct soap*, resqml20__WellboreMarker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__WellboreMarker(struct soap*, const char *, int, resqml20__WellboreMarker *const*, const char *);
SOAP_FMAC3 resqml20__WellboreMarker ** SOAP_FMAC4 soap_in_PointerToresqml20__WellboreMarker(struct soap*, const char*, resqml20__WellboreMarker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__WellboreMarker(struct soap*, resqml20__WellboreMarker *const*, const char*, const char*);
SOAP_FMAC3 resqml20__WellboreMarker ** SOAP_FMAC4 soap_get_PointerToresqml20__WellboreMarker(struct soap*, resqml20__WellboreMarker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DepositionMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DepositionMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__DepositionMode(struct soap*, enum resqml20__DepositionMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__DepositionMode(struct soap*, const char *, int, enum resqml20__DepositionMode *const*, const char *);
SOAP_FMAC3 enum resqml20__DepositionMode ** SOAP_FMAC4 soap_in_PointerToresqml20__DepositionMode(struct soap*, const char*, enum resqml20__DepositionMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__DepositionMode(struct soap*, enum resqml20__DepositionMode *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__DepositionMode ** SOAP_FMAC4 soap_get_PointerToresqml20__DepositionMode(struct soap*, enum resqml20__DepositionMode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SequenceStratigraphySurface_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SequenceStratigraphySurface_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SequenceStratigraphySurface(struct soap*, enum resqml20__SequenceStratigraphySurface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SequenceStratigraphySurface(struct soap*, const char *, int, enum resqml20__SequenceStratigraphySurface *const*, const char *);
SOAP_FMAC3 enum resqml20__SequenceStratigraphySurface ** SOAP_FMAC4 soap_in_PointerToresqml20__SequenceStratigraphySurface(struct soap*, const char*, enum resqml20__SequenceStratigraphySurface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SequenceStratigraphySurface(struct soap*, enum resqml20__SequenceStratigraphySurface *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__SequenceStratigraphySurface ** SOAP_FMAC4 soap_get_PointerToresqml20__SequenceStratigraphySurface(struct soap*, enum resqml20__SequenceStratigraphySurface **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Geobody3dShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Geobody3dShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Geobody3dShape(struct soap*, enum resqml20__Geobody3dShape *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Geobody3dShape(struct soap*, const char *, int, enum resqml20__Geobody3dShape *const*, const char *);
SOAP_FMAC3 enum resqml20__Geobody3dShape ** SOAP_FMAC4 soap_in_PointerToresqml20__Geobody3dShape(struct soap*, const char*, enum resqml20__Geobody3dShape **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Geobody3dShape(struct soap*, enum resqml20__Geobody3dShape *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__Geobody3dShape ** SOAP_FMAC4 soap_get_PointerToresqml20__Geobody3dShape(struct soap*, enum resqml20__Geobody3dShape **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FaultThrow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__FaultThrow(struct soap*, resqml20__FaultThrow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__FaultThrow(struct soap*, const char *, int, resqml20__FaultThrow *const*, const char *);
SOAP_FMAC3 resqml20__FaultThrow ** SOAP_FMAC4 soap_in_PointerToresqml20__FaultThrow(struct soap*, const char*, resqml20__FaultThrow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__FaultThrow(struct soap*, resqml20__FaultThrow *const*, const char*, const char*);
SOAP_FMAC3 resqml20__FaultThrow ** SOAP_FMAC4 soap_get_PointerToresqml20__FaultThrow(struct soap*, resqml20__FaultThrow **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__LengthMeasure(struct soap*, eml20__LengthMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__LengthMeasure(struct soap*, const char *, int, eml20__LengthMeasure *const*, const char *);
SOAP_FMAC3 eml20__LengthMeasure ** SOAP_FMAC4 soap_in_PointerToeml20__LengthMeasure(struct soap*, const char*, eml20__LengthMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__LengthMeasure(struct soap*, eml20__LengthMeasure *const*, const char*, const char*);
SOAP_FMAC3 eml20__LengthMeasure ** SOAP_FMAC4 soap_get_PointerToeml20__LengthMeasure(struct soap*, eml20__LengthMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__HorizonInterpretationIndex(struct soap*, resqml20__HorizonInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__HorizonInterpretationIndex(struct soap*, const char *, int, resqml20__HorizonInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml20__HorizonInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml20__HorizonInterpretationIndex(struct soap*, const char*, resqml20__HorizonInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__HorizonInterpretationIndex(struct soap*, resqml20__HorizonInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml20__HorizonInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml20__HorizonInterpretationIndex(struct soap*, resqml20__HorizonInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Phase_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Phase_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Phase(struct soap*, enum resqml20__Phase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Phase(struct soap*, const char *, int, enum resqml20__Phase *const*, const char *);
SOAP_FMAC3 enum resqml20__Phase ** SOAP_FMAC4 soap_in_PointerToresqml20__Phase(struct soap*, const char*, enum resqml20__Phase **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Phase(struct soap*, enum resqml20__Phase *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__Phase ** SOAP_FMAC4 soap_get_PointerToresqml20__Phase(struct soap*, enum resqml20__Phase **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RockFluidUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RockFluidUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__RockFluidUnitInterpretationIndex(struct soap*, resqml20__RockFluidUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__RockFluidUnitInterpretationIndex(struct soap*, const char *, int, resqml20__RockFluidUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml20__RockFluidUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml20__RockFluidUnitInterpretationIndex(struct soap*, const char*, resqml20__RockFluidUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__RockFluidUnitInterpretationIndex(struct soap*, resqml20__RockFluidUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml20__RockFluidUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml20__RockFluidUnitInterpretationIndex(struct soap*, resqml20__RockFluidUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, resqml20__GpGridUnstructuredGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, const char *, int, resqml20__GpGridUnstructuredGridPatch *const*, const char *);
SOAP_FMAC3 resqml20__GpGridUnstructuredGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, const char*, resqml20__GpGridUnstructuredGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, resqml20__GpGridUnstructuredGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__GpGridUnstructuredGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, resqml20__GpGridUnstructuredGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GpGridColumnLayerGrid(struct soap*, resqml20__GpGridColumnLayerGrid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GpGridColumnLayerGrid(struct soap*, const char *, int, resqml20__GpGridColumnLayerGrid *const*, const char *);
SOAP_FMAC3 resqml20__GpGridColumnLayerGrid ** SOAP_FMAC4 soap_in_PointerToresqml20__GpGridColumnLayerGrid(struct soap*, const char*, resqml20__GpGridColumnLayerGrid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GpGridColumnLayerGrid(struct soap*, resqml20__GpGridColumnLayerGrid *const*, const char*, const char*);
SOAP_FMAC3 resqml20__GpGridColumnLayerGrid ** SOAP_FMAC4 soap_get_PointerToresqml20__GpGridColumnLayerGrid(struct soap*, resqml20__GpGridColumnLayerGrid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlinePolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlinePolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__StreamlinePolylineSetPatch(struct soap*, resqml20__StreamlinePolylineSetPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__StreamlinePolylineSetPatch(struct soap*, const char *, int, resqml20__StreamlinePolylineSetPatch *const*, const char *);
SOAP_FMAC3 resqml20__StreamlinePolylineSetPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__StreamlinePolylineSetPatch(struct soap*, const char*, resqml20__StreamlinePolylineSetPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__StreamlinePolylineSetPatch(struct soap*, resqml20__StreamlinePolylineSetPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__StreamlinePolylineSetPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__StreamlinePolylineSetPatch(struct soap*, resqml20__StreamlinePolylineSetPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlineWellbores_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlineWellbores_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__StreamlineWellbores(struct soap*, resqml20__StreamlineWellbores *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__StreamlineWellbores(struct soap*, const char *, int, resqml20__StreamlineWellbores *const*, const char *);
SOAP_FMAC3 resqml20__StreamlineWellbores ** SOAP_FMAC4 soap_in_PointerToresqml20__StreamlineWellbores(struct soap*, const char*, resqml20__StreamlineWellbores **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__StreamlineWellbores(struct soap*, resqml20__StreamlineWellbores *const*, const char*, const char*);
SOAP_FMAC3 resqml20__StreamlineWellbores ** SOAP_FMAC4 soap_get_PointerToresqml20__StreamlineWellbores(struct soap*, resqml20__StreamlineWellbores **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchBoundaries_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PatchBoundaries(struct soap*, resqml20__PatchBoundaries *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PatchBoundaries(struct soap*, const char *, int, resqml20__PatchBoundaries *const*, const char *);
SOAP_FMAC3 resqml20__PatchBoundaries ** SOAP_FMAC4 soap_in_PointerToresqml20__PatchBoundaries(struct soap*, const char*, resqml20__PatchBoundaries **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PatchBoundaries(struct soap*, resqml20__PatchBoundaries *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PatchBoundaries ** SOAP_FMAC4 soap_get_PointerToresqml20__PatchBoundaries(struct soap*, resqml20__PatchBoundaries **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PolylineSetPatch(struct soap*, resqml20__PolylineSetPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PolylineSetPatch(struct soap*, const char *, int, resqml20__PolylineSetPatch *const*, const char *);
SOAP_FMAC3 resqml20__PolylineSetPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__PolylineSetPatch(struct soap*, const char*, resqml20__PolylineSetPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PolylineSetPatch(struct soap*, resqml20__PolylineSetPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PolylineSetPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__PolylineSetPatch(struct soap*, resqml20__PolylineSetPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__LineRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__LineRole_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__LineRole(struct soap*, enum resqml20__LineRole *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__LineRole(struct soap*, const char *, int, enum resqml20__LineRole *const*, const char *);
SOAP_FMAC3 enum resqml20__LineRole ** SOAP_FMAC4 soap_in_PointerToresqml20__LineRole(struct soap*, const char*, enum resqml20__LineRole **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__LineRole(struct soap*, enum resqml20__LineRole *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__LineRole ** SOAP_FMAC4 soap_get_PointerToresqml20__LineRole(struct soap*, enum resqml20__LineRole **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__NodePatch(struct soap*, resqml20__NodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__NodePatch(struct soap*, const char *, int, resqml20__NodePatch *const*, const char *);
SOAP_FMAC3 resqml20__NodePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__NodePatch(struct soap*, const char*, resqml20__NodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__NodePatch(struct soap*, resqml20__NodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__NodePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__NodePatch(struct soap*, resqml20__NodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreTrajectoryParentIntersection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreTrajectoryParentIntersection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__WellboreTrajectoryParentIntersection(struct soap*, resqml20__WellboreTrajectoryParentIntersection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__WellboreTrajectoryParentIntersection(struct soap*, const char *, int, resqml20__WellboreTrajectoryParentIntersection *const*, const char *);
SOAP_FMAC3 resqml20__WellboreTrajectoryParentIntersection ** SOAP_FMAC4 soap_in_PointerToresqml20__WellboreTrajectoryParentIntersection(struct soap*, const char*, resqml20__WellboreTrajectoryParentIntersection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__WellboreTrajectoryParentIntersection(struct soap*, resqml20__WellboreTrajectoryParentIntersection *const*, const char*, const char*);
SOAP_FMAC3 resqml20__WellboreTrajectoryParentIntersection ** SOAP_FMAC4 soap_get_PointerToresqml20__WellboreTrajectoryParentIntersection(struct soap*, resqml20__WellboreTrajectoryParentIntersection **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractParametricLineGeometry(struct soap*, resqml20__AbstractParametricLineGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractParametricLineGeometry(struct soap*, const char *, int, resqml20__AbstractParametricLineGeometry *const*, const char *);
SOAP_FMAC3 resqml20__AbstractParametricLineGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractParametricLineGeometry(struct soap*, const char*, resqml20__AbstractParametricLineGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractParametricLineGeometry(struct soap*, resqml20__AbstractParametricLineGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractParametricLineGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractParametricLineGeometry(struct soap*, resqml20__AbstractParametricLineGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__MdDomain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__MdDomain_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__MdDomain(struct soap*, enum resqml20__MdDomain *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__MdDomain(struct soap*, const char *, int, enum resqml20__MdDomain *const*, const char *);
SOAP_FMAC3 enum resqml20__MdDomain ** SOAP_FMAC4 soap_in_PointerToresqml20__MdDomain(struct soap*, const char*, enum resqml20__MdDomain **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__MdDomain(struct soap*, enum resqml20__MdDomain *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__MdDomain ** SOAP_FMAC4 soap_get_PointerToresqml20__MdDomain(struct soap*, enum resqml20__MdDomain **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalStratigraphicUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IntervalStratigraphicUnits(struct soap*, resqml20__IntervalStratigraphicUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IntervalStratigraphicUnits(struct soap*, const char *, int, resqml20__IntervalStratigraphicUnits *const*, const char *);
SOAP_FMAC3 resqml20__IntervalStratigraphicUnits ** SOAP_FMAC4 soap_in_PointerToresqml20__IntervalStratigraphicUnits(struct soap*, const char*, resqml20__IntervalStratigraphicUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IntervalStratigraphicUnits(struct soap*, resqml20__IntervalStratigraphicUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IntervalStratigraphicUnits ** SOAP_FMAC4 soap_get_PointerToresqml20__IntervalStratigraphicUnits(struct soap*, resqml20__IntervalStratigraphicUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitMaterialImplacement_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitMaterialImplacement_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GeologicUnitMaterialImplacement(struct soap*, enum resqml20__GeologicUnitMaterialImplacement *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GeologicUnitMaterialImplacement(struct soap*, const char *, int, enum resqml20__GeologicUnitMaterialImplacement *const*, const char *);
SOAP_FMAC3 enum resqml20__GeologicUnitMaterialImplacement ** SOAP_FMAC4 soap_in_PointerToresqml20__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml20__GeologicUnitMaterialImplacement **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GeologicUnitMaterialImplacement(struct soap*, enum resqml20__GeologicUnitMaterialImplacement *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__GeologicUnitMaterialImplacement ** SOAP_FMAC4 soap_get_PointerToresqml20__GeologicUnitMaterialImplacement(struct soap*, enum resqml20__GeologicUnitMaterialImplacement **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitComposition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitComposition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GeologicUnitComposition(struct soap*, enum resqml20__GeologicUnitComposition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GeologicUnitComposition(struct soap*, const char *, int, enum resqml20__GeologicUnitComposition *const*, const char *);
SOAP_FMAC3 enum resqml20__GeologicUnitComposition ** SOAP_FMAC4 soap_in_PointerToresqml20__GeologicUnitComposition(struct soap*, const char*, enum resqml20__GeologicUnitComposition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GeologicUnitComposition(struct soap*, enum resqml20__GeologicUnitComposition *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__GeologicUnitComposition ** SOAP_FMAC4 soap_get_PointerToresqml20__GeologicUnitComposition(struct soap*, enum resqml20__GeologicUnitComposition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractContactInterpretationPart(struct soap*, resqml20__AbstractContactInterpretationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractContactInterpretationPart(struct soap*, const char *, int, resqml20__AbstractContactInterpretationPart *const*, const char *);
SOAP_FMAC3 resqml20__AbstractContactInterpretationPart ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractContactInterpretationPart(struct soap*, const char*, resqml20__AbstractContactInterpretationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractContactInterpretationPart(struct soap*, resqml20__AbstractContactInterpretationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractContactInterpretationPart ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractContactInterpretationPart(struct soap*, resqml20__AbstractContactInterpretationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ConnectionInterpretations_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ConnectionInterpretations_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ConnectionInterpretations(struct soap*, resqml20__ConnectionInterpretations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ConnectionInterpretations(struct soap*, const char *, int, resqml20__ConnectionInterpretations *const*, const char *);
SOAP_FMAC3 resqml20__ConnectionInterpretations ** SOAP_FMAC4 soap_in_PointerToresqml20__ConnectionInterpretations(struct soap*, const char*, resqml20__ConnectionInterpretations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ConnectionInterpretations(struct soap*, resqml20__ConnectionInterpretations *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ConnectionInterpretations ** SOAP_FMAC4 soap_get_PointerToresqml20__ConnectionInterpretations(struct soap*, resqml20__ConnectionInterpretations **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjGaps_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IjGaps(struct soap*, resqml20__IjGaps *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IjGaps(struct soap*, const char *, int, resqml20__IjGaps *const*, const char *);
SOAP_FMAC3 resqml20__IjGaps ** SOAP_FMAC4 soap_in_PointerToresqml20__IjGaps(struct soap*, const char*, resqml20__IjGaps **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IjGaps(struct soap*, resqml20__IjGaps *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IjGaps ** SOAP_FMAC4 soap_get_PointerToresqml20__IjGaps(struct soap*, resqml20__IjGaps **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellStratigraphicUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__CellStratigraphicUnits(struct soap*, resqml20__CellStratigraphicUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__CellStratigraphicUnits(struct soap*, const char *, int, resqml20__CellStratigraphicUnits *const*, const char *);
SOAP_FMAC3 resqml20__CellStratigraphicUnits ** SOAP_FMAC4 soap_in_PointerToresqml20__CellStratigraphicUnits(struct soap*, const char*, resqml20__CellStratigraphicUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__CellStratigraphicUnits(struct soap*, resqml20__CellStratigraphicUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml20__CellStratigraphicUnits ** SOAP_FMAC4 soap_get_PointerToresqml20__CellStratigraphicUnits(struct soap*, resqml20__CellStratigraphicUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParentWindow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractParentWindow(struct soap*, resqml20__AbstractParentWindow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractParentWindow(struct soap*, const char *, int, resqml20__AbstractParentWindow *const*, const char *);
SOAP_FMAC3 resqml20__AbstractParentWindow ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractParentWindow(struct soap*, const char*, resqml20__AbstractParentWindow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractParentWindow(struct soap*, resqml20__AbstractParentWindow *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractParentWindow ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractParentWindow(struct soap*, resqml20__AbstractParentWindow **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellFluidPhaseUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellFluidPhaseUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__CellFluidPhaseUnits(struct soap*, resqml20__CellFluidPhaseUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__CellFluidPhaseUnits(struct soap*, const char *, int, resqml20__CellFluidPhaseUnits *const*, const char *);
SOAP_FMAC3 resqml20__CellFluidPhaseUnits ** SOAP_FMAC4 soap_in_PointerToresqml20__CellFluidPhaseUnits(struct soap*, const char*, resqml20__CellFluidPhaseUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__CellFluidPhaseUnits(struct soap*, resqml20__CellFluidPhaseUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml20__CellFluidPhaseUnits ** SOAP_FMAC4 soap_get_PointerToresqml20__CellFluidPhaseUnits(struct soap*, resqml20__CellFluidPhaseUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SubRepresentationPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SubRepresentationPatch(struct soap*, resqml20__SubRepresentationPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SubRepresentationPatch(struct soap*, const char *, int, resqml20__SubRepresentationPatch *const*, const char *);
SOAP_FMAC3 resqml20__SubRepresentationPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__SubRepresentationPatch(struct soap*, const char*, resqml20__SubRepresentationPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SubRepresentationPatch(struct soap*, resqml20__SubRepresentationPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SubRepresentationPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__SubRepresentationPatch(struct soap*, resqml20__SubRepresentationPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PatchOfGeometry(struct soap*, resqml20__PatchOfGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PatchOfGeometry(struct soap*, const char *, int, resqml20__PatchOfGeometry *const*, const char *);
SOAP_FMAC3 resqml20__PatchOfGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__PatchOfGeometry(struct soap*, const char*, resqml20__PatchOfGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PatchOfGeometry(struct soap*, resqml20__PatchOfGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PatchOfGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__PatchOfGeometry(struct soap*, resqml20__PatchOfGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PropertyKindFacet_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PropertyKindFacet(struct soap*, resqml20__PropertyKindFacet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PropertyKindFacet(struct soap*, const char *, int, resqml20__PropertyKindFacet *const*, const char *);
SOAP_FMAC3 resqml20__PropertyKindFacet ** SOAP_FMAC4 soap_in_PointerToresqml20__PropertyKindFacet(struct soap*, const char*, resqml20__PropertyKindFacet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PropertyKindFacet(struct soap*, resqml20__PropertyKindFacet *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PropertyKindFacet ** SOAP_FMAC4 soap_get_PointerToresqml20__PropertyKindFacet(struct soap*, resqml20__PropertyKindFacet **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfValues_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PatchOfValues(struct soap*, resqml20__PatchOfValues *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PatchOfValues(struct soap*, const char *, int, resqml20__PatchOfValues *const*, const char *);
SOAP_FMAC3 resqml20__PatchOfValues ** SOAP_FMAC4 soap_in_PointerToresqml20__PatchOfValues(struct soap*, const char*, resqml20__PatchOfValues **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PatchOfValues(struct soap*, resqml20__PatchOfValues *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PatchOfValues ** SOAP_FMAC4 soap_get_PointerToresqml20__PatchOfValues(struct soap*, resqml20__PatchOfValues **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StringLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__StringLookup(struct soap*, resqml20__StringLookup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__StringLookup(struct soap*, const char *, int, resqml20__StringLookup *const*, const char *);
SOAP_FMAC3 resqml20__StringLookup ** SOAP_FMAC4 soap_in_PointerToresqml20__StringLookup(struct soap*, const char*, resqml20__StringLookup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__StringLookup(struct soap*, resqml20__StringLookup *const*, const char*, const char*);
SOAP_FMAC3 resqml20__StringLookup ** SOAP_FMAC4 soap_get_PointerToresqml20__StringLookup(struct soap*, resqml20__StringLookup **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PatchOfPoints(struct soap*, resqml20__PatchOfPoints *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PatchOfPoints(struct soap*, const char *, int, resqml20__PatchOfPoints *const*, const char *);
SOAP_FMAC3 resqml20__PatchOfPoints ** SOAP_FMAC4 soap_in_PointerToresqml20__PatchOfPoints(struct soap*, const char*, resqml20__PatchOfPoints **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PatchOfPoints(struct soap*, resqml20__PatchOfPoints *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PatchOfPoints ** SOAP_FMAC4 soap_get_PointerToresqml20__PatchOfPoints(struct soap*, resqml20__PatchOfPoints **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__DoubleLookup(struct soap*, resqml20__DoubleLookup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__DoubleLookup(struct soap*, const char *, int, resqml20__DoubleLookup *const*, const char *);
SOAP_FMAC3 resqml20__DoubleLookup ** SOAP_FMAC4 soap_in_PointerToresqml20__DoubleLookup(struct soap*, const char*, resqml20__DoubleLookup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__DoubleLookup(struct soap*, resqml20__DoubleLookup *const*, const char*, const char*);
SOAP_FMAC3 resqml20__DoubleLookup ** SOAP_FMAC4 soap_get_PointerToresqml20__DoubleLookup(struct soap*, resqml20__DoubleLookup **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParameterTemplate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ParameterTemplate(struct soap*, resqml20__ParameterTemplate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ParameterTemplate(struct soap*, const char *, int, resqml20__ParameterTemplate *const*, const char *);
SOAP_FMAC3 resqml20__ParameterTemplate ** SOAP_FMAC4 soap_in_PointerToresqml20__ParameterTemplate(struct soap*, const char*, resqml20__ParameterTemplate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ParameterTemplate(struct soap*, resqml20__ParameterTemplate *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ParameterTemplate ** SOAP_FMAC4 soap_get_PointerToresqml20__ParameterTemplate(struct soap*, resqml20__ParameterTemplate **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicBoundaryKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GeologicBoundaryKind(struct soap*, enum resqml20__GeologicBoundaryKind *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GeologicBoundaryKind(struct soap*, const char *, int, enum resqml20__GeologicBoundaryKind *const*, const char *);
SOAP_FMAC3 enum resqml20__GeologicBoundaryKind ** SOAP_FMAC4 soap_in_PointerToresqml20__GeologicBoundaryKind(struct soap*, const char*, enum resqml20__GeologicBoundaryKind **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GeologicBoundaryKind(struct soap*, enum resqml20__GeologicBoundaryKind *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__GeologicBoundaryKind ** SOAP_FMAC4 soap_get_PointerToresqml20__GeologicBoundaryKind(struct soap*, enum resqml20__GeologicBoundaryKind **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__FluidMarker(struct soap*, enum resqml20__FluidMarker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__FluidMarker(struct soap*, const char *, int, enum resqml20__FluidMarker *const*, const char *);
SOAP_FMAC3 enum resqml20__FluidMarker ** SOAP_FMAC4 soap_in_PointerToresqml20__FluidMarker(struct soap*, const char*, enum resqml20__FluidMarker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__FluidMarker(struct soap*, enum resqml20__FluidMarker *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__FluidMarker ** SOAP_FMAC4 soap_get_PointerToresqml20__FluidMarker(struct soap*, enum resqml20__FluidMarker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidContact_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidContact_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__FluidContact(struct soap*, enum resqml20__FluidContact *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__FluidContact(struct soap*, const char *, int, enum resqml20__FluidContact *const*, const char *);
SOAP_FMAC3 enum resqml20__FluidContact ** SOAP_FMAC4 soap_in_PointerToresqml20__FluidContact(struct soap*, const char*, enum resqml20__FluidContact **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__FluidContact(struct soap*, enum resqml20__FluidContact *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__FluidContact ** SOAP_FMAC4 soap_get_PointerToresqml20__FluidContact(struct soap*, enum resqml20__FluidContact **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeSeriesParentage_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeSeriesParentage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TimeSeriesParentage(struct soap*, resqml20__TimeSeriesParentage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TimeSeriesParentage(struct soap*, const char *, int, resqml20__TimeSeriesParentage *const*, const char *);
SOAP_FMAC3 resqml20__TimeSeriesParentage ** SOAP_FMAC4 soap_in_PointerToresqml20__TimeSeriesParentage(struct soap*, const char*, resqml20__TimeSeriesParentage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TimeSeriesParentage(struct soap*, resqml20__TimeSeriesParentage *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TimeSeriesParentage ** SOAP_FMAC4 soap_get_PointerToresqml20__TimeSeriesParentage(struct soap*, resqml20__TimeSeriesParentage **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Timestamp(struct soap*, resqml20__Timestamp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Timestamp(struct soap*, const char *, int, resqml20__Timestamp *const*, const char *);
SOAP_FMAC3 resqml20__Timestamp ** SOAP_FMAC4 soap_in_PointerToresqml20__Timestamp(struct soap*, const char*, resqml20__Timestamp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Timestamp(struct soap*, resqml20__Timestamp *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Timestamp ** SOAP_FMAC4 soap_get_PointerToresqml20__Timestamp(struct soap*, resqml20__Timestamp **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__PlaneAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__PlaneAngleMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__PlaneAngleMeasure(struct soap*, eml20__PlaneAngleMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__PlaneAngleMeasure(struct soap*, const char *, int, eml20__PlaneAngleMeasure *const*, const char *);
SOAP_FMAC3 eml20__PlaneAngleMeasure ** SOAP_FMAC4 soap_in_PointerToeml20__PlaneAngleMeasure(struct soap*, const char*, eml20__PlaneAngleMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__PlaneAngleMeasure(struct soap*, eml20__PlaneAngleMeasure *const*, const char*, const char*);
SOAP_FMAC3 eml20__PlaneAngleMeasure ** SOAP_FMAC4 soap_get_PointerToeml20__PlaneAngleMeasure(struct soap*, eml20__PlaneAngleMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ChronostratigraphicRank(struct soap*, resqml20__ChronostratigraphicRank *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ChronostratigraphicRank(struct soap*, const char *, int, resqml20__ChronostratigraphicRank *const*, const char *);
SOAP_FMAC3 resqml20__ChronostratigraphicRank ** SOAP_FMAC4 soap_in_PointerToresqml20__ChronostratigraphicRank(struct soap*, const char*, resqml20__ChronostratigraphicRank **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ChronostratigraphicRank(struct soap*, resqml20__ChronostratigraphicRank *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ChronostratigraphicRank ** SOAP_FMAC4 soap_get_PointerToresqml20__ChronostratigraphicRank(struct soap*, resqml20__ChronostratigraphicRank **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitCoordinateLines_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitCoordinateLines_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ColumnLayerSplitCoordinateLines(struct soap*, resqml20__ColumnLayerSplitCoordinateLines *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ColumnLayerSplitCoordinateLines(struct soap*, const char *, int, resqml20__ColumnLayerSplitCoordinateLines *const*, const char *);
SOAP_FMAC3 resqml20__ColumnLayerSplitCoordinateLines ** SOAP_FMAC4 soap_in_PointerToresqml20__ColumnLayerSplitCoordinateLines(struct soap*, const char*, resqml20__ColumnLayerSplitCoordinateLines **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ColumnLayerSplitCoordinateLines(struct soap*, resqml20__ColumnLayerSplitCoordinateLines *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSplitCoordinateLines ** SOAP_FMAC4 soap_get_PointerToresqml20__ColumnLayerSplitCoordinateLines(struct soap*, resqml20__ColumnLayerSplitCoordinateLines **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridHingeNodeFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridHingeNodeFaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UnstructuredGridHingeNodeFaces(struct soap*, resqml20__UnstructuredGridHingeNodeFaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UnstructuredGridHingeNodeFaces(struct soap*, const char *, int, resqml20__UnstructuredGridHingeNodeFaces *const*, const char *);
SOAP_FMAC3 resqml20__UnstructuredGridHingeNodeFaces ** SOAP_FMAC4 soap_in_PointerToresqml20__UnstructuredGridHingeNodeFaces(struct soap*, const char*, resqml20__UnstructuredGridHingeNodeFaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UnstructuredGridHingeNodeFaces(struct soap*, resqml20__UnstructuredGridHingeNodeFaces *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UnstructuredGridHingeNodeFaces ** SOAP_FMAC4 soap_get_PointerToresqml20__UnstructuredGridHingeNodeFaces(struct soap*, resqml20__UnstructuredGridHingeNodeFaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Activation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Activation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Activation(struct soap*, resqml20__Activation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Activation(struct soap*, const char *, int, resqml20__Activation *const*, const char *);
SOAP_FMAC3 resqml20__Activation ** SOAP_FMAC4 soap_in_PointerToresqml20__Activation(struct soap*, const char*, resqml20__Activation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Activation(struct soap*, resqml20__Activation *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Activation ** SOAP_FMAC4 soap_get_PointerToresqml20__Activation(struct soap*, resqml20__Activation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RepresentationIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__RepresentationIdentity(struct soap*, resqml20__RepresentationIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__RepresentationIdentity(struct soap*, const char *, int, resqml20__RepresentationIdentity *const*, const char *);
SOAP_FMAC3 resqml20__RepresentationIdentity ** SOAP_FMAC4 soap_in_PointerToresqml20__RepresentationIdentity(struct soap*, const char*, resqml20__RepresentationIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__RepresentationIdentity(struct soap*, resqml20__RepresentationIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml20__RepresentationIdentity ** SOAP_FMAC4 soap_get_PointerToresqml20__RepresentationIdentity(struct soap*, resqml20__RepresentationIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPropertyKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractPropertyKind(struct soap*, resqml20__AbstractPropertyKind *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractPropertyKind(struct soap*, const char *, int, resqml20__AbstractPropertyKind *const*, const char *);
SOAP_FMAC3 resqml20__AbstractPropertyKind ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractPropertyKind(struct soap*, const char*, resqml20__AbstractPropertyKind **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractPropertyKind(struct soap*, resqml20__AbstractPropertyKind *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractPropertyKind ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractPropertyKind(struct soap*, resqml20__AbstractPropertyKind **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractVerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractVerticalCrs_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__AbstractVerticalCrs(struct soap*, eml20__AbstractVerticalCrs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__AbstractVerticalCrs(struct soap*, const char *, int, eml20__AbstractVerticalCrs *const*, const char *);
SOAP_FMAC3 eml20__AbstractVerticalCrs ** SOAP_FMAC4 soap_in_PointerToeml20__AbstractVerticalCrs(struct soap*, const char*, eml20__AbstractVerticalCrs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__AbstractVerticalCrs(struct soap*, eml20__AbstractVerticalCrs *const*, const char*, const char*);
SOAP_FMAC3 eml20__AbstractVerticalCrs ** SOAP_FMAC4 soap_get_PointerToeml20__AbstractVerticalCrs(struct soap*, eml20__AbstractVerticalCrs **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__LengthUom(struct soap*, enum eml20__LengthUom *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__LengthUom(struct soap*, const char *, int, enum eml20__LengthUom *const*, const char *);
SOAP_FMAC3 enum eml20__LengthUom ** SOAP_FMAC4 soap_in_PointerToeml20__LengthUom(struct soap*, const char*, enum eml20__LengthUom **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__LengthUom(struct soap*, enum eml20__LengthUom *const*, const char*, const char*);
SOAP_FMAC3 enum eml20__LengthUom ** SOAP_FMAC4 soap_get_PointerToeml20__LengthUom(struct soap*, enum eml20__LengthUom **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractProjectedCrs_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__AbstractProjectedCrs(struct soap*, eml20__AbstractProjectedCrs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__AbstractProjectedCrs(struct soap*, const char *, int, eml20__AbstractProjectedCrs *const*, const char *);
SOAP_FMAC3 eml20__AbstractProjectedCrs ** SOAP_FMAC4 soap_in_PointerToeml20__AbstractProjectedCrs(struct soap*, const char*, eml20__AbstractProjectedCrs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__AbstractProjectedCrs(struct soap*, eml20__AbstractProjectedCrs *const*, const char*, const char*);
SOAP_FMAC3 eml20__AbstractProjectedCrs ** SOAP_FMAC4 soap_get_PointerToeml20__AbstractProjectedCrs(struct soap*, eml20__AbstractProjectedCrs **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__EdgePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__EdgePatch(struct soap*, resqml20__EdgePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__EdgePatch(struct soap*, const char *, int, resqml20__EdgePatch *const*, const char *);
SOAP_FMAC3 resqml20__EdgePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__EdgePatch(struct soap*, const char*, resqml20__EdgePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__EdgePatch(struct soap*, resqml20__EdgePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__EdgePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__EdgePatch(struct soap*, resqml20__EdgePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NameValuePair_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__NameValuePair(struct soap*, resqml20__NameValuePair *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__NameValuePair(struct soap*, const char *, int, resqml20__NameValuePair *const*, const char *);
SOAP_FMAC3 resqml20__NameValuePair ** SOAP_FMAC4 soap_in_PointerToresqml20__NameValuePair(struct soap*, const char*, resqml20__NameValuePair **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__NameValuePair(struct soap*, resqml20__NameValuePair *const*, const char*, const char*);
SOAP_FMAC3 resqml20__NameValuePair ** SOAP_FMAC4 soap_get_PointerToresqml20__NameValuePair(struct soap*, resqml20__NameValuePair **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AdditionalGridPoints(struct soap*, resqml20__AdditionalGridPoints *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AdditionalGridPoints(struct soap*, const char *, int, resqml20__AdditionalGridPoints *const*, const char *);
SOAP_FMAC3 resqml20__AdditionalGridPoints ** SOAP_FMAC4 soap_in_PointerToresqml20__AdditionalGridPoints(struct soap*, const char*, resqml20__AdditionalGridPoints **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AdditionalGridPoints(struct soap*, resqml20__AdditionalGridPoints *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AdditionalGridPoints ** SOAP_FMAC4 soap_get_PointerToresqml20__AdditionalGridPoints(struct soap*, resqml20__AdditionalGridPoints **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ElementIndices(struct soap*, resqml20__ElementIndices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ElementIndices(struct soap*, const char *, int, resqml20__ElementIndices *const*, const char *);
SOAP_FMAC3 resqml20__ElementIndices ** SOAP_FMAC4 soap_in_PointerToresqml20__ElementIndices(struct soap*, const char*, resqml20__ElementIndices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ElementIndices(struct soap*, resqml20__ElementIndices *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ElementIndices ** SOAP_FMAC4 soap_get_PointerToresqml20__ElementIndices(struct soap*, resqml20__ElementIndices **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ThreePoint3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ThreePoint3d(struct soap*, resqml20__ThreePoint3d *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ThreePoint3d(struct soap*, const char *, int, resqml20__ThreePoint3d *const*, const char *);
SOAP_FMAC3 resqml20__ThreePoint3d ** SOAP_FMAC4 soap_in_PointerToresqml20__ThreePoint3d(struct soap*, const char*, resqml20__ThreePoint3d **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ThreePoint3d(struct soap*, resqml20__ThreePoint3d *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ThreePoint3d ** SOAP_FMAC4 soap_get_PointerToresqml20__ThreePoint3d(struct soap*, resqml20__ThreePoint3d **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IntegerConstantArray(struct soap*, resqml20__IntegerConstantArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IntegerConstantArray(struct soap*, const char *, int, resqml20__IntegerConstantArray *const*, const char *);
SOAP_FMAC3 resqml20__IntegerConstantArray ** SOAP_FMAC4 soap_in_PointerToresqml20__IntegerConstantArray(struct soap*, const char*, resqml20__IntegerConstantArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IntegerConstantArray(struct soap*, resqml20__IntegerConstantArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IntegerConstantArray ** SOAP_FMAC4 soap_get_PointerToresqml20__IntegerConstantArray(struct soap*, resqml20__IntegerConstantArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__DoubleConstantArray(struct soap*, resqml20__DoubleConstantArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__DoubleConstantArray(struct soap*, const char *, int, resqml20__DoubleConstantArray *const*, const char *);
SOAP_FMAC3 resqml20__DoubleConstantArray ** SOAP_FMAC4 soap_in_PointerToresqml20__DoubleConstantArray(struct soap*, const char*, resqml20__DoubleConstantArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__DoubleConstantArray(struct soap*, resqml20__DoubleConstantArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__DoubleConstantArray ** SOAP_FMAC4 soap_get_PointerToresqml20__DoubleConstantArray(struct soap*, resqml20__DoubleConstantArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalGridCells_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalGridCells_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IntervalGridCells(struct soap*, resqml20__IntervalGridCells *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IntervalGridCells(struct soap*, const char *, int, resqml20__IntervalGridCells *const*, const char *);
SOAP_FMAC3 resqml20__IntervalGridCells ** SOAP_FMAC4 soap_in_PointerToresqml20__IntervalGridCells(struct soap*, const char*, resqml20__IntervalGridCells **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IntervalGridCells(struct soap*, resqml20__IntervalGridCells *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IntervalGridCells ** SOAP_FMAC4 soap_get_PointerToresqml20__IntervalGridCells(struct soap*, resqml20__IntervalGridCells **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PointGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PointGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__PointGeometry(struct soap*, resqml20__PointGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__PointGeometry(struct soap*, const char *, int, resqml20__PointGeometry *const*, const char *);
SOAP_FMAC3 resqml20__PointGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__PointGeometry(struct soap*, const char*, resqml20__PointGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__PointGeometry(struct soap*, resqml20__PointGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__PointGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__PointGeometry(struct soap*, resqml20__PointGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ContactPatch(struct soap*, resqml20__ContactPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ContactPatch(struct soap*, const char *, int, resqml20__ContactPatch *const*, const char *);
SOAP_FMAC3 resqml20__ContactPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__ContactPatch(struct soap*, const char*, resqml20__ContactPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ContactPatch(struct soap*, resqml20__ContactPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ContactPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__ContactPatch(struct soap*, resqml20__ContactPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ContactMode(struct soap*, enum resqml20__ContactMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ContactMode(struct soap*, const char *, int, enum resqml20__ContactMode *const*, const char *);
SOAP_FMAC3 enum resqml20__ContactMode ** SOAP_FMAC4 soap_in_PointerToresqml20__ContactMode(struct soap*, const char*, enum resqml20__ContactMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ContactMode(struct soap*, enum resqml20__ContactMode *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__ContactMode ** SOAP_FMAC4 soap_get_PointerToresqml20__ContactMode(struct soap*, enum resqml20__ContactMode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactSide_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactSide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ContactSide(struct soap*, enum resqml20__ContactSide *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ContactSide(struct soap*, const char *, int, enum resqml20__ContactSide *const*, const char *);
SOAP_FMAC3 enum resqml20__ContactSide ** SOAP_FMAC4 soap_in_PointerToresqml20__ContactSide(struct soap*, const char*, enum resqml20__ContactSide **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ContactSide(struct soap*, enum resqml20__ContactSide *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__ContactSide ** SOAP_FMAC4 soap_get_PointerToresqml20__ContactSide(struct soap*, enum resqml20__ContactSide **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactElementReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactElementReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ContactElementReference(struct soap*, resqml20__ContactElementReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ContactElementReference(struct soap*, const char *, int, resqml20__ContactElementReference *const*, const char *);
SOAP_FMAC3 resqml20__ContactElementReference ** SOAP_FMAC4 soap_in_PointerToresqml20__ContactElementReference(struct soap*, const char*, resqml20__ContactElementReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ContactElementReference(struct soap*, resqml20__ContactElementReference *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ContactElementReference ** SOAP_FMAC4 soap_get_PointerToresqml20__ContactElementReference(struct soap*, resqml20__ContactElementReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjkGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjkGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IjkGridGeometry(struct soap*, resqml20__IjkGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IjkGridGeometry(struct soap*, const char *, int, resqml20__IjkGridGeometry *const*, const char *);
SOAP_FMAC3 resqml20__IjkGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__IjkGridGeometry(struct soap*, const char*, resqml20__IjkGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IjkGridGeometry(struct soap*, resqml20__IjkGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IjkGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__IjkGridGeometry(struct soap*, resqml20__IjkGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UnstructuredGridGeometry(struct soap*, resqml20__UnstructuredGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UnstructuredGridGeometry(struct soap*, const char *, int, resqml20__UnstructuredGridGeometry *const*, const char *);
SOAP_FMAC3 resqml20__UnstructuredGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__UnstructuredGridGeometry(struct soap*, const char*, resqml20__UnstructuredGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UnstructuredGridGeometry(struct soap*, resqml20__UnstructuredGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UnstructuredGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__UnstructuredGridGeometry(struct soap*, resqml20__UnstructuredGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ColumnSubnodePatch(struct soap*, resqml20__ColumnSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ColumnSubnodePatch(struct soap*, const char *, int, resqml20__ColumnSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml20__ColumnSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__ColumnSubnodePatch(struct soap*, const char*, resqml20__ColumnSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ColumnSubnodePatch(struct soap*, resqml20__ColumnSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ColumnSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__ColumnSubnodePatch(struct soap*, resqml20__ColumnSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TruncationCellPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TruncationCellPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TruncationCellPatch(struct soap*, resqml20__TruncationCellPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TruncationCellPatch(struct soap*, const char *, int, resqml20__TruncationCellPatch *const*, const char *);
SOAP_FMAC3 resqml20__TruncationCellPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__TruncationCellPatch(struct soap*, const char*, resqml20__TruncationCellPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TruncationCellPatch(struct soap*, resqml20__TruncationCellPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TruncationCellPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__TruncationCellPatch(struct soap*, resqml20__TruncationCellPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UnstructuredColumnLayerGridGeometry(struct soap*, resqml20__UnstructuredColumnLayerGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UnstructuredColumnLayerGridGeometry(struct soap*, const char *, int, resqml20__UnstructuredColumnLayerGridGeometry *const*, const char *);
SOAP_FMAC3 resqml20__UnstructuredColumnLayerGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, resqml20__UnstructuredColumnLayerGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UnstructuredColumnLayerGridGeometry(struct soap*, resqml20__UnstructuredColumnLayerGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UnstructuredColumnLayerGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__UnstructuredColumnLayerGridGeometry(struct soap*, resqml20__UnstructuredColumnLayerGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodesPerCell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodesPerCell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__NodesPerCell(struct soap*, resqml20__NodesPerCell *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__NodesPerCell(struct soap*, const char *, int, resqml20__NodesPerCell *const*, const char *);
SOAP_FMAC3 resqml20__NodesPerCell ** SOAP_FMAC4 soap_in_PointerToresqml20__NodesPerCell(struct soap*, const char*, resqml20__NodesPerCell **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__NodesPerCell(struct soap*, resqml20__NodesPerCell *const*, const char*, const char*);
SOAP_FMAC3 resqml20__NodesPerCell ** SOAP_FMAC4 soap_get_PointerToresqml20__NodesPerCell(struct soap*, resqml20__NodesPerCell **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Edges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Edges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Edges(struct soap*, resqml20__Edges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Edges(struct soap*, const char *, int, resqml20__Edges *const*, const char *);
SOAP_FMAC3 resqml20__Edges ** SOAP_FMAC4 soap_in_PointerToresqml20__Edges(struct soap*, const char*, resqml20__Edges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Edges(struct soap*, resqml20__Edges *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Edges ** SOAP_FMAC4 soap_get_PointerToresqml20__Edges(struct soap*, resqml20__Edges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Regrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Regrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Regrid(struct soap*, resqml20__Regrid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Regrid(struct soap*, const char *, int, resqml20__Regrid *const*, const char *);
SOAP_FMAC3 resqml20__Regrid ** SOAP_FMAC4 soap_in_PointerToresqml20__Regrid(struct soap*, const char*, resqml20__Regrid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Regrid(struct soap*, resqml20__Regrid *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Regrid ** SOAP_FMAC4 soap_get_PointerToresqml20__Regrid(struct soap*, resqml20__Regrid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractParametricLineArray(struct soap*, resqml20__AbstractParametricLineArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractParametricLineArray(struct soap*, const char *, int, resqml20__AbstractParametricLineArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractParametricLineArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractParametricLineArray(struct soap*, const char*, resqml20__AbstractParametricLineArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractParametricLineArray(struct soap*, resqml20__AbstractParametricLineArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractParametricLineArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractParametricLineArray(struct soap*, resqml20__AbstractParametricLineArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParametricLineIntersections_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParametricLineIntersections_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ParametricLineIntersections(struct soap*, resqml20__ParametricLineIntersections *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ParametricLineIntersections(struct soap*, const char *, int, resqml20__ParametricLineIntersections *const*, const char *);
SOAP_FMAC3 resqml20__ParametricLineIntersections ** SOAP_FMAC4 soap_in_PointerToresqml20__ParametricLineIntersections(struct soap*, const char*, resqml20__ParametricLineIntersections **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ParametricLineIntersections(struct soap*, resqml20__ParametricLineIntersections *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ParametricLineIntersections ** SOAP_FMAC4 soap_get_PointerToresqml20__ParametricLineIntersections(struct soap*, resqml20__ParametricLineIntersections **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractSeismicCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractSeismicCoordinates_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractSeismicCoordinates(struct soap*, resqml20__AbstractSeismicCoordinates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractSeismicCoordinates(struct soap*, const char *, int, resqml20__AbstractSeismicCoordinates *const*, const char *);
SOAP_FMAC3 resqml20__AbstractSeismicCoordinates ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractSeismicCoordinates(struct soap*, const char*, resqml20__AbstractSeismicCoordinates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractSeismicCoordinates(struct soap*, resqml20__AbstractSeismicCoordinates *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractSeismicCoordinates ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractSeismicCoordinates(struct soap*, resqml20__AbstractSeismicCoordinates **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3dOffset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Point3dOffset(struct soap*, resqml20__Point3dOffset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Point3dOffset(struct soap*, const char *, int, resqml20__Point3dOffset *const*, const char *);
SOAP_FMAC3 resqml20__Point3dOffset ** SOAP_FMAC4 soap_in_PointerToresqml20__Point3dOffset(struct soap*, const char*, resqml20__Point3dOffset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Point3dOffset(struct soap*, resqml20__Point3dOffset *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Point3dOffset ** SOAP_FMAC4 soap_get_PointerToresqml20__Point3dOffset(struct soap*, resqml20__Point3dOffset **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerLatticeArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IntegerLatticeArray(struct soap*, resqml20__IntegerLatticeArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IntegerLatticeArray(struct soap*, const char *, int, resqml20__IntegerLatticeArray *const*, const char *);
SOAP_FMAC3 resqml20__IntegerLatticeArray ** SOAP_FMAC4 soap_in_PointerToresqml20__IntegerLatticeArray(struct soap*, const char*, resqml20__IntegerLatticeArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IntegerLatticeArray(struct soap*, resqml20__IntegerLatticeArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IntegerLatticeArray ** SOAP_FMAC4 soap_get_PointerToresqml20__IntegerLatticeArray(struct soap*, resqml20__IntegerLatticeArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Hdf5Dataset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Hdf5Dataset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__Hdf5Dataset(struct soap*, eml20__Hdf5Dataset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__Hdf5Dataset(struct soap*, const char *, int, eml20__Hdf5Dataset *const*, const char *);
SOAP_FMAC3 eml20__Hdf5Dataset ** SOAP_FMAC4 soap_in_PointerToeml20__Hdf5Dataset(struct soap*, const char*, eml20__Hdf5Dataset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__Hdf5Dataset(struct soap*, eml20__Hdf5Dataset *const*, const char*, const char*);
SOAP_FMAC3 eml20__Hdf5Dataset ** SOAP_FMAC4 soap_get_PointerToeml20__Hdf5Dataset(struct soap*, eml20__Hdf5Dataset **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToptm__equivalentPropertyType(struct soap*, const char *, int, ptm__equivalentPropertyType *const*, const char *);
SOAP_FMAC3 ptm__equivalentPropertyType ** SOAP_FMAC4 soap_in_PointerToptm__equivalentPropertyType(struct soap*, const char*, ptm__equivalentPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *const*, const char*, const char*);
SOAP_FMAC3 ptm__equivalentPropertyType ** SOAP_FMAC4 soap_get_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlPropertyKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ResqmlPropertyKind(struct soap*, enum resqml20__ResqmlPropertyKind *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ResqmlPropertyKind(struct soap*, const char *, int, enum resqml20__ResqmlPropertyKind *const*, const char *);
SOAP_FMAC3 enum resqml20__ResqmlPropertyKind ** SOAP_FMAC4 soap_in_PointerToresqml20__ResqmlPropertyKind(struct soap*, const char*, enum resqml20__ResqmlPropertyKind **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ResqmlPropertyKind(struct soap*, enum resqml20__ResqmlPropertyKind *const*, const char*, const char*);
SOAP_FMAC3 enum resqml20__ResqmlPropertyKind ** SOAP_FMAC4 soap_get_PointerToresqml20__ResqmlPropertyKind(struct soap*, enum resqml20__ResqmlPropertyKind **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToptm__standardEnergisticsPropertyType(struct soap*, const char *, int, ptm__standardEnergisticsPropertyType *const*, const char *);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType ** SOAP_FMAC4 soap_in_PointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, ptm__standardEnergisticsPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *const*, const char*, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType ** SOAP_FMAC4 soap_get_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DescriptionString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DescriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__DescriptionString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__DescriptionString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml20__DescriptionString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__DescriptionString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml20__DescriptionString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CustomData_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CustomData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__CustomData(struct soap*, eml20__CustomData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__CustomData(struct soap*, const char *, int, eml20__CustomData *const*, const char *);
SOAP_FMAC3 eml20__CustomData ** SOAP_FMAC4 soap_in_PointerToeml20__CustomData(struct soap*, const char*, eml20__CustomData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__CustomData(struct soap*, eml20__CustomData *const*, const char*, const char*);
SOAP_FMAC3 eml20__CustomData ** SOAP_FMAC4 soap_get_PointerToeml20__CustomData(struct soap*, eml20__CustomData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__ObjectAlias_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__ObjectAlias(struct soap*, eml20__ObjectAlias *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__ObjectAlias(struct soap*, const char *, int, eml20__ObjectAlias *const*, const char *);
SOAP_FMAC3 eml20__ObjectAlias ** SOAP_FMAC4 soap_in_PointerToeml20__ObjectAlias(struct soap*, const char*, eml20__ObjectAlias **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__ObjectAlias(struct soap*, eml20__ObjectAlias *const*, const char*, const char*);
SOAP_FMAC3 eml20__ObjectAlias ** SOAP_FMAC4 soap_get_PointerToeml20__ObjectAlias(struct soap*, eml20__ObjectAlias **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Citation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Citation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__Citation(struct soap*, eml20__Citation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__Citation(struct soap*, const char *, int, eml20__Citation *const*, const char *);
SOAP_FMAC3 eml20__Citation ** SOAP_FMAC4 soap_in_PointerToeml20__Citation(struct soap*, const char*, eml20__Citation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__Citation(struct soap*, eml20__Citation *const*, const char*, const char*);
SOAP_FMAC3 eml20__Citation ** SOAP_FMAC4 soap_get_PointerToeml20__Citation(struct soap*, eml20__Citation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CommentString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CommentString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__CommentString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__CommentString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml20__CommentString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__CommentString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml20__CommentString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__dateTime_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__dateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__dateTime(struct soap*, struct tm *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__dateTime(struct soap*, const char *, int, struct tm *const*, const char *);
SOAP_FMAC3 struct tm ** SOAP_FMAC4 soap_in_PointerToxsd__dateTime(struct soap*, const char*, struct tm **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__dateTime(struct soap*, struct tm *const*, const char*, const char*);
SOAP_FMAC3 struct tm ** SOAP_FMAC4 soap_get_PointerToxsd__dateTime(struct soap*, struct tm **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__NameString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__NameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__NameString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__NameString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml20__NameString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__NameString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml20__NameString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParameterKey_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractParameterKey(struct soap*, resqml20__AbstractParameterKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractParameterKey(struct soap*, const char *, int, resqml20__AbstractParameterKey *const*, const char *);
SOAP_FMAC3 resqml20__AbstractParameterKey ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractParameterKey(struct soap*, const char*, resqml20__AbstractParameterKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractParameterKey(struct soap*, resqml20__AbstractParameterKey *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractParameterKey ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractParameterKey(struct soap*, resqml20__AbstractParameterKey **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractActivityParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractActivityParameter(struct soap*, resqml20__AbstractActivityParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractActivityParameter(struct soap*, const char *, int, resqml20__AbstractActivityParameter *const*, const char *);
SOAP_FMAC3 resqml20__AbstractActivityParameter ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractActivityParameter(struct soap*, const char*, resqml20__AbstractActivityParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractActivityParameter(struct soap*, resqml20__AbstractActivityParameter *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractActivityParameter ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractActivityParameter(struct soap*, resqml20__AbstractActivityParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OrientedMacroFace_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__OrientedMacroFace(struct soap*, resqml20__OrientedMacroFace *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__OrientedMacroFace(struct soap*, const char *, int, resqml20__OrientedMacroFace *const*, const char *);
SOAP_FMAC3 resqml20__OrientedMacroFace ** SOAP_FMAC4 soap_in_PointerToresqml20__OrientedMacroFace(struct soap*, const char*, resqml20__OrientedMacroFace **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__OrientedMacroFace(struct soap*, resqml20__OrientedMacroFace *const*, const char*, const char*);
SOAP_FMAC3 resqml20__OrientedMacroFace ** SOAP_FMAC4 soap_get_PointerToresqml20__OrientedMacroFace(struct soap*, resqml20__OrientedMacroFace **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeShell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__VolumeShell(struct soap*, resqml20__VolumeShell *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__VolumeShell(struct soap*, const char *, int, resqml20__VolumeShell *const*, const char *);
SOAP_FMAC3 resqml20__VolumeShell ** SOAP_FMAC4 soap_in_PointerToresqml20__VolumeShell(struct soap*, const char*, resqml20__VolumeShell **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__VolumeShell(struct soap*, resqml20__VolumeShell *const*, const char*, const char*);
SOAP_FMAC3 resqml20__VolumeShell ** SOAP_FMAC4 soap_get_PointerToresqml20__VolumeShell(struct soap*, resqml20__VolumeShell **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToLONG64(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToLONG64(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToLONG64(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToLONG64(struct soap*, LONG64 *const*, const char*, const char*);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToLONG64(struct soap*, LONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeInterval_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeInterval_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TimeInterval(struct soap*, resqml20__TimeInterval *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TimeInterval(struct soap*, const char *, int, resqml20__TimeInterval *const*, const char *);
SOAP_FMAC3 resqml20__TimeInterval ** SOAP_FMAC4 soap_in_PointerToresqml20__TimeInterval(struct soap*, const char*, resqml20__TimeInterval **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TimeInterval(struct soap*, resqml20__TimeInterval *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TimeInterval ** SOAP_FMAC4 soap_get_PointerToresqml20__TimeInterval(struct soap*, resqml20__TimeInterval **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellOverlap_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellOverlap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__CellOverlap(struct soap*, resqml20__CellOverlap *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__CellOverlap(struct soap*, const char *, int, resqml20__CellOverlap *const*, const char *);
SOAP_FMAC3 resqml20__CellOverlap ** SOAP_FMAC4 soap_in_PointerToresqml20__CellOverlap(struct soap*, const char*, resqml20__CellOverlap **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__CellOverlap(struct soap*, resqml20__CellOverlap *const*, const char*, const char*);
SOAP_FMAC3 resqml20__CellOverlap ** SOAP_FMAC4 soap_get_PointerToresqml20__CellOverlap(struct soap*, resqml20__CellOverlap **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__OverlapVolume_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__OverlapVolume_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml20__OverlapVolume_sequence(struct soap*, struct __resqml20__OverlapVolume_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml20__OverlapVolume_sequence(struct soap*, const char *, int, struct __resqml20__OverlapVolume_sequence *const*, const char *);
SOAP_FMAC3 struct __resqml20__OverlapVolume_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml20__OverlapVolume_sequence(struct soap*, const char*, struct __resqml20__OverlapVolume_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml20__OverlapVolume_sequence(struct soap*, struct __resqml20__OverlapVolume_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __resqml20__OverlapVolume_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml20__OverlapVolume_sequence(struct soap*, struct __resqml20__OverlapVolume_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__CellOverlap_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__CellOverlap_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml20__CellOverlap_sequence(struct soap*, struct __resqml20__CellOverlap_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml20__CellOverlap_sequence(struct soap*, const char *, int, struct __resqml20__CellOverlap_sequence *const*, const char *);
SOAP_FMAC3 struct __resqml20__CellOverlap_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml20__CellOverlap_sequence(struct soap*, const char*, struct __resqml20__CellOverlap_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml20__CellOverlap_sequence(struct soap*, struct __resqml20__CellOverlap_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __resqml20__CellOverlap_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml20__CellOverlap_sequence(struct soap*, struct __resqml20__CellOverlap_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OverlapVolume_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OverlapVolume_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__OverlapVolume(struct soap*, resqml20__OverlapVolume *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__OverlapVolume(struct soap*, const char *, int, resqml20__OverlapVolume *const*, const char *);
SOAP_FMAC3 resqml20__OverlapVolume ** SOAP_FMAC4 soap_in_PointerToresqml20__OverlapVolume(struct soap*, const char*, resqml20__OverlapVolume **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__OverlapVolume(struct soap*, resqml20__OverlapVolume *const*, const char*, const char*);
SOAP_FMAC3 resqml20__OverlapVolume ** SOAP_FMAC4 soap_get_PointerToresqml20__OverlapVolume(struct soap*, resqml20__OverlapVolume **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Intervals_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Intervals_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Intervals(struct soap*, resqml20__Intervals *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Intervals(struct soap*, const char *, int, resqml20__Intervals *const*, const char *);
SOAP_FMAC3 resqml20__Intervals ** SOAP_FMAC4 soap_in_PointerToresqml20__Intervals(struct soap*, const char*, resqml20__Intervals **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Intervals(struct soap*, resqml20__Intervals *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Intervals ** SOAP_FMAC4 soap_get_PointerToresqml20__Intervals(struct soap*, resqml20__Intervals **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__KGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__KGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml20__KGaps_sequence(struct soap*, struct __resqml20__KGaps_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml20__KGaps_sequence(struct soap*, const char *, int, struct __resqml20__KGaps_sequence *const*, const char *);
SOAP_FMAC3 struct __resqml20__KGaps_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml20__KGaps_sequence(struct soap*, const char*, struct __resqml20__KGaps_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml20__KGaps_sequence(struct soap*, struct __resqml20__KGaps_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __resqml20__KGaps_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml20__KGaps_sequence(struct soap*, struct __resqml20__KGaps_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractBooleanArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractBooleanArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractBooleanArray(struct soap*, resqml20__AbstractBooleanArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractBooleanArray(struct soap*, const char *, int, resqml20__AbstractBooleanArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractBooleanArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractBooleanArray(struct soap*, const char*, resqml20__AbstractBooleanArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractBooleanArray(struct soap*, resqml20__AbstractBooleanArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractBooleanArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractBooleanArray(struct soap*, resqml20__AbstractBooleanArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml20__GpGridUnstructuredColumnLayerGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char *, int, resqml20__GpGridUnstructuredColumnLayerGridPatch *const*, const char *);
SOAP_FMAC3 resqml20__GpGridUnstructuredColumnLayerGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, resqml20__GpGridUnstructuredColumnLayerGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml20__GpGridUnstructuredColumnLayerGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__GpGridUnstructuredColumnLayerGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml20__GpGridUnstructuredColumnLayerGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__GpGridIjkGridPatch(struct soap*, resqml20__GpGridIjkGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__GpGridIjkGridPatch(struct soap*, const char *, int, resqml20__GpGridIjkGridPatch *const*, const char *);
SOAP_FMAC3 resqml20__GpGridIjkGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml20__GpGridIjkGridPatch(struct soap*, const char*, resqml20__GpGridIjkGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__GpGridIjkGridPatch(struct soap*, resqml20__GpGridIjkGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__GpGridIjkGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml20__GpGridIjkGridPatch(struct soap*, resqml20__GpGridIjkGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__KGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__KGaps_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__KGaps(struct soap*, resqml20__KGaps *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__KGaps(struct soap*, const char *, int, resqml20__KGaps *const*, const char *);
SOAP_FMAC3 resqml20__KGaps ** SOAP_FMAC4 soap_in_PointerToresqml20__KGaps(struct soap*, const char*, resqml20__KGaps **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__KGaps(struct soap*, resqml20__KGaps *const*, const char*, const char*);
SOAP_FMAC3 resqml20__KGaps ** SOAP_FMAC4 soap_get_PointerToresqml20__KGaps(struct soap*, resqml20__KGaps **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__IjGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__IjGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml20__IjGaps_sequence(struct soap*, struct __resqml20__IjGaps_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml20__IjGaps_sequence(struct soap*, const char *, int, struct __resqml20__IjGaps_sequence *const*, const char *);
SOAP_FMAC3 struct __resqml20__IjGaps_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml20__IjGaps_sequence(struct soap*, const char*, struct __resqml20__IjGaps_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml20__IjGaps_sequence(struct soap*, struct __resqml20__IjGaps_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __resqml20__IjGaps_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml20__IjGaps_sequence(struct soap*, struct __resqml20__IjGaps_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlJaggedArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlJaggedArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ResqmlJaggedArray(struct soap*, resqml20__ResqmlJaggedArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ResqmlJaggedArray(struct soap*, const char *, int, resqml20__ResqmlJaggedArray *const*, const char *);
SOAP_FMAC3 resqml20__ResqmlJaggedArray ** SOAP_FMAC4 soap_in_PointerToresqml20__ResqmlJaggedArray(struct soap*, const char*, resqml20__ResqmlJaggedArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ResqmlJaggedArray(struct soap*, resqml20__ResqmlJaggedArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ResqmlJaggedArray ** SOAP_FMAC4 soap_get_PointerToresqml20__ResqmlJaggedArray(struct soap*, resqml20__ResqmlJaggedArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UniformSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UniformSubnodePatch(struct soap*, resqml20__UniformSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UniformSubnodePatch(struct soap*, const char *, int, resqml20__UniformSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml20__UniformSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__UniformSubnodePatch(struct soap*, const char*, resqml20__UniformSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UniformSubnodePatch(struct soap*, resqml20__UniformSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UniformSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__UniformSubnodePatch(struct soap*, resqml20__UniformSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VariableSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__VariableSubnodePatch(struct soap*, resqml20__VariableSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__VariableSubnodePatch(struct soap*, const char *, int, resqml20__VariableSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml20__VariableSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__VariableSubnodePatch(struct soap*, const char*, resqml20__VariableSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__VariableSubnodePatch(struct soap*, resqml20__VariableSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__VariableSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__VariableSubnodePatch(struct soap*, resqml20__VariableSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSubnodeTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ColumnLayerSubnodeTopology(struct soap*, resqml20__ColumnLayerSubnodeTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ColumnLayerSubnodeTopology(struct soap*, const char *, int, resqml20__ColumnLayerSubnodeTopology *const*, const char *);
SOAP_FMAC3 resqml20__ColumnLayerSubnodeTopology ** SOAP_FMAC4 soap_in_PointerToresqml20__ColumnLayerSubnodeTopology(struct soap*, const char*, resqml20__ColumnLayerSubnodeTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ColumnLayerSubnodeTopology(struct soap*, resqml20__ColumnLayerSubnodeTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSubnodeTopology ** SOAP_FMAC4 soap_get_PointerToresqml20__ColumnLayerSubnodeTopology(struct soap*, resqml20__ColumnLayerSubnodeTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredSubnodeTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UnstructuredSubnodeTopology(struct soap*, resqml20__UnstructuredSubnodeTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UnstructuredSubnodeTopology(struct soap*, const char *, int, resqml20__UnstructuredSubnodeTopology *const*, const char *);
SOAP_FMAC3 resqml20__UnstructuredSubnodeTopology ** SOAP_FMAC4 soap_in_PointerToresqml20__UnstructuredSubnodeTopology(struct soap*, const char*, resqml20__UnstructuredSubnodeTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UnstructuredSubnodeTopology(struct soap*, resqml20__UnstructuredSubnodeTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UnstructuredSubnodeTopology ** SOAP_FMAC4 soap_get_PointerToresqml20__UnstructuredSubnodeTopology(struct soap*, resqml20__UnstructuredSubnodeTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjSplitColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__IjSplitColumnEdges(struct soap*, resqml20__IjSplitColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__IjSplitColumnEdges(struct soap*, const char *, int, resqml20__IjSplitColumnEdges *const*, const char *);
SOAP_FMAC3 resqml20__IjSplitColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml20__IjSplitColumnEdges(struct soap*, const char*, resqml20__IjSplitColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__IjSplitColumnEdges(struct soap*, resqml20__IjSplitColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml20__IjSplitColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml20__IjSplitColumnEdges(struct soap*, resqml20__IjSplitColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitFaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SplitFaces(struct soap*, resqml20__SplitFaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SplitFaces(struct soap*, const char *, int, resqml20__SplitFaces *const*, const char *);
SOAP_FMAC3 resqml20__SplitFaces ** SOAP_FMAC4 soap_in_PointerToresqml20__SplitFaces(struct soap*, const char*, resqml20__SplitFaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SplitFaces(struct soap*, resqml20__SplitFaces *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SplitFaces ** SOAP_FMAC4 soap_get_PointerToresqml20__SplitFaces(struct soap*, resqml20__SplitFaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__UnstructuredColumnEdges(struct soap*, resqml20__UnstructuredColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__UnstructuredColumnEdges(struct soap*, const char *, int, resqml20__UnstructuredColumnEdges *const*, const char *);
SOAP_FMAC3 resqml20__UnstructuredColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml20__UnstructuredColumnEdges(struct soap*, const char*, resqml20__UnstructuredColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__UnstructuredColumnEdges(struct soap*, resqml20__UnstructuredColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml20__UnstructuredColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml20__UnstructuredColumnEdges(struct soap*, resqml20__UnstructuredColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ColumnLayerSplitColumnEdges(struct soap*, resqml20__ColumnLayerSplitColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ColumnLayerSplitColumnEdges(struct soap*, const char *, int, resqml20__ColumnLayerSplitColumnEdges *const*, const char *);
SOAP_FMAC3 resqml20__ColumnLayerSplitColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml20__ColumnLayerSplitColumnEdges(struct soap*, const char*, resqml20__ColumnLayerSplitColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ColumnLayerSplitColumnEdges(struct soap*, resqml20__ColumnLayerSplitColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ColumnLayerSplitColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml20__ColumnLayerSplitColumnEdges(struct soap*, resqml20__ColumnLayerSplitColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitNodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitNodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SplitNodePatch(struct soap*, resqml20__SplitNodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SplitNodePatch(struct soap*, const char *, int, resqml20__SplitNodePatch *const*, const char *);
SOAP_FMAC3 resqml20__SplitNodePatch ** SOAP_FMAC4 soap_in_PointerToresqml20__SplitNodePatch(struct soap*, const char*, resqml20__SplitNodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SplitNodePatch(struct soap*, resqml20__SplitNodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SplitNodePatch ** SOAP_FMAC4 soap_get_PointerToresqml20__SplitNodePatch(struct soap*, resqml20__SplitNodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__SplitEdges(struct soap*, resqml20__SplitEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__SplitEdges(struct soap*, const char *, int, resqml20__SplitEdges *const*, const char *);
SOAP_FMAC3 resqml20__SplitEdges ** SOAP_FMAC4 soap_in_PointerToresqml20__SplitEdges(struct soap*, const char*, resqml20__SplitEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__SplitEdges(struct soap*, resqml20__SplitEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml20__SplitEdges ** SOAP_FMAC4 soap_get_PointerToresqml20__SplitEdges(struct soap*, resqml20__SplitEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractGeometry(struct soap*, resqml20__AbstractGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractGeometry(struct soap*, const char *, int, resqml20__AbstractGeometry *const*, const char *);
SOAP_FMAC3 resqml20__AbstractGeometry ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractGeometry(struct soap*, const char*, resqml20__AbstractGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractGeometry(struct soap*, resqml20__AbstractGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractGeometry ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractGeometry(struct soap*, resqml20__AbstractGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AdditionalGridTopology(struct soap*, resqml20__AdditionalGridTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AdditionalGridTopology(struct soap*, const char *, int, resqml20__AdditionalGridTopology *const*, const char *);
SOAP_FMAC3 resqml20__AdditionalGridTopology ** SOAP_FMAC4 soap_in_PointerToresqml20__AdditionalGridTopology(struct soap*, const char*, resqml20__AdditionalGridTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AdditionalGridTopology(struct soap*, resqml20__AdditionalGridTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AdditionalGridTopology ** SOAP_FMAC4 soap_get_PointerToresqml20__AdditionalGridTopology(struct soap*, resqml20__AdditionalGridTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__ElementIdentity(struct soap*, resqml20__ElementIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__ElementIdentity(struct soap*, const char *, int, resqml20__ElementIdentity *const*, const char *);
SOAP_FMAC3 resqml20__ElementIdentity ** SOAP_FMAC4 soap_in_PointerToresqml20__ElementIdentity(struct soap*, const char*, resqml20__ElementIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__ElementIdentity(struct soap*, resqml20__ElementIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml20__ElementIdentity ** SOAP_FMAC4 soap_get_PointerToresqml20__ElementIdentity(struct soap*, resqml20__ElementIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractIntegerArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractIntegerArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractIntegerArray(struct soap*, resqml20__AbstractIntegerArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractIntegerArray(struct soap*, const char *, int, resqml20__AbstractIntegerArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractIntegerArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractIntegerArray(struct soap*, const char*, resqml20__AbstractIntegerArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractIntegerArray(struct soap*, resqml20__AbstractIntegerArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractIntegerArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractIntegerArray(struct soap*, resqml20__AbstractIntegerArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DataObjectReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml20__DataObjectReference(struct soap*, eml20__DataObjectReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml20__DataObjectReference(struct soap*, const char *, int, eml20__DataObjectReference *const*, const char *);
SOAP_FMAC3 eml20__DataObjectReference ** SOAP_FMAC4 soap_in_PointerToeml20__DataObjectReference(struct soap*, const char*, eml20__DataObjectReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml20__DataObjectReference(struct soap*, eml20__DataObjectReference *const*, const char*, const char*);
SOAP_FMAC3 eml20__DataObjectReference ** SOAP_FMAC4 soap_get_PointerToeml20__DataObjectReference(struct soap*, eml20__DataObjectReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__TimeIndex(struct soap*, resqml20__TimeIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__TimeIndex(struct soap*, const char *, int, resqml20__TimeIndex *const*, const char *);
SOAP_FMAC3 resqml20__TimeIndex ** SOAP_FMAC4 soap_in_PointerToresqml20__TimeIndex(struct soap*, const char*, resqml20__TimeIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__TimeIndex(struct soap*, resqml20__TimeIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml20__TimeIndex ** SOAP_FMAC4 soap_get_PointerToresqml20__TimeIndex(struct soap*, resqml20__TimeIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractDoubleArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractDoubleArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractDoubleArray(struct soap*, resqml20__AbstractDoubleArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractDoubleArray(struct soap*, const char *, int, resqml20__AbstractDoubleArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractDoubleArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractDoubleArray(struct soap*, const char*, resqml20__AbstractDoubleArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractDoubleArray(struct soap*, resqml20__AbstractDoubleArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractDoubleArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractDoubleArray(struct soap*, resqml20__AbstractDoubleArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__Point3d(struct soap*, resqml20__Point3d *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__Point3d(struct soap*, const char *, int, resqml20__Point3d *const*, const char *);
SOAP_FMAC3 resqml20__Point3d ** SOAP_FMAC4 soap_in_PointerToresqml20__Point3d(struct soap*, const char*, resqml20__Point3d **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__Point3d(struct soap*, resqml20__Point3d *const*, const char*, const char*);
SOAP_FMAC3 resqml20__Point3d ** SOAP_FMAC4 soap_get_PointerToresqml20__Point3d(struct soap*, resqml20__Point3d **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractValueArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractValueArray(struct soap*, resqml20__AbstractValueArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractValueArray(struct soap*, const char *, int, resqml20__AbstractValueArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractValueArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractValueArray(struct soap*, const char*, resqml20__AbstractValueArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractValueArray(struct soap*, resqml20__AbstractValueArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractValueArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractValueArray(struct soap*, resqml20__AbstractValueArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPoint3dArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPoint3dArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml20__AbstractPoint3dArray(struct soap*, resqml20__AbstractPoint3dArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml20__AbstractPoint3dArray(struct soap*, const char *, int, resqml20__AbstractPoint3dArray *const*, const char *);
SOAP_FMAC3 resqml20__AbstractPoint3dArray ** SOAP_FMAC4 soap_in_PointerToresqml20__AbstractPoint3dArray(struct soap*, const char*, resqml20__AbstractPoint3dArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml20__AbstractPoint3dArray(struct soap*, resqml20__AbstractPoint3dArray *const*, const char*, const char*);
SOAP_FMAC3 resqml20__AbstractPoint3dArray ** SOAP_FMAC4 soap_get_PointerToresqml20__AbstractPoint3dArray(struct soap*, resqml20__AbstractPoint3dArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, ULONG64 *const*, const char *);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, ULONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 *const*, const char*, const char*);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__QName_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__QName_DEFINED

inline void soap_default__QName(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT__QName
	*a = SOAP_DEFAULT__QName;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_instantiate__QName soap_instantiate_string


#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send__QName(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET__QName(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read__QName(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv__QName(struct soap *soap, char **p)
{
	if (gsoap_resqml2_0_1::soap_read__QName(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__XML_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__XML_DEFINED
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_string_DEFINED

inline void soap_default_string(struct soap *soap, char **a)
{
	(void)soap; /* appease -Wall -Werror */
#ifdef SOAP_DEFAULT_string
	*a = SOAP_DEFAULT_string;
#else
	*a = (char *)0;
#endif
}
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n = -1);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const*p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || gsoap_resqml2_0_1::soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_PUT_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_PATCH_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap) || soap_recv_empty_response(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

inline int soap_POST_send_string(struct soap *soap, const char *URL, char *const*p)
{
	soap_free_temp(soap);
	if (soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || gsoap_resqml2_0_1::soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || gsoap_resqml2_0_1::soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}

inline int soap_GET_string(struct soap *soap, const char *URL, char **p)
{
	if (soap_GET(soap, URL, NULL) || gsoap_resqml2_0_1::soap_read_string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

inline int soap_POST_recv_string(struct soap *soap, char **p)
{
	if (gsoap_resqml2_0_1::soap_read_string(soap, p))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap*, std::vector<resqml20__SealedContactRepresentationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap*, const std::vector<resqml20__SealedContactRepresentationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap*, const char*, int, const std::vector<resqml20__SealedContactRepresentationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__SealedContactRepresentationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap*, const char*, std::vector<resqml20__SealedContactRepresentationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__SealedContactRepresentationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__SealedContactRepresentationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap*, std::vector<resqml20__AbstractContactRepresentationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap*, const std::vector<resqml20__AbstractContactRepresentationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap*, const char*, int, const std::vector<resqml20__AbstractContactRepresentationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AbstractContactRepresentationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap*, const char*, std::vector<resqml20__AbstractContactRepresentationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AbstractContactRepresentationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AbstractContactRepresentationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, std::vector<resqml20__GeologicUnitInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, const std::vector<resqml20__GeologicUnitInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml20__GeologicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__GeologicUnitInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, const char*, std::vector<resqml20__GeologicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__GeologicUnitInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__GeologicUnitInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, std::vector<resqml20__StratigraphicUnitInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, const std::vector<resqml20__StratigraphicUnitInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml20__StratigraphicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__StratigraphicUnitInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, const char*, std::vector<resqml20__StratigraphicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__StratigraphicUnitInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__StratigraphicUnitInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Grid2dPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap*, std::vector<resqml20__Grid2dPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap*, const std::vector<resqml20__Grid2dPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap*, const char*, int, const std::vector<resqml20__Grid2dPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__Grid2dPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap*, const char*, std::vector<resqml20__Grid2dPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__Grid2dPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__Grid2dPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__Grid2dPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeRegion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap*, std::vector<resqml20__VolumeRegion *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap*, const std::vector<resqml20__VolumeRegion *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap*, const char*, int, const std::vector<resqml20__VolumeRegion *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__VolumeRegion *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap*, const char*, std::vector<resqml20__VolumeRegion *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__VolumeRegion *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__VolumeRegion *>  * soap_new_std__vectorTemplateOfPointerToresqml20__VolumeRegion(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__VolumeRegion(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap*, std::vector<resqml20__ContactIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap*, const std::vector<resqml20__ContactIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap*, const char*, int, const std::vector<resqml20__ContactIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ContactIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap*, const char*, std::vector<resqml20__ContactIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ContactIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ContactIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ContactIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ContactIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap*, std::vector<resqml20__AbstractPlaneGeometry *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap*, const std::vector<resqml20__AbstractPlaneGeometry *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap*, const char*, int, const std::vector<resqml20__AbstractPlaneGeometry *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AbstractPlaneGeometry *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap*, const char*, std::vector<resqml20__AbstractPlaneGeometry *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AbstractPlaneGeometry *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AbstractPlaneGeometry *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__TrianglePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap*, std::vector<resqml20__TrianglePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap*, const std::vector<resqml20__TrianglePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap*, const char*, int, const std::vector<resqml20__TrianglePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__TrianglePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap*, const char*, std::vector<resqml20__TrianglePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__TrianglePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__TrianglePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__TrianglePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__TrianglePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__WellboreMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap*, std::vector<resqml20__WellboreMarker *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap*, const std::vector<resqml20__WellboreMarker *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap*, const char*, int, const std::vector<resqml20__WellboreMarker *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__WellboreMarker *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap*, const char*, std::vector<resqml20__WellboreMarker *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__WellboreMarker *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__WellboreMarker *>  * soap_new_std__vectorTemplateOfPointerToresqml20__WellboreMarker(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__WellboreMarker(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__FaultThrow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap*, std::vector<resqml20__FaultThrow *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap*, const std::vector<resqml20__FaultThrow *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap*, const char*, int, const std::vector<resqml20__FaultThrow *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__FaultThrow *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap*, const char*, std::vector<resqml20__FaultThrow *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__FaultThrow *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__FaultThrow *>  * soap_new_std__vectorTemplateOfPointerToresqml20__FaultThrow(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__FaultThrow(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap*, std::vector<resqml20__HorizonInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap*, const std::vector<resqml20__HorizonInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml20__HorizonInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__HorizonInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap*, const char*, std::vector<resqml20__HorizonInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__HorizonInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__HorizonInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__BoundaryRelation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__BoundaryRelation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap*, std::vector<enum resqml20__BoundaryRelation> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap*, const std::vector<enum resqml20__BoundaryRelation> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap*, const char*, int, const std::vector<enum resqml20__BoundaryRelation> *, const char*);
SOAP_FMAC3 std::vector<enum resqml20__BoundaryRelation> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap*, const char*, std::vector<enum resqml20__BoundaryRelation> *, const char*);
SOAP_FMAC1 std::vector<enum resqml20__BoundaryRelation>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml20__BoundaryRelation>  * soap_new_std__vectorTemplateOfresqml20__BoundaryRelation(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfresqml20__BoundaryRelation(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, std::vector<resqml20__GpGridUnstructuredGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, const std::vector<resqml20__GpGridUnstructuredGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, const char*, int, const std::vector<resqml20__GpGridUnstructuredGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__GpGridUnstructuredGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, const char*, std::vector<resqml20__GpGridUnstructuredGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__GpGridUnstructuredGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__GpGridUnstructuredGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap*, std::vector<resqml20__GpGridColumnLayerGrid *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap*, const std::vector<resqml20__GpGridColumnLayerGrid *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap*, const char*, int, const std::vector<resqml20__GpGridColumnLayerGrid *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__GpGridColumnLayerGrid *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap*, const char*, std::vector<resqml20__GpGridColumnLayerGrid *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__GpGridColumnLayerGrid *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__GpGridColumnLayerGrid *>  * soap_new_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__integer(struct soap*, std::vector<LONG64> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__integer(struct soap*, const std::vector<LONG64> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__integer(struct soap*, const char*, int, const std::vector<LONG64> *, const char*);
SOAP_FMAC3 std::vector<LONG64> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__integer(struct soap*, const char*, std::vector<LONG64> *, const char*);
SOAP_FMAC1 std::vector<LONG64>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__integer(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<LONG64>  * soap_new_std__vectorTemplateOfxsd__integer(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfxsd__integer(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfdouble(struct soap*, std::vector<double> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfdouble(struct soap*, const std::vector<double> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfdouble(struct soap*, const char*, int, const std::vector<double> *, const char*);
SOAP_FMAC3 std::vector<double> * SOAP_FMAC4 soap_in_std__vectorTemplateOfdouble(struct soap*, const char*, std::vector<double> *, const char*);
SOAP_FMAC1 std::vector<double>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfdouble(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<double>  * soap_new_std__vectorTemplateOfdouble(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfdouble(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchBoundaries_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap*, std::vector<resqml20__PatchBoundaries *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap*, const std::vector<resqml20__PatchBoundaries *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap*, const char*, int, const std::vector<resqml20__PatchBoundaries *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PatchBoundaries *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap*, const char*, std::vector<resqml20__PatchBoundaries *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PatchBoundaries *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PatchBoundaries *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchBoundaries(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap*, std::vector<resqml20__PolylineSetPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap*, const std::vector<resqml20__PolylineSetPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap*, const char*, int, const std::vector<resqml20__PolylineSetPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PolylineSetPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap*, const char*, std::vector<resqml20__PolylineSetPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PolylineSetPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PolylineSetPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap*, std::vector<resqml20__NodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap*, const std::vector<resqml20__NodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap*, const char*, int, const std::vector<resqml20__NodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__NodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap*, const char*, std::vector<resqml20__NodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__NodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__NodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__NodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__NodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap*, std::vector<resqml20__AbstractContactInterpretationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap*, const std::vector<resqml20__AbstractContactInterpretationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap*, const char*, int, const std::vector<resqml20__AbstractContactInterpretationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AbstractContactInterpretationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap*, const char*, std::vector<resqml20__AbstractContactInterpretationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AbstractContactInterpretationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AbstractContactInterpretationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap*, std::vector<resqml20__SubRepresentationPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap*, const std::vector<resqml20__SubRepresentationPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap*, const char*, int, const std::vector<resqml20__SubRepresentationPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__SubRepresentationPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap*, const char*, std::vector<resqml20__SubRepresentationPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__SubRepresentationPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__SubRepresentationPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap*, std::vector<resqml20__PatchOfGeometry *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap*, const std::vector<resqml20__PatchOfGeometry *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap*, const char*, int, const std::vector<resqml20__PatchOfGeometry *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PatchOfGeometry *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap*, const char*, std::vector<resqml20__PatchOfGeometry *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PatchOfGeometry *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PatchOfGeometry *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap*, std::vector<resqml20__PropertyKindFacet *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap*, const std::vector<resqml20__PropertyKindFacet *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap*, const char*, int, const std::vector<resqml20__PropertyKindFacet *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PropertyKindFacet *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap*, const char*, std::vector<resqml20__PropertyKindFacet *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PropertyKindFacet *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PropertyKindFacet *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfValues_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap*, std::vector<resqml20__PatchOfValues *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap*, const std::vector<resqml20__PatchOfValues *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap*, const char*, int, const std::vector<resqml20__PatchOfValues *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PatchOfValues *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap*, const char*, std::vector<resqml20__PatchOfValues *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PatchOfValues *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PatchOfValues *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PatchOfValues(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfValues(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StringLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap*, std::vector<resqml20__StringLookup *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap*, const std::vector<resqml20__StringLookup *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap*, const char*, int, const std::vector<resqml20__StringLookup *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__StringLookup *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap*, const char*, std::vector<resqml20__StringLookup *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__StringLookup *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__StringLookup *>  * soap_new_std__vectorTemplateOfPointerToresqml20__StringLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__StringLookup(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap*, std::vector<resqml20__PatchOfPoints *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap*, const std::vector<resqml20__PatchOfPoints *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap*, const char*, int, const std::vector<resqml20__PatchOfPoints *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__PatchOfPoints *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap*, const char*, std::vector<resqml20__PatchOfPoints *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__PatchOfPoints *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__PatchOfPoints *>  * soap_new_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__PatchOfPoints(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap*, std::vector<resqml20__DoubleLookup *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap*, const std::vector<resqml20__DoubleLookup *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap*, const char*, int, const std::vector<resqml20__DoubleLookup *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__DoubleLookup *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap*, const char*, std::vector<resqml20__DoubleLookup *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__DoubleLookup *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__DoubleLookup *>  * soap_new_std__vectorTemplateOfPointerToresqml20__DoubleLookup(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__DoubleLookup(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ParameterTemplate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap*, std::vector<resqml20__ParameterTemplate *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap*, const std::vector<resqml20__ParameterTemplate *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap*, const char*, int, const std::vector<resqml20__ParameterTemplate *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ParameterTemplate *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap*, const char*, std::vector<resqml20__ParameterTemplate *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ParameterTemplate *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ParameterTemplate *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ParameterTemplate(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap*, std::vector<resqml20__Timestamp *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap*, const std::vector<resqml20__Timestamp *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap*, const char*, int, const std::vector<resqml20__Timestamp *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__Timestamp *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap*, const char*, std::vector<resqml20__Timestamp *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__Timestamp *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__Timestamp *>  * soap_new_std__vectorTemplateOfPointerToresqml20__Timestamp(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__Timestamp(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap*, std::vector<resqml20__ChronostratigraphicRank *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap*, const std::vector<resqml20__ChronostratigraphicRank *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap*, const char*, int, const std::vector<resqml20__ChronostratigraphicRank *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ChronostratigraphicRank *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap*, const char*, std::vector<resqml20__ChronostratigraphicRank *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ChronostratigraphicRank *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ChronostratigraphicRank *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap*, std::vector<resqml20__RepresentationIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap*, const std::vector<resqml20__RepresentationIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap*, const char*, int, const std::vector<resqml20__RepresentationIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__RepresentationIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap*, const char*, std::vector<resqml20__RepresentationIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__RepresentationIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__RepresentationIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__EdgePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap*, std::vector<resqml20__EdgePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap*, const std::vector<resqml20__EdgePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap*, const char*, int, const std::vector<resqml20__EdgePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__EdgePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap*, const char*, std::vector<resqml20__EdgePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__EdgePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__EdgePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__EdgePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__EdgePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NameValuePair_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap*, std::vector<resqml20__NameValuePair *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap*, const std::vector<resqml20__NameValuePair *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap*, const char*, int, const std::vector<resqml20__NameValuePair *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__NameValuePair *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap*, const char*, std::vector<resqml20__NameValuePair *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__NameValuePair *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__NameValuePair *>  * soap_new_std__vectorTemplateOfPointerToresqml20__NameValuePair(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__NameValuePair(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap*, std::vector<resqml20__AdditionalGridPoints *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap*, const std::vector<resqml20__AdditionalGridPoints *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap*, const char*, int, const std::vector<resqml20__AdditionalGridPoints *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AdditionalGridPoints *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap*, const char*, std::vector<resqml20__AdditionalGridPoints *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AdditionalGridPoints *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AdditionalGridPoints *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap*, std::vector<resqml20__ElementIndices *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap*, const std::vector<resqml20__ElementIndices *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap*, const char*, int, const std::vector<resqml20__ElementIndices *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ElementIndices *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap*, const char*, std::vector<resqml20__ElementIndices *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ElementIndices *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ElementIndices *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ElementIndices(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ElementIndices(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ThreePoint3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap*, std::vector<resqml20__ThreePoint3d *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap*, const std::vector<resqml20__ThreePoint3d *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap*, const char*, int, const std::vector<resqml20__ThreePoint3d *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ThreePoint3d *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap*, const char*, std::vector<resqml20__ThreePoint3d *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ThreePoint3d *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ThreePoint3d *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ThreePoint3d(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap*, std::vector<resqml20__IntegerConstantArray *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap*, const std::vector<resqml20__IntegerConstantArray *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap*, const char*, int, const std::vector<resqml20__IntegerConstantArray *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__IntegerConstantArray *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap*, const char*, std::vector<resqml20__IntegerConstantArray *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__IntegerConstantArray *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__IntegerConstantArray *>  * soap_new_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap*, std::vector<resqml20__DoubleConstantArray *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap*, const std::vector<resqml20__DoubleConstantArray *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap*, const char*, int, const std::vector<resqml20__DoubleConstantArray *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__DoubleConstantArray *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap*, const char*, std::vector<resqml20__DoubleConstantArray *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__DoubleConstantArray *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__DoubleConstantArray *>  * soap_new_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap*, std::vector<resqml20__ContactPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap*, const std::vector<resqml20__ContactPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap*, const char*, int, const std::vector<resqml20__ContactPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ContactPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap*, const char*, std::vector<resqml20__ContactPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ContactPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ContactPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ContactPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ContactPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, std::vector<ULONG64> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const std::vector<ULONG64> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const char*, int, const std::vector<ULONG64> *, const char*);
SOAP_FMAC3 std::vector<ULONG64> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const char*, std::vector<ULONG64> *, const char*);
SOAP_FMAC1 std::vector<ULONG64>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ULONG64>  * soap_new_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfxsd__nonNegativeInteger(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap*, std::vector<resqml20__ColumnSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap*, const std::vector<resqml20__ColumnSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap*, const char*, int, const std::vector<resqml20__ColumnSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ColumnSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap*, const char*, std::vector<resqml20__ColumnSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ColumnSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ColumnSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3dOffset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap*, std::vector<resqml20__Point3dOffset *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap*, const std::vector<resqml20__Point3dOffset *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap*, const char*, int, const std::vector<resqml20__Point3dOffset *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__Point3dOffset *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap*, const char*, std::vector<resqml20__Point3dOffset *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__Point3dOffset *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__Point3dOffset *>  * soap_new_std__vectorTemplateOfPointerToresqml20__Point3dOffset(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__Point3dOffset(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, std::vector<ptm__equivalentPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const std::vector<ptm__equivalentPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const char*, int, const std::vector<ptm__equivalentPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<ptm__equivalentPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const char*, std::vector<ptm__equivalentPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<ptm__equivalentPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ptm__equivalentPropertyType *>  * soap_new_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToptm__equivalentPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, std::vector<ptm__standardEnergisticsPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const std::vector<ptm__standardEnergisticsPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, int, const std::vector<ptm__standardEnergisticsPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<ptm__standardEnergisticsPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, std::vector<ptm__standardEnergisticsPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<ptm__standardEnergisticsPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ptm__standardEnergisticsPropertyType *>  * soap_new_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__ObjectAlias_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap*, std::vector<eml20__ObjectAlias *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap*, const std::vector<eml20__ObjectAlias *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap*, const char*, int, const std::vector<eml20__ObjectAlias *> *, const char*);
SOAP_FMAC3 std::vector<eml20__ObjectAlias *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap*, const char*, std::vector<eml20__ObjectAlias *> *, const char*);
SOAP_FMAC1 std::vector<eml20__ObjectAlias *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eml20__ObjectAlias *>  * soap_new_std__vectorTemplateOfPointerToeml20__ObjectAlias(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToeml20__ObjectAlias(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char *> *, const char*);
SOAP_FMAC3 std::vector<char *> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char *> *, const char*);
SOAP_FMAC1 std::vector<char *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<char *>  * soap_new_std__vectorTemplateOf_XML(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap*, std::vector<resqml20__AbstractParameterKey *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap*, const std::vector<resqml20__AbstractParameterKey *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap*, const char*, int, const std::vector<resqml20__AbstractParameterKey *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AbstractParameterKey *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap*, const char*, std::vector<resqml20__AbstractParameterKey *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AbstractParameterKey *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AbstractParameterKey *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap*, std::vector<resqml20__AbstractActivityParameter *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap*, const std::vector<resqml20__AbstractActivityParameter *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap*, const char*, int, const std::vector<resqml20__AbstractActivityParameter *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__AbstractActivityParameter *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap*, const char*, std::vector<resqml20__AbstractActivityParameter *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__AbstractActivityParameter *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__AbstractActivityParameter *>  * soap_new_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ParameterKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ParameterKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml20__ParameterKind(struct soap*, std::vector<enum resqml20__ParameterKind> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml20__ParameterKind(struct soap*, const std::vector<enum resqml20__ParameterKind> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml20__ParameterKind(struct soap*, const char*, int, const std::vector<enum resqml20__ParameterKind> *, const char*);
SOAP_FMAC3 std::vector<enum resqml20__ParameterKind> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml20__ParameterKind(struct soap*, const char*, std::vector<enum resqml20__ParameterKind> *, const char*);
SOAP_FMAC1 std::vector<enum resqml20__ParameterKind>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml20__ParameterKind(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml20__ParameterKind>  * soap_new_std__vectorTemplateOfresqml20__ParameterKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfresqml20__ParameterKind(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap*, std::vector<resqml20__OrientedMacroFace *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap*, const std::vector<resqml20__OrientedMacroFace *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap*, const char*, int, const std::vector<resqml20__OrientedMacroFace *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__OrientedMacroFace *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap*, const char*, std::vector<resqml20__OrientedMacroFace *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__OrientedMacroFace *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__OrientedMacroFace *>  * soap_new_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeShell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap*, std::vector<resqml20__VolumeShell *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap*, const std::vector<resqml20__VolumeShell *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap*, const char*, int, const std::vector<resqml20__VolumeShell *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__VolumeShell *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap*, const char*, std::vector<resqml20__VolumeShell *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__VolumeShell *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__VolumeShell *>  * soap_new_std__vectorTemplateOfPointerToresqml20__VolumeShell(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__VolumeShell(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ThrowKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ThrowKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml20__ThrowKind(struct soap*, std::vector<enum resqml20__ThrowKind> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml20__ThrowKind(struct soap*, const std::vector<enum resqml20__ThrowKind> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml20__ThrowKind(struct soap*, const char*, int, const std::vector<enum resqml20__ThrowKind> *, const char*);
SOAP_FMAC3 std::vector<enum resqml20__ThrowKind> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml20__ThrowKind(struct soap*, const char*, std::vector<enum resqml20__ThrowKind> *, const char*);
SOAP_FMAC1 std::vector<enum resqml20__ThrowKind>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml20__ThrowKind(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml20__ThrowKind>  * soap_new_std__vectorTemplateOfresqml20__ThrowKind(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfresqml20__ThrowKind(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__DataObjectReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap*, std::vector<eml20__DataObjectReference *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap*, const std::vector<eml20__DataObjectReference *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap*, const char*, int, const std::vector<eml20__DataObjectReference *> *, const char*);
SOAP_FMAC3 std::vector<eml20__DataObjectReference *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap*, const char*, std::vector<eml20__DataObjectReference *> *, const char*);
SOAP_FMAC1 std::vector<eml20__DataObjectReference *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eml20__DataObjectReference *>  * soap_new_std__vectorTemplateOfPointerToeml20__DataObjectReference(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToeml20__DataObjectReference(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, int, const std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap*, std::vector<resqml20__GpGridIjkGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap*, const std::vector<resqml20__GpGridIjkGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap*, const char*, int, const std::vector<resqml20__GpGridIjkGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__GpGridIjkGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap*, const char*, std::vector<resqml20__GpGridIjkGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__GpGridIjkGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__GpGridIjkGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap*, std::vector<resqml20__UniformSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap*, const std::vector<resqml20__UniformSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap*, const char*, int, const std::vector<resqml20__UniformSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__UniformSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap*, const char*, std::vector<resqml20__UniformSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__UniformSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__UniformSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap*, std::vector<resqml20__VariableSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap*, const std::vector<resqml20__VariableSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap*, const char*, int, const std::vector<resqml20__VariableSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__VariableSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap*, const char*, std::vector<resqml20__VariableSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__VariableSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__VariableSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap*, std::vector<resqml20__ElementIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap*, const std::vector<resqml20__ElementIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap*, const char*, int, const std::vector<resqml20__ElementIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__ElementIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap*, const char*, std::vector<resqml20__ElementIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__ElementIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__ElementIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml20__ElementIdentity(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__ElementIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap*, std::vector<resqml20__Point3d *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap*, const std::vector<resqml20__Point3d *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap*, const char*, int, const std::vector<resqml20__Point3d *> *, const char*);
SOAP_FMAC3 std::vector<resqml20__Point3d *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap*, const char*, std::vector<resqml20__Point3d *> *, const char*);
SOAP_FMAC1 std::vector<resqml20__Point3d *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml20__Point3d *>  * soap_new_std__vectorTemplateOfPointerToresqml20__Point3d(struct soap *soap, int n = -1)
{
	return gsoap_resqml2_0_1::soap_instantiate_std__vectorTemplateOfPointerToresqml20__Point3d(soap, n, NULL, NULL, NULL);
}
#endif

} // namespace gsoap_resqml2_0_1


#endif

/* End of gsoap_resqml2_0_1H.h */
