/* gsoap_resqml2_0_1Stub.h
   Generated by gSOAP 2.8.92 for resqml2_0_1ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use, no resale/redistribution.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_resqml20	"http://www.energistics.org/energyml/data/resqmlv2"
#define SOAP_NAMESPACE_OF_eml20	"http://www.energistics.org/energyml/data/commonv2"
#define SOAP_NAMESPACE_OF_gml	"http://www.opengis.net/gml/3.2"
#define SOAP_NAMESPACE_OF_xlink	"http://www.w3.org/1999/xlink"
#define SOAP_NAMESPACE_OF_gmd	"http://www.isotc211.org/2005/gmd"
#define SOAP_NAMESPACE_OF_gts	"http://www.isotc211.org/2005/gts"
#define SOAP_NAMESPACE_OF_gco	"http://www.isotc211.org/2005/gco"
#define SOAP_NAMESPACE_OF_gsr	"http://www.isotc211.org/2005/gsr"
#define SOAP_NAMESPACE_OF_ptm	"http://www.f2i-consulting.com/PropertyTypeMapping"
#include <time.h>

#ifndef gsoap_resqml2_0_1Stub_H
#define gsoap_resqml2_0_1Stub_H
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20892
# error "GSOAP VERSION 20892 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


namespace gsoap_resqml2_0_1 {

/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* resqml2_0_1ForGsoap.h:1438 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind (-562)

/* resqml20:TimeSetKind */
enum resqml20__TimeSetKind {
	resqml20__TimeSetKind__single_x0020time = 0,
	resqml20__TimeSetKind__equivalent_x0020times = 1,
	resqml20__TimeSetKind__not_x0020a_x0020time_x0020set = 2
};
#endif

/* resqml2_0_1ForGsoap.h:1464 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet (-563)

/* resqml20:Facet */
enum resqml20__Facet {
	resqml20__Facet__conditions = 0,
	resqml20__Facet__direction = 1,
	resqml20__Facet__netgross = 2,
	resqml20__Facet__qualifier = 3,
	resqml20__Facet__statistics = 4,
	resqml20__Facet__what = 5
};
#endif

/* resqml2_0_1ForGsoap.h:1501 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom (-564)

/* resqml20:ResqmlUom */
enum resqml20__ResqmlUom {
	resqml20__ResqmlUom__A = 'A',
	resqml20__ResqmlUom__a = 'a',
	resqml20__ResqmlUom__b = 'b',
	resqml20__ResqmlUom__B = 'B',
	resqml20__ResqmlUom__C = 'C',
	resqml20__ResqmlUom__d = 'd',
	resqml20__ResqmlUom__D = 'D',
	resqml20__ResqmlUom__F = 'F',
	resqml20__ResqmlUom__g = 'g',
	resqml20__ResqmlUom__H = 'H',
	resqml20__ResqmlUom__h = 'h',
	resqml20__ResqmlUom__J = 'J',
	resqml20__ResqmlUom__K = 'K',
	resqml20__ResqmlUom__L = 'L',
	resqml20__ResqmlUom__m = 'm',
	resqml20__ResqmlUom__N = 'N',
	resqml20__ResqmlUom__O = 'O',
	resqml20__ResqmlUom__P = 'P',
	resqml20__ResqmlUom__S = 'S',
	resqml20__ResqmlUom__s = 's',
	resqml20__ResqmlUom__t = 't',
	resqml20__ResqmlUom__T = 'T',
	resqml20__ResqmlUom__V = 'V',
	resqml20__ResqmlUom__W = 'W',
	resqml20__ResqmlUom___x0025 = 'u',
	resqml20__ResqmlUom___x0025_x005barea_x005d = 'v',
	resqml20__ResqmlUom___x0025_x005bmass_x005d = 'w',
	resqml20__ResqmlUom___x0025_x005bmolar_x005d = 'x',
	resqml20__ResqmlUom___x0025_x005bvol_x005d = 'y',
	resqml20__ResqmlUom___x0028bbl_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 'z',
	resqml20__ResqmlUom___x0028m3_x002fd_x0029_x002f_x0028m3_x002fd_x0029 = 123,
	resqml20__ResqmlUom___x0028m3_x002fs_x0029_x002f_x0028m3_x002fs_x0029 = 124,
	resqml20__ResqmlUom__0_x002e001_x0020bbl_x002fft3 = 125,
	resqml20__ResqmlUom__0_x002e001_x0020bbl_x002fm3 = 126,
	resqml20__ResqmlUom__0_x002e001_x0020d_x002fft3 = 127,
	resqml20__ResqmlUom__0_x002e001_x0020gal_x005bUK_x005d_x002fbbl = 128,
	resqml20__ResqmlUom__0_x002e001_x0020gal_x005bUK_x005d_x002fgal_x005bUK_x005d = 129,
	resqml20__ResqmlUom__0_x002e001_x0020gal_x005bUS_x005d_x002fbbl = 130,
	resqml20__ResqmlUom__0_x002e001_x0020gal_x005bUS_x005d_x002fft3 = 131,
	resqml20__ResqmlUom__0_x002e001_x0020gal_x005bUS_x005d_x002fgal_x005bUS_x005d = 132,
	resqml20__ResqmlUom__0_x002e001_x0020h_x002fft = 133,
	resqml20__ResqmlUom__0_x002e001_x0020kPa2_x002fcP = 134,
	resqml20__ResqmlUom__0_x002e001_x0020lbm_x002fbbl = 135,
	resqml20__ResqmlUom__0_x002e001_x0020lbm_x002fgal_x005bUK_x005d = 136,
	resqml20__ResqmlUom__0_x002e001_x0020lbm_x002fgal_x005bUS_x005d = 137,
	resqml20__ResqmlUom__0_x002e001_x0020psi_x002fft = 138,
	resqml20__ResqmlUom__0_x002e001_x0020pt_x005bUK_x005d_x002fbbl = 139,
	resqml20__ResqmlUom__0_x002e001_x0020seca = 140,
	resqml20__ResqmlUom__0_x002e01_x0020bbl_x002fbbl = 141,
	resqml20__ResqmlUom__0_x002e01_x0020dega_x002fft = 142,
	resqml20__ResqmlUom__0_x002e01_x0020degF_x002fft = 143,
	resqml20__ResqmlUom__0_x002e01_x0020dm3_x002fkm = 144,
	resqml20__ResqmlUom__0_x002e01_x0020ft_x002fft = 145,
	resqml20__ResqmlUom__0_x002e01_x0020grain_x002fft3 = 146,
	resqml20__ResqmlUom__0_x002e01_x0020L_x002fkg = 147,
	resqml20__ResqmlUom__0_x002e01_x0020L_x002fkm = 148,
	resqml20__ResqmlUom__0_x002e01_x0020lbf_x002fft = 149,
	resqml20__ResqmlUom__0_x002e01_x0020lbf_x002fft2 = 150,
	resqml20__ResqmlUom__0_x002e01_x0020lbm_x002fft2 = 151,
	resqml20__ResqmlUom__0_x002e01_x0020psi_x002fft = 152,
	resqml20__ResqmlUom__0_x002e1_x0020ft = 153,
	resqml20__ResqmlUom__0_x002e1_x0020ft_x005bUS_x005d = 154,
	resqml20__ResqmlUom__0_x002e1_x0020gal_x005bUS_x005d_x002fbbl = 155,
	resqml20__ResqmlUom__0_x002e1_x0020in = 156,
	resqml20__ResqmlUom__0_x002e1_x0020L_x002fbbl = 157,
	resqml20__ResqmlUom__0_x002e1_x0020lbm_x002fbbl = 158,
	resqml20__ResqmlUom__0_x002e1_x0020pt_x005bUS_x005d_x002fbbl = 159,
	resqml20__ResqmlUom__0_x002e1_x0020yd = 160,
	resqml20__ResqmlUom__1_x002f_x0028kg_x002es_x0029 = 161,
	resqml20__ResqmlUom__1_x002f16_x0020in = 162,
	resqml20__ResqmlUom__1_x002f2_x0020ft = 163,
	resqml20__ResqmlUom__1_x002f2_x0020ms = 164,
	resqml20__ResqmlUom__1_x002f30_x0020cm3_x002fmin = 165,
	resqml20__ResqmlUom__1_x002f30_x0020dega_x002fft = 166,
	resqml20__ResqmlUom__1_x002f30_x0020dega_x002fm = 167,
	resqml20__ResqmlUom__1_x002f30_x0020lbf_x002fm = 168,
	resqml20__ResqmlUom__1_x002f30_x0020m_x002fm = 169,
	resqml20__ResqmlUom__1_x002f30_x0020N_x002fm = 170,
	resqml20__ResqmlUom__1_x002f32_x0020in = 171,
	resqml20__ResqmlUom__1_x002f64_x0020in = 172,
	resqml20__ResqmlUom__1_x002fa = 173,
	resqml20__ResqmlUom__1_x002fangstrom = 174,
	resqml20__ResqmlUom__1_x002fbar = 175,
	resqml20__ResqmlUom__1_x002fbbl = 176,
	resqml20__ResqmlUom__1_x002fcm = 177,
	resqml20__ResqmlUom__1_x002fd = 178,
	resqml20__ResqmlUom__1_x002fdegC = 179,
	resqml20__ResqmlUom__1_x002fdegF = 180,
	resqml20__ResqmlUom__1_x002fdegR = 181,
	resqml20__ResqmlUom__1_x002fft = 182,
	resqml20__ResqmlUom__1_x002fft2 = 183,
	resqml20__ResqmlUom__1_x002fft3 = 184,
	resqml20__ResqmlUom__1_x002fg = 185,
	resqml20__ResqmlUom__1_x002fgal_x005bUK_x005d = 186,
	resqml20__ResqmlUom__1_x002fgal_x005bUS_x005d = 187,
	resqml20__ResqmlUom__1_x002fH = 188,
	resqml20__ResqmlUom__1_x002fh = 189,
	resqml20__ResqmlUom__1_x002fin = 190,
	resqml20__ResqmlUom__1_x002fK = 191,
	resqml20__ResqmlUom__1_x002fkg = 192,
	resqml20__ResqmlUom__1_x002fkm2 = 193,
	resqml20__ResqmlUom__1_x002fkPa = 194,
	resqml20__ResqmlUom__1_x002fL = 195,
	resqml20__ResqmlUom__1_x002flbf = 196,
	resqml20__ResqmlUom__1_x002flbm = 197,
	resqml20__ResqmlUom__1_x002fm = 198,
	resqml20__ResqmlUom__1_x002fm2 = 199,
	resqml20__ResqmlUom__1_x002fm3 = 200,
	resqml20__ResqmlUom__1_x002fmi = 201,
	resqml20__ResqmlUom__1_x002fmi2 = 202,
	resqml20__ResqmlUom__1_x002fmin = 203,
	resqml20__ResqmlUom__1_x002fmm = 204,
	resqml20__ResqmlUom__1_x002fms = 205,
	resqml20__ResqmlUom__1_x002fN = 206,
	resqml20__ResqmlUom__1_x002fnm = 207,
	resqml20__ResqmlUom__1_x002fPa = 208,
	resqml20__ResqmlUom__1_x002fpPa = 209,
	resqml20__ResqmlUom__1_x002fpsi = 210,
	resqml20__ResqmlUom__1_x002fs = 211,
	resqml20__ResqmlUom__1_x002fupsi = 212,
	resqml20__ResqmlUom__1_x002fus = 213,
	resqml20__ResqmlUom__1_x002fuV = 214,
	resqml20__ResqmlUom__1_x002fV = 215,
	resqml20__ResqmlUom__1_x002fwk = 216,
	resqml20__ResqmlUom__1_x002fyd = 217,
	resqml20__ResqmlUom__10_x0020ft = 218,
	resqml20__ResqmlUom__10_x0020in = 219,
	resqml20__ResqmlUom__10_x0020km = 220,
	resqml20__ResqmlUom__10_x0020kN = 221,
	resqml20__ResqmlUom__10_x0020Mg_x002fm3 = 222,
	resqml20__ResqmlUom__100_x0020ft = 223,
	resqml20__ResqmlUom__100_x0020ka_x005bt_x005d = 224,
	resqml20__ResqmlUom__100_x0020km = 225,
	resqml20__ResqmlUom__1000_x0020bbl = 226,
	resqml20__ResqmlUom__1000_x0020bbl_x002eft_x002fd = 227,
	resqml20__ResqmlUom__1000_x0020bbl_x002fd = 228,
	resqml20__ResqmlUom__1000_x0020ft = 229,
	resqml20__ResqmlUom__1000_x0020ft_x002fh = 230,
	resqml20__ResqmlUom__1000_x0020ft_x002fs = 231,
	resqml20__ResqmlUom__1000_x0020ft3 = 232,
	resqml20__ResqmlUom__1000_x0020ft3_x002f_x0028d_x002eft_x0029 = 233,
	resqml20__ResqmlUom__1000_x0020ft3_x002f_x0028psi_x002ed_x0029 = 234,
	resqml20__ResqmlUom__1000_x0020ft3_x002fbbl = 235,
	resqml20__ResqmlUom__1000_x0020ft3_x002fd = 236,
	resqml20__ResqmlUom__1000_x0020gal_x005bUK_x005d = 237,
	resqml20__ResqmlUom__1000_x0020gal_x005bUS_x005d = 238,
	resqml20__ResqmlUom__1000_x0020lbf_x002eft = 239,
	resqml20__ResqmlUom__1000_x0020m3 = 240,
	resqml20__ResqmlUom__1000_x0020m3_x002f_x0028d_x002em_x0029 = 241,
	resqml20__ResqmlUom__1000_x0020m3_x002f_x0028h_x002em_x0029 = 242,
	resqml20__ResqmlUom__1000_x0020m3_x002fd = 243,
	resqml20__ResqmlUom__1000_x0020m3_x002fh = 244,
	resqml20__ResqmlUom__1000_x0020m3_x002fm3 = 245,
	resqml20__ResqmlUom__1000_x0020m4_x002fd = 246,
	resqml20__ResqmlUom__1E_6_x0020acre_x002eft_x002fbbl = 247,
	resqml20__ResqmlUom__1E_6_x0020bbl_x002fft3 = 248,
	resqml20__ResqmlUom__1E_6_x0020bbl_x002fm3 = 249,
	resqml20__ResqmlUom__1E_6_x0020gal_x005bUS_x005d = 250,
	resqml20__ResqmlUom__1E_6_x0020m3_x002f_x0028m3_x002edegC_x0029 = 251,
	resqml20__ResqmlUom__1E_6_x0020m3_x002f_x0028m3_x002edegF_x0029 = 252,
	resqml20__ResqmlUom__1E_9_x00201_x002fft = 253,
	resqml20__ResqmlUom__1E12_x0020ft3 = 254,
	resqml20__ResqmlUom__1E6_x0020_x0028ft3_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 255,
	resqml20__ResqmlUom__1E6_x0020bbl = 256,
	resqml20__ResqmlUom__1E6_x0020bbl_x002f_x0028acre_x002eft_x0029 = 257,
	resqml20__ResqmlUom__1E6_x0020bbl_x002facre = 258,
	resqml20__ResqmlUom__1E6_x0020bbl_x002fd = 259,
	resqml20__ResqmlUom__1E6_x0020Btu_x005bIT_x005d = 260,
	resqml20__ResqmlUom__1E6_x0020Btu_x005bIT_x005d_x002fh = 261,
	resqml20__ResqmlUom__1E6_x0020ft3 = 262,
	resqml20__ResqmlUom__1E6_x0020ft3_x002f_x0028acre_x002eft_x0029 = 263,
	resqml20__ResqmlUom__1E6_x0020ft3_x002fbbl = 264,
	resqml20__ResqmlUom__1E6_x0020ft3_x002fd = 265,
	resqml20__ResqmlUom__1E6_x0020lbm_x002fa = 266,
	resqml20__ResqmlUom__1E6_x0020m3 = 267,
	resqml20__ResqmlUom__1E6_x0020m3_x002fd = 268,
	resqml20__ResqmlUom__1E9_x0020bbl = 269,
	resqml20__ResqmlUom__1E9_x0020ft3 = 270,
	resqml20__ResqmlUom__30_x0020ft = 271,
	resqml20__ResqmlUom__30_x0020m = 272,
	resqml20__ResqmlUom__A_x002eh = 273,
	resqml20__ResqmlUom__A_x002em2 = 274,
	resqml20__ResqmlUom__A_x002es = 275,
	resqml20__ResqmlUom__A_x002es_x002fkg = 276,
	resqml20__ResqmlUom__A_x002es_x002fm3 = 277,
	resqml20__ResqmlUom__A_x002fcm2 = 278,
	resqml20__ResqmlUom__A_x002fft2 = 279,
	resqml20__ResqmlUom__A_x002fm = 280,
	resqml20__ResqmlUom__A_x002fm2 = 281,
	resqml20__ResqmlUom__A_x002fmm = 282,
	resqml20__ResqmlUom__A_x002fmm2 = 283,
	resqml20__ResqmlUom__a_x005bt_x005d = 284,
	resqml20__ResqmlUom__acre = 285,
	resqml20__ResqmlUom__acre_x002eft = 286,
	resqml20__ResqmlUom__ag = 287,
	resqml20__ResqmlUom__aJ = 288,
	resqml20__ResqmlUom__angstrom = 289,
	resqml20__ResqmlUom__at = 290,
	resqml20__ResqmlUom__atm = 291,
	resqml20__ResqmlUom__atm_x002fft = 292,
	resqml20__ResqmlUom__atm_x002fh = 293,
	resqml20__ResqmlUom__atm_x002fhm = 294,
	resqml20__ResqmlUom__atm_x002fm = 295,
	resqml20__ResqmlUom__B_x002eW = 296,
	resqml20__ResqmlUom__b_x002fcm3 = 297,
	resqml20__ResqmlUom__B_x002fm = 298,
	resqml20__ResqmlUom__B_x002fO = 299,
	resqml20__ResqmlUom__bar = 300,
	resqml20__ResqmlUom__bar_x002fh = 301,
	resqml20__ResqmlUom__bar_x002fkm = 302,
	resqml20__ResqmlUom__bar_x002fm = 303,
	resqml20__ResqmlUom__bar2 = 304,
	resqml20__ResqmlUom__bar2_x002fcP = 305,
	resqml20__ResqmlUom__bbl = 306,
	resqml20__ResqmlUom__bbl_x002f_x0028acre_x002eft_x0029 = 307,
	resqml20__ResqmlUom__bbl_x002f_x0028d_x002eacre_x002eft_x0029 = 308,
	resqml20__ResqmlUom__bbl_x002f_x0028d_x002eft_x0029 = 309,
	resqml20__ResqmlUom__bbl_x002f_x0028ft_x002epsi_x002ed_x0029 = 310,
	resqml20__ResqmlUom__bbl_x002f_x0028kPa_x002ed_x0029 = 311,
	resqml20__ResqmlUom__bbl_x002f_x0028psi_x002ed_x0029 = 312,
	resqml20__ResqmlUom__bbl_x002facre = 313,
	resqml20__ResqmlUom__bbl_x002fbbl = 314,
	resqml20__ResqmlUom__bbl_x002fd = 315,
	resqml20__ResqmlUom__bbl_x002fd2 = 316,
	resqml20__ResqmlUom__bbl_x002fft = 317,
	resqml20__ResqmlUom__bbl_x002fft3 = 318,
	resqml20__ResqmlUom__bbl_x002fh = 319,
	resqml20__ResqmlUom__bbl_x002fh2 = 320,
	resqml20__ResqmlUom__bbl_x002fin = 321,
	resqml20__ResqmlUom__bbl_x002fm3 = 322,
	resqml20__ResqmlUom__bbl_x002fmi = 323,
	resqml20__ResqmlUom__bbl_x002fmin = 324,
	resqml20__ResqmlUom__bbl_x002fpsi = 325,
	resqml20__ResqmlUom__bbl_x002fton_x005bUK_x005d = 326,
	resqml20__ResqmlUom__bbl_x002fton_x005bUS_x005d = 327,
	resqml20__ResqmlUom__Bd = 328,
	resqml20__ResqmlUom__bit = 329,
	resqml20__ResqmlUom__bit_x002fs = 330,
	resqml20__ResqmlUom__Bq = 331,
	resqml20__ResqmlUom__Bq_x002fkg = 332,
	resqml20__ResqmlUom__Btu_x005bIT_x005d = 333,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002ein_x002f_x0028h_x002eft2_x002edegF_x0029 = 334,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft_x002edegF_x0029 = 335,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x0029 = 336,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edegF_x0029 = 337,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edegR_x0029 = 338,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x0029 = 339,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x002edegF_x0029 = 340,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028h_x002em2_x002edegC_x0029 = 341,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028hp_x002eh_x0029 = 342,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edegF_x0029 = 343,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edegR_x0029 = 344,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028lbmol_x002edegF_x0029 = 345,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x0029 = 346,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x002edegF_x0029 = 347,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x0029 = 348,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x002edegF_x0029 = 349,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fbbl = 350,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fft3 = 351,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fgal_x005bUK_x005d = 352,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fgal_x005bUS_x005d = 353,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fh = 354,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002flbm = 355,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002flbmol = 356,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fmin = 357,
	resqml20__ResqmlUom__Btu_x005bIT_x005d_x002fs = 358,
	resqml20__ResqmlUom__Btu_x005bth_x005d = 359,
	resqml20__ResqmlUom__Btu_x005bUK_x005d = 360,
	resqml20__ResqmlUom__byte = 361,
	resqml20__ResqmlUom__byte_x002fs = 362,
	resqml20__ResqmlUom__C_x002em = 363,
	resqml20__ResqmlUom__C_x002fcm2 = 364,
	resqml20__ResqmlUom__C_x002fcm3 = 365,
	resqml20__ResqmlUom__C_x002fg = 366,
	resqml20__ResqmlUom__C_x002fkg = 367,
	resqml20__ResqmlUom__C_x002fm2 = 368,
	resqml20__ResqmlUom__C_x002fm3 = 369,
	resqml20__ResqmlUom__C_x002fmm2 = 370,
	resqml20__ResqmlUom__C_x002fmm3 = 371,
	resqml20__ResqmlUom__ca = 372,
	resqml20__ResqmlUom__cA = 373,
	resqml20__ResqmlUom__cal_x005bIT_x005d = 374,
	resqml20__ResqmlUom__cal_x005bth_x005d = 375,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028g_x002eK_x0029 = 376,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028h_x002ecm_x002edegC_x0029 = 377,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x0029 = 378,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x002edegC_x0029 = 379,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028h_x002ecm3_x0029 = 380,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028mol_x002edegC_x0029 = 381,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028s_x002ecm_x002edegC_x0029 = 382,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028s_x002ecm2_x002edegC_x0029 = 383,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002f_x0028s_x002ecm3_x0029 = 384,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fcm3 = 385,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fg = 386,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fh = 387,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fkg = 388,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002flbm = 389,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fmL = 390,
	resqml20__ResqmlUom__cal_x005bth_x005d_x002fmm3 = 391,
	resqml20__ResqmlUom__cC = 392,
	resqml20__ResqmlUom__ccal_x005bth_x005d = 393,
	resqml20__ResqmlUom__ccgr = 394,
	resqml20__ResqmlUom__cd = 395,
	resqml20__ResqmlUom__cd_x002fm2 = 396,
	resqml20__ResqmlUom__cEuc = 397,
	resqml20__ResqmlUom__ceV = 398,
	resqml20__ResqmlUom__cF = 399,
	resqml20__ResqmlUom__cg = 400,
	resqml20__ResqmlUom__cgauss = 401,
	resqml20__ResqmlUom__cgr = 402,
	resqml20__ResqmlUom__cGy = 403,
	resqml20__ResqmlUom__cH = 404,
	resqml20__ResqmlUom__chain = 405,
	resqml20__ResqmlUom__chain_x005bBnA_x005d = 406,
	resqml20__ResqmlUom__chain_x005bBnB_x005d = 407,
	resqml20__ResqmlUom__chain_x005bCla_x005d = 408,
	resqml20__ResqmlUom__chain_x005bInd37_x005d = 409,
	resqml20__ResqmlUom__chain_x005bSe_x005d = 410,
	resqml20__ResqmlUom__chain_x005bSeT_x005d = 411,
	resqml20__ResqmlUom__chain_x005bUS_x005d = 412,
	resqml20__ResqmlUom__cHz = 413,
	resqml20__ResqmlUom__Ci = 414,
	resqml20__ResqmlUom__cJ = 415,
	resqml20__ResqmlUom__cm = 416,
	resqml20__ResqmlUom__cm_x002fa = 417,
	resqml20__ResqmlUom__cm_x002fs = 418,
	resqml20__ResqmlUom__cm_x002fs2 = 419,
	resqml20__ResqmlUom__cm2 = 420,
	resqml20__ResqmlUom__cm2_x002fg = 421,
	resqml20__ResqmlUom__cm2_x002fs = 422,
	resqml20__ResqmlUom__cm3 = 423,
	resqml20__ResqmlUom__cm3_x002fcm3 = 424,
	resqml20__ResqmlUom__cm3_x002fg = 425,
	resqml20__ResqmlUom__cm3_x002fh = 426,
	resqml20__ResqmlUom__cm3_x002fL = 427,
	resqml20__ResqmlUom__cm3_x002fm3 = 428,
	resqml20__ResqmlUom__cm3_x002fmin = 429,
	resqml20__ResqmlUom__cm3_x002fs = 430,
	resqml20__ResqmlUom__cm4 = 431,
	resqml20__ResqmlUom__cmH2O_x005b4degC_x005d = 432,
	resqml20__ResqmlUom__cN = 433,
	resqml20__ResqmlUom__cohm = 434,
	resqml20__ResqmlUom__cP = 435,
	resqml20__ResqmlUom__cPa = 436,
	resqml20__ResqmlUom__crd = 437,
	resqml20__ResqmlUom__cS = 438,
	resqml20__ResqmlUom__cs = 439,
	resqml20__ResqmlUom__cSt = 440,
	resqml20__ResqmlUom__ct = 441,
	resqml20__ResqmlUom__cT = 442,
	resqml20__ResqmlUom__cu = 443,
	resqml20__ResqmlUom__cV = 444,
	resqml20__ResqmlUom__cW = 445,
	resqml20__ResqmlUom__cWb = 446,
	resqml20__ResqmlUom__cwt_x005bUK_x005d = 447,
	resqml20__ResqmlUom__cwt_x005bUS_x005d = 448,
	resqml20__ResqmlUom__D_x002eft = 449,
	resqml20__ResqmlUom__D_x002em = 450,
	resqml20__ResqmlUom__D_x002f_x0028Pa_x002es_x0029 = 451,
	resqml20__ResqmlUom__d_x002fbbl = 452,
	resqml20__ResqmlUom__D_x002fcP = 453,
	resqml20__ResqmlUom__d_x002fft3 = 454,
	resqml20__ResqmlUom__d_x002fm3 = 455,
	resqml20__ResqmlUom__D_x005bAPI_x005d = 456,
	resqml20__ResqmlUom__dA = 457,
	resqml20__ResqmlUom__dam = 458,
	resqml20__ResqmlUom__daN = 459,
	resqml20__ResqmlUom__daN_x002em = 460,
	resqml20__ResqmlUom__dAPI = 461,
	resqml20__ResqmlUom__dB = 462,
	resqml20__ResqmlUom__dB_x002eMW = 463,
	resqml20__ResqmlUom__dB_x002emW = 464,
	resqml20__ResqmlUom__dB_x002eW = 465,
	resqml20__ResqmlUom__dB_x002fft = 466,
	resqml20__ResqmlUom__dB_x002fkm = 467,
	resqml20__ResqmlUom__dB_x002fm = 468,
	resqml20__ResqmlUom__dB_x002fO = 469,
	resqml20__ResqmlUom__dC = 470,
	resqml20__ResqmlUom__dcal_x005bth_x005d = 471,
	resqml20__ResqmlUom__dega = 472,
	resqml20__ResqmlUom__dega_x002fft = 473,
	resqml20__ResqmlUom__dega_x002fh = 474,
	resqml20__ResqmlUom__dega_x002fm = 475,
	resqml20__ResqmlUom__dega_x002fmin = 476,
	resqml20__ResqmlUom__dega_x002fs = 477,
	resqml20__ResqmlUom__degC = 478,
	resqml20__ResqmlUom__degC_x002em2_x002eh_x002fkcal_x005bth_x005d = 479,
	resqml20__ResqmlUom__degC_x002fft = 480,
	resqml20__ResqmlUom__degC_x002fh = 481,
	resqml20__ResqmlUom__degC_x002fhm = 482,
	resqml20__ResqmlUom__degC_x002fkm = 483,
	resqml20__ResqmlUom__degC_x002fkPa = 484,
	resqml20__ResqmlUom__degC_x002fm = 485,
	resqml20__ResqmlUom__degC_x002fmin = 486,
	resqml20__ResqmlUom__degC_x002fs = 487,
	resqml20__ResqmlUom__degF = 488,
	resqml20__ResqmlUom__degF_x002eft2_x002eh_x002fBtu_x005bIT_x005d = 489,
	resqml20__ResqmlUom__degF_x002fft = 490,
	resqml20__ResqmlUom__degF_x002fh = 491,
	resqml20__ResqmlUom__degF_x002fm = 492,
	resqml20__ResqmlUom__degF_x002fmin = 493,
	resqml20__ResqmlUom__degF_x002fpsi = 494,
	resqml20__ResqmlUom__degF_x002fs = 495,
	resqml20__ResqmlUom__degR = 496,
	resqml20__ResqmlUom__dEuc = 497,
	resqml20__ResqmlUom__deV = 498,
	resqml20__ResqmlUom__dF = 499,
	resqml20__ResqmlUom__dgauss = 500,
	resqml20__ResqmlUom__dGy = 501,
	resqml20__ResqmlUom__dH = 502,
	resqml20__ResqmlUom__dHz = 503,
	resqml20__ResqmlUom__dJ = 504,
	resqml20__ResqmlUom__dm = 505,
	resqml20__ResqmlUom__dm_x002fs = 506,
	resqml20__ResqmlUom__dm3 = 507,
	resqml20__ResqmlUom__dm3_x002f_x0028kW_x002eh_x0029 = 508,
	resqml20__ResqmlUom__dm3_x002fkg = 509,
	resqml20__ResqmlUom__dm3_x002fkmol = 510,
	resqml20__ResqmlUom__dm3_x002fm = 511,
	resqml20__ResqmlUom__dm3_x002fm3 = 512,
	resqml20__ResqmlUom__dm3_x002fMJ = 513,
	resqml20__ResqmlUom__dm3_x002fs = 514,
	resqml20__ResqmlUom__dm3_x002fs2 = 515,
	resqml20__ResqmlUom__dm3_x002ft = 516,
	resqml20__ResqmlUom__dN = 517,
	resqml20__ResqmlUom__dN_x002em = 518,
	resqml20__ResqmlUom__dohm = 519,
	resqml20__ResqmlUom__dP = 520,
	resqml20__ResqmlUom__dPa = 521,
	resqml20__ResqmlUom__drd = 522,
	resqml20__ResqmlUom__ds = 523,
	resqml20__ResqmlUom__dS = 524,
	resqml20__ResqmlUom__dT = 525,
	resqml20__ResqmlUom__dV = 526,
	resqml20__ResqmlUom__dW = 527,
	resqml20__ResqmlUom__dWb = 528,
	resqml20__ResqmlUom__dyne = 529,
	resqml20__ResqmlUom__dyne_x002ecm2 = 530,
	resqml20__ResqmlUom__dyne_x002es_x002fcm2 = 531,
	resqml20__ResqmlUom__dyne_x002fcm = 532,
	resqml20__ResqmlUom__dyne_x002fcm2 = 533,
	resqml20__ResqmlUom__EA = 534,
	resqml20__ResqmlUom__Ea_x005bt_x005d = 535,
	resqml20__ResqmlUom__EC = 536,
	resqml20__ResqmlUom__Ecal_x005bth_x005d = 537,
	resqml20__ResqmlUom__EEuc = 538,
	resqml20__ResqmlUom__EeV = 539,
	resqml20__ResqmlUom__EF = 540,
	resqml20__ResqmlUom__Eg = 541,
	resqml20__ResqmlUom__Egauss = 542,
	resqml20__ResqmlUom__EGy = 543,
	resqml20__ResqmlUom__EH = 544,
	resqml20__ResqmlUom__EHz = 545,
	resqml20__ResqmlUom__EJ = 546,
	resqml20__ResqmlUom__EJ_x002fa = 547,
	resqml20__ResqmlUom__Em = 548,
	resqml20__ResqmlUom__EN = 549,
	resqml20__ResqmlUom__Eohm = 550,
	resqml20__ResqmlUom__EP = 551,
	resqml20__ResqmlUom__EPa = 552,
	resqml20__ResqmlUom__Erd = 553,
	resqml20__ResqmlUom__erg = 554,
	resqml20__ResqmlUom__erg_x002fa = 555,
	resqml20__ResqmlUom__erg_x002fcm2 = 556,
	resqml20__ResqmlUom__erg_x002fcm3 = 557,
	resqml20__ResqmlUom__erg_x002fg = 558,
	resqml20__ResqmlUom__erg_x002fkg = 559,
	resqml20__ResqmlUom__erg_x002fm3 = 560,
	resqml20__ResqmlUom__ES = 561,
	resqml20__ResqmlUom__ET = 562,
	resqml20__ResqmlUom__Euc = 563,
	resqml20__ResqmlUom__eV = 564,
	resqml20__ResqmlUom__EW = 565,
	resqml20__ResqmlUom__EWb = 566,
	resqml20__ResqmlUom__F_x002fm = 567,
	resqml20__ResqmlUom__fa = 568,
	resqml20__ResqmlUom__fA = 569,
	resqml20__ResqmlUom__fathom = 570,
	resqml20__ResqmlUom__fC = 571,
	resqml20__ResqmlUom__fcal_x005bth_x005d = 572,
	resqml20__ResqmlUom__fEuc = 573,
	resqml20__ResqmlUom__feV = 574,
	resqml20__ResqmlUom__fF = 575,
	resqml20__ResqmlUom__fg = 576,
	resqml20__ResqmlUom__fgauss = 577,
	resqml20__ResqmlUom__fGy = 578,
	resqml20__ResqmlUom__fH = 579,
	resqml20__ResqmlUom__fHz = 580,
	resqml20__ResqmlUom__fJ = 581,
	resqml20__ResqmlUom__floz_x005bUK_x005d = 582,
	resqml20__ResqmlUom__floz_x005bUS_x005d = 583,
	resqml20__ResqmlUom__fm = 584,
	resqml20__ResqmlUom__fN = 585,
	resqml20__ResqmlUom__fohm = 586,
	resqml20__ResqmlUom__footcandle = 587,
	resqml20__ResqmlUom__footcandle_x002es = 588,
	resqml20__ResqmlUom__fP = 589,
	resqml20__ResqmlUom__fPa = 590,
	resqml20__ResqmlUom__frd = 591,
	resqml20__ResqmlUom__fS = 592,
	resqml20__ResqmlUom__ft = 593,
	resqml20__ResqmlUom__fT = 594,
	resqml20__ResqmlUom__ft_x002fbbl = 595,
	resqml20__ResqmlUom__ft_x002fd = 596,
	resqml20__ResqmlUom__ft_x002fdegF = 597,
	resqml20__ResqmlUom__ft_x002fft = 598,
	resqml20__ResqmlUom__ft_x002fft3 = 599,
	resqml20__ResqmlUom__ft_x002fgal_x005bUS_x005d = 600,
	resqml20__ResqmlUom__ft_x002fh = 601,
	resqml20__ResqmlUom__ft_x002fin = 602,
	resqml20__ResqmlUom__ft_x002flbm = 603,
	resqml20__ResqmlUom__ft_x002fm = 604,
	resqml20__ResqmlUom__ft_x002fmi = 605,
	resqml20__ResqmlUom__ft_x002fmin = 606,
	resqml20__ResqmlUom__ft_x002fms = 607,
	resqml20__ResqmlUom__ft_x002fpsi = 608,
	resqml20__ResqmlUom__ft_x002fs = 609,
	resqml20__ResqmlUom__ft_x002fs2 = 610,
	resqml20__ResqmlUom__ft_x002fus = 611,
	resqml20__ResqmlUom__ft_x005bBnA_x005d = 612,
	resqml20__ResqmlUom__ft_x005bBnB_x005d = 613,
	resqml20__ResqmlUom__ft_x005bBr36_x005d = 614,
	resqml20__ResqmlUom__ft_x005bBr65_x005d = 615,
	resqml20__ResqmlUom__ft_x005bCla_x005d = 616,
	resqml20__ResqmlUom__ft_x005bGC_x005d = 617,
	resqml20__ResqmlUom__ft_x005bInd_x005d = 618,
	resqml20__ResqmlUom__ft_x005bInd37_x005d = 619,
	resqml20__ResqmlUom__ft_x005bInd62_x005d = 620,
	resqml20__ResqmlUom__ft_x005bInd75_x005d = 621,
	resqml20__ResqmlUom__ft_x005bSe_x005d = 622,
	resqml20__ResqmlUom__ft_x005bSeT_x005d = 623,
	resqml20__ResqmlUom__ft_x005bUS_x005d = 624,
	resqml20__ResqmlUom__ft2 = 625,
	resqml20__ResqmlUom__ft2_x002fh = 626,
	resqml20__ResqmlUom__ft2_x002fin3 = 627,
	resqml20__ResqmlUom__ft2_x002flbm = 628,
	resqml20__ResqmlUom__ft2_x002fs = 629,
	resqml20__ResqmlUom__ft3 = 630,
	resqml20__ResqmlUom__ft3_x002f_x0028d_x002eft_x0029 = 631,
	resqml20__ResqmlUom__ft3_x002f_x0028ft_x002epsi_x002ed_x0029 = 632,
	resqml20__ResqmlUom__ft3_x002f_x0028min_x002eft2_x0029 = 633,
	resqml20__ResqmlUom__ft3_x002f_x0028s_x002eft2_x0029 = 634,
	resqml20__ResqmlUom__ft3_x002fbbl = 635,
	resqml20__ResqmlUom__ft3_x002fd = 636,
	resqml20__ResqmlUom__ft3_x002fd2 = 637,
	resqml20__ResqmlUom__ft3_x002fft = 638,
	resqml20__ResqmlUom__ft3_x002fft2 = 639,
	resqml20__ResqmlUom__ft3_x002fft3 = 640,
	resqml20__ResqmlUom__ft3_x002fh = 641,
	resqml20__ResqmlUom__ft3_x002fh2 = 642,
	resqml20__ResqmlUom__ft3_x002fkg = 643,
	resqml20__ResqmlUom__ft3_x002flbm = 644,
	resqml20__ResqmlUom__ft3_x002flbmol = 645,
	resqml20__ResqmlUom__ft3_x002fmin = 646,
	resqml20__ResqmlUom__ft3_x002fmin2 = 647,
	resqml20__ResqmlUom__ft3_x002frad = 648,
	resqml20__ResqmlUom__ft3_x002fs = 649,
	resqml20__ResqmlUom__ft3_x002fs2 = 650,
	resqml20__ResqmlUom__ft3_x002fsack_x005b94lbm_x005d = 651,
	resqml20__ResqmlUom__fur_x005bUS_x005d = 652,
	resqml20__ResqmlUom__fV = 653,
	resqml20__ResqmlUom__fW = 654,
	resqml20__ResqmlUom__fWb = 655,
	resqml20__ResqmlUom__g_x002eft_x002f_x0028cm3_x002es_x0029 = 656,
	resqml20__ResqmlUom__g_x002em_x002f_x0028cm3_x002es_x0029 = 657,
	resqml20__ResqmlUom__g_x002fcm3 = 658,
	resqml20__ResqmlUom__g_x002fcm4 = 659,
	resqml20__ResqmlUom__g_x002fdm3 = 660,
	resqml20__ResqmlUom__g_x002fgal_x005bUK_x005d = 661,
	resqml20__ResqmlUom__g_x002fgal_x005bUS_x005d = 662,
	resqml20__ResqmlUom__g_x002fkg = 663,
	resqml20__ResqmlUom__g_x002fL = 664,
	resqml20__ResqmlUom__g_x002fm3 = 665,
	resqml20__ResqmlUom__g_x002fmol = 666,
	resqml20__ResqmlUom__g_x002fs = 667,
	resqml20__ResqmlUom__g_x002ft = 668,
	resqml20__ResqmlUom__GA = 669,
	resqml20__ResqmlUom__Ga_x005bt_x005d = 670,
	resqml20__ResqmlUom__Gal = 671,
	resqml20__ResqmlUom__gal_x005bUK_x005d = 672,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028h_x002eft_x0029 = 673,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028h_x002eft2_x0029 = 674,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028h_x002ein_x0029 = 675,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028h_x002ein2_x0029 = 676,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028min_x002eft_x0029 = 677,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002f_x0028min_x002eft2_x0029 = 678,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fd = 679,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fft3 = 680,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fh = 681,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fh2 = 682,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002flbm = 683,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fmi = 684,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fmin = 685,
	resqml20__ResqmlUom__gal_x005bUK_x005d_x002fmin2 = 686,
	resqml20__ResqmlUom__gal_x005bUS_x005d = 687,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028h_x002eft_x0029 = 688,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028h_x002eft2_x0029 = 689,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028h_x002ein_x0029 = 690,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028h_x002ein2_x0029 = 691,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028min_x002eft_x0029 = 692,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002f_x0028min_x002eft2_x0029 = 693,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fbbl = 694,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fd = 695,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fft = 696,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fft3 = 697,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fh = 698,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fh2 = 699,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002flbm = 700,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fmi = 701,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fmin = 702,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fmin2 = 703,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fsack_x005b94lbm_x005d = 704,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fton_x005bUK_x005d = 705,
	resqml20__ResqmlUom__gal_x005bUS_x005d_x002fton_x005bUS_x005d = 706,
	resqml20__ResqmlUom__gAPI = 707,
	resqml20__ResqmlUom__gauss = 708,
	resqml20__ResqmlUom__gauss_x002fcm = 709,
	resqml20__ResqmlUom__GBq = 710,
	resqml20__ResqmlUom__GC = 711,
	resqml20__ResqmlUom__Gcal_x005bth_x005d = 712,
	resqml20__ResqmlUom__GEuc = 713,
	resqml20__ResqmlUom__GeV = 714,
	resqml20__ResqmlUom__gf = 715,
	resqml20__ResqmlUom__GF = 716,
	resqml20__ResqmlUom__Gg = 717,
	resqml20__ResqmlUom__Ggauss = 718,
	resqml20__ResqmlUom__GGy = 719,
	resqml20__ResqmlUom__GH = 720,
	resqml20__ResqmlUom__GHz = 721,
	resqml20__ResqmlUom__GJ = 722,
	resqml20__ResqmlUom__Gm = 723,
	resqml20__ResqmlUom__gn = 724,
	resqml20__ResqmlUom__GN = 725,
	resqml20__ResqmlUom__Gohm = 726,
	resqml20__ResqmlUom__gon = 727,
	resqml20__ResqmlUom__GP = 728,
	resqml20__ResqmlUom__GPa = 729,
	resqml20__ResqmlUom__GPa_x002fcm = 730,
	resqml20__ResqmlUom__GPa2 = 731,
	resqml20__ResqmlUom__grain = 732,
	resqml20__ResqmlUom__grain_x002fft3 = 733,
	resqml20__ResqmlUom__grain_x002fgal_x005bUS_x005d = 734,
	resqml20__ResqmlUom__Grd = 735,
	resqml20__ResqmlUom__GS = 736,
	resqml20__ResqmlUom__GT = 737,
	resqml20__ResqmlUom__GV = 738,
	resqml20__ResqmlUom__GW = 739,
	resqml20__ResqmlUom__GW_x002eh = 740,
	resqml20__ResqmlUom__GWb = 741,
	resqml20__ResqmlUom__Gy = 742,
	resqml20__ResqmlUom__h_x002fft3 = 743,
	resqml20__ResqmlUom__h_x002fkm = 744,
	resqml20__ResqmlUom__H_x002fm = 745,
	resqml20__ResqmlUom__h_x002fm3 = 746,
	resqml20__ResqmlUom__ha = 747,
	resqml20__ResqmlUom__ha_x002em = 748,
	resqml20__ResqmlUom__hbar = 749,
	resqml20__ResqmlUom__hg = 750,
	resqml20__ResqmlUom__hL = 751,
	resqml20__ResqmlUom__hm = 752,
	resqml20__ResqmlUom__hN = 753,
	resqml20__ResqmlUom__hp = 754,
	resqml20__ResqmlUom__hp_x002eh = 755,
	resqml20__ResqmlUom__hp_x002eh_x002fbbl = 756,
	resqml20__ResqmlUom__hp_x002eh_x002flbm = 757,
	resqml20__ResqmlUom__hp_x002fft3 = 758,
	resqml20__ResqmlUom__hp_x002fin2 = 759,
	resqml20__ResqmlUom__hp_x005belec_x005d = 760,
	resqml20__ResqmlUom__hp_x005bhyd_x005d = 761,
	resqml20__ResqmlUom__hp_x005bhyd_x005d_x002fin2 = 762,
	resqml20__ResqmlUom__hp_x005bmetric_x005d = 763,
	resqml20__ResqmlUom__hp_x005bmetric_x005d_x002eh = 764,
	resqml20__ResqmlUom__hs = 765,
	resqml20__ResqmlUom__Hz = 766,
	resqml20__ResqmlUom__in = 767,
	resqml20__ResqmlUom__in_x002f_x0028in_x002edegF_x0029 = 768,
	resqml20__ResqmlUom__in_x002fa = 769,
	resqml20__ResqmlUom__in_x002fmin = 770,
	resqml20__ResqmlUom__in_x002fs = 771,
	resqml20__ResqmlUom__in_x002fs2 = 772,
	resqml20__ResqmlUom__in_x005bUS_x005d = 773,
	resqml20__ResqmlUom__in2 = 774,
	resqml20__ResqmlUom__in2_x002fft2 = 775,
	resqml20__ResqmlUom__in2_x002fin2 = 776,
	resqml20__ResqmlUom__in2_x002fs = 777,
	resqml20__ResqmlUom__in3 = 778,
	resqml20__ResqmlUom__in3_x002fft = 779,
	resqml20__ResqmlUom__in4 = 780,
	resqml20__ResqmlUom__inH2O_x005b39degF_x005d = 781,
	resqml20__ResqmlUom__inH2O_x005b60degF_x005d = 782,
	resqml20__ResqmlUom__inHg_x005b32degF_x005d = 783,
	resqml20__ResqmlUom__inHg_x005b60degF_x005d = 784,
	resqml20__ResqmlUom__J_x002em_x002f_x0028s_x002em2_x002eK_x0029 = 785,
	resqml20__ResqmlUom__J_x002em_x002fm2 = 786,
	resqml20__ResqmlUom__J_x002f_x0028g_x002eK_x0029 = 787,
	resqml20__ResqmlUom__J_x002f_x0028kg_x002eK_x0029 = 788,
	resqml20__ResqmlUom__J_x002f_x0028mol_x002eK_x0029 = 789,
	resqml20__ResqmlUom__J_x002f_x0028s_x002em2_x002edegC_x0029 = 790,
	resqml20__ResqmlUom__J_x002fcm2 = 791,
	resqml20__ResqmlUom__J_x002fdm3 = 792,
	resqml20__ResqmlUom__J_x002fg = 793,
	resqml20__ResqmlUom__J_x002fK = 794,
	resqml20__ResqmlUom__J_x002fkg = 795,
	resqml20__ResqmlUom__J_x002fm = 796,
	resqml20__ResqmlUom__J_x002fm2 = 797,
	resqml20__ResqmlUom__J_x002fm3 = 798,
	resqml20__ResqmlUom__J_x002fmol = 799,
	resqml20__ResqmlUom__J_x002fs = 800,
	resqml20__ResqmlUom__K_x002em2_x002fkW = 801,
	resqml20__ResqmlUom__K_x002em2_x002fW = 802,
	resqml20__ResqmlUom__K_x002fkm = 803,
	resqml20__ResqmlUom__K_x002fm = 804,
	resqml20__ResqmlUom__K_x002fPa = 805,
	resqml20__ResqmlUom__K_x002fs = 806,
	resqml20__ResqmlUom__K_x002fW = 807,
	resqml20__ResqmlUom__kA = 808,
	resqml20__ResqmlUom__ka_x005bt_x005d = 809,
	resqml20__ResqmlUom__kC = 810,
	resqml20__ResqmlUom__kcal_x005bth_x005d = 811,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002em_x002fcm2 = 812,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002f_x0028h_x002em_x002edegC_x0029 = 813,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002f_x0028h_x002em2_x002edegC_x0029 = 814,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002f_x0028kg_x002edegC_x0029 = 815,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fcm3 = 816,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fg = 817,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fh = 818,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fkg = 819,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fm3 = 820,
	resqml20__ResqmlUom__kcal_x005bth_x005d_x002fmol = 821,
	resqml20__ResqmlUom__kcd = 822,
	resqml20__ResqmlUom__kdyne = 823,
	resqml20__ResqmlUom__kEuc = 824,
	resqml20__ResqmlUom__keV = 825,
	resqml20__ResqmlUom__kF = 826,
	resqml20__ResqmlUom__kg = 827,
	resqml20__ResqmlUom__kg_x002em = 828,
	resqml20__ResqmlUom__kg_x002em_x002fcm2 = 829,
	resqml20__ResqmlUom__kg_x002em_x002fs = 830,
	resqml20__ResqmlUom__kg_x002em2 = 831,
	resqml20__ResqmlUom__kg_x002f_x0028kW_x002eh_x0029 = 832,
	resqml20__ResqmlUom__kg_x002f_x0028m_x002es_x0029 = 833,
	resqml20__ResqmlUom__kg_x002f_x0028m2_x002es_x0029 = 834,
	resqml20__ResqmlUom__kg_x002fd = 835,
	resqml20__ResqmlUom__kg_x002fdm3 = 836,
	resqml20__ResqmlUom__kg_x002fdm4 = 837,
	resqml20__ResqmlUom__kg_x002fh = 838,
	resqml20__ResqmlUom__kg_x002fJ = 839,
	resqml20__ResqmlUom__kg_x002fkg = 840,
	resqml20__ResqmlUom__kg_x002fL = 841,
	resqml20__ResqmlUom__kg_x002fm = 842,
	resqml20__ResqmlUom__kg_x002fm2 = 843,
	resqml20__ResqmlUom__kg_x002fm3 = 844,
	resqml20__ResqmlUom__kg_x002fm4 = 845,
	resqml20__ResqmlUom__kg_x002fmin = 846,
	resqml20__ResqmlUom__kg_x002fMJ = 847,
	resqml20__ResqmlUom__kg_x002fmol = 848,
	resqml20__ResqmlUom__kg_x002fs = 849,
	resqml20__ResqmlUom__kg_x002fsack_x005b94lbm_x005d = 850,
	resqml20__ResqmlUom__kg_x002ft = 851,
	resqml20__ResqmlUom__kgauss = 852,
	resqml20__ResqmlUom__kgf = 853,
	resqml20__ResqmlUom__kgf_x002em = 854,
	resqml20__ResqmlUom__kgf_x002em_x002fcm2 = 855,
	resqml20__ResqmlUom__kgf_x002em_x002fm = 856,
	resqml20__ResqmlUom__kgf_x002em2 = 857,
	resqml20__ResqmlUom__kgf_x002es_x002fm2 = 858,
	resqml20__ResqmlUom__kgf_x002fcm = 859,
	resqml20__ResqmlUom__kgf_x002fcm2 = 860,
	resqml20__ResqmlUom__kgf_x002fkgf = 861,
	resqml20__ResqmlUom__kgf_x002fm2 = 862,
	resqml20__ResqmlUom__kgf_x002fmm2 = 863,
	resqml20__ResqmlUom__kGy = 864,
	resqml20__ResqmlUom__kH = 865,
	resqml20__ResqmlUom__kHz = 866,
	resqml20__ResqmlUom__Kibyte = 867,
	resqml20__ResqmlUom__kJ = 868,
	resqml20__ResqmlUom__kJ_x002em_x002f_x0028h_x002em2_x002eK_x0029 = 869,
	resqml20__ResqmlUom__kJ_x002f_x0028h_x002em2_x002eK_x0029 = 870,
	resqml20__ResqmlUom__kJ_x002f_x0028kg_x002eK_x0029 = 871,
	resqml20__ResqmlUom__kJ_x002f_x0028kmol_x002eK_x0029 = 872,
	resqml20__ResqmlUom__kJ_x002fdm3 = 873,
	resqml20__ResqmlUom__kJ_x002fkg = 874,
	resqml20__ResqmlUom__kJ_x002fkmol = 875,
	resqml20__ResqmlUom__kJ_x002fm3 = 876,
	resqml20__ResqmlUom__klbf = 877,
	resqml20__ResqmlUom__klbm = 878,
	resqml20__ResqmlUom__klbm_x002fin = 879,
	resqml20__ResqmlUom__klx = 880,
	resqml20__ResqmlUom__km = 881,
	resqml20__ResqmlUom__km_x002fcm = 882,
	resqml20__ResqmlUom__km_x002fdm3 = 883,
	resqml20__ResqmlUom__km_x002fh = 884,
	resqml20__ResqmlUom__km_x002fL = 885,
	resqml20__ResqmlUom__km_x002fs = 886,
	resqml20__ResqmlUom__km2 = 887,
	resqml20__ResqmlUom__km3 = 888,
	resqml20__ResqmlUom__kmol = 889,
	resqml20__ResqmlUom__kmol_x002fh = 890,
	resqml20__ResqmlUom__kmol_x002fm3 = 891,
	resqml20__ResqmlUom__kmol_x002fs = 892,
	resqml20__ResqmlUom__kN = 893,
	resqml20__ResqmlUom__kN_x002em = 894,
	resqml20__ResqmlUom__kN_x002em2 = 895,
	resqml20__ResqmlUom__kN_x002fm = 896,
	resqml20__ResqmlUom__kN_x002fm2 = 897,
	resqml20__ResqmlUom__knot = 898,
	resqml20__ResqmlUom__kohm = 899,
	resqml20__ResqmlUom__kohm_x002em = 900,
	resqml20__ResqmlUom__kP = 901,
	resqml20__ResqmlUom__kPa = 902,
	resqml20__ResqmlUom__kPa_x002es_x002fm = 903,
	resqml20__ResqmlUom__kPa_x002fh = 904,
	resqml20__ResqmlUom__kPa_x002fhm = 905,
	resqml20__ResqmlUom__kPa_x002fm = 906,
	resqml20__ResqmlUom__kPa_x002fmin = 907,
	resqml20__ResqmlUom__kPa2 = 908,
	resqml20__ResqmlUom__kPa2_x002fcP = 909,
	resqml20__ResqmlUom__kpsi = 910,
	resqml20__ResqmlUom__kpsi2 = 911,
	resqml20__ResqmlUom__krad = 912,
	resqml20__ResqmlUom__krd = 913,
	resqml20__ResqmlUom__kS = 914,
	resqml20__ResqmlUom__kS_x002fm = 915,
	resqml20__ResqmlUom__kT = 916,
	resqml20__ResqmlUom__kV = 917,
	resqml20__ResqmlUom__kW = 918,
	resqml20__ResqmlUom__kW_x002eh = 919,
	resqml20__ResqmlUom__kW_x002eh_x002f_x0028kg_x002edegC_x0029 = 920,
	resqml20__ResqmlUom__kW_x002eh_x002fdm3 = 921,
	resqml20__ResqmlUom__kW_x002eh_x002fkg = 922,
	resqml20__ResqmlUom__kW_x002eh_x002fm3 = 923,
	resqml20__ResqmlUom__kW_x002f_x0028m2_x002eK_x0029 = 924,
	resqml20__ResqmlUom__kW_x002f_x0028m3_x002eK_x0029 = 925,
	resqml20__ResqmlUom__kW_x002fcm2 = 926,
	resqml20__ResqmlUom__kW_x002fm2 = 927,
	resqml20__ResqmlUom__kW_x002fm3 = 928,
	resqml20__ResqmlUom__kWb = 929,
	resqml20__ResqmlUom__L_x002f_x0028bar_x002emin_x0029 = 930,
	resqml20__ResqmlUom__L_x002fh = 931,
	resqml20__ResqmlUom__L_x002fkg = 932,
	resqml20__ResqmlUom__L_x002fkmol = 933,
	resqml20__ResqmlUom__L_x002fm = 934,
	resqml20__ResqmlUom__L_x002fm3 = 935,
	resqml20__ResqmlUom__L_x002fmin = 936,
	resqml20__ResqmlUom__L_x002fmol = 937,
	resqml20__ResqmlUom__L_x002fs = 938,
	resqml20__ResqmlUom__L_x002fs2 = 939,
	resqml20__ResqmlUom__L_x002ft = 940,
	resqml20__ResqmlUom__L_x002fton_x005bUK_x005d = 941,
	resqml20__ResqmlUom__lbf = 942,
	resqml20__ResqmlUom__lbf_x002eft = 943,
	resqml20__ResqmlUom__lbf_x002eft_x002fbbl = 944,
	resqml20__ResqmlUom__lbf_x002eft_x002fgal_x005bUS_x005d = 945,
	resqml20__ResqmlUom__lbf_x002eft_x002fin = 946,
	resqml20__ResqmlUom__lbf_x002eft_x002fin2 = 947,
	resqml20__ResqmlUom__lbf_x002eft_x002flbm = 948,
	resqml20__ResqmlUom__lbf_x002eft_x002fmin = 949,
	resqml20__ResqmlUom__lbf_x002eft_x002fs = 950,
	resqml20__ResqmlUom__lbf_x002ein = 951,
	resqml20__ResqmlUom__lbf_x002ein_x002fin = 952,
	resqml20__ResqmlUom__lbf_x002ein2 = 953,
	resqml20__ResqmlUom__lbf_x002es_x002fft2 = 954,
	resqml20__ResqmlUom__lbf_x002es_x002fin2 = 955,
	resqml20__ResqmlUom__lbf_x002fft = 956,
	resqml20__ResqmlUom__lbf_x002fft2 = 957,
	resqml20__ResqmlUom__lbf_x002fft3 = 958,
	resqml20__ResqmlUom__lbf_x002fgal_x005bUS_x005d = 959,
	resqml20__ResqmlUom__lbf_x002fin = 960,
	resqml20__ResqmlUom__lbf_x002flbf = 961,
	resqml20__ResqmlUom__lbm = 962,
	resqml20__ResqmlUom__lbm_x002eft = 963,
	resqml20__ResqmlUom__lbm_x002eft_x002fs = 964,
	resqml20__ResqmlUom__lbm_x002eft2 = 965,
	resqml20__ResqmlUom__lbm_x002eft2_x002fs2 = 966,
	resqml20__ResqmlUom__lbm_x002f_x0028ft_x002eh_x0029 = 967,
	resqml20__ResqmlUom__lbm_x002f_x0028ft_x002es_x0029 = 968,
	resqml20__ResqmlUom__lbm_x002f_x0028ft2_x002eh_x0029 = 969,
	resqml20__ResqmlUom__lbm_x002f_x0028ft2_x002es_x0029 = 970,
	resqml20__ResqmlUom__lbm_x002f_x0028gal_x005bUK_x005d_x002eft_x0029 = 971,
	resqml20__ResqmlUom__lbm_x002f_x0028gal_x005bUS_x005d_x002eft_x0029 = 972,
	resqml20__ResqmlUom__lbm_x002f_x0028hp_x002eh_x0029 = 973,
	resqml20__ResqmlUom__lbm_x002fbbl = 974,
	resqml20__ResqmlUom__lbm_x002fd = 975,
	resqml20__ResqmlUom__lbm_x002fft = 976,
	resqml20__ResqmlUom__lbm_x002fft2 = 977,
	resqml20__ResqmlUom__lbm_x002fft3 = 978,
	resqml20__ResqmlUom__lbm_x002fft4 = 979,
	resqml20__ResqmlUom__lbm_x002fgal_x005bUK_x005d = 980,
	resqml20__ResqmlUom__lbm_x002fgal_x005bUS_x005d = 981,
	resqml20__ResqmlUom__lbm_x002fh = 982,
	resqml20__ResqmlUom__lbm_x002fin3 = 983,
	resqml20__ResqmlUom__lbm_x002flbmol = 984,
	resqml20__ResqmlUom__lbm_x002fmin = 985,
	resqml20__ResqmlUom__lbm_x002fs = 986,
	resqml20__ResqmlUom__lbmol = 987,
	resqml20__ResqmlUom__lbmol_x002f_x0028h_x002eft2_x0029 = 988,
	resqml20__ResqmlUom__lbmol_x002f_x0028s_x002eft2_x0029 = 989,
	resqml20__ResqmlUom__lbmol_x002fft3 = 990,
	resqml20__ResqmlUom__lbmol_x002fgal_x005bUK_x005d = 991,
	resqml20__ResqmlUom__lbmol_x002fgal_x005bUS_x005d = 992,
	resqml20__ResqmlUom__lbmol_x002fh = 993,
	resqml20__ResqmlUom__lbmol_x002fs = 994,
	resqml20__ResqmlUom__link = 995,
	resqml20__ResqmlUom__link_x005bBnA_x005d = 996,
	resqml20__ResqmlUom__link_x005bBnB_x005d = 997,
	resqml20__ResqmlUom__link_x005bCla_x005d = 998,
	resqml20__ResqmlUom__link_x005bSe_x005d = 999,
	resqml20__ResqmlUom__link_x005bSeT_x005d = 1000,
	resqml20__ResqmlUom__link_x005bUS_x005d = 1001,
	resqml20__ResqmlUom__lm = 1002,
	resqml20__ResqmlUom__lm_x002es = 1003,
	resqml20__ResqmlUom__lm_x002fm2 = 1004,
	resqml20__ResqmlUom__lm_x002fW = 1005,
	resqml20__ResqmlUom__lx = 1006,
	resqml20__ResqmlUom__lx_x002es = 1007,
	resqml20__ResqmlUom__m_x002f_x0028m_x002eK_x0029 = 1008,
	resqml20__ResqmlUom__m_x002fcm = 1009,
	resqml20__ResqmlUom__m_x002fd = 1010,
	resqml20__ResqmlUom__m_x002fh = 1011,
	resqml20__ResqmlUom__m_x002fK = 1012,
	resqml20__ResqmlUom__m_x002fkg = 1013,
	resqml20__ResqmlUom__m_x002fkm = 1014,
	resqml20__ResqmlUom__m_x002fkPa = 1015,
	resqml20__ResqmlUom__m_x002fm = 1016,
	resqml20__ResqmlUom__m_x002fm3 = 1017,
	resqml20__ResqmlUom__m_x002fmin = 1018,
	resqml20__ResqmlUom__m_x002fms = 1019,
	resqml20__ResqmlUom__m_x002fPa = 1020,
	resqml20__ResqmlUom__m_x002fs = 1021,
	resqml20__ResqmlUom__m_x002fs2 = 1022,
	resqml20__ResqmlUom__m_x005bGer_x005d = 1023,
	resqml20__ResqmlUom__m2 = 1024,
	resqml20__ResqmlUom__m2_x002f_x0028kPa_x002ed_x0029 = 1025,
	resqml20__ResqmlUom__m2_x002f_x0028Pa_x002es_x0029 = 1026,
	resqml20__ResqmlUom__m2_x002fcm3 = 1027,
	resqml20__ResqmlUom__m2_x002fd = 1028,
	resqml20__ResqmlUom__m2_x002fg = 1029,
	resqml20__ResqmlUom__m2_x002fh = 1030,
	resqml20__ResqmlUom__m2_x002fkg = 1031,
	resqml20__ResqmlUom__m2_x002fm2 = 1032,
	resqml20__ResqmlUom__m2_x002fm3 = 1033,
	resqml20__ResqmlUom__m2_x002fmol = 1034,
	resqml20__ResqmlUom__m2_x002fs = 1035,
	resqml20__ResqmlUom__m3 = 1036,
	resqml20__ResqmlUom__m3_x002f_x0028bar_x002ed_x0029 = 1037,
	resqml20__ResqmlUom__m3_x002f_x0028bar_x002eh_x0029 = 1038,
	resqml20__ResqmlUom__m3_x002f_x0028bar_x002emin_x0029 = 1039,
	resqml20__ResqmlUom__m3_x002f_x0028d_x002em_x0029 = 1040,
	resqml20__ResqmlUom__m3_x002f_x0028h_x002em_x0029 = 1041,
	resqml20__ResqmlUom__m3_x002f_x0028ha_x002em_x0029 = 1042,
	resqml20__ResqmlUom__m3_x002f_x0028kPa_x002ed_x0029 = 1043,
	resqml20__ResqmlUom__m3_x002f_x0028kPa_x002eh_x0029 = 1044,
	resqml20__ResqmlUom__m3_x002f_x0028kW_x002eh_x0029 = 1045,
	resqml20__ResqmlUom__m3_x002f_x0028m3_x002eK_x0029 = 1046,
	resqml20__ResqmlUom__m3_x002f_x0028Pa_x002es_x0029 = 1047,
	resqml20__ResqmlUom__m3_x002f_x0028psi_x002ed_x0029 = 1048,
	resqml20__ResqmlUom__m3_x002f_x0028s_x002eft_x0029 = 1049,
	resqml20__ResqmlUom__m3_x002f_x0028s_x002em_x0029 = 1050,
	resqml20__ResqmlUom__m3_x002f_x0028s_x002em2_x0029 = 1051,
	resqml20__ResqmlUom__m3_x002f_x0028s_x002em3_x0029 = 1052,
	resqml20__ResqmlUom__m3_x002fbbl = 1053,
	resqml20__ResqmlUom__m3_x002fd = 1054,
	resqml20__ResqmlUom__m3_x002fd2 = 1055,
	resqml20__ResqmlUom__m3_x002fg = 1056,
	resqml20__ResqmlUom__m3_x002fh = 1057,
	resqml20__ResqmlUom__m3_x002fJ = 1058,
	resqml20__ResqmlUom__m3_x002fkg = 1059,
	resqml20__ResqmlUom__m3_x002fkm = 1060,
	resqml20__ResqmlUom__m3_x002fkmol = 1061,
	resqml20__ResqmlUom__m3_x002fkPa = 1062,
	resqml20__ResqmlUom__m3_x002fm = 1063,
	resqml20__ResqmlUom__m3_x002fm2 = 1064,
	resqml20__ResqmlUom__m3_x002fm3 = 1065,
	resqml20__ResqmlUom__m3_x002fmin = 1066,
	resqml20__ResqmlUom__m3_x002fmol = 1067,
	resqml20__ResqmlUom__m3_x002fPa = 1068,
	resqml20__ResqmlUom__m3_x002frad = 1069,
	resqml20__ResqmlUom__m3_x002frev = 1070,
	resqml20__ResqmlUom__m3_x002fs = 1071,
	resqml20__ResqmlUom__m3_x002fs2 = 1072,
	resqml20__ResqmlUom__m3_x002ft = 1073,
	resqml20__ResqmlUom__m3_x002fton_x005bUK_x005d = 1074,
	resqml20__ResqmlUom__m3_x002fton_x005bUS_x005d = 1075,
	resqml20__ResqmlUom__m4 = 1076,
	resqml20__ResqmlUom__m4_x002fs = 1077,
	resqml20__ResqmlUom__mA = 1078,
	resqml20__ResqmlUom__MA = 1079,
	resqml20__ResqmlUom__mA_x002fcm2 = 1080,
	resqml20__ResqmlUom__mA_x002fft2 = 1081,
	resqml20__ResqmlUom__Ma_x005bt_x005d = 1082,
	resqml20__ResqmlUom__mbar = 1083,
	resqml20__ResqmlUom__MBq = 1084,
	resqml20__ResqmlUom__mC = 1085,
	resqml20__ResqmlUom__MC = 1086,
	resqml20__ResqmlUom__mC_x002fm2 = 1087,
	resqml20__ResqmlUom__Mcal_x005bth_x005d = 1088,
	resqml20__ResqmlUom__mcal_x005bth_x005d = 1089,
	resqml20__ResqmlUom__mCi = 1090,
	resqml20__ResqmlUom__mD = 1091,
	resqml20__ResqmlUom__mD_x002eft = 1092,
	resqml20__ResqmlUom__mD_x002eft2_x002f_x0028lbf_x002es_x0029 = 1093,
	resqml20__ResqmlUom__mD_x002ein2_x002f_x0028lbf_x002es_x0029 = 1094,
	resqml20__ResqmlUom__mD_x002em = 1095,
	resqml20__ResqmlUom__mD_x002f_x0028Pa_x002es_x0029 = 1096,
	resqml20__ResqmlUom__mD_x002fcP = 1097,
	resqml20__ResqmlUom__MEuc = 1098,
	resqml20__ResqmlUom__mEuc = 1099,
	resqml20__ResqmlUom__meV = 1100,
	resqml20__ResqmlUom__MeV = 1101,
	resqml20__ResqmlUom__mF = 1102,
	resqml20__ResqmlUom__MF = 1103,
	resqml20__ResqmlUom__Mg = 1104,
	resqml20__ResqmlUom__mg = 1105,
	resqml20__ResqmlUom__Mg_x002fa = 1106,
	resqml20__ResqmlUom__Mg_x002fd = 1107,
	resqml20__ResqmlUom__mg_x002fdm3 = 1108,
	resqml20__ResqmlUom__mg_x002fg = 1109,
	resqml20__ResqmlUom__mg_x002fgal_x005bUS_x005d = 1110,
	resqml20__ResqmlUom__Mg_x002fh = 1111,
	resqml20__ResqmlUom__Mg_x002fin = 1112,
	resqml20__ResqmlUom__mg_x002fJ = 1113,
	resqml20__ResqmlUom__mg_x002fkg = 1114,
	resqml20__ResqmlUom__mg_x002fL = 1115,
	resqml20__ResqmlUom__Mg_x002fm2 = 1116,
	resqml20__ResqmlUom__Mg_x002fm3 = 1117,
	resqml20__ResqmlUom__mg_x002fm3 = 1118,
	resqml20__ResqmlUom__Mg_x002fmin = 1119,
	resqml20__ResqmlUom__mGal = 1120,
	resqml20__ResqmlUom__Mgauss = 1121,
	resqml20__ResqmlUom__mgauss = 1122,
	resqml20__ResqmlUom__Mgf = 1123,
	resqml20__ResqmlUom__mgn = 1124,
	resqml20__ResqmlUom__MGy = 1125,
	resqml20__ResqmlUom__mGy = 1126,
	resqml20__ResqmlUom__MH = 1127,
	resqml20__ResqmlUom__mH = 1128,
	resqml20__ResqmlUom__mHz = 1129,
	resqml20__ResqmlUom__MHz = 1130,
	resqml20__ResqmlUom__mi = 1131,
	resqml20__ResqmlUom__mi_x002fgal_x005bUK_x005d = 1132,
	resqml20__ResqmlUom__mi_x002fgal_x005bUS_x005d = 1133,
	resqml20__ResqmlUom__mi_x002fh = 1134,
	resqml20__ResqmlUom__mi_x002fin = 1135,
	resqml20__ResqmlUom__mi_x005bnaut_x005d = 1136,
	resqml20__ResqmlUom__mi_x005bnautUK_x005d = 1137,
	resqml20__ResqmlUom__mi_x005bUS_x005d = 1138,
	resqml20__ResqmlUom__mi_x005bUS_x005d2 = 1139,
	resqml20__ResqmlUom__mi2 = 1140,
	resqml20__ResqmlUom__mi3 = 1141,
	resqml20__ResqmlUom__Mibyte = 1142,
	resqml20__ResqmlUom__mil = 1143,
	resqml20__ResqmlUom__mil_x002fa = 1144,
	resqml20__ResqmlUom__mila = 1145,
	resqml20__ResqmlUom__min_ = 1146,
	resqml20__ResqmlUom__min_x002fft = 1147,
	resqml20__ResqmlUom__min_x002fm = 1148,
	resqml20__ResqmlUom__mina = 1149,
	resqml20__ResqmlUom__mJ = 1150,
	resqml20__ResqmlUom__MJ = 1151,
	resqml20__ResqmlUom__MJ_x002fa = 1152,
	resqml20__ResqmlUom__mJ_x002fcm2 = 1153,
	resqml20__ResqmlUom__MJ_x002fkg = 1154,
	resqml20__ResqmlUom__MJ_x002fkmol = 1155,
	resqml20__ResqmlUom__MJ_x002fm = 1156,
	resqml20__ResqmlUom__mJ_x002fm2 = 1157,
	resqml20__ResqmlUom__MJ_x002fm3 = 1158,
	resqml20__ResqmlUom__mL = 1159,
	resqml20__ResqmlUom__mL_x002fgal_x005bUK_x005d = 1160,
	resqml20__ResqmlUom__mL_x002fgal_x005bUS_x005d = 1161,
	resqml20__ResqmlUom__mL_x002fmL = 1162,
	resqml20__ResqmlUom__Mm = 1163,
	resqml20__ResqmlUom__mm = 1164,
	resqml20__ResqmlUom__mm_x002f_x0028mm_x002eK_x0029 = 1165,
	resqml20__ResqmlUom__mm_x002fa = 1166,
	resqml20__ResqmlUom__mm_x002fs = 1167,
	resqml20__ResqmlUom__mm2 = 1168,
	resqml20__ResqmlUom__mm2_x002fmm2 = 1169,
	resqml20__ResqmlUom__mm2_x002fs = 1170,
	resqml20__ResqmlUom__mm3 = 1171,
	resqml20__ResqmlUom__mm3_x002fJ = 1172,
	resqml20__ResqmlUom__mmHg_x005b0degC_x005d = 1173,
	resqml20__ResqmlUom__mmol = 1174,
	resqml20__ResqmlUom__mN = 1175,
	resqml20__ResqmlUom__MN = 1176,
	resqml20__ResqmlUom__mN_x002em2 = 1177,
	resqml20__ResqmlUom__mN_x002fkm = 1178,
	resqml20__ResqmlUom__mN_x002fm = 1179,
	resqml20__ResqmlUom__mohm = 1180,
	resqml20__ResqmlUom__Mohm = 1181,
	resqml20__ResqmlUom__mol = 1182,
	resqml20__ResqmlUom__mol_x002em2_x002f_x0028mol_x002es_x0029 = 1183,
	resqml20__ResqmlUom__mol_x002f_x0028s_x002em2_x0029 = 1184,
	resqml20__ResqmlUom__mol_x002fm2 = 1185,
	resqml20__ResqmlUom__mol_x002fm3 = 1186,
	resqml20__ResqmlUom__mol_x002fmol = 1187,
	resqml20__ResqmlUom__mol_x002fs = 1188,
	resqml20__ResqmlUom__mP = 1189,
	resqml20__ResqmlUom__MP = 1190,
	resqml20__ResqmlUom__MPa = 1191,
	resqml20__ResqmlUom__mPa = 1192,
	resqml20__ResqmlUom__mPa_x002es = 1193,
	resqml20__ResqmlUom__MPa_x002es_x002fm = 1194,
	resqml20__ResqmlUom__MPa_x002fh = 1195,
	resqml20__ResqmlUom__MPa_x002fm = 1196,
	resqml20__ResqmlUom__Mpsi = 1197,
	resqml20__ResqmlUom__mrad = 1198,
	resqml20__ResqmlUom__Mrad = 1199,
	resqml20__ResqmlUom__Mrd = 1200,
	resqml20__ResqmlUom__mrd = 1201,
	resqml20__ResqmlUom__mrem = 1202,
	resqml20__ResqmlUom__mrem_x002fh = 1203,
	resqml20__ResqmlUom__MS = 1204,
	resqml20__ResqmlUom__mS = 1205,
	resqml20__ResqmlUom__ms = 1206,
	resqml20__ResqmlUom__ms_x002fcm = 1207,
	resqml20__ResqmlUom__mS_x002fcm = 1208,
	resqml20__ResqmlUom__ms_x002fft = 1209,
	resqml20__ResqmlUom__ms_x002fin = 1210,
	resqml20__ResqmlUom__mS_x002fm = 1211,
	resqml20__ResqmlUom__ms_x002fm = 1212,
	resqml20__ResqmlUom__ms_x002fs = 1213,
	resqml20__ResqmlUom__mSv = 1214,
	resqml20__ResqmlUom__mSv_x002fh = 1215,
	resqml20__ResqmlUom__mT = 1216,
	resqml20__ResqmlUom__mT_x002fdm = 1217,
	resqml20__ResqmlUom__MV = 1218,
	resqml20__ResqmlUom__mV = 1219,
	resqml20__ResqmlUom__mV_x002fft = 1220,
	resqml20__ResqmlUom__mV_x002fm = 1221,
	resqml20__ResqmlUom__MW = 1222,
	resqml20__ResqmlUom__mW = 1223,
	resqml20__ResqmlUom__MW_x002eh = 1224,
	resqml20__ResqmlUom__MW_x002eh_x002fkg = 1225,
	resqml20__ResqmlUom__MW_x002eh_x002fm3 = 1226,
	resqml20__ResqmlUom__mW_x002fm2 = 1227,
	resqml20__ResqmlUom__mWb = 1228,
	resqml20__ResqmlUom__MWb = 1229,
	resqml20__ResqmlUom__N_x002em = 1230,
	resqml20__ResqmlUom__N_x002em_x002fm = 1231,
	resqml20__ResqmlUom__N_x002em2 = 1232,
	resqml20__ResqmlUom__N_x002es_x002fm2 = 1233,
	resqml20__ResqmlUom__N_x002fm = 1234,
	resqml20__ResqmlUom__N_x002fm2 = 1235,
	resqml20__ResqmlUom__N_x002fm3 = 1236,
	resqml20__ResqmlUom__N_x002fmm2 = 1237,
	resqml20__ResqmlUom__N_x002fN = 1238,
	resqml20__ResqmlUom__nA = 1239,
	resqml20__ResqmlUom__na = 1240,
	resqml20__ResqmlUom__nAPI = 1241,
	resqml20__ResqmlUom__nC = 1242,
	resqml20__ResqmlUom__ncal_x005bth_x005d = 1243,
	resqml20__ResqmlUom__nCi = 1244,
	resqml20__ResqmlUom__nEuc = 1245,
	resqml20__ResqmlUom__neV = 1246,
	resqml20__ResqmlUom__nF = 1247,
	resqml20__ResqmlUom__ng = 1248,
	resqml20__ResqmlUom__ng_x002fg = 1249,
	resqml20__ResqmlUom__ng_x002fmg = 1250,
	resqml20__ResqmlUom__ngauss = 1251,
	resqml20__ResqmlUom__nGy = 1252,
	resqml20__ResqmlUom__nH = 1253,
	resqml20__ResqmlUom__nHz = 1254,
	resqml20__ResqmlUom__nJ = 1255,
	resqml20__ResqmlUom__nm = 1256,
	resqml20__ResqmlUom__nm_x002fs = 1257,
	resqml20__ResqmlUom__nN = 1258,
	resqml20__ResqmlUom__nohm = 1259,
	resqml20__ResqmlUom__nohm_x002emil2_x002fft = 1260,
	resqml20__ResqmlUom__nohm_x002emm2_x002fm = 1261,
	resqml20__ResqmlUom__nP = 1262,
	resqml20__ResqmlUom__nPa = 1263,
	resqml20__ResqmlUom__nrd = 1264,
	resqml20__ResqmlUom__nS = 1265,
	resqml20__ResqmlUom__ns = 1266,
	resqml20__ResqmlUom__ns_x002fft = 1267,
	resqml20__ResqmlUom__ns_x002fm = 1268,
	resqml20__ResqmlUom__nT = 1269,
	resqml20__ResqmlUom__nV = 1270,
	resqml20__ResqmlUom__nW = 1271,
	resqml20__ResqmlUom__nWb = 1272,
	resqml20__ResqmlUom__Oe = 1273,
	resqml20__ResqmlUom__ohm = 1274,
	resqml20__ResqmlUom__ohm_x002ecm = 1275,
	resqml20__ResqmlUom__ohm_x002em = 1276,
	resqml20__ResqmlUom__ohm_x002em2_x002fm = 1277,
	resqml20__ResqmlUom__ohm_x002fm = 1278,
	resqml20__ResqmlUom__ozf = 1279,
	resqml20__ResqmlUom__ozm = 1280,
	resqml20__ResqmlUom__ozm_x005btroy_x005d = 1281,
	resqml20__ResqmlUom__pA = 1282,
	resqml20__ResqmlUom__Pa = 1283,
	resqml20__ResqmlUom__Pa_x002es = 1284,
	resqml20__ResqmlUom__Pa_x002es_x002em3_x002fkg = 1285,
	resqml20__ResqmlUom__Pa_x002es_x002fm3 = 1286,
	resqml20__ResqmlUom__Pa_x002es2_x002fm3 = 1287,
	resqml20__ResqmlUom__Pa_x002fh = 1288,
	resqml20__ResqmlUom__Pa_x002fm = 1289,
	resqml20__ResqmlUom__Pa_x002fm3 = 1290,
	resqml20__ResqmlUom__Pa_x002fs = 1291,
	resqml20__ResqmlUom__Pa2 = 1292,
	resqml20__ResqmlUom__Pa2_x002f_x0028Pa_x002es_x0029 = 1293,
	resqml20__ResqmlUom__pC = 1294,
	resqml20__ResqmlUom__pcal_x005bth_x005d = 1295,
	resqml20__ResqmlUom__pCi = 1296,
	resqml20__ResqmlUom__pCi_x002fg = 1297,
	resqml20__ResqmlUom__pdl = 1298,
	resqml20__ResqmlUom__pdl_x002ecm2 = 1299,
	resqml20__ResqmlUom__pdl_x002eft = 1300,
	resqml20__ResqmlUom__pdl_x002fcm = 1301,
	resqml20__ResqmlUom__pEuc = 1302,
	resqml20__ResqmlUom__peV = 1303,
	resqml20__ResqmlUom__pF = 1304,
	resqml20__ResqmlUom__pg = 1305,
	resqml20__ResqmlUom__pgauss = 1306,
	resqml20__ResqmlUom__pGy = 1307,
	resqml20__ResqmlUom__pHz = 1308,
	resqml20__ResqmlUom__pJ = 1309,
	resqml20__ResqmlUom__pm = 1310,
	resqml20__ResqmlUom__pN = 1311,
	resqml20__ResqmlUom__pohm = 1312,
	resqml20__ResqmlUom__pP = 1313,
	resqml20__ResqmlUom__pPa = 1314,
	resqml20__ResqmlUom__ppk = 1315,
	resqml20__ResqmlUom__ppm = 1316,
	resqml20__ResqmlUom__ppm_x005bmass_x005d = 1317,
	resqml20__ResqmlUom__ppm_x005bvol_x005d = 1318,
	resqml20__ResqmlUom__ppm_x005bvol_x005d_x002fdegC = 1319,
	resqml20__ResqmlUom__ppm_x005bvol_x005d_x002fdegF = 1320,
	resqml20__ResqmlUom__prd = 1321,
	resqml20__ResqmlUom__ps = 1322,
	resqml20__ResqmlUom__pS = 1323,
	resqml20__ResqmlUom__psi = 1324,
	resqml20__ResqmlUom__psi_x002ed_x002fbbl = 1325,
	resqml20__ResqmlUom__psi_x002es = 1326,
	resqml20__ResqmlUom__psi_x002fft = 1327,
	resqml20__ResqmlUom__psi_x002fh = 1328,
	resqml20__ResqmlUom__psi_x002fm = 1329,
	resqml20__ResqmlUom__psi_x002fmin = 1330,
	resqml20__ResqmlUom__psi2 = 1331,
	resqml20__ResqmlUom__psi2_x002ed_x002f_x0028cP_x002eft3_x0029 = 1332,
	resqml20__ResqmlUom__psi2_x002fcP = 1333,
	resqml20__ResqmlUom__pT = 1334,
	resqml20__ResqmlUom__pt_x005bUK_x005d = 1335,
	resqml20__ResqmlUom__pt_x005bUK_x005d_x002f_x0028hp_x002eh_x0029 = 1336,
	resqml20__ResqmlUom__pt_x005bUS_x005d = 1337,
	resqml20__ResqmlUom__pV = 1338,
	resqml20__ResqmlUom__pW = 1339,
	resqml20__ResqmlUom__pWb = 1340,
	resqml20__ResqmlUom__qt_x005bUK_x005d = 1341,
	resqml20__ResqmlUom__qt_x005bUS_x005d = 1342,
	resqml20__ResqmlUom__quad = 1343,
	resqml20__ResqmlUom__quad_x002fa = 1344,
	resqml20__ResqmlUom__rad = 1345,
	resqml20__ResqmlUom__rad_x002fft = 1346,
	resqml20__ResqmlUom__rad_x002fft3 = 1347,
	resqml20__ResqmlUom__rad_x002fm = 1348,
	resqml20__ResqmlUom__rad_x002fm3 = 1349,
	resqml20__ResqmlUom__rad_x002fs = 1350,
	resqml20__ResqmlUom__rad_x002fs2 = 1351,
	resqml20__ResqmlUom__rd = 1352,
	resqml20__ResqmlUom__rem = 1353,
	resqml20__ResqmlUom__rem_x002fh = 1354,
	resqml20__ResqmlUom__rev = 1355,
	resqml20__ResqmlUom__rev_x002fft = 1356,
	resqml20__ResqmlUom__rev_x002fm = 1357,
	resqml20__ResqmlUom__rev_x002fs = 1358,
	resqml20__ResqmlUom__rod_x005bUS_x005d = 1359,
	resqml20__ResqmlUom__rpm = 1360,
	resqml20__ResqmlUom__rpm_x002fs = 1361,
	resqml20__ResqmlUom__s_x002fcm = 1362,
	resqml20__ResqmlUom__s_x002fft = 1363,
	resqml20__ResqmlUom__s_x002fft3 = 1364,
	resqml20__ResqmlUom__s_x002fin = 1365,
	resqml20__ResqmlUom__s_x002fkg = 1366,
	resqml20__ResqmlUom__s_x002fL = 1367,
	resqml20__ResqmlUom__S_x002fm = 1368,
	resqml20__ResqmlUom__s_x002fm = 1369,
	resqml20__ResqmlUom__s_x002fm3 = 1370,
	resqml20__ResqmlUom__s_x002fqt_x005bUK_x005d = 1371,
	resqml20__ResqmlUom__s_x002fqt_x005bUS_x005d = 1372,
	resqml20__ResqmlUom__s_x002fs = 1373,
	resqml20__ResqmlUom__sack_x005b94lbm_x005d = 1374,
	resqml20__ResqmlUom__seca = 1375,
	resqml20__ResqmlUom__section = 1376,
	resqml20__ResqmlUom__sr = 1377,
	resqml20__ResqmlUom__St = 1378,
	resqml20__ResqmlUom__Sv = 1379,
	resqml20__ResqmlUom__Sv_x002fh = 1380,
	resqml20__ResqmlUom__Sv_x002fs = 1381,
	resqml20__ResqmlUom__t_x002fa = 1382,
	resqml20__ResqmlUom__t_x002fd = 1383,
	resqml20__ResqmlUom__t_x002fh = 1384,
	resqml20__ResqmlUom__T_x002fm = 1385,
	resqml20__ResqmlUom__t_x002fm3 = 1386,
	resqml20__ResqmlUom__t_x002fmin = 1387,
	resqml20__ResqmlUom__TA = 1388,
	resqml20__ResqmlUom__Ta_x005bt_x005d = 1389,
	resqml20__ResqmlUom__TBq = 1390,
	resqml20__ResqmlUom__TC = 1391,
	resqml20__ResqmlUom__Tcal_x005bth_x005d = 1392,
	resqml20__ResqmlUom__TD_x005bAPI_x005d = 1393,
	resqml20__ResqmlUom__TD_x005bAPI_x005d_x002em = 1394,
	resqml20__ResqmlUom__TD_x005bAPI_x005d_x002f_x0028Pa_x002es_x0029 = 1395,
	resqml20__ResqmlUom__TEuc = 1396,
	resqml20__ResqmlUom__TeV = 1397,
	resqml20__ResqmlUom__TF = 1398,
	resqml20__ResqmlUom__Tg = 1399,
	resqml20__ResqmlUom__Tgauss = 1400,
	resqml20__ResqmlUom__TGy = 1401,
	resqml20__ResqmlUom__TH = 1402,
	resqml20__ResqmlUom__therm_x005bEC_x005d = 1403,
	resqml20__ResqmlUom__therm_x005bUK_x005d = 1404,
	resqml20__ResqmlUom__therm_x005bUS_x005d = 1405,
	resqml20__ResqmlUom__THz = 1406,
	resqml20__ResqmlUom__TJ = 1407,
	resqml20__ResqmlUom__TJ_x002fa = 1408,
	resqml20__ResqmlUom__Tm = 1409,
	resqml20__ResqmlUom__TN = 1410,
	resqml20__ResqmlUom__Tohm = 1411,
	resqml20__ResqmlUom__ton_x005bUK_x005d = 1412,
	resqml20__ResqmlUom__ton_x005bUK_x005d_x002fa = 1413,
	resqml20__ResqmlUom__ton_x005bUK_x005d_x002fd = 1414,
	resqml20__ResqmlUom__ton_x005bUK_x005d_x002fh = 1415,
	resqml20__ResqmlUom__ton_x005bUK_x005d_x002fmin = 1416,
	resqml20__ResqmlUom__ton_x005bUS_x005d = 1417,
	resqml20__ResqmlUom__ton_x005bUS_x005d_x002fa = 1418,
	resqml20__ResqmlUom__ton_x005bUS_x005d_x002fd = 1419,
	resqml20__ResqmlUom__ton_x005bUS_x005d_x002fft2 = 1420,
	resqml20__ResqmlUom__ton_x005bUS_x005d_x002fh = 1421,
	resqml20__ResqmlUom__ton_x005bUS_x005d_x002fmin = 1422,
	resqml20__ResqmlUom__tonf_x005bUK_x005d = 1423,
	resqml20__ResqmlUom__tonf_x005bUK_x005d_x002eft2 = 1424,
	resqml20__ResqmlUom__tonf_x005bUK_x005d_x002fft = 1425,
	resqml20__ResqmlUom__tonf_x005bUK_x005d_x002fft2 = 1426,
	resqml20__ResqmlUom__tonf_x005bUS_x005d = 1427,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002eft = 1428,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002eft2 = 1429,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002emi = 1430,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002emi_x002fbbl = 1431,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002emi_x002fft = 1432,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002fft = 1433,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002fft2 = 1434,
	resqml20__ResqmlUom__tonf_x005bUS_x005d_x002fin2 = 1435,
	resqml20__ResqmlUom__tonRefrig = 1436,
	resqml20__ResqmlUom__torr = 1437,
	resqml20__ResqmlUom__TP = 1438,
	resqml20__ResqmlUom__TPa = 1439,
	resqml20__ResqmlUom__Trd = 1440,
	resqml20__ResqmlUom__TS = 1441,
	resqml20__ResqmlUom__TT = 1442,
	resqml20__ResqmlUom__TV = 1443,
	resqml20__ResqmlUom__TW = 1444,
	resqml20__ResqmlUom__TW_x002eh = 1445,
	resqml20__ResqmlUom__TWb = 1446,
	resqml20__ResqmlUom__uA = 1447,
	resqml20__ResqmlUom__uA_x002fcm2 = 1448,
	resqml20__ResqmlUom__uA_x002fin2 = 1449,
	resqml20__ResqmlUom__ubar = 1450,
	resqml20__ResqmlUom__uC = 1451,
	resqml20__ResqmlUom__ucal_x005bth_x005d = 1452,
	resqml20__ResqmlUom__ucal_x005bth_x005d_x002f_x0028s_x002ecm2_x0029 = 1453,
	resqml20__ResqmlUom__ucal_x005bth_x005d_x002fs = 1454,
	resqml20__ResqmlUom__uCi = 1455,
	resqml20__ResqmlUom__uEuc = 1456,
	resqml20__ResqmlUom__ueV = 1457,
	resqml20__ResqmlUom__uF = 1458,
	resqml20__ResqmlUom__uF_x002fm = 1459,
	resqml20__ResqmlUom__ug = 1460,
	resqml20__ResqmlUom__ug_x002fcm3 = 1461,
	resqml20__ResqmlUom__ug_x002fg = 1462,
	resqml20__ResqmlUom__ug_x002fmg = 1463,
	resqml20__ResqmlUom__ugauss = 1464,
	resqml20__ResqmlUom__uGy = 1465,
	resqml20__ResqmlUom__uH = 1466,
	resqml20__ResqmlUom__uH_x002fm = 1467,
	resqml20__ResqmlUom__uHz = 1468,
	resqml20__ResqmlUom__uJ = 1469,
	resqml20__ResqmlUom__um = 1470,
	resqml20__ResqmlUom__um_x002fs = 1471,
	resqml20__ResqmlUom__um2 = 1472,
	resqml20__ResqmlUom__um2_x002em = 1473,
	resqml20__ResqmlUom__umHg_x005b0degC_x005d = 1474,
	resqml20__ResqmlUom__umol = 1475,
	resqml20__ResqmlUom__uN = 1476,
	resqml20__ResqmlUom__uohm = 1477,
	resqml20__ResqmlUom__uohm_x002fft = 1478,
	resqml20__ResqmlUom__uohm_x002fm = 1479,
	resqml20__ResqmlUom__uP = 1480,
	resqml20__ResqmlUom__uPa = 1481,
	resqml20__ResqmlUom__upsi = 1482,
	resqml20__ResqmlUom__urad = 1483,
	resqml20__ResqmlUom__urd = 1484,
	resqml20__ResqmlUom__us = 1485,
	resqml20__ResqmlUom__uS = 1486,
	resqml20__ResqmlUom__us_x002fft = 1487,
	resqml20__ResqmlUom__us_x002fin = 1488,
	resqml20__ResqmlUom__us_x002fm = 1489,
	resqml20__ResqmlUom__uT = 1490,
	resqml20__ResqmlUom__uV = 1491,
	resqml20__ResqmlUom__uV_x002fft = 1492,
	resqml20__ResqmlUom__uV_x002fm = 1493,
	resqml20__ResqmlUom__uW = 1494,
	resqml20__ResqmlUom__uW_x002fm3 = 1495,
	resqml20__ResqmlUom__uWb = 1496,
	resqml20__ResqmlUom__V_x002fB = 1497,
	resqml20__ResqmlUom__V_x002fdB = 1498,
	resqml20__ResqmlUom__V_x002fm = 1499,
	resqml20__ResqmlUom__W_x002em2_x002eK_x002f_x0028J_x002eK_x0029 = 1500,
	resqml20__ResqmlUom__W_x002f_x0028m_x002eK_x0029 = 1501,
	resqml20__ResqmlUom__W_x002f_x0028m2_x002eK_x0029 = 1502,
	resqml20__ResqmlUom__W_x002f_x0028m2_x002esr_x0029 = 1503,
	resqml20__ResqmlUom__W_x002f_x0028m3_x002eK_x0029 = 1504,
	resqml20__ResqmlUom__W_x002fcm2 = 1505,
	resqml20__ResqmlUom__W_x002fK = 1506,
	resqml20__ResqmlUom__W_x002fkW = 1507,
	resqml20__ResqmlUom__W_x002fm2 = 1508,
	resqml20__ResqmlUom__W_x002fm3 = 1509,
	resqml20__ResqmlUom__W_x002fmm2 = 1510,
	resqml20__ResqmlUom__W_x002fsr = 1511,
	resqml20__ResqmlUom__W_x002fW = 1512,
	resqml20__ResqmlUom__Wb = 1513,
	resqml20__ResqmlUom__Wb_x002em = 1514,
	resqml20__ResqmlUom__Wb_x002fm = 1515,
	resqml20__ResqmlUom__Wb_x002fmm = 1516,
	resqml20__ResqmlUom__wk = 1517,
	resqml20__ResqmlUom__yd = 1518,
	resqml20__ResqmlUom__yd_x005bBnA_x005d = 1519,
	resqml20__ResqmlUom__yd_x005bBnB_x005d = 1520,
	resqml20__ResqmlUom__yd_x005bCla_x005d = 1521,
	resqml20__ResqmlUom__yd_x005bInd_x005d = 1522,
	resqml20__ResqmlUom__yd_x005bInd37_x005d = 1523,
	resqml20__ResqmlUom__yd_x005bInd62_x005d = 1524,
	resqml20__ResqmlUom__yd_x005bInd75_x005d = 1525,
	resqml20__ResqmlUom__yd_x005bSe_x005d = 1526,
	resqml20__ResqmlUom__yd_x005bSeT_x005d = 1527,
	resqml20__ResqmlUom__yd_x005bUS_x005d = 1528,
	resqml20__ResqmlUom__yd2 = 1529,
	resqml20__ResqmlUom__yd3 = 1530
};
#endif

/* resqml2_0_1ForGsoap.h:2950 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind (-565)

/* resqml20:IdentityKind */
enum resqml20__IdentityKind {
	resqml20__IdentityKind__colocation = 0,
	resqml20__IdentityKind__previous_x0020colocation = 1,
	resqml20__IdentityKind__equivalence = 2,
	resqml20__IdentityKind__previous_x0020equivalence = 3
};
#endif

/* resqml2_0_1ForGsoap.h:2986 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements (-566)

/* resqml20:IndexableElements */
enum resqml20__IndexableElements {
	resqml20__IndexableElements__cells = 0,
	resqml20__IndexableElements__column_x0020edges = 1,
	resqml20__IndexableElements__columns = 2,
	resqml20__IndexableElements__contacts = 3,
	resqml20__IndexableElements__coordinate_x0020lines = 4,
	resqml20__IndexableElements__edges = 5,
	resqml20__IndexableElements__edges_x0020per_x0020column = 6,
	resqml20__IndexableElements__enumerated_x0020elements = 7,
	resqml20__IndexableElements__faces = 8,
	resqml20__IndexableElements__faces_x0020per_x0020cell = 9,
	resqml20__IndexableElements__interval_x0020edges = 10,
	resqml20__IndexableElements__intervals = 11,
	resqml20__IndexableElements__I0 = 12,
	resqml20__IndexableElements__I0_x0020edges = 13,
	resqml20__IndexableElements__J0 = 14,
	resqml20__IndexableElements__J0_x0020edges = 15,
	resqml20__IndexableElements__layers = 16,
	resqml20__IndexableElements__nodes = 17,
	resqml20__IndexableElements__nodes_x0020per_x0020cell = 18,
	resqml20__IndexableElements__nodes_x0020per_x0020edge = 19,
	resqml20__IndexableElements__nodes_x0020per_x0020face = 20,
	resqml20__IndexableElements__patches = 21,
	resqml20__IndexableElements__pillars = 22,
	resqml20__IndexableElements__regions = 23,
	resqml20__IndexableElements__representation = 24,
	resqml20__IndexableElements__subnodes = 25,
	resqml20__IndexableElements__triangles = 26
};
#endif

/* resqml2_0_1ForGsoap.h:3048 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements (-567)

/* resqml20:UnstructuredColumnLayerIndexableElements */
enum resqml20__UnstructuredColumnLayerIndexableElements {
	resqml20__UnstructuredColumnLayerIndexableElements__cells = 0,
	resqml20__UnstructuredColumnLayerIndexableElements__column_x0020edges = 1,
	resqml20__UnstructuredColumnLayerIndexableElements__columns = 2,
	resqml20__UnstructuredColumnLayerIndexableElements__coordinate_x0020lines = 3,
	resqml20__UnstructuredColumnLayerIndexableElements__edges = 4,
	resqml20__UnstructuredColumnLayerIndexableElements__edges_x0020per_x0020column = 5,
	resqml20__UnstructuredColumnLayerIndexableElements__faces = 6,
	resqml20__UnstructuredColumnLayerIndexableElements__faces_x0020per_x0020cell = 7,
	resqml20__UnstructuredColumnLayerIndexableElements__hinge_x0020node_x0020faces = 8,
	resqml20__UnstructuredColumnLayerIndexableElements__interval_x0020edges = 9,
	resqml20__UnstructuredColumnLayerIndexableElements__intervals = 10,
	resqml20__UnstructuredColumnLayerIndexableElements__layers = 11,
	resqml20__UnstructuredColumnLayerIndexableElements__nodes = 12,
	resqml20__UnstructuredColumnLayerIndexableElements__nodes_x0020per_x0020cell = 13,
	resqml20__UnstructuredColumnLayerIndexableElements__nodes_x0020per_x0020edge = 14,
	resqml20__UnstructuredColumnLayerIndexableElements__nodes_x0020per_x0020face = 15,
	resqml20__UnstructuredColumnLayerIndexableElements__pillars = 16,
	resqml20__UnstructuredColumnLayerIndexableElements__subnodes = 17
};
#endif

/* resqml2_0_1ForGsoap.h:3150 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject (-568)

/* resqml20:SubnodeNodeObject */
enum resqml20__SubnodeNodeObject {
	resqml20__SubnodeNodeObject__cell = 0,
	resqml20__SubnodeNodeObject__face = 1,
	resqml20__SubnodeNodeObject__edge = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3179 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape (-569)

/* resqml20:ColumnShape */
enum resqml20__ColumnShape {
	resqml20__ColumnShape__triangular = 0,
	resqml20__ColumnShape__quadrilateral = 1,
	resqml20__ColumnShape__polygonal = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3205 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection (-570)

/* resqml20:KDirection */
enum resqml20__KDirection {
	resqml20__KDirection__down = 0,
	resqml20__KDirection__up = 1,
	resqml20__KDirection__not_x0020monotonic = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3231 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements (-571)

/* resqml20:IjkIndexableElements */
enum resqml20__IjkIndexableElements {
	resqml20__IjkIndexableElements__cells = 0,
	resqml20__IjkIndexableElements__column_x0020edges = 1,
	resqml20__IjkIndexableElements__columns = 2,
	resqml20__IjkIndexableElements__coordinate_x0020lines = 3,
	resqml20__IjkIndexableElements__edges = 4,
	resqml20__IjkIndexableElements__edges_x0020per_x0020column = 5,
	resqml20__IjkIndexableElements__faces = 6,
	resqml20__IjkIndexableElements__faces_x0020per_x0020cell = 7,
	resqml20__IjkIndexableElements__hinge_x0020node_x0020faces = 8,
	resqml20__IjkIndexableElements__interval_x0020edges = 9,
	resqml20__IjkIndexableElements__intervals = 10,
	resqml20__IjkIndexableElements__I0 = 11,
	resqml20__IjkIndexableElements__I0_x0020edges = 12,
	resqml20__IjkIndexableElements__J0 = 13,
	resqml20__IjkIndexableElements__J0_x0020edges = 14,
	resqml20__IjkIndexableElements__layers = 15,
	resqml20__IjkIndexableElements__nodes = 16,
	resqml20__IjkIndexableElements__nodes_x0020per_x0020cell = 17,
	resqml20__IjkIndexableElements__nodes_x0020per_x0020edge = 18,
	resqml20__IjkIndexableElements__nodes_x0020per_x0020face = 19,
	resqml20__IjkIndexableElements__pillars = 20,
	resqml20__IjkIndexableElements__radial_x0020origin_x0020polyline = 21,
	resqml20__IjkIndexableElements__subnodes = 22
};
#endif

/* resqml2_0_1ForGsoap.h:3357 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment (-572)

/* resqml20:GridGeometryAttachment */
enum resqml20__GridGeometryAttachment {
	resqml20__GridGeometryAttachment__cells = 0,
	resqml20__GridGeometryAttachment__edges = 1,
	resqml20__GridGeometryAttachment__faces = 2,
	resqml20__GridGeometryAttachment__hinge_x0020node_x0020faces = 3,
	resqml20__GridGeometryAttachment__nodes = 4,
	resqml20__GridGeometryAttachment__radial_x0020origin_x0020polyline = 5,
	resqml20__GridGeometryAttachment__subnodes = 6
};
#endif

/* resqml2_0_1ForGsoap.h:3409 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape (-573)

/* resqml20:CellShape */
enum resqml20__CellShape {
	resqml20__CellShape__tetrahedral = 0,
	resqml20__CellShape__pyramidal = 1,
	resqml20__CellShape__prism = 2,
	resqml20__CellShape__hexahedral = 3,
	resqml20__CellShape__polyhedral = 4
};
#endif

/* resqml2_0_1ForGsoap.h:3445 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements (-574)

/* resqml20:UnstructuredCellIndexableElements */
enum resqml20__UnstructuredCellIndexableElements {
	resqml20__UnstructuredCellIndexableElements__cells = 0,
	resqml20__UnstructuredCellIndexableElements__edges = 1,
	resqml20__UnstructuredCellIndexableElements__faces = 2,
	resqml20__UnstructuredCellIndexableElements__faces_x0020per_x0020cell = 3,
	resqml20__UnstructuredCellIndexableElements__hinge_x0020node_x0020faces = 4,
	resqml20__UnstructuredCellIndexableElements__nodes = 5,
	resqml20__UnstructuredCellIndexableElements__nodes_x0020per_x0020cell = 6,
	resqml20__UnstructuredCellIndexableElements__nodes_x0020per_x0020edge = 7,
	resqml20__UnstructuredCellIndexableElements__nodes_x0020per_x0020face = 8,
	resqml20__UnstructuredCellIndexableElements__subnodes = 9
};
#endif

/* resqml2_0_1ForGsoap.h:3509 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape (-575)

/* resqml20:PillarShape */
enum resqml20__PillarShape {
	resqml20__PillarShape__vertical = 0,
	resqml20__PillarShape__straight = 1,
	resqml20__PillarShape__curved = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3535 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind (-576)

/* resqml20:ThrowKind */
enum resqml20__ThrowKind {
	resqml20__ThrowKind__reverse = 0,
	resqml20__ThrowKind__normal = 1,
	resqml20__ThrowKind__thrust = 2,
	resqml20__ThrowKind__strike_x0020and_x0020slip = 3,
	resqml20__ThrowKind__scissor = 4,
	resqml20__ThrowKind__variable = 5
};
#endif

/* resqml2_0_1ForGsoap.h:3552 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface (-577)

/* resqml20:SequenceStratigraphySurface */
enum resqml20__SequenceStratigraphySurface {
	resqml20__SequenceStratigraphySurface__flooding = 0,
	resqml20__SequenceStratigraphySurface__ravinement = 1,
	resqml20__SequenceStratigraphySurface__maximum_x0020flooding = 2,
	resqml20__SequenceStratigraphySurface__transgressive = 3
};
#endif

/* resqml2_0_1ForGsoap.h:3567 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship (-578)

/* resqml20:ContactRelationship */
enum resqml20__ContactRelationship {
	resqml20__ContactRelationship__frontier_x0020feature_x0020to_x0020frontier_x0020feature = 0,
	resqml20__ContactRelationship__genetic_x0020boundary_x0020to_x0020frontier_x0020feature = 1,
	resqml20__ContactRelationship__genetic_x0020boundary_x0020to_x0020genetic_x0020boundary = 2,
	resqml20__ContactRelationship__genetic_x0020boundary_x0020to_x0020tectonic_x0020boundary = 3,
	resqml20__ContactRelationship__stratigraphic_x0020unit_x0020to_x0020frontier_x0020feature = 4,
	resqml20__ContactRelationship__stratigraphic_x0020unit_x0020to_x0020stratigraphic_x0020unit = 5,
	resqml20__ContactRelationship__tectonic_x0020boundary_x0020to_x0020frontier_x0020feature = 6,
	resqml20__ContactRelationship__tectonic_x0020boundary_x0020to_x0020genetic_x0020boundary = 7,
	resqml20__ContactRelationship__tectonic_x0020boundary_x0020to_x0020tectonic_x0020boundary = 8
};
#endif

/* resqml2_0_1ForGsoap.h:3623 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode (-579)

/* resqml20:DepositionMode */
enum resqml20__DepositionMode {
	resqml20__DepositionMode__proportional_x0020between_x0020top_x0020and_x0020bottom = 0,
	resqml20__DepositionMode__parallel_x0020to_x0020bottom = 1,
	resqml20__DepositionMode__parallel_x0020to_x0020top = 2,
	resqml20__DepositionMode__parallel_x0020to_x0020another_x0020boundary = 3
};
#endif

/* resqml2_0_1ForGsoap.h:3634 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition (-580)

/* resqml20:GeologicUnitComposition */
enum resqml20__GeologicUnitComposition {
	resqml20__GeologicUnitComposition__intrusive_x0020clay_x0020 = 0,
	resqml20__GeologicUnitComposition__organic = 1,
	resqml20__GeologicUnitComposition__intrusive_x0020mud_x0020 = 2,
	resqml20__GeologicUnitComposition__evaporite_x0020salt = 3,
	resqml20__GeologicUnitComposition__evaporite_x0020non_x0020salt = 4,
	resqml20__GeologicUnitComposition__sedimentary_x0020siliclastic = 5,
	resqml20__GeologicUnitComposition__carbonate = 6,
	resqml20__GeologicUnitComposition__magmatic_x0020intrusive_x0020granitoid = 7,
	resqml20__GeologicUnitComposition__magmatic_x0020intrusive_x0020pyroclastic = 8,
	resqml20__GeologicUnitComposition__magmatic_x0020extrusive_x0020lava_x0020flow = 9,
	resqml20__GeologicUnitComposition__other_x0020chemichal_x0020rock = 10,
	resqml20__GeologicUnitComposition__sedimentary_x0020turbidite = 11
};
#endif

/* resqml2_0_1ForGsoap.h:3657 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain (-581)

/* resqml20:Domain */
enum resqml20__Domain {
	resqml20__Domain__depth = 0,
	resqml20__Domain__time = 1,
	resqml20__Domain__mixed = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3679 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation (-582)

/* resqml20:BoundaryRelation */
enum resqml20__BoundaryRelation {
	resqml20__BoundaryRelation__conformable = 0,
	resqml20__BoundaryRelation__unconformable_x0020below_x0020and_x0020above = 1,
	resqml20__BoundaryRelation__unconformable_x0020above = 2,
	resqml20__BoundaryRelation__unconformable_x0020below = 3
};
#endif

/* resqml2_0_1ForGsoap.h:3703 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode (-583)

/* resqml20:ContactMode */
enum resqml20__ContactMode {
	resqml20__ContactMode__baselap = 0,
	resqml20__ContactMode__erosion = 1,
	resqml20__ContactMode__extended = 2,
	resqml20__ContactMode__proportional = 3
};
#endif

/* resqml2_0_1ForGsoap.h:3718 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria (-584)

/* resqml20:OrderingCriteria */
enum resqml20__OrderingCriteria {
	resqml20__OrderingCriteria__age = 0,
	resqml20__OrderingCriteria__apparent_x0020depth = 1,
	resqml20__OrderingCriteria__measured_x0020depth = 2
};
#endif

/* resqml2_0_1ForGsoap.h:3744 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape (-585)

/* resqml20:Geobody3dShape */
enum resqml20__Geobody3dShape {
	resqml20__Geobody3dShape__dyke = 0,
	resqml20__Geobody3dShape__silt = 1,
	resqml20__Geobody3dShape__dome = 2,
	resqml20__Geobody3dShape__sheeth = 3,
	resqml20__Geobody3dShape__diapir = 4,
	resqml20__Geobody3dShape__batholith = 5,
	resqml20__Geobody3dShape__channel = 6,
	resqml20__Geobody3dShape__delta = 7,
	resqml20__Geobody3dShape__dune = 8,
	resqml20__Geobody3dShape__fan = 9,
	resqml20__Geobody3dShape__reef = 10,
	resqml20__Geobody3dShape__wedge = 11
};
#endif

/* resqml2_0_1ForGsoap.h:3767 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb (-586)

/* resqml20:ContactVerb */
enum resqml20__ContactVerb {
	resqml20__ContactVerb__splits = 0,
	resqml20__ContactVerb__interrupts = 1,
	resqml20__ContactVerb__contains = 2,
	resqml20__ContactVerb__conforms = 3,
	resqml20__ContactVerb__erodes = 4,
	resqml20__ContactVerb__stops_x0020at = 5,
	resqml20__ContactVerb__crosses = 6,
	resqml20__ContactVerb__includes = 7
};
#endif

/* resqml2_0_1ForGsoap.h:3819 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide (-587)

/* resqml20:ContactSide */
enum resqml20__ContactSide {
	resqml20__ContactSide__footwall = 0,
	resqml20__ContactSide__hanging_x0020wall = 1,
	resqml20__ContactSide__north = 2,
	resqml20__ContactSide__south = 3,
	resqml20__ContactSide__east = 4,
	resqml20__ContactSide__west = 5,
	resqml20__ContactSide__younger = 6,
	resqml20__ContactSide__older = 7,
	resqml20__ContactSide__both = 8
};
#endif

/* resqml2_0_1ForGsoap.h:3875 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement (-588)

/* resqml20:GeologicUnitMaterialImplacement */
enum resqml20__GeologicUnitMaterialImplacement {
	resqml20__GeologicUnitMaterialImplacement__autochtonous = 0,
	resqml20__GeologicUnitMaterialImplacement__allochtonous = 1
};
#endif

/* resqml2_0_1ForGsoap.h:3889 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase (-589)

/* resqml20:Phase */
enum resqml20__Phase {
	resqml20__Phase__aquifer = 0,
	resqml20__Phase__gas_x0020cap = 1,
	resqml20__Phase__oil_x0020column = 2,
	resqml20__Phase__seal = 3
};
#endif

/* resqml2_0_1ForGsoap.h:3920 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind (-590)

/* resqml20:GeneticBoundaryKind */
enum resqml20__GeneticBoundaryKind {
	resqml20__GeneticBoundaryKind__geobody_x0020boundary = 0,
	resqml20__GeneticBoundaryKind__horizon = 1
};
#endif

/* resqml2_0_1ForGsoap.h:3941 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact (-591)

/* resqml20:FluidContact */
enum resqml20__FluidContact {
	resqml20__FluidContact__free_x0020water_x0020contact = 0,
	resqml20__FluidContact__gas_x0020oil_x0020contact = 1,
	resqml20__FluidContact__gas_x0020water_x0020contact = 2,
	resqml20__FluidContact__seal = 3,
	resqml20__FluidContact__water_x0020oil_x0020contact = 4
};
#endif

/* resqml2_0_1ForGsoap.h:3977 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind (-592)

/* resqml20:TectonicBoundaryKind */
enum resqml20__TectonicBoundaryKind {
	resqml20__TectonicBoundaryKind__fault = 0,
	resqml20__TectonicBoundaryKind__fracture = 1
};
#endif

/* resqml2_0_1ForGsoap.h:3998 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind (-593)

/* resqml20:GeologicBoundaryKind */
enum resqml20__GeologicBoundaryKind {
	resqml20__GeologicBoundaryKind__fault = 0,
	resqml20__GeologicBoundaryKind__geobody = 1,
	resqml20__GeologicBoundaryKind__horizon = 2
};
#endif

/* resqml2_0_1ForGsoap.h:4012 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements (-594)

/* resqml20:WellboreFrameIndexableElements */
enum resqml20__WellboreFrameIndexableElements {
	resqml20__WellboreFrameIndexableElements__intervals = 0,
	resqml20__WellboreFrameIndexableElements__nodes = 1,
	resqml20__WellboreFrameIndexableElements__cells = 2
};
#endif

/* resqml2_0_1ForGsoap.h:4038 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain (-595)

/* resqml20:MdDomain */
enum resqml20__MdDomain {
	resqml20__MdDomain__driller = 0,
	resqml20__MdDomain__logger = 1
};
#endif

/* resqml2_0_1ForGsoap.h:4060 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference (-596)

/* resqml20:MdReference */
enum resqml20__MdReference {
	resqml20__MdReference__ground_x0020level = 0,
	resqml20__MdReference__kelly_x0020bushing = 1,
	resqml20__MdReference__mean_x0020sea_x0020level = 2,
	resqml20__MdReference__derrick_x0020floor = 3,
	resqml20__MdReference__casing_x0020flange = 4,
	resqml20__MdReference__arbitrary_x0020point = 5,
	resqml20__MdReference__crown_x0020valve = 6,
	resqml20__MdReference__rotary_x0020bushing = 7,
	resqml20__MdReference__rotary_x0020table = 8,
	resqml20__MdReference__sea_x0020floor = 9,
	resqml20__MdReference__lowest_x0020astronomical_x0020tide = 10,
	resqml20__MdReference__mean_x0020higher_x0020high_x0020water = 11,
	resqml20__MdReference__mean_x0020high_x0020water = 12,
	resqml20__MdReference__mean_x0020lower_x0020low_x0020water = 13,
	resqml20__MdReference__mean_x0020low_x0020water = 14,
	resqml20__MdReference__mean_x0020tide_x0020level = 15,
	resqml20__MdReference__kickoff_x0020point = 16
};
#endif

/* resqml2_0_1ForGsoap.h:4128 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker (-597)

/* resqml20:FluidMarker */
enum resqml20__FluidMarker {
	resqml20__FluidMarker__gas_x0020down_x0020to = 0,
	resqml20__FluidMarker__gas_x0020up_x0020to = 1,
	resqml20__FluidMarker__oil_x0020down_x0020to = 2,
	resqml20__FluidMarker__oil_x0020up_x0020to = 3,
	resqml20__FluidMarker__water_x0020down_x0020to = 4,
	resqml20__FluidMarker__water_x0020up_x0020to = 5
};
#endif

/* resqml2_0_1ForGsoap.h:4145 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole (-598)

/* resqml20:SurfaceRole */
enum resqml20__SurfaceRole {
	resqml20__SurfaceRole__map = 0,
	resqml20__SurfaceRole__pick = 1
};
#endif

/* resqml2_0_1ForGsoap.h:4166 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole (-599)

/* resqml20:LineRole */
enum resqml20__LineRole {
	resqml20__LineRole__fault_x0020center_x0020line = 0,
	resqml20__LineRole__pick = 1,
	resqml20__LineRole__inner_x0020ring = 2,
	resqml20__LineRole__outer_x0020ring = 3,
	resqml20__LineRole__trajectory = 4,
	resqml20__LineRole__interpretation_x0020line = 5,
	resqml20__LineRole__contact = 6,
	resqml20__LineRole__depositional_x0020line = 7,
	resqml20__LineRole__erosion_x0020line = 8,
	resqml20__LineRole__contouring = 9,
	resqml20__LineRole__pillar = 10
};
#endif

/* resqml2_0_1ForGsoap.h:4225 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind (-600)

/* resqml20:ParameterKind */
enum resqml20__ParameterKind {
	resqml20__ParameterKind__dataObject = 0,
	resqml20__ParameterKind__floatingPoint = 1,
	resqml20__ParameterKind__integer = 2,
	resqml20__ParameterKind__string = 3,
	resqml20__ParameterKind__timestamp = 4,
	resqml20__ParameterKind__subActivity = 5
};
#endif

/* resqml2_0_1ForGsoap.h:4242 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux (-601)

/* resqml20:StreamlineFlux */
enum resqml20__StreamlineFlux {
	resqml20__StreamlineFlux__oil = 0,
	resqml20__StreamlineFlux__gas = 1,
	resqml20__StreamlineFlux__water = 2,
	resqml20__StreamlineFlux__total = 3,
	resqml20__StreamlineFlux__other = 4
};
#endif

/* resqml2_0_1ForGsoap.h:4333 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType (-608)

/* gml:AggregationType */
enum gml__AggregationType {
	gml__AggregationType__set = 0,
	gml__AggregationType__bag = 1,
	gml__AggregationType__sequence = 2,
	gml__AggregationType__array = 3,
	gml__AggregationType__record = 4,
	gml__AggregationType__table = 5
};
#endif

/* resqml2_0_1ForGsoap.h:4361 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__show
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__show (-609)

/* xlink:show */
enum _xlink__show {
	_xlink__show__new_ = 0,
	_xlink__show__replace = 1,
	_xlink__show__embed = 2,
	_xlink__show__other = 3,
	_xlink__show__none = 4
};
#endif

/* resqml2_0_1ForGsoap.h:4378 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate (-610)

/* xlink:actuate */
enum _xlink__actuate {
	_xlink__actuate__onLoad = 0,
	_xlink__actuate__onRequest = 1,
	_xlink__actuate__other = 2,
	_xlink__actuate__none = 3
};
#endif

/* resqml2_0_1ForGsoap.h:4556 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind (-617)

/* resqml20:ResqmlPropertyKind */
enum resqml20__ResqmlPropertyKind {
	resqml20__ResqmlPropertyKind__absorbed_x0020dose = 0,
	resqml20__ResqmlPropertyKind__acceleration_x0020linear = 1,
	resqml20__ResqmlPropertyKind__activity_x0020_x0028of_x0020radioactivity_x0029 = 2,
	resqml20__ResqmlPropertyKind__amount_x0020of_x0020substance = 3,
	resqml20__ResqmlPropertyKind__amplitude = 4,
	resqml20__ResqmlPropertyKind__angle_x0020per_x0020length = 5,
	resqml20__ResqmlPropertyKind__angle_x0020per_x0020time = 6,
	resqml20__ResqmlPropertyKind__angle_x0020per_x0020volume = 7,
	resqml20__ResqmlPropertyKind__angular_x0020acceleration = 8,
	resqml20__ResqmlPropertyKind__area = 9,
	resqml20__ResqmlPropertyKind__area_x0020per_x0020area = 10,
	resqml20__ResqmlPropertyKind__area_x0020per_x0020volume = 11,
	resqml20__ResqmlPropertyKind__attenuation = 12,
	resqml20__ResqmlPropertyKind__attenuation_x0020per_x0020length = 13,
	resqml20__ResqmlPropertyKind__azimuth = 14,
	resqml20__ResqmlPropertyKind__bubble_x0020point_x0020pressure = 15,
	resqml20__ResqmlPropertyKind__bulk_x0020modulus = 16,
	resqml20__ResqmlPropertyKind__capacitance = 17,
	resqml20__ResqmlPropertyKind__categorical = 18,
	resqml20__ResqmlPropertyKind__cell_x0020length = 19,
	resqml20__ResqmlPropertyKind__charge_x0020density = 20,
	resqml20__ResqmlPropertyKind__chemical_x0020potential = 21,
	resqml20__ResqmlPropertyKind__code = 22,
	resqml20__ResqmlPropertyKind__compressibility = 23,
	resqml20__ResqmlPropertyKind__concentration_x0020of_x0020B = 24,
	resqml20__ResqmlPropertyKind__conductivity = 25,
	resqml20__ResqmlPropertyKind__continuous = 26,
	resqml20__ResqmlPropertyKind__cross_x0020section_x0020absorption = 27,
	resqml20__ResqmlPropertyKind__current_x0020density = 28,
	resqml20__ResqmlPropertyKind__Darcy_x0020flow_x0020coefficient = 29,
	resqml20__ResqmlPropertyKind__data_x0020transmission_x0020speed = 30,
	resqml20__ResqmlPropertyKind__delta_x0020temperature = 31,
	resqml20__ResqmlPropertyKind__density = 32,
	resqml20__ResqmlPropertyKind__depth = 33,
	resqml20__ResqmlPropertyKind__diffusion_x0020coefficient = 34,
	resqml20__ResqmlPropertyKind__digital_x0020storage = 35,
	resqml20__ResqmlPropertyKind__dimensionless = 36,
	resqml20__ResqmlPropertyKind__dip = 37,
	resqml20__ResqmlPropertyKind__discrete = 38,
	resqml20__ResqmlPropertyKind__dose_x0020equivalent = 39,
	resqml20__ResqmlPropertyKind__dose_x0020equivalent_x0020rate = 40,
	resqml20__ResqmlPropertyKind__dynamic_x0020viscosity = 41,
	resqml20__ResqmlPropertyKind__electric_x0020charge = 42,
	resqml20__ResqmlPropertyKind__electric_x0020conductance = 43,
	resqml20__ResqmlPropertyKind__electric_x0020current = 44,
	resqml20__ResqmlPropertyKind__electric_x0020dipole_x0020moment = 45,
	resqml20__ResqmlPropertyKind__electric_x0020field_x0020strength = 46,
	resqml20__ResqmlPropertyKind__electric_x0020polarization = 47,
	resqml20__ResqmlPropertyKind__electric_x0020potential = 48,
	resqml20__ResqmlPropertyKind__electrical_x0020resistivity = 49,
	resqml20__ResqmlPropertyKind__electrochemical_x0020equivalent = 50,
	resqml20__ResqmlPropertyKind__electromagnetic_x0020moment = 51,
	resqml20__ResqmlPropertyKind__energy_x0020length_x0020per_x0020area = 52,
	resqml20__ResqmlPropertyKind__energy_x0020length_x0020per_x0020time_x0020area_x0020temperature = 53,
	resqml20__ResqmlPropertyKind__energy_x0020per_x0020area = 54,
	resqml20__ResqmlPropertyKind__energy_x0020per_x0020length = 55,
	resqml20__ResqmlPropertyKind__equivalent_x0020per_x0020mass = 56,
	resqml20__ResqmlPropertyKind__equivalent_x0020per_x0020volume = 57,
	resqml20__ResqmlPropertyKind__exposure_x0020_x0028radioactivity_x0029 = 58,
	resqml20__ResqmlPropertyKind__fluid_x0020volume = 59,
	resqml20__ResqmlPropertyKind__force = 60,
	resqml20__ResqmlPropertyKind__force_x0020area = 61,
	resqml20__ResqmlPropertyKind__force_x0020length_x0020per_x0020length = 62,
	resqml20__ResqmlPropertyKind__force_x0020per_x0020force = 63,
	resqml20__ResqmlPropertyKind__force_x0020per_x0020length = 64,
	resqml20__ResqmlPropertyKind__force_x0020per_x0020volume = 'A',
	resqml20__ResqmlPropertyKind__formation_x0020volume_x0020factor = 'B',
	resqml20__ResqmlPropertyKind__frequency = 'C',
	resqml20__ResqmlPropertyKind__frequency_x0020interval = 'D',
	resqml20__ResqmlPropertyKind__gamma_x0020ray_x0020API_x0020unit = 'E',
	resqml20__ResqmlPropertyKind__heat_x0020capacity = 'F',
	resqml20__ResqmlPropertyKind__heat_x0020flow_x0020rate = 'G',
	resqml20__ResqmlPropertyKind__heat_x0020transfer_x0020coefficient = 'H',
	resqml20__ResqmlPropertyKind__illuminance = 'I',
	resqml20__ResqmlPropertyKind__index = 'J',
	resqml20__ResqmlPropertyKind__irradiance = 'K',
	resqml20__ResqmlPropertyKind__isothermal_x0020compressibility = 'L',
	resqml20__ResqmlPropertyKind__kinematic_x0020viscosity = 'M',
	resqml20__ResqmlPropertyKind__Lambda_x0020Rho = 'N',
	resqml20__ResqmlPropertyKind__Lame_x0020constant = 'O',
	resqml20__ResqmlPropertyKind__length = 'P',
	resqml20__ResqmlPropertyKind__length_x0020per_x0020length = 'Q',
	resqml20__ResqmlPropertyKind__length_x0020per_x0020temperature = 'R',
	resqml20__ResqmlPropertyKind__length_x0020per_x0020volume = 'S',
	resqml20__ResqmlPropertyKind__level_x0020of_x0020power_x0020intensity = 'T',
	resqml20__ResqmlPropertyKind__light_x0020exposure = 'U',
	resqml20__ResqmlPropertyKind__linear_x0020thermal_x0020expansion = 'V',
	resqml20__ResqmlPropertyKind__luminance = 'W',
	resqml20__ResqmlPropertyKind__luminous_x0020efficacy = 'X',
	resqml20__ResqmlPropertyKind__luminous_x0020flux = 'Y',
	resqml20__ResqmlPropertyKind__luminous_x0020intensity = 'Z',
	resqml20__ResqmlPropertyKind__magnetic_x0020dipole_x0020moment = 91,
	resqml20__ResqmlPropertyKind__magnetic_x0020field_x0020strength = 92,
	resqml20__ResqmlPropertyKind__magnetic_x0020flux = 93,
	resqml20__ResqmlPropertyKind__magnetic_x0020induction = 94,
	resqml20__ResqmlPropertyKind__magnetic_x0020permeability = 95,
	resqml20__ResqmlPropertyKind__magnetic_x0020vector_x0020potential = 96,
	resqml20__ResqmlPropertyKind__mass = 'a',
	resqml20__ResqmlPropertyKind__mass_x0020attenuation_x0020coefficient = 'b',
	resqml20__ResqmlPropertyKind__mass_x0020concentration = 'c',
	resqml20__ResqmlPropertyKind__mass_x0020flow_x0020rate = 'd',
	resqml20__ResqmlPropertyKind__mass_x0020length = 'e',
	resqml20__ResqmlPropertyKind__mass_x0020per_x0020energy = 'f',
	resqml20__ResqmlPropertyKind__mass_x0020per_x0020length = 'g',
	resqml20__ResqmlPropertyKind__mass_x0020per_x0020time_x0020per_x0020area = 'h',
	resqml20__ResqmlPropertyKind__mass_x0020per_x0020time_x0020per_x0020length = 'i',
	resqml20__ResqmlPropertyKind__mass_x0020per_x0020volume_x0020per_x0020length = 'j',
	resqml20__ResqmlPropertyKind__mobility = 'k',
	resqml20__ResqmlPropertyKind__modulus_x0020of_x0020compression = 'l',
	resqml20__ResqmlPropertyKind__molar_x0020concentration = 'm',
	resqml20__ResqmlPropertyKind__molar_x0020heat_x0020capacity = 'n',
	resqml20__ResqmlPropertyKind__molar_x0020volume = 'o',
	resqml20__ResqmlPropertyKind__mole_x0020per_x0020area = 'p',
	resqml20__ResqmlPropertyKind__mole_x0020per_x0020time = 'q',
	resqml20__ResqmlPropertyKind__mole_x0020per_x0020time_x0020per_x0020area = 'r',
	resqml20__ResqmlPropertyKind__moment_x0020of_x0020force = 's',
	resqml20__ResqmlPropertyKind__moment_x0020of_x0020inertia = 't',
	resqml20__ResqmlPropertyKind__moment_x0020of_x0020section = 'u',
	resqml20__ResqmlPropertyKind__momentum = 'v',
	resqml20__ResqmlPropertyKind__Mu_x0020Rho = 'w',
	resqml20__ResqmlPropertyKind__net_x0020to_x0020gross_x0020ratio = 'x',
	resqml20__ResqmlPropertyKind__neutron_x0020API_x0020unit = 'y',
	resqml20__ResqmlPropertyKind__nonDarcy_x0020flow_x0020coefficient = 'z',
	resqml20__ResqmlPropertyKind__operations_x0020per_x0020time = 123,
	resqml20__ResqmlPropertyKind__parachor = 124,
	resqml20__ResqmlPropertyKind__per_x0020area = 125,
	resqml20__ResqmlPropertyKind__per_x0020electric_x0020potential = 126,
	resqml20__ResqmlPropertyKind__per_x0020force = 127,
	resqml20__ResqmlPropertyKind__per_x0020length = 128,
	resqml20__ResqmlPropertyKind__per_x0020mass = 129,
	resqml20__ResqmlPropertyKind__per_x0020volume = 130,
	resqml20__ResqmlPropertyKind__permeability_x0020length = 131,
	resqml20__ResqmlPropertyKind__permeability_x0020rock = 132,
	resqml20__ResqmlPropertyKind__permeability_x0020thickness = 133,
	resqml20__ResqmlPropertyKind__permeance = 134,
	resqml20__ResqmlPropertyKind__permittivity = 135,
	resqml20__ResqmlPropertyKind__pH = 136,
	resqml20__ResqmlPropertyKind__plane_x0020angle = 137,
	resqml20__ResqmlPropertyKind__Poisson_x0020ratio = 138,
	resqml20__ResqmlPropertyKind__pore_x0020volume = 139,
	resqml20__ResqmlPropertyKind__porosity = 140,
	resqml20__ResqmlPropertyKind__potential_x0020difference_x0020per_x0020power_x0020drop = 141,
	resqml20__ResqmlPropertyKind__power = 142,
	resqml20__ResqmlPropertyKind__power_x0020per_x0020volume = 143,
	resqml20__ResqmlPropertyKind__pressure = 144,
	resqml20__ResqmlPropertyKind__pressure_x0020per_x0020time = 145,
	resqml20__ResqmlPropertyKind__pressure_x0020squared = 146,
	resqml20__ResqmlPropertyKind__pressure_x0020squared_x0020per_x0020force_x0020time_x0020per_x0020area = 147,
	resqml20__ResqmlPropertyKind__pressure_x0020time_x0020per_x0020volume = 148,
	resqml20__ResqmlPropertyKind__productivity_x0020index = 149,
	resqml20__ResqmlPropertyKind__property_x0020multiplier = 150,
	resqml20__ResqmlPropertyKind__quantity = 151,
	resqml20__ResqmlPropertyKind__quantity_x0020of_x0020light = 152,
	resqml20__ResqmlPropertyKind__radiance = 153,
	resqml20__ResqmlPropertyKind__radiant_x0020intensity = 154,
	resqml20__ResqmlPropertyKind__relative_x0020permeability = 155,
	resqml20__ResqmlPropertyKind__relative_x0020power = 156,
	resqml20__ResqmlPropertyKind__relative_x0020time = 157,
	resqml20__ResqmlPropertyKind__reluctance = 158,
	resqml20__ResqmlPropertyKind__resistance = 159,
	resqml20__ResqmlPropertyKind__resistivity_x0020per_x0020length = 160,
	resqml20__ResqmlPropertyKind__RESQML_x0020root_x0020property = 161,
	resqml20__ResqmlPropertyKind__Rock_x0020Impedance = 162,
	resqml20__ResqmlPropertyKind__rock_x0020permeability = 163,
	resqml20__ResqmlPropertyKind__rock_x0020volume = 164,
	resqml20__ResqmlPropertyKind__saturation = 165,
	resqml20__ResqmlPropertyKind__second_x0020moment_x0020of_x0020area = 166,
	resqml20__ResqmlPropertyKind__shear_x0020modulus = 167,
	resqml20__ResqmlPropertyKind__solid_x0020angle = 168,
	resqml20__ResqmlPropertyKind__solution_x0020gas_oil_x0020ratio = 169,
	resqml20__ResqmlPropertyKind__specific_x0020activity_x0020_x0028of_x0020radioactivity_x0029 = 170,
	resqml20__ResqmlPropertyKind__specific_x0020energy = 171,
	resqml20__ResqmlPropertyKind__specific_x0020heat_x0020capacity = 172,
	resqml20__ResqmlPropertyKind__specific_x0020productivity_x0020index = 173,
	resqml20__ResqmlPropertyKind__specific_x0020volume = 174,
	resqml20__ResqmlPropertyKind__surface_x0020density = 175,
	resqml20__ResqmlPropertyKind__temperature_x0020per_x0020length = 176,
	resqml20__ResqmlPropertyKind__temperature_x0020per_x0020time = 177,
	resqml20__ResqmlPropertyKind__thermal_x0020conductance = 178,
	resqml20__ResqmlPropertyKind__thermal_x0020conductivity = 179,
	resqml20__ResqmlPropertyKind__thermal_x0020diffusivity = 180,
	resqml20__ResqmlPropertyKind__thermal_x0020insulance = 181,
	resqml20__ResqmlPropertyKind__thermal_x0020resistance = 182,
	resqml20__ResqmlPropertyKind__thermodynamic_x0020temperature = 183,
	resqml20__ResqmlPropertyKind__thickness = 184,
	resqml20__ResqmlPropertyKind__time = 185,
	resqml20__ResqmlPropertyKind__time_x0020per_x0020length = 186,
	resqml20__ResqmlPropertyKind__time_x0020per_x0020volume = 187,
	resqml20__ResqmlPropertyKind__transmissibility = 188,
	resqml20__ResqmlPropertyKind__unit_x0020productivity_x0020index = 189,
	resqml20__ResqmlPropertyKind__unitless = 190,
	resqml20__ResqmlPropertyKind__vapor_x0020oil_gas_x0020ratio = 191,
	resqml20__ResqmlPropertyKind__velocity = 192,
	resqml20__ResqmlPropertyKind__volume = 193,
	resqml20__ResqmlPropertyKind__volume_x0020flow_x0020rate = 194,
	resqml20__ResqmlPropertyKind__volume_x0020length_x0020per_x0020time = 195,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020area = 196,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020length = 197,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020time_x0020per_x0020area = 198,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020time_x0020per_x0020length = 199,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020time_x0020per_x0020time = 200,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020time_x0020per_x0020volume = 201,
	resqml20__ResqmlPropertyKind__volume_x0020per_x0020volume = 202,
	resqml20__ResqmlPropertyKind__volumetric_x0020heat_x0020transfer_x0020coefficient = 203,
	resqml20__ResqmlPropertyKind__volumetric_x0020thermal_x0020expansion = 204,
	resqml20__ResqmlPropertyKind__work = 205,
	resqml20__ResqmlPropertyKind__Young_x0020modulus = 206
};
#endif

/* resqml2_0_1ForGsoap.h:5018 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind (-618)

/* resqml20:OrganizationKind */
enum resqml20__OrganizationKind {
	resqml20__OrganizationKind__earth_x0020model = 0,
	resqml20__OrganizationKind__fluid = 1,
	resqml20__OrganizationKind__stratigraphic = 2,
	resqml20__OrganizationKind__structural = 3
};
#endif

/* resqml2_0_1ForGsoap.h:5065 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d (-620)

/* eml20:AxisOrder2d */
enum eml20__AxisOrder2d {
	eml20__AxisOrder2d__easting_x0020northing = 0,
	eml20__AxisOrder2d__northing_x0020easting = 1,
	eml20__AxisOrder2d__westing_x0020southing = 2,
	eml20__AxisOrder2d__southing_x0020westing = 3,
	eml20__AxisOrder2d__northing_x0020westing = 4,
	eml20__AxisOrder2d__westing_x0020northing = 5
};
#endif

/* resqml2_0_1ForGsoap.h:5102 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection (-621)

/* eml20:VerticalDirection */
enum eml20__VerticalDirection {
	eml20__VerticalDirection__up = 0,
	eml20__VerticalDirection__down = 1
};
#endif

/* resqml2_0_1ForGsoap.h:5119 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom (-622)

/* eml20:LogarithmicPowerRatioUom */
enum eml20__LogarithmicPowerRatioUom {
	eml20__LogarithmicPowerRatioUom__B = 'B',
	eml20__LogarithmicPowerRatioUom__dB = 'C'
};
#endif

/* resqml2_0_1ForGsoap.h:5136 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom (-623)

/* eml20:AmountOfSubstancePerTimeUom */
enum eml20__AmountOfSubstancePerTimeUom {
	eml20__AmountOfSubstancePerTimeUom__kmol_x002fh = 0,
	eml20__AmountOfSubstancePerTimeUom__kmol_x002fs = 1,
	eml20__AmountOfSubstancePerTimeUom__lbmol_x002fh = 2,
	eml20__AmountOfSubstancePerTimeUom__lbmol_x002fs = 3,
	eml20__AmountOfSubstancePerTimeUom__mol_x002fs = 4
};
#endif

/* resqml2_0_1ForGsoap.h:5168 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom (-624)

/* eml20:ElectricConductivityUom */
enum eml20__ElectricConductivityUom {
	eml20__ElectricConductivityUom__kS_x002fm = 0,
	eml20__ElectricConductivityUom__mS_x002fcm = 1,
	eml20__ElectricConductivityUom__mS_x002fm = 2,
	eml20__ElectricConductivityUom__S_x002fm = 3
};
#endif

/* resqml2_0_1ForGsoap.h:5195 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom (-625)

/* eml20:VolumePerRotationUom */
enum eml20__VolumePerRotationUom {
	eml20__VolumePerRotationUom__ft3_x002frad = 0,
	eml20__VolumePerRotationUom__m3_x002frad = 1,
	eml20__VolumePerRotationUom__m3_x002frev = 2
};
#endif

/* resqml2_0_1ForGsoap.h:5217 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom (-626)

/* eml20:VolumePerTimePerAreaUom */
enum eml20__VolumePerTimePerAreaUom {
	eml20__VolumePerTimePerAreaUom__ft3_x002f_x0028min_x002eft2_x0029 = 0,
	eml20__VolumePerTimePerAreaUom__ft3_x002f_x0028s_x002eft2_x0029 = 1,
	eml20__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028h_x002eft2_x0029 = 2,
	eml20__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028h_x002ein2_x0029 = 3,
	eml20__VolumePerTimePerAreaUom__gal_x005bUK_x005d_x002f_x0028min_x002eft2_x0029 = 4,
	eml20__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028h_x002eft2_x0029 = 5,
	eml20__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028h_x002ein2_x0029 = 6,
	eml20__VolumePerTimePerAreaUom__gal_x005bUS_x005d_x002f_x0028min_x002eft2_x0029 = 7,
	eml20__VolumePerTimePerAreaUom__m3_x002f_x0028s_x002em2_x0029 = 8
};
#endif

/* resqml2_0_1ForGsoap.h:5269 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom (-627)

/* eml20:MobilityUom */
enum eml20__MobilityUom {
	eml20__MobilityUom__D_x002f_x0028Pa_x002es_x0029 = 0,
	eml20__MobilityUom__D_x002fcP = 1,
	eml20__MobilityUom__mD_x002eft2_x002f_x0028lbf_x002es_x0029 = 2,
	eml20__MobilityUom__mD_x002ein2_x002f_x0028lbf_x002es_x0029 = 3,
	eml20__MobilityUom__mD_x002f_x0028Pa_x002es_x0029 = 4,
	eml20__MobilityUom__mD_x002fcP = 5,
	eml20__MobilityUom__TD_x005bAPI_x005d_x002f_x0028Pa_x002es_x0029 = 6
};
#endif

/* resqml2_0_1ForGsoap.h:5311 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom (-628)

/* eml20:HeatTransferCoefficientUom */
enum eml20__HeatTransferCoefficientUom {
	eml20__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edeltaF_x0029 = 0,
	eml20__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x002edeltaR_x0029 = 1,
	eml20__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002em2_x002edeltaC_x0029 = 2,
	eml20__HeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x002edeltaF_x0029 = 3,
	eml20__HeatTransferCoefficientUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x002edeltaC_x0029 = 4,
	eml20__HeatTransferCoefficientUom__cal_x005bth_x005d_x002f_x0028s_x002ecm2_x002edeltaC_x0029 = 5,
	eml20__HeatTransferCoefficientUom__J_x002f_x0028s_x002em2_x002edeltaC_x0029 = 6,
	eml20__HeatTransferCoefficientUom__kcal_x005bth_x005d_x002f_x0028h_x002em2_x002edeltaC_x0029 = 7,
	eml20__HeatTransferCoefficientUom__kJ_x002f_x0028h_x002em2_x002edeltaK_x0029 = 8,
	eml20__HeatTransferCoefficientUom__kW_x002f_x0028m2_x002edeltaK_x0029 = 9,
	eml20__HeatTransferCoefficientUom__W_x002f_x0028m2_x002edeltaK_x0029 = 10
};
#endif

/* resqml2_0_1ForGsoap.h:5373 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom (-629)

/* eml20:MassPerEnergyUom */
enum eml20__MassPerEnergyUom {
	eml20__MassPerEnergyUom__kg_x002f_x0028kW_x002eh_x0029 = 0,
	eml20__MassPerEnergyUom__kg_x002fJ = 1,
	eml20__MassPerEnergyUom__kg_x002fMJ = 2,
	eml20__MassPerEnergyUom__lbm_x002f_x0028hp_x002eh_x0029 = 3,
	eml20__MassPerEnergyUom__mg_x002fJ = 4
};
#endif

/* resqml2_0_1ForGsoap.h:5405 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom (-630)

/* eml20:MomentOfInertiaUom */
enum eml20__MomentOfInertiaUom {
	eml20__MomentOfInertiaUom__kg_x002em2 = 0,
	eml20__MomentOfInertiaUom__lbm_x002eft2 = 1
};
#endif

/* resqml2_0_1ForGsoap.h:5422 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom (-631)

/* eml20:CapacitanceUom */
enum eml20__CapacitanceUom {
	eml20__CapacitanceUom__F = 'F',
	eml20__CapacitanceUom__cF = 'G',
	eml20__CapacitanceUom__dF = 'H',
	eml20__CapacitanceUom__EF = 'I',
	eml20__CapacitanceUom__fF = 'J',
	eml20__CapacitanceUom__GF = 'K',
	eml20__CapacitanceUom__kF = 'L',
	eml20__CapacitanceUom__mF = 'M',
	eml20__CapacitanceUom__MF = 'N',
	eml20__CapacitanceUom__nF = 'O',
	eml20__CapacitanceUom__pF = 'P',
	eml20__CapacitanceUom__TF = 'Q',
	eml20__CapacitanceUom__uF = 'R'
};
#endif

/* resqml2_0_1ForGsoap.h:5494 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom (-632)

/* eml20:MagneticFluxDensityPerLengthUom */
enum eml20__MagneticFluxDensityPerLengthUom {
	eml20__MagneticFluxDensityPerLengthUom__gauss_x002fcm = 0,
	eml20__MagneticFluxDensityPerLengthUom__mT_x002fdm = 1,
	eml20__MagneticFluxDensityPerLengthUom__T_x002fm = 2
};
#endif

/* resqml2_0_1ForGsoap.h:5516 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom (-633)

/* eml20:LengthPerVolumeUom */
enum eml20__LengthPerVolumeUom {
	eml20__LengthPerVolumeUom__ft_x002fbbl = 0,
	eml20__LengthPerVolumeUom__ft_x002fft3 = 1,
	eml20__LengthPerVolumeUom__ft_x002fgal_x005bUS_x005d = 2,
	eml20__LengthPerVolumeUom__km_x002fdm3 = 3,
	eml20__LengthPerVolumeUom__km_x002fL = 4,
	eml20__LengthPerVolumeUom__m_x002fm3 = 5,
	eml20__LengthPerVolumeUom__mi_x002fgal_x005bUK_x005d = 6,
	eml20__LengthPerVolumeUom__mi_x002fgal_x005bUS_x005d = 7
};
#endif

/* resqml2_0_1ForGsoap.h:5563 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom (-634)

/* eml20:MassPerTimeUom */
enum eml20__MassPerTimeUom {
	eml20__MassPerTimeUom__1E6_x0020lbm_x002fa = 0,
	eml20__MassPerTimeUom__g_x002fs = 1,
	eml20__MassPerTimeUom__kg_x002fd = 2,
	eml20__MassPerTimeUom__kg_x002fh = 3,
	eml20__MassPerTimeUom__kg_x002fmin = 4,
	eml20__MassPerTimeUom__kg_x002fs = 5,
	eml20__MassPerTimeUom__lbm_x002fd = 6,
	eml20__MassPerTimeUom__lbm_x002fh = 7,
	eml20__MassPerTimeUom__lbm_x002fmin = 8,
	eml20__MassPerTimeUom__lbm_x002fs = 9,
	eml20__MassPerTimeUom__Mg_x002fa = 10,
	eml20__MassPerTimeUom__Mg_x002fd = 11,
	eml20__MassPerTimeUom__Mg_x002fh = 12,
	eml20__MassPerTimeUom__Mg_x002fmin = 13,
	eml20__MassPerTimeUom__t_x002fa = 14,
	eml20__MassPerTimeUom__t_x002fd = 15,
	eml20__MassPerTimeUom__t_x002fh = 16,
	eml20__MassPerTimeUom__t_x002fmin = 17,
	eml20__MassPerTimeUom__ton_x005bUK_x005d_x002fa = 18,
	eml20__MassPerTimeUom__ton_x005bUK_x005d_x002fd = 19,
	eml20__MassPerTimeUom__ton_x005bUK_x005d_x002fh = 20,
	eml20__MassPerTimeUom__ton_x005bUK_x005d_x002fmin = 21,
	eml20__MassPerTimeUom__ton_x005bUS_x005d_x002fa = 22,
	eml20__MassPerTimeUom__ton_x005bUS_x005d_x002fd = 23,
	eml20__MassPerTimeUom__ton_x005bUS_x005d_x002fh = 24,
	eml20__MassPerTimeUom__ton_x005bUS_x005d_x002fmin = 25
};
#endif

/* resqml2_0_1ForGsoap.h:5700 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom (-635)

/* eml20:MolecularWeightUom */
enum eml20__MolecularWeightUom {
	eml20__MolecularWeightUom__g_x002fmol = 0,
	eml20__MolecularWeightUom__kg_x002fmol = 1,
	eml20__MolecularWeightUom__lbm_x002flbmol = 2
};
#endif

/* resqml2_0_1ForGsoap.h:5722 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom (-636)

/* eml20:MagneticFluxUom */
enum eml20__MagneticFluxUom {
	eml20__MagneticFluxUom__cWb = 0,
	eml20__MagneticFluxUom__dWb = 1,
	eml20__MagneticFluxUom__EWb = 2,
	eml20__MagneticFluxUom__fWb = 3,
	eml20__MagneticFluxUom__GWb = 4,
	eml20__MagneticFluxUom__kWb = 5,
	eml20__MagneticFluxUom__MWb = 6,
	eml20__MagneticFluxUom__mWb = 7,
	eml20__MagneticFluxUom__nWb = 8,
	eml20__MagneticFluxUom__pWb = 9,
	eml20__MagneticFluxUom__TWb = 10,
	eml20__MagneticFluxUom__uWb = 11,
	eml20__MagneticFluxUom__Wb = 12
};
#endif

/* resqml2_0_1ForGsoap.h:5794 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom (-637)

/* eml20:VolumeUom */
enum eml20__VolumeUom {
	eml20__VolumeUom__L = 'L',
	eml20__VolumeUom__1000_x0020bbl = 'M',
	eml20__VolumeUom__1000_x0020ft3 = 'N',
	eml20__VolumeUom__1000_x0020gal_x005bUK_x005d = 'O',
	eml20__VolumeUom__1000_x0020gal_x005bUS_x005d = 'P',
	eml20__VolumeUom__1000_x0020m3 = 'Q',
	eml20__VolumeUom__1E_6_x0020gal_x005bUS_x005d = 'R',
	eml20__VolumeUom__1E12_x0020ft3 = 'S',
	eml20__VolumeUom__1E6_x0020bbl = 'T',
	eml20__VolumeUom__1E6_x0020ft3 = 'U',
	eml20__VolumeUom__1E6_x0020m3 = 'V',
	eml20__VolumeUom__1E9_x0020bbl = 'W',
	eml20__VolumeUom__1E9_x0020ft3 = 'X',
	eml20__VolumeUom__acre_x002eft = 'Y',
	eml20__VolumeUom__bbl = 'Z',
	eml20__VolumeUom__cm3 = 91,
	eml20__VolumeUom__dm3 = 92,
	eml20__VolumeUom__floz_x005bUK_x005d = 93,
	eml20__VolumeUom__floz_x005bUS_x005d = 94,
	eml20__VolumeUom__ft3 = 95,
	eml20__VolumeUom__gal_x005bUK_x005d = 96,
	eml20__VolumeUom__gal_x005bUS_x005d = 'a',
	eml20__VolumeUom__ha_x002em = 'b',
	eml20__VolumeUom__hL = 'c',
	eml20__VolumeUom__in3 = 'd',
	eml20__VolumeUom__km3 = 'e',
	eml20__VolumeUom__m3 = 'f',
	eml20__VolumeUom__mi3 = 'g',
	eml20__VolumeUom__mL = 'h',
	eml20__VolumeUom__mm3 = 'i',
	eml20__VolumeUom__pt_x005bUK_x005d = 'j',
	eml20__VolumeUom__pt_x005bUS_x005d = 'k',
	eml20__VolumeUom__qt_x005bUK_x005d = 'l',
	eml20__VolumeUom__qt_x005bUS_x005d = 'm',
	eml20__VolumeUom__um2_x002em = 'n',
	eml20__VolumeUom__yd3 = 'o'
};
#endif

/* resqml2_0_1ForGsoap.h:5981 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom (-638)

/* eml20:ThermalConductanceUom */
enum eml20__ThermalConductanceUom {
	eml20__ThermalConductanceUom__W_x002fdeltaK = 0
};
#endif

/* resqml2_0_1ForGsoap.h:5993 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom (-639)

/* eml20:QuantityOfLightUom */
enum eml20__QuantityOfLightUom {
	eml20__QuantityOfLightUom__lm_x002es = 0
};
#endif

/* resqml2_0_1ForGsoap.h:6005 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom (-640)

/* eml20:LengthPerTimeUom */
enum eml20__LengthPerTimeUom {
	eml20__LengthPerTimeUom__1000_x0020ft_x002fh = 0,
	eml20__LengthPerTimeUom__1000_x0020ft_x002fs = 1,
	eml20__LengthPerTimeUom__cm_x002fa = 2,
	eml20__LengthPerTimeUom__cm_x002fs = 3,
	eml20__LengthPerTimeUom__dm_x002fs = 4,
	eml20__LengthPerTimeUom__ft_x002fd = 5,
	eml20__LengthPerTimeUom__ft_x002fh = 6,
	eml20__LengthPerTimeUom__ft_x002fmin = 7,
	eml20__LengthPerTimeUom__ft_x002fms = 8,
	eml20__LengthPerTimeUom__ft_x002fs = 9,
	eml20__LengthPerTimeUom__ft_x002fus = 10,
	eml20__LengthPerTimeUom__in_x002fa = 11,
	eml20__LengthPerTimeUom__in_x002fmin = 12,
	eml20__LengthPerTimeUom__in_x002fs = 13,
	eml20__LengthPerTimeUom__km_x002fh = 14,
	eml20__LengthPerTimeUom__km_x002fs = 15,
	eml20__LengthPerTimeUom__knot = 16,
	eml20__LengthPerTimeUom__m_x002fd = 17,
	eml20__LengthPerTimeUom__m_x002fh = 18,
	eml20__LengthPerTimeUom__m_x002fmin = 19,
	eml20__LengthPerTimeUom__m_x002fms = 20,
	eml20__LengthPerTimeUom__m_x002fs = 21,
	eml20__LengthPerTimeUom__mi_x002fh = 22,
	eml20__LengthPerTimeUom__mil_x002fa = 23,
	eml20__LengthPerTimeUom__mm_x002fa = 24,
	eml20__LengthPerTimeUom__mm_x002fs = 25,
	eml20__LengthPerTimeUom__nm_x002fs = 26,
	eml20__LengthPerTimeUom__um_x002fs = 27
};
#endif

/* resqml2_0_1ForGsoap.h:6152 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom (-641)

/* eml20:ForceLengthPerLengthUom */
enum eml20__ForceLengthPerLengthUom {
	eml20__ForceLengthPerLengthUom__kgf_x002em_x002fm = 0,
	eml20__ForceLengthPerLengthUom__lbf_x002eft_x002fin = 1,
	eml20__ForceLengthPerLengthUom__lbf_x002ein_x002fin = 2,
	eml20__ForceLengthPerLengthUom__N_x002em_x002fm = 3,
	eml20__ForceLengthPerLengthUom__tonf_x005bUS_x005d_x002emi_x002fft = 4
};
#endif

/* resqml2_0_1ForGsoap.h:6184 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom (-642)

/* eml20:SolidAngleUom */
enum eml20__SolidAngleUom {
	eml20__SolidAngleUom__sr = 0
};
#endif

/* resqml2_0_1ForGsoap.h:6196 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom (-643)

/* eml20:VolumePerTimePerVolumeUom */
enum eml20__VolumePerTimePerVolumeUom {
	eml20__VolumePerTimePerVolumeUom__bbl_x002f_x0028d_x002eacre_x002eft_x0029 = 0,
	eml20__VolumePerTimePerVolumeUom__m3_x002f_x0028s_x002em3_x0029 = 1
};
#endif

/* resqml2_0_1ForGsoap.h:6213 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom (-644)

/* eml20:MomentOfForceUom */
enum eml20__MomentOfForceUom {
	eml20__MomentOfForceUom__J = 'J',
	eml20__MomentOfForceUom__1000_x0020lbf_x002eft = 'K',
	eml20__MomentOfForceUom__daN_x002em = 'L',
	eml20__MomentOfForceUom__dN_x002em = 'M',
	eml20__MomentOfForceUom__kgf_x002em = 'N',
	eml20__MomentOfForceUom__kN_x002em = 'O',
	eml20__MomentOfForceUom__lbf_x002eft = 'P',
	eml20__MomentOfForceUom__lbf_x002ein = 'Q',
	eml20__MomentOfForceUom__lbm_x002eft2_x002fs2 = 'R',
	eml20__MomentOfForceUom__N_x002em = 'S',
	eml20__MomentOfForceUom__pdl_x002eft = 'T',
	eml20__MomentOfForceUom__tonf_x005bUS_x005d_x002eft = 'U',
	eml20__MomentOfForceUom__tonf_x005bUS_x005d_x002emi = 'V'
};
#endif

/* resqml2_0_1ForGsoap.h:6285 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom (-645)

/* eml20:MassPerVolumeUom */
enum eml20__MassPerVolumeUom {
	eml20__MassPerVolumeUom__0_x002e001_x0020lbm_x002fbbl = 0,
	eml20__MassPerVolumeUom__0_x002e001_x0020lbm_x002fgal_x005bUK_x005d = 1,
	eml20__MassPerVolumeUom__0_x002e001_x0020lbm_x002fgal_x005bUS_x005d = 2,
	eml20__MassPerVolumeUom__0_x002e01_x0020grain_x002fft3 = 3,
	eml20__MassPerVolumeUom__0_x002e1_x0020lbm_x002fbbl = 4,
	eml20__MassPerVolumeUom__10_x0020Mg_x002fm3 = 5,
	eml20__MassPerVolumeUom__g_x002fcm3 = 6,
	eml20__MassPerVolumeUom__g_x002fdm3 = 7,
	eml20__MassPerVolumeUom__g_x002fgal_x005bUK_x005d = 8,
	eml20__MassPerVolumeUom__g_x002fgal_x005bUS_x005d = 9,
	eml20__MassPerVolumeUom__g_x002fL = 10,
	eml20__MassPerVolumeUom__g_x002fm3 = 11,
	eml20__MassPerVolumeUom__grain_x002fft3 = 12,
	eml20__MassPerVolumeUom__grain_x002fgal_x005bUS_x005d = 13,
	eml20__MassPerVolumeUom__kg_x002fdm3 = 14,
	eml20__MassPerVolumeUom__kg_x002fL = 15,
	eml20__MassPerVolumeUom__kg_x002fm3 = 16,
	eml20__MassPerVolumeUom__lbm_x002fbbl = 17,
	eml20__MassPerVolumeUom__lbm_x002fft3 = 18,
	eml20__MassPerVolumeUom__lbm_x002fgal_x005bUK_x005d = 19,
	eml20__MassPerVolumeUom__lbm_x002fgal_x005bUS_x005d = 20,
	eml20__MassPerVolumeUom__lbm_x002fin3 = 21,
	eml20__MassPerVolumeUom__mg_x002fdm3 = 22,
	eml20__MassPerVolumeUom__mg_x002fgal_x005bUS_x005d = 23,
	eml20__MassPerVolumeUom__mg_x002fL = 24,
	eml20__MassPerVolumeUom__mg_x002fm3 = 25,
	eml20__MassPerVolumeUom__Mg_x002fm3 = 26,
	eml20__MassPerVolumeUom__t_x002fm3 = 27,
	eml20__MassPerVolumeUom__ug_x002fcm3 = 28
};
#endif

/* resqml2_0_1ForGsoap.h:6437 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom (-646)

/* eml20:MolarVolumeUom */
enum eml20__MolarVolumeUom {
	eml20__MolarVolumeUom__dm3_x002fkmol = 0,
	eml20__MolarVolumeUom__ft3_x002flbmol = 1,
	eml20__MolarVolumeUom__L_x002fkmol = 2,
	eml20__MolarVolumeUom__L_x002fmol = 3,
	eml20__MolarVolumeUom__m3_x002fkmol = 4,
	eml20__MolarVolumeUom__m3_x002fmol = 5
};
#endif

/* resqml2_0_1ForGsoap.h:6474 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom (-647)

/* eml20:AmountOfSubstanceUom */
enum eml20__AmountOfSubstanceUom {
	eml20__AmountOfSubstanceUom__kmol = 0,
	eml20__AmountOfSubstanceUom__lbmol = 1,
	eml20__AmountOfSubstanceUom__mmol = 2,
	eml20__AmountOfSubstanceUom__mol = 3,
	eml20__AmountOfSubstanceUom__umol = 4
};
#endif

/* resqml2_0_1ForGsoap.h:6506 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom (-648)

/* eml20:DipoleMomentUom */
enum eml20__DipoleMomentUom {
	eml20__DipoleMomentUom__C_x002em = 0
};
#endif

/* resqml2_0_1ForGsoap.h:6518 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom (-649)

/* eml20:APINeutronUom */
enum eml20__APINeutronUom {
	eml20__APINeutronUom__nAPI = 0
};
#endif

/* resqml2_0_1ForGsoap.h:6530 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom (-650)

/* eml20:ReciprocalTimeUom */
enum eml20__ReciprocalTimeUom {
	eml20__ReciprocalTimeUom__1_x002fa = 0,
	eml20__ReciprocalTimeUom__1_x002fd = 1,
	eml20__ReciprocalTimeUom__1_x002fh = 2,
	eml20__ReciprocalTimeUom__1_x002fmin = 3,
	eml20__ReciprocalTimeUom__1_x002fms = 4,
	eml20__ReciprocalTimeUom__1_x002fs = 5,
	eml20__ReciprocalTimeUom__1_x002fus = 6,
	eml20__ReciprocalTimeUom__1_x002fwk = 7
};
#endif

/* resqml2_0_1ForGsoap.h:6577 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom (-651)

/* eml20:TemperatureIntervalPerPressureUom */
enum eml20__TemperatureIntervalPerPressureUom {
	eml20__TemperatureIntervalPerPressureUom__deltaC_x002fkPa = 0,
	eml20__TemperatureIntervalPerPressureUom__deltaF_x002fpsi = 1,
	eml20__TemperatureIntervalPerPressureUom__deltaK_x002fPa = 2
};
#endif

/* resqml2_0_1ForGsoap.h:6599 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom (-652)

/* eml20:LengthPerLengthUom */
enum eml20__LengthPerLengthUom {
	eml20__LengthPerLengthUom___x0025 = 0,
	eml20__LengthPerLengthUom__0_x002e01_x0020ft_x002fft = 1,
	eml20__LengthPerLengthUom__1_x002f30_x0020m_x002fm = 2,
	eml20__LengthPerLengthUom__Euc = 3,
	eml20__LengthPerLengthUom__ft_x002fft = 4,
	eml20__LengthPerLengthUom__ft_x002fin = 5,
	eml20__LengthPerLengthUom__ft_x002fm = 6,
	eml20__LengthPerLengthUom__ft_x002fmi = 7,
	eml20__LengthPerLengthUom__km_x002fcm = 8,
	eml20__LengthPerLengthUom__m_x002fcm = 9,
	eml20__LengthPerLengthUom__m_x002fkm = 10,
	eml20__LengthPerLengthUom__m_x002fm = 11,
	eml20__LengthPerLengthUom__mi_x002fin = 12
};
#endif

/* resqml2_0_1ForGsoap.h:6671 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom (-653)

/* eml20:AreaUom */
enum eml20__AreaUom {
	eml20__AreaUom__b = 'b',
	eml20__AreaUom__acre = 'c',
	eml20__AreaUom__cm2 = 'd',
	eml20__AreaUom__ft2 = 'e',
	eml20__AreaUom__ha = 'f',
	eml20__AreaUom__in2 = 'g',
	eml20__AreaUom__km2 = 'h',
	eml20__AreaUom__m2 = 'i',
	eml20__AreaUom__mi_x005bUS_x005d2 = 'j',
	eml20__AreaUom__mi2 = 'k',
	eml20__AreaUom__mm2 = 'l',
	eml20__AreaUom__section = 'm',
	eml20__AreaUom__um2 = 'n',
	eml20__AreaUom__yd2 = 'o'
};
#endif

/* resqml2_0_1ForGsoap.h:6748 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom (-654)

/* eml20:APIGammaRayUom */
enum eml20__APIGammaRayUom {
	eml20__APIGammaRayUom__gAPI = 0
};
#endif

/* resqml2_0_1ForGsoap.h:6760 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom (-655)

/* eml20:VolumetricThermalExpansionUom */
enum eml20__VolumetricThermalExpansionUom {
	eml20__VolumetricThermalExpansionUom__1_x002fdeltaC = 0,
	eml20__VolumetricThermalExpansionUom__1_x002fdeltaF = 1,
	eml20__VolumetricThermalExpansionUom__1_x002fdeltaK = 2,
	eml20__VolumetricThermalExpansionUom__1_x002fdeltaR = 3,
	eml20__VolumetricThermalExpansionUom__1E_6_x0020m3_x002f_x0028m3_x002edeltaC_x0029 = 4,
	eml20__VolumetricThermalExpansionUom__1E_6_x0020m3_x002f_x0028m3_x002edeltaF_x0029 = 5,
	eml20__VolumetricThermalExpansionUom__m3_x002f_x0028m3_x002edeltaK_x0029 = 6,
	eml20__VolumetricThermalExpansionUom__ppm_x005bvol_x005d_x002fdeltaC = 7,
	eml20__VolumetricThermalExpansionUom__ppm_x005bvol_x005d_x002fdeltaF = 8
};
#endif

/* resqml2_0_1ForGsoap.h:6812 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom (-656)

/* eml20:ElectricCurrentDensityUom */
enum eml20__ElectricCurrentDensityUom {
	eml20__ElectricCurrentDensityUom__A_x002fcm2 = 0,
	eml20__ElectricCurrentDensityUom__A_x002fft2 = 1,
	eml20__ElectricCurrentDensityUom__A_x002fm2 = 2,
	eml20__ElectricCurrentDensityUom__A_x002fmm2 = 3,
	eml20__ElectricCurrentDensityUom__mA_x002fcm2 = 4,
	eml20__ElectricCurrentDensityUom__mA_x002fft2 = 5,
	eml20__ElectricCurrentDensityUom__uA_x002fcm2 = 6,
	eml20__ElectricCurrentDensityUom__uA_x002fin2 = 7
};
#endif

/* resqml2_0_1ForGsoap.h:6859 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom (-657)

/* eml20:ForceUom */
enum eml20__ForceUom {
	eml20__ForceUom__N = 'N',
	eml20__ForceUom__10_x0020kN = 'O',
	eml20__ForceUom__cN = 'P',
	eml20__ForceUom__daN = 'Q',
	eml20__ForceUom__dN = 'R',
	eml20__ForceUom__dyne = 'S',
	eml20__ForceUom__EN = 'T',
	eml20__ForceUom__fN = 'U',
	eml20__ForceUom__gf = 'V',
	eml20__ForceUom__GN = 'W',
	eml20__ForceUom__hN = 'X',
	eml20__ForceUom__kdyne = 'Y',
	eml20__ForceUom__kgf = 'Z',
	eml20__ForceUom__klbf = 91,
	eml20__ForceUom__kN = 92,
	eml20__ForceUom__lbf = 93,
	eml20__ForceUom__Mgf = 94,
	eml20__ForceUom__mN = 95,
	eml20__ForceUom__MN = 96,
	eml20__ForceUom__nN = 'a',
	eml20__ForceUom__ozf = 'b',
	eml20__ForceUom__pdl = 'c',
	eml20__ForceUom__pN = 'd',
	eml20__ForceUom__TN = 'e',
	eml20__ForceUom__tonf_x005bUK_x005d = 'f',
	eml20__ForceUom__tonf_x005bUS_x005d = 'g',
	eml20__ForceUom__uN = 'h'
};
#endif

/* resqml2_0_1ForGsoap.h:7001 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom (-658)

/* eml20:VolumePerAreaUom */
enum eml20__VolumePerAreaUom {
	eml20__VolumePerAreaUom__1E6_x0020bbl_x002facre = 0,
	eml20__VolumePerAreaUom__bbl_x002facre = 1,
	eml20__VolumePerAreaUom__ft3_x002fft2 = 2,
	eml20__VolumePerAreaUom__m3_x002fm2 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:7028 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom (-659)

/* eml20:ReciprocalElectricPotentialDifferenceUom */
enum eml20__ReciprocalElectricPotentialDifferenceUom {
	eml20__ReciprocalElectricPotentialDifferenceUom__1_x002fuV = 0,
	eml20__ReciprocalElectricPotentialDifferenceUom__1_x002fV = 1
};
#endif

/* resqml2_0_1ForGsoap.h:7045 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom (-660)

/* eml20:TimePerLengthUom */
enum eml20__TimePerLengthUom {
	eml20__TimePerLengthUom__0_x002e001_x0020h_x002fft = 0,
	eml20__TimePerLengthUom__h_x002fkm = 1,
	eml20__TimePerLengthUom__min_x002fft = 2,
	eml20__TimePerLengthUom__min_x002fm = 3,
	eml20__TimePerLengthUom__ms_x002fcm = 4,
	eml20__TimePerLengthUom__ms_x002fft = 5,
	eml20__TimePerLengthUom__ms_x002fin = 6,
	eml20__TimePerLengthUom__ms_x002fm = 7,
	eml20__TimePerLengthUom__ns_x002fft = 8,
	eml20__TimePerLengthUom__ns_x002fm = 9,
	eml20__TimePerLengthUom__s_x002fcm = 10,
	eml20__TimePerLengthUom__s_x002fft = 11,
	eml20__TimePerLengthUom__s_x002fin = 12,
	eml20__TimePerLengthUom__s_x002fm = 13,
	eml20__TimePerLengthUom__us_x002fft = 14,
	eml20__TimePerLengthUom__us_x002fin = 15,
	eml20__TimePerLengthUom__us_x002fm = 16
};
#endif

/* resqml2_0_1ForGsoap.h:7137 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom (-661)

/* eml20:VolumePerPressureUom */
enum eml20__VolumePerPressureUom {
	eml20__VolumePerPressureUom__bbl_x002fpsi = 0,
	eml20__VolumePerPressureUom__m3_x002fkPa = 1,
	eml20__VolumePerPressureUom__m3_x002fPa = 2
};
#endif

/* resqml2_0_1ForGsoap.h:7159 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom (-662)

/* eml20:ElectricChargePerAreaUom */
enum eml20__ElectricChargePerAreaUom {
	eml20__ElectricChargePerAreaUom__C_x002fcm2 = 0,
	eml20__ElectricChargePerAreaUom__C_x002fm2 = 1,
	eml20__ElectricChargePerAreaUom__C_x002fmm2 = 2,
	eml20__ElectricChargePerAreaUom__mC_x002fm2 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:7186 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom (-663)

/* eml20:MassPerTimePerLengthUom */
enum eml20__MassPerTimePerLengthUom {
	eml20__MassPerTimePerLengthUom__kg_x002f_x0028m_x002es_x0029 = 0,
	eml20__MassPerTimePerLengthUom__lbm_x002f_x0028ft_x002eh_x0029 = 1,
	eml20__MassPerTimePerLengthUom__lbm_x002f_x0028ft_x002es_x0029 = 2,
	eml20__MassPerTimePerLengthUom__Pa_x002es = 3
};
#endif

/* resqml2_0_1ForGsoap.h:7213 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom (-664)

/* eml20:MagneticFluxDensityUom */
enum eml20__MagneticFluxDensityUom {
	eml20__MagneticFluxDensityUom__T = 'T',
	eml20__MagneticFluxDensityUom__cgauss = 'U',
	eml20__MagneticFluxDensityUom__cT = 'V',
	eml20__MagneticFluxDensityUom__dgauss = 'W',
	eml20__MagneticFluxDensityUom__dT = 'X',
	eml20__MagneticFluxDensityUom__Egauss = 'Y',
	eml20__MagneticFluxDensityUom__ET = 'Z',
	eml20__MagneticFluxDensityUom__fgauss = 91,
	eml20__MagneticFluxDensityUom__fT = 92,
	eml20__MagneticFluxDensityUom__gauss = 93,
	eml20__MagneticFluxDensityUom__Ggauss = 94,
	eml20__MagneticFluxDensityUom__GT = 95,
	eml20__MagneticFluxDensityUom__kgauss = 96,
	eml20__MagneticFluxDensityUom__kT = 'a',
	eml20__MagneticFluxDensityUom__mgauss = 'b',
	eml20__MagneticFluxDensityUom__Mgauss = 'c',
	eml20__MagneticFluxDensityUom__mT = 'd',
	eml20__MagneticFluxDensityUom__ngauss = 'e',
	eml20__MagneticFluxDensityUom__nT = 'f',
	eml20__MagneticFluxDensityUom__pgauss = 'g',
	eml20__MagneticFluxDensityUom__pT = 'h',
	eml20__MagneticFluxDensityUom__Tgauss = 'i',
	eml20__MagneticFluxDensityUom__TT = 'j',
	eml20__MagneticFluxDensityUom__ugauss = 'k',
	eml20__MagneticFluxDensityUom__uT = 'l'
};
#endif

/* resqml2_0_1ForGsoap.h:7345 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom (-665)

/* eml20:PlaneAngleUom */
enum eml20__PlaneAngleUom {
	eml20__PlaneAngleUom__0_x002e001_x0020seca = 0,
	eml20__PlaneAngleUom__ccgr = 1,
	eml20__PlaneAngleUom__cgr = 2,
	eml20__PlaneAngleUom__dega = 3,
	eml20__PlaneAngleUom__gon = 4,
	eml20__PlaneAngleUom__krad = 5,
	eml20__PlaneAngleUom__mila = 6,
	eml20__PlaneAngleUom__mina = 7,
	eml20__PlaneAngleUom__Mrad = 8,
	eml20__PlaneAngleUom__mrad = 9,
	eml20__PlaneAngleUom__rad = 10,
	eml20__PlaneAngleUom__rev = 11,
	eml20__PlaneAngleUom__seca = 12,
	eml20__PlaneAngleUom__urad = 13
};
#endif

/* resqml2_0_1ForGsoap.h:7422 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom (-666)

/* eml20:SignalingEventPerTimeUom */
enum eml20__SignalingEventPerTimeUom {
	eml20__SignalingEventPerTimeUom__Bd = 0
};
#endif

/* resqml2_0_1ForGsoap.h:7434 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom (-667)

/* eml20:EnergyPerLengthUom */
enum eml20__EnergyPerLengthUom {
	eml20__EnergyPerLengthUom__J_x002fm = 0,
	eml20__EnergyPerLengthUom__MJ_x002fm = 1
};
#endif

/* resqml2_0_1ForGsoap.h:7451 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom (-668)

/* eml20:ElectricCurrentUom */
enum eml20__ElectricCurrentUom {
	eml20__ElectricCurrentUom__A = 'A',
	eml20__ElectricCurrentUom__cA = 'B',
	eml20__ElectricCurrentUom__dA = 'C',
	eml20__ElectricCurrentUom__EA = 'D',
	eml20__ElectricCurrentUom__fA = 'E',
	eml20__ElectricCurrentUom__GA = 'F',
	eml20__ElectricCurrentUom__kA = 'G',
	eml20__ElectricCurrentUom__mA = 'H',
	eml20__ElectricCurrentUom__MA = 'I',
	eml20__ElectricCurrentUom__nA = 'J',
	eml20__ElectricCurrentUom__pA = 'K',
	eml20__ElectricCurrentUom__TA = 'L',
	eml20__ElectricCurrentUom__uA = 'M'
};
#endif

/* resqml2_0_1ForGsoap.h:7523 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom (-669)

/* eml20:PressureSquaredUom */
enum eml20__PressureSquaredUom {
	eml20__PressureSquaredUom__bar2 = 0,
	eml20__PressureSquaredUom__GPa2 = 1,
	eml20__PressureSquaredUom__kPa2 = 2,
	eml20__PressureSquaredUom__kpsi2 = 3,
	eml20__PressureSquaredUom__Pa2 = 4,
	eml20__PressureSquaredUom__psi2 = 5
};
#endif

/* resqml2_0_1ForGsoap.h:7560 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom (-670)

/* eml20:AngularAccelerationUom */
enum eml20__AngularAccelerationUom {
	eml20__AngularAccelerationUom__rad_x002fs2 = 0,
	eml20__AngularAccelerationUom__rpm_x002fs = 1
};
#endif

/* resqml2_0_1ForGsoap.h:7577 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom (-671)

/* eml20:ReciprocalMassTimeUom */
enum eml20__ReciprocalMassTimeUom {
	eml20__ReciprocalMassTimeUom__1_x002f_x0028kg_x002es_x0029 = 0,
	eml20__ReciprocalMassTimeUom__Bq_x002fkg = 1,
	eml20__ReciprocalMassTimeUom__pCi_x002fg = 2
};
#endif

/* resqml2_0_1ForGsoap.h:7599 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom (-672)

/* eml20:ThermalDiffusivityUom */
enum eml20__ThermalDiffusivityUom {
	eml20__ThermalDiffusivityUom__cm2_x002fs = 0,
	eml20__ThermalDiffusivityUom__ft2_x002fh = 1,
	eml20__ThermalDiffusivityUom__ft2_x002fs = 2,
	eml20__ThermalDiffusivityUom__in2_x002fs = 3,
	eml20__ThermalDiffusivityUom__m2_x002fh = 4,
	eml20__ThermalDiffusivityUom__m2_x002fs = 5,
	eml20__ThermalDiffusivityUom__mm2_x002fs = 6
};
#endif

/* resqml2_0_1ForGsoap.h:7641 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom (-673)

/* eml20:VolumePerTimeLengthUom */
enum eml20__VolumePerTimeLengthUom {
	eml20__VolumePerTimeLengthUom__1000_x0020bbl_x002eft_x002fd = 0,
	eml20__VolumePerTimeLengthUom__1000_x0020m4_x002fd = 1,
	eml20__VolumePerTimeLengthUom__m4_x002fs = 2
};
#endif

/* resqml2_0_1ForGsoap.h:7663 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom (-674)

/* eml20:PermeabilityRockUom */
enum eml20__PermeabilityRockUom {
	eml20__PermeabilityRockUom__D = 'D',
	eml20__PermeabilityRockUom__D_x005bAPI_x005d = 'E',
	eml20__PermeabilityRockUom__mD = 'F',
	eml20__PermeabilityRockUom__TD_x005bAPI_x005d = 'G'
};
#endif

/* resqml2_0_1ForGsoap.h:7690 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom (-675)

/* eml20:SecondMomentOfAreaUom */
enum eml20__SecondMomentOfAreaUom {
	eml20__SecondMomentOfAreaUom__cm4 = 0,
	eml20__SecondMomentOfAreaUom__in4 = 1,
	eml20__SecondMomentOfAreaUom__m4 = 2
};
#endif

/* resqml2_0_1ForGsoap.h:7712 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom (-676)

/* eml20:ForceAreaUom */
enum eml20__ForceAreaUom {
	eml20__ForceAreaUom__dyne_x002ecm2 = 0,
	eml20__ForceAreaUom__kgf_x002em2 = 1,
	eml20__ForceAreaUom__kN_x002em2 = 2,
	eml20__ForceAreaUom__lbf_x002ein2 = 3,
	eml20__ForceAreaUom__mN_x002em2 = 4,
	eml20__ForceAreaUom__N_x002em2 = 5,
	eml20__ForceAreaUom__pdl_x002ecm2 = 6,
	eml20__ForceAreaUom__tonf_x005bUK_x005d_x002eft2 = 7,
	eml20__ForceAreaUom__tonf_x005bUS_x005d_x002eft2 = 8
};
#endif

/* resqml2_0_1ForGsoap.h:7764 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom (-677)

/* eml20:ElectricFieldStrengthUom */
enum eml20__ElectricFieldStrengthUom {
	eml20__ElectricFieldStrengthUom__mV_x002fft = 0,
	eml20__ElectricFieldStrengthUom__mV_x002fm = 1,
	eml20__ElectricFieldStrengthUom__uV_x002fft = 2,
	eml20__ElectricFieldStrengthUom__uV_x002fm = 3,
	eml20__ElectricFieldStrengthUom__V_x002fm = 4
};
#endif

/* resqml2_0_1ForGsoap.h:7796 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom (-678)

/* eml20:AmountOfSubstancePerAreaUom */
enum eml20__AmountOfSubstancePerAreaUom {
	eml20__AmountOfSubstancePerAreaUom__mol_x002fm2 = 0
};
#endif

/* resqml2_0_1ForGsoap.h:7808 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom (-679)

/* eml20:TimeUom */
enum eml20__TimeUom {
	eml20__TimeUom__a = 'a',
	eml20__TimeUom__d = 'd',
	eml20__TimeUom__h = 'h',
	eml20__TimeUom__s = 's',
	eml20__TimeUom__1_x002f2_x0020ms = 't',
	eml20__TimeUom__100_x0020ka_x005bt_x005d = 'u',
	eml20__TimeUom__a_x005bt_x005d = 'v',
	eml20__TimeUom__ca = 'w',
	eml20__TimeUom__cs = 'x',
	eml20__TimeUom__ds = 'y',
	eml20__TimeUom__Ea_x005bt_x005d = 'z',
	eml20__TimeUom__fa = 123,
	eml20__TimeUom__Ga_x005bt_x005d = 124,
	eml20__TimeUom__hs = 125,
	eml20__TimeUom__ka_x005bt_x005d = 126,
	eml20__TimeUom__Ma_x005bt_x005d = 127,
	eml20__TimeUom__min_ = 128,
	eml20__TimeUom__ms = 129,
	eml20__TimeUom__na = 130,
	eml20__TimeUom__ns = 131,
	eml20__TimeUom__ps = 132,
	eml20__TimeUom__Ta_x005bt_x005d = 133,
	eml20__TimeUom__us = 134,
	eml20__TimeUom__wk = 135
};
#endif

/* resqml2_0_1ForGsoap.h:7935 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom (-680)

/* eml20:ThermalConductivityUom */
enum eml20__ThermalConductivityUom {
	eml20__ThermalConductivityUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft_x002edeltaF_x0029 = 0,
	eml20__ThermalConductivityUom__cal_x005bth_x005d_x002f_x0028h_x002ecm_x002edeltaC_x0029 = 1,
	eml20__ThermalConductivityUom__cal_x005bth_x005d_x002f_x0028s_x002ecm_x002edeltaC_x0029 = 2,
	eml20__ThermalConductivityUom__kcal_x005bth_x005d_x002f_x0028h_x002em_x002edeltaC_x0029 = 3,
	eml20__ThermalConductivityUom__W_x002f_x0028m_x002edeltaK_x0029 = 4
};
#endif

/* resqml2_0_1ForGsoap.h:7967 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom (-681)

/* eml20:AreaPerAmountOfSubstanceUom */
enum eml20__AreaPerAmountOfSubstanceUom {
	eml20__AreaPerAmountOfSubstanceUom__m2_x002fmol = 0
};
#endif

/* resqml2_0_1ForGsoap.h:7979 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom (-682)

/* eml20:LogarithmicPowerRatioPerLengthUom */
enum eml20__LogarithmicPowerRatioPerLengthUom {
	eml20__LogarithmicPowerRatioPerLengthUom__B_x002fm = 0,
	eml20__LogarithmicPowerRatioPerLengthUom__dB_x002fft = 1,
	eml20__LogarithmicPowerRatioPerLengthUom__dB_x002fkm = 2,
	eml20__LogarithmicPowerRatioPerLengthUom__dB_x002fm = 3
};
#endif

/* resqml2_0_1ForGsoap.h:8006 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom (-683)

/* eml20:ReciprocalLengthUom */
enum eml20__ReciprocalLengthUom {
	eml20__ReciprocalLengthUom__1_x002fangstrom = 0,
	eml20__ReciprocalLengthUom__1_x002fcm = 1,
	eml20__ReciprocalLengthUom__1_x002fft = 2,
	eml20__ReciprocalLengthUom__1_x002fin = 3,
	eml20__ReciprocalLengthUom__1_x002fm = 4,
	eml20__ReciprocalLengthUom__1_x002fmi = 5,
	eml20__ReciprocalLengthUom__1_x002fmm = 6,
	eml20__ReciprocalLengthUom__1_x002fnm = 7,
	eml20__ReciprocalLengthUom__1_x002fyd = 8,
	eml20__ReciprocalLengthUom__1E_9_x00201_x002fft = 9
};
#endif

/* resqml2_0_1ForGsoap.h:8063 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom (-684)

/* eml20:LuminanceUom */
enum eml20__LuminanceUom {
	eml20__LuminanceUom__cd_x002fm2 = 0
};
#endif

/* resqml2_0_1ForGsoap.h:8075 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom (-685)

/* eml20:VolumePerTimePerTimeUom */
enum eml20__VolumePerTimePerTimeUom {
	eml20__VolumePerTimePerTimeUom__bbl_x002fd2 = 0,
	eml20__VolumePerTimePerTimeUom__bbl_x002fh2 = 1,
	eml20__VolumePerTimePerTimeUom__dm3_x002fs2 = 2,
	eml20__VolumePerTimePerTimeUom__ft3_x002fd2 = 3,
	eml20__VolumePerTimePerTimeUom__ft3_x002fh2 = 4,
	eml20__VolumePerTimePerTimeUom__ft3_x002fmin2 = 5,
	eml20__VolumePerTimePerTimeUom__ft3_x002fs2 = 6,
	eml20__VolumePerTimePerTimeUom__gal_x005bUK_x005d_x002fh2 = 7,
	eml20__VolumePerTimePerTimeUom__gal_x005bUK_x005d_x002fmin2 = 8,
	eml20__VolumePerTimePerTimeUom__gal_x005bUS_x005d_x002fh2 = 9,
	eml20__VolumePerTimePerTimeUom__gal_x005bUS_x005d_x002fmin2 = 10,
	eml20__VolumePerTimePerTimeUom__L_x002fs2 = 11,
	eml20__VolumePerTimePerTimeUom__m3_x002fd2 = 12,
	eml20__VolumePerTimePerTimeUom__m3_x002fs2 = 13
};
#endif

/* resqml2_0_1ForGsoap.h:8152 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom (-686)

/* eml20:MolarHeatCapacityUom */
enum eml20__MolarHeatCapacityUom {
	eml20__MolarHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbmol_x002edeltaF_x0029 = 0,
	eml20__MolarHeatCapacityUom__cal_x005bth_x005d_x002f_x0028mol_x002edeltaC_x0029 = 1,
	eml20__MolarHeatCapacityUom__J_x002f_x0028mol_x002edeltaK_x0029 = 2,
	eml20__MolarHeatCapacityUom__kJ_x002f_x0028kmol_x002edeltaK_x0029 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:8179 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom (-687)

/* eml20:VolumeFlowRatePerVolumeFlowRateUom */
enum eml20__VolumeFlowRatePerVolumeFlowRateUom {
	eml20__VolumeFlowRatePerVolumeFlowRateUom___x0025 = 0,
	eml20__VolumeFlowRatePerVolumeFlowRateUom___x0028bbl_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 1,
	eml20__VolumeFlowRatePerVolumeFlowRateUom___x0028m3_x002fd_x0029_x002f_x0028m3_x002fd_x0029 = 2,
	eml20__VolumeFlowRatePerVolumeFlowRateUom___x0028m3_x002fs_x0029_x002f_x0028m3_x002fs_x0029 = 3,
	eml20__VolumeFlowRatePerVolumeFlowRateUom__1E6_x0020_x0028ft3_x002fd_x0029_x002f_x0028bbl_x002fd_x0029 = 4,
	eml20__VolumeFlowRatePerVolumeFlowRateUom__Euc = 5
};
#endif

/* resqml2_0_1ForGsoap.h:8216 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom (-688)

/* eml20:FrequencyIntervalUom */
enum eml20__FrequencyIntervalUom {
	eml20__FrequencyIntervalUom__O = 'O'
};
#endif

/* resqml2_0_1ForGsoap.h:8228 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom (-689)

/* eml20:TemperatureIntervalUom */
enum eml20__TemperatureIntervalUom {
	eml20__TemperatureIntervalUom__deltaC = 0,
	eml20__TemperatureIntervalUom__deltaF = 1,
	eml20__TemperatureIntervalUom__deltaK = 2,
	eml20__TemperatureIntervalUom__deltaR = 3
};
#endif

/* resqml2_0_1ForGsoap.h:8255 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom (-690)

/* eml20:RadiantIntensityUom */
enum eml20__RadiantIntensityUom {
	eml20__RadiantIntensityUom__W_x002fsr = 0
};
#endif

/* resqml2_0_1ForGsoap.h:8267 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom (-691)

/* eml20:PermeabilityLengthUom */
enum eml20__PermeabilityLengthUom {
	eml20__PermeabilityLengthUom__D_x002eft = 0,
	eml20__PermeabilityLengthUom__D_x002em = 1,
	eml20__PermeabilityLengthUom__mD_x002eft = 2,
	eml20__PermeabilityLengthUom__mD_x002em = 3,
	eml20__PermeabilityLengthUom__TD_x005bAPI_x005d_x002em = 4
};
#endif

/* resqml2_0_1ForGsoap.h:8299 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom (-692)

/* eml20:DataTransferSpeedUom */
enum eml20__DataTransferSpeedUom {
	eml20__DataTransferSpeedUom__bit_x002fs = 0,
	eml20__DataTransferSpeedUom__byte_x002fs = 1
};
#endif

/* resqml2_0_1ForGsoap.h:8316 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom (-693)

/* eml20:InductanceUom */
enum eml20__InductanceUom {
	eml20__InductanceUom__H = 'H',
	eml20__InductanceUom__cH = 'I',
	eml20__InductanceUom__dH = 'J',
	eml20__InductanceUom__EH = 'K',
	eml20__InductanceUom__fH = 'L',
	eml20__InductanceUom__GH = 'M',
	eml20__InductanceUom__kH = 'N',
	eml20__InductanceUom__MH = 'O',
	eml20__InductanceUom__mH = 'P',
	eml20__InductanceUom__nH = 'Q',
	eml20__InductanceUom__TH = 'R',
	eml20__InductanceUom__uH = 'S'
};
#endif

/* resqml2_0_1ForGsoap.h:8383 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom (-694)

/* eml20:KinematicViscosityUom */
enum eml20__KinematicViscosityUom {
	eml20__KinematicViscosityUom__cm2_x002fs = 0,
	eml20__KinematicViscosityUom__cSt = 1,
	eml20__KinematicViscosityUom__ft2_x002fh = 2,
	eml20__KinematicViscosityUom__ft2_x002fs = 3,
	eml20__KinematicViscosityUom__in2_x002fs = 4,
	eml20__KinematicViscosityUom__m2_x002fh = 5,
	eml20__KinematicViscosityUom__m2_x002fs = 6,
	eml20__KinematicViscosityUom__mm2_x002fs = 7,
	eml20__KinematicViscosityUom__Pa_x002es_x002em3_x002fkg = 8,
	eml20__KinematicViscosityUom__St = 9
};
#endif

/* resqml2_0_1ForGsoap.h:8440 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom (-695)

/* eml20:VolumePerTimePerPressureLengthUom */
enum eml20__VolumePerTimePerPressureLengthUom {
	eml20__VolumePerTimePerPressureLengthUom__bbl_x002f_x0028ft_x002epsi_x002ed_x0029 = 0,
	eml20__VolumePerTimePerPressureLengthUom__ft3_x002f_x0028ft_x002epsi_x002ed_x0029 = 1,
	eml20__VolumePerTimePerPressureLengthUom__m2_x002f_x0028kPa_x002ed_x0029 = 2,
	eml20__VolumePerTimePerPressureLengthUom__m2_x002f_x0028Pa_x002es_x0029 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:8467 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom (-696)

/* eml20:ReciprocalForceUom */
enum eml20__ReciprocalForceUom {
	eml20__ReciprocalForceUom__1_x002flbf = 0,
	eml20__ReciprocalForceUom__1_x002fN = 1
};
#endif

/* resqml2_0_1ForGsoap.h:8484 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom (-697)

/* eml20:ReciprocalAreaUom */
enum eml20__ReciprocalAreaUom {
	eml20__ReciprocalAreaUom__1_x002fft2 = 0,
	eml20__ReciprocalAreaUom__1_x002fkm2 = 1,
	eml20__ReciprocalAreaUom__1_x002fm2 = 2,
	eml20__ReciprocalAreaUom__1_x002fmi2 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:8511 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom (-698)

/* eml20:PressurePerTimeUom */
enum eml20__PressurePerTimeUom {
	eml20__PressurePerTimeUom__atm_x002fh = 0,
	eml20__PressurePerTimeUom__bar_x002fh = 1,
	eml20__PressurePerTimeUom__kPa_x002fh = 2,
	eml20__PressurePerTimeUom__kPa_x002fmin = 3,
	eml20__PressurePerTimeUom__MPa_x002fh = 4,
	eml20__PressurePerTimeUom__Pa_x002fh = 5,
	eml20__PressurePerTimeUom__Pa_x002fs = 6,
	eml20__PressurePerTimeUom__psi_x002fh = 7,
	eml20__PressurePerTimeUom__psi_x002fmin = 8
};
#endif

/* resqml2_0_1ForGsoap.h:8563 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom (-699)

/* eml20:ElectricChargeUom */
enum eml20__ElectricChargeUom {
	eml20__ElectricChargeUom__C = 'C',
	eml20__ElectricChargeUom__A_x002eh = 'D',
	eml20__ElectricChargeUom__A_x002es = 'E',
	eml20__ElectricChargeUom__cC = 'F',
	eml20__ElectricChargeUom__dC = 'G',
	eml20__ElectricChargeUom__EC = 'H',
	eml20__ElectricChargeUom__fC = 'I',
	eml20__ElectricChargeUom__GC = 'J',
	eml20__ElectricChargeUom__kC = 'K',
	eml20__ElectricChargeUom__MC = 'L',
	eml20__ElectricChargeUom__mC = 'M',
	eml20__ElectricChargeUom__nC = 'N',
	eml20__ElectricChargeUom__pC = 'O',
	eml20__ElectricChargeUom__TC = 'P',
	eml20__ElectricChargeUom__uC = 'Q'
};
#endif

/* resqml2_0_1ForGsoap.h:8645 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom (-700)

/* eml20:LuminousEfficacyUom */
enum eml20__LuminousEfficacyUom {
	eml20__LuminousEfficacyUom__lm_x002fW = 0
};
#endif

/* resqml2_0_1ForGsoap.h:8657 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom (-701)

/* eml20:PowerUom */
enum eml20__PowerUom {
	eml20__PowerUom__W = 'W',
	eml20__PowerUom__cW = 'X',
	eml20__PowerUom__dW = 'Y',
	eml20__PowerUom__EW = 'Z',
	eml20__PowerUom__fW = 91,
	eml20__PowerUom__GW = 92,
	eml20__PowerUom__hp = 93,
	eml20__PowerUom__hp_x005belec_x005d = 94,
	eml20__PowerUom__hp_x005bhyd_x005d = 95,
	eml20__PowerUom__hp_x005bmetric_x005d = 96,
	eml20__PowerUom__kW = 'a',
	eml20__PowerUom__MW = 'b',
	eml20__PowerUom__mW = 'c',
	eml20__PowerUom__nW = 'd',
	eml20__PowerUom__pW = 'e',
	eml20__PowerUom__tonRefrig = 'f',
	eml20__PowerUom__TW = 'g',
	eml20__PowerUom__uW = 'h'
};
#endif

/* resqml2_0_1ForGsoap.h:8754 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom (-702)

/* eml20:PressurePerVolumeUom */
enum eml20__PressurePerVolumeUom {
	eml20__PressurePerVolumeUom__Pa_x002fm3 = 0,
	eml20__PressurePerVolumeUom__psi2_x002ed_x002f_x0028cP_x002eft3_x0029 = 1
};
#endif

/* resqml2_0_1ForGsoap.h:8771 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom (-703)

/* eml20:ActivityOfRadioactivityUom */
enum eml20__ActivityOfRadioactivityUom {
	eml20__ActivityOfRadioactivityUom__Bq = 0,
	eml20__ActivityOfRadioactivityUom__Ci = 1,
	eml20__ActivityOfRadioactivityUom__GBq = 2,
	eml20__ActivityOfRadioactivityUom__MBq = 3,
	eml20__ActivityOfRadioactivityUom__mCi = 4,
	eml20__ActivityOfRadioactivityUom__nCi = 5,
	eml20__ActivityOfRadioactivityUom__pCi = 6,
	eml20__ActivityOfRadioactivityUom__TBq = 7,
	eml20__ActivityOfRadioactivityUom__uCi = 8
};
#endif

/* resqml2_0_1ForGsoap.h:8823 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom (-704)

/* eml20:ElectricPotentialDifferenceUom */
enum eml20__ElectricPotentialDifferenceUom {
	eml20__ElectricPotentialDifferenceUom__V = 'V',
	eml20__ElectricPotentialDifferenceUom__cV = 'W',
	eml20__ElectricPotentialDifferenceUom__dV = 'X',
	eml20__ElectricPotentialDifferenceUom__fV = 'Y',
	eml20__ElectricPotentialDifferenceUom__GV = 'Z',
	eml20__ElectricPotentialDifferenceUom__kV = 91,
	eml20__ElectricPotentialDifferenceUom__mV = 92,
	eml20__ElectricPotentialDifferenceUom__MV = 93,
	eml20__ElectricPotentialDifferenceUom__nV = 94,
	eml20__ElectricPotentialDifferenceUom__pV = 95,
	eml20__ElectricPotentialDifferenceUom__TV = 96,
	eml20__ElectricPotentialDifferenceUom__uV = 'a'
};
#endif

/* resqml2_0_1ForGsoap.h:8890 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom (-705)

/* eml20:LengthPerPressureUom */
enum eml20__LengthPerPressureUom {
	eml20__LengthPerPressureUom__ft_x002fpsi = 0,
	eml20__LengthPerPressureUom__m_x002fkPa = 1,
	eml20__LengthPerPressureUom__m_x002fPa = 2
};
#endif

/* resqml2_0_1ForGsoap.h:8912 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom (-706)

/* eml20:MagneticVectorPotentialUom */
enum eml20__MagneticVectorPotentialUom {
	eml20__MagneticVectorPotentialUom__Wb_x002fm = 0,
	eml20__MagneticVectorPotentialUom__Wb_x002fmm = 1
};
#endif

/* resqml2_0_1ForGsoap.h:8929 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom (-707)

/* eml20:MagneticFieldStrengthUom */
enum eml20__MagneticFieldStrengthUom {
	eml20__MagneticFieldStrengthUom__A_x002fm = 0,
	eml20__MagneticFieldStrengthUom__A_x002fmm = 1,
	eml20__MagneticFieldStrengthUom__Oe = 2
};
#endif

/* resqml2_0_1ForGsoap.h:8951 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom (-708)

/* eml20:VolumePerTimeUom */
enum eml20__VolumePerTimeUom {
	eml20__VolumePerTimeUom__1_x002f30_x0020cm3_x002fmin = 0,
	eml20__VolumePerTimeUom__1000_x0020bbl_x002fd = 1,
	eml20__VolumePerTimeUom__1000_x0020ft3_x002fd = 2,
	eml20__VolumePerTimeUom__1000_x0020m3_x002fd = 3,
	eml20__VolumePerTimeUom__1000_x0020m3_x002fh = 4,
	eml20__VolumePerTimeUom__1E6_x0020bbl_x002fd = 5,
	eml20__VolumePerTimeUom__1E6_x0020ft3_x002fd = 6,
	eml20__VolumePerTimeUom__1E6_x0020m3_x002fd = 7,
	eml20__VolumePerTimeUom__bbl_x002fd = 8,
	eml20__VolumePerTimeUom__bbl_x002fh = 9,
	eml20__VolumePerTimeUom__bbl_x002fmin = 10,
	eml20__VolumePerTimeUom__cm3_x002fh = 11,
	eml20__VolumePerTimeUom__cm3_x002fmin = 12,
	eml20__VolumePerTimeUom__cm3_x002fs = 13,
	eml20__VolumePerTimeUom__dm3_x002fs = 14,
	eml20__VolumePerTimeUom__ft3_x002fd = 15,
	eml20__VolumePerTimeUom__ft3_x002fh = 16,
	eml20__VolumePerTimeUom__ft3_x002fmin = 17,
	eml20__VolumePerTimeUom__ft3_x002fs = 18,
	eml20__VolumePerTimeUom__gal_x005bUK_x005d_x002fd = 19,
	eml20__VolumePerTimeUom__gal_x005bUK_x005d_x002fh = 20,
	eml20__VolumePerTimeUom__gal_x005bUK_x005d_x002fmin = 21,
	eml20__VolumePerTimeUom__gal_x005bUS_x005d_x002fd = 22,
	eml20__VolumePerTimeUom__gal_x005bUS_x005d_x002fh = 23,
	eml20__VolumePerTimeUom__gal_x005bUS_x005d_x002fmin = 24,
	eml20__VolumePerTimeUom__L_x002fh = 25,
	eml20__VolumePerTimeUom__L_x002fmin = 26,
	eml20__VolumePerTimeUom__L_x002fs = 27,
	eml20__VolumePerTimeUom__m3_x002fd = 28,
	eml20__VolumePerTimeUom__m3_x002fh = 29,
	eml20__VolumePerTimeUom__m3_x002fmin = 30,
	eml20__VolumePerTimeUom__m3_x002fs = 31
};
#endif

/* resqml2_0_1ForGsoap.h:9118 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom (-709)

/* eml20:LengthUom */
enum eml20__LengthUom {
	eml20__LengthUom__m = 'm',
	eml20__LengthUom__0_x002e1_x0020ft = 'n',
	eml20__LengthUom__0_x002e1_x0020ft_x005bUS_x005d = 'o',
	eml20__LengthUom__0_x002e1_x0020in = 'p',
	eml20__LengthUom__0_x002e1_x0020yd = 'q',
	eml20__LengthUom__1_x002f16_x0020in = 'r',
	eml20__LengthUom__1_x002f2_x0020ft = 's',
	eml20__LengthUom__1_x002f32_x0020in = 't',
	eml20__LengthUom__1_x002f64_x0020in = 'u',
	eml20__LengthUom__10_x0020ft = 'v',
	eml20__LengthUom__10_x0020in = 'w',
	eml20__LengthUom__10_x0020km = 'x',
	eml20__LengthUom__100_x0020ft = 'y',
	eml20__LengthUom__100_x0020km = 'z',
	eml20__LengthUom__1000_x0020ft = 123,
	eml20__LengthUom__30_x0020ft = 124,
	eml20__LengthUom__30_x0020m = 125,
	eml20__LengthUom__angstrom = 126,
	eml20__LengthUom__chain = 127,
	eml20__LengthUom__chain_x005bBnA_x005d = 128,
	eml20__LengthUom__chain_x005bBnB_x005d = 129,
	eml20__LengthUom__chain_x005bCla_x005d = 130,
	eml20__LengthUom__chain_x005bInd37_x005d = 131,
	eml20__LengthUom__chain_x005bSe_x005d = 132,
	eml20__LengthUom__chain_x005bSeT_x005d = 133,
	eml20__LengthUom__chain_x005bUS_x005d = 134,
	eml20__LengthUom__cm = 135,
	eml20__LengthUom__dam = 136,
	eml20__LengthUom__dm = 137,
	eml20__LengthUom__Em = 138,
	eml20__LengthUom__fathom = 139,
	eml20__LengthUom__fm = 140,
	eml20__LengthUom__ft = 141,
	eml20__LengthUom__ft_x005bBnA_x005d = 142,
	eml20__LengthUom__ft_x005bBnB_x005d = 143,
	eml20__LengthUom__ft_x005bBr36_x005d = 144,
	eml20__LengthUom__ft_x005bBr65_x005d = 145,
	eml20__LengthUom__ft_x005bCla_x005d = 146,
	eml20__LengthUom__ft_x005bGC_x005d = 147,
	eml20__LengthUom__ft_x005bInd_x005d = 148,
	eml20__LengthUom__ft_x005bInd37_x005d = 149,
	eml20__LengthUom__ft_x005bInd62_x005d = 150,
	eml20__LengthUom__ft_x005bInd75_x005d = 151,
	eml20__LengthUom__ft_x005bSe_x005d = 152,
	eml20__LengthUom__ft_x005bSeT_x005d = 153,
	eml20__LengthUom__ft_x005bUS_x005d = 154,
	eml20__LengthUom__fur_x005bUS_x005d = 155,
	eml20__LengthUom__Gm = 156,
	eml20__LengthUom__hm = 157,
	eml20__LengthUom__in = 158,
	eml20__LengthUom__in_x005bUS_x005d = 159,
	eml20__LengthUom__km = 160,
	eml20__LengthUom__link = 161,
	eml20__LengthUom__link_x005bBnA_x005d = 162,
	eml20__LengthUom__link_x005bBnB_x005d = 163,
	eml20__LengthUom__link_x005bCla_x005d = 164,
	eml20__LengthUom__link_x005bSe_x005d = 165,
	eml20__LengthUom__link_x005bSeT_x005d = 166,
	eml20__LengthUom__link_x005bUS_x005d = 167,
	eml20__LengthUom__m_x005bGer_x005d = 168,
	eml20__LengthUom__mi = 169,
	eml20__LengthUom__mi_x005bnaut_x005d = 170,
	eml20__LengthUom__mi_x005bnautUK_x005d = 171,
	eml20__LengthUom__mi_x005bUS_x005d = 172,
	eml20__LengthUom__mil = 173,
	eml20__LengthUom__Mm = 174,
	eml20__LengthUom__mm = 175,
	eml20__LengthUom__nm = 176,
	eml20__LengthUom__pm = 177,
	eml20__LengthUom__rod_x005bUS_x005d = 178,
	eml20__LengthUom__Tm = 179,
	eml20__LengthUom__um = 180,
	eml20__LengthUom__yd = 181,
	eml20__LengthUom__yd_x005bBnA_x005d = 182,
	eml20__LengthUom__yd_x005bBnB_x005d = 183,
	eml20__LengthUom__yd_x005bCla_x005d = 184,
	eml20__LengthUom__yd_x005bInd_x005d = 185,
	eml20__LengthUom__yd_x005bInd37_x005d = 186,
	eml20__LengthUom__yd_x005bInd62_x005d = 187,
	eml20__LengthUom__yd_x005bInd75_x005d = 188,
	eml20__LengthUom__yd_x005bSe_x005d = 189,
	eml20__LengthUom__yd_x005bSeT_x005d = 190,
	eml20__LengthUom__yd_x005bUS_x005d = 191
};
#endif

/* resqml2_0_1ForGsoap.h:9540 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom (-710)

/* eml20:AreaPerMassUom */
enum eml20__AreaPerMassUom {
	eml20__AreaPerMassUom__cm2_x002fg = 0,
	eml20__AreaPerMassUom__ft2_x002flbm = 1,
	eml20__AreaPerMassUom__m2_x002fg = 2,
	eml20__AreaPerMassUom__m2_x002fkg = 3
};
#endif

/* resqml2_0_1ForGsoap.h:9567 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom (-711)

/* eml20:ThermalResistanceUom */
enum eml20__ThermalResistanceUom {
	eml20__ThermalResistanceUom__deltaK_x002fW = 0
};
#endif

/* resqml2_0_1ForGsoap.h:9579 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom (-712)

/* eml20:ForcePerForceUom */
enum eml20__ForcePerForceUom {
	eml20__ForcePerForceUom___x0025 = 0,
	eml20__ForcePerForceUom__Euc = 1,
	eml20__ForcePerForceUom__kgf_x002fkgf = 2,
	eml20__ForcePerForceUom__lbf_x002flbf = 3,
	eml20__ForcePerForceUom__N_x002fN = 4
};
#endif

/* resqml2_0_1ForGsoap.h:9611 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom (-713)

/* eml20:MassUom */
enum eml20__MassUom {
	eml20__MassUom__g = 'g',
	eml20__MassUom__t = 't',
	eml20__MassUom__ag = 'u',
	eml20__MassUom__cg = 'v',
	eml20__MassUom__ct = 'w',
	eml20__MassUom__cwt_x005bUK_x005d = 'x',
	eml20__MassUom__cwt_x005bUS_x005d = 'y',
	eml20__MassUom__Eg = 'z',
	eml20__MassUom__fg = 123,
	eml20__MassUom__Gg = 124,
	eml20__MassUom__grain = 125,
	eml20__MassUom__hg = 126,
	eml20__MassUom__kg = 127,
	eml20__MassUom__klbm = 128,
	eml20__MassUom__lbm = 129,
	eml20__MassUom__mg = 130,
	eml20__MassUom__Mg = 131,
	eml20__MassUom__ng = 132,
	eml20__MassUom__ozm = 133,
	eml20__MassUom__ozm_x005btroy_x005d = 134,
	eml20__MassUom__pg = 135,
	eml20__MassUom__sack_x005b94lbm_x005d = 136,
	eml20__MassUom__Tg = 137,
	eml20__MassUom__ton_x005bUK_x005d = 138,
	eml20__MassUom__ton_x005bUS_x005d = 139,
	eml20__MassUom__ug = 140
};
#endif

/* resqml2_0_1ForGsoap.h:9748 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom (-714)

/* eml20:SpecificHeatCapacityUom */
enum eml20__SpecificHeatCapacityUom {
	eml20__SpecificHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edeltaF_x0029 = 0,
	eml20__SpecificHeatCapacityUom__Btu_x005bIT_x005d_x002f_x0028lbm_x002edeltaR_x0029 = 1,
	eml20__SpecificHeatCapacityUom__cal_x005bth_x005d_x002f_x0028g_x002edeltaK_x0029 = 2,
	eml20__SpecificHeatCapacityUom__J_x002f_x0028g_x002edeltaK_x0029 = 3,
	eml20__SpecificHeatCapacityUom__J_x002f_x0028kg_x002edeltaK_x0029 = 4,
	eml20__SpecificHeatCapacityUom__kcal_x005bth_x005d_x002f_x0028kg_x002edeltaC_x0029 = 5,
	eml20__SpecificHeatCapacityUom__kJ_x002f_x0028kg_x002edeltaK_x0029 = 6,
	eml20__SpecificHeatCapacityUom__kW_x002eh_x002f_x0028kg_x002edeltaC_x0029 = 7
};
#endif

/* resqml2_0_1ForGsoap.h:9795 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom (-715)

/* eml20:LengthPerMassUom */
enum eml20__LengthPerMassUom {
	eml20__LengthPerMassUom__ft_x002flbm = 0,
	eml20__LengthPerMassUom__m_x002fkg = 1
};
#endif

/* resqml2_0_1ForGsoap.h:9812 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom (-716)

/* eml20:AmountOfSubstancePerTimePerAreaUom */
enum eml20__AmountOfSubstancePerTimePerAreaUom {
	eml20__AmountOfSubstancePerTimePerAreaUom__lbmol_x002f_x0028h_x002eft2_x0029 = 0,
	eml20__AmountOfSubstancePerTimePerAreaUom__lbmol_x002f_x0028s_x002eft2_x0029 = 1,
	eml20__AmountOfSubstancePerTimePerAreaUom__mol_x002f_x0028s_x002em2_x0029 = 2
};
#endif

/* resqml2_0_1ForGsoap.h:9834 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom (-717)

/* eml20:ThermodynamicTemperatureUom */
enum eml20__ThermodynamicTemperatureUom {
	eml20__ThermodynamicTemperatureUom__K = 'K',
	eml20__ThermodynamicTemperatureUom__degC = 'L',
	eml20__ThermodynamicTemperatureUom__degF = 'M',
	eml20__ThermodynamicTemperatureUom__degR = 'N'
};
#endif

/* resqml2_0_1ForGsoap.h:9861 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom (-718)

/* eml20:LinearThermalExpansionUom */
enum eml20__LinearThermalExpansionUom {
	eml20__LinearThermalExpansionUom__1_x002fdeltaK = 0,
	eml20__LinearThermalExpansionUom__in_x002f_x0028in_x002edeltaF_x0029 = 1,
	eml20__LinearThermalExpansionUom__m_x002f_x0028m_x002edeltaK_x0029 = 2,
	eml20__LinearThermalExpansionUom__mm_x002f_x0028mm_x002edeltaK_x0029 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:9888 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom (-719)

/* eml20:MassPerLengthUom */
enum eml20__MassPerLengthUom {
	eml20__MassPerLengthUom__kg_x002em_x002fcm2 = 0,
	eml20__MassPerLengthUom__kg_x002fm = 1,
	eml20__MassPerLengthUom__klbm_x002fin = 2,
	eml20__MassPerLengthUom__lbm_x002fft = 3,
	eml20__MassPerLengthUom__Mg_x002fin = 4
};
#endif

/* resqml2_0_1ForGsoap.h:9920 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom (-720)

/* eml20:ElectricalResistivityUom */
enum eml20__ElectricalResistivityUom {
	eml20__ElectricalResistivityUom__kohm_x002em = 0,
	eml20__ElectricalResistivityUom__nohm_x002emil2_x002fft = 1,
	eml20__ElectricalResistivityUom__nohm_x002emm2_x002fm = 2,
	eml20__ElectricalResistivityUom__ohm_x002ecm = 3,
	eml20__ElectricalResistivityUom__ohm_x002em = 4,
	eml20__ElectricalResistivityUom__ohm_x002em2_x002fm = 5
};
#endif

/* resqml2_0_1ForGsoap.h:9957 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom (-721)

/* eml20:MassPerMassUom */
enum eml20__MassPerMassUom {
	eml20__MassPerMassUom___x0025 = 0,
	eml20__MassPerMassUom___x0025_x005bmass_x005d = 1,
	eml20__MassPerMassUom__Euc = 2,
	eml20__MassPerMassUom__g_x002fkg = 3,
	eml20__MassPerMassUom__g_x002ft = 4,
	eml20__MassPerMassUom__kg_x002fkg = 5,
	eml20__MassPerMassUom__kg_x002fsack_x005b94lbm_x005d = 6,
	eml20__MassPerMassUom__kg_x002ft = 7,
	eml20__MassPerMassUom__mg_x002fg = 8,
	eml20__MassPerMassUom__mg_x002fkg = 9,
	eml20__MassPerMassUom__ng_x002fg = 10,
	eml20__MassPerMassUom__ng_x002fmg = 11,
	eml20__MassPerMassUom__ppk = 12,
	eml20__MassPerMassUom__ppm = 13,
	eml20__MassPerMassUom__ppm_x005bmass_x005d = 14,
	eml20__MassPerMassUom__ug_x002fg = 15,
	eml20__MassPerMassUom__ug_x002fmg = 16
};
#endif

/* resqml2_0_1ForGsoap.h:10049 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom (-722)

/* eml20:PressureSquaredPerForceTimePerAreaUom */
enum eml20__PressureSquaredPerForceTimePerAreaUom {
	eml20__PressureSquaredPerForceTimePerAreaUom__0_x002e001_x0020kPa2_x002fcP = 0,
	eml20__PressureSquaredPerForceTimePerAreaUom__bar2_x002fcP = 1,
	eml20__PressureSquaredPerForceTimePerAreaUom__kPa2_x002fcP = 2,
	eml20__PressureSquaredPerForceTimePerAreaUom__Pa2_x002f_x0028Pa_x002es_x0029 = 3,
	eml20__PressureSquaredPerForceTimePerAreaUom__psi2_x002fcP = 4
};
#endif

/* resqml2_0_1ForGsoap.h:10081 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom (-723)

/* eml20:LuminousFluxUom */
enum eml20__LuminousFluxUom {
	eml20__LuminousFluxUom__lm = 0
};
#endif

/* resqml2_0_1ForGsoap.h:10093 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom (-724)

/* eml20:VolumePerTimePerPressureUom */
enum eml20__VolumePerTimePerPressureUom {
	eml20__VolumePerTimePerPressureUom__1000_x0020ft3_x002f_x0028psi_x002ed_x0029 = 0,
	eml20__VolumePerTimePerPressureUom__bbl_x002f_x0028kPa_x002ed_x0029 = 1,
	eml20__VolumePerTimePerPressureUom__bbl_x002f_x0028psi_x002ed_x0029 = 2,
	eml20__VolumePerTimePerPressureUom__L_x002f_x0028bar_x002emin_x0029 = 3,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002ed_x0029 = 4,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002eh_x0029 = 5,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028bar_x002emin_x0029 = 6,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028kPa_x002ed_x0029 = 7,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028kPa_x002eh_x0029 = 8,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028Pa_x002es_x0029 = 9,
	eml20__VolumePerTimePerPressureUom__m3_x002f_x0028psi_x002ed_x0029 = 10
};
#endif

/* resqml2_0_1ForGsoap.h:10155 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom (-725)

/* eml20:AmountOfSubstancePerVolumeUom */
enum eml20__AmountOfSubstancePerVolumeUom {
	eml20__AmountOfSubstancePerVolumeUom__kmol_x002fm3 = 0,
	eml20__AmountOfSubstancePerVolumeUom__lbmol_x002fft3 = 1,
	eml20__AmountOfSubstancePerVolumeUom__lbmol_x002fgal_x005bUK_x005d = 2,
	eml20__AmountOfSubstancePerVolumeUom__lbmol_x002fgal_x005bUS_x005d = 3,
	eml20__AmountOfSubstancePerVolumeUom__mol_x002fm3 = 4
};
#endif

/* resqml2_0_1ForGsoap.h:10187 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom (-726)

/* eml20:EnergyPerMassUom */
enum eml20__EnergyPerMassUom {
	eml20__EnergyPerMassUom__Btu_x005bIT_x005d_x002flbm = 0,
	eml20__EnergyPerMassUom__cal_x005bth_x005d_x002fg = 1,
	eml20__EnergyPerMassUom__cal_x005bth_x005d_x002fkg = 2,
	eml20__EnergyPerMassUom__cal_x005bth_x005d_x002flbm = 3,
	eml20__EnergyPerMassUom__erg_x002fg = 4,
	eml20__EnergyPerMassUom__erg_x002fkg = 5,
	eml20__EnergyPerMassUom__hp_x002eh_x002flbm = 6,
	eml20__EnergyPerMassUom__J_x002fg = 7,
	eml20__EnergyPerMassUom__J_x002fkg = 8,
	eml20__EnergyPerMassUom__kcal_x005bth_x005d_x002fg = 9,
	eml20__EnergyPerMassUom__kcal_x005bth_x005d_x002fkg = 10,
	eml20__EnergyPerMassUom__kJ_x002fkg = 11,
	eml20__EnergyPerMassUom__kW_x002eh_x002fkg = 12,
	eml20__EnergyPerMassUom__lbf_x002eft_x002flbm = 13,
	eml20__EnergyPerMassUom__MJ_x002fkg = 14,
	eml20__EnergyPerMassUom__MW_x002eh_x002fkg = 15
};
#endif

/* resqml2_0_1ForGsoap.h:10274 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom (-727)

/* eml20:PermittivityUom */
enum eml20__PermittivityUom {
	eml20__PermittivityUom__F_x002fm = 0,
	eml20__PermittivityUom__uF_x002fm = 1
};
#endif

/* resqml2_0_1ForGsoap.h:10291 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom (-728)

/* eml20:ElectromagneticMomentUom */
enum eml20__ElectromagneticMomentUom {
	eml20__ElectromagneticMomentUom__A_x002em2 = 0
};
#endif

/* resqml2_0_1ForGsoap.h:10303 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom (-729)

/* eml20:ThermalInsulanceUom */
enum eml20__ThermalInsulanceUom {
	eml20__ThermalInsulanceUom__deltaC_x002em2_x002eh_x002fkcal_x005bth_x005d = 0,
	eml20__ThermalInsulanceUom__deltaF_x002eft2_x002eh_x002fBtu_x005bIT_x005d = 1,
	eml20__ThermalInsulanceUom__deltaK_x002em2_x002fkW = 2,
	eml20__ThermalInsulanceUom__deltaK_x002em2_x002fW = 3
};
#endif

/* resqml2_0_1ForGsoap.h:10330 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom (-730)

/* eml20:PowerPerAreaUom */
enum eml20__PowerPerAreaUom {
	eml20__PowerPerAreaUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft2_x0029 = 0,
	eml20__PowerPerAreaUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft2_x0029 = 1,
	eml20__PowerPerAreaUom__cal_x005bth_x005d_x002f_x0028h_x002ecm2_x0029 = 2,
	eml20__PowerPerAreaUom__hp_x002fin2 = 3,
	eml20__PowerPerAreaUom__hp_x005bhyd_x005d_x002fin2 = 4,
	eml20__PowerPerAreaUom__kW_x002fcm2 = 5,
	eml20__PowerPerAreaUom__kW_x002fm2 = 6,
	eml20__PowerPerAreaUom__mW_x002fm2 = 7,
	eml20__PowerPerAreaUom__ucal_x005bth_x005d_x002f_x0028s_x002ecm2_x0029 = 8,
	eml20__PowerPerAreaUom__W_x002fcm2 = 9,
	eml20__PowerPerAreaUom__W_x002fm2 = 10,
	eml20__PowerPerAreaUom__W_x002fmm2 = 11
};
#endif

/* resqml2_0_1ForGsoap.h:10397 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom (-731)

/* eml20:MassPerAreaUom */
enum eml20__MassPerAreaUom {
	eml20__MassPerAreaUom__0_x002e01_x0020lbm_x002fft2 = 0,
	eml20__MassPerAreaUom__kg_x002fm2 = 1,
	eml20__MassPerAreaUom__lbm_x002fft2 = 2,
	eml20__MassPerAreaUom__Mg_x002fm2 = 3,
	eml20__MassPerAreaUom__ton_x005bUS_x005d_x002fft2 = 4
};
#endif

/* resqml2_0_1ForGsoap.h:10429 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom (-732)

/* eml20:IlluminanceUom */
enum eml20__IlluminanceUom {
	eml20__IlluminanceUom__footcandle = 0,
	eml20__IlluminanceUom__klx = 1,
	eml20__IlluminanceUom__lm_x002fm2 = 2,
	eml20__IlluminanceUom__lx = 3
};
#endif

/* resqml2_0_1ForGsoap.h:10456 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom (-733)

/* eml20:AreaPerVolumeUom */
enum eml20__AreaPerVolumeUom {
	eml20__AreaPerVolumeUom__1_x002fm = 0,
	eml20__AreaPerVolumeUom__b_x002fcm3 = 1,
	eml20__AreaPerVolumeUom__cu = 2,
	eml20__AreaPerVolumeUom__ft2_x002fin3 = 3,
	eml20__AreaPerVolumeUom__m2_x002fcm3 = 4,
	eml20__AreaPerVolumeUom__m2_x002fm3 = 5
};
#endif

/* resqml2_0_1ForGsoap.h:10493 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom (-734)

/* eml20:TemperatureIntervalPerTimeUom */
enum eml20__TemperatureIntervalPerTimeUom {
	eml20__TemperatureIntervalPerTimeUom__deltaC_x002fh = 0,
	eml20__TemperatureIntervalPerTimeUom__deltaC_x002fmin = 1,
	eml20__TemperatureIntervalPerTimeUom__deltaC_x002fs = 2,
	eml20__TemperatureIntervalPerTimeUom__deltaF_x002fh = 3,
	eml20__TemperatureIntervalPerTimeUom__deltaF_x002fmin = 4,
	eml20__TemperatureIntervalPerTimeUom__deltaF_x002fs = 5,
	eml20__TemperatureIntervalPerTimeUom__deltaK_x002fs = 6
};
#endif

/* resqml2_0_1ForGsoap.h:10535 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom (-735)

/* eml20:AmountOfSubstancePerAmountOfSubstanceUom */
enum eml20__AmountOfSubstancePerAmountOfSubstanceUom {
	eml20__AmountOfSubstancePerAmountOfSubstanceUom___x0025 = 0,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom___x0025_x005bmolar_x005d = 1,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom__Euc = 2,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom__mol_x002fmol = 3,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom__nEuc = 4,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom__ppk = 5,
	eml20__AmountOfSubstancePerAmountOfSubstanceUom__ppm = 6
};
#endif

/* resqml2_0_1ForGsoap.h:10577 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom (-736)

/* eml20:RadianceUom */
enum eml20__RadianceUom {
	eml20__RadianceUom__W_x002f_x0028m2_x002esr_x0029 = 0
};
#endif

/* resqml2_0_1ForGsoap.h:10589 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom (-737)

/* eml20:HeatFlowRateUom */
enum eml20__HeatFlowRateUom {
	eml20__HeatFlowRateUom__W = 'W',
	eml20__HeatFlowRateUom__1E6_x0020Btu_x005bIT_x005d_x002fh = 'X',
	eml20__HeatFlowRateUom__Btu_x005bIT_x005d_x002fh = 'Y',
	eml20__HeatFlowRateUom__Btu_x005bIT_x005d_x002fmin = 'Z',
	eml20__HeatFlowRateUom__Btu_x005bIT_x005d_x002fs = 91,
	eml20__HeatFlowRateUom__cal_x005bth_x005d_x002fh = 92,
	eml20__HeatFlowRateUom__EJ_x002fa = 93,
	eml20__HeatFlowRateUom__erg_x002fa = 94,
	eml20__HeatFlowRateUom__GW = 95,
	eml20__HeatFlowRateUom__J_x002fs = 96,
	eml20__HeatFlowRateUom__kcal_x005bth_x005d_x002fh = 'a',
	eml20__HeatFlowRateUom__kW = 'b',
	eml20__HeatFlowRateUom__lbf_x002eft_x002fmin = 'c',
	eml20__HeatFlowRateUom__lbf_x002eft_x002fs = 'd',
	eml20__HeatFlowRateUom__MJ_x002fa = 'e',
	eml20__HeatFlowRateUom__MW = 'f',
	eml20__HeatFlowRateUom__mW = 'g',
	eml20__HeatFlowRateUom__nW = 'h',
	eml20__HeatFlowRateUom__quad_x002fa = 'i',
	eml20__HeatFlowRateUom__TJ_x002fa = 'j',
	eml20__HeatFlowRateUom__TW = 'k',
	eml20__HeatFlowRateUom__ucal_x005bth_x005d_x002fs = 'l',
	eml20__HeatFlowRateUom__uW = 'm'
};
#endif

/* resqml2_0_1ForGsoap.h:10711 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom (-738)

/* eml20:DoseEquivalentUom */
enum eml20__DoseEquivalentUom {
	eml20__DoseEquivalentUom__mrem = 0,
	eml20__DoseEquivalentUom__mSv = 1,
	eml20__DoseEquivalentUom__rem = 2,
	eml20__DoseEquivalentUom__Sv = 3
};
#endif

/* resqml2_0_1ForGsoap.h:10738 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom (-739)

/* eml20:PowerPerPowerUom */
enum eml20__PowerPerPowerUom {
	eml20__PowerPerPowerUom___x0025 = 0,
	eml20__PowerPerPowerUom__Btu_x005bIT_x005d_x002f_x0028hp_x002eh_x0029 = 1,
	eml20__PowerPerPowerUom__Euc = 2,
	eml20__PowerPerPowerUom__W_x002fkW = 3,
	eml20__PowerPerPowerUom__W_x002fW = 4
};
#endif

/* resqml2_0_1ForGsoap.h:10770 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom (-740)

/* eml20:ElectricChargePerMassUom */
enum eml20__ElectricChargePerMassUom {
	eml20__ElectricChargePerMassUom__A_x002es_x002fkg = 0,
	eml20__ElectricChargePerMassUom__C_x002fg = 1,
	eml20__ElectricChargePerMassUom__C_x002fkg = 2
};
#endif

/* resqml2_0_1ForGsoap.h:10792 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom (-741)

/* eml20:MassPerVolumePerLengthUom */
enum eml20__MassPerVolumePerLengthUom {
	eml20__MassPerVolumePerLengthUom__g_x002fcm4 = 0,
	eml20__MassPerVolumePerLengthUom__kg_x002fdm4 = 1,
	eml20__MassPerVolumePerLengthUom__kg_x002fm4 = 2,
	eml20__MassPerVolumePerLengthUom__lbm_x002f_x0028gal_x005bUK_x005d_x002eft_x0029 = 3,
	eml20__MassPerVolumePerLengthUom__lbm_x002f_x0028gal_x005bUS_x005d_x002eft_x0029 = 4,
	eml20__MassPerVolumePerLengthUom__lbm_x002fft4 = 5,
	eml20__MassPerVolumePerLengthUom__Pa_x002es2_x002fm3 = 6
};
#endif

/* resqml2_0_1ForGsoap.h:10834 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom (-742)

/* eml20:MassLengthUom */
enum eml20__MassLengthUom {
	eml20__MassLengthUom__kg_x002em = 0,
	eml20__MassLengthUom__lbm_x002eft = 1
};
#endif

/* resqml2_0_1ForGsoap.h:10851 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom (-743)

/* eml20:ForcePerVolumeUom */
enum eml20__ForcePerVolumeUom {
	eml20__ForcePerVolumeUom__0_x002e001_x0020psi_x002fft = 0,
	eml20__ForcePerVolumeUom__0_x002e01_x0020psi_x002fft = 1,
	eml20__ForcePerVolumeUom__atm_x002fft = 2,
	eml20__ForcePerVolumeUom__atm_x002fhm = 3,
	eml20__ForcePerVolumeUom__atm_x002fm = 4,
	eml20__ForcePerVolumeUom__bar_x002fkm = 5,
	eml20__ForcePerVolumeUom__bar_x002fm = 6,
	eml20__ForcePerVolumeUom__GPa_x002fcm = 7,
	eml20__ForcePerVolumeUom__kPa_x002fhm = 8,
	eml20__ForcePerVolumeUom__kPa_x002fm = 9,
	eml20__ForcePerVolumeUom__lbf_x002fft3 = 10,
	eml20__ForcePerVolumeUom__lbf_x002fgal_x005bUS_x005d = 11,
	eml20__ForcePerVolumeUom__MPa_x002fm = 12,
	eml20__ForcePerVolumeUom__N_x002fm3 = 13,
	eml20__ForcePerVolumeUom__Pa_x002fm = 14,
	eml20__ForcePerVolumeUom__psi_x002fft = 15,
	eml20__ForcePerVolumeUom__psi_x002fm = 16
};
#endif

/* resqml2_0_1ForGsoap.h:10943 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom (-744)

/* eml20:ElectricChargePerVolumeUom */
enum eml20__ElectricChargePerVolumeUom {
	eml20__ElectricChargePerVolumeUom__A_x002es_x002fm3 = 0,
	eml20__ElectricChargePerVolumeUom__C_x002fcm3 = 1,
	eml20__ElectricChargePerVolumeUom__C_x002fm3 = 2,
	eml20__ElectricChargePerVolumeUom__C_x002fmm3 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:10970 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom (-745)

/* eml20:APIGravityUom */
enum eml20__APIGravityUom {
	eml20__APIGravityUom__dAPI = 0
};
#endif

/* resqml2_0_1ForGsoap.h:10982 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom (-746)

/* eml20:ReluctanceUom */
enum eml20__ReluctanceUom {
	eml20__ReluctanceUom__1_x002fH = 0
};
#endif

/* resqml2_0_1ForGsoap.h:10994 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom (-747)

/* eml20:LengthPerTemperatureUom */
enum eml20__LengthPerTemperatureUom {
	eml20__LengthPerTemperatureUom__ft_x002fdeltaF = 0,
	eml20__LengthPerTemperatureUom__m_x002fdeltaK = 1
};
#endif

/* resqml2_0_1ForGsoap.h:11011 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom (-748)

/* eml20:VolumePerTimePerLengthUom */
enum eml20__VolumePerTimePerLengthUom {
	eml20__VolumePerTimePerLengthUom__1000_x0020ft3_x002f_x0028d_x002eft_x0029 = 0,
	eml20__VolumePerTimePerLengthUom__1000_x0020m3_x002f_x0028d_x002em_x0029 = 1,
	eml20__VolumePerTimePerLengthUom__1000_x0020m3_x002f_x0028h_x002em_x0029 = 2,
	eml20__VolumePerTimePerLengthUom__bbl_x002f_x0028d_x002eft_x0029 = 3,
	eml20__VolumePerTimePerLengthUom__ft3_x002f_x0028d_x002eft_x0029 = 4,
	eml20__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028h_x002eft_x0029 = 5,
	eml20__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028h_x002ein_x0029 = 6,
	eml20__VolumePerTimePerLengthUom__gal_x005bUK_x005d_x002f_x0028min_x002eft_x0029 = 7,
	eml20__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028h_x002eft_x0029 = 8,
	eml20__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028h_x002ein_x0029 = 9,
	eml20__VolumePerTimePerLengthUom__gal_x005bUS_x005d_x002f_x0028min_x002eft_x0029 = 10,
	eml20__VolumePerTimePerLengthUom__m3_x002f_x0028d_x002em_x0029 = 11,
	eml20__VolumePerTimePerLengthUom__m3_x002f_x0028h_x002em_x0029 = 12,
	eml20__VolumePerTimePerLengthUom__m3_x002f_x0028s_x002eft_x0029 = 13,
	eml20__VolumePerTimePerLengthUom__m3_x002f_x0028s_x002em_x0029 = 14
};
#endif

/* resqml2_0_1ForGsoap.h:11093 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom (-749)

/* eml20:LinearAccelerationUom */
enum eml20__LinearAccelerationUom {
	eml20__LinearAccelerationUom__cm_x002fs2 = 0,
	eml20__LinearAccelerationUom__ft_x002fs2 = 1,
	eml20__LinearAccelerationUom__Gal = 2,
	eml20__LinearAccelerationUom__gn = 3,
	eml20__LinearAccelerationUom__in_x002fs2 = 4,
	eml20__LinearAccelerationUom__m_x002fs2 = 5,
	eml20__LinearAccelerationUom__mGal = 6,
	eml20__LinearAccelerationUom__mgn = 7
};
#endif

/* resqml2_0_1ForGsoap.h:11140 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom (-750)

/* eml20:DimensionlessUom */
enum eml20__DimensionlessUom {
	eml20__DimensionlessUom___x0025 = 0,
	eml20__DimensionlessUom__cEuc = 1,
	eml20__DimensionlessUom__dEuc = 2,
	eml20__DimensionlessUom__EEuc = 3,
	eml20__DimensionlessUom__Euc = 4,
	eml20__DimensionlessUom__fEuc = 5,
	eml20__DimensionlessUom__GEuc = 6,
	eml20__DimensionlessUom__kEuc = 7,
	eml20__DimensionlessUom__MEuc = 8,
	eml20__DimensionlessUom__mEuc = 9,
	eml20__DimensionlessUom__nEuc = 10,
	eml20__DimensionlessUom__pEuc = 11,
	eml20__DimensionlessUom__ppk = 12,
	eml20__DimensionlessUom__ppm = 13,
	eml20__DimensionlessUom__TEuc = 14,
	eml20__DimensionlessUom__uEuc = 15
};
#endif

/* resqml2_0_1ForGsoap.h:11227 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom (-751)

/* eml20:EnergyUom */
enum eml20__EnergyUom {
	eml20__EnergyUom__J = 'J',
	eml20__EnergyUom__1E6_x0020Btu_x005bIT_x005d = 'K',
	eml20__EnergyUom__aJ = 'L',
	eml20__EnergyUom__Btu_x005bIT_x005d = 'M',
	eml20__EnergyUom__Btu_x005bth_x005d = 'N',
	eml20__EnergyUom__Btu_x005bUK_x005d = 'O',
	eml20__EnergyUom__cal_x005bIT_x005d = 'P',
	eml20__EnergyUom__cal_x005bth_x005d = 'Q',
	eml20__EnergyUom__ccal_x005bth_x005d = 'R',
	eml20__EnergyUom__ceV = 'S',
	eml20__EnergyUom__cJ = 'T',
	eml20__EnergyUom__dcal_x005bth_x005d = 'U',
	eml20__EnergyUom__deV = 'V',
	eml20__EnergyUom__dJ = 'W',
	eml20__EnergyUom__Ecal_x005bth_x005d = 'X',
	eml20__EnergyUom__EeV = 'Y',
	eml20__EnergyUom__EJ = 'Z',
	eml20__EnergyUom__erg = 91,
	eml20__EnergyUom__eV = 92,
	eml20__EnergyUom__fcal_x005bth_x005d = 93,
	eml20__EnergyUom__feV = 94,
	eml20__EnergyUom__fJ = 95,
	eml20__EnergyUom__Gcal_x005bth_x005d = 96,
	eml20__EnergyUom__GeV = 'a',
	eml20__EnergyUom__GJ = 'b',
	eml20__EnergyUom__GW_x002eh = 'c',
	eml20__EnergyUom__hp_x002eh = 'd',
	eml20__EnergyUom__hp_x005bmetric_x005d_x002eh = 'e',
	eml20__EnergyUom__kcal_x005bth_x005d = 'f',
	eml20__EnergyUom__keV = 'g',
	eml20__EnergyUom__kJ = 'h',
	eml20__EnergyUom__kW_x002eh = 'i',
	eml20__EnergyUom__Mcal_x005bth_x005d = 'j',
	eml20__EnergyUom__mcal_x005bth_x005d = 'k',
	eml20__EnergyUom__meV = 'l',
	eml20__EnergyUom__MeV = 'm',
	eml20__EnergyUom__MJ = 'n',
	eml20__EnergyUom__mJ = 'o',
	eml20__EnergyUom__MW_x002eh = 'p',
	eml20__EnergyUom__ncal_x005bth_x005d = 'q',
	eml20__EnergyUom__neV = 'r',
	eml20__EnergyUom__nJ = 's',
	eml20__EnergyUom__pcal_x005bth_x005d = 't',
	eml20__EnergyUom__peV = 'u',
	eml20__EnergyUom__pJ = 'v',
	eml20__EnergyUom__quad = 'w',
	eml20__EnergyUom__Tcal_x005bth_x005d = 'x',
	eml20__EnergyUom__TeV = 'y',
	eml20__EnergyUom__therm_x005bEC_x005d = 'z',
	eml20__EnergyUom__therm_x005bUK_x005d = 123,
	eml20__EnergyUom__therm_x005bUS_x005d = 124,
	eml20__EnergyUom__TJ = 125,
	eml20__EnergyUom__TW_x002eh = 126,
	eml20__EnergyUom__ucal_x005bth_x005d = 127,
	eml20__EnergyUom__ueV = 128,
	eml20__EnergyUom__uJ = 129
};
#endif

/* resqml2_0_1ForGsoap.h:11514 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom (-752)

/* eml20:AnglePerLengthUom */
enum eml20__AnglePerLengthUom {
	eml20__AnglePerLengthUom__0_x002e01_x0020dega_x002fft = 0,
	eml20__AnglePerLengthUom__1_x002f30_x0020dega_x002fft = 1,
	eml20__AnglePerLengthUom__1_x002f30_x0020dega_x002fm = 2,
	eml20__AnglePerLengthUom__dega_x002fft = 3,
	eml20__AnglePerLengthUom__dega_x002fm = 4,
	eml20__AnglePerLengthUom__rad_x002fft = 5,
	eml20__AnglePerLengthUom__rad_x002fm = 6,
	eml20__AnglePerLengthUom__rev_x002fft = 7,
	eml20__AnglePerLengthUom__rev_x002fm = 8
};
#endif

/* resqml2_0_1ForGsoap.h:11570 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom (-753)

/* eml20:VerticalCoordinateUom */
enum eml20__VerticalCoordinateUom {
	eml20__VerticalCoordinateUom__m = 'm',
	eml20__VerticalCoordinateUom__ft = 'n',
	eml20__VerticalCoordinateUom__ftUS = 'o',
	eml20__VerticalCoordinateUom__ftBr_x002865_x0029 = 'p'
};
#endif

/* resqml2_0_1ForGsoap.h:11597 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom (-754)

/* eml20:VolumePerLengthUom */
enum eml20__VolumePerLengthUom {
	eml20__VolumePerLengthUom__0_x002e01_x0020dm3_x002fkm = 0,
	eml20__VolumePerLengthUom__0_x002e01_x0020L_x002fkm = 1,
	eml20__VolumePerLengthUom__bbl_x002fft = 2,
	eml20__VolumePerLengthUom__bbl_x002fin = 3,
	eml20__VolumePerLengthUom__bbl_x002fmi = 4,
	eml20__VolumePerLengthUom__dm3_x002fm = 5,
	eml20__VolumePerLengthUom__ft3_x002fft = 6,
	eml20__VolumePerLengthUom__gal_x005bUK_x005d_x002fmi = 7,
	eml20__VolumePerLengthUom__gal_x005bUS_x005d_x002fft = 8,
	eml20__VolumePerLengthUom__gal_x005bUS_x005d_x002fmi = 9,
	eml20__VolumePerLengthUom__in3_x002fft = 10,
	eml20__VolumePerLengthUom__L_x002fm = 11,
	eml20__VolumePerLengthUom__m3_x002fkm = 12,
	eml20__VolumePerLengthUom__m3_x002fm = 13
};
#endif

/* resqml2_0_1ForGsoap.h:11674 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom (-755)

/* eml20:EnergyPerVolumeUom */
enum eml20__EnergyPerVolumeUom {
	eml20__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fbbl = 0,
	eml20__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fft3 = 1,
	eml20__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fgal_x005bUK_x005d = 2,
	eml20__EnergyPerVolumeUom__Btu_x005bIT_x005d_x002fgal_x005bUS_x005d = 3,
	eml20__EnergyPerVolumeUom__cal_x005bth_x005d_x002fcm3 = 4,
	eml20__EnergyPerVolumeUom__cal_x005bth_x005d_x002fmL = 5,
	eml20__EnergyPerVolumeUom__cal_x005bth_x005d_x002fmm3 = 6,
	eml20__EnergyPerVolumeUom__erg_x002fcm3 = 7,
	eml20__EnergyPerVolumeUom__erg_x002fm3 = 8,
	eml20__EnergyPerVolumeUom__hp_x002eh_x002fbbl = 9,
	eml20__EnergyPerVolumeUom__J_x002fdm3 = 10,
	eml20__EnergyPerVolumeUom__J_x002fm3 = 11,
	eml20__EnergyPerVolumeUom__kcal_x005bth_x005d_x002fcm3 = 12,
	eml20__EnergyPerVolumeUom__kcal_x005bth_x005d_x002fm3 = 13,
	eml20__EnergyPerVolumeUom__kJ_x002fdm3 = 14,
	eml20__EnergyPerVolumeUom__kJ_x002fm3 = 15,
	eml20__EnergyPerVolumeUom__kW_x002eh_x002fdm3 = 16,
	eml20__EnergyPerVolumeUom__kW_x002eh_x002fm3 = 17,
	eml20__EnergyPerVolumeUom__lbf_x002eft_x002fbbl = 18,
	eml20__EnergyPerVolumeUom__lbf_x002eft_x002fgal_x005bUS_x005d = 19,
	eml20__EnergyPerVolumeUom__MJ_x002fm3 = 20,
	eml20__EnergyPerVolumeUom__MW_x002eh_x002fm3 = 21,
	eml20__EnergyPerVolumeUom__tonf_x005bUS_x005d_x002emi_x002fbbl = 22
};
#endif

/* resqml2_0_1ForGsoap.h:11796 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom (-756)

/* eml20:MagneticPermeabilityUom */
enum eml20__MagneticPermeabilityUom {
	eml20__MagneticPermeabilityUom__H_x002fm = 0,
	eml20__MagneticPermeabilityUom__uH_x002fm = 1
};
#endif

/* resqml2_0_1ForGsoap.h:11813 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom (-757)

/* eml20:ReciprocalMassUom */
enum eml20__ReciprocalMassUom {
	eml20__ReciprocalMassUom__1_x002fg = 0,
	eml20__ReciprocalMassUom__1_x002fkg = 1,
	eml20__ReciprocalMassUom__1_x002flbm = 2
};
#endif

/* resqml2_0_1ForGsoap.h:11835 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom (-758)

/* eml20:DynamicViscosityUom */
enum eml20__DynamicViscosityUom {
	eml20__DynamicViscosityUom__P = 'P',
	eml20__DynamicViscosityUom__cP = 'Q',
	eml20__DynamicViscosityUom__dP = 'R',
	eml20__DynamicViscosityUom__dyne_x002es_x002fcm2 = 'S',
	eml20__DynamicViscosityUom__EP = 'T',
	eml20__DynamicViscosityUom__fP = 'U',
	eml20__DynamicViscosityUom__GP = 'V',
	eml20__DynamicViscosityUom__kgf_x002es_x002fm2 = 'W',
	eml20__DynamicViscosityUom__kP = 'X',
	eml20__DynamicViscosityUom__lbf_x002es_x002fft2 = 'Y',
	eml20__DynamicViscosityUom__lbf_x002es_x002fin2 = 'Z',
	eml20__DynamicViscosityUom__mP = 91,
	eml20__DynamicViscosityUom__MP = 92,
	eml20__DynamicViscosityUom__mPa_x002es = 93,
	eml20__DynamicViscosityUom__N_x002es_x002fm2 = 94,
	eml20__DynamicViscosityUom__nP = 95,
	eml20__DynamicViscosityUom__Pa_x002es = 96,
	eml20__DynamicViscosityUom__pP = 'a',
	eml20__DynamicViscosityUom__psi_x002es = 'b',
	eml20__DynamicViscosityUom__TP = 'c',
	eml20__DynamicViscosityUom__uP = 'd'
};
#endif

/* resqml2_0_1ForGsoap.h:11947 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom (-759)

/* eml20:PotentialDifferencePerPowerDropUom */
enum eml20__PotentialDifferencePerPowerDropUom {
	eml20__PotentialDifferencePerPowerDropUom__V_x002fB = 0,
	eml20__PotentialDifferencePerPowerDropUom__V_x002fdB = 1
};
#endif

/* resqml2_0_1ForGsoap.h:11964 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom (-760)

/* eml20:AreaPerTimeUom */
enum eml20__AreaPerTimeUom {
	eml20__AreaPerTimeUom__cm2_x002fs = 0,
	eml20__AreaPerTimeUom__ft2_x002fh = 1,
	eml20__AreaPerTimeUom__ft2_x002fs = 2,
	eml20__AreaPerTimeUom__in2_x002fs = 3,
	eml20__AreaPerTimeUom__m2_x002fd = 4,
	eml20__AreaPerTimeUom__m2_x002fh = 5,
	eml20__AreaPerTimeUom__m2_x002fs = 6,
	eml20__AreaPerTimeUom__mm2_x002fs = 7
};
#endif

/* resqml2_0_1ForGsoap.h:12011 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom (-761)

/* eml20:HeatCapacityUom */
enum eml20__HeatCapacityUom {
	eml20__HeatCapacityUom__J_x002fdeltaK = 0
};
#endif

/* resqml2_0_1ForGsoap.h:12023 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom (-762)

/* eml20:MolarEnergyUom */
enum eml20__MolarEnergyUom {
	eml20__MolarEnergyUom__Btu_x005bIT_x005d_x002flbmol = 0,
	eml20__MolarEnergyUom__J_x002fmol = 1,
	eml20__MolarEnergyUom__kcal_x005bth_x005d_x002fmol = 2,
	eml20__MolarEnergyUom__kJ_x002fkmol = 3,
	eml20__MolarEnergyUom__MJ_x002fkmol = 4
};
#endif

/* resqml2_0_1ForGsoap.h:12055 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom (-763)

/* eml20:ElectricConductanceUom */
enum eml20__ElectricConductanceUom {
	eml20__ElectricConductanceUom__S = 'S',
	eml20__ElectricConductanceUom__cS = 'T',
	eml20__ElectricConductanceUom__dS = 'U',
	eml20__ElectricConductanceUom__ES = 'V',
	eml20__ElectricConductanceUom__fS = 'W',
	eml20__ElectricConductanceUom__GS = 'X',
	eml20__ElectricConductanceUom__kS = 'Y',
	eml20__ElectricConductanceUom__mS = 'Z',
	eml20__ElectricConductanceUom__MS = 91,
	eml20__ElectricConductanceUom__nS = 92,
	eml20__ElectricConductanceUom__pS = 93,
	eml20__ElectricConductanceUom__TS = 94,
	eml20__ElectricConductanceUom__uS = 95
};
#endif

/* resqml2_0_1ForGsoap.h:12127 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom (-764)

/* eml20:MomentumUom */
enum eml20__MomentumUom {
	eml20__MomentumUom__kg_x002em_x002fs = 0,
	eml20__MomentumUom__lbm_x002eft_x002fs = 1
};
#endif

/* resqml2_0_1ForGsoap.h:12144 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom (-765)

/* eml20:MassPerTimePerAreaUom */
enum eml20__MassPerTimePerAreaUom {
	eml20__MassPerTimePerAreaUom__g_x002eft_x002f_x0028cm3_x002es_x0029 = 0,
	eml20__MassPerTimePerAreaUom__g_x002em_x002f_x0028cm3_x002es_x0029 = 1,
	eml20__MassPerTimePerAreaUom__kg_x002f_x0028m2_x002es_x0029 = 2,
	eml20__MassPerTimePerAreaUom__kPa_x002es_x002fm = 3,
	eml20__MassPerTimePerAreaUom__lbm_x002f_x0028ft2_x002eh_x0029 = 4,
	eml20__MassPerTimePerAreaUom__lbm_x002f_x0028ft2_x002es_x0029 = 5,
	eml20__MassPerTimePerAreaUom__MPa_x002es_x002fm = 6
};
#endif

/* resqml2_0_1ForGsoap.h:12186 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom (-766)

/* eml20:PowerPerVolumeUom */
enum eml20__PowerPerVolumeUom {
	eml20__PowerPerVolumeUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x0029 = 0,
	eml20__PowerPerVolumeUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x0029 = 1,
	eml20__PowerPerVolumeUom__cal_x005bth_x005d_x002f_x0028h_x002ecm3_x0029 = 2,
	eml20__PowerPerVolumeUom__cal_x005bth_x005d_x002f_x0028s_x002ecm3_x0029 = 3,
	eml20__PowerPerVolumeUom__hp_x002fft3 = 4,
	eml20__PowerPerVolumeUom__kW_x002fm3 = 5,
	eml20__PowerPerVolumeUom__uW_x002fm3 = 6,
	eml20__PowerPerVolumeUom__W_x002fm3 = 7
};
#endif

/* resqml2_0_1ForGsoap.h:12233 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom (-767)

/* eml20:FrequencyUom */
enum eml20__FrequencyUom {
	eml20__FrequencyUom__cHz = 0,
	eml20__FrequencyUom__dHz = 1,
	eml20__FrequencyUom__EHz = 2,
	eml20__FrequencyUom__fHz = 3,
	eml20__FrequencyUom__GHz = 4,
	eml20__FrequencyUom__Hz = 5,
	eml20__FrequencyUom__kHz = 6,
	eml20__FrequencyUom__mHz = 7,
	eml20__FrequencyUom__MHz = 8,
	eml20__FrequencyUom__nHz = 9,
	eml20__FrequencyUom__pHz = 10,
	eml20__FrequencyUom__THz = 11,
	eml20__FrequencyUom__uHz = 12
};
#endif

/* resqml2_0_1ForGsoap.h:12305 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom (-768)

/* eml20:LuminousIntensityUom */
enum eml20__LuminousIntensityUom {
	eml20__LuminousIntensityUom__cd = 0,
	eml20__LuminousIntensityUom__kcd = 1
};
#endif

/* resqml2_0_1ForGsoap.h:12322 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom (-769)

/* eml20:AbsorbedDoseUom */
enum eml20__AbsorbedDoseUom {
	eml20__AbsorbedDoseUom__cGy = 0,
	eml20__AbsorbedDoseUom__crd = 1,
	eml20__AbsorbedDoseUom__dGy = 2,
	eml20__AbsorbedDoseUom__drd = 3,
	eml20__AbsorbedDoseUom__EGy = 4,
	eml20__AbsorbedDoseUom__Erd = 5,
	eml20__AbsorbedDoseUom__fGy = 6,
	eml20__AbsorbedDoseUom__frd = 7,
	eml20__AbsorbedDoseUom__GGy = 8,
	eml20__AbsorbedDoseUom__Grd = 9,
	eml20__AbsorbedDoseUom__Gy = 10,
	eml20__AbsorbedDoseUom__kGy = 11,
	eml20__AbsorbedDoseUom__krd = 12,
	eml20__AbsorbedDoseUom__mGy = 13,
	eml20__AbsorbedDoseUom__MGy = 14,
	eml20__AbsorbedDoseUom__Mrd = 15,
	eml20__AbsorbedDoseUom__mrd = 16,
	eml20__AbsorbedDoseUom__nGy = 17,
	eml20__AbsorbedDoseUom__nrd = 18,
	eml20__AbsorbedDoseUom__pGy = 19,
	eml20__AbsorbedDoseUom__prd = 20,
	eml20__AbsorbedDoseUom__rd = 21,
	eml20__AbsorbedDoseUom__TGy = 22,
	eml20__AbsorbedDoseUom__Trd = 23,
	eml20__AbsorbedDoseUom__uGy = 24,
	eml20__AbsorbedDoseUom__urd = 25
};
#endif

/* resqml2_0_1ForGsoap.h:12459 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom (-770)

/* eml20:TimePerMassUom */
enum eml20__TimePerMassUom {
	eml20__TimePerMassUom__s_x002fkg = 0
};
#endif

/* resqml2_0_1ForGsoap.h:12471 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom (-771)

/* eml20:VolumetricHeatTransferCoefficientUom */
enum eml20__VolumetricHeatTransferCoefficientUom {
	eml20__VolumetricHeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028h_x002eft3_x002edeltaF_x0029 = 0,
	eml20__VolumetricHeatTransferCoefficientUom__Btu_x005bIT_x005d_x002f_x0028s_x002eft3_x002edeltaF_x0029 = 1,
	eml20__VolumetricHeatTransferCoefficientUom__kW_x002f_x0028m3_x002edeltaK_x0029 = 2,
	eml20__VolumetricHeatTransferCoefficientUom__W_x002f_x0028m3_x002edeltaK_x0029 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:12498 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom (-772)

/* eml20:NormalizedPowerUom */
enum eml20__NormalizedPowerUom {
	eml20__NormalizedPowerUom__B_x002eW = 0,
	eml20__NormalizedPowerUom__dB_x002eMW = 1,
	eml20__NormalizedPowerUom__dB_x002emW = 2,
	eml20__NormalizedPowerUom__dB_x002eW = 3
};
#endif

/* resqml2_0_1ForGsoap.h:12525 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom (-773)

/* eml20:EnergyLengthPerTimeAreaTemperatureUom */
enum eml20__EnergyLengthPerTimeAreaTemperatureUom {
	eml20__EnergyLengthPerTimeAreaTemperatureUom__Btu_x005bIT_x005d_x002ein_x002f_x0028h_x002eft2_x002edeltaF_x0029 = 0,
	eml20__EnergyLengthPerTimeAreaTemperatureUom__J_x002em_x002f_x0028s_x002em2_x002edeltaK_x0029 = 1,
	eml20__EnergyLengthPerTimeAreaTemperatureUom__kJ_x002em_x002f_x0028h_x002em2_x002edeltaK_x0029 = 2,
	eml20__EnergyLengthPerTimeAreaTemperatureUom__W_x002f_x0028m_x002edeltaK_x0029 = 3
};
#endif

/* resqml2_0_1ForGsoap.h:12552 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom (-774)

/* eml20:PressureTimePerVolumeUom */
enum eml20__PressureTimePerVolumeUom {
	eml20__PressureTimePerVolumeUom__Pa_x002es_x002fm3 = 0,
	eml20__PressureTimePerVolumeUom__psi_x002ed_x002fbbl = 1
};
#endif

/* resqml2_0_1ForGsoap.h:12569 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom (-775)

/* eml20:VolumePerVolumeUom */
enum eml20__VolumePerVolumeUom {
	eml20__VolumePerVolumeUom___x0025 = 0,
	eml20__VolumePerVolumeUom___x0025_x005bvol_x005d = 1,
	eml20__VolumePerVolumeUom__0_x002e001_x0020bbl_x002fft3 = 2,
	eml20__VolumePerVolumeUom__0_x002e001_x0020bbl_x002fm3 = 3,
	eml20__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUK_x005d_x002fbbl = 4,
	eml20__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUK_x005d_x002fgal_x005bUK_x005d = 5,
	eml20__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fbbl = 6,
	eml20__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fft3 = 7,
	eml20__VolumePerVolumeUom__0_x002e001_x0020gal_x005bUS_x005d_x002fgal_x005bUS_x005d = 8,
	eml20__VolumePerVolumeUom__0_x002e001_x0020pt_x005bUK_x005d_x002fbbl = 9,
	eml20__VolumePerVolumeUom__0_x002e01_x0020bbl_x002fbbl = 10,
	eml20__VolumePerVolumeUom__0_x002e1_x0020gal_x005bUS_x005d_x002fbbl = 11,
	eml20__VolumePerVolumeUom__0_x002e1_x0020L_x002fbbl = 12,
	eml20__VolumePerVolumeUom__0_x002e1_x0020pt_x005bUS_x005d_x002fbbl = 13,
	eml20__VolumePerVolumeUom__1000_x0020ft3_x002fbbl = 14,
	eml20__VolumePerVolumeUom__1000_x0020m3_x002fm3 = 15,
	eml20__VolumePerVolumeUom__1E_6_x0020acre_x002eft_x002fbbl = 16,
	eml20__VolumePerVolumeUom__1E_6_x0020bbl_x002fft3 = 17,
	eml20__VolumePerVolumeUom__1E_6_x0020bbl_x002fm3 = 18,
	eml20__VolumePerVolumeUom__1E6_x0020bbl_x002f_x0028acre_x002eft_x0029 = 19,
	eml20__VolumePerVolumeUom__1E6_x0020ft3_x002f_x0028acre_x002eft_x0029 = 20,
	eml20__VolumePerVolumeUom__1E6_x0020ft3_x002fbbl = 21,
	eml20__VolumePerVolumeUom__bbl_x002f_x0028acre_x002eft_x0029 = 22,
	eml20__VolumePerVolumeUom__bbl_x002fbbl = 23,
	eml20__VolumePerVolumeUom__bbl_x002fft3 = 24,
	eml20__VolumePerVolumeUom__bbl_x002fm3 = 25,
	eml20__VolumePerVolumeUom__cEuc = 26,
	eml20__VolumePerVolumeUom__cm3_x002fcm3 = 27,
	eml20__VolumePerVolumeUom__cm3_x002fL = 28,
	eml20__VolumePerVolumeUom__cm3_x002fm3 = 29,
	eml20__VolumePerVolumeUom__dm3_x002fm3 = 30,
	eml20__VolumePerVolumeUom__Euc = 31,
	eml20__VolumePerVolumeUom__ft3_x002fbbl = 32,
	eml20__VolumePerVolumeUom__ft3_x002fft3 = 33,
	eml20__VolumePerVolumeUom__gal_x005bUK_x005d_x002fft3 = 34,
	eml20__VolumePerVolumeUom__gal_x005bUS_x005d_x002fbbl = 35,
	eml20__VolumePerVolumeUom__gal_x005bUS_x005d_x002fft3 = 36,
	eml20__VolumePerVolumeUom__L_x002fm3 = 37,
	eml20__VolumePerVolumeUom__m3_x002f_x0028ha_x002em_x0029 = 38,
	eml20__VolumePerVolumeUom__m3_x002fbbl = 39,
	eml20__VolumePerVolumeUom__m3_x002fm3 = 40,
	eml20__VolumePerVolumeUom__mL_x002fgal_x005bUK_x005d = 41,
	eml20__VolumePerVolumeUom__mL_x002fgal_x005bUS_x005d = 42,
	eml20__VolumePerVolumeUom__mL_x002fmL = 43,
	eml20__VolumePerVolumeUom__ppk = 44,
	eml20__VolumePerVolumeUom__ppm = 45,
	eml20__VolumePerVolumeUom__ppm_x005bvol_x005d = 46
};
#endif

/* resqml2_0_1ForGsoap.h:12811 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom (-776)

/* eml20:AnglePerVolumeUom */
enum eml20__AnglePerVolumeUom {
	eml20__AnglePerVolumeUom__rad_x002fft3 = 0,
	eml20__AnglePerVolumeUom__rad_x002fm3 = 1
};
#endif

/* resqml2_0_1ForGsoap.h:12828 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom (-777)

/* eml20:DiffusionCoefficientUom */
enum eml20__DiffusionCoefficientUom {
	eml20__DiffusionCoefficientUom__m2_x002fs = 0
};
#endif

/* resqml2_0_1ForGsoap.h:12840 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom (-778)

/* eml20:TimePerTimeUom */
enum eml20__TimePerTimeUom {
	eml20__TimePerTimeUom___x0025 = 0,
	eml20__TimePerTimeUom__Euc = 1,
	eml20__TimePerTimeUom__ms_x002fs = 2,
	eml20__TimePerTimeUom__s_x002fs = 3
};
#endif

/* resqml2_0_1ForGsoap.h:12867 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom (-779)

/* eml20:EnergyPerMassPerTimeUom */
enum eml20__EnergyPerMassPerTimeUom {
	eml20__EnergyPerMassPerTimeUom__mrem_x002fh = 0,
	eml20__EnergyPerMassPerTimeUom__mSv_x002fh = 1,
	eml20__EnergyPerMassPerTimeUom__rem_x002fh = 2,
	eml20__EnergyPerMassPerTimeUom__Sv_x002fh = 3,
	eml20__EnergyPerMassPerTimeUom__Sv_x002fs = 4
};
#endif

/* resqml2_0_1ForGsoap.h:12899 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom (-780)

/* eml20:VolumePerMassUom */
enum eml20__VolumePerMassUom {
	eml20__VolumePerMassUom__0_x002e01_x0020L_x002fkg = 0,
	eml20__VolumePerMassUom__bbl_x002fton_x005bUK_x005d = 1,
	eml20__VolumePerMassUom__bbl_x002fton_x005bUS_x005d = 2,
	eml20__VolumePerMassUom__cm3_x002fg = 3,
	eml20__VolumePerMassUom__dm3_x002fkg = 4,
	eml20__VolumePerMassUom__dm3_x002ft = 5,
	eml20__VolumePerMassUom__ft3_x002fkg = 6,
	eml20__VolumePerMassUom__ft3_x002flbm = 7,
	eml20__VolumePerMassUom__ft3_x002fsack_x005b94lbm_x005d = 8,
	eml20__VolumePerMassUom__gal_x005bUK_x005d_x002flbm = 9,
	eml20__VolumePerMassUom__gal_x005bUS_x005d_x002flbm = 10,
	eml20__VolumePerMassUom__gal_x005bUS_x005d_x002fsack_x005b94lbm_x005d = 11,
	eml20__VolumePerMassUom__gal_x005bUS_x005d_x002fton_x005bUK_x005d = 12,
	eml20__VolumePerMassUom__gal_x005bUS_x005d_x002fton_x005bUS_x005d = 13,
	eml20__VolumePerMassUom__L_x002fkg = 14,
	eml20__VolumePerMassUom__L_x002ft = 15,
	eml20__VolumePerMassUom__L_x002fton_x005bUK_x005d = 16,
	eml20__VolumePerMassUom__m3_x002fg = 17,
	eml20__VolumePerMassUom__m3_x002fkg = 18,
	eml20__VolumePerMassUom__m3_x002ft = 19,
	eml20__VolumePerMassUom__m3_x002fton_x005bUK_x005d = 20,
	eml20__VolumePerMassUom__m3_x002fton_x005bUS_x005d = 21
};
#endif

/* resqml2_0_1ForGsoap.h:13016 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom (-781)

/* eml20:TemperatureIntervalPerLengthUom */
enum eml20__TemperatureIntervalPerLengthUom {
	eml20__TemperatureIntervalPerLengthUom__0_x002e01_x0020deltaF_x002fft = 0,
	eml20__TemperatureIntervalPerLengthUom__deltaC_x002fft = 1,
	eml20__TemperatureIntervalPerLengthUom__deltaC_x002fhm = 2,
	eml20__TemperatureIntervalPerLengthUom__deltaC_x002fkm = 3,
	eml20__TemperatureIntervalPerLengthUom__deltaC_x002fm = 4,
	eml20__TemperatureIntervalPerLengthUom__deltaF_x002fft = 5,
	eml20__TemperatureIntervalPerLengthUom__deltaF_x002fm = 6,
	eml20__TemperatureIntervalPerLengthUom__deltaK_x002fkm = 7,
	eml20__TemperatureIntervalPerLengthUom__deltaK_x002fm = 8
};
#endif

/* resqml2_0_1ForGsoap.h:13068 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom (-782)

/* eml20:AttenuationPerFrequencyIntervalUom */
enum eml20__AttenuationPerFrequencyIntervalUom {
	eml20__AttenuationPerFrequencyIntervalUom__B_x002fO = 0,
	eml20__AttenuationPerFrequencyIntervalUom__dB_x002fO = 1
};
#endif

/* resqml2_0_1ForGsoap.h:13085 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom (-783)

/* eml20:IsothermalCompressibilityUom */
enum eml20__IsothermalCompressibilityUom {
	eml20__IsothermalCompressibilityUom__dm3_x002f_x0028kW_x002eh_x0029 = 0,
	eml20__IsothermalCompressibilityUom__dm3_x002fMJ = 1,
	eml20__IsothermalCompressibilityUom__m3_x002f_x0028kW_x002eh_x0029 = 2,
	eml20__IsothermalCompressibilityUom__m3_x002fJ = 3,
	eml20__IsothermalCompressibilityUom__mm3_x002fJ = 4,
	eml20__IsothermalCompressibilityUom__pt_x005bUK_x005d_x002f_x0028hp_x002eh_x0029 = 5
};
#endif

/* resqml2_0_1ForGsoap.h:13122 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom (-784)

/* eml20:ElectricResistanceUom */
enum eml20__ElectricResistanceUom {
	eml20__ElectricResistanceUom__cohm = 0,
	eml20__ElectricResistanceUom__dohm = 1,
	eml20__ElectricResistanceUom__Eohm = 2,
	eml20__ElectricResistanceUom__fohm = 3,
	eml20__ElectricResistanceUom__Gohm = 4,
	eml20__ElectricResistanceUom__kohm = 5,
	eml20__ElectricResistanceUom__Mohm = 6,
	eml20__ElectricResistanceUom__mohm = 7,
	eml20__ElectricResistanceUom__nohm = 8,
	eml20__ElectricResistanceUom__ohm = 9,
	eml20__ElectricResistanceUom__pohm = 10,
	eml20__ElectricResistanceUom__Tohm = 11,
	eml20__ElectricResistanceUom__uohm = 12
};
#endif

/* resqml2_0_1ForGsoap.h:13194 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom (-785)

/* eml20:ReciprocalVolumeUom */
enum eml20__ReciprocalVolumeUom {
	eml20__ReciprocalVolumeUom__1_x002fbbl = 0,
	eml20__ReciprocalVolumeUom__1_x002fft3 = 1,
	eml20__ReciprocalVolumeUom__1_x002fgal_x005bUK_x005d = 2,
	eml20__ReciprocalVolumeUom__1_x002fgal_x005bUS_x005d = 3,
	eml20__ReciprocalVolumeUom__1_x002fL = 4,
	eml20__ReciprocalVolumeUom__1_x002fm3 = 5
};
#endif

/* resqml2_0_1ForGsoap.h:13231 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom (-786)

/* eml20:PressureUom */
enum eml20__PressureUom {
	eml20__PressureUom__0_x002e01_x0020lbf_x002fft2 = 0,
	eml20__PressureUom__at = 1,
	eml20__PressureUom__atm = 2,
	eml20__PressureUom__bar = 3,
	eml20__PressureUom__cmH2O_x005b4degC_x005d = 4,
	eml20__PressureUom__cPa = 5,
	eml20__PressureUom__dPa = 6,
	eml20__PressureUom__dyne_x002fcm2 = 7,
	eml20__PressureUom__EPa = 8,
	eml20__PressureUom__fPa = 9,
	eml20__PressureUom__GPa = 10,
	eml20__PressureUom__hbar = 11,
	eml20__PressureUom__inH2O_x005b39degF_x005d = 12,
	eml20__PressureUom__inH2O_x005b60degF_x005d = 13,
	eml20__PressureUom__inHg_x005b32degF_x005d = 14,
	eml20__PressureUom__inHg_x005b60degF_x005d = 15,
	eml20__PressureUom__kgf_x002fcm2 = 16,
	eml20__PressureUom__kgf_x002fm2 = 17,
	eml20__PressureUom__kgf_x002fmm2 = 18,
	eml20__PressureUom__kN_x002fm2 = 19,
	eml20__PressureUom__kPa = 20,
	eml20__PressureUom__kpsi = 21,
	eml20__PressureUom__lbf_x002fft2 = 22,
	eml20__PressureUom__mbar = 23,
	eml20__PressureUom__mmHg_x005b0degC_x005d = 24,
	eml20__PressureUom__mPa = 25,
	eml20__PressureUom__MPa = 26,
	eml20__PressureUom__Mpsi = 27,
	eml20__PressureUom__N_x002fm2 = 28,
	eml20__PressureUom__N_x002fmm2 = 29,
	eml20__PressureUom__nPa = 30,
	eml20__PressureUom__Pa = 31,
	eml20__PressureUom__pPa = 32,
	eml20__PressureUom__psi = 33,
	eml20__PressureUom__tonf_x005bUK_x005d_x002fft2 = 34,
	eml20__PressureUom__tonf_x005bUS_x005d_x002fft2 = 35,
	eml20__PressureUom__tonf_x005bUS_x005d_x002fin2 = 36,
	eml20__PressureUom__torr = 37,
	eml20__PressureUom__TPa = 38,
	eml20__PressureUom__ubar = 39,
	eml20__PressureUom__umHg_x005b0degC_x005d = 40,
	eml20__PressureUom__uPa = 41,
	eml20__PressureUom__upsi = 42
};
#endif

/* resqml2_0_1ForGsoap.h:13453 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom (-787)

/* eml20:AreaPerAreaUom */
enum eml20__AreaPerAreaUom {
	eml20__AreaPerAreaUom___x0025 = 0,
	eml20__AreaPerAreaUom___x0025_x005barea_x005d = 1,
	eml20__AreaPerAreaUom__cEuc = 2,
	eml20__AreaPerAreaUom__Euc = 3,
	eml20__AreaPerAreaUom__in2_x002fft2 = 4,
	eml20__AreaPerAreaUom__in2_x002fin2 = 5,
	eml20__AreaPerAreaUom__m2_x002fm2 = 6,
	eml20__AreaPerAreaUom__mm2_x002fmm2 = 7
};
#endif

/* resqml2_0_1ForGsoap.h:13500 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom (-788)

/* eml20:AngularVelocityUom */
enum eml20__AngularVelocityUom {
	eml20__AngularVelocityUom__dega_x002fh = 0,
	eml20__AngularVelocityUom__dega_x002fmin = 1,
	eml20__AngularVelocityUom__dega_x002fs = 2,
	eml20__AngularVelocityUom__rad_x002fs = 3,
	eml20__AngularVelocityUom__rev_x002fs = 4,
	eml20__AngularVelocityUom__rpm = 5
};
#endif

/* resqml2_0_1ForGsoap.h:13537 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom (-789)

/* eml20:TimePerVolumeUom */
enum eml20__TimePerVolumeUom {
	eml20__TimePerVolumeUom__0_x002e001_x0020d_x002fft3 = 0,
	eml20__TimePerVolumeUom__d_x002fbbl = 1,
	eml20__TimePerVolumeUom__d_x002fft3 = 2,
	eml20__TimePerVolumeUom__d_x002fm3 = 3,
	eml20__TimePerVolumeUom__h_x002fft3 = 4,
	eml20__TimePerVolumeUom__h_x002fm3 = 5,
	eml20__TimePerVolumeUom__s_x002fft3 = 6,
	eml20__TimePerVolumeUom__s_x002fL = 7,
	eml20__TimePerVolumeUom__s_x002fm3 = 8,
	eml20__TimePerVolumeUom__s_x002fqt_x005bUK_x005d = 9,
	eml20__TimePerVolumeUom__s_x002fqt_x005bUS_x005d = 10
};
#endif

/* resqml2_0_1ForGsoap.h:13599 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom (-790)

/* eml20:EnergyLengthPerAreaUom */
enum eml20__EnergyLengthPerAreaUom {
	eml20__EnergyLengthPerAreaUom__J_x002em_x002fm2 = 0,
	eml20__EnergyLengthPerAreaUom__kcal_x005bth_x005d_x002em_x002fcm2 = 1
};
#endif

/* resqml2_0_1ForGsoap.h:13616 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom (-791)

/* eml20:ElectricResistancePerLengthUom */
enum eml20__ElectricResistancePerLengthUom {
	eml20__ElectricResistancePerLengthUom__ohm_x002fm = 0,
	eml20__ElectricResistancePerLengthUom__uohm_x002fft = 1,
	eml20__ElectricResistancePerLengthUom__uohm_x002fm = 2
};
#endif

/* resqml2_0_1ForGsoap.h:13638 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom (-792)

/* eml20:ForcePerLengthUom */
enum eml20__ForcePerLengthUom {
	eml20__ForcePerLengthUom__0_x002e01_x0020lbf_x002fft = 0,
	eml20__ForcePerLengthUom__1_x002f30_x0020lbf_x002fm = 1,
	eml20__ForcePerLengthUom__1_x002f30_x0020N_x002fm = 2,
	eml20__ForcePerLengthUom__dyne_x002fcm = 3,
	eml20__ForcePerLengthUom__kgf_x002fcm = 4,
	eml20__ForcePerLengthUom__kN_x002fm = 5,
	eml20__ForcePerLengthUom__lbf_x002fft = 6,
	eml20__ForcePerLengthUom__lbf_x002fin = 7,
	eml20__ForcePerLengthUom__mN_x002fkm = 8,
	eml20__ForcePerLengthUom__mN_x002fm = 9,
	eml20__ForcePerLengthUom__N_x002fm = 10,
	eml20__ForcePerLengthUom__pdl_x002fcm = 11,
	eml20__ForcePerLengthUom__tonf_x005bUK_x005d_x002fft = 12,
	eml20__ForcePerLengthUom__tonf_x005bUS_x005d_x002fft = 13
};
#endif

/* resqml2_0_1ForGsoap.h:13715 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom (-793)

/* eml20:ReciprocalPressureUom */
enum eml20__ReciprocalPressureUom {
	eml20__ReciprocalPressureUom__1_x002fbar = 0,
	eml20__ReciprocalPressureUom__1_x002fkPa = 1,
	eml20__ReciprocalPressureUom__1_x002fPa = 2,
	eml20__ReciprocalPressureUom__1_x002fpPa = 3,
	eml20__ReciprocalPressureUom__1_x002fpsi = 4,
	eml20__ReciprocalPressureUom__1_x002fupsi = 5
};
#endif

/* resqml2_0_1ForGsoap.h:13752 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom (-794)

/* eml20:LightExposureUom */
enum eml20__LightExposureUom {
	eml20__LightExposureUom__footcandle_x002es = 0,
	eml20__LightExposureUom__lx_x002es = 1
};
#endif

/* resqml2_0_1ForGsoap.h:13769 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom (-795)

/* eml20:EnergyPerAreaUom */
enum eml20__EnergyPerAreaUom {
	eml20__EnergyPerAreaUom__erg_x002fcm2 = 0,
	eml20__EnergyPerAreaUom__J_x002fcm2 = 1,
	eml20__EnergyPerAreaUom__J_x002fm2 = 2,
	eml20__EnergyPerAreaUom__kgf_x002em_x002fcm2 = 3,
	eml20__EnergyPerAreaUom__lbf_x002eft_x002fin2 = 4,
	eml20__EnergyPerAreaUom__mJ_x002fcm2 = 5,
	eml20__EnergyPerAreaUom__mJ_x002fm2 = 6,
	eml20__EnergyPerAreaUom__N_x002fm = 7
};
#endif

/* resqml2_0_1ForGsoap.h:13816 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom (-796)

/* eml20:MagneticDipoleMomentUom */
enum eml20__MagneticDipoleMomentUom {
	eml20__MagneticDipoleMomentUom__Wb_x002em = 0
};
#endif

/* resqml2_0_1ForGsoap.h:13828 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom (-797)

/* eml20:DigitalStorageUom */
enum eml20__DigitalStorageUom {
	eml20__DigitalStorageUom__bit = 0,
	eml20__DigitalStorageUom__byte = 1,
	eml20__DigitalStorageUom__Kibyte = 2,
	eml20__DigitalStorageUom__Mibyte = 3
};
#endif

/* resqml2_0_1ForGsoap.h:22135 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition (-1027)

/* gml:RelatedTimeType-relativePosition */
enum _gml__RelatedTimeType_relativePosition {
	_gml__RelatedTimeType_relativePosition__Before = 0,
	_gml__RelatedTimeType_relativePosition__After = 1,
	_gml__RelatedTimeType_relativePosition__Begins = 2,
	_gml__RelatedTimeType_relativePosition__Ends = 3,
	_gml__RelatedTimeType_relativePosition__During = 4,
	_gml__RelatedTimeType_relativePosition__Equals = 5,
	_gml__RelatedTimeType_relativePosition__Contains = 6,
	_gml__RelatedTimeType_relativePosition__Overlaps = 7,
	_gml__RelatedTimeType_relativePosition__Meets = 8,
	_gml__RelatedTimeType_relativePosition__OverlappedBy = 9,
	_gml__RelatedTimeType_relativePosition__MetBy = 10,
	_gml__RelatedTimeType_relativePosition__BegunBy = 11,
	_gml__RelatedTimeType_relativePosition__EndedBy = 12
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/* custom/struct_tm.h:80 */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

typedef struct tm xsd__dateTime;
#endif

/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class resqml20__PropertyKindFacet;	/* resqml2_0_1ForGsoap.h:281 */
class resqml20__StringLookup;	/* resqml2_0_1ForGsoap.h:287 */
class resqml20__PatchOfPoints;	/* resqml2_0_1ForGsoap.h:297 */
class resqml20__AbstractPropertyKind;	/* resqml2_0_1ForGsoap.h:317 */
class resqml20__PatchOfValues;	/* resqml2_0_1ForGsoap.h:319 */
class resqml20__AbstractValueArray;	/* resqml2_0_1ForGsoap.h:321 */
class resqml20__PropertyValuesPatch;	/* resqml2_0_1ForGsoap.h:335 */
class resqml20__DoubleLookup;	/* resqml2_0_1ForGsoap.h:343 */
class resqml20__Point3dOffset;	/* resqml2_0_1ForGsoap.h:347 */
class resqml20__AbstractPoint3dArray;	/* resqml2_0_1ForGsoap.h:363 */
class resqml20__AbstractGeometry;	/* resqml2_0_1ForGsoap.h:365 */
class resqml20__ThreePoint3d;	/* resqml2_0_1ForGsoap.h:369 */
class resqml20__AbstractParametricLineArray;	/* resqml2_0_1ForGsoap.h:377 */
class resqml20__ParametricLineIntersections;	/* resqml2_0_1ForGsoap.h:379 */
class resqml20__AbstractSeismicCoordinates;	/* resqml2_0_1ForGsoap.h:391 */
class resqml20__Patch;	/* resqml2_0_1ForGsoap.h:397 */
class resqml20__ElementIndices;	/* resqml2_0_1ForGsoap.h:399 */
class resqml20__RepresentationIdentity;	/* resqml2_0_1ForGsoap.h:407 */
class resqml20__ElementIdentity;	/* resqml2_0_1ForGsoap.h:411 */
class resqml20__PatchOfGeometry;	/* resqml2_0_1ForGsoap.h:415 */
class resqml20__AdditionalGridTopology;	/* resqml2_0_1ForGsoap.h:421 */
class resqml20__CellStratigraphicUnits;	/* resqml2_0_1ForGsoap.h:431 */
class resqml20__SubnodeTopology;	/* resqml2_0_1ForGsoap.h:437 */
class resqml20__SplitFaces;	/* resqml2_0_1ForGsoap.h:439 */
struct __resqml20__IjGaps_sequence;	/* resqml2_0_1ForGsoap.h:14926 */
class resqml20__IjGaps;	/* resqml2_0_1ForGsoap.h:443 */
class resqml20__GpGridColumnLayerGrid;	/* resqml2_0_1ForGsoap.h:453 */
class resqml20__ColumnLayerSplitCoordinateLines;	/* resqml2_0_1ForGsoap.h:455 */
struct __resqml20__KGaps_sequence;	/* resqml2_0_1ForGsoap.h:15058 */
class resqml20__KGaps;	/* resqml2_0_1ForGsoap.h:459 */
class resqml20__UnstructuredColumnEdges;	/* resqml2_0_1ForGsoap.h:465 */
class resqml20__AdditionalGridPoints;	/* resqml2_0_1ForGsoap.h:467 */
class resqml20__IjSplitColumnEdges;	/* resqml2_0_1ForGsoap.h:469 */
class resqml20__IntervalStratigraphicUnits;	/* resqml2_0_1ForGsoap.h:475 */
class resqml20__Regrid;	/* resqml2_0_1ForGsoap.h:477 */
class resqml20__Activation;	/* resqml2_0_1ForGsoap.h:479 */
class resqml20__ConnectionInterpretations;	/* resqml2_0_1ForGsoap.h:485 */
class resqml20__SplitEdges;	/* resqml2_0_1ForGsoap.h:489 */
class resqml20__CellFluidPhaseUnits;	/* resqml2_0_1ForGsoap.h:491 */
class resqml20__NodesPerCell;	/* resqml2_0_1ForGsoap.h:493 */
class resqml20__Edges;	/* resqml2_0_1ForGsoap.h:497 */
class resqml20__UnstructuredGridHingeNodeFaces;	/* resqml2_0_1ForGsoap.h:513 */
struct __resqml20__CellOverlap_sequence;	/* resqml2_0_1ForGsoap.h:15514 */
class resqml20__CellOverlap;	/* resqml2_0_1ForGsoap.h:515 */
class resqml20__ColumnLayerSplitColumnEdges;	/* resqml2_0_1ForGsoap.h:517 */
struct __resqml20__OverlapVolume_sequence;	/* resqml2_0_1ForGsoap.h:15598 */
class resqml20__OverlapVolume;	/* resqml2_0_1ForGsoap.h:521 */
class resqml20__Intervals;	/* resqml2_0_1ForGsoap.h:523 */
class resqml20__AbstractParentWindow;	/* resqml2_0_1ForGsoap.h:527 */
class resqml20__TimeInterval;	/* resqml2_0_1ForGsoap.h:533 */
class resqml20__StratigraphicUnitInterpretationIndex;	/* resqml2_0_1ForGsoap.h:539 */
class resqml20__GeologicUnitInterpretationIndex;	/* resqml2_0_1ForGsoap.h:549 */
class resqml20__HorizonInterpretationIndex;	/* resqml2_0_1ForGsoap.h:557 */
class resqml20__AbstractContactInterpretationPart;	/* resqml2_0_1ForGsoap.h:567 */
class resqml20__FaultThrow;	/* resqml2_0_1ForGsoap.h:571 */
class resqml20__RockFluidUnitInterpretationIndex;	/* resqml2_0_1ForGsoap.h:577 */
class resqml20__ChronostratigraphicRank;	/* resqml2_0_1ForGsoap.h:595 */
class resqml20__Point3d;	/* resqml2_0_1ForGsoap.h:613 */
class resqml20__TimeSeriesParentage;	/* resqml2_0_1ForGsoap.h:615 */
class resqml20__TimeIndex;	/* resqml2_0_1ForGsoap.h:619 */
class resqml20__Timestamp;	/* resqml2_0_1ForGsoap.h:621 */
class resqml20__ResqmlJaggedArray;	/* resqml2_0_1ForGsoap.h:625 */
class resqml20__NameValuePair;	/* resqml2_0_1ForGsoap.h:627 */
class resqml20__WellboreTrajectoryParentIntersection;	/* resqml2_0_1ForGsoap.h:637 */
class resqml20__AbstractContactRepresentationPart;	/* resqml2_0_1ForGsoap.h:663 */
class resqml20__VolumeRegion;	/* resqml2_0_1ForGsoap.h:673 */
class resqml20__VolumeShell;	/* resqml2_0_1ForGsoap.h:675 */
class resqml20__PatchBoundaries;	/* resqml2_0_1ForGsoap.h:689 */
class resqml20__OrientedMacroFace;	/* resqml2_0_1ForGsoap.h:699 */
class resqml20__ContactIdentity;	/* resqml2_0_1ForGsoap.h:701 */
class resqml20__WitsmlWellboreReference;	/* resqml2_0_1ForGsoap.h:721 */
class resqml20__ParameterTemplate;	/* resqml2_0_1ForGsoap.h:731 */
class resqml20__AbstractParameterKey;	/* resqml2_0_1ForGsoap.h:739 */
class resqml20__AbstractActivityParameter;	/* resqml2_0_1ForGsoap.h:743 */
class resqml20__StreamlineWellbores;	/* resqml2_0_1ForGsoap.h:753 */
class resqml20__IntervalGridCells;	/* resqml2_0_1ForGsoap.h:755 */
class resqml20__TimeIndices;	/* resqml2_0_1ForGsoap.h:757 */
class eml20__CustomData;	/* resqml2_0_1ForGsoap.h:769 */
class eml20__Citation;	/* resqml2_0_1ForGsoap.h:771 */
class eml20__AbstractObject;	/* resqml2_0_1ForGsoap.h:773 */
class eml20__ObjectAlias;	/* resqml2_0_1ForGsoap.h:775 */
class eml20__AbstractVerticalCrs;	/* resqml2_0_1ForGsoap.h:787 */
class eml20__AbstractProjectedCrs;	/* resqml2_0_1ForGsoap.h:789 */
class eml20__Hdf5Dataset;	/* resqml2_0_1ForGsoap.h:797 */
class eml20__DataObjectReference;	/* resqml2_0_1ForGsoap.h:801 */
class gml__AbstractGMLType;	/* resqml2_0_1ForGsoap.h:1163 */
class gml__ReferenceType;	/* resqml2_0_1ForGsoap.h:1167 */
union _gml__union_TimePrimitivePropertyType;	/* resqml2_0_1ForGsoap.h:17228 */
struct __gml__TimePrimitivePropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17217 */
class gml__TimePrimitivePropertyType;	/* resqml2_0_1ForGsoap.h:1179 */
struct __gml__EllipsoidalCSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17294 */
class gml__EllipsoidalCSPropertyType;	/* resqml2_0_1ForGsoap.h:1181 */
struct __gml__CoordinateSystemAxisPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17360 */
class gml__CoordinateSystemAxisPropertyType;	/* resqml2_0_1ForGsoap.h:1187 */
struct __gml__CartesianCSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17426 */
class gml__CartesianCSPropertyType;	/* resqml2_0_1ForGsoap.h:1191 */
struct __gml__SphericalCSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17492 */
class gml__SphericalCSPropertyType;	/* resqml2_0_1ForGsoap.h:1195 */
struct __gml__GeodeticDatumPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17558 */
class gml__GeodeticDatumPropertyType;	/* resqml2_0_1ForGsoap.h:1199 */
struct __gml__PrimeMeridianPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17624 */
class gml__PrimeMeridianPropertyType;	/* resqml2_0_1ForGsoap.h:1205 */
struct __gml__EllipsoidPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17690 */
class gml__EllipsoidPropertyType;	/* resqml2_0_1ForGsoap.h:1213 */
union _gml__union_GeneralConversionPropertyType;	/* resqml2_0_1ForGsoap.h:17768 */
struct __gml__GeneralConversionPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17756 */
class gml__GeneralConversionPropertyType;	/* resqml2_0_1ForGsoap.h:1223 */
union _gml__union_CRSPropertyType;	/* resqml2_0_1ForGsoap.h:17841 */
struct __gml__CRSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17830 */
class gml__CRSPropertyType;	/* resqml2_0_1ForGsoap.h:1229 */
struct __gml__GeodeticCRSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17903 */
class gml__GeodeticCRSPropertyType;	/* resqml2_0_1ForGsoap.h:1231 */
struct __gml__VerticalCSPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:17965 */
class gml__VerticalCSPropertyType;	/* resqml2_0_1ForGsoap.h:1235 */
struct __gml__VerticalDatumPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18031 */
class gml__VerticalDatumPropertyType;	/* resqml2_0_1ForGsoap.h:1239 */
struct __gml__domainOfValidity_sequence;	/* resqml2_0_1ForGsoap.h:18098 */
class _gml__domainOfValidity;	/* resqml2_0_1ForGsoap.h:1243 */
class _gml__secondDefiningParameter;	/* resqml2_0_1ForGsoap.h:1245 */
union _gml__union_SecondDefiningParameter;	/* resqml2_0_1ForGsoap.h:18187 */
class _gml__SecondDefiningParameter;	/* resqml2_0_1ForGsoap.h:1247 */
union _gml__union_coordinateOperationAccuracy;	/* resqml2_0_1ForGsoap.h:18229 */
struct __gml__coordinateOperationAccuracy_sequence;	/* resqml2_0_1ForGsoap.h:18222 */
class _gml__coordinateOperationAccuracy;	/* resqml2_0_1ForGsoap.h:1249 */
union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:18310 */
struct __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18303 */
class gmd__EX_USCOREGeographicExtent_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1253 */
struct __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18370 */
class gmd__EX_USCORETemporalExtent_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1257 */
struct __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18430 */
class gmd__EX_USCOREVerticalExtent_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1261 */
struct __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18490 */
class gmd__MD_USCOREIdentifier_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1269 */
struct __gmd__CI_USCORECitation_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18550 */
class gmd__CI_USCORECitation_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1273 */
struct __gmd__CI_USCOREDate_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18610 */
class gmd__CI_USCOREDate_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1277 */
struct __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18670 */
class gmd__CI_USCOREDateTypeCode_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1281 */
struct __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18698 */
class gmd__CI_USCOREResponsibleParty_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1283 */
struct __gmd__CI_USCOREContact_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18758 */
class gmd__CI_USCOREContact_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1287 */
struct __gmd__CI_USCORETelephone_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18818 */
class gmd__CI_USCORETelephone_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1291 */
struct __gmd__CI_USCOREAddress_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18878 */
class gmd__CI_USCOREAddress_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1295 */
struct __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18938 */
class gmd__CI_USCOREOnlineResource_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1299 */
struct __gmd__URL_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:18998 */
class gmd__URL_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1303 */
struct __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19026 */
class gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1305 */
struct __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19054 */
class gmd__CI_USCORERoleCode_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1307 */
struct __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19082 */
class gmd__CI_USCOREPresentationFormCode_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1309 */
struct __gmd__CI_USCORESeries_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19110 */
class gmd__CI_USCORESeries_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1311 */
struct __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19170 */
class gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1315 */
union _gmd__union_DQ_USCOREResult_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:19205 */
struct __gmd__DQ_USCOREResult_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19198 */
class gmd__DQ_USCOREResult_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1317 */
union _gts__union_TM_USCOREPrimitive_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:19284 */
struct __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19273 */
class gts__TM_USCOREPrimitive_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1321 */
class gco__AbstractObject_USCOREType;	/* resqml2_0_1ForGsoap.h:1323 */
union _gco__union_CharacterString_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:19402 */
struct __gco__CharacterString_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19394 */
class gco__CharacterString_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1325 */
struct __gco__Boolean_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19462 */
class gco__Boolean_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1327 */
struct __gco__Real_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19490 */
class gco__Real_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1329 */
union _gco__union_Date_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:19520 */
class gco__Date_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1331 */
struct __gco__DateTime_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19550 */
class gco__DateTime_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1335 */
union _gsr__union_SC_USCORECRS_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:19597 */
struct __gsr__SC_USCORECRS_USCOREPropertyType_sequence;	/* resqml2_0_1ForGsoap.h:19586 */
class gsr__SC_USCORECRS_USCOREPropertyType;	/* resqml2_0_1ForGsoap.h:1337 */
class ptm__standardEnergisticsPropertyTypeSet;	/* resqml2_0_1ForGsoap.h:1339 */
class ptm__standardEnergisticsPropertyType;	/* resqml2_0_1ForGsoap.h:1341 */
class ptm__equivalentPropertyType;	/* resqml2_0_1ForGsoap.h:1343 */
class resqml20__AbstractDoubleArray;	/* resqml2_0_1ForGsoap.h:305 */
class resqml20__StringHdf5Array;	/* resqml2_0_1ForGsoap.h:313 */
class resqml20__AbstractIntegerArray;	/* resqml2_0_1ForGsoap.h:331 */
class resqml20__AbstractBooleanArray;	/* resqml2_0_1ForGsoap.h:333 */
class resqml20__StandardPropertyKind;	/* resqml2_0_1ForGsoap.h:337 */
class resqml20__LocalPropertyKind;	/* resqml2_0_1ForGsoap.h:341 */
class resqml20__Point2dHdf5Array;	/* resqml2_0_1ForGsoap.h:349 */
class resqml20__ParametricLineFromRepresentationLatticeArray;	/* resqml2_0_1ForGsoap.h:353 */
class resqml20__Point3dLatticeArray;	/* resqml2_0_1ForGsoap.h:355 */
class resqml20__Point3dZValueArray;	/* resqml2_0_1ForGsoap.h:357 */
class resqml20__PointGeometry;	/* resqml2_0_1ForGsoap.h:361 */
class resqml20__Point3dHdf5Array;	/* resqml2_0_1ForGsoap.h:367 */
class resqml20__ParametricLineArray;	/* resqml2_0_1ForGsoap.h:373 */
class resqml20__Point3dParametricArray;	/* resqml2_0_1ForGsoap.h:375 */
class resqml20__AbstractPlaneGeometry;	/* resqml2_0_1ForGsoap.h:383 */
class resqml20__AbstractParametricLineGeometry;	/* resqml2_0_1ForGsoap.h:385 */
class resqml20__Point3dFromRepresentationLatticeArray;	/* resqml2_0_1ForGsoap.h:387 */
class resqml20__Seismic3dCoordinates;	/* resqml2_0_1ForGsoap.h:389 */
class resqml20__Seismic2dCoordinates;	/* resqml2_0_1ForGsoap.h:393 */
class resqml20__Patch1d;	/* resqml2_0_1ForGsoap.h:395 */
class resqml20__SplitNodePatch;	/* resqml2_0_1ForGsoap.h:425 */
class resqml20__IjkParentWindow;	/* resqml2_0_1ForGsoap.h:427 */
class resqml20__ColumnLayerParentWindow;	/* resqml2_0_1ForGsoap.h:447 */
class resqml20__UnstructuredSubnodeTopology;	/* resqml2_0_1ForGsoap.h:449 */
class resqml20__GpGridUnstructuredColumnLayerGridPatch;	/* resqml2_0_1ForGsoap.h:451 */
class resqml20__SubnodePatch;	/* resqml2_0_1ForGsoap.h:461 */
class resqml20__ColumnLayerSubnodeTopology;	/* resqml2_0_1ForGsoap.h:463 */
class resqml20__TruncationCellPatch;	/* resqml2_0_1ForGsoap.h:471 */
class resqml20__GpGridUnstructuredGridPatch;	/* resqml2_0_1ForGsoap.h:473 */
class resqml20__CellParentWindow;	/* resqml2_0_1ForGsoap.h:501 */
class resqml20__GpGridIjkGridPatch;	/* resqml2_0_1ForGsoap.h:505 */
class resqml20__BinaryContactInterpretationPart;	/* resqml2_0_1ForGsoap.h:537 */
class resqml20__ContactElementReference;	/* resqml2_0_1ForGsoap.h:541 */
class resqml20__MultipleContactInterpretationPart;	/* resqml2_0_1ForGsoap.h:555 */
class resqml20__NonSealedContactRepresentationPart;	/* resqml2_0_1ForGsoap.h:655 */
class resqml20__SealedContactRepresentationPart;	/* resqml2_0_1ForGsoap.h:657 */
class resqml20__Grid2dPatch;	/* resqml2_0_1ForGsoap.h:693 */
class resqml20__PolylineSetPatch;	/* resqml2_0_1ForGsoap.h:697 */
class resqml20__ContactRepresentationReference;	/* resqml2_0_1ForGsoap.h:703 */
class resqml20__DataObjectParameter;	/* resqml2_0_1ForGsoap.h:723 */
class resqml20__ObjectParameterKey;	/* resqml2_0_1ForGsoap.h:725 */
class resqml20__StringParameter;	/* resqml2_0_1ForGsoap.h:729 */
class resqml20__IntegerQuantityParameter;	/* resqml2_0_1ForGsoap.h:733 */
class resqml20__TimeIndexParameterKey;	/* resqml2_0_1ForGsoap.h:735 */
class resqml20__FloatingPointQuantityParameter;	/* resqml2_0_1ForGsoap.h:737 */
class resqml20__TimeIndexParameter;	/* resqml2_0_1ForGsoap.h:741 */
class resqml20__StreamlinePolylineSetPatch;	/* resqml2_0_1ForGsoap.h:747 */
class eml20__AbstractCitedDataObject;	/* resqml2_0_1ForGsoap.h:767 */
class eml20__VerticalCrsEpsgCode;	/* resqml2_0_1ForGsoap.h:777 */
class eml20__GmlVerticalCrsDefinition;	/* resqml2_0_1ForGsoap.h:779 */
class eml20__VerticalUnknownCrs;	/* resqml2_0_1ForGsoap.h:781 */
class eml20__ProjectedCrsEpsgCode;	/* resqml2_0_1ForGsoap.h:791 */
class eml20__GmlProjectedCrsDefinition;	/* resqml2_0_1ForGsoap.h:793 */
class eml20__ProjectedUnknownCrs;	/* resqml2_0_1ForGsoap.h:795 */
class gml__DefinitionBaseType;	/* resqml2_0_1ForGsoap.h:1161 */
class gml__StringOrRefType;	/* resqml2_0_1ForGsoap.h:1165 */
class gml__CodeType;	/* resqml2_0_1ForGsoap.h:1171 */
class gml__AbstractTimeObjectType;	/* resqml2_0_1ForGsoap.h:1175 */
class gml__RelatedTimeType;	/* resqml2_0_1ForGsoap.h:1177 */
class gml__MeasureType;	/* resqml2_0_1ForGsoap.h:1211 */
class gmd__EX_USCOREExtent_USCOREType;	/* resqml2_0_1ForGsoap.h:1251 */
class gmd__AbstractEX_USCOREGeographicExtent_USCOREType;	/* resqml2_0_1ForGsoap.h:1255 */
class gmd__EX_USCORETemporalExtent_USCOREType;	/* resqml2_0_1ForGsoap.h:1259 */
class gmd__EX_USCOREVerticalExtent_USCOREType;	/* resqml2_0_1ForGsoap.h:1263 */
class gmd__AbstractDQ_USCOREElement_USCOREType;	/* resqml2_0_1ForGsoap.h:1267 */
class gmd__MD_USCOREIdentifier_USCOREType;	/* resqml2_0_1ForGsoap.h:1271 */
class gmd__CI_USCORECitation_USCOREType;	/* resqml2_0_1ForGsoap.h:1275 */
class gmd__CI_USCOREDate_USCOREType;	/* resqml2_0_1ForGsoap.h:1279 */
class gmd__CI_USCOREResponsibleParty_USCOREType;	/* resqml2_0_1ForGsoap.h:1285 */
class gmd__CI_USCOREContact_USCOREType;	/* resqml2_0_1ForGsoap.h:1289 */
class gmd__CI_USCORETelephone_USCOREType;	/* resqml2_0_1ForGsoap.h:1293 */
class gmd__CI_USCOREAddress_USCOREType;	/* resqml2_0_1ForGsoap.h:1297 */
class gmd__CI_USCOREOnlineResource_USCOREType;	/* resqml2_0_1ForGsoap.h:1301 */
class gmd__CI_USCORESeries_USCOREType;	/* resqml2_0_1ForGsoap.h:1313 */
class gmd__AbstractDQ_USCOREResult_USCOREType;	/* resqml2_0_1ForGsoap.h:1319 */
class gco__CodeListValue_USCOREType;	/* resqml2_0_1ForGsoap.h:1333 */
class resqml20__IntegerArrayFromBooleanMaskArray;	/* resqml2_0_1ForGsoap.h:271 */
class resqml20__BooleanArrayFromIndexArray;	/* resqml2_0_1ForGsoap.h:273 */
class resqml20__BooleanConstantArray;	/* resqml2_0_1ForGsoap.h:275 */
class resqml20__IntegerConstantArray;	/* resqml2_0_1ForGsoap.h:277 */
class resqml20__IntegerHdf5Array;	/* resqml2_0_1ForGsoap.h:283 */
class resqml20__DoubleLatticeArray;	/* resqml2_0_1ForGsoap.h:291 */
class resqml20__DoubleConstantArray;	/* resqml2_0_1ForGsoap.h:293 */
class resqml20__DoubleHdf5Array;	/* resqml2_0_1ForGsoap.h:295 */
class resqml20__IntegerLatticeArray;	/* resqml2_0_1ForGsoap.h:307 */
class resqml20__BooleanHdf5Array;	/* resqml2_0_1ForGsoap.h:315 */
class resqml20__IntegerRangeArray;	/* resqml2_0_1ForGsoap.h:325 */
class resqml20__BooleanArrayFromDiscretePropertyArray;	/* resqml2_0_1ForGsoap.h:345 */
class resqml20__ParametricLineGeometry;	/* resqml2_0_1ForGsoap.h:351 */
class resqml20__HorizontalPlaneGeometry;	/* resqml2_0_1ForGsoap.h:359 */
class resqml20__ParametricLineFromRepresentationGeometry;	/* resqml2_0_1ForGsoap.h:371 */
class resqml20__TiltedPlaneGeometry;	/* resqml2_0_1ForGsoap.h:381 */
class resqml20__SubRepresentationPatch;	/* resqml2_0_1ForGsoap.h:401 */
class resqml20__ColumnSubnodePatch;	/* resqml2_0_1ForGsoap.h:429 */
class resqml20__UniformSubnodePatch;	/* resqml2_0_1ForGsoap.h:457 */
class resqml20__AbstractGridGeometry;	/* resqml2_0_1ForGsoap.h:511 */
class resqml20__VariableSubnodePatch;	/* resqml2_0_1ForGsoap.h:519 */
class resqml20__AbstractResqmlDataObject;	/* resqml2_0_1ForGsoap.h:633 */
class resqml20__ContactPatch;	/* resqml2_0_1ForGsoap.h:659 */
class resqml20__EdgePatch;	/* resqml2_0_1ForGsoap.h:671 */
class resqml20__NodePatch;	/* resqml2_0_1ForGsoap.h:679 */
class resqml20__TrianglePatch;	/* resqml2_0_1ForGsoap.h:683 */
class eml20__ProjectedCrs;	/* resqml2_0_1ForGsoap.h:783 */
class eml20__VerticalCrs;	/* resqml2_0_1ForGsoap.h:785 */
class eml20__obj_USCOREEpcExternalPartReference;	/* resqml2_0_1ForGsoap.h:799 */
class eml20__PressureSquaredMeasure;	/* resqml2_0_1ForGsoap.h:803 */
class eml20__ForceLengthPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:805 */
class eml20__AmountOfSubstancePerTimePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:807 */
class eml20__VolumePerTimePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:809 */
class eml20__LengthPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:811 */
class eml20__TemperatureIntervalMeasure;	/* resqml2_0_1ForGsoap.h:813 */
class eml20__VolumePerTimePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:815 */
class eml20__VolumePerTimePerTimeMeasure;	/* resqml2_0_1ForGsoap.h:817 */
class eml20__PermeabilityLengthMeasure;	/* resqml2_0_1ForGsoap.h:819 */
class eml20__ThermalInsulanceMeasure;	/* resqml2_0_1ForGsoap.h:821 */
class eml20__ForceAreaMeasure;	/* resqml2_0_1ForGsoap.h:823 */
class eml20__EnergyMeasure;	/* resqml2_0_1ForGsoap.h:825 */
class eml20__IlluminanceMeasure;	/* resqml2_0_1ForGsoap.h:827 */
class eml20__ForceMeasure;	/* resqml2_0_1ForGsoap.h:829 */
class eml20__RadiantIntensityMeasure;	/* resqml2_0_1ForGsoap.h:831 */
class eml20__PowerPerPowerMeasure;	/* resqml2_0_1ForGsoap.h:833 */
class eml20__DimensionlessMeasure;	/* resqml2_0_1ForGsoap.h:835 */
class eml20__HeatTransferCoefficientMeasure;	/* resqml2_0_1ForGsoap.h:837 */
class eml20__APINeutronMeasure;	/* resqml2_0_1ForGsoap.h:839 */
class eml20__MagneticVectorPotentialMeasure;	/* resqml2_0_1ForGsoap.h:841 */
class eml20__LinearAccelerationMeasure;	/* resqml2_0_1ForGsoap.h:843 */
class eml20__VolumePerTimeMeasure;	/* resqml2_0_1ForGsoap.h:845 */
class eml20__MagneticFluxMeasure;	/* resqml2_0_1ForGsoap.h:847 */
class eml20__VolumetricThermalExpansionMeasure;	/* resqml2_0_1ForGsoap.h:849 */
class eml20__HeatFlowRateMeasure;	/* resqml2_0_1ForGsoap.h:851 */
class eml20__MassPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:853 */
class eml20__VolumePerMassMeasure;	/* resqml2_0_1ForGsoap.h:855 */
class eml20__MolarVolumeMeasure;	/* resqml2_0_1ForGsoap.h:857 */
class eml20__ElectricConductanceMeasure;	/* resqml2_0_1ForGsoap.h:859 */
class eml20__ReciprocalPressureMeasure;	/* resqml2_0_1ForGsoap.h:861 */
class eml20__AreaPerAmountOfSubstanceMeasure;	/* resqml2_0_1ForGsoap.h:863 */
class eml20__LengthMeasure;	/* resqml2_0_1ForGsoap.h:865 */
class eml20__MassPerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:867 */
class eml20__TemperatureIntervalPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:869 */
class eml20__AmountOfSubstancePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:871 */
class eml20__AmountOfSubstanceMeasure;	/* resqml2_0_1ForGsoap.h:873 */
class eml20__TimePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:875 */
class eml20__ReciprocalMassTimeMeasure;	/* resqml2_0_1ForGsoap.h:877 */
class eml20__ReciprocalVolumeMeasure;	/* resqml2_0_1ForGsoap.h:879 */
class eml20__ForcePerForceMeasure;	/* resqml2_0_1ForGsoap.h:881 */
class eml20__LinearThermalExpansionMeasure;	/* resqml2_0_1ForGsoap.h:883 */
class eml20__EnergyPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:885 */
class eml20__TemperatureIntervalPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:887 */
class eml20__ThermalConductanceMeasure;	/* resqml2_0_1ForGsoap.h:889 */
class eml20__SolidAngleMeasure;	/* resqml2_0_1ForGsoap.h:891 */
class eml20__EnergyLengthPerTimeAreaTemperatureMeasure;	/* resqml2_0_1ForGsoap.h:893 */
class eml20__PowerMeasure;	/* resqml2_0_1ForGsoap.h:895 */
class eml20__VolumePerRotationMeasure;	/* resqml2_0_1ForGsoap.h:897 */
class eml20__ElectricChargePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:899 */
class eml20__LightExposureMeasure;	/* resqml2_0_1ForGsoap.h:901 */
class eml20__ElectricCurrentMeasure;	/* resqml2_0_1ForGsoap.h:903 */
class eml20__LuminousFluxMeasure;	/* resqml2_0_1ForGsoap.h:905 */
class eml20__HeatCapacityMeasure;	/* resqml2_0_1ForGsoap.h:907 */
class eml20__ElectricResistancePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:909 */
class eml20__AbsorbedDoseMeasure;	/* resqml2_0_1ForGsoap.h:911 */
class eml20__TemperatureIntervalPerPressureMeasure;	/* resqml2_0_1ForGsoap.h:913 */
class eml20__AttenuationPerFrequencyIntervalMeasure;	/* resqml2_0_1ForGsoap.h:915 */
class eml20__ThermalResistanceMeasure;	/* resqml2_0_1ForGsoap.h:917 */
class eml20__AnglePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:919 */
class eml20__LengthPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:921 */
class eml20__MassPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:923 */
class eml20__EnergyPerAreaMeasure;	/* resqml2_0_1ForGsoap.h:925 */
class eml20__AreaPerAreaMeasure;	/* resqml2_0_1ForGsoap.h:927 */
class eml20__ReluctanceMeasure;	/* resqml2_0_1ForGsoap.h:929 */
class eml20__ThermodynamicTemperatureMeasure;	/* resqml2_0_1ForGsoap.h:931 */
class eml20__PermittivityMeasure;	/* resqml2_0_1ForGsoap.h:933 */
class eml20__PressureTimePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:935 */
class eml20__DipoleMomentMeasure;	/* resqml2_0_1ForGsoap.h:937 */
class eml20__RadianceMeasure;	/* resqml2_0_1ForGsoap.h:939 */
class eml20__AreaPerMassMeasure;	/* resqml2_0_1ForGsoap.h:941 */
class eml20__EnergyPerMassPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:943 */
class eml20__ElectricCurrentDensityMeasure;	/* resqml2_0_1ForGsoap.h:945 */
class eml20__MassPerMassMeasure;	/* resqml2_0_1ForGsoap.h:947 */
class eml20__DataTransferSpeedMeasure;	/* resqml2_0_1ForGsoap.h:949 */
class eml20__MagneticDipoleMomentMeasure;	/* resqml2_0_1ForGsoap.h:951 */
class eml20__MassPerEnergyMeasure;	/* resqml2_0_1ForGsoap.h:953 */
class eml20__MagneticPermeabilityMeasure;	/* resqml2_0_1ForGsoap.h:955 */
class eml20__APIGravityMeasure;	/* resqml2_0_1ForGsoap.h:957 */
class eml20__VolumePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:959 */
class eml20__VolumeMeasure;	/* resqml2_0_1ForGsoap.h:961 */
class eml20__VolumePerTimePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:963 */
class eml20__VolumePerTimePerPressureMeasure;	/* resqml2_0_1ForGsoap.h:965 */
class eml20__TimeMeasure;	/* resqml2_0_1ForGsoap.h:967 */
class eml20__MomentOfForceMeasure;	/* resqml2_0_1ForGsoap.h:969 */
class eml20__LuminanceMeasure;	/* resqml2_0_1ForGsoap.h:971 */
class eml20__ForcePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:973 */
class eml20__MolarHeatCapacityMeasure;	/* resqml2_0_1ForGsoap.h:975 */
class eml20__DigitalStorageMeasure;	/* resqml2_0_1ForGsoap.h:977 */
class eml20__ElectricChargeMeasure;	/* resqml2_0_1ForGsoap.h:979 */
class eml20__LuminousIntensityMeasure;	/* resqml2_0_1ForGsoap.h:981 */
class eml20__MolarEnergyMeasure;	/* resqml2_0_1ForGsoap.h:983 */
class eml20__LengthPerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:985 */
class eml20__SecondMomentOfAreaMeasure;	/* resqml2_0_1ForGsoap.h:987 */
class eml20__MagneticFluxDensityMeasure;	/* resqml2_0_1ForGsoap.h:989 */
class eml20__VolumePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:991 */
class eml20__QuantityOfLightMeasure;	/* resqml2_0_1ForGsoap.h:993 */
class eml20__LuminousEfficacyMeasure;	/* resqml2_0_1ForGsoap.h:995 */
class eml20__AreaPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:997 */
class eml20__VolumeFlowRatePerVolumeFlowRateMeasure;	/* resqml2_0_1ForGsoap.h:999 */
class eml20__MomentumMeasure;	/* resqml2_0_1ForGsoap.h:1001 */
class eml20__PowerPerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1003 */
class eml20__ThermalDiffusivityMeasure;	/* resqml2_0_1ForGsoap.h:1005 */
class eml20__LogarithmicPowerRatioPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:1007 */
class eml20__ReciprocalTimeMeasure;	/* resqml2_0_1ForGsoap.h:1009 */
class eml20__SpecificHeatCapacityMeasure;	/* resqml2_0_1ForGsoap.h:1011 */
class eml20__PotentialDifferencePerPowerDropMeasure;	/* resqml2_0_1ForGsoap.h:1013 */
class eml20__MomentOfInertiaMeasure;	/* resqml2_0_1ForGsoap.h:1015 */
class eml20__MassPerTimePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:1017 */
class eml20__MolecularWeightMeasure;	/* resqml2_0_1ForGsoap.h:1019 */
class eml20__ActivityOfRadioactivityMeasure;	/* resqml2_0_1ForGsoap.h:1021 */
class eml20__SignalingEventPerTimeMeasure;	/* resqml2_0_1ForGsoap.h:1023 */
class eml20__FrequencyMeasure;	/* resqml2_0_1ForGsoap.h:1025 */
class eml20__FrequencyIntervalMeasure;	/* resqml2_0_1ForGsoap.h:1027 */
class eml20__CapacitanceMeasure;	/* resqml2_0_1ForGsoap.h:1029 */
class eml20__ElectricalResistivityMeasure;	/* resqml2_0_1ForGsoap.h:1031 */
class eml20__MassLengthMeasure;	/* resqml2_0_1ForGsoap.h:1033 */
class eml20__ReciprocalAreaMeasure;	/* resqml2_0_1ForGsoap.h:1035 */
class eml20__KinematicViscosityMeasure;	/* resqml2_0_1ForGsoap.h:1037 */
class eml20__InductanceMeasure;	/* resqml2_0_1ForGsoap.h:1039 */
class eml20__TimePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1041 */
class eml20__ElectromagneticMomentMeasure;	/* resqml2_0_1ForGsoap.h:1043 */
class eml20__EnergyPerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1045 */
class eml20__ElectricChargePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1047 */
class eml20__VolumetricHeatTransferCoefficientMeasure;	/* resqml2_0_1ForGsoap.h:1049 */
class eml20__PressurePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1051 */
class eml20__TimePerMassMeasure;	/* resqml2_0_1ForGsoap.h:1053 */
class eml20__ReciprocalLengthMeasure;	/* resqml2_0_1ForGsoap.h:1055 */
class eml20__DynamicViscosityMeasure;	/* resqml2_0_1ForGsoap.h:1057 */
class eml20__ReciprocalElectricPotentialDifferenceMeasure;	/* resqml2_0_1ForGsoap.h:1059 */
class eml20__ElectricChargePerMassMeasure;	/* resqml2_0_1ForGsoap.h:1061 */
class eml20__APIGammaRayMeasure;	/* resqml2_0_1ForGsoap.h:1063 */
class eml20__DiffusionCoefficientMeasure;	/* resqml2_0_1ForGsoap.h:1065 */
class eml20__ElectricPotentialDifferenceMeasure;	/* resqml2_0_1ForGsoap.h:1067 */
class eml20__IsothermalCompressibilityMeasure;	/* resqml2_0_1ForGsoap.h:1069 */
class eml20__MassPerVolumePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:1071 */
class eml20__PressurePerTimeMeasure;	/* resqml2_0_1ForGsoap.h:1073 */
class eml20__ForcePerLengthMeasure;	/* resqml2_0_1ForGsoap.h:1075 */
class eml20__AmountOfSubstancePerTimeMeasure;	/* resqml2_0_1ForGsoap.h:1077 */
class eml20__LengthPerTemperatureMeasure;	/* resqml2_0_1ForGsoap.h:1079 */
class eml20__VolumePerTimeLengthMeasure;	/* resqml2_0_1ForGsoap.h:1081 */
class eml20__PressureSquaredPerForceTimePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:1083 */
class eml20__AnglePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1085 */
class eml20__LengthPerPressureMeasure;	/* resqml2_0_1ForGsoap.h:1087 */
class eml20__ThermalConductivityMeasure;	/* resqml2_0_1ForGsoap.h:1089 */
class eml20__MassMeasure;	/* resqml2_0_1ForGsoap.h:1091 */
class eml20__NormalizedPowerMeasure;	/* resqml2_0_1ForGsoap.h:1093 */
class eml20__LogarithmicPowerRatioMeasure;	/* resqml2_0_1ForGsoap.h:1095 */
class eml20__AngularAccelerationMeasure;	/* resqml2_0_1ForGsoap.h:1097 */
class eml20__ReciprocalMassMeasure;	/* resqml2_0_1ForGsoap.h:1099 */
class eml20__ReciprocalForceMeasure;	/* resqml2_0_1ForGsoap.h:1101 */
class eml20__PlaneAngleMeasure;	/* resqml2_0_1ForGsoap.h:1103 */
class eml20__EnergyLengthPerAreaMeasure;	/* resqml2_0_1ForGsoap.h:1105 */
class eml20__EnergyPerMassMeasure;	/* resqml2_0_1ForGsoap.h:1107 */
class eml20__AngularVelocityMeasure;	/* resqml2_0_1ForGsoap.h:1109 */
class eml20__ElectricConductivityMeasure;	/* resqml2_0_1ForGsoap.h:1111 */
class eml20__AmountOfSubstancePerAmountOfSubstanceMeasure;	/* resqml2_0_1ForGsoap.h:1113 */
class eml20__ElectricFieldStrengthMeasure;	/* resqml2_0_1ForGsoap.h:1115 */
class eml20__PowerPerAreaMeasure;	/* resqml2_0_1ForGsoap.h:1117 */
class eml20__MagneticFluxDensityPerLengthMeasure;	/* resqml2_0_1ForGsoap.h:1119 */
class eml20__PressureMeasure;	/* resqml2_0_1ForGsoap.h:1121 */
class eml20__VolumePerTimePerPressureLengthMeasure;	/* resqml2_0_1ForGsoap.h:1123 */
class eml20__MagneticFieldStrengthMeasure;	/* resqml2_0_1ForGsoap.h:1125 */
class eml20__PermeabilityRockMeasure;	/* resqml2_0_1ForGsoap.h:1127 */
class eml20__DoseEquivalentMeasure;	/* resqml2_0_1ForGsoap.h:1129 */
class eml20__MassPerTimePerAreaMeasure;	/* resqml2_0_1ForGsoap.h:1131 */
class eml20__VolumePerPressureMeasure;	/* resqml2_0_1ForGsoap.h:1133 */
class eml20__MassPerAreaMeasure;	/* resqml2_0_1ForGsoap.h:1135 */
class eml20__AmountOfSubstancePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1137 */
class eml20__TimePerTimeMeasure;	/* resqml2_0_1ForGsoap.h:1139 */
class eml20__AreaPerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1141 */
class eml20__ElectricResistanceMeasure;	/* resqml2_0_1ForGsoap.h:1143 */
class eml20__VolumePerVolumeMeasure;	/* resqml2_0_1ForGsoap.h:1145 */
class eml20__AreaMeasure;	/* resqml2_0_1ForGsoap.h:1147 */
class eml20__LengthPerMassMeasure;	/* resqml2_0_1ForGsoap.h:1149 */
class eml20__MobilityMeasure;	/* resqml2_0_1ForGsoap.h:1151 */
class gml__DefinitionType;	/* resqml2_0_1ForGsoap.h:1159 */
class gml__CodeWithAuthorityType;	/* resqml2_0_1ForGsoap.h:1169 */
class gml__AbstractTimePrimitiveType;	/* resqml2_0_1ForGsoap.h:1173 */
class gml__AngleType;	/* resqml2_0_1ForGsoap.h:1209 */
class gml__LengthType;	/* resqml2_0_1ForGsoap.h:1217 */
class gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType;	/* resqml2_0_1ForGsoap.h:1265 */
class resqml20__obj_USCOREPropertyKind;	/* resqml2_0_1ForGsoap.h:309 */
class resqml20__AbstractPropertyLookup;	/* resqml2_0_1ForGsoap.h:323 */
class resqml20__obj_USCOREPropertySet;	/* resqml2_0_1ForGsoap.h:327 */
class resqml20__AbstractProperty;	/* resqml2_0_1ForGsoap.h:329 */
class resqml20__obj_USCORERepresentationIdentitySet;	/* resqml2_0_1ForGsoap.h:409 */
class resqml20__AbstractRepresentation;	/* resqml2_0_1ForGsoap.h:413 */
class resqml20__obj_USCORELocalGridSet;	/* resqml2_0_1ForGsoap.h:433 */
class resqml20__UnstructuredGridGeometry;	/* resqml2_0_1ForGsoap.h:495 */
class resqml20__AbstractColumnLayerGridGeometry;	/* resqml2_0_1ForGsoap.h:525 */
class resqml20__AbstractFeatureInterpretation;	/* resqml2_0_1ForGsoap.h:529 */
class resqml20__obj_USCOREStratigraphicColumn;	/* resqml2_0_1ForGsoap.h:561 */
class resqml20__obj_USCOREGlobalChronostratigraphicColumn;	/* resqml2_0_1ForGsoap.h:597 */
class resqml20__AbstractFeature;	/* resqml2_0_1ForGsoap.h:611 */
class resqml20__AbstractLocal3dCrs;	/* resqml2_0_1ForGsoap.h:623 */
class resqml20__obj_USCORETimeSeries;	/* resqml2_0_1ForGsoap.h:631 */
class resqml20__obj_USCOREMdDatum;	/* resqml2_0_1ForGsoap.h:645 */
class resqml20__WellboreMarker;	/* resqml2_0_1ForGsoap.h:647 */
class resqml20__obj_USCOREActivity;	/* resqml2_0_1ForGsoap.h:727 */
class resqml20__obj_USCOREActivityTemplate;	/* resqml2_0_1ForGsoap.h:745 */
class gml__IdentifiedObjectType;	/* resqml2_0_1ForGsoap.h:1157 */
class resqml20__obj_USCOREDoubleTableLookup;	/* resqml2_0_1ForGsoap.h:279 */
class resqml20__obj_USCOREPointsProperty;	/* resqml2_0_1ForGsoap.h:289 */
class resqml20__obj_USCOREStringTableLookup;	/* resqml2_0_1ForGsoap.h:311 */
class resqml20__AbstractValuesProperty;	/* resqml2_0_1ForGsoap.h:339 */
class resqml20__obj_USCORERepresentationSetRepresentation;	/* resqml2_0_1ForGsoap.h:403 */
class resqml20__obj_USCORERedefinedGeometryRepresentation;	/* resqml2_0_1ForGsoap.h:405 */
class resqml20__obj_USCORESubRepresentation;	/* resqml2_0_1ForGsoap.h:417 */
class resqml20__AbstractGridRepresentation;	/* resqml2_0_1ForGsoap.h:435 */
class resqml20__UnstructuredColumnLayerGridGeometry;	/* resqml2_0_1ForGsoap.h:481 */
class resqml20__IjkGridGeometry;	/* resqml2_0_1ForGsoap.h:483 */
class resqml20__obj_USCOREGridConnectionSetRepresentation;	/* resqml2_0_1ForGsoap.h:509 */
class resqml20__AbstractOrganizationInterpretation;	/* resqml2_0_1ForGsoap.h:535 */
class resqml20__obj_USCOREGenericFeatureInterpretation;	/* resqml2_0_1ForGsoap.h:545 */
class resqml20__obj_USCOREWellboreInterpretation;	/* resqml2_0_1ForGsoap.h:547 */
class resqml20__obj_USCOREBoundaryFeatureInterpretation;	/* resqml2_0_1ForGsoap.h:565 */
class resqml20__obj_USCOREEarthModelInterpretation;	/* resqml2_0_1ForGsoap.h:569 */
class resqml20__obj_USCOREGeologicUnitInterpretation;	/* resqml2_0_1ForGsoap.h:581 */
class resqml20__AbstractGeologicFeature;	/* resqml2_0_1ForGsoap.h:601 */
class resqml20__obj_USCORELocalTime3dCrs;	/* resqml2_0_1ForGsoap.h:617 */
class resqml20__obj_USCORELocalDepth3dCrs;	/* resqml2_0_1ForGsoap.h:629 */
class resqml20__obj_USCOREDeviationSurveyRepresentation;	/* resqml2_0_1ForGsoap.h:639 */
class resqml20__obj_USCOREWellboreFrameRepresentation;	/* resqml2_0_1ForGsoap.h:641 */
class resqml20__obj_USCOREWellboreTrajectoryRepresentation;	/* resqml2_0_1ForGsoap.h:643 */
class resqml20__obj_USCOREPointSetRepresentation;	/* resqml2_0_1ForGsoap.h:667 */
class resqml20__obj_USCOREPolylineSetRepresentation;	/* resqml2_0_1ForGsoap.h:677 */
class resqml20__obj_USCOREPolylineRepresentation;	/* resqml2_0_1ForGsoap.h:685 */
class resqml20__AbstractSurfaceRepresentation;	/* resqml2_0_1ForGsoap.h:691 */
class resqml20__AbstractTechnicalFeature;	/* resqml2_0_1ForGsoap.h:705 */
class resqml20__obj_USCOREStreamlinesRepresentation;	/* resqml2_0_1ForGsoap.h:751 */
class gml__AbstractCRSType;	/* resqml2_0_1ForGsoap.h:1155 */
class gml__AbstractCoordinateSystemType;	/* resqml2_0_1ForGsoap.h:1185 */
class gml__CoordinateSystemAxisType;	/* resqml2_0_1ForGsoap.h:1189 */
class gml__AbstractDatumType;	/* resqml2_0_1ForGsoap.h:1203 */
class gml__PrimeMeridianType;	/* resqml2_0_1ForGsoap.h:1207 */
class gml__EllipsoidType;	/* resqml2_0_1ForGsoap.h:1215 */
class gml__AbstractCoordinateOperationType;	/* resqml2_0_1ForGsoap.h:1227 */
class resqml20__obj_USCOREContinuousProperty;	/* resqml2_0_1ForGsoap.h:285 */
class resqml20__obj_USCORECommentProperty;	/* resqml2_0_1ForGsoap.h:299 */
class resqml20__obj_USCOREDiscreteProperty;	/* resqml2_0_1ForGsoap.h:301 */
class resqml20__obj_USCORECategoricalProperty;	/* resqml2_0_1ForGsoap.h:303 */
class resqml20__obj_USCOREUnstructuredGridRepresentation;	/* resqml2_0_1ForGsoap.h:419 */
class resqml20__obj_USCOREGpGridRepresentation;	/* resqml2_0_1ForGsoap.h:423 */
class resqml20__AbstractTruncatedColumnLayerGridRepresentation;	/* resqml2_0_1ForGsoap.h:487 */
class resqml20__AbstractColumnLayerGridRepresentation;	/* resqml2_0_1ForGsoap.h:503 */
class resqml20__obj_USCORERockFluidOrganizationInterpretation;	/* resqml2_0_1ForGsoap.h:531 */
class resqml20__obj_USCORERockFluidUnitInterpretation;	/* resqml2_0_1ForGsoap.h:543 */
class resqml20__obj_USCOREGeobodyBoundaryInterpretation;	/* resqml2_0_1ForGsoap.h:551 */
class resqml20__obj_USCOREStructuralOrganizationInterpretation;	/* resqml2_0_1ForGsoap.h:553 */
class resqml20__obj_USCOREFaultInterpretation;	/* resqml2_0_1ForGsoap.h:559 */
class resqml20__obj_USCOREGeobodyInterpretation;	/* resqml2_0_1ForGsoap.h:563 */
class resqml20__AbstractStratigraphicOrganizationInterpretation;	/* resqml2_0_1ForGsoap.h:575 */
class resqml20__obj_USCOREHorizonInterpretation;	/* resqml2_0_1ForGsoap.h:579 */
class resqml20__obj_USCOREStratigraphicUnitInterpretation;	/* resqml2_0_1ForGsoap.h:583 */
class resqml20__obj_USCOREGeologicUnitFeature;	/* resqml2_0_1ForGsoap.h:589 */
class resqml20__obj_USCOREBoundaryFeature;	/* resqml2_0_1ForGsoap.h:593 */
class resqml20__obj_USCOREOrganizationFeature;	/* resqml2_0_1ForGsoap.h:607 */
class resqml20__obj_USCOREBlockedWellboreRepresentation;	/* resqml2_0_1ForGsoap.h:635 */
class resqml20__obj_USCOREWellboreMarkerFrameRepresentation;	/* resqml2_0_1ForGsoap.h:649 */
class resqml20__obj_USCORETriangulatedSetRepresentation;	/* resqml2_0_1ForGsoap.h:653 */
class resqml20__obj_USCOREPlaneSetRepresentation;	/* resqml2_0_1ForGsoap.h:661 */
class resqml20__AbstractSurfaceFrameworkRepresentation;	/* resqml2_0_1ForGsoap.h:665 */
class resqml20__obj_USCORESealedVolumeFrameworkRepresentation;	/* resqml2_0_1ForGsoap.h:669 */
class resqml20__obj_USCOREGrid2dRepresentation;	/* resqml2_0_1ForGsoap.h:687 */
class resqml20__obj_USCOREGrid2dSetRepresentation;	/* resqml2_0_1ForGsoap.h:695 */
class resqml20__obj_USCOREFrontierFeature;	/* resqml2_0_1ForGsoap.h:707 */
class resqml20__obj_USCOREWellboreFeature;	/* resqml2_0_1ForGsoap.h:713 */
class resqml20__AbstractSeismicSurveyFeature;	/* resqml2_0_1ForGsoap.h:719 */
class resqml20__obj_USCOREStreamlinesFeature;	/* resqml2_0_1ForGsoap.h:749 */
union _gml__union_GeodeticCRSType;	/* resqml2_0_1ForGsoap.h:32296 */
class gml__GeodeticCRSType;	/* resqml2_0_1ForGsoap.h:1153 */
class gml__EllipsoidalCSType;	/* resqml2_0_1ForGsoap.h:1183 */
class gml__CartesianCSType;	/* resqml2_0_1ForGsoap.h:1193 */
class gml__SphericalCSType;	/* resqml2_0_1ForGsoap.h:1197 */
class gml__GeodeticDatumType;	/* resqml2_0_1ForGsoap.h:1201 */
class gml__AbstractGeneralDerivedCRSType;	/* resqml2_0_1ForGsoap.h:1221 */
class gml__AbstractGeneralConversionType;	/* resqml2_0_1ForGsoap.h:1225 */
class gml__VerticalCRSType;	/* resqml2_0_1ForGsoap.h:1233 */
class gml__VerticalCSType;	/* resqml2_0_1ForGsoap.h:1237 */
class gml__VerticalDatumType;	/* resqml2_0_1ForGsoap.h:1241 */
class resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation;	/* resqml2_0_1ForGsoap.h:441 */
class resqml20__obj_USCOREIjkGridRepresentation;	/* resqml2_0_1ForGsoap.h:445 */
class resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation;	/* resqml2_0_1ForGsoap.h:499 */
class resqml20__obj_USCORETruncatedIjkGridRepresentation;	/* resqml2_0_1ForGsoap.h:507 */
class resqml20__obj_USCOREStratigraphicColumnRankInterpretation;	/* resqml2_0_1ForGsoap.h:573 */
class resqml20__obj_USCOREStratigraphicOccurrenceInterpretation;	/* resqml2_0_1ForGsoap.h:585 */
class resqml20__obj_USCOREFluidBoundaryFeature;	/* resqml2_0_1ForGsoap.h:587 */
class resqml20__obj_USCORERockFluidUnitFeature;	/* resqml2_0_1ForGsoap.h:591 */
class resqml20__obj_USCOREStratigraphicUnitFeature;	/* resqml2_0_1ForGsoap.h:599 */
class resqml20__obj_USCOREGeneticBoundaryFeature;	/* resqml2_0_1ForGsoap.h:603 */
class resqml20__obj_USCOREGeobodyFeature;	/* resqml2_0_1ForGsoap.h:605 */
class resqml20__obj_USCORETectonicBoundaryFeature;	/* resqml2_0_1ForGsoap.h:609 */
class resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation;	/* resqml2_0_1ForGsoap.h:651 */
class resqml20__obj_USCORESealedSurfaceFrameworkRepresentation;	/* resqml2_0_1ForGsoap.h:681 */
class resqml20__SeismicLatticeSetFeature;	/* resqml2_0_1ForGsoap.h:709 */
class resqml20__obj_USCORESeismicLineSetFeature;	/* resqml2_0_1ForGsoap.h:711 */
class resqml20__obj_USCORESeismicLineFeature;	/* resqml2_0_1ForGsoap.h:715 */
class resqml20__obj_USCORESeismicLatticeFeature;	/* resqml2_0_1ForGsoap.h:717 */
class resqml20__obj_USCOREContinuousPropertySeries;	/* resqml2_0_1ForGsoap.h:759 */
class resqml20__obj_USCORECategoricalPropertySeries;	/* resqml2_0_1ForGsoap.h:761 */
class resqml20__obj_USCORECommentPropertySeries;	/* resqml2_0_1ForGsoap.h:763 */
class resqml20__obj_USCOREDiscretePropertySeries;	/* resqml2_0_1ForGsoap.h:765 */
union _gml__union_ProjectedCRSType;	/* resqml2_0_1ForGsoap.h:34022 */
class gml__ProjectedCRSType;	/* resqml2_0_1ForGsoap.h:1219 */

/* custom/struct_tm.h:70 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_tm
#define SOAP_TYPE_gsoap_resqml2_0_1_tm (-8)
#if 0 /* Volatile: declared external of the data binding interface and not redeclared here */
struct SOAP_CMAC tm {
      public:
        /** Required element 'tm-sec' of XML schema type 'xsd:int' */
        int tm_sec;
        /** Required element 'tm-min' of XML schema type 'xsd:int' */
        int tm_min;
        /** Required element 'tm-hour' of XML schema type 'xsd:int' */
        int tm_hour;
        /** Required element 'tm-mday' of XML schema type 'xsd:int' */
        int tm_mday;
        /** Required element 'tm-mon' of XML schema type 'xsd:int' */
        int tm_mon;
        /** Required element 'tm-year' of XML schema type 'xsd:int' */
        int tm_year;
        /** Required element 'tm-isdst' of XML schema type 'xsd:int' */
        int tm_isdst;
};
#endif
#endif

/* resqml2_0_1ForGsoap.h:281 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet (-26)
/* complex XML schema type 'resqml20:PropertyKindFacet': */
class SOAP_CMAC resqml20__PropertyKindFacet {
      public:
        /// Required element 'resqml20:Facet' of XML schema type 'resqml20:Facet'
        enum resqml20__Facet Facet;
        /// Required element 'resqml20:Value' of XML schema type 'xsd:string'
        std::string Value;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PropertyKindFacet, default initialized and not managed by a soap context
        virtual resqml20__PropertyKindFacet *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PropertyKindFacet); }
      public:
        /// Constructor with default initializations
        resqml20__PropertyKindFacet() : Facet(), Value(), soap() { }
        virtual ~resqml20__PropertyKindFacet() { }
        /// Friend allocator used by soap_new_resqml20__PropertyKindFacet(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PropertyKindFacet * SOAP_FMAC2 soap_instantiate_resqml20__PropertyKindFacet(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:287 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup (-29)
/* complex XML schema type 'resqml20:StringLookup': */
class SOAP_CMAC resqml20__StringLookup {
      public:
        /// Required element 'resqml20:Key' of XML schema type 'xsd:integer'
        LONG64 Key;
        /// Required element 'resqml20:Value' of XML schema type 'xsd:string'
        std::string Value;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StringLookup, default initialized and not managed by a soap context
        virtual resqml20__StringLookup *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StringLookup); }
      public:
        /// Constructor with default initializations
        resqml20__StringLookup() : Key(), Value(), soap() { }
        virtual ~resqml20__StringLookup() { }
        /// Friend allocator used by soap_new_resqml20__StringLookup(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StringLookup * SOAP_FMAC2 soap_instantiate_resqml20__StringLookup(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:297 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints (-34)
/* complex XML schema type 'resqml20:PatchOfPoints': */
class SOAP_CMAC resqml20__PatchOfPoints {
      public:
        /// Optional element 'resqml20:RepresentationPatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *RepresentationPatchIndex;
        /// Required element 'resqml20:Points' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *Points;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PatchOfPoints, default initialized and not managed by a soap context
        virtual resqml20__PatchOfPoints *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PatchOfPoints); }
      public:
        /// Constructor with default initializations
        resqml20__PatchOfPoints() : RepresentationPatchIndex(), Points(), soap() { }
        virtual ~resqml20__PatchOfPoints() { }
        /// Friend allocator used by soap_new_resqml20__PatchOfPoints(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PatchOfPoints * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfPoints(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:317 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind (-44)
/* complex XML schema type 'resqml20:AbstractPropertyKind': */
class SOAP_CMAC resqml20__AbstractPropertyKind {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractPropertyKind, default initialized and not managed by a soap context
        virtual resqml20__AbstractPropertyKind *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractPropertyKind); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractPropertyKind() : soap() { }
        virtual ~resqml20__AbstractPropertyKind() { }
        /// Friend allocator used by soap_new_resqml20__AbstractPropertyKind(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPropertyKind(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:319 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues (-45)
/* complex XML schema type 'resqml20:PatchOfValues': */
class SOAP_CMAC resqml20__PatchOfValues {
      public:
        /// Optional element 'resqml20:RepresentationPatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *RepresentationPatchIndex;
        /// Required element 'resqml20:Values' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *Values;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PatchOfValues, default initialized and not managed by a soap context
        virtual resqml20__PatchOfValues *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PatchOfValues); }
      public:
        /// Constructor with default initializations
        resqml20__PatchOfValues() : RepresentationPatchIndex(), Values(), soap() { }
        virtual ~resqml20__PatchOfValues() { }
        /// Friend allocator used by soap_new_resqml20__PatchOfValues(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PatchOfValues * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfValues(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:321 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray (-46)
/* complex XML schema type 'resqml20:AbstractValueArray': */
class SOAP_CMAC resqml20__AbstractValueArray {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractValueArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractValueArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractValueArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractValueArray() : soap() { }
        virtual ~resqml20__AbstractValueArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractValueArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractValueArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractValueArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:335 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch (-53)
/* complex XML schema type 'resqml20:PropertyValuesPatch': */
class SOAP_CMAC resqml20__PropertyValuesPatch {
      public:
        /// Required element 'resqml20:patchUid' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 patchUid;
        /// Required element 'resqml20:values' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *values;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PropertyValuesPatch, default initialized and not managed by a soap context
        virtual resqml20__PropertyValuesPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PropertyValuesPatch); }
      public:
        /// Constructor with default initializations
        resqml20__PropertyValuesPatch() : patchUid(), values(), soap() { }
        virtual ~resqml20__PropertyValuesPatch() { }
        /// Friend allocator used by soap_new_resqml20__PropertyValuesPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PropertyValuesPatch * SOAP_FMAC2 soap_instantiate_resqml20__PropertyValuesPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:343 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup (-57)
/* complex XML schema type 'resqml20:DoubleLookup': */
class SOAP_CMAC resqml20__DoubleLookup {
      public:
        /// Required element 'resqml20:Key' of XML schema type 'xsd:double'
        double Key;
        /// Required element 'resqml20:Value' of XML schema type 'xsd:double'
        double Value;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__DoubleLookup, default initialized and not managed by a soap context
        virtual resqml20__DoubleLookup *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__DoubleLookup); }
      public:
        /// Constructor with default initializations
        resqml20__DoubleLookup() : Key(), Value(), soap() { }
        virtual ~resqml20__DoubleLookup() { }
        /// Friend allocator used by soap_new_resqml20__DoubleLookup(struct soap*, int)
        friend SOAP_FMAC1 resqml20__DoubleLookup * SOAP_FMAC2 soap_instantiate_resqml20__DoubleLookup(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:347 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset (-59)
/* complex XML schema type 'resqml20:Point3dOffset': */
class SOAP_CMAC resqml20__Point3dOffset {
      public:
        /// Required element 'resqml20:Offset' of XML schema type 'resqml20:Point3d'
        resqml20__Point3d *Offset;
        /// Required element 'resqml20:Spacing' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *Spacing;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dOffset, default initialized and not managed by a soap context
        virtual resqml20__Point3dOffset *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dOffset); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dOffset() : Offset(), Spacing(), soap() { }
        virtual ~resqml20__Point3dOffset() { }
        /// Friend allocator used by soap_new_resqml20__Point3dOffset(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dOffset * SOAP_FMAC2 soap_instantiate_resqml20__Point3dOffset(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:363 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray (-67)
/* Type resqml20__AbstractPoint3dArray is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'resqml20:AbstractPoint3dArray': */
class SOAP_CMAC resqml20__AbstractPoint3dArray {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractPoint3dArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractPoint3dArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractPoint3dArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractPoint3dArray() : soap() { }
        virtual ~resqml20__AbstractPoint3dArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractPoint3dArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractPoint3dArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPoint3dArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:365 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry (-68)
/* complex XML schema type 'resqml20:AbstractGeometry': */
class SOAP_CMAC resqml20__AbstractGeometry {
      public:
        /// Optional element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
        /// Required element 'resqml20:LocalCrs' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *LocalCrs;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractGeometry, default initialized and not managed by a soap context
        virtual resqml20__AbstractGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractGeometry() : TimeIndex(), LocalCrs(), soap() { }
        virtual ~resqml20__AbstractGeometry() { }
        /// Friend allocator used by soap_new_resqml20__AbstractGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:369 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d (-70)
/* complex XML schema type 'resqml20:ThreePoint3d': */
class SOAP_CMAC resqml20__ThreePoint3d {
      public:
        /// Sequence of 3 to 3 elements 'resqml20:Point3d' of XML schema type 'resqml20:Point3d'
        std::vector<resqml20__Point3d *> Point3d;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ThreePoint3d, default initialized and not managed by a soap context
        virtual resqml20__ThreePoint3d *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ThreePoint3d); }
      public:
        /// Constructor with default initializations
        resqml20__ThreePoint3d() : Point3d(), soap() { }
        virtual ~resqml20__ThreePoint3d() { }
        /// Friend allocator used by soap_new_resqml20__ThreePoint3d(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ThreePoint3d * SOAP_FMAC2 soap_instantiate_resqml20__ThreePoint3d(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:377 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray (-74)
/* complex XML schema type 'resqml20:AbstractParametricLineArray': */
class SOAP_CMAC resqml20__AbstractParametricLineArray {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractParametricLineArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractParametricLineArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractParametricLineArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractParametricLineArray() : soap() { }
        virtual ~resqml20__AbstractParametricLineArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractParametricLineArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParametricLineArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:379 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections (-75)
/* complex XML schema type 'resqml20:ParametricLineIntersections': */
class SOAP_CMAC resqml20__ParametricLineIntersections {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:IntersectionLinePairs' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *IntersectionLinePairs;
        /// Required element 'resqml20:ParameterValuePairs' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *ParameterValuePairs;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParametricLineIntersections, default initialized and not managed by a soap context
        virtual resqml20__ParametricLineIntersections *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParametricLineIntersections); }
      public:
        /// Constructor with default initializations
        resqml20__ParametricLineIntersections() : Count(), IntersectionLinePairs(), ParameterValuePairs(), soap() { }
        virtual ~resqml20__ParametricLineIntersections() { }
        /// Friend allocator used by soap_new_resqml20__ParametricLineIntersections(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParametricLineIntersections * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineIntersections(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:391 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates (-81)
/* complex XML schema type 'resqml20:AbstractSeismicCoordinates': */
class SOAP_CMAC resqml20__AbstractSeismicCoordinates {
      public:
        /// Required element 'resqml20:SeismicSupport' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SeismicSupport;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractSeismicCoordinates, default initialized and not managed by a soap context
        virtual resqml20__AbstractSeismicCoordinates *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractSeismicCoordinates); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractSeismicCoordinates() : SeismicSupport(), soap() { }
        virtual ~resqml20__AbstractSeismicCoordinates() { }
        /// Friend allocator used by soap_new_resqml20__AbstractSeismicCoordinates(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractSeismicCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSeismicCoordinates(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:397 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch (-84)
/* complex XML schema type 'resqml20:Patch': */
class SOAP_CMAC resqml20__Patch {
      public:
        /// Required element 'resqml20:PatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 PatchIndex;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Patch, default initialized and not managed by a soap context
        virtual resqml20__Patch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Patch); }
      public:
        /// Constructor with default initializations
        resqml20__Patch() : PatchIndex(), soap() { }
        virtual ~resqml20__Patch() { }
        /// Friend allocator used by soap_new_resqml20__Patch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Patch * SOAP_FMAC2 soap_instantiate_resqml20__Patch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:399 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices (-85)
/* complex XML schema type 'resqml20:ElementIndices': */
class SOAP_CMAC resqml20__ElementIndices {
      public:
        /// Required element 'resqml20:IndexableElement' of XML schema type 'resqml20:IndexableElements'
        enum resqml20__IndexableElements IndexableElement;
        /// Required element 'resqml20:Indices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *Indices;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ElementIndices, default initialized and not managed by a soap context
        virtual resqml20__ElementIndices *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ElementIndices); }
      public:
        /// Constructor with default initializations
        resqml20__ElementIndices() : IndexableElement(), Indices(), soap() { }
        virtual ~resqml20__ElementIndices() { }
        /// Friend allocator used by soap_new_resqml20__ElementIndices(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ElementIndices * SOAP_FMAC2 soap_instantiate_resqml20__ElementIndices(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:407 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity (-89)
/* complex XML schema type 'resqml20:RepresentationIdentity': */
class SOAP_CMAC resqml20__RepresentationIdentity {
      public:
        /// Required element 'resqml20:IdenticalElementCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 IdenticalElementCount;
        /// Required element 'resqml20:ElementIdentity' of XML schema type 'resqml20:ElementIdentity'
        std::vector<resqml20__ElementIdentity *> ElementIdentity;
        /// Optional element 'resqml20:AdditionalGridTopology' of XML schema type 'resqml20:AdditionalGridTopology'
        resqml20__AdditionalGridTopology *AdditionalGridTopology;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__RepresentationIdentity, default initialized and not managed by a soap context
        virtual resqml20__RepresentationIdentity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__RepresentationIdentity); }
      public:
        /// Constructor with default initializations
        resqml20__RepresentationIdentity() : IdenticalElementCount(), ElementIdentity(), AdditionalGridTopology(), soap() { }
        virtual ~resqml20__RepresentationIdentity() { }
        /// Friend allocator used by soap_new_resqml20__RepresentationIdentity(struct soap*, int)
        friend SOAP_FMAC1 resqml20__RepresentationIdentity * SOAP_FMAC2 soap_instantiate_resqml20__RepresentationIdentity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:411 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity (-91)
/* complex XML schema type 'resqml20:ElementIdentity': */
class SOAP_CMAC resqml20__ElementIdentity {
      public:
        /// Optional element 'resqml20:ElementIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ElementIndices;
        /// Required element 'resqml20:IdentityKind' of XML schema type 'resqml20:IdentityKind'
        enum resqml20__IdentityKind IdentityKind;
        /// Required element 'resqml20:IndexableElement' of XML schema type 'resqml20:IndexableElements'
        enum resqml20__IndexableElements IndexableElement;
        /// Required element 'resqml20:Representation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Representation;
        /// Optional element 'resqml20:FromTimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *FromTimeIndex;
        /// Optional element 'resqml20:ToTimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *ToTimeIndex;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ElementIdentity, default initialized and not managed by a soap context
        virtual resqml20__ElementIdentity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ElementIdentity); }
      public:
        /// Constructor with default initializations
        resqml20__ElementIdentity() : ElementIndices(), IdentityKind(), IndexableElement(), Representation(), FromTimeIndex(), ToTimeIndex(), soap() { }
        virtual ~resqml20__ElementIdentity() { }
        /// Friend allocator used by soap_new_resqml20__ElementIdentity(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ElementIdentity * SOAP_FMAC2 soap_instantiate_resqml20__ElementIdentity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:415 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry (-93)
/* complex XML schema type 'resqml20:PatchOfGeometry': */
class SOAP_CMAC resqml20__PatchOfGeometry {
      public:
        /// Optional element 'resqml20:RepresentationPatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *RepresentationPatchIndex;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:AbstractGeometry'
        resqml20__AbstractGeometry *Geometry;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PatchOfGeometry, default initialized and not managed by a soap context
        virtual resqml20__PatchOfGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PatchOfGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__PatchOfGeometry() : RepresentationPatchIndex(), Geometry(), soap() { }
        virtual ~resqml20__PatchOfGeometry() { }
        /// Friend allocator used by soap_new_resqml20__PatchOfGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PatchOfGeometry * SOAP_FMAC2 soap_instantiate_resqml20__PatchOfGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:421 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology (-96)
/* complex XML schema type 'resqml20:AdditionalGridTopology': */
class SOAP_CMAC resqml20__AdditionalGridTopology {
      public:
        /// Optional element 'resqml20:SplitEdges' of XML schema type 'resqml20:SplitEdges'
        resqml20__SplitEdges *SplitEdges;
        /// Optional element 'resqml20:SplitNodes' of XML schema type 'resqml20:SplitNodePatch'
        resqml20__SplitNodePatch *SplitNodes;
        /// Optional element 'resqml20:SplitColumnEdges' of XML schema type 'resqml20:ColumnLayerSplitColumnEdges'
        resqml20__ColumnLayerSplitColumnEdges *SplitColumnEdges;
        /// Optional element 'resqml20:UnstructuredColumnEdges' of XML schema type 'resqml20:UnstructuredColumnEdges'
        resqml20__UnstructuredColumnEdges *UnstructuredColumnEdges;
        /// Optional element 'resqml20:SplitFaces' of XML schema type 'resqml20:SplitFaces'
        resqml20__SplitFaces *SplitFaces;
        /// Optional element 'resqml20:IjSplitColumnEdges' of XML schema type 'resqml20:IjSplitColumnEdges'
        resqml20__IjSplitColumnEdges *IjSplitColumnEdges;
        /// Optional element 'resqml20:UnstructuredSubnodeTopology' of XML schema type 'resqml20:UnstructuredSubnodeTopology'
        resqml20__UnstructuredSubnodeTopology *UnstructuredSubnodeTopology;
        /// Optional element 'resqml20:ColumnLayerSubnodeTopology' of XML schema type 'resqml20:ColumnLayerSubnodeTopology'
        resqml20__ColumnLayerSubnodeTopology *ColumnLayerSubnodeTopology;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AdditionalGridTopology, default initialized and not managed by a soap context
        virtual resqml20__AdditionalGridTopology *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AdditionalGridTopology); }
      public:
        /// Constructor with default initializations
        resqml20__AdditionalGridTopology() : SplitEdges(), SplitNodes(), SplitColumnEdges(), UnstructuredColumnEdges(), SplitFaces(), IjSplitColumnEdges(), UnstructuredSubnodeTopology(), ColumnLayerSubnodeTopology(), soap() { }
        virtual ~resqml20__AdditionalGridTopology() { }
        /// Friend allocator used by soap_new_resqml20__AdditionalGridTopology(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AdditionalGridTopology * SOAP_FMAC2 soap_instantiate_resqml20__AdditionalGridTopology(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:431 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits (-101)
/* complex XML schema type 'resqml20:CellStratigraphicUnits': */
class SOAP_CMAC resqml20__CellStratigraphicUnits {
      public:
        /// Required element 'resqml20:UnitIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *UnitIndices;
        /// Required element 'resqml20:StratigraphicOrganization' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *StratigraphicOrganization;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__CellStratigraphicUnits, default initialized and not managed by a soap context
        virtual resqml20__CellStratigraphicUnits *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__CellStratigraphicUnits); }
      public:
        /// Constructor with default initializations
        resqml20__CellStratigraphicUnits() : UnitIndices(), StratigraphicOrganization(), soap() { }
        virtual ~resqml20__CellStratigraphicUnits() { }
        /// Friend allocator used by soap_new_resqml20__CellStratigraphicUnits(struct soap*, int)
        friend SOAP_FMAC1 resqml20__CellStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml20__CellStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:437 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology (-104)
/* complex XML schema type 'resqml20:SubnodeTopology': */
class SOAP_CMAC resqml20__SubnodeTopology {
      public:
        /// Optional element 'resqml20:VariableSubnodes' of XML schema type 'resqml20:VariableSubnodePatch'
        std::vector<resqml20__VariableSubnodePatch *> VariableSubnodes;
        /// Optional element 'resqml20:UniformSubnodes' of XML schema type 'resqml20:UniformSubnodePatch'
        std::vector<resqml20__UniformSubnodePatch *> UniformSubnodes;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SubnodeTopology, default initialized and not managed by a soap context
        virtual resqml20__SubnodeTopology *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SubnodeTopology); }
      public:
        /// Constructor with default initializations
        resqml20__SubnodeTopology() : VariableSubnodes(), UniformSubnodes(), soap() { }
        virtual ~resqml20__SubnodeTopology() { }
        /// Friend allocator used by soap_new_resqml20__SubnodeTopology(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__SubnodeTopology(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:439 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces (-105)
/* complex XML schema type 'resqml20:SplitFaces': */
class SOAP_CMAC resqml20__SplitFaces {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:ParentFaceIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentFaceIndices;
        /// Required element 'resqml20:CellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CellIndices;
        /// Optional element 'resqml20:SplitEdges' of XML schema type 'resqml20:SplitEdges'
        resqml20__SplitEdges *SplitEdges;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SplitFaces, default initialized and not managed by a soap context
        virtual resqml20__SplitFaces *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SplitFaces); }
      public:
        /// Constructor with default initializations
        resqml20__SplitFaces() : Count(), ParentFaceIndices(), CellIndices(), SplitEdges(), soap() { }
        virtual ~resqml20__SplitFaces() { }
        /// Friend allocator used by soap_new_resqml20__SplitFaces(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SplitFaces * SOAP_FMAC2 soap_instantiate_resqml20__SplitFaces(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:14926 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence (-824)
/* Wrapper: */
struct SOAP_CMAC __resqml20__IjGaps_sequence {
      public:
        /** Required element 'resqml20:SplitPillarCount' of XML schema type 'xsd:positiveInteger' */
        ULONG64 SplitPillarCount;
        /** Required element 'resqml20:ParentPillarIndices' of XML schema type 'resqml20:AbstractIntegerArray' */
        resqml20__AbstractIntegerArray *ParentPillarIndices;
        /** Required element 'resqml20:ColumnsPerSplitPillar' of XML schema type 'resqml20:ResqmlJaggedArray' */
        resqml20__ResqmlJaggedArray *ColumnsPerSplitPillar;
        /** Optional element 'resqml20:IjSplitColumnEdges' of XML schema type 'resqml20:IjSplitColumnEdges' */
        resqml20__IjSplitColumnEdges *IjSplitColumnEdges;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___resqml20__IjGaps_sequence; }
        /** Constructor with member initializations */
        __resqml20__IjGaps_sequence() : SplitPillarCount(), ParentPillarIndices(), ColumnsPerSplitPillar(), IjSplitColumnEdges() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __resqml20__IjGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml20__IjGaps_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:443 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps (-107)
/* complex XML schema type 'resqml20:IjGaps': */
class SOAP_CMAC resqml20__IjGaps {
      public:
        struct __resqml20__IjGaps_sequence *__IjGaps_sequence;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IjGaps, default initialized and not managed by a soap context
        virtual resqml20__IjGaps *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IjGaps); }
      public:
        /// Constructor with default initializations
        resqml20__IjGaps() : __IjGaps_sequence(), soap() { }
        virtual ~resqml20__IjGaps() { }
        /// Friend allocator used by soap_new_resqml20__IjGaps(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IjGaps * SOAP_FMAC2 soap_instantiate_resqml20__IjGaps(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:453 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid (-112)
/* complex XML schema type 'resqml20:GpGridColumnLayerGrid': */
class SOAP_CMAC resqml20__GpGridColumnLayerGrid {
      public:
        /// Required element 'resqml20:Nk' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Nk;
        /// Optional element 'resqml20:KGaps' of XML schema type 'resqml20:KGaps'
        resqml20__KGaps *KGaps;
        /// Optional element 'resqml20:IjkGridPatch' of XML schema type 'resqml20:GpGridIjkGridPatch'
        std::vector<resqml20__GpGridIjkGridPatch *> IjkGridPatch;
        /// Optional element 'resqml20:UnstructuredColumnLayerGridPatch' of XML schema type 'resqml20:GpGridUnstructuredColumnLayerGridPatch'
        std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *> UnstructuredColumnLayerGridPatch;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__GpGridColumnLayerGrid, default initialized and not managed by a soap context
        virtual resqml20__GpGridColumnLayerGrid *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__GpGridColumnLayerGrid); }
      public:
        /// Constructor with default initializations
        resqml20__GpGridColumnLayerGrid() : Nk(), KGaps(), IjkGridPatch(), UnstructuredColumnLayerGridPatch(), soap() { }
        virtual ~resqml20__GpGridColumnLayerGrid() { }
        /// Friend allocator used by soap_new_resqml20__GpGridColumnLayerGrid(struct soap*, int)
        friend SOAP_FMAC1 resqml20__GpGridColumnLayerGrid * SOAP_FMAC2 soap_instantiate_resqml20__GpGridColumnLayerGrid(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:455 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines (-113)
/* complex XML schema type 'resqml20:ColumnLayerSplitCoordinateLines': */
class SOAP_CMAC resqml20__ColumnLayerSplitCoordinateLines {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:PillarIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *PillarIndices;
        /// Required element 'resqml20:ColumnsPerSplitCoordinateLine' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *ColumnsPerSplitCoordinateLine;
        /// Optional element 'resqml20:SplitColumnEdges' of XML schema type 'resqml20:ColumnLayerSplitColumnEdges'
        resqml20__ColumnLayerSplitColumnEdges *SplitColumnEdges;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ColumnLayerSplitCoordinateLines, default initialized and not managed by a soap context
        virtual resqml20__ColumnLayerSplitCoordinateLines *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ColumnLayerSplitCoordinateLines); }
      public:
        /// Constructor with default initializations
        resqml20__ColumnLayerSplitCoordinateLines() : Count(), PillarIndices(), ColumnsPerSplitCoordinateLine(), SplitColumnEdges(), soap() { }
        virtual ~resqml20__ColumnLayerSplitCoordinateLines() { }
        /// Friend allocator used by soap_new_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ColumnLayerSplitCoordinateLines * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSplitCoordinateLines(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:15058 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence (-832)
/* Wrapper: */
struct SOAP_CMAC __resqml20__KGaps_sequence {
      public:
        /** Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger' */
        ULONG64 Count;
        /** Required element 'resqml20:GapAfterLayer' of XML schema type 'resqml20:AbstractBooleanArray' */
        resqml20__AbstractBooleanArray *GapAfterLayer;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___resqml20__KGaps_sequence; }
        /** Constructor with member initializations */
        __resqml20__KGaps_sequence() : Count(), GapAfterLayer() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __resqml20__KGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml20__KGaps_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:459 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps (-115)
/* complex XML schema type 'resqml20:KGaps': */
class SOAP_CMAC resqml20__KGaps {
      public:
        struct __resqml20__KGaps_sequence *__KGaps_sequence;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__KGaps, default initialized and not managed by a soap context
        virtual resqml20__KGaps *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__KGaps); }
      public:
        /// Constructor with default initializations
        resqml20__KGaps() : __KGaps_sequence(), soap() { }
        virtual ~resqml20__KGaps() { }
        /// Friend allocator used by soap_new_resqml20__KGaps(struct soap*, int)
        friend SOAP_FMAC1 resqml20__KGaps * SOAP_FMAC2 soap_instantiate_resqml20__KGaps(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:465 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges (-118)
/* complex XML schema type 'resqml20:UnstructuredColumnEdges': */
class SOAP_CMAC resqml20__UnstructuredColumnEdges {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:PillarsPerColumnEdge' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *PillarsPerColumnEdge;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UnstructuredColumnEdges, default initialized and not managed by a soap context
        virtual resqml20__UnstructuredColumnEdges *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UnstructuredColumnEdges); }
      public:
        /// Constructor with default initializations
        resqml20__UnstructuredColumnEdges() : Count(), PillarsPerColumnEdge(), soap() { }
        virtual ~resqml20__UnstructuredColumnEdges() { }
        /// Friend allocator used by soap_new_resqml20__UnstructuredColumnEdges(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UnstructuredColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredColumnEdges(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:467 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints (-119)
/* complex XML schema type 'resqml20:AdditionalGridPoints': */
class SOAP_CMAC resqml20__AdditionalGridPoints {
      public:
        /// Optional element 'resqml20:RepresentationPatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *RepresentationPatchIndex;
        /// Required element 'resqml20:Attachment' of XML schema type 'resqml20:GridGeometryAttachment'
        enum resqml20__GridGeometryAttachment Attachment;
        /// Required element 'resqml20:Points' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *Points;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AdditionalGridPoints, default initialized and not managed by a soap context
        virtual resqml20__AdditionalGridPoints *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AdditionalGridPoints); }
      public:
        /// Constructor with default initializations
        resqml20__AdditionalGridPoints() : RepresentationPatchIndex(), Attachment(), Points(), soap() { }
        virtual ~resqml20__AdditionalGridPoints() { }
        /// Friend allocator used by soap_new_resqml20__AdditionalGridPoints(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AdditionalGridPoints * SOAP_FMAC2 soap_instantiate_resqml20__AdditionalGridPoints(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:469 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges (-120)
/* complex XML schema type 'resqml20:IjSplitColumnEdges': */
class SOAP_CMAC resqml20__IjSplitColumnEdges {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:PillarsPerSplitColumnEdge' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *PillarsPerSplitColumnEdge;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IjSplitColumnEdges, default initialized and not managed by a soap context
        virtual resqml20__IjSplitColumnEdges *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IjSplitColumnEdges); }
      public:
        /// Constructor with default initializations
        resqml20__IjSplitColumnEdges() : Count(), PillarsPerSplitColumnEdge(), soap() { }
        virtual ~resqml20__IjSplitColumnEdges() { }
        /// Friend allocator used by soap_new_resqml20__IjSplitColumnEdges(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IjSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__IjSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:475 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits (-123)
/* complex XML schema type 'resqml20:IntervalStratigraphicUnits': */
class SOAP_CMAC resqml20__IntervalStratigraphicUnits {
      public:
        /// Required element 'resqml20:UnitIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *UnitIndices;
        /// Required element 'resqml20:StratigraphicOrganization' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *StratigraphicOrganization;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntervalStratigraphicUnits, default initialized and not managed by a soap context
        virtual resqml20__IntervalStratigraphicUnits *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntervalStratigraphicUnits); }
      public:
        /// Constructor with default initializations
        resqml20__IntervalStratigraphicUnits() : UnitIndices(), StratigraphicOrganization(), soap() { }
        virtual ~resqml20__IntervalStratigraphicUnits() { }
        /// Friend allocator used by soap_new_resqml20__IntervalStratigraphicUnits(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntervalStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml20__IntervalStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:477 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid (-124)
/* complex XML schema type 'resqml20:Regrid': */
class SOAP_CMAC resqml20__Regrid {
      public:
        /// Required element 'resqml20:InitialIndexOnParentGrid' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 InitialIndexOnParentGrid;
        /// Optional element 'resqml20:Intervals' of XML schema type 'resqml20:Intervals'
        resqml20__Intervals *Intervals;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Regrid, default initialized and not managed by a soap context
        virtual resqml20__Regrid *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Regrid); }
      public:
        /// Constructor with default initializations
        resqml20__Regrid() : InitialIndexOnParentGrid(), Intervals(), soap() { }
        virtual ~resqml20__Regrid() { }
        /// Friend allocator used by soap_new_resqml20__Regrid(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Regrid * SOAP_FMAC2 soap_instantiate_resqml20__Regrid(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:479 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation (-125)
/* complex XML schema type 'resqml20:Activation': */
class SOAP_CMAC resqml20__Activation {
      public:
        /// Required element 'resqml20:ActivationToggleIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ActivationToggleIndices;
        /// Required element 'resqml20:TimeSeries' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *TimeSeries;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Activation, default initialized and not managed by a soap context
        virtual resqml20__Activation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Activation); }
      public:
        /// Constructor with default initializations
        resqml20__Activation() : ActivationToggleIndices(), TimeSeries(), soap() { }
        virtual ~resqml20__Activation() { }
        /// Friend allocator used by soap_new_resqml20__Activation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Activation * SOAP_FMAC2 soap_instantiate_resqml20__Activation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:485 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations (-128)
/* complex XML schema type 'resqml20:ConnectionInterpretations': */
class SOAP_CMAC resqml20__ConnectionInterpretations {
      public:
        /// Required element 'resqml20:InterpretationIndices' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *InterpretationIndices;
        /// Required element 'resqml20:FeatureInterpretation' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> FeatureInterpretation;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ConnectionInterpretations, default initialized and not managed by a soap context
        virtual resqml20__ConnectionInterpretations *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ConnectionInterpretations); }
      public:
        /// Constructor with default initializations
        resqml20__ConnectionInterpretations() : InterpretationIndices(), FeatureInterpretation(), soap() { }
        virtual ~resqml20__ConnectionInterpretations() { }
        /// Friend allocator used by soap_new_resqml20__ConnectionInterpretations(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ConnectionInterpretations * SOAP_FMAC2 soap_instantiate_resqml20__ConnectionInterpretations(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:489 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges (-130)
/* complex XML schema type 'resqml20:SplitEdges': */
class SOAP_CMAC resqml20__SplitEdges {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:ParentEdgeIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentEdgeIndices;
        /// Required element 'resqml20:FacesPerSplitEdge' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *FacesPerSplitEdge;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SplitEdges, default initialized and not managed by a soap context
        virtual resqml20__SplitEdges *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SplitEdges); }
      public:
        /// Constructor with default initializations
        resqml20__SplitEdges() : Count(), ParentEdgeIndices(), FacesPerSplitEdge(), soap() { }
        virtual ~resqml20__SplitEdges() { }
        /// Friend allocator used by soap_new_resqml20__SplitEdges(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SplitEdges * SOAP_FMAC2 soap_instantiate_resqml20__SplitEdges(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:491 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits (-131)
/* complex XML schema type 'resqml20:CellFluidPhaseUnits': */
class SOAP_CMAC resqml20__CellFluidPhaseUnits {
      public:
        /// Required element 'resqml20:PhaseUnitIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *PhaseUnitIndices;
        /// Required element 'resqml20:FluidOrganization' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *FluidOrganization;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__CellFluidPhaseUnits, default initialized and not managed by a soap context
        virtual resqml20__CellFluidPhaseUnits *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__CellFluidPhaseUnits); }
      public:
        /// Constructor with default initializations
        resqml20__CellFluidPhaseUnits() : PhaseUnitIndices(), FluidOrganization(), soap() { }
        virtual ~resqml20__CellFluidPhaseUnits() { }
        /// Friend allocator used by soap_new_resqml20__CellFluidPhaseUnits(struct soap*, int)
        friend SOAP_FMAC1 resqml20__CellFluidPhaseUnits * SOAP_FMAC2 soap_instantiate_resqml20__CellFluidPhaseUnits(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:493 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell (-132)
/* complex XML schema type 'resqml20:NodesPerCell': */
class SOAP_CMAC resqml20__NodesPerCell {
      public:
        /// Required element 'resqml20:NodesPerCell' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *NodesPerCell;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__NodesPerCell, default initialized and not managed by a soap context
        virtual resqml20__NodesPerCell *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__NodesPerCell); }
      public:
        /// Constructor with default initializations
        resqml20__NodesPerCell() : NodesPerCell(), soap() { }
        virtual ~resqml20__NodesPerCell() { }
        /// Friend allocator used by soap_new_resqml20__NodesPerCell(struct soap*, int)
        friend SOAP_FMAC1 resqml20__NodesPerCell * SOAP_FMAC2 soap_instantiate_resqml20__NodesPerCell(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:497 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges (-134)
/* complex XML schema type 'resqml20:Edges': */
class SOAP_CMAC resqml20__Edges {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:NodesPerEdge' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *NodesPerEdge;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Edges, default initialized and not managed by a soap context
        virtual resqml20__Edges *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Edges); }
      public:
        /// Constructor with default initializations
        resqml20__Edges() : Count(), NodesPerEdge(), soap() { }
        virtual ~resqml20__Edges() { }
        /// Friend allocator used by soap_new_resqml20__Edges(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Edges * SOAP_FMAC2 soap_instantiate_resqml20__Edges(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:513 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces (-142)
/* complex XML schema type 'resqml20:UnstructuredGridHingeNodeFaces': */
class SOAP_CMAC resqml20__UnstructuredGridHingeNodeFaces {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:FaceIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *FaceIndices;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UnstructuredGridHingeNodeFaces, default initialized and not managed by a soap context
        virtual resqml20__UnstructuredGridHingeNodeFaces *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UnstructuredGridHingeNodeFaces); }
      public:
        /// Constructor with default initializations
        resqml20__UnstructuredGridHingeNodeFaces() : Count(), FaceIndices(), soap() { }
        virtual ~resqml20__UnstructuredGridHingeNodeFaces() { }
        /// Friend allocator used by soap_new_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UnstructuredGridHingeNodeFaces * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredGridHingeNodeFaces(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:15514 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence (-837)
/* Wrapper: */
struct SOAP_CMAC __resqml20__CellOverlap_sequence {
      public:
        /** Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger' */
        ULONG64 Count;
        /** Required element 'resqml20:ParentChildCellPairs' of XML schema type 'resqml20:AbstractIntegerArray' */
        resqml20__AbstractIntegerArray *ParentChildCellPairs;
        /** Optional element 'resqml20:OverlapVolume' of XML schema type 'resqml20:OverlapVolume' */
        resqml20__OverlapVolume *OverlapVolume;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___resqml20__CellOverlap_sequence; }
        /** Constructor with member initializations */
        __resqml20__CellOverlap_sequence() : Count(), ParentChildCellPairs(), OverlapVolume() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __resqml20__CellOverlap_sequence * SOAP_FMAC2 soap_instantiate___resqml20__CellOverlap_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:515 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap (-143)
/* complex XML schema type 'resqml20:CellOverlap': */
class SOAP_CMAC resqml20__CellOverlap {
      public:
        struct __resqml20__CellOverlap_sequence *__CellOverlap_sequence;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__CellOverlap, default initialized and not managed by a soap context
        virtual resqml20__CellOverlap *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__CellOverlap); }
      public:
        /// Constructor with default initializations
        resqml20__CellOverlap() : __CellOverlap_sequence(), soap() { }
        virtual ~resqml20__CellOverlap() { }
        /// Friend allocator used by soap_new_resqml20__CellOverlap(struct soap*, int)
        friend SOAP_FMAC1 resqml20__CellOverlap * SOAP_FMAC2 soap_instantiate_resqml20__CellOverlap(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:517 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges (-144)
/* complex XML schema type 'resqml20:ColumnLayerSplitColumnEdges': */
class SOAP_CMAC resqml20__ColumnLayerSplitColumnEdges {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:ParentColumnEdgeIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentColumnEdgeIndices;
        /// Required element 'resqml20:ColumnPerSplitColumnEdge' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ColumnPerSplitColumnEdge;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ColumnLayerSplitColumnEdges, default initialized and not managed by a soap context
        virtual resqml20__ColumnLayerSplitColumnEdges *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ColumnLayerSplitColumnEdges); }
      public:
        /// Constructor with default initializations
        resqml20__ColumnLayerSplitColumnEdges() : Count(), ParentColumnEdgeIndices(), ColumnPerSplitColumnEdge(), soap() { }
        virtual ~resqml20__ColumnLayerSplitColumnEdges() { }
        /// Friend allocator used by soap_new_resqml20__ColumnLayerSplitColumnEdges(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ColumnLayerSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:15598 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence (-840)
/* Wrapper: */
struct SOAP_CMAC __resqml20__OverlapVolume_sequence {
      public:
        /** Required element 'resqml20:VolumeUom' of XML schema type 'eml20:VolumeUom' */
        enum eml20__VolumeUom VolumeUom;
        /** Required element 'resqml20:OverlapVolumes' of XML schema type 'resqml20:AbstractDoubleArray' */
        resqml20__AbstractDoubleArray *OverlapVolumes;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___resqml20__OverlapVolume_sequence; }
        /** Constructor with member initializations */
        __resqml20__OverlapVolume_sequence() : VolumeUom(), OverlapVolumes() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __resqml20__OverlapVolume_sequence * SOAP_FMAC2 soap_instantiate___resqml20__OverlapVolume_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:521 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume (-146)
/* complex XML schema type 'resqml20:OverlapVolume': */
class SOAP_CMAC resqml20__OverlapVolume {
      public:
        struct __resqml20__OverlapVolume_sequence *__OverlapVolume_sequence;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__OverlapVolume, default initialized and not managed by a soap context
        virtual resqml20__OverlapVolume *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__OverlapVolume); }
      public:
        /// Constructor with default initializations
        resqml20__OverlapVolume() : __OverlapVolume_sequence(), soap() { }
        virtual ~resqml20__OverlapVolume() { }
        /// Friend allocator used by soap_new_resqml20__OverlapVolume(struct soap*, int)
        friend SOAP_FMAC1 resqml20__OverlapVolume * SOAP_FMAC2 soap_instantiate_resqml20__OverlapVolume(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:523 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals (-147)
/* complex XML schema type 'resqml20:Intervals': */
class SOAP_CMAC resqml20__Intervals {
      public:
        /// Required element 'resqml20:IntervalCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 IntervalCount;
        /// Required element 'resqml20:ParentCountPerInterval' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentCountPerInterval;
        /// Required element 'resqml20:ChildCountPerInterval' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ChildCountPerInterval;
        /// Optional element 'resqml20:ChildCellWeights' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *ChildCellWeights;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Intervals, default initialized and not managed by a soap context
        virtual resqml20__Intervals *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Intervals); }
      public:
        /// Constructor with default initializations
        resqml20__Intervals() : IntervalCount(), ParentCountPerInterval(), ChildCountPerInterval(), ChildCellWeights(), soap() { }
        virtual ~resqml20__Intervals() { }
        /// Friend allocator used by soap_new_resqml20__Intervals(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Intervals * SOAP_FMAC2 soap_instantiate_resqml20__Intervals(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:527 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow (-149)
/* complex XML schema type 'resqml20:AbstractParentWindow': */
class SOAP_CMAC resqml20__AbstractParentWindow {
      public:
        /// Optional element 'resqml20:CellOverlap' of XML schema type 'resqml20:CellOverlap'
        resqml20__CellOverlap *CellOverlap;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractParentWindow, default initialized and not managed by a soap context
        virtual resqml20__AbstractParentWindow *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractParentWindow); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractParentWindow() : CellOverlap(), soap() { }
        virtual ~resqml20__AbstractParentWindow() { }
        /// Friend allocator used by soap_new_resqml20__AbstractParentWindow(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParentWindow(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:533 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval (-152)
/* complex XML schema type 'resqml20:TimeInterval': */
class SOAP_CMAC resqml20__TimeInterval {
      public:
        /// Required element 'resqml20:ChronoBottom' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ChronoBottom;
        /// Required element 'resqml20:ChronoTop' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ChronoTop;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeInterval, default initialized and not managed by a soap context
        virtual resqml20__TimeInterval *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeInterval); }
      public:
        /// Constructor with default initializations
        resqml20__TimeInterval() : ChronoBottom(), ChronoTop(), soap() { }
        virtual ~resqml20__TimeInterval() { }
        /// Friend allocator used by soap_new_resqml20__TimeInterval(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeInterval * SOAP_FMAC2 soap_instantiate_resqml20__TimeInterval(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:539 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex (-155)
/* complex XML schema type 'resqml20:StratigraphicUnitInterpretationIndex': */
class SOAP_CMAC resqml20__StratigraphicUnitInterpretationIndex {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Required element 'resqml20:Unit' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Unit;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StratigraphicUnitInterpretationIndex, default initialized and not managed by a soap context
        virtual resqml20__StratigraphicUnitInterpretationIndex *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StratigraphicUnitInterpretationIndex); }
      public:
        /// Constructor with default initializations
        resqml20__StratigraphicUnitInterpretationIndex() : Index(), Unit(), soap() { }
        virtual ~resqml20__StratigraphicUnitInterpretationIndex() { }
        /// Friend allocator used by soap_new_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StratigraphicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__StratigraphicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:549 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex (-160)
/* complex XML schema type 'resqml20:GeologicUnitInterpretationIndex': */
class SOAP_CMAC resqml20__GeologicUnitInterpretationIndex {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Required element 'resqml20:Unit' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Unit;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__GeologicUnitInterpretationIndex, default initialized and not managed by a soap context
        virtual resqml20__GeologicUnitInterpretationIndex *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__GeologicUnitInterpretationIndex); }
      public:
        /// Constructor with default initializations
        resqml20__GeologicUnitInterpretationIndex() : Index(), Unit(), soap() { }
        virtual ~resqml20__GeologicUnitInterpretationIndex() { }
        /// Friend allocator used by soap_new_resqml20__GeologicUnitInterpretationIndex(struct soap*, int)
        friend SOAP_FMAC1 resqml20__GeologicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__GeologicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:557 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex (-164)
/* complex XML schema type 'resqml20:HorizonInterpretationIndex': */
class SOAP_CMAC resqml20__HorizonInterpretationIndex {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Optional element 'resqml20:StratigraphicRank' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *StratigraphicRank;
        /// Required element 'resqml20:Horizon' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Horizon;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__HorizonInterpretationIndex, default initialized and not managed by a soap context
        virtual resqml20__HorizonInterpretationIndex *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__HorizonInterpretationIndex); }
      public:
        /// Constructor with default initializations
        resqml20__HorizonInterpretationIndex() : Index(), StratigraphicRank(), Horizon(), soap() { }
        virtual ~resqml20__HorizonInterpretationIndex() { }
        /// Friend allocator used by soap_new_resqml20__HorizonInterpretationIndex(struct soap*, int)
        friend SOAP_FMAC1 resqml20__HorizonInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__HorizonInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:567 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart (-169)
/* complex XML schema type 'resqml20:AbstractContactInterpretationPart': */
class SOAP_CMAC resqml20__AbstractContactInterpretationPart {
      public:
        /// Required element 'resqml20:ContactRelationship' of XML schema type 'resqml20:ContactRelationship'
        enum resqml20__ContactRelationship ContactRelationship;
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Optional element 'resqml20:PartOf' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *PartOf;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractContactInterpretationPart, default initialized and not managed by a soap context
        virtual resqml20__AbstractContactInterpretationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractContactInterpretationPart); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractContactInterpretationPart() : ContactRelationship(), Index(), PartOf(), soap() { }
        virtual ~resqml20__AbstractContactInterpretationPart() { }
        /// Friend allocator used by soap_new_resqml20__AbstractContactInterpretationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__AbstractContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:571 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow (-171)
/* complex XML schema type 'resqml20:FaultThrow': */
class SOAP_CMAC resqml20__FaultThrow {
      public:
        /// Required element 'resqml20:Throw' of XML schema type 'resqml20:ThrowKind'
        std::vector<enum resqml20__ThrowKind> Throw;
        /// Optional element 'resqml20:HasOccuredDuring' of XML schema type 'resqml20:TimeInterval'
        resqml20__TimeInterval *HasOccuredDuring;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__FaultThrow, default initialized and not managed by a soap context
        virtual resqml20__FaultThrow *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__FaultThrow); }
      public:
        /// Constructor with default initializations
        resqml20__FaultThrow() : Throw(), HasOccuredDuring(), soap() { }
        virtual ~resqml20__FaultThrow() { }
        /// Friend allocator used by soap_new_resqml20__FaultThrow(struct soap*, int)
        friend SOAP_FMAC1 resqml20__FaultThrow * SOAP_FMAC2 soap_instantiate_resqml20__FaultThrow(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:577 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex (-174)
/* complex XML schema type 'resqml20:RockFluidUnitInterpretationIndex': */
class SOAP_CMAC resqml20__RockFluidUnitInterpretationIndex {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Required element 'resqml20:RockFluidUnit' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *RockFluidUnit;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__RockFluidUnitInterpretationIndex, default initialized and not managed by a soap context
        virtual resqml20__RockFluidUnitInterpretationIndex *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__RockFluidUnitInterpretationIndex); }
      public:
        /// Constructor with default initializations
        resqml20__RockFluidUnitInterpretationIndex() : Index(), RockFluidUnit(), soap() { }
        virtual ~resqml20__RockFluidUnitInterpretationIndex() { }
        /// Friend allocator used by soap_new_resqml20__RockFluidUnitInterpretationIndex(struct soap*, int)
        friend SOAP_FMAC1 resqml20__RockFluidUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml20__RockFluidUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:595 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank (-183)
/* complex XML schema type 'resqml20:ChronostratigraphicRank': */
class SOAP_CMAC resqml20__ChronostratigraphicRank {
      public:
        /// Required element 'resqml20:Name' of XML schema type 'eml20:NameString'
        std::string Name;
        /// Required element 'resqml20:Contains' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Contains;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ChronostratigraphicRank, default initialized and not managed by a soap context
        virtual resqml20__ChronostratigraphicRank *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ChronostratigraphicRank); }
      public:
        /// Constructor with default initializations
        resqml20__ChronostratigraphicRank() : Name(), Contains(), soap() { }
        virtual ~resqml20__ChronostratigraphicRank() { }
        /// Friend allocator used by soap_new_resqml20__ChronostratigraphicRank(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ChronostratigraphicRank * SOAP_FMAC2 soap_instantiate_resqml20__ChronostratigraphicRank(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:613 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d (-192)
/* complex XML schema type 'resqml20:Point3d': */
class SOAP_CMAC resqml20__Point3d {
      public:
        /// Required element 'resqml20:Coordinate1' of XML schema type 'xsd:double'
        double Coordinate1;
        /// Required element 'resqml20:Coordinate2' of XML schema type 'xsd:double'
        double Coordinate2;
        /// Required element 'resqml20:Coordinate3' of XML schema type 'xsd:double'
        double Coordinate3;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3d, default initialized and not managed by a soap context
        virtual resqml20__Point3d *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3d); }
      public:
        /// Constructor with default initializations
        resqml20__Point3d() : Coordinate1(), Coordinate2(), Coordinate3(), soap() { }
        virtual ~resqml20__Point3d() { }
        /// Friend allocator used by soap_new_resqml20__Point3d(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3d * SOAP_FMAC2 soap_instantiate_resqml20__Point3d(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:615 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage (-193)
/* complex XML schema type 'resqml20:TimeSeriesParentage': */
class SOAP_CMAC resqml20__TimeSeriesParentage {
      public:
        /// Required element 'resqml20:HasOverlap' of XML schema type 'xsd:boolean'
        bool HasOverlap;
        /// Required element 'resqml20:ParentTimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *ParentTimeIndex;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeSeriesParentage, default initialized and not managed by a soap context
        virtual resqml20__TimeSeriesParentage *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeSeriesParentage); }
      public:
        /// Constructor with default initializations
        resqml20__TimeSeriesParentage() : HasOverlap(), ParentTimeIndex(), soap() { }
        virtual ~resqml20__TimeSeriesParentage() { }
        /// Friend allocator used by soap_new_resqml20__TimeSeriesParentage(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeSeriesParentage * SOAP_FMAC2 soap_instantiate_resqml20__TimeSeriesParentage(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:619 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex (-195)
/* complex XML schema type 'resqml20:TimeIndex': */
class SOAP_CMAC resqml20__TimeIndex {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Required element 'resqml20:TimeSeries' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *TimeSeries;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeIndex, default initialized and not managed by a soap context
        virtual resqml20__TimeIndex *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeIndex); }
      public:
        /// Constructor with default initializations
        resqml20__TimeIndex() : Index(), TimeSeries(), soap() { }
        virtual ~resqml20__TimeIndex() { }
        /// Friend allocator used by soap_new_resqml20__TimeIndex(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeIndex * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndex(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:621 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp (-196)
/* complex XML schema type 'resqml20:Timestamp': */
class SOAP_CMAC resqml20__Timestamp {
      public:
        /// Typedef xsd__dateTime with custom serializer for struct tm
        struct tm DateTime;
        /// Optional element 'resqml20:YearOffset' of XML schema type 'xsd:long'
        LONG64 *YearOffset;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Timestamp, default initialized and not managed by a soap context
        virtual resqml20__Timestamp *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Timestamp); }
      public:
        /// Constructor with default initializations
        resqml20__Timestamp() : DateTime(), YearOffset(), soap() { }
        virtual ~resqml20__Timestamp() { }
        /// Friend allocator used by soap_new_resqml20__Timestamp(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Timestamp * SOAP_FMAC2 soap_instantiate_resqml20__Timestamp(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:625 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray (-198)
/* complex XML schema type 'resqml20:ResqmlJaggedArray': */
class SOAP_CMAC resqml20__ResqmlJaggedArray {
      public:
        /// Required element 'resqml20:Elements' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *Elements;
        /// Required element 'resqml20:CumulativeLength' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CumulativeLength;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ResqmlJaggedArray, default initialized and not managed by a soap context
        virtual resqml20__ResqmlJaggedArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ResqmlJaggedArray); }
      public:
        /// Constructor with default initializations
        resqml20__ResqmlJaggedArray() : Elements(), CumulativeLength(), soap() { }
        virtual ~resqml20__ResqmlJaggedArray() { }
        /// Friend allocator used by soap_new_resqml20__ResqmlJaggedArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ResqmlJaggedArray * SOAP_FMAC2 soap_instantiate_resqml20__ResqmlJaggedArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:627 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair (-199)
/* complex XML schema type 'resqml20:NameValuePair': */
class SOAP_CMAC resqml20__NameValuePair {
      public:
        /// Required element 'resqml20:Name' of XML schema type 'xsd:string'
        std::string Name;
        /// Required element 'resqml20:Value' of XML schema type 'xsd:string'
        std::string Value;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__NameValuePair, default initialized and not managed by a soap context
        virtual resqml20__NameValuePair *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__NameValuePair); }
      public:
        /// Constructor with default initializations
        resqml20__NameValuePair() : Name(), Value(), soap() { }
        virtual ~resqml20__NameValuePair() { }
        /// Friend allocator used by soap_new_resqml20__NameValuePair(struct soap*, int)
        friend SOAP_FMAC1 resqml20__NameValuePair * SOAP_FMAC2 soap_instantiate_resqml20__NameValuePair(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:637 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection (-204)
/* complex XML schema type 'resqml20:WellboreTrajectoryParentIntersection': */
class SOAP_CMAC resqml20__WellboreTrajectoryParentIntersection {
      public:
        /// Required element 'resqml20:KickoffMd' of XML schema type 'xsd:double'
        double KickoffMd;
        /// Required element 'resqml20:ParentMd' of XML schema type 'xsd:double'
        double ParentMd;
        /// Required element 'resqml20:ParentTrajectory' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ParentTrajectory;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__WellboreTrajectoryParentIntersection, default initialized and not managed by a soap context
        virtual resqml20__WellboreTrajectoryParentIntersection *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__WellboreTrajectoryParentIntersection); }
      public:
        /// Constructor with default initializations
        resqml20__WellboreTrajectoryParentIntersection() : KickoffMd(), ParentMd(), ParentTrajectory(), soap() { }
        virtual ~resqml20__WellboreTrajectoryParentIntersection() { }
        /// Friend allocator used by soap_new_resqml20__WellboreTrajectoryParentIntersection(struct soap*, int)
        friend SOAP_FMAC1 resqml20__WellboreTrajectoryParentIntersection * SOAP_FMAC2 soap_instantiate_resqml20__WellboreTrajectoryParentIntersection(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:663 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart (-217)
/* complex XML schema type 'resqml20:AbstractContactRepresentationPart': */
class SOAP_CMAC resqml20__AbstractContactRepresentationPart {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractContactRepresentationPart, default initialized and not managed by a soap context
        virtual resqml20__AbstractContactRepresentationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractContactRepresentationPart); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractContactRepresentationPart() : Index(), soap() { }
        virtual ~resqml20__AbstractContactRepresentationPart() { }
        /// Friend allocator used by soap_new_resqml20__AbstractContactRepresentationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__AbstractContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:673 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion (-222)
/* complex XML schema type 'resqml20:VolumeRegion': */
class SOAP_CMAC resqml20__VolumeRegion {
      public:
        /// Required element 'resqml20:PatchIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 PatchIndex;
        /// Optional element 'resqml20:InternalShells' of XML schema type 'resqml20:VolumeShell'
        std::vector<resqml20__VolumeShell *> InternalShells;
        /// Required element 'resqml20:Represents' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Represents;
        /// Required element 'resqml20:ExternalShell' of XML schema type 'resqml20:VolumeShell'
        resqml20__VolumeShell *ExternalShell;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__VolumeRegion, default initialized and not managed by a soap context
        virtual resqml20__VolumeRegion *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__VolumeRegion); }
      public:
        /// Constructor with default initializations
        resqml20__VolumeRegion() : PatchIndex(), InternalShells(), Represents(), ExternalShell(), soap() { }
        virtual ~resqml20__VolumeRegion() { }
        /// Friend allocator used by soap_new_resqml20__VolumeRegion(struct soap*, int)
        friend SOAP_FMAC1 resqml20__VolumeRegion * SOAP_FMAC2 soap_instantiate_resqml20__VolumeRegion(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:675 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell (-223)
/* complex XML schema type 'resqml20:VolumeShell': */
class SOAP_CMAC resqml20__VolumeShell {
      public:
        /// Required element 'resqml20:ShellUid' of XML schema type 'xsd:string'
        std::string ShellUid;
        /// Required element 'resqml20:MacroFaces' of XML schema type 'resqml20:OrientedMacroFace'
        std::vector<resqml20__OrientedMacroFace *> MacroFaces;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__VolumeShell, default initialized and not managed by a soap context
        virtual resqml20__VolumeShell *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__VolumeShell); }
      public:
        /// Constructor with default initializations
        resqml20__VolumeShell() : ShellUid(), MacroFaces(), soap() { }
        virtual ~resqml20__VolumeShell() { }
        /// Friend allocator used by soap_new_resqml20__VolumeShell(struct soap*, int)
        friend SOAP_FMAC1 resqml20__VolumeShell * SOAP_FMAC2 soap_instantiate_resqml20__VolumeShell(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:689 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries (-230)
/* complex XML schema type 'resqml20:PatchBoundaries': */
class SOAP_CMAC resqml20__PatchBoundaries {
      public:
        /// Optional element 'resqml20:InnerRing' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> InnerRing;
        /// Optional element 'resqml20:OuterRing' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *OuterRing;
        /// Required element 'resqml20:ReferencedPatch' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 ReferencedPatch;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PatchBoundaries, default initialized and not managed by a soap context
        virtual resqml20__PatchBoundaries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PatchBoundaries); }
      public:
        /// Constructor with default initializations
        resqml20__PatchBoundaries() : InnerRing(), OuterRing(), ReferencedPatch(), soap() { }
        virtual ~resqml20__PatchBoundaries() { }
        /// Friend allocator used by soap_new_resqml20__PatchBoundaries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PatchBoundaries * SOAP_FMAC2 soap_instantiate_resqml20__PatchBoundaries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:699 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace (-235)
/* complex XML schema type 'resqml20:OrientedMacroFace': */
class SOAP_CMAC resqml20__OrientedMacroFace {
      public:
        /// Required element 'resqml20:PatchIndexOfRepresentation' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 PatchIndexOfRepresentation;
        /// Required element 'resqml20:RepresentationIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 RepresentationIndex;
        /// Required element 'resqml20:SideIsPlus' of XML schema type 'xsd:boolean'
        bool SideIsPlus;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__OrientedMacroFace, default initialized and not managed by a soap context
        virtual resqml20__OrientedMacroFace *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__OrientedMacroFace); }
      public:
        /// Constructor with default initializations
        resqml20__OrientedMacroFace() : PatchIndexOfRepresentation(), RepresentationIndex(), SideIsPlus(), soap() { }
        virtual ~resqml20__OrientedMacroFace() { }
        /// Friend allocator used by soap_new_resqml20__OrientedMacroFace(struct soap*, int)
        friend SOAP_FMAC1 resqml20__OrientedMacroFace * SOAP_FMAC2 soap_instantiate_resqml20__OrientedMacroFace(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:701 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity (-236)
/* complex XML schema type 'resqml20:ContactIdentity': */
class SOAP_CMAC resqml20__ContactIdentity {
      public:
        /// Required element 'resqml20:IdentityKind' of XML schema type 'resqml20:IdentityKind'
        enum resqml20__IdentityKind IdentityKind;
        /// Required element 'resqml20:ListOfContactRepresentations' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ListOfContactRepresentations;
        /// Optional element 'resqml20:ListOfIdenticalNodes' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ListOfIdenticalNodes;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ContactIdentity, default initialized and not managed by a soap context
        virtual resqml20__ContactIdentity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ContactIdentity); }
      public:
        /// Constructor with default initializations
        resqml20__ContactIdentity() : IdentityKind(), ListOfContactRepresentations(), ListOfIdenticalNodes(), soap() { }
        virtual ~resqml20__ContactIdentity() { }
        /// Friend allocator used by soap_new_resqml20__ContactIdentity(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ContactIdentity * SOAP_FMAC2 soap_instantiate_resqml20__ContactIdentity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:721 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference (-246)
/* complex XML schema type 'resqml20:WitsmlWellboreReference': */
class SOAP_CMAC resqml20__WitsmlWellboreReference {
      public:
        /// Required element 'resqml20:WitsmlWell' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlWell;
        /// Required element 'resqml20:WitsmlWellbore' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlWellbore;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__WitsmlWellboreReference, default initialized and not managed by a soap context
        virtual resqml20__WitsmlWellboreReference *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__WitsmlWellboreReference); }
      public:
        /// Constructor with default initializations
        resqml20__WitsmlWellboreReference() : WitsmlWell(), WitsmlWellbore(), soap() { }
        virtual ~resqml20__WitsmlWellboreReference() { }
        /// Friend allocator used by soap_new_resqml20__WitsmlWellboreReference(struct soap*, int)
        friend SOAP_FMAC1 resqml20__WitsmlWellboreReference * SOAP_FMAC2 soap_instantiate_resqml20__WitsmlWellboreReference(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:731 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate (-251)
/* complex XML schema type 'resqml20:ParameterTemplate': */
class SOAP_CMAC resqml20__ParameterTemplate {
      public:
        /// Optional element 'resqml20:KeyConstraint' of XML schema type 'xsd:string'
        std::vector<std::string> KeyConstraint;
        /// Required element 'resqml20:IsInput' of XML schema type 'xsd:boolean'
        bool IsInput;
        /// Optional element 'resqml20:AllowedKind' of XML schema type 'resqml20:ParameterKind'
        std::vector<enum resqml20__ParameterKind> AllowedKind;
        /// Required element 'resqml20:IsOutput' of XML schema type 'xsd:boolean'
        bool IsOutput;
        /// Required element 'resqml20:Title' of XML schema type 'xsd:string'
        std::string Title;
        /// Optional element 'resqml20:DataObjectContentType' of XML schema type 'xsd:string'
        std::string *DataObjectContentType;
        /// Required element 'resqml20:MaxOccurs' of XML schema type 'xsd:long'
        LONG64 MaxOccurs;
        /// Required element 'resqml20:MinOccurs' of XML schema type 'xsd:long'
        LONG64 MinOccurs;
        /// Optional element 'resqml20:Constraint' of XML schema type 'xsd:string'
        std::string *Constraint;
        /// Optional element 'resqml20:DefaultValue' of XML schema type 'resqml20:AbstractActivityParameter'
        std::vector<resqml20__AbstractActivityParameter *> DefaultValue;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParameterTemplate, default initialized and not managed by a soap context
        virtual resqml20__ParameterTemplate *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParameterTemplate); }
      public:
        /// Constructor with default initializations
        resqml20__ParameterTemplate() : KeyConstraint(), IsInput(), AllowedKind(), IsOutput(), Title(), DataObjectContentType(), MaxOccurs(), MinOccurs(), Constraint(), DefaultValue(), soap() { }
        virtual ~resqml20__ParameterTemplate() { }
        /// Friend allocator used by soap_new_resqml20__ParameterTemplate(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParameterTemplate * SOAP_FMAC2 soap_instantiate_resqml20__ParameterTemplate(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:739 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey (-255)
/* complex XML schema type 'resqml20:AbstractParameterKey': */
class SOAP_CMAC resqml20__AbstractParameterKey {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractParameterKey, default initialized and not managed by a soap context
        virtual resqml20__AbstractParameterKey *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractParameterKey); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractParameterKey() : soap() { }
        virtual ~resqml20__AbstractParameterKey() { }
        /// Friend allocator used by soap_new_resqml20__AbstractParameterKey(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParameterKey(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:743 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter (-257)
/* complex XML schema type 'resqml20:AbstractActivityParameter': */
class SOAP_CMAC resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:Title' of XML schema type 'xsd:string'
        std::string Title;
        /// Optional element 'resqml20:Index' of XML schema type 'xsd:long'
        LONG64 *Index;
        /// Optional element 'resqml20:Selection' of XML schema type 'xsd:string'
        std::string *Selection;
        /// Optional element 'resqml20:Key' of XML schema type 'resqml20:AbstractParameterKey'
        std::vector<resqml20__AbstractParameterKey *> Key;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractActivityParameter, default initialized and not managed by a soap context
        virtual resqml20__AbstractActivityParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractActivityParameter); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractActivityParameter() : Title(), Index(), Selection(), Key(), soap() { }
        virtual ~resqml20__AbstractActivityParameter() { }
        /// Friend allocator used by soap_new_resqml20__AbstractActivityParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractActivityParameter * SOAP_FMAC2 soap_instantiate_resqml20__AbstractActivityParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:753 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores (-262)
/* complex XML schema type 'resqml20:StreamlineWellbores': */
class SOAP_CMAC resqml20__StreamlineWellbores {
      public:
        /// Required element 'resqml20:InjectorPerLine' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *InjectorPerLine;
        /// Required element 'resqml20:ProducerPerLine' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ProducerPerLine;
        /// Required element 'resqml20:WellboreTrajectoryRepresentation' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> WellboreTrajectoryRepresentation;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StreamlineWellbores, default initialized and not managed by a soap context
        virtual resqml20__StreamlineWellbores *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StreamlineWellbores); }
      public:
        /// Constructor with default initializations
        resqml20__StreamlineWellbores() : InjectorPerLine(), ProducerPerLine(), WellboreTrajectoryRepresentation(), soap() { }
        virtual ~resqml20__StreamlineWellbores() { }
        /// Friend allocator used by soap_new_resqml20__StreamlineWellbores(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StreamlineWellbores * SOAP_FMAC2 soap_instantiate_resqml20__StreamlineWellbores(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:755 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells (-263)
/* complex XML schema type 'resqml20:IntervalGridCells': */
class SOAP_CMAC resqml20__IntervalGridCells {
      public:
        /// Required element 'resqml20:CellCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 CellCount;
        /// Required element 'resqml20:GridIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *GridIndices;
        /// Required element 'resqml20:CellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CellIndices;
        /// Required element 'resqml20:LocalFacePairPerCellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices;
        /// Required element 'resqml20:Grids' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Grids;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntervalGridCells, default initialized and not managed by a soap context
        virtual resqml20__IntervalGridCells *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntervalGridCells); }
      public:
        /// Constructor with default initializations
        resqml20__IntervalGridCells() : CellCount(), GridIndices(), CellIndices(), LocalFacePairPerCellIndices(), Grids(), soap() { }
        virtual ~resqml20__IntervalGridCells() { }
        /// Friend allocator used by soap_new_resqml20__IntervalGridCells(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntervalGridCells * SOAP_FMAC2 soap_instantiate_resqml20__IntervalGridCells(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:757 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices (-264)
/* complex XML schema type 'resqml20:TimeIndices': */
class SOAP_CMAC resqml20__TimeIndices {
      public:
        /// Required element 'resqml20:TimeIndexCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TimeIndexCount;
        /// Optional element 'resqml20:TimeIndexStart' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *TimeIndexStart;
        /// Optional element 'resqml20:SimulatorTimeStep' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *SimulatorTimeStep;
        /// Required element 'resqml20:UseInterval' of XML schema type 'xsd:boolean'
        bool UseInterval;
        /// Required element 'resqml20:TimeSeries' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *TimeSeries;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeIndices, default initialized and not managed by a soap context
        virtual resqml20__TimeIndices *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeIndices); }
      public:
        /// Constructor with default initializations
        resqml20__TimeIndices() : TimeIndexCount(), TimeIndexStart(), SimulatorTimeStep(), UseInterval(), TimeSeries(), soap() { }
        virtual ~resqml20__TimeIndices() { }
        /// Friend allocator used by soap_new_resqml20__TimeIndices(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeIndices * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndices(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:769 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData (-270)
/* complex XML schema type 'eml20:CustomData': */
class SOAP_CMAC eml20__CustomData {
      public:
        std::vector<char *> __any;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__CustomData, default initialized and not managed by a soap context
        virtual eml20__CustomData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__CustomData); }
      public:
        /// Constructor with default initializations
        eml20__CustomData() : __any(), soap() { }
        virtual ~eml20__CustomData() { }
        /// Friend allocator used by soap_new_eml20__CustomData(struct soap*, int)
        friend SOAP_FMAC1 eml20__CustomData * SOAP_FMAC2 soap_instantiate_eml20__CustomData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:771 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation (-271)
/* complex XML schema type 'eml20:Citation': */
class SOAP_CMAC eml20__Citation {
      public:
        /// Required element 'eml20:Title' of XML schema type 'eml20:DescriptionString'
        std::string Title;
        /// Required element 'eml20:Originator' of XML schema type 'eml20:NameString'
        std::string Originator;
        /// Typedef xsd__dateTime with custom serializer for struct tm
        struct tm Creation;
        /// Required element 'eml20:Format' of XML schema type 'eml20:DescriptionString'
        std::string Format;
        /// Optional element 'eml20:Editor' of XML schema type 'eml20:NameString'
        std::string *Editor;
        /// Optional element 'eml20:LastUpdate' of XML schema type 'xsd:dateTime'
        struct tm *LastUpdate;
        /// Optional element 'eml20:VersionString' of XML schema type 'xsd:string'
        std::string *VersionString;
        /// Optional element 'eml20:Description' of XML schema type 'eml20:CommentString'
        std::string *Description;
        /// Optional element 'eml20:DescriptiveKeywords' of XML schema type 'eml20:CommentString'
        std::string *DescriptiveKeywords;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__Citation, default initialized and not managed by a soap context
        virtual eml20__Citation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__Citation); }
      public:
        /// Constructor with default initializations
        eml20__Citation() : Title(), Originator(), Creation(), Format(), Editor(), LastUpdate(), VersionString(), Description(), DescriptiveKeywords(), soap() { }
        virtual ~eml20__Citation() { }
        /// Friend allocator used by soap_new_eml20__Citation(struct soap*, int)
        friend SOAP_FMAC1 eml20__Citation * SOAP_FMAC2 soap_instantiate_eml20__Citation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:773 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject (-272)
/* complex XML schema type 'eml20:AbstractObject': */
class SOAP_CMAC eml20__AbstractObject {
      public:
        /// Optional element 'eml20:Citation' of XML schema type 'eml20:Citation'
        eml20__Citation *Citation;
        /// Optional element 'eml20:Aliases' of XML schema type 'eml20:ObjectAlias'
        std::vector<eml20__ObjectAlias *> Aliases;
        /// Optional element 'eml20:CustomData' of XML schema type 'eml20:CustomData'
        eml20__CustomData *CustomData;
        /// Required attribute 'schemaVersion' of XML schema type 'xsd:string'
        std::string schemaVersion;
        /// Required attribute 'uuid' of XML schema type 'eml20:UuidString'
        std::string uuid;
        /// Optional attribute 'objectVersion' of XML schema type 'eml20:NameString'
        std::string *objectVersion;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AbstractObject, default initialized and not managed by a soap context
        virtual eml20__AbstractObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AbstractObject); }
      public:
        /// Constructor with default initializations
        eml20__AbstractObject() : Citation(), Aliases(), CustomData(), schemaVersion(), uuid(), objectVersion(), soap() { }
        virtual ~eml20__AbstractObject() { }
        /// Friend allocator used by soap_new_eml20__AbstractObject(struct soap*, int)
        friend SOAP_FMAC1 eml20__AbstractObject * SOAP_FMAC2 soap_instantiate_eml20__AbstractObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:775 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias (-273)
/* complex XML schema type 'eml20:ObjectAlias': */
class SOAP_CMAC eml20__ObjectAlias {
      public:
        /// Required element 'eml20:Identifier' of XML schema type 'xsd:string'
        std::string Identifier;
        /// Optional element 'eml20:Description' of XML schema type 'eml20:DescriptionString'
        std::string *Description;
        /// Optional attribute 'authority' of XML schema type 'eml20:NameString'
        std::string *authority;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ObjectAlias, default initialized and not managed by a soap context
        virtual eml20__ObjectAlias *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ObjectAlias); }
      public:
        /// Constructor with default initializations
        eml20__ObjectAlias() : Identifier(), Description(), authority(), soap() { }
        virtual ~eml20__ObjectAlias() { }
        /// Friend allocator used by soap_new_eml20__ObjectAlias(struct soap*, int)
        friend SOAP_FMAC1 eml20__ObjectAlias * SOAP_FMAC2 soap_instantiate_eml20__ObjectAlias(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:787 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs (-279)
/* complex XML schema type 'eml20:AbstractVerticalCrs': */
class SOAP_CMAC eml20__AbstractVerticalCrs {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AbstractVerticalCrs, default initialized and not managed by a soap context
        virtual eml20__AbstractVerticalCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AbstractVerticalCrs); }
      public:
        /// Constructor with default initializations
        eml20__AbstractVerticalCrs() : soap() { }
        virtual ~eml20__AbstractVerticalCrs() { }
        /// Friend allocator used by soap_new_eml20__AbstractVerticalCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__AbstractVerticalCrs * SOAP_FMAC2 soap_instantiate_eml20__AbstractVerticalCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:789 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs (-280)
/* complex XML schema type 'eml20:AbstractProjectedCrs': */
class SOAP_CMAC eml20__AbstractProjectedCrs {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AbstractProjectedCrs, default initialized and not managed by a soap context
        virtual eml20__AbstractProjectedCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AbstractProjectedCrs); }
      public:
        /// Constructor with default initializations
        eml20__AbstractProjectedCrs() : soap() { }
        virtual ~eml20__AbstractProjectedCrs() { }
        /// Friend allocator used by soap_new_eml20__AbstractProjectedCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__AbstractProjectedCrs * SOAP_FMAC2 soap_instantiate_eml20__AbstractProjectedCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:797 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset (-284)
/* complex XML schema type 'eml20:Hdf5Dataset': */
class SOAP_CMAC eml20__Hdf5Dataset {
      public:
        /// Required element 'eml20:PathInHdfFile' of XML schema type 'xsd:string'
        std::string PathInHdfFile;
        /// Required element 'eml20:HdfProxy' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *HdfProxy;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__Hdf5Dataset, default initialized and not managed by a soap context
        virtual eml20__Hdf5Dataset *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__Hdf5Dataset); }
      public:
        /// Constructor with default initializations
        eml20__Hdf5Dataset() : PathInHdfFile(), HdfProxy(), soap() { }
        virtual ~eml20__Hdf5Dataset() { }
        /// Friend allocator used by soap_new_eml20__Hdf5Dataset(struct soap*, int)
        friend SOAP_FMAC1 eml20__Hdf5Dataset * SOAP_FMAC2 soap_instantiate_eml20__Hdf5Dataset(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:801 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference (-286)
/* complex XML schema type 'eml20:DataObjectReference': */
class SOAP_CMAC eml20__DataObjectReference {
      public:
        /// Required element 'eml20:ContentType' of XML schema type 'xsd:string'
        std::string ContentType;
        /// Required element 'eml20:Title' of XML schema type 'eml20:DescriptionString'
        std::string Title;
        /// Required element 'eml20:UUID' of XML schema type 'eml20:UuidString'
        std::string UUID;
        /// Optional element 'eml20:UuidAuthority' of XML schema type 'xsd:string'
        std::string *UuidAuthority;
        /// Optional element 'eml20:VersionString' of XML schema type 'eml20:NameString'
        std::string *VersionString;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DataObjectReference, default initialized and not managed by a soap context
        virtual eml20__DataObjectReference *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DataObjectReference); }
      public:
        /// Constructor with default initializations
        eml20__DataObjectReference() : ContentType(), Title(), UUID(), UuidAuthority(), VersionString(), soap() { }
        virtual ~eml20__DataObjectReference() { }
        /// Friend allocator used by soap_new_eml20__DataObjectReference(struct soap*, int)
        friend SOAP_FMAC1 eml20__DataObjectReference * SOAP_FMAC2 soap_instantiate_eml20__DataObjectReference(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1163 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType (-467)
/* complex XML schema type 'gml:AbstractGMLType': */
class SOAP_CMAC gml__AbstractGMLType {
      public:
        /// Optional element 'gml:description' of XML schema type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XML schema type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Optional element 'gml:identifier' of XML schema type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XML schema type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// Required attribute 'gml:id' of XML schema type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGMLType, default initialized and not managed by a soap context
        virtual gml__AbstractGMLType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGMLType); }
      public:
        /// Constructor with default initializations
        gml__AbstractGMLType() : description(), descriptionReference(), identifier(), name(), gml__id(), soap() { }
        virtual ~gml__AbstractGMLType() { }
        /// Friend allocator used by soap_new_gml__AbstractGMLType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGMLType * SOAP_FMAC2 soap_instantiate_gml__AbstractGMLType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1167 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType (-469)
/* complex XML schema type 'gml:ReferenceType': */
class SOAP_CMAC gml__ReferenceType {
      public:
        /// Optional attribute 'owns' of XML schema type 'xsd:boolean'
        bool owns;	///< initialized with default value = (bool)0
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__ReferenceType, default initialized and not managed by a soap context
        virtual gml__ReferenceType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__ReferenceType); }
      public:
        /// Constructor with default initializations
        gml__ReferenceType() : owns((bool)0), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__ReferenceType() { }
        /// Friend allocator used by soap_new_gml__ReferenceType(struct soap*, int)
        friend SOAP_FMAC1 gml__ReferenceType * SOAP_FMAC2 soap_instantiate_gml__ReferenceType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17228 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_TimePrimitivePropertyType (-877)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_TimePrimitivePropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:17217 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence (-876)
/* Wrapper: */
struct SOAP_CMAC __gml__TimePrimitivePropertyType_sequence {
      public:
        /** Union with union _gml__union_TimePrimitivePropertyType variant selector __unionAbstractTimePrimitive set to one of: */
        int __unionAbstractTimePrimitive;
        union _gml__union_TimePrimitivePropertyType union_TimePrimitivePropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__TimePrimitivePropertyType_sequence() : __unionAbstractTimePrimitive() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__TimePrimitivePropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1179 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType (-475)
/* complex XML schema type 'gml:TimePrimitivePropertyType': */
class SOAP_CMAC gml__TimePrimitivePropertyType {
      public:
        struct __gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Optional attribute 'owns' of XML schema type 'xsd:boolean'
        bool owns;	///< initialized with default value = (bool)0
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__TimePrimitivePropertyType, default initialized and not managed by a soap context
        virtual gml__TimePrimitivePropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__TimePrimitivePropertyType); }
      public:
        /// Constructor with default initializations
        gml__TimePrimitivePropertyType() : __TimePrimitivePropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), owns((bool)0), soap() { }
        virtual ~gml__TimePrimitivePropertyType() { }
        /// Friend allocator used by soap_new_gml__TimePrimitivePropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__TimePrimitivePropertyType * SOAP_FMAC2 soap_instantiate_gml__TimePrimitivePropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17294 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence (-879)
/* Wrapper: */
struct SOAP_CMAC __gml__EllipsoidalCSPropertyType_sequence {
      public:
        /** Required element 'gml:EllipsoidalCS' of XML schema type 'gml:EllipsoidalCSType' */
        gml__EllipsoidalCSType *EllipsoidalCS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__EllipsoidalCSPropertyType_sequence() : EllipsoidalCS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1181 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType (-476)
/* complex XML schema type 'gml:EllipsoidalCSPropertyType': */
class SOAP_CMAC gml__EllipsoidalCSPropertyType {
      public:
        struct __gml__EllipsoidalCSPropertyType_sequence *__EllipsoidalCSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__EllipsoidalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidalCSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__EllipsoidalCSPropertyType() : __EllipsoidalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__EllipsoidalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17360 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence (-882)
/* Wrapper: */
struct SOAP_CMAC __gml__CoordinateSystemAxisPropertyType_sequence {
      public:
        /** Required element 'gml:CoordinateSystemAxis' of XML schema type 'gml:CoordinateSystemAxisType' */
        gml__CoordinateSystemAxisType *CoordinateSystemAxis;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__CoordinateSystemAxisPropertyType_sequence() : CoordinateSystemAxis() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1187 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType (-479)
/* complex XML schema type 'gml:CoordinateSystemAxisPropertyType': */
class SOAP_CMAC gml__CoordinateSystemAxisPropertyType {
      public:
        struct __gml__CoordinateSystemAxisPropertyType_sequence *__CoordinateSystemAxisPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CoordinateSystemAxisPropertyType, default initialized and not managed by a soap context
        virtual gml__CoordinateSystemAxisPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CoordinateSystemAxisPropertyType); }
      public:
        /// Constructor with default initializations
        gml__CoordinateSystemAxisPropertyType() : __CoordinateSystemAxisPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CoordinateSystemAxisPropertyType() { }
        /// Friend allocator used by soap_new_gml__CoordinateSystemAxisPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17426 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence (-885)
/* Wrapper: */
struct SOAP_CMAC __gml__CartesianCSPropertyType_sequence {
      public:
        /** Required element 'gml:CartesianCS' of XML schema type 'gml:CartesianCSType' */
        gml__CartesianCSType *CartesianCS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__CartesianCSPropertyType_sequence() : CartesianCS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CartesianCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1191 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType (-481)
/* complex XML schema type 'gml:CartesianCSPropertyType': */
class SOAP_CMAC gml__CartesianCSPropertyType {
      public:
        struct __gml__CartesianCSPropertyType_sequence *__CartesianCSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CartesianCSPropertyType, default initialized and not managed by a soap context
        virtual gml__CartesianCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CartesianCSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__CartesianCSPropertyType() : __CartesianCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CartesianCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__CartesianCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CartesianCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17492 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence (-888)
/* Wrapper: */
struct SOAP_CMAC __gml__SphericalCSPropertyType_sequence {
      public:
        /** Required element 'gml:SphericalCS' of XML schema type 'gml:SphericalCSType' */
        gml__SphericalCSType *SphericalCS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__SphericalCSPropertyType_sequence() : SphericalCS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__SphericalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1195 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType (-483)
/* complex XML schema type 'gml:SphericalCSPropertyType': */
class SOAP_CMAC gml__SphericalCSPropertyType {
      public:
        struct __gml__SphericalCSPropertyType_sequence *__SphericalCSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__SphericalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__SphericalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__SphericalCSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__SphericalCSPropertyType() : __SphericalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__SphericalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__SphericalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__SphericalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17558 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence (-891)
/* Wrapper: */
struct SOAP_CMAC __gml__GeodeticDatumPropertyType_sequence {
      public:
        /** Required element 'gml:GeodeticDatum' of XML schema type 'gml:GeodeticDatumType' */
        gml__GeodeticDatumType *GeodeticDatum;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__GeodeticDatumPropertyType_sequence() : GeodeticDatum() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1199 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType (-485)
/* complex XML schema type 'gml:GeodeticDatumPropertyType': */
class SOAP_CMAC gml__GeodeticDatumPropertyType {
      public:
        struct __gml__GeodeticDatumPropertyType_sequence *__GeodeticDatumPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticDatumPropertyType, default initialized and not managed by a soap context
        virtual gml__GeodeticDatumPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticDatumPropertyType); }
      public:
        /// Constructor with default initializations
        gml__GeodeticDatumPropertyType() : __GeodeticDatumPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeodeticDatumPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeodeticDatumPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17624 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence (-894)
/* Wrapper: */
struct SOAP_CMAC __gml__PrimeMeridianPropertyType_sequence {
      public:
        /** Required element 'gml:PrimeMeridian' of XML schema type 'gml:PrimeMeridianType' */
        gml__PrimeMeridianType *PrimeMeridian;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__PrimeMeridianPropertyType_sequence() : PrimeMeridian() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__PrimeMeridianPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1205 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType (-488)
/* complex XML schema type 'gml:PrimeMeridianPropertyType': */
class SOAP_CMAC gml__PrimeMeridianPropertyType {
      public:
        struct __gml__PrimeMeridianPropertyType_sequence *__PrimeMeridianPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__PrimeMeridianPropertyType, default initialized and not managed by a soap context
        virtual gml__PrimeMeridianPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__PrimeMeridianPropertyType); }
      public:
        /// Constructor with default initializations
        gml__PrimeMeridianPropertyType() : __PrimeMeridianPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__PrimeMeridianPropertyType() { }
        /// Friend allocator used by soap_new_gml__PrimeMeridianPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__PrimeMeridianPropertyType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17690 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence (-897)
/* Wrapper: */
struct SOAP_CMAC __gml__EllipsoidPropertyType_sequence {
      public:
        /** Required element 'gml:Ellipsoid' of XML schema type 'gml:EllipsoidType' */
        gml__EllipsoidType *Ellipsoid;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__EllipsoidPropertyType_sequence() : Ellipsoid() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1213 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType (-492)
/* complex XML schema type 'gml:EllipsoidPropertyType': */
class SOAP_CMAC gml__EllipsoidPropertyType {
      public:
        struct __gml__EllipsoidPropertyType_sequence *__EllipsoidPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidPropertyType, default initialized and not managed by a soap context
        virtual gml__EllipsoidPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidPropertyType); }
      public:
        /// Constructor with default initializations
        gml__EllipsoidPropertyType() : __EllipsoidPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__EllipsoidPropertyType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17768 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeneralConversionPropertyType (-901)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_GeneralConversionPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:17756 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence (-900)
/* Wrapper: */
struct SOAP_CMAC __gml__GeneralConversionPropertyType_sequence {
      public:
        /** Union with union _gml__union_GeneralConversionPropertyType variant selector __unionAbstractGeneralConversion set to one of: */
        int __unionAbstractGeneralConversion;
        union _gml__union_GeneralConversionPropertyType union_GeneralConversionPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__GeneralConversionPropertyType_sequence() : __unionAbstractGeneralConversion() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeneralConversionPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1223 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType (-497)
/* complex XML schema type 'gml:GeneralConversionPropertyType': */
class SOAP_CMAC gml__GeneralConversionPropertyType {
      public:
        struct __gml__GeneralConversionPropertyType_sequence *__GeneralConversionPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeneralConversionPropertyType, default initialized and not managed by a soap context
        virtual gml__GeneralConversionPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeneralConversionPropertyType); }
      public:
        /// Constructor with default initializations
        gml__GeneralConversionPropertyType() : __GeneralConversionPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeneralConversionPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeneralConversionPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeneralConversionPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeneralConversionPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17841 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_CRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_CRSPropertyType (-904)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_CRSPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:17830 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence (-903)
/* Wrapper: */
struct SOAP_CMAC __gml__CRSPropertyType_sequence {
      public:
        /** Union with union _gml__union_CRSPropertyType variant selector __unionAbstractCRS set to one of: */
        int __unionAbstractCRS;
        union _gml__union_CRSPropertyType union_CRSPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__CRSPropertyType_sequence() : __unionAbstractCRS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__CRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1229 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType (-500)
/* complex XML schema type 'gml:CRSPropertyType': */
class SOAP_CMAC gml__CRSPropertyType {
      public:
        struct __gml__CRSPropertyType_sequence *__CRSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CRSPropertyType, default initialized and not managed by a soap context
        virtual gml__CRSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CRSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__CRSPropertyType() : __CRSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__CRSPropertyType() { }
        /// Friend allocator used by soap_new_gml__CRSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__CRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CRSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17903 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence (-906)
/* Wrapper: */
struct SOAP_CMAC __gml__GeodeticCRSPropertyType_sequence {
      public:
        /** Required element 'gml:GeodeticCRS' of XML schema type 'gml:GeodeticCRSType' */
        gml__GeodeticCRSType *GeodeticCRS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__GeodeticCRSPropertyType_sequence() : GeodeticCRS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticCRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1231 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType (-501)
/* complex XML schema type 'gml:GeodeticCRSPropertyType': */
class SOAP_CMAC gml__GeodeticCRSPropertyType {
      public:
        struct __gml__GeodeticCRSPropertyType_sequence *__GeodeticCRSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticCRSPropertyType, default initialized and not managed by a soap context
        virtual gml__GeodeticCRSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticCRSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__GeodeticCRSPropertyType() : __GeodeticCRSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__GeodeticCRSPropertyType() { }
        /// Friend allocator used by soap_new_gml__GeodeticCRSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticCRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:17965 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence (-909)
/* Wrapper: */
struct SOAP_CMAC __gml__VerticalCSPropertyType_sequence {
      public:
        /** Required element 'gml:VerticalCS' of XML schema type 'gml:VerticalCSType' */
        gml__VerticalCSType *VerticalCS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__VerticalCSPropertyType_sequence() : VerticalCS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1235 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType (-503)
/* complex XML schema type 'gml:VerticalCSPropertyType': */
class SOAP_CMAC gml__VerticalCSPropertyType {
      public:
        struct __gml__VerticalCSPropertyType_sequence *__VerticalCSPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCSPropertyType, default initialized and not managed by a soap context
        virtual gml__VerticalCSPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCSPropertyType); }
      public:
        /// Constructor with default initializations
        gml__VerticalCSPropertyType() : __VerticalCSPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__VerticalCSPropertyType() { }
        /// Friend allocator used by soap_new_gml__VerticalCSPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18031 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence (-912)
/* Wrapper: */
struct SOAP_CMAC __gml__VerticalDatumPropertyType_sequence {
      public:
        /** Required element 'gml:VerticalDatum' of XML schema type 'gml:VerticalDatumType' */
        gml__VerticalDatumType *VerticalDatum;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence; }
        /** Constructor with member initializations */
        __gml__VerticalDatumPropertyType_sequence() : VerticalDatum() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1239 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType (-505)
/* complex XML schema type 'gml:VerticalDatumPropertyType': */
class SOAP_CMAC gml__VerticalDatumPropertyType {
      public:
        struct __gml__VerticalDatumPropertyType_sequence *__VerticalDatumPropertyType_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalDatumPropertyType, default initialized and not managed by a soap context
        virtual gml__VerticalDatumPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalDatumPropertyType); }
      public:
        /// Constructor with default initializations
        gml__VerticalDatumPropertyType() : __VerticalDatumPropertyType_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__VerticalDatumPropertyType() { }
        /// Friend allocator used by soap_new_gml__VerticalDatumPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18098 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence (-915)
/* Wrapper: */
struct SOAP_CMAC __gml__domainOfValidity_sequence {
      public:
        /** Required element 'gmd:EX_Extent' of XML schema type 'gmd:EX_Extent_Type' */
        gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence; }
        /** Constructor with member initializations */
        __gml__domainOfValidity_sequence() : gmd__EX_USCOREExtent() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__domainOfValidity_sequence * SOAP_FMAC2 soap_instantiate___gml__domainOfValidity_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1243 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity (-507)
/* complex XML schema type 'gml:domainOfValidity': */
class SOAP_CMAC _gml__domainOfValidity {
      public:
        struct __gml__domainOfValidity_sequence *__domainOfValidity_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__domainOfValidity, default initialized and not managed by a soap context
        virtual _gml__domainOfValidity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__domainOfValidity); }
      public:
        /// Constructor with default initializations
        _gml__domainOfValidity() : __domainOfValidity_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~_gml__domainOfValidity() { }
        /// Friend allocator used by soap_new__gml__domainOfValidity(struct soap*, int)
        friend SOAP_FMAC1 _gml__domainOfValidity * SOAP_FMAC2 soap_instantiate__gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1245 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter (-508)
/* complex XML schema type 'gml:secondDefiningParameter': */
class SOAP_CMAC _gml__secondDefiningParameter {
      public:
        /// Required element 'gml:SecondDefiningParameter' of XML schema type 'gml:SecondDefiningParameter'
        _gml__SecondDefiningParameter *SecondDefiningParameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__secondDefiningParameter, default initialized and not managed by a soap context
        virtual _gml__secondDefiningParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__secondDefiningParameter); }
      public:
        /// Constructor with default initializations
        _gml__secondDefiningParameter() : SecondDefiningParameter(), soap() { }
        virtual ~_gml__secondDefiningParameter() { }
        /// Friend allocator used by soap_new__gml__secondDefiningParameter(struct soap*, int)
        friend SOAP_FMAC1 _gml__secondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__secondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18187 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter (-919)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_SecondDefiningParameter
{
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_inverseFlattening	(1)	/**< union variant selector value for member inverseFlattening */
        gml__MeasureType *inverseFlattening;
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_semiMinorAxis	(2)	/**< union variant selector value for member semiMinorAxis */
        gml__LengthType *semiMinorAxis;
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_isSphere	(3)	/**< union variant selector value for member isSphere */
        bool isSphere;
};
#endif

/* resqml2_0_1ForGsoap.h:1247 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter (-509)
/* Choice: */
class SOAP_CMAC _gml__SecondDefiningParameter {
      public:
        /// Union with union _gml__union_SecondDefiningParameter variant selector __union_SecondDefiningParameter set to one of: SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_inverseFlattening SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_semiMinorAxis SOAP_UNION_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_isSphere
        int __union_SecondDefiningParameter;
        union _gml__union_SecondDefiningParameter union_SecondDefiningParameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__SecondDefiningParameter, default initialized and not managed by a soap context
        virtual _gml__SecondDefiningParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__SecondDefiningParameter); }
      public:
        /// Constructor with default initializations
        _gml__SecondDefiningParameter() : __union_SecondDefiningParameter(), soap() { }
        virtual ~_gml__SecondDefiningParameter() { }
        /// Friend allocator used by soap_new__gml__SecondDefiningParameter(struct soap*, int)
        friend SOAP_FMAC1 _gml__SecondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__SecondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18229 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_coordinateOperationAccuracy (-923)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_coordinateOperationAccuracy
{
};
#endif

/* resqml2_0_1ForGsoap.h:18222 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence (-922)
/* Wrapper: */
struct SOAP_CMAC __gml__coordinateOperationAccuracy_sequence {
      public:
        /** Union with union _gml__union_coordinateOperationAccuracy variant selector __unionAbstractDQ_USCOREPositionalAccuracy set to one of: */
        int __unionAbstractDQ_USCOREPositionalAccuracy;
        union _gml__union_coordinateOperationAccuracy union_coordinateOperationAccuracy;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence; }
        /** Constructor with member initializations */
        __gml__coordinateOperationAccuracy_sequence() : __unionAbstractDQ_USCOREPositionalAccuracy() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC2 soap_instantiate___gml__coordinateOperationAccuracy_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1249 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy (-510)
/* complex XML schema type 'gml:coordinateOperationAccuracy': */
class SOAP_CMAC _gml__coordinateOperationAccuracy {
      public:
        struct __gml__coordinateOperationAccuracy_sequence *__coordinateOperationAccuracy_sequence;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type _gml__coordinateOperationAccuracy, default initialized and not managed by a soap context
        virtual _gml__coordinateOperationAccuracy *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(_gml__coordinateOperationAccuracy); }
      public:
        /// Constructor with default initializations
        _gml__coordinateOperationAccuracy() : __coordinateOperationAccuracy_sequence(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~_gml__coordinateOperationAccuracy() { }
        /// Friend allocator used by soap_new__gml__coordinateOperationAccuracy(struct soap*, int)
        friend SOAP_FMAC1 _gml__coordinateOperationAccuracy * SOAP_FMAC2 soap_instantiate__gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18310 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType (-926)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:18303 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence (-925)
/* Wrapper: */
struct SOAP_CMAC __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence {
      public:
        /** Union with union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType variant selector __unionAbstractEX_USCOREGeographicExtent set to one of: */
        int __unionAbstractEX_USCOREGeographicExtent;
        union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType union_EX_USCOREGeographicExtent_USCOREPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence() : __unionAbstractEX_USCOREGeographicExtent() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1253 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType (-512)
/* complex XML schema type 'gmd:EX_GeographicExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCOREGeographicExtent_USCOREPropertyType {
      public:
        struct __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *__EX_USCOREGeographicExtent_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREGeographicExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREGeographicExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREGeographicExtent_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCOREGeographicExtent_USCOREPropertyType() : __EX_USCOREGeographicExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCOREGeographicExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18370 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence (-928)
/* Wrapper: */
struct SOAP_CMAC __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:EX_TemporalExtent' of XML schema type 'gmd:EX_TemporalExtent_Type' */
        gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence() : EX_USCORETemporalExtent() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1257 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType (-514)
/* complex XML schema type 'gmd:EX_TemporalExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCORETemporalExtent_USCOREPropertyType {
      public:
        struct __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *__EX_USCORETemporalExtent_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCORETemporalExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCORETemporalExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCORETemporalExtent_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCORETemporalExtent_USCOREPropertyType() : __EX_USCORETemporalExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCORETemporalExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18430 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence (-931)
/* Wrapper: */
struct SOAP_CMAC __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:EX_VerticalExtent' of XML schema type 'gmd:EX_VerticalExtent_Type' */
        gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence() : EX_USCOREVerticalExtent() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1261 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType (-516)
/* complex XML schema type 'gmd:EX_VerticalExtent_PropertyType': */
class SOAP_CMAC gmd__EX_USCOREVerticalExtent_USCOREPropertyType {
      public:
        struct __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *__EX_USCOREVerticalExtent_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREVerticalExtent_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREVerticalExtent_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREVerticalExtent_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCOREVerticalExtent_USCOREPropertyType() : __EX_USCOREVerticalExtent_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__EX_USCOREVerticalExtent_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18490 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence (-934)
/* Wrapper: */
struct SOAP_CMAC __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:MD_Identifier' of XML schema type 'gmd:MD_Identifier_Type' */
        gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence() : MD_USCOREIdentifier() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1269 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType (-520)
/* Type gmd__MD_USCOREIdentifier_USCOREPropertyType is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'gmd:MD_Identifier_PropertyType': */
class SOAP_CMAC gmd__MD_USCOREIdentifier_USCOREPropertyType {
      public:
        struct __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *__MD_USCOREIdentifier_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__MD_USCOREIdentifier_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__MD_USCOREIdentifier_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__MD_USCOREIdentifier_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__MD_USCOREIdentifier_USCOREPropertyType() : __MD_USCOREIdentifier_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__MD_USCOREIdentifier_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18550 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence (-937)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCORECitation_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Citation' of XML schema type 'gmd:CI_Citation_Type' */
        gmd__CI_USCORECitation_USCOREType *CI_USCORECitation;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCORECitation_USCOREPropertyType_sequence() : CI_USCORECitation() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1273 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType (-522)
/* complex XML schema type 'gmd:CI_Citation_PropertyType': */
class SOAP_CMAC gmd__CI_USCORECitation_USCOREPropertyType {
      public:
        struct __gmd__CI_USCORECitation_USCOREPropertyType_sequence *__CI_USCORECitation_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORECitation_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORECitation_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORECitation_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORECitation_USCOREPropertyType() : __CI_USCORECitation_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORECitation_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18610 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence (-940)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREDate_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Date' of XML schema type 'gmd:CI_Date_Type' */
        gmd__CI_USCOREDate_USCOREType *CI_USCOREDate;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREDate_USCOREPropertyType_sequence() : CI_USCOREDate() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1277 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType (-524)
/* complex XML schema type 'gmd:CI_Date_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREDate_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREDate_USCOREPropertyType_sequence *__CI_USCOREDate_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDate_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDate_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDate_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREDate_USCOREPropertyType() : __CI_USCOREDate_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREDate_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18670 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence (-943)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_DateTypeCode' of XML schema type 'gco:CodeListValue_Type' */
        gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence() : CI_USCOREDateTypeCode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1281 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType (-526)
/* complex XML schema type 'gmd:CI_DateTypeCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREDateTypeCode_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *__CI_USCOREDateTypeCode_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDateTypeCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDateTypeCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDateTypeCode_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREDateTypeCode_USCOREPropertyType() : __CI_USCOREDateTypeCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREDateTypeCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18698 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence (-946)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_ResponsibleParty' of XML schema type 'gmd:CI_ResponsibleParty_Type' */
        gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence() : CI_USCOREResponsibleParty() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1283 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType (-527)
/* complex XML schema type 'gmd:CI_ResponsibleParty_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREResponsibleParty_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *__CI_USCOREResponsibleParty_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREResponsibleParty_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREResponsibleParty_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREResponsibleParty_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREResponsibleParty_USCOREPropertyType() : __CI_USCOREResponsibleParty_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREResponsibleParty_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18758 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence (-949)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREContact_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Contact' of XML schema type 'gmd:CI_Contact_Type' */
        gmd__CI_USCOREContact_USCOREType *CI_USCOREContact;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREContact_USCOREPropertyType_sequence() : CI_USCOREContact() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1287 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType (-529)
/* complex XML schema type 'gmd:CI_Contact_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREContact_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREContact_USCOREPropertyType_sequence *__CI_USCOREContact_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREContact_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREContact_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREContact_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREContact_USCOREPropertyType() : __CI_USCOREContact_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREContact_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18818 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence (-952)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCORETelephone_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Telephone' of XML schema type 'gmd:CI_Telephone_Type' */
        gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCORETelephone_USCOREPropertyType_sequence() : CI_USCORETelephone() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1291 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType (-531)
/* complex XML schema type 'gmd:CI_Telephone_PropertyType': */
class SOAP_CMAC gmd__CI_USCORETelephone_USCOREPropertyType {
      public:
        struct __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *__CI_USCORETelephone_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORETelephone_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORETelephone_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORETelephone_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORETelephone_USCOREPropertyType() : __CI_USCORETelephone_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORETelephone_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18878 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence (-955)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREAddress_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Address' of XML schema type 'gmd:CI_Address_Type' */
        gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREAddress_USCOREPropertyType_sequence() : CI_USCOREAddress() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1295 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType (-533)
/* complex XML schema type 'gmd:CI_Address_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREAddress_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *__CI_USCOREAddress_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREAddress_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREAddress_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREAddress_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREAddress_USCOREPropertyType() : __CI_USCOREAddress_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREAddress_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18938 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence (-958)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_OnlineResource' of XML schema type 'gmd:CI_OnlineResource_Type' */
        gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence() : CI_USCOREOnlineResource() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1299 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType (-535)
/* complex XML schema type 'gmd:CI_OnlineResource_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREOnlineResource_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *__CI_USCOREOnlineResource_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnlineResource_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnlineResource_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnlineResource_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREOnlineResource_USCOREPropertyType() : __CI_USCOREOnlineResource_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCOREOnlineResource_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:18998 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence (-961)
/* Wrapper: */
struct SOAP_CMAC __gmd__URL_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:URL' of XML schema type 'xsd:anyURI' */
        std::string URL;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__URL_USCOREPropertyType_sequence() : URL() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__URL_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1303 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType (-537)
/* complex XML schema type 'gmd:URL_PropertyType': */
class SOAP_CMAC gmd__URL_USCOREPropertyType {
      public:
        struct __gmd__URL_USCOREPropertyType_sequence *__URL_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__URL_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__URL_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__URL_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__URL_USCOREPropertyType() : __URL_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__URL_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__URL_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__URL_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__URL_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19026 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence (-963)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_OnLineFunctionCode' of XML schema type 'gco:CodeListValue_Type' */
        gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence() : CI_USCOREOnLineFunctionCode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1305 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-538)
/* complex XML schema type 'gmd:CI_OnLineFunctionCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType() : __CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19054 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence (-965)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_RoleCode' of XML schema type 'gco:CodeListValue_Type' */
        gco__CodeListValue_USCOREType *CI_USCORERoleCode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence() : CI_USCORERoleCode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1307 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType (-539)
/* complex XML schema type 'gmd:CI_RoleCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCORERoleCode_USCOREPropertyType {
      public:
        struct __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *__CI_USCORERoleCode_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORERoleCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORERoleCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORERoleCode_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORERoleCode_USCOREPropertyType() : __CI_USCORERoleCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCORERoleCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19082 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence (-967)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_PresentationFormCode' of XML schema type 'gco:CodeListValue_Type' */
        gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence() : CI_USCOREPresentationFormCode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1309 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-540)
/* complex XML schema type 'gmd:CI_PresentationFormCode_PropertyType': */
class SOAP_CMAC gmd__CI_USCOREPresentationFormCode_USCOREPropertyType {
      public:
        struct __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREPresentationFormCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREPresentationFormCode_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREPresentationFormCode_USCOREPropertyType() : __CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__CI_USCOREPresentationFormCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19110 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence (-969)
/* Wrapper: */
struct SOAP_CMAC __gmd__CI_USCORESeries_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:CI_Series' of XML schema type 'gmd:CI_Series_Type' */
        gmd__CI_USCORESeries_USCOREType *CI_USCORESeries;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__CI_USCORESeries_USCOREPropertyType_sequence() : CI_USCORESeries() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1311 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType (-541)
/* complex XML schema type 'gmd:CI_Series_PropertyType': */
class SOAP_CMAC gmd__CI_USCORESeries_USCOREPropertyType {
      public:
        struct __gmd__CI_USCORESeries_USCOREPropertyType_sequence *__CI_USCORESeries_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORESeries_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORESeries_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORESeries_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORESeries_USCOREPropertyType() : __CI_USCORESeries_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__CI_USCORESeries_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19170 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence (-972)
/* Wrapper: */
struct SOAP_CMAC __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence {
      public:
        /** Required element 'gmd:DQ_EvaluationMethodTypeCode' of XML schema type 'gco:CodeListValue_Type' */
        gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence() : DQ_USCOREEvaluationMethodTypeCode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1315 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-543)
/* complex XML schema type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType': */
class SOAP_CMAC gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType {
      public:
        struct __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType() : __DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19205 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_DQ_USCOREResult_USCOREPropertyType (-975)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gmd__union_DQ_USCOREResult_USCOREPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:19198 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence (-974)
/* Wrapper: */
struct SOAP_CMAC __gmd__DQ_USCOREResult_USCOREPropertyType_sequence {
      public:
        /** Union with union _gmd__union_DQ_USCOREResult_USCOREPropertyType variant selector __unionAbstractDQ_USCOREResult set to one of: */
        int __unionAbstractDQ_USCOREResult;
        union _gmd__union_DQ_USCOREResult_USCOREPropertyType union_DQ_USCOREResult_USCOREPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gmd__DQ_USCOREResult_USCOREPropertyType_sequence() : __unionAbstractDQ_USCOREResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1317 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType (-544)
/* complex XML schema type 'gmd:DQ_Result_PropertyType': */
class SOAP_CMAC gmd__DQ_USCOREResult_USCOREPropertyType {
      public:
        struct __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *__DQ_USCOREResult_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__DQ_USCOREResult_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gmd__DQ_USCOREResult_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__DQ_USCOREResult_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gmd__DQ_USCOREResult_USCOREPropertyType() : __DQ_USCOREResult_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gmd__DQ_USCOREResult_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19284 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType (-978)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gts__union_TM_USCOREPrimitive_USCOREPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:19273 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence (-977)
/* Wrapper: */
struct SOAP_CMAC __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence {
      public:
        /** Union with union _gts__union_TM_USCOREPrimitive_USCOREPropertyType variant selector __unionAbstractTimePrimitive set to one of: */
        int __unionAbstractTimePrimitive;
        union _gts__union_TM_USCOREPrimitive_USCOREPropertyType union_TM_USCOREPrimitive_USCOREPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence() : __unionAbstractTimePrimitive() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1321 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType (-546)
/* complex XML schema type 'gts:TM_Primitive_PropertyType': */
class SOAP_CMAC gts__TM_USCOREPrimitive_USCOREPropertyType {
      public:
        struct __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *__TM_USCOREPrimitive_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gts__TM_USCOREPrimitive_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gts__TM_USCOREPrimitive_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gts__TM_USCOREPrimitive_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gts__TM_USCOREPrimitive_USCOREPropertyType() : __TM_USCOREPrimitive_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gts__TM_USCOREPrimitive_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1323 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType (-547)
/* complex XML schema type 'gco:AbstractObject_Type': */
class SOAP_CMAC gco__AbstractObject_USCOREType {
      public:
        /// Optional attribute 'id' of XML schema type 'xsd:ID'
        std::string *id;
        /// Optional attribute 'uuid' of XML schema type 'xsd:string'
        std::string *uuid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__AbstractObject_USCOREType, default initialized and not managed by a soap context
        virtual gco__AbstractObject_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__AbstractObject_USCOREType); }
      public:
        /// Constructor with default initializations
        gco__AbstractObject_USCOREType() : id(), uuid(), soap() { }
        virtual ~gco__AbstractObject_USCOREType() { }
        /// Friend allocator used by soap_new_gco__AbstractObject_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gco__AbstractObject_USCOREType * SOAP_FMAC2 soap_instantiate_gco__AbstractObject_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19402 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType (-982)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gco__union_CharacterString_USCOREPropertyType
{
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_CharacterString	(1)	/**< union variant selector value for member CharacterString */
        std::string *CharacterString;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode	(2)	/**< union variant selector value for member gmd__CI_USCOREDateTypeCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREDateTypeCode;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode_	(3)	/**< union variant selector value for member gmd__CI_USCOREDateTypeCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREDateTypeCode_;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode__	(4)	/**< union variant selector value for member gmd__CI_USCOREDateTypeCode__ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREDateTypeCode__;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode	(5)	/**< union variant selector value for member gmd__CI_USCOREOnLineFunctionCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREOnLineFunctionCode;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode_	(6)	/**< union variant selector value for member gmd__CI_USCOREOnLineFunctionCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREOnLineFunctionCode_;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode__	(7)	/**< union variant selector value for member gmd__CI_USCOREOnLineFunctionCode__ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREOnLineFunctionCode__;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode	(8)	/**< union variant selector value for member gmd__CI_USCORERoleCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCORERoleCode;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode_	(9)	/**< union variant selector value for member gmd__CI_USCORERoleCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCORERoleCode_;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode__	(10)	/**< union variant selector value for member gmd__CI_USCORERoleCode__ */
        gco__CodeListValue_USCOREType *gmd__CI_USCORERoleCode__;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode	(11)	/**< union variant selector value for member gmd__CI_USCOREPresentationFormCode */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREPresentationFormCode;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode_	(12)	/**< union variant selector value for member gmd__CI_USCOREPresentationFormCode_ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREPresentationFormCode_;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode__	(13)	/**< union variant selector value for member gmd__CI_USCOREPresentationFormCode__ */
        gco__CodeListValue_USCOREType *gmd__CI_USCOREPresentationFormCode__;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode	(14)	/**< union variant selector value for member gmd__DQ_USCOREEvaluationMethodTypeCode */
        gco__CodeListValue_USCOREType *gmd__DQ_USCOREEvaluationMethodTypeCode;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode_	(15)	/**< union variant selector value for member gmd__DQ_USCOREEvaluationMethodTypeCode_ */
        gco__CodeListValue_USCOREType *gmd__DQ_USCOREEvaluationMethodTypeCode_;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode__	(16)	/**< union variant selector value for member gmd__DQ_USCOREEvaluationMethodTypeCode__ */
        gco__CodeListValue_USCOREType *gmd__DQ_USCOREEvaluationMethodTypeCode__;
};
#endif

/* resqml2_0_1ForGsoap.h:19394 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence (-981)
/* Wrapper: */
struct SOAP_CMAC __gco__CharacterString_USCOREPropertyType_sequence {
      public:
        /** Union with union _gco__union_CharacterString_USCOREPropertyType variant selector __unionCharacterString set to one of: SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_CharacterString SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode_ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREDateTypeCode__ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode_ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREOnLineFunctionCode__ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode_ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCORERoleCode__ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode_ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__CI_USCOREPresentationFormCode__ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode_ SOAP_UNION_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_gmd__DQ_USCOREEvaluationMethodTypeCode__ */
        int __unionCharacterString;
        union _gco__union_CharacterString_USCOREPropertyType union_CharacterString_USCOREPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gco__CharacterString_USCOREPropertyType_sequence() : __unionCharacterString() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1325 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType (-548)
/* complex XML schema type 'gco:CharacterString_PropertyType': */
class SOAP_CMAC gco__CharacterString_USCOREPropertyType {
      public:
        struct __gco__CharacterString_USCOREPropertyType_sequence *__CharacterString_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__CharacterString_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__CharacterString_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__CharacterString_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gco__CharacterString_USCOREPropertyType() : __CharacterString_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__CharacterString_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__CharacterString_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__CharacterString_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19462 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence (-984)
/* Wrapper: */
struct SOAP_CMAC __gco__Boolean_USCOREPropertyType_sequence {
      public:
        /** Required element 'gco:Boolean' of XML schema type 'xsd:boolean' */
        bool Boolean;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gco__Boolean_USCOREPropertyType_sequence() : Boolean() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1327 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType (-549)
/* complex XML schema type 'gco:Boolean_PropertyType': */
class SOAP_CMAC gco__Boolean_USCOREPropertyType {
      public:
        struct __gco__Boolean_USCOREPropertyType_sequence *__Boolean_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Boolean_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Boolean_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Boolean_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gco__Boolean_USCOREPropertyType() : __Boolean_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__Boolean_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Boolean_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Boolean_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Boolean_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19490 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence (-986)
/* Wrapper: */
struct SOAP_CMAC __gco__Real_USCOREPropertyType_sequence {
      public:
        /** Required element 'gco:Real' of XML schema type 'xsd:double' */
        double Real;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gco__Real_USCOREPropertyType_sequence() : Real() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Real_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1329 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType (-550)
/* complex XML schema type 'gco:Real_PropertyType': */
class SOAP_CMAC gco__Real_USCOREPropertyType {
      public:
        struct __gco__Real_USCOREPropertyType_sequence *__Real_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Real_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Real_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Real_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gco__Real_USCOREPropertyType() : __Real_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__Real_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Real_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Real_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Real_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19520 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType (-988)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gco__union_Date_USCOREPropertyType
{
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_Date	(1)	/**< union variant selector value for member Date */
        std::string *Date;
        #define SOAP_UNION_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_DateTime	(2)	/**< union variant selector value for member DateTime */
        struct tm *DateTime;
};
#endif

/* resqml2_0_1ForGsoap.h:1331 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType (-551)
/* complex XML schema type 'gco:Date_PropertyType': */
class SOAP_CMAC gco__Date_USCOREPropertyType {
      public:
        /// Union with union _gco__union_Date_USCOREPropertyType variant selector __union_Date_USCOREPropertyType set to one of: SOAP_UNION_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_Date SOAP_UNION_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_DateTime
        int __union_Date_USCOREPropertyType;
        union _gco__union_Date_USCOREPropertyType union_Date_USCOREPropertyType;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__Date_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__Date_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__Date_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gco__Date_USCOREPropertyType() : __union_Date_USCOREPropertyType(), gco__nilReason(), soap() { }
        virtual ~gco__Date_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__Date_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__Date_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Date_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19550 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence (-990)
/* Wrapper: */
struct SOAP_CMAC __gco__DateTime_USCOREPropertyType_sequence {
      public:
        /** Typedef xsd__dateTime with custom serializer for struct tm */
        struct tm DateTime;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gco__DateTime_USCOREPropertyType_sequence() : DateTime() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1335 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType (-553)
/* complex XML schema type 'gco:DateTime_PropertyType': */
class SOAP_CMAC gco__DateTime_USCOREPropertyType {
      public:
        struct __gco__DateTime_USCOREPropertyType_sequence *__DateTime_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__DateTime_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gco__DateTime_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__DateTime_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gco__DateTime_USCOREPropertyType() : __DateTime_USCOREPropertyType_sequence(), gco__nilReason(), soap() { }
        virtual ~gco__DateTime_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gco__DateTime_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gco__DateTime_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:19597 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gsr__union_SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1__gsr__union_SC_USCORECRS_USCOREPropertyType (-993)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gsr__union_SC_USCORECRS_USCOREPropertyType
{
};
#endif

/* resqml2_0_1ForGsoap.h:19586 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence (-992)
/* Wrapper: */
struct SOAP_CMAC __gsr__SC_USCORECRS_USCOREPropertyType_sequence {
      public:
        /** Union with union _gsr__union_SC_USCORECRS_USCOREPropertyType variant selector __unionAbstractCRS set to one of: */
        int __unionAbstractCRS;
        union _gsr__union_SC_USCORECRS_USCOREPropertyType union_SC_USCORECRS_USCOREPropertyType;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence; }
        /** Constructor with member initializations */
        __gsr__SC_USCORECRS_USCOREPropertyType_sequence() : __unionAbstractCRS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1337 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType (-554)
/* complex XML schema type 'gsr:SC_CRS_PropertyType': */
class SOAP_CMAC gsr__SC_USCORECRS_USCOREPropertyType {
      public:
        struct __gsr__SC_USCORECRS_USCOREPropertyType_sequence *__SC_USCORECRS_USCOREPropertyType_sequence;
        /// Optional attribute 'gco:nilReason' of XML schema type 'gml:NilReasonType'
        std::string *gco__nilReason;
        /// Optional attribute 'uuidref' of XML schema type 'xsd:string'
        std::string *uuidref;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gsr__SC_USCORECRS_USCOREPropertyType, default initialized and not managed by a soap context
        virtual gsr__SC_USCORECRS_USCOREPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gsr__SC_USCORECRS_USCOREPropertyType); }
      public:
        /// Constructor with default initializations
        gsr__SC_USCORECRS_USCOREPropertyType() : __SC_USCORECRS_USCOREPropertyType_sequence(), gco__nilReason(), uuidref(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gsr__SC_USCORECRS_USCOREPropertyType() { }
        /// Friend allocator used by soap_new_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int)
        friend SOAP_FMAC1 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1339 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet (-555)
/* complex XML schema type 'ptm:standardEnergisticsPropertyTypeSet': */
class SOAP_CMAC ptm__standardEnergisticsPropertyTypeSet {
      public:
        /// Required element 'ptm:standardEnergisticsPropertyType' of XML schema type 'ptm:standardEnergisticsPropertyType'
        std::vector<ptm__standardEnergisticsPropertyType *> standardEnergisticsPropertyType;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ptm__standardEnergisticsPropertyTypeSet, default initialized and not managed by a soap context
        virtual ptm__standardEnergisticsPropertyTypeSet *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ptm__standardEnergisticsPropertyTypeSet); }
      public:
        /// Constructor with default initializations
        ptm__standardEnergisticsPropertyTypeSet() : standardEnergisticsPropertyType(), soap() { }
        virtual ~ptm__standardEnergisticsPropertyTypeSet() { }
        /// Friend allocator used by soap_new_ptm__standardEnergisticsPropertyTypeSet(struct soap*, int)
        friend SOAP_FMAC1 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyTypeSet(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1341 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType (-556)
/* complex XML schema type 'ptm:standardEnergisticsPropertyType': */
class SOAP_CMAC ptm__standardEnergisticsPropertyType {
      public:
        /// Required element 'ptm:name' of XML schema type 'resqml20:ResqmlPropertyKind'
        enum resqml20__ResqmlPropertyKind name;
        /// Optional element 'ptm:description' of XML schema type 'xsd:string'
        std::string *description;
        /// Optional element 'ptm:version' of XML schema type 'xsd:string'
        std::string *version;
        /// Optional element 'ptm:deprecated' of XML schema type 'xsd:string'
        std::string *deprecated;
        /// Optional element 'ptm:replacedBy' of XML schema type 'xsd:string'
        std::string *replacedBy;
        /// Optional element 'ptm:isAbstract' of XML schema type 'xsd:boolean'
        bool *isAbstract;
        /// Optional element 'ptm:parentKind' of XML schema type 'resqml20:ResqmlPropertyKind'
        enum resqml20__ResqmlPropertyKind *parentKind;
        /// Optional element 'ptm:equivalentPropertyType' of XML schema type 'ptm:equivalentPropertyType'
        std::vector<ptm__equivalentPropertyType *> equivalentPropertyType;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ptm__standardEnergisticsPropertyType, default initialized and not managed by a soap context
        virtual ptm__standardEnergisticsPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ptm__standardEnergisticsPropertyType); }
      public:
        /// Constructor with default initializations
        ptm__standardEnergisticsPropertyType() : name(), description(), version(), deprecated(), replacedBy(), isAbstract(), parentKind(), equivalentPropertyType(), soap() { }
        virtual ~ptm__standardEnergisticsPropertyType() { }
        /// Friend allocator used by soap_new_ptm__standardEnergisticsPropertyType(struct soap*, int)
        friend SOAP_FMAC1 ptm__standardEnergisticsPropertyType * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1343 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType (-557)
/* complex XML schema type 'ptm:equivalentPropertyType': */
class SOAP_CMAC ptm__equivalentPropertyType {
      public:
        /// Required element 'ptm:name' of XML schema type 'xsd:string'
        std::string name;
        /// Required element 'ptm:namingSystem' of XML schema type 'xsd:string'
        std::string namingSystem;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type ptm__equivalentPropertyType, default initialized and not managed by a soap context
        virtual ptm__equivalentPropertyType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(ptm__equivalentPropertyType); }
      public:
        /// Constructor with default initializations
        ptm__equivalentPropertyType() : name(), namingSystem(), soap() { }
        virtual ~ptm__equivalentPropertyType() { }
        /// Friend allocator used by soap_new_ptm__equivalentPropertyType(struct soap*, int)
        friend SOAP_FMAC1 ptm__equivalentPropertyType * SOAP_FMAC2 soap_instantiate_ptm__equivalentPropertyType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:305 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray (-38)
/* complex XML schema type 'resqml20:AbstractDoubleArray': */
class SOAP_CMAC resqml20__AbstractDoubleArray : public resqml20__AbstractValueArray {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractDoubleArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractDoubleArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractDoubleArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractDoubleArray() { }
        virtual ~resqml20__AbstractDoubleArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractDoubleArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractDoubleArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractDoubleArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:313 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array (-42)
/* complex XML schema type 'resqml20:StringHdf5Array': */
class SOAP_CMAC resqml20__StringHdf5Array : public resqml20__AbstractValueArray {
      public:
        /// Required element 'resqml20:Values' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Values;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StringHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__StringHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StringHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__StringHdf5Array() : Values() { }
        virtual ~resqml20__StringHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__StringHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StringHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__StringHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:331 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray (-51)
/* complex XML schema type 'resqml20:AbstractIntegerArray': */
class SOAP_CMAC resqml20__AbstractIntegerArray : public resqml20__AbstractValueArray {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractIntegerArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractIntegerArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractIntegerArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractIntegerArray() { }
        virtual ~resqml20__AbstractIntegerArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractIntegerArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractIntegerArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractIntegerArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:333 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray (-52)
/* complex XML schema type 'resqml20:AbstractBooleanArray': */
class SOAP_CMAC resqml20__AbstractBooleanArray : public resqml20__AbstractValueArray {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractBooleanArray, default initialized and not managed by a soap context
        virtual resqml20__AbstractBooleanArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractBooleanArray); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractBooleanArray() { }
        virtual ~resqml20__AbstractBooleanArray() { }
        /// Friend allocator used by soap_new_resqml20__AbstractBooleanArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractBooleanArray * SOAP_FMAC2 soap_instantiate_resqml20__AbstractBooleanArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:337 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind (-54)
/* complex XML schema type 'resqml20:StandardPropertyKind': */
class SOAP_CMAC resqml20__StandardPropertyKind : public resqml20__AbstractPropertyKind {
      public:
        /// Required element 'resqml20:Kind' of XML schema type 'resqml20:ResqmlPropertyKind'
        enum resqml20__ResqmlPropertyKind Kind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StandardPropertyKind, default initialized and not managed by a soap context
        virtual resqml20__StandardPropertyKind *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StandardPropertyKind); }
      public:
        /// Constructor with default initializations
        resqml20__StandardPropertyKind() : Kind() { }
        virtual ~resqml20__StandardPropertyKind() { }
        /// Friend allocator used by soap_new_resqml20__StandardPropertyKind(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StandardPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__StandardPropertyKind(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:341 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind (-56)
/* complex XML schema type 'resqml20:LocalPropertyKind': */
class SOAP_CMAC resqml20__LocalPropertyKind : public resqml20__AbstractPropertyKind {
      public:
        /// Required element 'resqml20:LocalPropertyKind' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *LocalPropertyKind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__LocalPropertyKind, default initialized and not managed by a soap context
        virtual resqml20__LocalPropertyKind *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__LocalPropertyKind); }
      public:
        /// Constructor with default initializations
        resqml20__LocalPropertyKind() : LocalPropertyKind() { }
        virtual ~resqml20__LocalPropertyKind() { }
        /// Friend allocator used by soap_new_resqml20__LocalPropertyKind(struct soap*, int)
        friend SOAP_FMAC1 resqml20__LocalPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__LocalPropertyKind(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:349 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array (-60)
/* Type resqml20__Point2dHdf5Array is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'resqml20:Point2dHdf5Array': */
class SOAP_CMAC resqml20__Point2dHdf5Array : public resqml20__AbstractPoint3dArray {
      public:
        /// Required element 'resqml20:Coordinates' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Coordinates;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point2dHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__Point2dHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point2dHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__Point2dHdf5Array() : Coordinates() { }
        virtual ~resqml20__Point2dHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__Point2dHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point2dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__Point2dHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:353 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray (-62)
/* complex XML schema type 'resqml20:ParametricLineFromRepresentationLatticeArray': */
class SOAP_CMAC resqml20__ParametricLineFromRepresentationLatticeArray : public resqml20__AbstractParametricLineArray {
      public:
        /// Required element 'resqml20:LineIndicesOnSupportingRepresentation' of XML schema type 'resqml20:IntegerLatticeArray'
        resqml20__IntegerLatticeArray *LineIndicesOnSupportingRepresentation;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParametricLineFromRepresentationLatticeArray, default initialized and not managed by a soap context
        virtual resqml20__ParametricLineFromRepresentationLatticeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParametricLineFromRepresentationLatticeArray); }
      public:
        /// Constructor with default initializations
        resqml20__ParametricLineFromRepresentationLatticeArray() : LineIndicesOnSupportingRepresentation(), SupportingRepresentation() { }
        virtual ~resqml20__ParametricLineFromRepresentationLatticeArray() { }
        /// Friend allocator used by soap_new_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:355 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray (-63)
/* Type resqml20__Point3dLatticeArray is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'resqml20:Point3dLatticeArray': */
class SOAP_CMAC resqml20__Point3dLatticeArray : public resqml20__AbstractPoint3dArray {
      public:
        /// Optional element 'resqml20:AllDimensionsAreOrthogonal' of XML schema type 'xsd:boolean'
        bool *AllDimensionsAreOrthogonal;
        /// Required element 'resqml20:Origin' of XML schema type 'resqml20:Point3d'
        resqml20__Point3d *Origin;
        /// Required element 'resqml20:Offset' of XML schema type 'resqml20:Point3dOffset'
        std::vector<resqml20__Point3dOffset *> Offset;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dLatticeArray, default initialized and not managed by a soap context
        virtual resqml20__Point3dLatticeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dLatticeArray); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dLatticeArray() : AllDimensionsAreOrthogonal(), Origin(), Offset() { }
        virtual ~resqml20__Point3dLatticeArray() { }
        /// Friend allocator used by soap_new_resqml20__Point3dLatticeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dLatticeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:357 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray (-64)
/* Type resqml20__Point3dZValueArray is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* complex XML schema type 'resqml20:Point3dZValueArray': */
class SOAP_CMAC resqml20__Point3dZValueArray : public resqml20__AbstractPoint3dArray {
      public:
        /// Required element 'resqml20:SupportingGeometry' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *SupportingGeometry;
        /// Required element 'resqml20:ZValues' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *ZValues;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dZValueArray, default initialized and not managed by a soap context
        virtual resqml20__Point3dZValueArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dZValueArray); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dZValueArray() : SupportingGeometry(), ZValues() { }
        virtual ~resqml20__Point3dZValueArray() { }
        /// Friend allocator used by soap_new_resqml20__Point3dZValueArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dZValueArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dZValueArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:361 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry (-66)
/* complex XML schema type 'resqml20:PointGeometry': */
class SOAP_CMAC resqml20__PointGeometry : public resqml20__AbstractGeometry {
      public:
        /// Required element 'resqml20:Points' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *Points;
        /// Optional element 'resqml20:SeismicCoordinates' of XML schema type 'resqml20:AbstractSeismicCoordinates'
        resqml20__AbstractSeismicCoordinates *SeismicCoordinates;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PointGeometry, default initialized and not managed by a soap context
        virtual resqml20__PointGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PointGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__PointGeometry() : Points(), SeismicCoordinates() { }
        virtual ~resqml20__PointGeometry() { }
        /// Friend allocator used by soap_new_resqml20__PointGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PointGeometry * SOAP_FMAC2 soap_instantiate_resqml20__PointGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:367 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array (-69)
/* complex XML schema type 'resqml20:Point3dHdf5Array': */
class SOAP_CMAC resqml20__Point3dHdf5Array : public resqml20__AbstractPoint3dArray {
      public:
        /// Required element 'resqml20:Coordinates' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Coordinates;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__Point3dHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dHdf5Array() : Coordinates() { }
        virtual ~resqml20__Point3dHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__Point3dHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__Point3dHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:373 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray (-72)
/* complex XML schema type 'resqml20:ParametricLineArray': */
class SOAP_CMAC resqml20__ParametricLineArray : public resqml20__AbstractParametricLineArray {
      public:
        /// Optional element 'resqml20:ControlPointParameters' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *ControlPointParameters;
        /// Required element 'resqml20:ControlPoints' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *ControlPoints;
        /// Required element 'resqml20:KnotCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 KnotCount;
        /// Required element 'resqml20:LineKindIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *LineKindIndices;
        /// Optional element 'resqml20:TangentVectors' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *TangentVectors;
        /// Optional element 'resqml20:ParametricLineIntersections' of XML schema type 'resqml20:ParametricLineIntersections'
        resqml20__ParametricLineIntersections *ParametricLineIntersections;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParametricLineArray, default initialized and not managed by a soap context
        virtual resqml20__ParametricLineArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParametricLineArray); }
      public:
        /// Constructor with default initializations
        resqml20__ParametricLineArray() : ControlPointParameters(), ControlPoints(), KnotCount(), LineKindIndices(), TangentVectors(), ParametricLineIntersections() { }
        virtual ~resqml20__ParametricLineArray() { }
        /// Friend allocator used by soap_new_resqml20__ParametricLineArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:375 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray (-73)
/* complex XML schema type 'resqml20:Point3dParametricArray': */
class SOAP_CMAC resqml20__Point3dParametricArray : public resqml20__AbstractPoint3dArray {
      public:
        /// Required element 'resqml20:Parameters' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *Parameters;
        /// Optional element 'resqml20:ParametricLineIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParametricLineIndices;
        /// Optional element 'resqml20:TruncatedLineIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *TruncatedLineIndices;
        /// Required element 'resqml20:ParametricLines' of XML schema type 'resqml20:AbstractParametricLineArray'
        resqml20__AbstractParametricLineArray *ParametricLines;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dParametricArray, default initialized and not managed by a soap context
        virtual resqml20__Point3dParametricArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dParametricArray); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dParametricArray() : Parameters(), ParametricLineIndices(), TruncatedLineIndices(), ParametricLines() { }
        virtual ~resqml20__Point3dParametricArray() { }
        /// Friend allocator used by soap_new_resqml20__Point3dParametricArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dParametricArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dParametricArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:383 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry (-77)
/* complex XML schema type 'resqml20:AbstractPlaneGeometry': */
class SOAP_CMAC resqml20__AbstractPlaneGeometry : public resqml20__AbstractGeometry {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractPlaneGeometry, default initialized and not managed by a soap context
        virtual resqml20__AbstractPlaneGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractPlaneGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractPlaneGeometry() { }
        virtual ~resqml20__AbstractPlaneGeometry() { }
        /// Friend allocator used by soap_new_resqml20__AbstractPlaneGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:385 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry (-78)
/* complex XML schema type 'resqml20:AbstractParametricLineGeometry': */
class SOAP_CMAC resqml20__AbstractParametricLineGeometry : public resqml20__AbstractGeometry {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractParametricLineGeometry, default initialized and not managed by a soap context
        virtual resqml20__AbstractParametricLineGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractParametricLineGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractParametricLineGeometry() { }
        virtual ~resqml20__AbstractParametricLineGeometry() { }
        /// Friend allocator used by soap_new_resqml20__AbstractParametricLineGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:387 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray (-79)
/* complex XML schema type 'resqml20:Point3dFromRepresentationLatticeArray': */
class SOAP_CMAC resqml20__Point3dFromRepresentationLatticeArray : public resqml20__AbstractPoint3dArray {
      public:
        /// Required element 'resqml20:NodeIndicesOnSupportingRepresentation' of XML schema type 'resqml20:IntegerLatticeArray'
        resqml20__IntegerLatticeArray *NodeIndicesOnSupportingRepresentation;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Point3dFromRepresentationLatticeArray, default initialized and not managed by a soap context
        virtual resqml20__Point3dFromRepresentationLatticeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Point3dFromRepresentationLatticeArray); }
      public:
        /// Constructor with default initializations
        resqml20__Point3dFromRepresentationLatticeArray() : NodeIndicesOnSupportingRepresentation(), SupportingRepresentation() { }
        virtual ~resqml20__Point3dFromRepresentationLatticeArray() { }
        /// Friend allocator used by soap_new_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Point3dFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__Point3dFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:389 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates (-80)
/* complex XML schema type 'resqml20:Seismic3dCoordinates': */
class SOAP_CMAC resqml20__Seismic3dCoordinates : public resqml20__AbstractSeismicCoordinates {
      public:
        /// Required element 'resqml20:CrosslineCoordinates' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *CrosslineCoordinates;
        /// Required element 'resqml20:InlineCoordinates' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *InlineCoordinates;
        /// Optional element 'resqml20:VerticalCoordinates' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *VerticalCoordinates;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Seismic3dCoordinates, default initialized and not managed by a soap context
        virtual resqml20__Seismic3dCoordinates *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Seismic3dCoordinates); }
      public:
        /// Constructor with default initializations
        resqml20__Seismic3dCoordinates() : CrosslineCoordinates(), InlineCoordinates(), VerticalCoordinates() { }
        virtual ~resqml20__Seismic3dCoordinates() { }
        /// Friend allocator used by soap_new_resqml20__Seismic3dCoordinates(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Seismic3dCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__Seismic3dCoordinates(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:393 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates (-82)
/* complex XML schema type 'resqml20:Seismic2dCoordinates': */
class SOAP_CMAC resqml20__Seismic2dCoordinates : public resqml20__AbstractSeismicCoordinates {
      public:
        /// Required element 'resqml20:LineAbscissa' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *LineAbscissa;
        /// Optional element 'resqml20:VerticalCoordinates' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *VerticalCoordinates;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Seismic2dCoordinates, default initialized and not managed by a soap context
        virtual resqml20__Seismic2dCoordinates *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Seismic2dCoordinates); }
      public:
        /// Constructor with default initializations
        resqml20__Seismic2dCoordinates() : LineAbscissa(), VerticalCoordinates() { }
        virtual ~resqml20__Seismic2dCoordinates() { }
        /// Friend allocator used by soap_new_resqml20__Seismic2dCoordinates(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Seismic2dCoordinates * SOAP_FMAC2 soap_instantiate_resqml20__Seismic2dCoordinates(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:395 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d (-83)
/* complex XML schema type 'resqml20:Patch1d': */
class SOAP_CMAC resqml20__Patch1d : public resqml20__Patch {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Patch1d, default initialized and not managed by a soap context
        virtual resqml20__Patch1d *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Patch1d); }
      public:
        /// Constructor with default initializations
        resqml20__Patch1d() : Count() { }
        virtual ~resqml20__Patch1d() { }
        /// Friend allocator used by soap_new_resqml20__Patch1d(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Patch1d * SOAP_FMAC2 soap_instantiate_resqml20__Patch1d(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:425 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch (-98)
/* complex XML schema type 'resqml20:SplitNodePatch': */
class SOAP_CMAC resqml20__SplitNodePatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:ParentNodeIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentNodeIndices;
        /// Required element 'resqml20:CellsPerSplitNode' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *CellsPerSplitNode;
        /// Optional element 'resqml20:SplitFaces' of XML schema type 'resqml20:SplitFaces'
        resqml20__SplitFaces *SplitFaces;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SplitNodePatch, default initialized and not managed by a soap context
        virtual resqml20__SplitNodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SplitNodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__SplitNodePatch() : Count(), ParentNodeIndices(), CellsPerSplitNode(), SplitFaces() { }
        virtual ~resqml20__SplitNodePatch() { }
        /// Friend allocator used by soap_new_resqml20__SplitNodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SplitNodePatch * SOAP_FMAC2 soap_instantiate_resqml20__SplitNodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:427 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow (-99)
/* complex XML schema type 'resqml20:IjkParentWindow': */
class SOAP_CMAC resqml20__IjkParentWindow : public resqml20__AbstractParentWindow {
      public:
        /// Optional element 'resqml20:OmitParentCells' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *OmitParentCells;
        /// Required element 'resqml20:JRegrid' of XML schema type 'resqml20:Regrid'
        resqml20__Regrid *JRegrid;
        /// Required element 'resqml20:ParentGrid' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ParentGrid;
        /// Required element 'resqml20:KRegrid' of XML schema type 'resqml20:Regrid'
        resqml20__Regrid *KRegrid;
        /// Required element 'resqml20:IRegrid' of XML schema type 'resqml20:Regrid'
        resqml20__Regrid *IRegrid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IjkParentWindow, default initialized and not managed by a soap context
        virtual resqml20__IjkParentWindow *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IjkParentWindow); }
      public:
        /// Constructor with default initializations
        resqml20__IjkParentWindow() : OmitParentCells(), JRegrid(), ParentGrid(), KRegrid(), IRegrid() { }
        virtual ~resqml20__IjkParentWindow() { }
        /// Friend allocator used by soap_new_resqml20__IjkParentWindow(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IjkParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__IjkParentWindow(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:447 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow (-109)
/* complex XML schema type 'resqml20:ColumnLayerParentWindow': */
class SOAP_CMAC resqml20__ColumnLayerParentWindow : public resqml20__AbstractParentWindow {
      public:
        /// Required element 'resqml20:ColumnIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ColumnIndices;
        /// Optional element 'resqml20:OmitParentCells' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *OmitParentCells;
        /// Required element 'resqml20:KRegrid' of XML schema type 'resqml20:Regrid'
        resqml20__Regrid *KRegrid;
        /// Required element 'resqml20:ParentGrid' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ParentGrid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ColumnLayerParentWindow, default initialized and not managed by a soap context
        virtual resqml20__ColumnLayerParentWindow *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ColumnLayerParentWindow); }
      public:
        /// Constructor with default initializations
        resqml20__ColumnLayerParentWindow() : ColumnIndices(), OmitParentCells(), KRegrid(), ParentGrid() { }
        virtual ~resqml20__ColumnLayerParentWindow() { }
        /// Friend allocator used by soap_new_resqml20__ColumnLayerParentWindow(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ColumnLayerParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerParentWindow(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:449 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology (-110)
/* complex XML schema type 'resqml20:UnstructuredSubnodeTopology': */
class SOAP_CMAC resqml20__UnstructuredSubnodeTopology : public resqml20__SubnodeTopology {
      public:
        /// Optional element 'resqml20:Edges' of XML schema type 'resqml20:Edges'
        resqml20__Edges *Edges;
        /// Optional element 'resqml20:NodesPerCell' of XML schema type 'resqml20:NodesPerCell'
        resqml20__NodesPerCell *NodesPerCell;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UnstructuredSubnodeTopology, default initialized and not managed by a soap context
        virtual resqml20__UnstructuredSubnodeTopology *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UnstructuredSubnodeTopology); }
      public:
        /// Constructor with default initializations
        resqml20__UnstructuredSubnodeTopology() : Edges(), NodesPerCell() { }
        virtual ~resqml20__UnstructuredSubnodeTopology() { }
        /// Friend allocator used by soap_new_resqml20__UnstructuredSubnodeTopology(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UnstructuredSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:451 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch (-111)
/* complex XML schema type 'resqml20:GpGridUnstructuredColumnLayerGridPatch': */
class SOAP_CMAC resqml20__GpGridUnstructuredColumnLayerGridPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:UnstructuredColumnCount' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 UnstructuredColumnCount;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:UnstructuredColumnLayerGridGeometry'
        resqml20__UnstructuredColumnLayerGridGeometry *Geometry;
        /// Optional element 'resqml20:TruncationCells' of XML schema type 'resqml20:TruncationCellPatch'
        resqml20__TruncationCellPatch *TruncationCells;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__GpGridUnstructuredColumnLayerGridPatch, default initialized and not managed by a soap context
        virtual resqml20__GpGridUnstructuredColumnLayerGridPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__GpGridUnstructuredColumnLayerGridPatch); }
      public:
        /// Constructor with default initializations
        resqml20__GpGridUnstructuredColumnLayerGridPatch() : UnstructuredColumnCount(), Geometry(), TruncationCells() { }
        virtual ~resqml20__GpGridUnstructuredColumnLayerGridPatch() { }
        /// Friend allocator used by soap_new_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:461 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch (-116)
/* complex XML schema type 'resqml20:SubnodePatch': */
class SOAP_CMAC resqml20__SubnodePatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:SubnodeNodeObject' of XML schema type 'resqml20:SubnodeNodeObject'
        enum resqml20__SubnodeNodeObject SubnodeNodeObject;
        /// Required element 'resqml20:NodeWeightsPerSubnode' of XML schema type 'resqml20:AbstractValueArray'
        resqml20__AbstractValueArray *NodeWeightsPerSubnode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SubnodePatch, default initialized and not managed by a soap context
        virtual resqml20__SubnodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SubnodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__SubnodePatch() : SubnodeNodeObject(), NodeWeightsPerSubnode() { }
        virtual ~resqml20__SubnodePatch() { }
        /// Friend allocator used by soap_new_resqml20__SubnodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__SubnodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:463 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology (-117)
/* complex XML schema type 'resqml20:ColumnLayerSubnodeTopology': */
class SOAP_CMAC resqml20__ColumnLayerSubnodeTopology : public resqml20__SubnodeTopology {
      public:
        /// Optional element 'resqml20:ColumnSubnodes' of XML schema type 'resqml20:ColumnSubnodePatch'
        std::vector<resqml20__ColumnSubnodePatch *> ColumnSubnodes;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ColumnLayerSubnodeTopology, default initialized and not managed by a soap context
        virtual resqml20__ColumnLayerSubnodeTopology *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ColumnLayerSubnodeTopology); }
      public:
        /// Constructor with default initializations
        resqml20__ColumnLayerSubnodeTopology() : ColumnSubnodes() { }
        virtual ~resqml20__ColumnLayerSubnodeTopology() { }
        /// Friend allocator used by soap_new_resqml20__ColumnLayerSubnodeTopology(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ColumnLayerSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml20__ColumnLayerSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:471 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch (-121)
/* complex XML schema type 'resqml20:TruncationCellPatch': */
class SOAP_CMAC resqml20__TruncationCellPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:TruncationNodeCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TruncationNodeCount;
        /// Required element 'resqml20:TruncationFaceCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TruncationFaceCount;
        /// Required element 'resqml20:TruncationCellCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TruncationCellCount;
        /// Required element 'resqml20:NodesPerTruncationFace' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *NodesPerTruncationFace;
        /// Required element 'resqml20:ParentCellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ParentCellIndices;
        /// Required element 'resqml20:LocalFacesPerCell' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *LocalFacesPerCell;
        /// Required element 'resqml20:TruncationFacesPerCell' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *TruncationFacesPerCell;
        /// Required element 'resqml20:TruncationCellFaceIsRightHanded' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *TruncationCellFaceIsRightHanded;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TruncationCellPatch, default initialized and not managed by a soap context
        virtual resqml20__TruncationCellPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TruncationCellPatch); }
      public:
        /// Constructor with default initializations
        resqml20__TruncationCellPatch() : TruncationNodeCount(), TruncationFaceCount(), TruncationCellCount(), NodesPerTruncationFace(), ParentCellIndices(), LocalFacesPerCell(), TruncationFacesPerCell(), TruncationCellFaceIsRightHanded() { }
        virtual ~resqml20__TruncationCellPatch() { }
        /// Friend allocator used by soap_new_resqml20__TruncationCellPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TruncationCellPatch * SOAP_FMAC2 soap_instantiate_resqml20__TruncationCellPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:473 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch (-122)
/* complex XML schema type 'resqml20:GpGridUnstructuredGridPatch': */
class SOAP_CMAC resqml20__GpGridUnstructuredGridPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:UnstructuredCellCount' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 UnstructuredCellCount;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:UnstructuredGridGeometry'
        resqml20__UnstructuredGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__GpGridUnstructuredGridPatch, default initialized and not managed by a soap context
        virtual resqml20__GpGridUnstructuredGridPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__GpGridUnstructuredGridPatch); }
      public:
        /// Constructor with default initializations
        resqml20__GpGridUnstructuredGridPatch() : UnstructuredCellCount(), Geometry() { }
        virtual ~resqml20__GpGridUnstructuredGridPatch() { }
        /// Friend allocator used by soap_new_resqml20__GpGridUnstructuredGridPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__GpGridUnstructuredGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridUnstructuredGridPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:501 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow (-136)
/* complex XML schema type 'resqml20:CellParentWindow': */
class SOAP_CMAC resqml20__CellParentWindow : public resqml20__AbstractParentWindow {
      public:
        /// Required element 'resqml20:CellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CellIndices;
        /// Required element 'resqml20:ParentGrid' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ParentGrid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__CellParentWindow, default initialized and not managed by a soap context
        virtual resqml20__CellParentWindow *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__CellParentWindow); }
      public:
        /// Constructor with default initializations
        resqml20__CellParentWindow() : CellIndices(), ParentGrid() { }
        virtual ~resqml20__CellParentWindow() { }
        /// Friend allocator used by soap_new_resqml20__CellParentWindow(struct soap*, int)
        friend SOAP_FMAC1 resqml20__CellParentWindow * SOAP_FMAC2 soap_instantiate_resqml20__CellParentWindow(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:505 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch (-138)
/* complex XML schema type 'resqml20:GpGridIjkGridPatch': */
class SOAP_CMAC resqml20__GpGridIjkGridPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:Ni' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Ni;
        /// Required element 'resqml20:Nj' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Nj;
        /// Optional element 'resqml20:RadialGridIsComplete' of XML schema type 'xsd:boolean'
        bool *RadialGridIsComplete;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:IjkGridGeometry'
        resqml20__IjkGridGeometry *Geometry;
        /// Optional element 'resqml20:TruncationCells' of XML schema type 'resqml20:TruncationCellPatch'
        resqml20__TruncationCellPatch *TruncationCells;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__GpGridIjkGridPatch, default initialized and not managed by a soap context
        virtual resqml20__GpGridIjkGridPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__GpGridIjkGridPatch); }
      public:
        /// Constructor with default initializations
        resqml20__GpGridIjkGridPatch() : Ni(), Nj(), RadialGridIsComplete(), Geometry(), TruncationCells() { }
        virtual ~resqml20__GpGridIjkGridPatch() { }
        /// Friend allocator used by soap_new_resqml20__GpGridIjkGridPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__GpGridIjkGridPatch * SOAP_FMAC2 soap_instantiate_resqml20__GpGridIjkGridPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:537 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart (-154)
/* complex XML schema type 'resqml20:BinaryContactInterpretationPart': */
class SOAP_CMAC resqml20__BinaryContactInterpretationPart : public resqml20__AbstractContactInterpretationPart {
      public:
        /// Required element 'resqml20:DirectObject' of XML schema type 'resqml20:ContactElementReference'
        resqml20__ContactElementReference *DirectObject;
        /// Required element 'resqml20:Verb' of XML schema type 'resqml20:ContactVerb'
        enum resqml20__ContactVerb Verb;
        /// Required element 'resqml20:Subject' of XML schema type 'resqml20:ContactElementReference'
        resqml20__ContactElementReference *Subject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__BinaryContactInterpretationPart, default initialized and not managed by a soap context
        virtual resqml20__BinaryContactInterpretationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__BinaryContactInterpretationPart); }
      public:
        /// Constructor with default initializations
        resqml20__BinaryContactInterpretationPart() : DirectObject(), Verb(), Subject() { }
        virtual ~resqml20__BinaryContactInterpretationPart() { }
        /// Friend allocator used by soap_new_resqml20__BinaryContactInterpretationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__BinaryContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__BinaryContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:541 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference (-156)
/* complex XML schema type 'resqml20:ContactElementReference': */
class SOAP_CMAC resqml20__ContactElementReference : public eml20__DataObjectReference {
      public:
        /// Optional element 'resqml20:Qualifier' of XML schema type 'resqml20:ContactSide'
        enum resqml20__ContactSide *Qualifier;
        /// Optional element 'resqml20:SecondaryQualifier' of XML schema type 'resqml20:ContactMode'
        enum resqml20__ContactMode *SecondaryQualifier;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ContactElementReference, default initialized and not managed by a soap context
        virtual resqml20__ContactElementReference *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ContactElementReference); }
      public:
        /// Constructor with default initializations
        resqml20__ContactElementReference() : Qualifier(), SecondaryQualifier() { }
        virtual ~resqml20__ContactElementReference() { }
        /// Friend allocator used by soap_new_resqml20__ContactElementReference(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ContactElementReference * SOAP_FMAC2 soap_instantiate_resqml20__ContactElementReference(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:555 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart (-163)
/* complex XML schema type 'resqml20:MultipleContactInterpretationPart': */
class SOAP_CMAC resqml20__MultipleContactInterpretationPart : public resqml20__AbstractContactInterpretationPart {
      public:
        /// Required element 'resqml20:With' of XML schema type 'xsd:nonNegativeInteger'
        std::vector<ULONG64> With;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__MultipleContactInterpretationPart, default initialized and not managed by a soap context
        virtual resqml20__MultipleContactInterpretationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__MultipleContactInterpretationPart); }
      public:
        /// Constructor with default initializations
        resqml20__MultipleContactInterpretationPart() : With() { }
        virtual ~resqml20__MultipleContactInterpretationPart() { }
        /// Friend allocator used by soap_new_resqml20__MultipleContactInterpretationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__MultipleContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml20__MultipleContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:655 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart (-213)
/* complex XML schema type 'resqml20:NonSealedContactRepresentationPart': */
class SOAP_CMAC resqml20__NonSealedContactRepresentationPart : public resqml20__AbstractContactRepresentationPart {
      public:
        /// Optional element 'resqml20:Contact' of XML schema type 'resqml20:ContactPatch'
        std::vector<resqml20__ContactPatch *> Contact;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:AbstractGeometry'
        resqml20__AbstractGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__NonSealedContactRepresentationPart, default initialized and not managed by a soap context
        virtual resqml20__NonSealedContactRepresentationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__NonSealedContactRepresentationPart); }
      public:
        /// Constructor with default initializations
        resqml20__NonSealedContactRepresentationPart() : Contact(), Geometry() { }
        virtual ~resqml20__NonSealedContactRepresentationPart() { }
        /// Friend allocator used by soap_new_resqml20__NonSealedContactRepresentationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__NonSealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__NonSealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:657 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart (-214)
/* complex XML schema type 'resqml20:SealedContactRepresentationPart': */
class SOAP_CMAC resqml20__SealedContactRepresentationPart : public resqml20__AbstractContactRepresentationPart {
      public:
        /// Optional element 'resqml20:IdenticalNodeIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *IdenticalNodeIndices;
        /// Required element 'resqml20:IdentityKind' of XML schema type 'resqml20:IdentityKind'
        enum resqml20__IdentityKind IdentityKind;
        /// Required element 'resqml20:Contact' of XML schema type 'resqml20:ContactPatch'
        std::vector<resqml20__ContactPatch *> Contact;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SealedContactRepresentationPart, default initialized and not managed by a soap context
        virtual resqml20__SealedContactRepresentationPart *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SealedContactRepresentationPart); }
      public:
        /// Constructor with default initializations
        resqml20__SealedContactRepresentationPart() : IdenticalNodeIndices(), IdentityKind(), Contact() { }
        virtual ~resqml20__SealedContactRepresentationPart() { }
        /// Friend allocator used by soap_new_resqml20__SealedContactRepresentationPart(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml20__SealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:693 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch (-232)
/* complex XML schema type 'resqml20:Grid2dPatch': */
class SOAP_CMAC resqml20__Grid2dPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:FastestAxisCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 FastestAxisCount;
        /// Required element 'resqml20:SlowestAxisCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 SlowestAxisCount;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:PointGeometry'
        resqml20__PointGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__Grid2dPatch, default initialized and not managed by a soap context
        virtual resqml20__Grid2dPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__Grid2dPatch); }
      public:
        /// Constructor with default initializations
        resqml20__Grid2dPatch() : FastestAxisCount(), SlowestAxisCount(), Geometry() { }
        virtual ~resqml20__Grid2dPatch() { }
        /// Friend allocator used by soap_new_resqml20__Grid2dPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__Grid2dPatch * SOAP_FMAC2 soap_instantiate_resqml20__Grid2dPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:697 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch (-234)
/* complex XML schema type 'resqml20:PolylineSetPatch': */
class SOAP_CMAC resqml20__PolylineSetPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:ClosedPolylines' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *ClosedPolylines;
        /// Required element 'resqml20:NodeCountPerPolyline' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *NodeCountPerPolyline;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:PointGeometry'
        resqml20__PointGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__PolylineSetPatch, default initialized and not managed by a soap context
        virtual resqml20__PolylineSetPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__PolylineSetPatch); }
      public:
        /// Constructor with default initializations
        resqml20__PolylineSetPatch() : ClosedPolylines(), NodeCountPerPolyline(), Geometry() { }
        virtual ~resqml20__PolylineSetPatch() { }
        /// Friend allocator used by soap_new_resqml20__PolylineSetPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__PolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml20__PolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:703 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference (-237)
/* complex XML schema type 'resqml20:ContactRepresentationReference': */
class SOAP_CMAC resqml20__ContactRepresentationReference : public resqml20__AbstractContactRepresentationPart {
      public:
        /// Required element 'resqml20:Representation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Representation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ContactRepresentationReference, default initialized and not managed by a soap context
        virtual resqml20__ContactRepresentationReference *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ContactRepresentationReference); }
      public:
        /// Constructor with default initializations
        resqml20__ContactRepresentationReference() : Representation() { }
        virtual ~resqml20__ContactRepresentationReference() { }
        /// Friend allocator used by soap_new_resqml20__ContactRepresentationReference(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ContactRepresentationReference * SOAP_FMAC2 soap_instantiate_resqml20__ContactRepresentationReference(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:723 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter (-247)
/* complex XML schema type 'resqml20:DataObjectParameter': */
class SOAP_CMAC resqml20__DataObjectParameter : public resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:DataObject' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *DataObject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__DataObjectParameter, default initialized and not managed by a soap context
        virtual resqml20__DataObjectParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__DataObjectParameter); }
      public:
        /// Constructor with default initializations
        resqml20__DataObjectParameter() : DataObject() { }
        virtual ~resqml20__DataObjectParameter() { }
        /// Friend allocator used by soap_new_resqml20__DataObjectParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__DataObjectParameter * SOAP_FMAC2 soap_instantiate_resqml20__DataObjectParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:725 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey (-248)
/* complex XML schema type 'resqml20:ObjectParameterKey': */
class SOAP_CMAC resqml20__ObjectParameterKey : public resqml20__AbstractParameterKey {
      public:
        /// Required element 'resqml20:DataObject' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *DataObject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ObjectParameterKey, default initialized and not managed by a soap context
        virtual resqml20__ObjectParameterKey *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ObjectParameterKey); }
      public:
        /// Constructor with default initializations
        resqml20__ObjectParameterKey() : DataObject() { }
        virtual ~resqml20__ObjectParameterKey() { }
        /// Friend allocator used by soap_new_resqml20__ObjectParameterKey(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ObjectParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__ObjectParameterKey(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:729 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter (-250)
/* complex XML schema type 'resqml20:StringParameter': */
class SOAP_CMAC resqml20__StringParameter : public resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:string'
        std::string Value;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StringParameter, default initialized and not managed by a soap context
        virtual resqml20__StringParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StringParameter); }
      public:
        /// Constructor with default initializations
        resqml20__StringParameter() : Value() { }
        virtual ~resqml20__StringParameter() { }
        /// Friend allocator used by soap_new_resqml20__StringParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StringParameter * SOAP_FMAC2 soap_instantiate_resqml20__StringParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:733 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter (-252)
/* complex XML schema type 'resqml20:IntegerQuantityParameter': */
class SOAP_CMAC resqml20__IntegerQuantityParameter : public resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:long'
        LONG64 Value;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerQuantityParameter, default initialized and not managed by a soap context
        virtual resqml20__IntegerQuantityParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerQuantityParameter); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerQuantityParameter() : Value() { }
        virtual ~resqml20__IntegerQuantityParameter() { }
        /// Friend allocator used by soap_new_resqml20__IntegerQuantityParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml20__IntegerQuantityParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:735 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey (-253)
/* complex XML schema type 'resqml20:TimeIndexParameterKey': */
class SOAP_CMAC resqml20__TimeIndexParameterKey : public resqml20__AbstractParameterKey {
      public:
        /// Required element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeIndexParameterKey, default initialized and not managed by a soap context
        virtual resqml20__TimeIndexParameterKey *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeIndexParameterKey); }
      public:
        /// Constructor with default initializations
        resqml20__TimeIndexParameterKey() : TimeIndex() { }
        virtual ~resqml20__TimeIndexParameterKey() { }
        /// Friend allocator used by soap_new_resqml20__TimeIndexParameterKey(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeIndexParameterKey * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndexParameterKey(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:737 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter (-254)
/* complex XML schema type 'resqml20:FloatingPointQuantityParameter': */
class SOAP_CMAC resqml20__FloatingPointQuantityParameter : public resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:double'
        double Value;
        /// Required element 'resqml20:Uom' of XML schema type 'resqml20:ResqmlUom'
        enum resqml20__ResqmlUom Uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__FloatingPointQuantityParameter, default initialized and not managed by a soap context
        virtual resqml20__FloatingPointQuantityParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__FloatingPointQuantityParameter); }
      public:
        /// Constructor with default initializations
        resqml20__FloatingPointQuantityParameter() : Value(), Uom() { }
        virtual ~resqml20__FloatingPointQuantityParameter() { }
        /// Friend allocator used by soap_new_resqml20__FloatingPointQuantityParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__FloatingPointQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml20__FloatingPointQuantityParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:741 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter (-256)
/* complex XML schema type 'resqml20:TimeIndexParameter': */
class SOAP_CMAC resqml20__TimeIndexParameter : public resqml20__AbstractActivityParameter {
      public:
        /// Required element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TimeIndexParameter, default initialized and not managed by a soap context
        virtual resqml20__TimeIndexParameter *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TimeIndexParameter); }
      public:
        /// Constructor with default initializations
        resqml20__TimeIndexParameter() : TimeIndex() { }
        virtual ~resqml20__TimeIndexParameter() { }
        /// Friend allocator used by soap_new_resqml20__TimeIndexParameter(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TimeIndexParameter * SOAP_FMAC2 soap_instantiate_resqml20__TimeIndexParameter(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:747 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch (-259)
/* complex XML schema type 'resqml20:StreamlinePolylineSetPatch': */
class SOAP_CMAC resqml20__StreamlinePolylineSetPatch : public resqml20__Patch {
      public:
        /// Required element 'resqml20:NodeCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 NodeCount;
        /// Required element 'resqml20:IntervalCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 IntervalCount;
        /// Required element 'resqml20:ClosedPolylines' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *ClosedPolylines;
        /// Required element 'resqml20:NodeCountPerPolyline' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *NodeCountPerPolyline;
        /// Optional element 'resqml20:IntervalGridCells' of XML schema type 'resqml20:IntervalGridCells'
        resqml20__IntervalGridCells *IntervalGridCells;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__StreamlinePolylineSetPatch, default initialized and not managed by a soap context
        virtual resqml20__StreamlinePolylineSetPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__StreamlinePolylineSetPatch); }
      public:
        /// Constructor with default initializations
        resqml20__StreamlinePolylineSetPatch() : NodeCount(), IntervalCount(), ClosedPolylines(), NodeCountPerPolyline(), IntervalGridCells() { }
        virtual ~resqml20__StreamlinePolylineSetPatch() { }
        /// Friend allocator used by soap_new_resqml20__StreamlinePolylineSetPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__StreamlinePolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml20__StreamlinePolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:767 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject (-269)
/* complex XML schema type 'eml20:AbstractCitedDataObject': */
class SOAP_CMAC eml20__AbstractCitedDataObject {
      public:
        /// Required element 'eml20:Citation' of XML schema type 'eml20:Citation'
        eml20__Citation *Citation;
        /// Optional element 'eml20:Aliases' of XML schema type 'eml20:ObjectAlias'
        std::vector<eml20__ObjectAlias *> Aliases;
        /// Optional element 'eml20:CustomData' of XML schema type 'eml20:CustomData'
        eml20__CustomData *CustomData;
        /// Required attribute 'schemaVersion' of XML schema type 'xsd:string'
        std::string schemaVersion;
        /// Required attribute 'uuid' of XML schema type 'eml20:UuidString'
        std::string uuid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AbstractCitedDataObject, default initialized and not managed by a soap context
        virtual eml20__AbstractCitedDataObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AbstractCitedDataObject); }
      public:
        /// Constructor with default initializations
        eml20__AbstractCitedDataObject() : Citation(), Aliases(), CustomData(), schemaVersion(), uuid(), soap() { }
        virtual ~eml20__AbstractCitedDataObject() { }
        /// Friend allocator used by soap_new_eml20__AbstractCitedDataObject(struct soap*, int)
        friend SOAP_FMAC1 eml20__AbstractCitedDataObject * SOAP_FMAC2 soap_instantiate_eml20__AbstractCitedDataObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:777 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode (-274)
/* complex XML schema type 'eml20:VerticalCrsEpsgCode': */
class SOAP_CMAC eml20__VerticalCrsEpsgCode : public eml20__AbstractVerticalCrs {
      public:
        /// Required element 'eml20:EpsgCode' of XML schema type 'xsd:positiveInteger'
        ULONG64 EpsgCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VerticalCrsEpsgCode, default initialized and not managed by a soap context
        virtual eml20__VerticalCrsEpsgCode *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VerticalCrsEpsgCode); }
      public:
        /// Constructor with default initializations
        eml20__VerticalCrsEpsgCode() : EpsgCode() { }
        virtual ~eml20__VerticalCrsEpsgCode() { }
        /// Friend allocator used by soap_new_eml20__VerticalCrsEpsgCode(struct soap*, int)
        friend SOAP_FMAC1 eml20__VerticalCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml20__VerticalCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:779 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition (-275)
/* complex XML schema type 'eml20:GmlVerticalCrsDefinition': */
class SOAP_CMAC eml20__GmlVerticalCrsDefinition : public eml20__AbstractVerticalCrs {
      public:
        /// Required element 'eml20:GmlVerticalCrsDefinition' of XML schema type 'gml:VerticalCRSType'
        gml__VerticalCRSType *GmlVerticalCrsDefinition;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__GmlVerticalCrsDefinition, default initialized and not managed by a soap context
        virtual eml20__GmlVerticalCrsDefinition *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__GmlVerticalCrsDefinition); }
      public:
        /// Constructor with default initializations
        eml20__GmlVerticalCrsDefinition() : GmlVerticalCrsDefinition() { }
        virtual ~eml20__GmlVerticalCrsDefinition() { }
        /// Friend allocator used by soap_new_eml20__GmlVerticalCrsDefinition(struct soap*, int)
        friend SOAP_FMAC1 eml20__GmlVerticalCrsDefinition * SOAP_FMAC2 soap_instantiate_eml20__GmlVerticalCrsDefinition(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:781 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs (-276)
/* complex XML schema type 'eml20:VerticalUnknownCrs': */
class SOAP_CMAC eml20__VerticalUnknownCrs : public eml20__AbstractVerticalCrs {
      public:
        /// Required element 'eml20:Unknown' of XML schema type 'eml20:DescriptionString'
        std::string Unknown;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VerticalUnknownCrs, default initialized and not managed by a soap context
        virtual eml20__VerticalUnknownCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VerticalUnknownCrs); }
      public:
        /// Constructor with default initializations
        eml20__VerticalUnknownCrs() : Unknown() { }
        virtual ~eml20__VerticalUnknownCrs() { }
        /// Friend allocator used by soap_new_eml20__VerticalUnknownCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__VerticalUnknownCrs * SOAP_FMAC2 soap_instantiate_eml20__VerticalUnknownCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:791 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode (-281)
/* complex XML schema type 'eml20:ProjectedCrsEpsgCode': */
class SOAP_CMAC eml20__ProjectedCrsEpsgCode : public eml20__AbstractProjectedCrs {
      public:
        /// Required element 'eml20:EpsgCode' of XML schema type 'xsd:positiveInteger'
        ULONG64 EpsgCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ProjectedCrsEpsgCode, default initialized and not managed by a soap context
        virtual eml20__ProjectedCrsEpsgCode *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ProjectedCrsEpsgCode); }
      public:
        /// Constructor with default initializations
        eml20__ProjectedCrsEpsgCode() : EpsgCode() { }
        virtual ~eml20__ProjectedCrsEpsgCode() { }
        /// Friend allocator used by soap_new_eml20__ProjectedCrsEpsgCode(struct soap*, int)
        friend SOAP_FMAC1 eml20__ProjectedCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml20__ProjectedCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:793 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition (-282)
/* complex XML schema type 'eml20:GmlProjectedCrsDefinition': */
class SOAP_CMAC eml20__GmlProjectedCrsDefinition : public eml20__AbstractProjectedCrs {
      public:
        /// Required element 'eml20:GmlProjectedCrsDefinition' of XML schema type 'gml:ProjectedCRSType'
        gml__ProjectedCRSType *GmlProjectedCrsDefinition;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__GmlProjectedCrsDefinition, default initialized and not managed by a soap context
        virtual eml20__GmlProjectedCrsDefinition *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__GmlProjectedCrsDefinition); }
      public:
        /// Constructor with default initializations
        eml20__GmlProjectedCrsDefinition() : GmlProjectedCrsDefinition() { }
        virtual ~eml20__GmlProjectedCrsDefinition() { }
        /// Friend allocator used by soap_new_eml20__GmlProjectedCrsDefinition(struct soap*, int)
        friend SOAP_FMAC1 eml20__GmlProjectedCrsDefinition * SOAP_FMAC2 soap_instantiate_eml20__GmlProjectedCrsDefinition(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:795 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs (-283)
/* complex XML schema type 'eml20:ProjectedUnknownCrs': */
class SOAP_CMAC eml20__ProjectedUnknownCrs : public eml20__AbstractProjectedCrs {
      public:
        /// Required element 'eml20:Unknown' of XML schema type 'eml20:DescriptionString'
        std::string Unknown;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ProjectedUnknownCrs, default initialized and not managed by a soap context
        virtual eml20__ProjectedUnknownCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ProjectedUnknownCrs); }
      public:
        /// Constructor with default initializations
        eml20__ProjectedUnknownCrs() : Unknown() { }
        virtual ~eml20__ProjectedUnknownCrs() { }
        /// Friend allocator used by soap_new_eml20__ProjectedUnknownCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__ProjectedUnknownCrs * SOAP_FMAC2 soap_instantiate_eml20__ProjectedUnknownCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1161 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType (-466)
/* complex XML schema type 'gml:DefinitionBaseType': */
class SOAP_CMAC gml__DefinitionBaseType {
      public:
        /// Optional element 'gml:description' of XML schema type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XML schema type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Required element 'gml:identifier' of XML schema type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XML schema type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// Required attribute 'gml:id' of XML schema type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__DefinitionBaseType, default initialized and not managed by a soap context
        virtual gml__DefinitionBaseType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__DefinitionBaseType); }
      public:
        /// Constructor with default initializations
        gml__DefinitionBaseType() : description(), descriptionReference(), identifier(), name(), gml__id(), soap() { }
        virtual ~gml__DefinitionBaseType() { }
        /// Friend allocator used by soap_new_gml__DefinitionBaseType(struct soap*, int)
        friend SOAP_FMAC1 gml__DefinitionBaseType * SOAP_FMAC2 soap_instantiate_gml__DefinitionBaseType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1165 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType (-468)
/* simple XML schema type 'gml:StringOrRefType': */
class SOAP_CMAC gml__StringOrRefType {
      public:
        /// Simple content of XML schema type 'xsd:string' wrapped by this struct
        std::string __item;
        /// Optional attribute 'nilReason' of XML schema type 'gml:NilReasonType'
        std::string *nilReason;
        /// Optional attribute 'xlink:type' of XML schema type 'xsd:string'
        std::string xlink__type;	///< initialized with fixed value = "simple"
        /// Optional attribute 'xlink:href' of XML schema type 'xsd:anyURI'
        std::string *xlink__href;
        /// Optional attribute 'xlink:role' of XML schema type 'xsd:anyURI'
        std::string *xlink__role;
        /// Optional attribute 'xlink:arcrole' of XML schema type 'xsd:anyURI'
        std::string *xlink__arcrole;
        /// Optional attribute 'xlink:title' of XML schema type 'xsd:string'
        std::string *xlink__title;
        /// Optional attribute 'xlink:show' of XML schema type 'xlink:show'
        enum _xlink__show *xlink__show;
        /// Optional attribute 'xlink:actuate' of XML schema type 'xlink:actuate'
        enum _xlink__actuate *xlink__actuate;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__StringOrRefType, default initialized and not managed by a soap context
        virtual gml__StringOrRefType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__StringOrRefType); }
      public:
        /// Constructor with default initializations
        gml__StringOrRefType() : __item(), nilReason(), xlink__type("simple"), xlink__href(), xlink__role(), xlink__arcrole(), xlink__title(), xlink__show(), xlink__actuate(), soap() { }
        virtual ~gml__StringOrRefType() { }
        /// Friend allocator used by soap_new_gml__StringOrRefType(struct soap*, int)
        friend SOAP_FMAC1 gml__StringOrRefType * SOAP_FMAC2 soap_instantiate_gml__StringOrRefType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1171 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType (-471)
/* simple XML schema type 'gml:CodeType': */
class SOAP_CMAC gml__CodeType {
      public:
        /// Simple content of XML schema type 'xsd:string' wrapped by this struct
        std::string __item;
        /// Optional attribute 'codeSpace' of XML schema type 'xsd:anyURI'
        std::string *codeSpace;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CodeType, default initialized and not managed by a soap context
        virtual gml__CodeType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CodeType); }
      public:
        /// Constructor with default initializations
        gml__CodeType() : __item(), codeSpace(), soap() { }
        virtual ~gml__CodeType() { }
        /// Friend allocator used by soap_new_gml__CodeType(struct soap*, int)
        friend SOAP_FMAC1 gml__CodeType * SOAP_FMAC2 soap_instantiate_gml__CodeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1175 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType (-473)
/* complex XML schema type 'gml:AbstractTimeObjectType': */
class SOAP_CMAC gml__AbstractTimeObjectType : public gml__AbstractGMLType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractTimeObjectType, default initialized and not managed by a soap context
        virtual gml__AbstractTimeObjectType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractTimeObjectType); }
      public:
        /// Constructor with default initializations
        gml__AbstractTimeObjectType() { }
        virtual ~gml__AbstractTimeObjectType() { }
        /// Friend allocator used by soap_new_gml__AbstractTimeObjectType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractTimeObjectType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimeObjectType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1177 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType (-474)
/* complex XML schema type 'gml:RelatedTimeType': */
class SOAP_CMAC gml__RelatedTimeType : public gml__TimePrimitivePropertyType {
      public:
        /// Optional attribute 'relativePosition' of XML schema type 'gml:RelatedTimeType-relativePosition'
        enum _gml__RelatedTimeType_relativePosition *relativePosition;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__RelatedTimeType, default initialized and not managed by a soap context
        virtual gml__RelatedTimeType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__RelatedTimeType); }
      public:
        /// Constructor with default initializations
        gml__RelatedTimeType() : relativePosition() { }
        virtual ~gml__RelatedTimeType() { }
        /// Friend allocator used by soap_new_gml__RelatedTimeType(struct soap*, int)
        friend SOAP_FMAC1 gml__RelatedTimeType * SOAP_FMAC2 soap_instantiate_gml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1211 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType (-491)
/* simple XML schema type 'gml:MeasureType': */
class SOAP_CMAC gml__MeasureType {
      public:
        /// Simple content of XML schema type 'xsd:double' wrapped by this struct
        double __item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__MeasureType, default initialized and not managed by a soap context
        virtual gml__MeasureType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__MeasureType); }
      public:
        /// Constructor with default initializations
        gml__MeasureType() : __item(), soap() { }
        virtual ~gml__MeasureType() { }
        /// Friend allocator used by soap_new_gml__MeasureType(struct soap*, int)
        friend SOAP_FMAC1 gml__MeasureType * SOAP_FMAC2 soap_instantiate_gml__MeasureType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1251 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType (-511)
/* complex XML schema type 'gmd:EX_Extent_Type': */
class SOAP_CMAC gmd__EX_USCOREExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:description' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *description;
        /// Optional element 'gmd:geographicElement' of XML schema type 'gmd:EX_GeographicExtent_PropertyType'
        std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> geographicElement;
        /// Optional element 'gmd:temporalElement' of XML schema type 'gmd:EX_TemporalExtent_PropertyType'
        std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> temporalElement;
        /// Optional element 'gmd:verticalElement' of XML schema type 'gmd:EX_VerticalExtent_PropertyType'
        std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> verticalElement;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREExtent_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCOREExtent_USCOREType() : description(), geographicElement(), temporalElement(), verticalElement() { }
        virtual ~gmd__EX_USCOREExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1255 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType (-513)
/* complex XML schema type 'gmd:AbstractEX_GeographicExtent_Type': */
class SOAP_CMAC gmd__AbstractEX_USCOREGeographicExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:extentTypeCode' of XML schema type 'gco:Boolean_PropertyType'
        gco__Boolean_USCOREPropertyType *extentTypeCode;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractEX_USCOREGeographicExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractEX_USCOREGeographicExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractEX_USCOREGeographicExtent_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__AbstractEX_USCOREGeographicExtent_USCOREType() : extentTypeCode() { }
        virtual ~gmd__AbstractEX_USCOREGeographicExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1259 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType (-515)
/* complex XML schema type 'gmd:EX_TemporalExtent_Type': */
class SOAP_CMAC gmd__EX_USCORETemporalExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:extent' of XML schema type 'gts:TM_Primitive_PropertyType'
        gts__TM_USCOREPrimitive_USCOREPropertyType *extent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCORETemporalExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCORETemporalExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCORETemporalExtent_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCORETemporalExtent_USCOREType() : extent() { }
        virtual ~gmd__EX_USCORETemporalExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1263 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType (-517)
/* complex XML schema type 'gmd:EX_VerticalExtent_Type': */
class SOAP_CMAC gmd__EX_USCOREVerticalExtent_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:minimumValue' of XML schema type 'gco:Real_PropertyType'
        gco__Real_USCOREPropertyType *minimumValue;
        /// Required element 'gmd:maximumValue' of XML schema type 'gco:Real_PropertyType'
        gco__Real_USCOREPropertyType *maximumValue;
        /// Required element 'gmd:verticalCRS' of XML schema type 'gsr:SC_CRS_PropertyType'
        gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__EX_USCOREVerticalExtent_USCOREType, default initialized and not managed by a soap context
        virtual gmd__EX_USCOREVerticalExtent_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__EX_USCOREVerticalExtent_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__EX_USCOREVerticalExtent_USCOREType() : minimumValue(), maximumValue(), verticalCRS() { }
        virtual ~gmd__EX_USCOREVerticalExtent_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1267 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType (-519)
/* complex XML schema type 'gmd:AbstractDQ_Element_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREElement_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:nameOfMeasure' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> nameOfMeasure;
        /// Optional element 'gmd:measureIdentification' of XML schema type 'gmd:MD_Identifier_PropertyType'
        gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification;
        /// Optional element 'gmd:measureDescription' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *measureDescription;
        /// Optional element 'gmd:evaluationMethodType' of XML schema type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType'
        gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType;
        /// Optional element 'gmd:evaluationMethodDescription' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *evaluationMethodDescription;
        /// Optional element 'gmd:evaluationProcedure' of XML schema type 'gmd:CI_Citation_PropertyType'
        gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure;
        /// Optional element 'gmd:dateTime' of XML schema type 'gco:DateTime_PropertyType'
        std::vector<gco__DateTime_USCOREPropertyType *> dateTime;
        /// Sequence of 1 to 2 elements 'gmd:result' of XML schema type 'gmd:DQ_Result_PropertyType'
        std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> result;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREElement_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREElement_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREElement_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__AbstractDQ_USCOREElement_USCOREType() : nameOfMeasure(), measureIdentification(), measureDescription(), evaluationMethodType(), evaluationMethodDescription(), evaluationProcedure(), dateTime(), result() { }
        virtual ~gmd__AbstractDQ_USCOREElement_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1271 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType (-521)
/* complex XML schema type 'gmd:MD_Identifier_Type': */
class SOAP_CMAC gmd__MD_USCOREIdentifier_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:authority' of XML schema type 'gmd:CI_Citation_PropertyType'
        gmd__CI_USCORECitation_USCOREPropertyType *authority;
        /// Required element 'gmd:code' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *code;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__MD_USCOREIdentifier_USCOREType, default initialized and not managed by a soap context
        virtual gmd__MD_USCOREIdentifier_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__MD_USCOREIdentifier_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__MD_USCOREIdentifier_USCOREType() : authority(), code() { }
        virtual ~gmd__MD_USCOREIdentifier_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1275 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType (-523)
/* complex XML schema type 'gmd:CI_Citation_Type': */
class SOAP_CMAC gmd__CI_USCORECitation_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:title' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *title;
        /// Optional element 'gmd:alternateTitle' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> alternateTitle;
        /// Required element 'gmd:date' of XML schema type 'gmd:CI_Date_PropertyType'
        std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> date;
        /// Optional element 'gmd:edition' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *edition;
        /// Optional element 'gmd:editionDate' of XML schema type 'gco:Date_PropertyType'
        gco__Date_USCOREPropertyType *editionDate;
        /// Optional element 'gmd:identifier' of XML schema type 'gmd:MD_Identifier_PropertyType'
        std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> identifier;
        /// Optional element 'gmd:citedResponsibleParty' of XML schema type 'gmd:CI_ResponsibleParty_PropertyType'
        std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> citedResponsibleParty;
        /// Optional element 'gmd:presentationForm' of XML schema type 'gmd:CI_PresentationFormCode_PropertyType'
        std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> presentationForm;
        /// Optional element 'gmd:series' of XML schema type 'gmd:CI_Series_PropertyType'
        gmd__CI_USCORESeries_USCOREPropertyType *series;
        /// Optional element 'gmd:otherCitationDetails' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *otherCitationDetails;
        /// Optional element 'gmd:collectiveTitle' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *collectiveTitle;
        /// Optional element 'gmd:ISBN' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *ISBN;
        /// Optional element 'gmd:ISSN' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *ISSN;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORECitation_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORECitation_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORECitation_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORECitation_USCOREType() : title(), alternateTitle(), date(), edition(), editionDate(), identifier(), citedResponsibleParty(), presentationForm(), series(), otherCitationDetails(), collectiveTitle(), ISBN(), ISSN() { }
        virtual ~gmd__CI_USCORECitation_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORECitation_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1279 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType (-525)
/* complex XML schema type 'gmd:CI_Date_Type': */
class SOAP_CMAC gmd__CI_USCOREDate_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:date' of XML schema type 'gco:Date_PropertyType'
        gco__Date_USCOREPropertyType *date;
        /// Required element 'gmd:dateType' of XML schema type 'gmd:CI_DateTypeCode_PropertyType'
        gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREDate_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREDate_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREDate_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREDate_USCOREType() : date(), dateType() { }
        virtual ~gmd__CI_USCOREDate_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREDate_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1285 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType (-528)
/* complex XML schema type 'gmd:CI_ResponsibleParty_Type': */
class SOAP_CMAC gmd__CI_USCOREResponsibleParty_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:individualName' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *individualName;
        /// Optional element 'gmd:organisationName' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *organisationName;
        /// Optional element 'gmd:positionName' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *positionName;
        /// Optional element 'gmd:contactInfo' of XML schema type 'gmd:CI_Contact_PropertyType'
        gmd__CI_USCOREContact_USCOREPropertyType *contactInfo;
        /// Required element 'gmd:role' of XML schema type 'gmd:CI_RoleCode_PropertyType'
        gmd__CI_USCORERoleCode_USCOREPropertyType *role;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREResponsibleParty_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREResponsibleParty_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREResponsibleParty_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREResponsibleParty_USCOREType() : individualName(), organisationName(), positionName(), contactInfo(), role() { }
        virtual ~gmd__CI_USCOREResponsibleParty_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1289 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType (-530)
/* complex XML schema type 'gmd:CI_Contact_Type': */
class SOAP_CMAC gmd__CI_USCOREContact_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:phone' of XML schema type 'gmd:CI_Telephone_PropertyType'
        gmd__CI_USCORETelephone_USCOREPropertyType *phone;
        /// Optional element 'gmd:address' of XML schema type 'gmd:CI_Address_PropertyType'
        gmd__CI_USCOREAddress_USCOREPropertyType *address;
        /// Optional element 'gmd:onlineResource' of XML schema type 'gmd:CI_OnlineResource_PropertyType'
        gmd__CI_USCOREOnlineResource_USCOREPropertyType *onlineResource;
        /// Optional element 'gmd:hoursOfService' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *hoursOfService;
        /// Optional element 'gmd:contactInstructions' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *contactInstructions;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREContact_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREContact_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREContact_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREContact_USCOREType() : phone(), address(), onlineResource(), hoursOfService(), contactInstructions() { }
        virtual ~gmd__CI_USCOREContact_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREContact_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1293 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType (-532)
/* complex XML schema type 'gmd:CI_Telephone_Type': */
class SOAP_CMAC gmd__CI_USCORETelephone_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:voice' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> voice;
        /// Optional element 'gmd:facsimile' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> facsimile;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORETelephone_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORETelephone_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORETelephone_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORETelephone_USCOREType() : voice(), facsimile() { }
        virtual ~gmd__CI_USCORETelephone_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORETelephone_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1297 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType (-534)
/* complex XML schema type 'gmd:CI_Address_Type': */
class SOAP_CMAC gmd__CI_USCOREAddress_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:deliveryPoint' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> deliveryPoint;
        /// Optional element 'gmd:city' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *city;
        /// Optional element 'gmd:administrativeArea' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *administrativeArea;
        /// Optional element 'gmd:postalCode' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *postalCode;
        /// Optional element 'gmd:country' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *country;
        /// Optional element 'gmd:electronicMailAddress' of XML schema type 'gco:CharacterString_PropertyType'
        std::vector<gco__CharacterString_USCOREPropertyType *> electronicMailAddress;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREAddress_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREAddress_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREAddress_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREAddress_USCOREType() : deliveryPoint(), city(), administrativeArea(), postalCode(), country(), electronicMailAddress() { }
        virtual ~gmd__CI_USCOREAddress_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREAddress_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1301 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType (-536)
/* complex XML schema type 'gmd:CI_OnlineResource_Type': */
class SOAP_CMAC gmd__CI_USCOREOnlineResource_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Required element 'gmd:linkage' of XML schema type 'gmd:URL_PropertyType'
        gmd__URL_USCOREPropertyType *linkage;
        /// Optional element 'gmd:protocol' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *protocol;
        /// Optional element 'gmd:applicationProfile' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *applicationProfile;
        /// Optional element 'gmd:name' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *name;
        /// Optional element 'gmd:description' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *description;
        /// Optional element 'gmd:function' of XML schema type 'gmd:CI_OnLineFunctionCode_PropertyType'
        gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *function;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCOREOnlineResource_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCOREOnlineResource_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCOREOnlineResource_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCOREOnlineResource_USCOREType() : linkage(), protocol(), applicationProfile(), name(), description(), function() { }
        virtual ~gmd__CI_USCOREOnlineResource_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1313 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType (-542)
/* complex XML schema type 'gmd:CI_Series_Type': */
class SOAP_CMAC gmd__CI_USCORESeries_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Optional element 'gmd:name' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *name;
        /// Optional element 'gmd:issueIdentification' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *issueIdentification;
        /// Optional element 'gmd:page' of XML schema type 'gco:CharacterString_PropertyType'
        gco__CharacterString_USCOREPropertyType *page;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__CI_USCORESeries_USCOREType, default initialized and not managed by a soap context
        virtual gmd__CI_USCORESeries_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__CI_USCORESeries_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__CI_USCORESeries_USCOREType() : name(), issueIdentification(), page() { }
        virtual ~gmd__CI_USCORESeries_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__CI_USCORESeries_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1319 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType (-545)
/* complex XML schema type 'gmd:AbstractDQ_Result_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREResult_USCOREType : public gco__AbstractObject_USCOREType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREResult_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREResult_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREResult_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__AbstractDQ_USCOREResult_USCOREType() { }
        virtual ~gmd__AbstractDQ_USCOREResult_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1333 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType (-552)
/* simple XML schema type 'gco:CodeListValue_Type': */
class SOAP_CMAC gco__CodeListValue_USCOREType {
      public:
        /// Simple content of XML schema type 'xsd:string' wrapped by this struct
        std::string __item;
        /// Required attribute 'codeList' of XML schema type 'xsd:anyURI'
        std::string codeList;
        /// Required attribute 'codeListValue' of XML schema type 'xsd:anyURI'
        std::string codeListValue;
        /// Optional attribute 'codeSpace' of XML schema type 'xsd:anyURI'
        std::string *codeSpace;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gco__CodeListValue_USCOREType, default initialized and not managed by a soap context
        virtual gco__CodeListValue_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gco__CodeListValue_USCOREType); }
      public:
        /// Constructor with default initializations
        gco__CodeListValue_USCOREType() : __item(), codeList(), codeListValue(), codeSpace(), soap() { }
        virtual ~gco__CodeListValue_USCOREType() { }
        /// Friend allocator used by soap_new_gco__CodeListValue_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gco__CodeListValue_USCOREType * SOAP_FMAC2 soap_instantiate_gco__CodeListValue_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:271 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray (-21)
/* complex XML schema type 'resqml20:IntegerArrayFromBooleanMaskArray': */
class SOAP_CMAC resqml20__IntegerArrayFromBooleanMaskArray : public resqml20__AbstractIntegerArray {
      public:
        /// Required element 'resqml20:TotalIndexCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TotalIndexCount;
        /// Required element 'resqml20:Mask' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *Mask;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerArrayFromBooleanMaskArray, default initialized and not managed by a soap context
        virtual resqml20__IntegerArrayFromBooleanMaskArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerArrayFromBooleanMaskArray); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerArrayFromBooleanMaskArray() : TotalIndexCount(), Mask() { }
        virtual ~resqml20__IntegerArrayFromBooleanMaskArray() { }
        /// Friend allocator used by soap_new_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerArrayFromBooleanMaskArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerArrayFromBooleanMaskArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:273 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray (-22)
/* complex XML schema type 'resqml20:BooleanArrayFromIndexArray': */
class SOAP_CMAC resqml20__BooleanArrayFromIndexArray : public resqml20__AbstractBooleanArray {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:Indices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *Indices;
        /// Required element 'resqml20:IndexIsTrue' of XML schema type 'xsd:boolean'
        bool IndexIsTrue;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__BooleanArrayFromIndexArray, default initialized and not managed by a soap context
        virtual resqml20__BooleanArrayFromIndexArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__BooleanArrayFromIndexArray); }
      public:
        /// Constructor with default initializations
        resqml20__BooleanArrayFromIndexArray() : Count(), Indices(), IndexIsTrue() { }
        virtual ~resqml20__BooleanArrayFromIndexArray() { }
        /// Friend allocator used by soap_new_resqml20__BooleanArrayFromIndexArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__BooleanArrayFromIndexArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanArrayFromIndexArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:275 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray (-23)
/* complex XML schema type 'resqml20:BooleanConstantArray': */
class SOAP_CMAC resqml20__BooleanConstantArray : public resqml20__AbstractBooleanArray {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:boolean'
        bool Value;
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__BooleanConstantArray, default initialized and not managed by a soap context
        virtual resqml20__BooleanConstantArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__BooleanConstantArray); }
      public:
        /// Constructor with default initializations
        resqml20__BooleanConstantArray() : Value(), Count() { }
        virtual ~resqml20__BooleanConstantArray() { }
        /// Friend allocator used by soap_new_resqml20__BooleanConstantArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__BooleanConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanConstantArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:277 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray (-24)
/* complex XML schema type 'resqml20:IntegerConstantArray': */
class SOAP_CMAC resqml20__IntegerConstantArray : public resqml20__AbstractIntegerArray {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:integer'
        LONG64 Value;
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerConstantArray, default initialized and not managed by a soap context
        virtual resqml20__IntegerConstantArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerConstantArray); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerConstantArray() : Value(), Count() { }
        virtual ~resqml20__IntegerConstantArray() { }
        /// Friend allocator used by soap_new_resqml20__IntegerConstantArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerConstantArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:283 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array (-27)
/* complex XML schema type 'resqml20:IntegerHdf5Array': */
class SOAP_CMAC resqml20__IntegerHdf5Array : public resqml20__AbstractIntegerArray {
      public:
        /// Required element 'resqml20:NullValue' of XML schema type 'xsd:integer'
        LONG64 NullValue;
        /// Required element 'resqml20:Values' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Values;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__IntegerHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerHdf5Array() : NullValue(), Values() { }
        virtual ~resqml20__IntegerHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__IntegerHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__IntegerHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:291 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray (-31)
/* complex XML schema type 'resqml20:DoubleLatticeArray': */
class SOAP_CMAC resqml20__DoubleLatticeArray : public resqml20__AbstractDoubleArray {
      public:
        /// Required element 'resqml20:StartValue' of XML schema type 'xsd:double'
        double StartValue;
        /// Required element 'resqml20:Offset' of XML schema type 'resqml20:DoubleConstantArray'
        std::vector<resqml20__DoubleConstantArray *> Offset;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__DoubleLatticeArray, default initialized and not managed by a soap context
        virtual resqml20__DoubleLatticeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__DoubleLatticeArray); }
      public:
        /// Constructor with default initializations
        resqml20__DoubleLatticeArray() : StartValue(), Offset() { }
        virtual ~resqml20__DoubleLatticeArray() { }
        /// Friend allocator used by soap_new_resqml20__DoubleLatticeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__DoubleLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__DoubleLatticeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:293 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray (-32)
/* complex XML schema type 'resqml20:DoubleConstantArray': */
class SOAP_CMAC resqml20__DoubleConstantArray : public resqml20__AbstractDoubleArray {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:double'
        double Value;
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__DoubleConstantArray, default initialized and not managed by a soap context
        virtual resqml20__DoubleConstantArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__DoubleConstantArray); }
      public:
        /// Constructor with default initializations
        resqml20__DoubleConstantArray() : Value(), Count() { }
        virtual ~resqml20__DoubleConstantArray() { }
        /// Friend allocator used by soap_new_resqml20__DoubleConstantArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__DoubleConstantArray * SOAP_FMAC2 soap_instantiate_resqml20__DoubleConstantArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:295 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array (-33)
/* complex XML schema type 'resqml20:DoubleHdf5Array': */
class SOAP_CMAC resqml20__DoubleHdf5Array : public resqml20__AbstractDoubleArray {
      public:
        /// Required element 'resqml20:Values' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Values;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__DoubleHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__DoubleHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__DoubleHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__DoubleHdf5Array() : Values() { }
        virtual ~resqml20__DoubleHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__DoubleHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__DoubleHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__DoubleHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:307 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray (-39)
/* complex XML schema type 'resqml20:IntegerLatticeArray': */
class SOAP_CMAC resqml20__IntegerLatticeArray : public resqml20__AbstractIntegerArray {
      public:
        /// Required element 'resqml20:StartValue' of XML schema type 'xsd:integer'
        LONG64 StartValue;
        /// Required element 'resqml20:Offset' of XML schema type 'resqml20:IntegerConstantArray'
        std::vector<resqml20__IntegerConstantArray *> Offset;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerLatticeArray, default initialized and not managed by a soap context
        virtual resqml20__IntegerLatticeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerLatticeArray); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerLatticeArray() : StartValue(), Offset() { }
        virtual ~resqml20__IntegerLatticeArray() { }
        /// Friend allocator used by soap_new_resqml20__IntegerLatticeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerLatticeArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerLatticeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:315 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array (-43)
/* complex XML schema type 'resqml20:BooleanHdf5Array': */
class SOAP_CMAC resqml20__BooleanHdf5Array : public resqml20__AbstractBooleanArray {
      public:
        /// Required element 'resqml20:Values' of XML schema type 'eml20:Hdf5Dataset'
        eml20__Hdf5Dataset *Values;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__BooleanHdf5Array, default initialized and not managed by a soap context
        virtual resqml20__BooleanHdf5Array *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__BooleanHdf5Array); }
      public:
        /// Constructor with default initializations
        resqml20__BooleanHdf5Array() : Values() { }
        virtual ~resqml20__BooleanHdf5Array() { }
        /// Friend allocator used by soap_new_resqml20__BooleanHdf5Array(struct soap*, int)
        friend SOAP_FMAC1 resqml20__BooleanHdf5Array * SOAP_FMAC2 soap_instantiate_resqml20__BooleanHdf5Array(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:325 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray (-48)
/* complex XML schema type 'resqml20:IntegerRangeArray': */
class SOAP_CMAC resqml20__IntegerRangeArray : public resqml20__AbstractIntegerArray {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:Value' of XML schema type 'xsd:integer'
        LONG64 Value;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IntegerRangeArray, default initialized and not managed by a soap context
        virtual resqml20__IntegerRangeArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IntegerRangeArray); }
      public:
        /// Constructor with default initializations
        resqml20__IntegerRangeArray() : Count(), Value() { }
        virtual ~resqml20__IntegerRangeArray() { }
        /// Friend allocator used by soap_new_resqml20__IntegerRangeArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IntegerRangeArray * SOAP_FMAC2 soap_instantiate_resqml20__IntegerRangeArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:345 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray (-58)
/* complex XML schema type 'resqml20:BooleanArrayFromDiscretePropertyArray': */
class SOAP_CMAC resqml20__BooleanArrayFromDiscretePropertyArray : public resqml20__AbstractBooleanArray {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'xsd:integer'
        LONG64 Value;
        /// Required element 'resqml20:Property' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Property;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__BooleanArrayFromDiscretePropertyArray, default initialized and not managed by a soap context
        virtual resqml20__BooleanArrayFromDiscretePropertyArray *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__BooleanArrayFromDiscretePropertyArray); }
      public:
        /// Constructor with default initializations
        resqml20__BooleanArrayFromDiscretePropertyArray() : Value(), Property() { }
        virtual ~resqml20__BooleanArrayFromDiscretePropertyArray() { }
        /// Friend allocator used by soap_new_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, int)
        friend SOAP_FMAC1 resqml20__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC2 soap_instantiate_resqml20__BooleanArrayFromDiscretePropertyArray(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:351 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry (-61)
/* complex XML schema type 'resqml20:ParametricLineGeometry': */
class SOAP_CMAC resqml20__ParametricLineGeometry : public resqml20__AbstractParametricLineGeometry {
      public:
        /// Optional element 'resqml20:ControlPointParameters' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *ControlPointParameters;
        /// Required element 'resqml20:ControlPoints' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *ControlPoints;
        /// Required element 'resqml20:KnotCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 KnotCount;
        /// Required element 'resqml20:LineKindIndex' of XML schema type 'xsd:integer'
        LONG64 LineKindIndex;
        /// Optional element 'resqml20:TangentVectors' of XML schema type 'resqml20:AbstractPoint3dArray'
        resqml20__AbstractPoint3dArray *TangentVectors;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParametricLineGeometry, default initialized and not managed by a soap context
        virtual resqml20__ParametricLineGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParametricLineGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__ParametricLineGeometry() : ControlPointParameters(), ControlPoints(), KnotCount(), LineKindIndex(), TangentVectors() { }
        virtual ~resqml20__ParametricLineGeometry() { }
        /// Friend allocator used by soap_new_resqml20__ParametricLineGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:359 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry (-65)
/* complex XML schema type 'resqml20:HorizontalPlaneGeometry': */
class SOAP_CMAC resqml20__HorizontalPlaneGeometry : public resqml20__AbstractPlaneGeometry {
      public:
        /// Required element 'resqml20:Coordinate' of XML schema type 'xsd:double'
        double Coordinate;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__HorizontalPlaneGeometry, default initialized and not managed by a soap context
        virtual resqml20__HorizontalPlaneGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__HorizontalPlaneGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__HorizontalPlaneGeometry() : Coordinate() { }
        virtual ~resqml20__HorizontalPlaneGeometry() { }
        /// Friend allocator used by soap_new_resqml20__HorizontalPlaneGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__HorizontalPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__HorizontalPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:371 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry (-71)
/* complex XML schema type 'resqml20:ParametricLineFromRepresentationGeometry': */
class SOAP_CMAC resqml20__ParametricLineFromRepresentationGeometry : public resqml20__AbstractParametricLineGeometry {
      public:
        /// Required element 'resqml20:LineIndiexOnSupportingRepresentation' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 LineIndiexOnSupportingRepresentation;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ParametricLineFromRepresentationGeometry, default initialized and not managed by a soap context
        virtual resqml20__ParametricLineFromRepresentationGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ParametricLineFromRepresentationGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__ParametricLineFromRepresentationGeometry() : LineIndiexOnSupportingRepresentation(), SupportingRepresentation() { }
        virtual ~resqml20__ParametricLineFromRepresentationGeometry() { }
        /// Friend allocator used by soap_new_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ParametricLineFromRepresentationGeometry * SOAP_FMAC2 soap_instantiate_resqml20__ParametricLineFromRepresentationGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:381 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry (-76)
/* complex XML schema type 'resqml20:TiltedPlaneGeometry': */
class SOAP_CMAC resqml20__TiltedPlaneGeometry : public resqml20__AbstractPlaneGeometry {
      public:
        /// Required element 'resqml20:Plane' of XML schema type 'resqml20:ThreePoint3d'
        std::vector<resqml20__ThreePoint3d *> Plane;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TiltedPlaneGeometry, default initialized and not managed by a soap context
        virtual resqml20__TiltedPlaneGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TiltedPlaneGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__TiltedPlaneGeometry() : Plane() { }
        virtual ~resqml20__TiltedPlaneGeometry() { }
        /// Friend allocator used by soap_new_resqml20__TiltedPlaneGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TiltedPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml20__TiltedPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:401 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch (-86)
/* complex XML schema type 'resqml20:SubRepresentationPatch': */
class SOAP_CMAC resqml20__SubRepresentationPatch : public resqml20__Patch1d {
      public:
        /// Sequence of 1 to 2 elements 'resqml20:ElementIndices' of XML schema type 'resqml20:ElementIndices'
        std::vector<resqml20__ElementIndices *> ElementIndices;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SubRepresentationPatch, default initialized and not managed by a soap context
        virtual resqml20__SubRepresentationPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SubRepresentationPatch); }
      public:
        /// Constructor with default initializations
        resqml20__SubRepresentationPatch() : ElementIndices() { }
        virtual ~resqml20__SubRepresentationPatch() { }
        /// Friend allocator used by soap_new_resqml20__SubRepresentationPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SubRepresentationPatch * SOAP_FMAC2 soap_instantiate_resqml20__SubRepresentationPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:429 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch (-100)
/* complex XML schema type 'resqml20:ColumnSubnodePatch': */
class SOAP_CMAC resqml20__ColumnSubnodePatch : public resqml20__SubnodePatch {
      public:
        /// Required element 'resqml20:SubnodeCountPerObject' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *SubnodeCountPerObject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ColumnSubnodePatch, default initialized and not managed by a soap context
        virtual resqml20__ColumnSubnodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ColumnSubnodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__ColumnSubnodePatch() : SubnodeCountPerObject() { }
        virtual ~resqml20__ColumnSubnodePatch() { }
        /// Friend allocator used by soap_new_resqml20__ColumnSubnodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ColumnSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__ColumnSubnodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:457 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch (-114)
/* complex XML schema type 'resqml20:UniformSubnodePatch': */
class SOAP_CMAC resqml20__UniformSubnodePatch : public resqml20__SubnodePatch {
      public:
        /// Required element 'resqml20:SubnodeCountPerObject' of XML schema type 'xsd:positiveInteger'
        ULONG64 SubnodeCountPerObject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UniformSubnodePatch, default initialized and not managed by a soap context
        virtual resqml20__UniformSubnodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UniformSubnodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__UniformSubnodePatch() : SubnodeCountPerObject() { }
        virtual ~resqml20__UniformSubnodePatch() { }
        /// Friend allocator used by soap_new_resqml20__UniformSubnodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UniformSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__UniformSubnodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:511 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry (-141)
/* complex XML schema type 'resqml20:AbstractGridGeometry': */
class SOAP_CMAC resqml20__AbstractGridGeometry : public resqml20__PointGeometry {
      public:
        /// Optional element 'resqml20:AdditionalGridPoints' of XML schema type 'resqml20:AdditionalGridPoints'
        std::vector<resqml20__AdditionalGridPoints *> AdditionalGridPoints;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractGridGeometry, default initialized and not managed by a soap context
        virtual resqml20__AbstractGridGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractGridGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractGridGeometry() : AdditionalGridPoints() { }
        virtual ~resqml20__AbstractGridGeometry() { }
        /// Friend allocator used by soap_new_resqml20__AbstractGridGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGridGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:519 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch (-145)
/* complex XML schema type 'resqml20:VariableSubnodePatch': */
class SOAP_CMAC resqml20__VariableSubnodePatch : public resqml20__SubnodePatch {
      public:
        /// Required element 'resqml20:ObjectIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *ObjectIndices;
        /// Required element 'resqml20:SubnodeCountPerSelectedObject' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *SubnodeCountPerSelectedObject;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__VariableSubnodePatch, default initialized and not managed by a soap context
        virtual resqml20__VariableSubnodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__VariableSubnodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__VariableSubnodePatch() : ObjectIndices(), SubnodeCountPerSelectedObject() { }
        virtual ~resqml20__VariableSubnodePatch() { }
        /// Friend allocator used by soap_new_resqml20__VariableSubnodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__VariableSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml20__VariableSubnodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:633 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject (-202)
/* complex XML schema type 'resqml20:AbstractResqmlDataObject': */
class SOAP_CMAC resqml20__AbstractResqmlDataObject : public eml20__AbstractCitedDataObject {
      public:
        /// Optional element 'resqml20:ExtraMetadata' of XML schema type 'resqml20:NameValuePair'
        std::vector<resqml20__NameValuePair *> ExtraMetadata;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractResqmlDataObject, default initialized and not managed by a soap context
        virtual resqml20__AbstractResqmlDataObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractResqmlDataObject); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractResqmlDataObject() : ExtraMetadata() { }
        virtual ~resqml20__AbstractResqmlDataObject() { }
        /// Friend allocator used by soap_new_resqml20__AbstractResqmlDataObject(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractResqmlDataObject * SOAP_FMAC2 soap_instantiate_resqml20__AbstractResqmlDataObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:659 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch (-215)
/* complex XML schema type 'resqml20:ContactPatch': */
class SOAP_CMAC resqml20__ContactPatch : public resqml20__Patch1d {
      public:
        /// Required element 'resqml20:RepresentationIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 RepresentationIndex;
        /// Required element 'resqml20:SupportingRepresentationNodes' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *SupportingRepresentationNodes;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__ContactPatch, default initialized and not managed by a soap context
        virtual resqml20__ContactPatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__ContactPatch); }
      public:
        /// Constructor with default initializations
        resqml20__ContactPatch() : RepresentationIndex(), SupportingRepresentationNodes() { }
        virtual ~resqml20__ContactPatch() { }
        /// Friend allocator used by soap_new_resqml20__ContactPatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__ContactPatch * SOAP_FMAC2 soap_instantiate_resqml20__ContactPatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:671 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch (-221)
/* complex XML schema type 'resqml20:EdgePatch': */
class SOAP_CMAC resqml20__EdgePatch : public resqml20__Patch1d {
      public:
        /// Optional element 'resqml20:SplitEdges' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *SplitEdges;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__EdgePatch, default initialized and not managed by a soap context
        virtual resqml20__EdgePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__EdgePatch); }
      public:
        /// Constructor with default initializations
        resqml20__EdgePatch() : SplitEdges() { }
        virtual ~resqml20__EdgePatch() { }
        /// Friend allocator used by soap_new_resqml20__EdgePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__EdgePatch * SOAP_FMAC2 soap_instantiate_resqml20__EdgePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:679 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch (-225)
/* complex XML schema type 'resqml20:NodePatch': */
class SOAP_CMAC resqml20__NodePatch : public resqml20__Patch1d {
      public:
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:PointGeometry'
        resqml20__PointGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__NodePatch, default initialized and not managed by a soap context
        virtual resqml20__NodePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__NodePatch); }
      public:
        /// Constructor with default initializations
        resqml20__NodePatch() : Geometry() { }
        virtual ~resqml20__NodePatch() { }
        /// Friend allocator used by soap_new_resqml20__NodePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__NodePatch * SOAP_FMAC2 soap_instantiate_resqml20__NodePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:683 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch (-227)
/* complex XML schema type 'resqml20:TrianglePatch': */
class SOAP_CMAC resqml20__TrianglePatch : public resqml20__Patch1d {
      public:
        /// Required element 'resqml20:NodeCount' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 NodeCount;
        /// Required element 'resqml20:Triangles' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *Triangles;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:PointGeometry'
        resqml20__PointGeometry *Geometry;
        /// Optional element 'resqml20:SplitEdgePatch' of XML schema type 'resqml20:EdgePatch'
        std::vector<resqml20__EdgePatch *> SplitEdgePatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__TrianglePatch, default initialized and not managed by a soap context
        virtual resqml20__TrianglePatch *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__TrianglePatch); }
      public:
        /// Constructor with default initializations
        resqml20__TrianglePatch() : NodeCount(), Triangles(), Geometry(), SplitEdgePatch() { }
        virtual ~resqml20__TrianglePatch() { }
        /// Friend allocator used by soap_new_resqml20__TrianglePatch(struct soap*, int)
        friend SOAP_FMAC1 resqml20__TrianglePatch * SOAP_FMAC2 soap_instantiate_resqml20__TrianglePatch(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:783 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs (-277)
/* complex XML schema type 'eml20:ProjectedCrs': */
class SOAP_CMAC eml20__ProjectedCrs : public eml20__AbstractCitedDataObject {
      public:
        /// Required element 'eml20:AxisOrder' of XML schema type 'eml20:AxisOrder2d'
        enum eml20__AxisOrder2d AxisOrder;
        /// Required element 'eml20:AbstractProjectedCrs' of XML schema type 'eml20:AbstractProjectedCrs'
        eml20__AbstractProjectedCrs *AbstractProjectedCrs;
        /// Optional attribute 'uom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom *uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ProjectedCrs, default initialized and not managed by a soap context
        virtual eml20__ProjectedCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ProjectedCrs); }
      public:
        /// Constructor with default initializations
        eml20__ProjectedCrs() : AxisOrder(), AbstractProjectedCrs(), uom() { }
        virtual ~eml20__ProjectedCrs() { }
        /// Friend allocator used by soap_new_eml20__ProjectedCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__ProjectedCrs * SOAP_FMAC2 soap_instantiate_eml20__ProjectedCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:785 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs (-278)
/* complex XML schema type 'eml20:VerticalCrs': */
class SOAP_CMAC eml20__VerticalCrs : public eml20__AbstractCitedDataObject {
      public:
        /// Required element 'eml20:Direction' of XML schema type 'eml20:VerticalDirection'
        enum eml20__VerticalDirection Direction;
        /// Required element 'eml20:AbstractVerticalCrs' of XML schema type 'eml20:AbstractVerticalCrs'
        eml20__AbstractVerticalCrs *AbstractVerticalCrs;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VerticalCrs, default initialized and not managed by a soap context
        virtual eml20__VerticalCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VerticalCrs); }
      public:
        /// Constructor with default initializations
        eml20__VerticalCrs() : Direction(), AbstractVerticalCrs(), uom() { }
        virtual ~eml20__VerticalCrs() { }
        /// Friend allocator used by soap_new_eml20__VerticalCrs(struct soap*, int)
        friend SOAP_FMAC1 eml20__VerticalCrs * SOAP_FMAC2 soap_instantiate_eml20__VerticalCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:799 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference (-285)
/* complex XML schema type 'eml20:obj_EpcExternalPartReference': */
class SOAP_CMAC eml20__obj_USCOREEpcExternalPartReference : public eml20__AbstractCitedDataObject {
      public:
        /// Required element 'eml20:MimeType' of XML schema type 'xsd:string'
        std::string MimeType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__obj_USCOREEpcExternalPartReference, default initialized and not managed by a soap context
        virtual eml20__obj_USCOREEpcExternalPartReference *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__obj_USCOREEpcExternalPartReference); }
      public:
        /// Constructor with default initializations
        eml20__obj_USCOREEpcExternalPartReference() : MimeType() { }
        virtual ~eml20__obj_USCOREEpcExternalPartReference() { }
        /// Friend allocator used by soap_new_eml20__obj_USCOREEpcExternalPartReference(struct soap*, int)
        friend SOAP_FMAC1 eml20__obj_USCOREEpcExternalPartReference * SOAP_FMAC2 soap_instantiate_eml20__obj_USCOREEpcExternalPartReference(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:803 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure (-287)
/* simple XML schema type 'eml20:PressureSquaredMeasure': */
class SOAP_CMAC eml20__PressureSquaredMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressureSquaredUom'
        enum eml20__PressureSquaredUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressureSquaredMeasure, default initialized and not managed by a soap context
        virtual eml20__PressureSquaredMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressureSquaredMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressureSquaredMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressureSquaredMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressureSquaredMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressureSquaredMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureSquaredMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:805 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure (-288)
/* simple XML schema type 'eml20:ForceLengthPerLengthMeasure': */
class SOAP_CMAC eml20__ForceLengthPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForceLengthPerLengthUom'
        enum eml20__ForceLengthPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForceLengthPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__ForceLengthPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForceLengthPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForceLengthPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForceLengthPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForceLengthPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForceLengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceLengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:807 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure (-289)
/* simple XML schema type 'eml20:AmountOfSubstancePerTimePerAreaMeasure': */
class SOAP_CMAC eml20__AmountOfSubstancePerTimePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstancePerTimePerAreaUom'
        enum eml20__AmountOfSubstancePerTimePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstancePerTimePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstancePerTimePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstancePerTimePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstancePerTimePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstancePerTimePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:809 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure (-290)
/* simple XML schema type 'eml20:VolumePerTimePerAreaMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerAreaUom'
        enum eml20__VolumePerTimePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:811 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure (-291)
/* simple XML schema type 'eml20:LengthPerLengthMeasure': */
class SOAP_CMAC eml20__LengthPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerLengthUom'
        enum eml20__LengthPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:813 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure (-292)
/* simple XML schema type 'eml20:TemperatureIntervalMeasure': */
class SOAP_CMAC eml20__TemperatureIntervalMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TemperatureIntervalUom'
        enum eml20__TemperatureIntervalUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TemperatureIntervalMeasure, default initialized and not managed by a soap context
        virtual eml20__TemperatureIntervalMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TemperatureIntervalMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TemperatureIntervalMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TemperatureIntervalMeasure() { }
        /// Friend allocator used by soap_new_eml20__TemperatureIntervalMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TemperatureIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:815 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure (-293)
/* simple XML schema type 'eml20:VolumePerTimePerLengthMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerLengthUom'
        enum eml20__VolumePerTimePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:817 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure (-294)
/* simple XML schema type 'eml20:VolumePerTimePerTimeMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerTimeUom'
        enum eml20__VolumePerTimePerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:819 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure (-295)
/* simple XML schema type 'eml20:PermeabilityLengthMeasure': */
class SOAP_CMAC eml20__PermeabilityLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PermeabilityLengthUom'
        enum eml20__PermeabilityLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PermeabilityLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__PermeabilityLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PermeabilityLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PermeabilityLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PermeabilityLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__PermeabilityLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PermeabilityLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermeabilityLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:821 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure (-296)
/* simple XML schema type 'eml20:ThermalInsulanceMeasure': */
class SOAP_CMAC eml20__ThermalInsulanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermalInsulanceUom'
        enum eml20__ThermalInsulanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermalInsulanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermalInsulanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermalInsulanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermalInsulanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermalInsulanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermalInsulanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermalInsulanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalInsulanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:823 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure (-297)
/* simple XML schema type 'eml20:ForceAreaMeasure': */
class SOAP_CMAC eml20__ForceAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForceAreaUom'
        enum eml20__ForceAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForceAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__ForceAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForceAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForceAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForceAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForceAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForceAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:825 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure (-298)
/* simple XML schema type 'eml20:EnergyMeasure': */
class SOAP_CMAC eml20__EnergyMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyUom'
        enum eml20__EnergyUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:827 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure (-299)
/* simple XML schema type 'eml20:IlluminanceMeasure': */
class SOAP_CMAC eml20__IlluminanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:IlluminanceUom'
        enum eml20__IlluminanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__IlluminanceMeasure, default initialized and not managed by a soap context
        virtual eml20__IlluminanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__IlluminanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__IlluminanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__IlluminanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__IlluminanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__IlluminanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__IlluminanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:829 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure (-300)
/* simple XML schema type 'eml20:ForceMeasure': */
class SOAP_CMAC eml20__ForceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForceUom'
        enum eml20__ForceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForceMeasure, default initialized and not managed by a soap context
        virtual eml20__ForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:831 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure (-301)
/* simple XML schema type 'eml20:RadiantIntensityMeasure': */
class SOAP_CMAC eml20__RadiantIntensityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:RadiantIntensityUom'
        enum eml20__RadiantIntensityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__RadiantIntensityMeasure, default initialized and not managed by a soap context
        virtual eml20__RadiantIntensityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__RadiantIntensityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__RadiantIntensityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__RadiantIntensityMeasure() { }
        /// Friend allocator used by soap_new_eml20__RadiantIntensityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__RadiantIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__RadiantIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:833 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure (-302)
/* simple XML schema type 'eml20:PowerPerPowerMeasure': */
class SOAP_CMAC eml20__PowerPerPowerMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PowerPerPowerUom'
        enum eml20__PowerPerPowerUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PowerPerPowerMeasure, default initialized and not managed by a soap context
        virtual eml20__PowerPerPowerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PowerPerPowerMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PowerPerPowerMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PowerPerPowerMeasure() { }
        /// Friend allocator used by soap_new_eml20__PowerPerPowerMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PowerPerPowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerPowerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:835 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure (-303)
/* simple XML schema type 'eml20:DimensionlessMeasure': */
class SOAP_CMAC eml20__DimensionlessMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DimensionlessUom'
        enum eml20__DimensionlessUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DimensionlessMeasure, default initialized and not managed by a soap context
        virtual eml20__DimensionlessMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DimensionlessMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DimensionlessMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DimensionlessMeasure() { }
        /// Friend allocator used by soap_new_eml20__DimensionlessMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DimensionlessMeasure * SOAP_FMAC2 soap_instantiate_eml20__DimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:837 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure (-304)
/* simple XML schema type 'eml20:HeatTransferCoefficientMeasure': */
class SOAP_CMAC eml20__HeatTransferCoefficientMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:HeatTransferCoefficientUom'
        enum eml20__HeatTransferCoefficientUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__HeatTransferCoefficientMeasure, default initialized and not managed by a soap context
        virtual eml20__HeatTransferCoefficientMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__HeatTransferCoefficientMeasure); }
      public:
        /// Constructor with default initializations
        eml20__HeatTransferCoefficientMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__HeatTransferCoefficientMeasure() { }
        /// Friend allocator used by soap_new_eml20__HeatTransferCoefficientMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__HeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:839 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure (-305)
/* simple XML schema type 'eml20:APINeutronMeasure': */
class SOAP_CMAC eml20__APINeutronMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:APINeutronUom'
        enum eml20__APINeutronUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__APINeutronMeasure, default initialized and not managed by a soap context
        virtual eml20__APINeutronMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__APINeutronMeasure); }
      public:
        /// Constructor with default initializations
        eml20__APINeutronMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__APINeutronMeasure() { }
        /// Friend allocator used by soap_new_eml20__APINeutronMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__APINeutronMeasure * SOAP_FMAC2 soap_instantiate_eml20__APINeutronMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:841 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure (-306)
/* simple XML schema type 'eml20:MagneticVectorPotentialMeasure': */
class SOAP_CMAC eml20__MagneticVectorPotentialMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticVectorPotentialUom'
        enum eml20__MagneticVectorPotentialUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticVectorPotentialMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticVectorPotentialMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticVectorPotentialMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticVectorPotentialMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticVectorPotentialMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticVectorPotentialMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticVectorPotentialMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticVectorPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:843 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure (-307)
/* simple XML schema type 'eml20:LinearAccelerationMeasure': */
class SOAP_CMAC eml20__LinearAccelerationMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LinearAccelerationUom'
        enum eml20__LinearAccelerationUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LinearAccelerationMeasure, default initialized and not managed by a soap context
        virtual eml20__LinearAccelerationMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LinearAccelerationMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LinearAccelerationMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LinearAccelerationMeasure() { }
        /// Friend allocator used by soap_new_eml20__LinearAccelerationMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LinearAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml20__LinearAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:845 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure (-308)
/* simple XML schema type 'eml20:VolumePerTimeMeasure': */
class SOAP_CMAC eml20__VolumePerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimeUom'
        enum eml20__VolumePerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:847 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure (-309)
/* simple XML schema type 'eml20:MagneticFluxMeasure': */
class SOAP_CMAC eml20__MagneticFluxMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticFluxUom'
        enum eml20__MagneticFluxUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticFluxMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticFluxMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticFluxMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticFluxMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticFluxMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticFluxMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticFluxMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:849 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure (-310)
/* simple XML schema type 'eml20:VolumetricThermalExpansionMeasure': */
class SOAP_CMAC eml20__VolumetricThermalExpansionMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumetricThermalExpansionUom'
        enum eml20__VolumetricThermalExpansionUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumetricThermalExpansionMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumetricThermalExpansionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumetricThermalExpansionMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumetricThermalExpansionMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumetricThermalExpansionMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumetricThermalExpansionMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumetricThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumetricThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:851 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure (-311)
/* simple XML schema type 'eml20:HeatFlowRateMeasure': */
class SOAP_CMAC eml20__HeatFlowRateMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:HeatFlowRateUom'
        enum eml20__HeatFlowRateUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__HeatFlowRateMeasure, default initialized and not managed by a soap context
        virtual eml20__HeatFlowRateMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__HeatFlowRateMeasure); }
      public:
        /// Constructor with default initializations
        eml20__HeatFlowRateMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__HeatFlowRateMeasure() { }
        /// Friend allocator used by soap_new_eml20__HeatFlowRateMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__HeatFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:853 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure (-312)
/* simple XML schema type 'eml20:MassPerTimeMeasure': */
class SOAP_CMAC eml20__MassPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerTimeUom'
        enum eml20__MassPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:855 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure (-313)
/* simple XML schema type 'eml20:VolumePerMassMeasure': */
class SOAP_CMAC eml20__VolumePerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerMassUom'
        enum eml20__VolumePerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:857 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure (-314)
/* simple XML schema type 'eml20:MolarVolumeMeasure': */
class SOAP_CMAC eml20__MolarVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MolarVolumeUom'
        enum eml20__MolarVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MolarVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__MolarVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MolarVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MolarVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MolarVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__MolarVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MolarVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:859 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure (-315)
/* simple XML schema type 'eml20:ElectricConductanceMeasure': */
class SOAP_CMAC eml20__ElectricConductanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricConductanceUom'
        enum eml20__ElectricConductanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricConductanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricConductanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricConductanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricConductanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricConductanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricConductanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:861 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure (-316)
/* simple XML schema type 'eml20:ReciprocalPressureMeasure': */
class SOAP_CMAC eml20__ReciprocalPressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalPressureUom'
        enum eml20__ReciprocalPressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalPressureMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalPressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalPressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalPressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalPressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalPressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalPressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:863 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure (-317)
/* simple XML schema type 'eml20:AreaPerAmountOfSubstanceMeasure': */
class SOAP_CMAC eml20__AreaPerAmountOfSubstanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaPerAmountOfSubstanceUom'
        enum eml20__AreaPerAmountOfSubstanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaPerAmountOfSubstanceMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaPerAmountOfSubstanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaPerAmountOfSubstanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaPerAmountOfSubstanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaPerAmountOfSubstanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:865 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure (-318)
/* simple XML schema type 'eml20:LengthMeasure': */
class SOAP_CMAC eml20__LengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:867 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure (-319)
/* simple XML schema type 'eml20:MassPerVolumeMeasure': */
class SOAP_CMAC eml20__MassPerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerVolumeUom'
        enum eml20__MassPerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:869 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure (-320)
/* simple XML schema type 'eml20:TemperatureIntervalPerLengthMeasure': */
class SOAP_CMAC eml20__TemperatureIntervalPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TemperatureIntervalPerLengthUom'
        enum eml20__TemperatureIntervalPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TemperatureIntervalPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__TemperatureIntervalPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TemperatureIntervalPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TemperatureIntervalPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TemperatureIntervalPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TemperatureIntervalPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:871 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure (-321)
/* simple XML schema type 'eml20:AmountOfSubstancePerAreaMeasure': */
class SOAP_CMAC eml20__AmountOfSubstancePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstancePerAreaUom'
        enum eml20__AmountOfSubstancePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstancePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstancePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstancePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstancePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstancePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstancePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:873 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure (-322)
/* simple XML schema type 'eml20:AmountOfSubstanceMeasure': */
class SOAP_CMAC eml20__AmountOfSubstanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstanceUom'
        enum eml20__AmountOfSubstanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstanceMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:875 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure (-323)
/* simple XML schema type 'eml20:TimePerLengthMeasure': */
class SOAP_CMAC eml20__TimePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TimePerLengthUom'
        enum eml20__TimePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TimePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__TimePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TimePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TimePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TimePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__TimePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:877 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure (-324)
/* simple XML schema type 'eml20:ReciprocalMassTimeMeasure': */
class SOAP_CMAC eml20__ReciprocalMassTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalMassTimeUom'
        enum eml20__ReciprocalMassTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalMassTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalMassTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalMassTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalMassTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalMassTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalMassTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalMassTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalMassTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:879 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure (-325)
/* simple XML schema type 'eml20:ReciprocalVolumeMeasure': */
class SOAP_CMAC eml20__ReciprocalVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalVolumeUom'
        enum eml20__ReciprocalVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:881 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure (-326)
/* simple XML schema type 'eml20:ForcePerForceMeasure': */
class SOAP_CMAC eml20__ForcePerForceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForcePerForceUom'
        enum eml20__ForcePerForceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForcePerForceMeasure, default initialized and not managed by a soap context
        virtual eml20__ForcePerForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForcePerForceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForcePerForceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForcePerForceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForcePerForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForcePerForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:883 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure (-327)
/* simple XML schema type 'eml20:LinearThermalExpansionMeasure': */
class SOAP_CMAC eml20__LinearThermalExpansionMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LinearThermalExpansionUom'
        enum eml20__LinearThermalExpansionUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LinearThermalExpansionMeasure, default initialized and not managed by a soap context
        virtual eml20__LinearThermalExpansionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LinearThermalExpansionMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LinearThermalExpansionMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LinearThermalExpansionMeasure() { }
        /// Friend allocator used by soap_new_eml20__LinearThermalExpansionMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LinearThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml20__LinearThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:885 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure (-328)
/* simple XML schema type 'eml20:EnergyPerLengthMeasure': */
class SOAP_CMAC eml20__EnergyPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyPerLengthUom'
        enum eml20__EnergyPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:887 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure (-329)
/* simple XML schema type 'eml20:TemperatureIntervalPerTimeMeasure': */
class SOAP_CMAC eml20__TemperatureIntervalPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TemperatureIntervalPerTimeUom'
        enum eml20__TemperatureIntervalPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TemperatureIntervalPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__TemperatureIntervalPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TemperatureIntervalPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TemperatureIntervalPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TemperatureIntervalPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TemperatureIntervalPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:889 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure (-330)
/* simple XML schema type 'eml20:ThermalConductanceMeasure': */
class SOAP_CMAC eml20__ThermalConductanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermalConductanceUom'
        enum eml20__ThermalConductanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermalConductanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermalConductanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermalConductanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermalConductanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermalConductanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermalConductanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermalConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:891 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure (-331)
/* simple XML schema type 'eml20:SolidAngleMeasure': */
class SOAP_CMAC eml20__SolidAngleMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:SolidAngleUom'
        enum eml20__SolidAngleUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__SolidAngleMeasure, default initialized and not managed by a soap context
        virtual eml20__SolidAngleMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__SolidAngleMeasure); }
      public:
        /// Constructor with default initializations
        eml20__SolidAngleMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__SolidAngleMeasure() { }
        /// Friend allocator used by soap_new_eml20__SolidAngleMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__SolidAngleMeasure * SOAP_FMAC2 soap_instantiate_eml20__SolidAngleMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:893 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure (-332)
/* simple XML schema type 'eml20:EnergyLengthPerTimeAreaTemperatureMeasure': */
class SOAP_CMAC eml20__EnergyLengthPerTimeAreaTemperatureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyLengthPerTimeAreaTemperatureUom'
        enum eml20__EnergyLengthPerTimeAreaTemperatureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyLengthPerTimeAreaTemperatureMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyLengthPerTimeAreaTemperatureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyLengthPerTimeAreaTemperatureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyLengthPerTimeAreaTemperatureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyLengthPerTimeAreaTemperatureMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:895 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure (-333)
/* simple XML schema type 'eml20:PowerMeasure': */
class SOAP_CMAC eml20__PowerMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PowerUom'
        enum eml20__PowerUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PowerMeasure, default initialized and not managed by a soap context
        virtual eml20__PowerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PowerMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PowerMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PowerMeasure() { }
        /// Friend allocator used by soap_new_eml20__PowerMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:897 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure (-334)
/* simple XML schema type 'eml20:VolumePerRotationMeasure': */
class SOAP_CMAC eml20__VolumePerRotationMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerRotationUom'
        enum eml20__VolumePerRotationUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerRotationMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerRotationMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerRotationMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerRotationMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerRotationMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerRotationMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerRotationMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerRotationMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:899 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure (-335)
/* simple XML schema type 'eml20:ElectricChargePerAreaMeasure': */
class SOAP_CMAC eml20__ElectricChargePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricChargePerAreaUom'
        enum eml20__ElectricChargePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricChargePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricChargePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricChargePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricChargePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricChargePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricChargePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricChargePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:901 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure (-336)
/* simple XML schema type 'eml20:LightExposureMeasure': */
class SOAP_CMAC eml20__LightExposureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LightExposureUom'
        enum eml20__LightExposureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LightExposureMeasure, default initialized and not managed by a soap context
        virtual eml20__LightExposureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LightExposureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LightExposureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LightExposureMeasure() { }
        /// Friend allocator used by soap_new_eml20__LightExposureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LightExposureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LightExposureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:903 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure (-337)
/* simple XML schema type 'eml20:ElectricCurrentMeasure': */
class SOAP_CMAC eml20__ElectricCurrentMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricCurrentUom'
        enum eml20__ElectricCurrentUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricCurrentMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricCurrentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricCurrentMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricCurrentMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricCurrentMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricCurrentMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricCurrentMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:905 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure (-338)
/* simple XML schema type 'eml20:LuminousFluxMeasure': */
class SOAP_CMAC eml20__LuminousFluxMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LuminousFluxUom'
        enum eml20__LuminousFluxUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LuminousFluxMeasure, default initialized and not managed by a soap context
        virtual eml20__LuminousFluxMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LuminousFluxMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LuminousFluxMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LuminousFluxMeasure() { }
        /// Friend allocator used by soap_new_eml20__LuminousFluxMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LuminousFluxMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousFluxMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:907 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure (-339)
/* simple XML schema type 'eml20:HeatCapacityMeasure': */
class SOAP_CMAC eml20__HeatCapacityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:HeatCapacityUom'
        enum eml20__HeatCapacityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__HeatCapacityMeasure, default initialized and not managed by a soap context
        virtual eml20__HeatCapacityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__HeatCapacityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__HeatCapacityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__HeatCapacityMeasure() { }
        /// Friend allocator used by soap_new_eml20__HeatCapacityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__HeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__HeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:909 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure (-340)
/* simple XML schema type 'eml20:ElectricResistancePerLengthMeasure': */
class SOAP_CMAC eml20__ElectricResistancePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricResistancePerLengthUom'
        enum eml20__ElectricResistancePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricResistancePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricResistancePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricResistancePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricResistancePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricResistancePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricResistancePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricResistancePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricResistancePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:911 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure (-341)
/* simple XML schema type 'eml20:AbsorbedDoseMeasure': */
class SOAP_CMAC eml20__AbsorbedDoseMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AbsorbedDoseUom'
        enum eml20__AbsorbedDoseUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AbsorbedDoseMeasure, default initialized and not managed by a soap context
        virtual eml20__AbsorbedDoseMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AbsorbedDoseMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AbsorbedDoseMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AbsorbedDoseMeasure() { }
        /// Friend allocator used by soap_new_eml20__AbsorbedDoseMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AbsorbedDoseMeasure * SOAP_FMAC2 soap_instantiate_eml20__AbsorbedDoseMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:913 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure (-342)
/* simple XML schema type 'eml20:TemperatureIntervalPerPressureMeasure': */
class SOAP_CMAC eml20__TemperatureIntervalPerPressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TemperatureIntervalPerPressureUom'
        enum eml20__TemperatureIntervalPerPressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TemperatureIntervalPerPressureMeasure, default initialized and not managed by a soap context
        virtual eml20__TemperatureIntervalPerPressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TemperatureIntervalPerPressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TemperatureIntervalPerPressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TemperatureIntervalPerPressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TemperatureIntervalPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__TemperatureIntervalPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:915 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure (-343)
/* simple XML schema type 'eml20:AttenuationPerFrequencyIntervalMeasure': */
class SOAP_CMAC eml20__AttenuationPerFrequencyIntervalMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AttenuationPerFrequencyIntervalUom'
        enum eml20__AttenuationPerFrequencyIntervalUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AttenuationPerFrequencyIntervalMeasure, default initialized and not managed by a soap context
        virtual eml20__AttenuationPerFrequencyIntervalMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AttenuationPerFrequencyIntervalMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AttenuationPerFrequencyIntervalMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AttenuationPerFrequencyIntervalMeasure() { }
        /// Friend allocator used by soap_new_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__AttenuationPerFrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:917 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure (-344)
/* simple XML schema type 'eml20:ThermalResistanceMeasure': */
class SOAP_CMAC eml20__ThermalResistanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermalResistanceUom'
        enum eml20__ThermalResistanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermalResistanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermalResistanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermalResistanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermalResistanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermalResistanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermalResistanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermalResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:919 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure (-345)
/* simple XML schema type 'eml20:AnglePerLengthMeasure': */
class SOAP_CMAC eml20__AnglePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AnglePerLengthUom'
        enum eml20__AnglePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AnglePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__AnglePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AnglePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AnglePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AnglePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__AnglePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AnglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__AnglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:921 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure (-346)
/* simple XML schema type 'eml20:LengthPerTimeMeasure': */
class SOAP_CMAC eml20__LengthPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerTimeUom'
        enum eml20__LengthPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:923 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure (-347)
/* simple XML schema type 'eml20:MassPerLengthMeasure': */
class SOAP_CMAC eml20__MassPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerLengthUom'
        enum eml20__MassPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:925 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure (-348)
/* simple XML schema type 'eml20:EnergyPerAreaMeasure': */
class SOAP_CMAC eml20__EnergyPerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyPerAreaUom'
        enum eml20__EnergyPerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyPerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyPerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyPerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:927 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure (-349)
/* simple XML schema type 'eml20:AreaPerAreaMeasure': */
class SOAP_CMAC eml20__AreaPerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaPerAreaUom'
        enum eml20__AreaPerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaPerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaPerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaPerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:929 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure (-350)
/* simple XML schema type 'eml20:ReluctanceMeasure': */
class SOAP_CMAC eml20__ReluctanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReluctanceUom'
        enum eml20__ReluctanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReluctanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ReluctanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReluctanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReluctanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReluctanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReluctanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReluctanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReluctanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:931 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure (-351)
/* simple XML schema type 'eml20:ThermodynamicTemperatureMeasure': */
class SOAP_CMAC eml20__ThermodynamicTemperatureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermodynamicTemperatureUom'
        enum eml20__ThermodynamicTemperatureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermodynamicTemperatureMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermodynamicTemperatureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermodynamicTemperatureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermodynamicTemperatureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermodynamicTemperatureMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermodynamicTemperatureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:933 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure (-352)
/* simple XML schema type 'eml20:PermittivityMeasure': */
class SOAP_CMAC eml20__PermittivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PermittivityUom'
        enum eml20__PermittivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PermittivityMeasure, default initialized and not managed by a soap context
        virtual eml20__PermittivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PermittivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PermittivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PermittivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__PermittivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PermittivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermittivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:935 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure (-353)
/* simple XML schema type 'eml20:PressureTimePerVolumeMeasure': */
class SOAP_CMAC eml20__PressureTimePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressureTimePerVolumeUom'
        enum eml20__PressureTimePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressureTimePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__PressureTimePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressureTimePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressureTimePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressureTimePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressureTimePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressureTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:937 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure (-354)
/* simple XML schema type 'eml20:DipoleMomentMeasure': */
class SOAP_CMAC eml20__DipoleMomentMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DipoleMomentUom'
        enum eml20__DipoleMomentUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DipoleMomentMeasure, default initialized and not managed by a soap context
        virtual eml20__DipoleMomentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DipoleMomentMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DipoleMomentMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DipoleMomentMeasure() { }
        /// Friend allocator used by soap_new_eml20__DipoleMomentMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__DipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:939 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure (-355)
/* simple XML schema type 'eml20:RadianceMeasure': */
class SOAP_CMAC eml20__RadianceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:RadianceUom'
        enum eml20__RadianceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__RadianceMeasure, default initialized and not managed by a soap context
        virtual eml20__RadianceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__RadianceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__RadianceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__RadianceMeasure() { }
        /// Friend allocator used by soap_new_eml20__RadianceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__RadianceMeasure * SOAP_FMAC2 soap_instantiate_eml20__RadianceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:941 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure (-356)
/* simple XML schema type 'eml20:AreaPerMassMeasure': */
class SOAP_CMAC eml20__AreaPerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaPerMassUom'
        enum eml20__AreaPerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaPerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaPerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaPerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaPerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:943 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure (-357)
/* simple XML schema type 'eml20:EnergyPerMassPerTimeMeasure': */
class SOAP_CMAC eml20__EnergyPerMassPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyPerMassPerTimeUom'
        enum eml20__EnergyPerMassPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyPerMassPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyPerMassPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyPerMassPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyPerMassPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyPerMassPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyPerMassPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyPerMassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerMassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:945 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure (-358)
/* simple XML schema type 'eml20:ElectricCurrentDensityMeasure': */
class SOAP_CMAC eml20__ElectricCurrentDensityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricCurrentDensityUom'
        enum eml20__ElectricCurrentDensityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricCurrentDensityMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricCurrentDensityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricCurrentDensityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricCurrentDensityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricCurrentDensityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricCurrentDensityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricCurrentDensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricCurrentDensityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:947 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure (-359)
/* simple XML schema type 'eml20:MassPerMassMeasure': */
class SOAP_CMAC eml20__MassPerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerMassUom'
        enum eml20__MassPerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:949 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure (-360)
/* simple XML schema type 'eml20:DataTransferSpeedMeasure': */
class SOAP_CMAC eml20__DataTransferSpeedMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DataTransferSpeedUom'
        enum eml20__DataTransferSpeedUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DataTransferSpeedMeasure, default initialized and not managed by a soap context
        virtual eml20__DataTransferSpeedMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DataTransferSpeedMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DataTransferSpeedMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DataTransferSpeedMeasure() { }
        /// Friend allocator used by soap_new_eml20__DataTransferSpeedMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DataTransferSpeedMeasure * SOAP_FMAC2 soap_instantiate_eml20__DataTransferSpeedMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:951 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure (-361)
/* simple XML schema type 'eml20:MagneticDipoleMomentMeasure': */
class SOAP_CMAC eml20__MagneticDipoleMomentMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticDipoleMomentUom'
        enum eml20__MagneticDipoleMomentUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticDipoleMomentMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticDipoleMomentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticDipoleMomentMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticDipoleMomentMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticDipoleMomentMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticDipoleMomentMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticDipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticDipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:953 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure (-362)
/* simple XML schema type 'eml20:MassPerEnergyMeasure': */
class SOAP_CMAC eml20__MassPerEnergyMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerEnergyUom'
        enum eml20__MassPerEnergyUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerEnergyMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerEnergyMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerEnergyMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerEnergyMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerEnergyMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerEnergyMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:955 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure (-363)
/* simple XML schema type 'eml20:MagneticPermeabilityMeasure': */
class SOAP_CMAC eml20__MagneticPermeabilityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticPermeabilityUom'
        enum eml20__MagneticPermeabilityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticPermeabilityMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticPermeabilityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticPermeabilityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticPermeabilityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticPermeabilityMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticPermeabilityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticPermeabilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticPermeabilityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:957 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure (-364)
/* simple XML schema type 'eml20:APIGravityMeasure': */
class SOAP_CMAC eml20__APIGravityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:APIGravityUom'
        enum eml20__APIGravityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__APIGravityMeasure, default initialized and not managed by a soap context
        virtual eml20__APIGravityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__APIGravityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__APIGravityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__APIGravityMeasure() { }
        /// Friend allocator used by soap_new_eml20__APIGravityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__APIGravityMeasure * SOAP_FMAC2 soap_instantiate_eml20__APIGravityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:959 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure (-365)
/* simple XML schema type 'eml20:VolumePerLengthMeasure': */
class SOAP_CMAC eml20__VolumePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerLengthUom'
        enum eml20__VolumePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:961 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure (-366)
/* simple XML schema type 'eml20:VolumeMeasure': */
class SOAP_CMAC eml20__VolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumeUom'
        enum eml20__VolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:963 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure (-367)
/* simple XML schema type 'eml20:VolumePerTimePerVolumeMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerVolumeUom'
        enum eml20__VolumePerTimePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:965 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure (-368)
/* simple XML schema type 'eml20:VolumePerTimePerPressureMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerPressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerPressureUom'
        enum eml20__VolumePerTimePerPressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerPressureMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerPressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerPressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerPressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerPressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerPressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:967 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure (-369)
/* simple XML schema type 'eml20:TimeMeasure': */
class SOAP_CMAC eml20__TimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TimeUom'
        enum eml20__TimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TimeMeasure, default initialized and not managed by a soap context
        virtual eml20__TimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__TimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:969 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure (-370)
/* simple XML schema type 'eml20:MomentOfForceMeasure': */
class SOAP_CMAC eml20__MomentOfForceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MomentOfForceUom'
        enum eml20__MomentOfForceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MomentOfForceMeasure, default initialized and not managed by a soap context
        virtual eml20__MomentOfForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MomentOfForceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MomentOfForceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MomentOfForceMeasure() { }
        /// Friend allocator used by soap_new_eml20__MomentOfForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MomentOfForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:971 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure (-371)
/* simple XML schema type 'eml20:LuminanceMeasure': */
class SOAP_CMAC eml20__LuminanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LuminanceUom'
        enum eml20__LuminanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LuminanceMeasure, default initialized and not managed by a soap context
        virtual eml20__LuminanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LuminanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LuminanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LuminanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__LuminanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LuminanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:973 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure (-372)
/* simple XML schema type 'eml20:ForcePerVolumeMeasure': */
class SOAP_CMAC eml20__ForcePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForcePerVolumeUom'
        enum eml20__ForcePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForcePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__ForcePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForcePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForcePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForcePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForcePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:975 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure (-373)
/* simple XML schema type 'eml20:MolarHeatCapacityMeasure': */
class SOAP_CMAC eml20__MolarHeatCapacityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MolarHeatCapacityUom'
        enum eml20__MolarHeatCapacityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MolarHeatCapacityMeasure, default initialized and not managed by a soap context
        virtual eml20__MolarHeatCapacityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MolarHeatCapacityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MolarHeatCapacityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MolarHeatCapacityMeasure() { }
        /// Friend allocator used by soap_new_eml20__MolarHeatCapacityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MolarHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:977 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure (-374)
/* simple XML schema type 'eml20:DigitalStorageMeasure': */
class SOAP_CMAC eml20__DigitalStorageMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DigitalStorageUom'
        enum eml20__DigitalStorageUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DigitalStorageMeasure, default initialized and not managed by a soap context
        virtual eml20__DigitalStorageMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DigitalStorageMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DigitalStorageMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DigitalStorageMeasure() { }
        /// Friend allocator used by soap_new_eml20__DigitalStorageMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DigitalStorageMeasure * SOAP_FMAC2 soap_instantiate_eml20__DigitalStorageMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:979 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure (-375)
/* simple XML schema type 'eml20:ElectricChargeMeasure': */
class SOAP_CMAC eml20__ElectricChargeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricChargeUom'
        enum eml20__ElectricChargeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricChargeMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricChargeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricChargeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricChargeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricChargeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricChargeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricChargeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:981 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure (-376)
/* simple XML schema type 'eml20:LuminousIntensityMeasure': */
class SOAP_CMAC eml20__LuminousIntensityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LuminousIntensityUom'
        enum eml20__LuminousIntensityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LuminousIntensityMeasure, default initialized and not managed by a soap context
        virtual eml20__LuminousIntensityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LuminousIntensityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LuminousIntensityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LuminousIntensityMeasure() { }
        /// Friend allocator used by soap_new_eml20__LuminousIntensityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LuminousIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:983 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure (-377)
/* simple XML schema type 'eml20:MolarEnergyMeasure': */
class SOAP_CMAC eml20__MolarEnergyMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MolarEnergyUom'
        enum eml20__MolarEnergyUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MolarEnergyMeasure, default initialized and not managed by a soap context
        virtual eml20__MolarEnergyMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MolarEnergyMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MolarEnergyMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MolarEnergyMeasure() { }
        /// Friend allocator used by soap_new_eml20__MolarEnergyMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MolarEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolarEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:985 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure (-378)
/* simple XML schema type 'eml20:LengthPerVolumeMeasure': */
class SOAP_CMAC eml20__LengthPerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerVolumeUom'
        enum eml20__LengthPerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:987 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure (-379)
/* simple XML schema type 'eml20:SecondMomentOfAreaMeasure': */
class SOAP_CMAC eml20__SecondMomentOfAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:SecondMomentOfAreaUom'
        enum eml20__SecondMomentOfAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__SecondMomentOfAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__SecondMomentOfAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__SecondMomentOfAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__SecondMomentOfAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__SecondMomentOfAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__SecondMomentOfAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__SecondMomentOfAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__SecondMomentOfAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:989 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure (-380)
/* simple XML schema type 'eml20:MagneticFluxDensityMeasure': */
class SOAP_CMAC eml20__MagneticFluxDensityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticFluxDensityUom'
        enum eml20__MagneticFluxDensityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticFluxDensityMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticFluxDensityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticFluxDensityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticFluxDensityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticFluxDensityMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticFluxDensityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticFluxDensityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxDensityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:991 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure (-381)
/* simple XML schema type 'eml20:VolumePerAreaMeasure': */
class SOAP_CMAC eml20__VolumePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerAreaUom'
        enum eml20__VolumePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:993 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure (-382)
/* simple XML schema type 'eml20:QuantityOfLightMeasure': */
class SOAP_CMAC eml20__QuantityOfLightMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:QuantityOfLightUom'
        enum eml20__QuantityOfLightUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__QuantityOfLightMeasure, default initialized and not managed by a soap context
        virtual eml20__QuantityOfLightMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__QuantityOfLightMeasure); }
      public:
        /// Constructor with default initializations
        eml20__QuantityOfLightMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__QuantityOfLightMeasure() { }
        /// Friend allocator used by soap_new_eml20__QuantityOfLightMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__QuantityOfLightMeasure * SOAP_FMAC2 soap_instantiate_eml20__QuantityOfLightMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:995 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure (-383)
/* simple XML schema type 'eml20:LuminousEfficacyMeasure': */
class SOAP_CMAC eml20__LuminousEfficacyMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LuminousEfficacyUom'
        enum eml20__LuminousEfficacyUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LuminousEfficacyMeasure, default initialized and not managed by a soap context
        virtual eml20__LuminousEfficacyMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LuminousEfficacyMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LuminousEfficacyMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LuminousEfficacyMeasure() { }
        /// Friend allocator used by soap_new_eml20__LuminousEfficacyMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LuminousEfficacyMeasure * SOAP_FMAC2 soap_instantiate_eml20__LuminousEfficacyMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:997 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure (-384)
/* simple XML schema type 'eml20:AreaPerTimeMeasure': */
class SOAP_CMAC eml20__AreaPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaPerTimeUom'
        enum eml20__AreaPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:999 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure (-385)
/* simple XML schema type 'eml20:VolumeFlowRatePerVolumeFlowRateMeasure': */
class SOAP_CMAC eml20__VolumeFlowRatePerVolumeFlowRateMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumeFlowRatePerVolumeFlowRateUom'
        enum eml20__VolumeFlowRatePerVolumeFlowRateUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumeFlowRatePerVolumeFlowRateMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumeFlowRatePerVolumeFlowRateMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumeFlowRatePerVolumeFlowRateMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumeFlowRatePerVolumeFlowRateMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumeFlowRatePerVolumeFlowRateMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1001 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure (-386)
/* simple XML schema type 'eml20:MomentumMeasure': */
class SOAP_CMAC eml20__MomentumMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MomentumUom'
        enum eml20__MomentumUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MomentumMeasure, default initialized and not managed by a soap context
        virtual eml20__MomentumMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MomentumMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MomentumMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MomentumMeasure() { }
        /// Friend allocator used by soap_new_eml20__MomentumMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MomentumMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentumMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1003 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure (-387)
/* simple XML schema type 'eml20:PowerPerVolumeMeasure': */
class SOAP_CMAC eml20__PowerPerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PowerPerVolumeUom'
        enum eml20__PowerPerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PowerPerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__PowerPerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PowerPerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PowerPerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PowerPerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__PowerPerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PowerPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1005 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure (-388)
/* simple XML schema type 'eml20:ThermalDiffusivityMeasure': */
class SOAP_CMAC eml20__ThermalDiffusivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermalDiffusivityUom'
        enum eml20__ThermalDiffusivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermalDiffusivityMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermalDiffusivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermalDiffusivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermalDiffusivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermalDiffusivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermalDiffusivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermalDiffusivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalDiffusivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1007 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure (-389)
/* simple XML schema type 'eml20:LogarithmicPowerRatioPerLengthMeasure': */
class SOAP_CMAC eml20__LogarithmicPowerRatioPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LogarithmicPowerRatioPerLengthUom'
        enum eml20__LogarithmicPowerRatioPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LogarithmicPowerRatioPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__LogarithmicPowerRatioPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LogarithmicPowerRatioPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LogarithmicPowerRatioPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LogarithmicPowerRatioPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__LogarithmicPowerRatioPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1009 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure (-390)
/* simple XML schema type 'eml20:ReciprocalTimeMeasure': */
class SOAP_CMAC eml20__ReciprocalTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalTimeUom'
        enum eml20__ReciprocalTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1011 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure (-391)
/* simple XML schema type 'eml20:SpecificHeatCapacityMeasure': */
class SOAP_CMAC eml20__SpecificHeatCapacityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:SpecificHeatCapacityUom'
        enum eml20__SpecificHeatCapacityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__SpecificHeatCapacityMeasure, default initialized and not managed by a soap context
        virtual eml20__SpecificHeatCapacityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__SpecificHeatCapacityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__SpecificHeatCapacityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__SpecificHeatCapacityMeasure() { }
        /// Friend allocator used by soap_new_eml20__SpecificHeatCapacityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__SpecificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml20__SpecificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1013 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure (-392)
/* simple XML schema type 'eml20:PotentialDifferencePerPowerDropMeasure': */
class SOAP_CMAC eml20__PotentialDifferencePerPowerDropMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PotentialDifferencePerPowerDropUom'
        enum eml20__PotentialDifferencePerPowerDropUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PotentialDifferencePerPowerDropMeasure, default initialized and not managed by a soap context
        virtual eml20__PotentialDifferencePerPowerDropMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PotentialDifferencePerPowerDropMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PotentialDifferencePerPowerDropMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PotentialDifferencePerPowerDropMeasure() { }
        /// Friend allocator used by soap_new_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC2 soap_instantiate_eml20__PotentialDifferencePerPowerDropMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1015 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure (-393)
/* simple XML schema type 'eml20:MomentOfInertiaMeasure': */
class SOAP_CMAC eml20__MomentOfInertiaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MomentOfInertiaUom'
        enum eml20__MomentOfInertiaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MomentOfInertiaMeasure, default initialized and not managed by a soap context
        virtual eml20__MomentOfInertiaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MomentOfInertiaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MomentOfInertiaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MomentOfInertiaMeasure() { }
        /// Friend allocator used by soap_new_eml20__MomentOfInertiaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MomentOfInertiaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MomentOfInertiaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1017 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure (-394)
/* simple XML schema type 'eml20:MassPerTimePerLengthMeasure': */
class SOAP_CMAC eml20__MassPerTimePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerTimePerLengthUom'
        enum eml20__MassPerTimePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerTimePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerTimePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerTimePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerTimePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerTimePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerTimePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1019 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure (-395)
/* simple XML schema type 'eml20:MolecularWeightMeasure': */
class SOAP_CMAC eml20__MolecularWeightMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MolecularWeightUom'
        enum eml20__MolecularWeightUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MolecularWeightMeasure, default initialized and not managed by a soap context
        virtual eml20__MolecularWeightMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MolecularWeightMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MolecularWeightMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MolecularWeightMeasure() { }
        /// Friend allocator used by soap_new_eml20__MolecularWeightMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MolecularWeightMeasure * SOAP_FMAC2 soap_instantiate_eml20__MolecularWeightMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1021 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure (-396)
/* simple XML schema type 'eml20:ActivityOfRadioactivityMeasure': */
class SOAP_CMAC eml20__ActivityOfRadioactivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ActivityOfRadioactivityUom'
        enum eml20__ActivityOfRadioactivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ActivityOfRadioactivityMeasure, default initialized and not managed by a soap context
        virtual eml20__ActivityOfRadioactivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ActivityOfRadioactivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ActivityOfRadioactivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ActivityOfRadioactivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ActivityOfRadioactivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ActivityOfRadioactivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ActivityOfRadioactivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1023 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure (-397)
/* simple XML schema type 'eml20:SignalingEventPerTimeMeasure': */
class SOAP_CMAC eml20__SignalingEventPerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:SignalingEventPerTimeUom'
        enum eml20__SignalingEventPerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__SignalingEventPerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__SignalingEventPerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__SignalingEventPerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__SignalingEventPerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__SignalingEventPerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__SignalingEventPerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__SignalingEventPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__SignalingEventPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1025 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure (-398)
/* simple XML schema type 'eml20:FrequencyMeasure': */
class SOAP_CMAC eml20__FrequencyMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:FrequencyUom'
        enum eml20__FrequencyUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__FrequencyMeasure, default initialized and not managed by a soap context
        virtual eml20__FrequencyMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__FrequencyMeasure); }
      public:
        /// Constructor with default initializations
        eml20__FrequencyMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__FrequencyMeasure() { }
        /// Friend allocator used by soap_new_eml20__FrequencyMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__FrequencyMeasure * SOAP_FMAC2 soap_instantiate_eml20__FrequencyMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1027 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure (-399)
/* simple XML schema type 'eml20:FrequencyIntervalMeasure': */
class SOAP_CMAC eml20__FrequencyIntervalMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:FrequencyIntervalUom'
        enum eml20__FrequencyIntervalUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__FrequencyIntervalMeasure, default initialized and not managed by a soap context
        virtual eml20__FrequencyIntervalMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__FrequencyIntervalMeasure); }
      public:
        /// Constructor with default initializations
        eml20__FrequencyIntervalMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__FrequencyIntervalMeasure() { }
        /// Friend allocator used by soap_new_eml20__FrequencyIntervalMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__FrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml20__FrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1029 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure (-400)
/* simple XML schema type 'eml20:CapacitanceMeasure': */
class SOAP_CMAC eml20__CapacitanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:CapacitanceUom'
        enum eml20__CapacitanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__CapacitanceMeasure, default initialized and not managed by a soap context
        virtual eml20__CapacitanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__CapacitanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__CapacitanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__CapacitanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__CapacitanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__CapacitanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__CapacitanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1031 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure (-401)
/* simple XML schema type 'eml20:ElectricalResistivityMeasure': */
class SOAP_CMAC eml20__ElectricalResistivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricalResistivityUom'
        enum eml20__ElectricalResistivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricalResistivityMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricalResistivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricalResistivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricalResistivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricalResistivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricalResistivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricalResistivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricalResistivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1033 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure (-402)
/* simple XML schema type 'eml20:MassLengthMeasure': */
class SOAP_CMAC eml20__MassLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassLengthUom'
        enum eml20__MassLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MassLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1035 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure (-403)
/* simple XML schema type 'eml20:ReciprocalAreaMeasure': */
class SOAP_CMAC eml20__ReciprocalAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalAreaUom'
        enum eml20__ReciprocalAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1037 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure (-404)
/* simple XML schema type 'eml20:KinematicViscosityMeasure': */
class SOAP_CMAC eml20__KinematicViscosityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:KinematicViscosityUom'
        enum eml20__KinematicViscosityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__KinematicViscosityMeasure, default initialized and not managed by a soap context
        virtual eml20__KinematicViscosityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__KinematicViscosityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__KinematicViscosityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__KinematicViscosityMeasure() { }
        /// Friend allocator used by soap_new_eml20__KinematicViscosityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__KinematicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml20__KinematicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1039 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure (-405)
/* simple XML schema type 'eml20:InductanceMeasure': */
class SOAP_CMAC eml20__InductanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:InductanceUom'
        enum eml20__InductanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__InductanceMeasure, default initialized and not managed by a soap context
        virtual eml20__InductanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__InductanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__InductanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__InductanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__InductanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__InductanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__InductanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1041 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure (-406)
/* simple XML schema type 'eml20:TimePerVolumeMeasure': */
class SOAP_CMAC eml20__TimePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TimePerVolumeUom'
        enum eml20__TimePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TimePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__TimePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TimePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TimePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TimePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__TimePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1043 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure (-407)
/* simple XML schema type 'eml20:ElectromagneticMomentMeasure': */
class SOAP_CMAC eml20__ElectromagneticMomentMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectromagneticMomentUom'
        enum eml20__ElectromagneticMomentUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectromagneticMomentMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectromagneticMomentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectromagneticMomentMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectromagneticMomentMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectromagneticMomentMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectromagneticMomentMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectromagneticMomentMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectromagneticMomentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1045 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure (-408)
/* simple XML schema type 'eml20:EnergyPerVolumeMeasure': */
class SOAP_CMAC eml20__EnergyPerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyPerVolumeUom'
        enum eml20__EnergyPerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyPerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyPerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyPerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyPerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyPerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyPerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1047 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure (-409)
/* simple XML schema type 'eml20:ElectricChargePerVolumeMeasure': */
class SOAP_CMAC eml20__ElectricChargePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricChargePerVolumeUom'
        enum eml20__ElectricChargePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricChargePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricChargePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricChargePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricChargePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricChargePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricChargePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricChargePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1049 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure (-410)
/* simple XML schema type 'eml20:VolumetricHeatTransferCoefficientMeasure': */
class SOAP_CMAC eml20__VolumetricHeatTransferCoefficientMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumetricHeatTransferCoefficientUom'
        enum eml20__VolumetricHeatTransferCoefficientUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumetricHeatTransferCoefficientMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumetricHeatTransferCoefficientMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumetricHeatTransferCoefficientMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumetricHeatTransferCoefficientMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumetricHeatTransferCoefficientMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumetricHeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1051 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure (-411)
/* simple XML schema type 'eml20:PressurePerVolumeMeasure': */
class SOAP_CMAC eml20__PressurePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressurePerVolumeUom'
        enum eml20__PressurePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressurePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__PressurePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressurePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressurePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressurePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressurePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressurePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressurePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1053 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure (-412)
/* simple XML schema type 'eml20:TimePerMassMeasure': */
class SOAP_CMAC eml20__TimePerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TimePerMassUom'
        enum eml20__TimePerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TimePerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__TimePerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TimePerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TimePerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TimePerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__TimePerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TimePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1055 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure (-413)
/* simple XML schema type 'eml20:ReciprocalLengthMeasure': */
class SOAP_CMAC eml20__ReciprocalLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalLengthUom'
        enum eml20__ReciprocalLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1057 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure (-414)
/* simple XML schema type 'eml20:DynamicViscosityMeasure': */
class SOAP_CMAC eml20__DynamicViscosityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DynamicViscosityUom'
        enum eml20__DynamicViscosityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DynamicViscosityMeasure, default initialized and not managed by a soap context
        virtual eml20__DynamicViscosityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DynamicViscosityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DynamicViscosityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DynamicViscosityMeasure() { }
        /// Friend allocator used by soap_new_eml20__DynamicViscosityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml20__DynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1059 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure (-415)
/* simple XML schema type 'eml20:ReciprocalElectricPotentialDifferenceMeasure': */
class SOAP_CMAC eml20__ReciprocalElectricPotentialDifferenceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalElectricPotentialDifferenceUom'
        enum eml20__ReciprocalElectricPotentialDifferenceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalElectricPotentialDifferenceMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalElectricPotentialDifferenceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalElectricPotentialDifferenceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalElectricPotentialDifferenceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalElectricPotentialDifferenceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1061 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure (-416)
/* simple XML schema type 'eml20:ElectricChargePerMassMeasure': */
class SOAP_CMAC eml20__ElectricChargePerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricChargePerMassUom'
        enum eml20__ElectricChargePerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricChargePerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricChargePerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricChargePerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricChargePerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricChargePerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricChargePerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricChargePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricChargePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1063 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure (-417)
/* simple XML schema type 'eml20:APIGammaRayMeasure': */
class SOAP_CMAC eml20__APIGammaRayMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:APIGammaRayUom'
        enum eml20__APIGammaRayUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__APIGammaRayMeasure, default initialized and not managed by a soap context
        virtual eml20__APIGammaRayMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__APIGammaRayMeasure); }
      public:
        /// Constructor with default initializations
        eml20__APIGammaRayMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__APIGammaRayMeasure() { }
        /// Friend allocator used by soap_new_eml20__APIGammaRayMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__APIGammaRayMeasure * SOAP_FMAC2 soap_instantiate_eml20__APIGammaRayMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1065 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure (-418)
/* simple XML schema type 'eml20:DiffusionCoefficientMeasure': */
class SOAP_CMAC eml20__DiffusionCoefficientMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DiffusionCoefficientUom'
        enum eml20__DiffusionCoefficientUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DiffusionCoefficientMeasure, default initialized and not managed by a soap context
        virtual eml20__DiffusionCoefficientMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DiffusionCoefficientMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DiffusionCoefficientMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DiffusionCoefficientMeasure() { }
        /// Friend allocator used by soap_new_eml20__DiffusionCoefficientMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DiffusionCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml20__DiffusionCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1067 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure (-419)
/* simple XML schema type 'eml20:ElectricPotentialDifferenceMeasure': */
class SOAP_CMAC eml20__ElectricPotentialDifferenceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricPotentialDifferenceUom'
        enum eml20__ElectricPotentialDifferenceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricPotentialDifferenceMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricPotentialDifferenceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricPotentialDifferenceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricPotentialDifferenceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricPotentialDifferenceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricPotentialDifferenceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1069 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure (-420)
/* simple XML schema type 'eml20:IsothermalCompressibilityMeasure': */
class SOAP_CMAC eml20__IsothermalCompressibilityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:IsothermalCompressibilityUom'
        enum eml20__IsothermalCompressibilityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__IsothermalCompressibilityMeasure, default initialized and not managed by a soap context
        virtual eml20__IsothermalCompressibilityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__IsothermalCompressibilityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__IsothermalCompressibilityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__IsothermalCompressibilityMeasure() { }
        /// Friend allocator used by soap_new_eml20__IsothermalCompressibilityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__IsothermalCompressibilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__IsothermalCompressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1071 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure (-421)
/* simple XML schema type 'eml20:MassPerVolumePerLengthMeasure': */
class SOAP_CMAC eml20__MassPerVolumePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerVolumePerLengthUom'
        enum eml20__MassPerVolumePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerVolumePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerVolumePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerVolumePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerVolumePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerVolumePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerVolumePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerVolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerVolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1073 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure (-422)
/* simple XML schema type 'eml20:PressurePerTimeMeasure': */
class SOAP_CMAC eml20__PressurePerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressurePerTimeUom'
        enum eml20__PressurePerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressurePerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__PressurePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressurePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressurePerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressurePerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressurePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressurePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressurePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1075 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure (-423)
/* simple XML schema type 'eml20:ForcePerLengthMeasure': */
class SOAP_CMAC eml20__ForcePerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ForcePerLengthUom'
        enum eml20__ForcePerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ForcePerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__ForcePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ForcePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ForcePerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ForcePerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__ForcePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ForcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ForcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1077 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure (-424)
/* simple XML schema type 'eml20:AmountOfSubstancePerTimeMeasure': */
class SOAP_CMAC eml20__AmountOfSubstancePerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstancePerTimeUom'
        enum eml20__AmountOfSubstancePerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstancePerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstancePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstancePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstancePerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstancePerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstancePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1079 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure (-425)
/* simple XML schema type 'eml20:LengthPerTemperatureMeasure': */
class SOAP_CMAC eml20__LengthPerTemperatureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerTemperatureUom'
        enum eml20__LengthPerTemperatureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerTemperatureMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerTemperatureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerTemperatureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerTemperatureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerTemperatureMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerTemperatureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1081 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure (-426)
/* simple XML schema type 'eml20:VolumePerTimeLengthMeasure': */
class SOAP_CMAC eml20__VolumePerTimeLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimeLengthUom'
        enum eml20__VolumePerTimeLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimeLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimeLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimeLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimeLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimeLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimeLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimeLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimeLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1083 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure (-427)
/* simple XML schema type 'eml20:PressureSquaredPerForceTimePerAreaMeasure': */
class SOAP_CMAC eml20__PressureSquaredPerForceTimePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressureSquaredPerForceTimePerAreaUom'
        enum eml20__PressureSquaredPerForceTimePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressureSquaredPerForceTimePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__PressureSquaredPerForceTimePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressureSquaredPerForceTimePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressureSquaredPerForceTimePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressureSquaredPerForceTimePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1085 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure (-428)
/* simple XML schema type 'eml20:AnglePerVolumeMeasure': */
class SOAP_CMAC eml20__AnglePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AnglePerVolumeUom'
        enum eml20__AnglePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AnglePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__AnglePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AnglePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AnglePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AnglePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__AnglePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AnglePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AnglePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1087 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure (-429)
/* simple XML schema type 'eml20:LengthPerPressureMeasure': */
class SOAP_CMAC eml20__LengthPerPressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerPressureUom'
        enum eml20__LengthPerPressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerPressureMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerPressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerPressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerPressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerPressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerPressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1089 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure (-430)
/* simple XML schema type 'eml20:ThermalConductivityMeasure': */
class SOAP_CMAC eml20__ThermalConductivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ThermalConductivityUom'
        enum eml20__ThermalConductivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ThermalConductivityMeasure, default initialized and not managed by a soap context
        virtual eml20__ThermalConductivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ThermalConductivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ThermalConductivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ThermalConductivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ThermalConductivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ThermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ThermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1091 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure (-431)
/* simple XML schema type 'eml20:MassMeasure': */
class SOAP_CMAC eml20__MassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassUom'
        enum eml20__MassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassMeasure, default initialized and not managed by a soap context
        virtual eml20__MassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1093 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure (-432)
/* simple XML schema type 'eml20:NormalizedPowerMeasure': */
class SOAP_CMAC eml20__NormalizedPowerMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:NormalizedPowerUom'
        enum eml20__NormalizedPowerUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__NormalizedPowerMeasure, default initialized and not managed by a soap context
        virtual eml20__NormalizedPowerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__NormalizedPowerMeasure); }
      public:
        /// Constructor with default initializations
        eml20__NormalizedPowerMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__NormalizedPowerMeasure() { }
        /// Friend allocator used by soap_new_eml20__NormalizedPowerMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__NormalizedPowerMeasure * SOAP_FMAC2 soap_instantiate_eml20__NormalizedPowerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1095 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure (-433)
/* simple XML schema type 'eml20:LogarithmicPowerRatioMeasure': */
class SOAP_CMAC eml20__LogarithmicPowerRatioMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LogarithmicPowerRatioUom'
        enum eml20__LogarithmicPowerRatioUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LogarithmicPowerRatioMeasure, default initialized and not managed by a soap context
        virtual eml20__LogarithmicPowerRatioMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LogarithmicPowerRatioMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LogarithmicPowerRatioMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LogarithmicPowerRatioMeasure() { }
        /// Friend allocator used by soap_new_eml20__LogarithmicPowerRatioMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LogarithmicPowerRatioMeasure * SOAP_FMAC2 soap_instantiate_eml20__LogarithmicPowerRatioMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1097 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure (-434)
/* simple XML schema type 'eml20:AngularAccelerationMeasure': */
class SOAP_CMAC eml20__AngularAccelerationMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AngularAccelerationUom'
        enum eml20__AngularAccelerationUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AngularAccelerationMeasure, default initialized and not managed by a soap context
        virtual eml20__AngularAccelerationMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AngularAccelerationMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AngularAccelerationMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AngularAccelerationMeasure() { }
        /// Friend allocator used by soap_new_eml20__AngularAccelerationMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AngularAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml20__AngularAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1099 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure (-435)
/* simple XML schema type 'eml20:ReciprocalMassMeasure': */
class SOAP_CMAC eml20__ReciprocalMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalMassUom'
        enum eml20__ReciprocalMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalMassMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1101 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure (-436)
/* simple XML schema type 'eml20:ReciprocalForceMeasure': */
class SOAP_CMAC eml20__ReciprocalForceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ReciprocalForceUom'
        enum eml20__ReciprocalForceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ReciprocalForceMeasure, default initialized and not managed by a soap context
        virtual eml20__ReciprocalForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ReciprocalForceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ReciprocalForceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ReciprocalForceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ReciprocalForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ReciprocalForceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ReciprocalForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1103 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure (-437)
/* simple XML schema type 'eml20:PlaneAngleMeasure': */
class SOAP_CMAC eml20__PlaneAngleMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PlaneAngleUom'
        enum eml20__PlaneAngleUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PlaneAngleMeasure, default initialized and not managed by a soap context
        virtual eml20__PlaneAngleMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PlaneAngleMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PlaneAngleMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PlaneAngleMeasure() { }
        /// Friend allocator used by soap_new_eml20__PlaneAngleMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PlaneAngleMeasure * SOAP_FMAC2 soap_instantiate_eml20__PlaneAngleMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1105 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure (-438)
/* simple XML schema type 'eml20:EnergyLengthPerAreaMeasure': */
class SOAP_CMAC eml20__EnergyLengthPerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyLengthPerAreaUom'
        enum eml20__EnergyLengthPerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyLengthPerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyLengthPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyLengthPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyLengthPerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyLengthPerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyLengthPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyLengthPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyLengthPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1107 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure (-439)
/* simple XML schema type 'eml20:EnergyPerMassMeasure': */
class SOAP_CMAC eml20__EnergyPerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:EnergyPerMassUom'
        enum eml20__EnergyPerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__EnergyPerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__EnergyPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__EnergyPerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__EnergyPerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__EnergyPerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__EnergyPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__EnergyPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__EnergyPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1109 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure (-440)
/* simple XML schema type 'eml20:AngularVelocityMeasure': */
class SOAP_CMAC eml20__AngularVelocityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AngularVelocityUom'
        enum eml20__AngularVelocityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AngularVelocityMeasure, default initialized and not managed by a soap context
        virtual eml20__AngularVelocityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AngularVelocityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AngularVelocityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AngularVelocityMeasure() { }
        /// Friend allocator used by soap_new_eml20__AngularVelocityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AngularVelocityMeasure * SOAP_FMAC2 soap_instantiate_eml20__AngularVelocityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1111 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure (-441)
/* simple XML schema type 'eml20:ElectricConductivityMeasure': */
class SOAP_CMAC eml20__ElectricConductivityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricConductivityUom'
        enum eml20__ElectricConductivityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricConductivityMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricConductivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricConductivityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricConductivityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricConductivityMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricConductivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1113 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure (-442)
/* simple XML schema type 'eml20:AmountOfSubstancePerAmountOfSubstanceMeasure': */
class SOAP_CMAC eml20__AmountOfSubstancePerAmountOfSubstanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstancePerAmountOfSubstanceUom'
        enum eml20__AmountOfSubstancePerAmountOfSubstanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstancePerAmountOfSubstanceMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstancePerAmountOfSubstanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstancePerAmountOfSubstanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstancePerAmountOfSubstanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstancePerAmountOfSubstanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1115 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure (-443)
/* simple XML schema type 'eml20:ElectricFieldStrengthMeasure': */
class SOAP_CMAC eml20__ElectricFieldStrengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricFieldStrengthUom'
        enum eml20__ElectricFieldStrengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricFieldStrengthMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricFieldStrengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricFieldStrengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricFieldStrengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricFieldStrengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricFieldStrengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1117 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure (-444)
/* simple XML schema type 'eml20:PowerPerAreaMeasure': */
class SOAP_CMAC eml20__PowerPerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PowerPerAreaUom'
        enum eml20__PowerPerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PowerPerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__PowerPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PowerPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PowerPerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PowerPerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__PowerPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PowerPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__PowerPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1119 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure (-445)
/* simple XML schema type 'eml20:MagneticFluxDensityPerLengthMeasure': */
class SOAP_CMAC eml20__MagneticFluxDensityPerLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticFluxDensityPerLengthUom'
        enum eml20__MagneticFluxDensityPerLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticFluxDensityPerLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticFluxDensityPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticFluxDensityPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticFluxDensityPerLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticFluxDensityPerLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFluxDensityPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1121 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure (-446)
/* simple XML schema type 'eml20:PressureMeasure': */
class SOAP_CMAC eml20__PressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PressureUom'
        enum eml20__PressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PressureMeasure, default initialized and not managed by a soap context
        virtual eml20__PressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__PressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__PressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1123 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure (-447)
/* simple XML schema type 'eml20:VolumePerTimePerPressureLengthMeasure': */
class SOAP_CMAC eml20__VolumePerTimePerPressureLengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerTimePerPressureLengthUom'
        enum eml20__VolumePerTimePerPressureLengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerTimePerPressureLengthMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerTimePerPressureLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerTimePerPressureLengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerTimePerPressureLengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerTimePerPressureLengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerTimePerPressureLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1125 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure (-448)
/* simple XML schema type 'eml20:MagneticFieldStrengthMeasure': */
class SOAP_CMAC eml20__MagneticFieldStrengthMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MagneticFieldStrengthUom'
        enum eml20__MagneticFieldStrengthUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MagneticFieldStrengthMeasure, default initialized and not managed by a soap context
        virtual eml20__MagneticFieldStrengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MagneticFieldStrengthMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MagneticFieldStrengthMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MagneticFieldStrengthMeasure() { }
        /// Friend allocator used by soap_new_eml20__MagneticFieldStrengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MagneticFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml20__MagneticFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1127 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure (-449)
/* simple XML schema type 'eml20:PermeabilityRockMeasure': */
class SOAP_CMAC eml20__PermeabilityRockMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:PermeabilityRockUom'
        enum eml20__PermeabilityRockUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__PermeabilityRockMeasure, default initialized and not managed by a soap context
        virtual eml20__PermeabilityRockMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__PermeabilityRockMeasure); }
      public:
        /// Constructor with default initializations
        eml20__PermeabilityRockMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__PermeabilityRockMeasure() { }
        /// Friend allocator used by soap_new_eml20__PermeabilityRockMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__PermeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_eml20__PermeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1129 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure (-450)
/* simple XML schema type 'eml20:DoseEquivalentMeasure': */
class SOAP_CMAC eml20__DoseEquivalentMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:DoseEquivalentUom'
        enum eml20__DoseEquivalentUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__DoseEquivalentMeasure, default initialized and not managed by a soap context
        virtual eml20__DoseEquivalentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__DoseEquivalentMeasure); }
      public:
        /// Constructor with default initializations
        eml20__DoseEquivalentMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__DoseEquivalentMeasure() { }
        /// Friend allocator used by soap_new_eml20__DoseEquivalentMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__DoseEquivalentMeasure * SOAP_FMAC2 soap_instantiate_eml20__DoseEquivalentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1131 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure (-451)
/* simple XML schema type 'eml20:MassPerTimePerAreaMeasure': */
class SOAP_CMAC eml20__MassPerTimePerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerTimePerAreaUom'
        enum eml20__MassPerTimePerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerTimePerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerTimePerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerTimePerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerTimePerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerTimePerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerTimePerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1133 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure (-452)
/* simple XML schema type 'eml20:VolumePerPressureMeasure': */
class SOAP_CMAC eml20__VolumePerPressureMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerPressureUom'
        enum eml20__VolumePerPressureUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerPressureMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerPressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerPressureMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerPressureMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerPressureMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerPressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1135 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure (-453)
/* simple XML schema type 'eml20:MassPerAreaMeasure': */
class SOAP_CMAC eml20__MassPerAreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MassPerAreaUom'
        enum eml20__MassPerAreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MassPerAreaMeasure, default initialized and not managed by a soap context
        virtual eml20__MassPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MassPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MassPerAreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MassPerAreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__MassPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MassPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__MassPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1137 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure (-454)
/* simple XML schema type 'eml20:AmountOfSubstancePerVolumeMeasure': */
class SOAP_CMAC eml20__AmountOfSubstancePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AmountOfSubstancePerVolumeUom'
        enum eml20__AmountOfSubstancePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AmountOfSubstancePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__AmountOfSubstancePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AmountOfSubstancePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AmountOfSubstancePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AmountOfSubstancePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AmountOfSubstancePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1139 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure (-455)
/* simple XML schema type 'eml20:TimePerTimeMeasure': */
class SOAP_CMAC eml20__TimePerTimeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:TimePerTimeUom'
        enum eml20__TimePerTimeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__TimePerTimeMeasure, default initialized and not managed by a soap context
        virtual eml20__TimePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__TimePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__TimePerTimeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__TimePerTimeMeasure() { }
        /// Friend allocator used by soap_new_eml20__TimePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__TimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml20__TimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1141 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure (-456)
/* simple XML schema type 'eml20:AreaPerVolumeMeasure': */
class SOAP_CMAC eml20__AreaPerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaPerVolumeUom'
        enum eml20__AreaPerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaPerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaPerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaPerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaPerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaPerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaPerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1143 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure (-457)
/* simple XML schema type 'eml20:ElectricResistanceMeasure': */
class SOAP_CMAC eml20__ElectricResistanceMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:ElectricResistanceUom'
        enum eml20__ElectricResistanceUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__ElectricResistanceMeasure, default initialized and not managed by a soap context
        virtual eml20__ElectricResistanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__ElectricResistanceMeasure); }
      public:
        /// Constructor with default initializations
        eml20__ElectricResistanceMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__ElectricResistanceMeasure() { }
        /// Friend allocator used by soap_new_eml20__ElectricResistanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__ElectricResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml20__ElectricResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1145 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure (-458)
/* simple XML schema type 'eml20:VolumePerVolumeMeasure': */
class SOAP_CMAC eml20__VolumePerVolumeMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:VolumePerVolumeUom'
        enum eml20__VolumePerVolumeUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__VolumePerVolumeMeasure, default initialized and not managed by a soap context
        virtual eml20__VolumePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__VolumePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        eml20__VolumePerVolumeMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__VolumePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_eml20__VolumePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__VolumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml20__VolumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1147 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure (-459)
/* simple XML schema type 'eml20:AreaMeasure': */
class SOAP_CMAC eml20__AreaMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:AreaUom'
        enum eml20__AreaUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__AreaMeasure, default initialized and not managed by a soap context
        virtual eml20__AreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__AreaMeasure); }
      public:
        /// Constructor with default initializations
        eml20__AreaMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__AreaMeasure() { }
        /// Friend allocator used by soap_new_eml20__AreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__AreaMeasure * SOAP_FMAC2 soap_instantiate_eml20__AreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1149 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure (-460)
/* simple XML schema type 'eml20:LengthPerMassMeasure': */
class SOAP_CMAC eml20__LengthPerMassMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:LengthPerMassUom'
        enum eml20__LengthPerMassUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__LengthPerMassMeasure, default initialized and not managed by a soap context
        virtual eml20__LengthPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__LengthPerMassMeasure); }
      public:
        /// Constructor with default initializations
        eml20__LengthPerMassMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__LengthPerMassMeasure() { }
        /// Friend allocator used by soap_new_eml20__LengthPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__LengthPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml20__LengthPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1151 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure (-461)
/* simple XML schema type 'eml20:MobilityMeasure': */
class SOAP_CMAC eml20__MobilityMeasure {
      public:
        /// Simple content of XML schema type 'eml20:Measure' wrapped by this struct
        double __item;
        /// Required attribute 'uom' of XML schema type 'eml20:MobilityUom'
        enum eml20__MobilityUom uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type eml20__MobilityMeasure, default initialized and not managed by a soap context
        virtual eml20__MobilityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(eml20__MobilityMeasure); }
      public:
        /// Constructor with default initializations
        eml20__MobilityMeasure() : __item(), uom(), soap() { }
        virtual ~eml20__MobilityMeasure() { }
        /// Friend allocator used by soap_new_eml20__MobilityMeasure(struct soap*, int)
        friend SOAP_FMAC1 eml20__MobilityMeasure * SOAP_FMAC2 soap_instantiate_eml20__MobilityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1159 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType (-465)
/* complex XML schema type 'gml:DefinitionType': */
class SOAP_CMAC gml__DefinitionType : public gml__DefinitionBaseType {
      public:
        /// Optional element 'gml:remarks' of XML schema type 'xsd:string'
        std::string *remarks;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__DefinitionType, default initialized and not managed by a soap context
        virtual gml__DefinitionType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__DefinitionType); }
      public:
        /// Constructor with default initializations
        gml__DefinitionType() : remarks() { }
        virtual ~gml__DefinitionType() { }
        /// Friend allocator used by soap_new_gml__DefinitionType(struct soap*, int)
        friend SOAP_FMAC1 gml__DefinitionType * SOAP_FMAC2 soap_instantiate_gml__DefinitionType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1169 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType (-470)
/* simple XML schema type 'gml:CodeWithAuthorityType': */
class SOAP_CMAC gml__CodeWithAuthorityType : public gml__CodeType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CodeWithAuthorityType, default initialized and not managed by a soap context
        virtual gml__CodeWithAuthorityType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CodeWithAuthorityType); }
      public:
        /// Constructor with default initializations
        gml__CodeWithAuthorityType() { }
        virtual ~gml__CodeWithAuthorityType() { }
        /// Friend allocator used by soap_new_gml__CodeWithAuthorityType(struct soap*, int)
        friend SOAP_FMAC1 gml__CodeWithAuthorityType * SOAP_FMAC2 soap_instantiate_gml__CodeWithAuthorityType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1173 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType (-472)
/* complex XML schema type 'gml:AbstractTimePrimitiveType': */
class SOAP_CMAC gml__AbstractTimePrimitiveType : public gml__AbstractTimeObjectType {
      public:
        /// Optional element 'gml:relatedTime' of XML schema type 'gml:RelatedTimeType'
        std::vector<gml__RelatedTimeType *> relatedTime;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractTimePrimitiveType, default initialized and not managed by a soap context
        virtual gml__AbstractTimePrimitiveType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractTimePrimitiveType); }
      public:
        /// Constructor with default initializations
        gml__AbstractTimePrimitiveType() : relatedTime() { }
        virtual ~gml__AbstractTimePrimitiveType() { }
        /// Friend allocator used by soap_new_gml__AbstractTimePrimitiveType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractTimePrimitiveType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimePrimitiveType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1209 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType (-490)
/* simple XML schema type 'gml:AngleType': */
class SOAP_CMAC gml__AngleType : public gml__MeasureType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AngleType, default initialized and not managed by a soap context
        virtual gml__AngleType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AngleType); }
      public:
        /// Constructor with default initializations
        gml__AngleType() { }
        virtual ~gml__AngleType() { }
        /// Friend allocator used by soap_new_gml__AngleType(struct soap*, int)
        friend SOAP_FMAC1 gml__AngleType * SOAP_FMAC2 soap_instantiate_gml__AngleType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1217 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType (-494)
/* simple XML schema type 'gml:LengthType': */
class SOAP_CMAC gml__LengthType : public gml__MeasureType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__LengthType, default initialized and not managed by a soap context
        virtual gml__LengthType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__LengthType); }
      public:
        /// Constructor with default initializations
        gml__LengthType() { }
        virtual ~gml__LengthType() { }
        /// Friend allocator used by soap_new_gml__LengthType(struct soap*, int)
        friend SOAP_FMAC1 gml__LengthType * SOAP_FMAC2 soap_instantiate_gml__LengthType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1265 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType (-518)
/* complex XML schema type 'gmd:AbstractDQ_PositionalAccuracy_Type': */
class SOAP_CMAC gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType : public gmd__AbstractDQ_USCOREElement_USCOREType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType, default initialized and not managed by a soap context
        virtual gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType); }
      public:
        /// Constructor with default initializations
        gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType() { }
        virtual ~gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType() { }
        /// Friend allocator used by soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int)
        friend SOAP_FMAC1 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:309 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind (-40)
/* complex XML schema type 'resqml20:obj_PropertyKind': */
class SOAP_CMAC resqml20__obj_USCOREPropertyKind : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:NamingSystem' of XML schema type 'xsd:anyURI'
        std::string NamingSystem;
        /// Required element 'resqml20:IsAbstract' of XML schema type 'xsd:boolean'
        bool IsAbstract;
        /// Required element 'resqml20:RepresentativeUom' of XML schema type 'resqml20:ResqmlUom'
        enum resqml20__ResqmlUom RepresentativeUom;
        /// Required element 'resqml20:ParentPropertyKind' of XML schema type 'resqml20:AbstractPropertyKind'
        resqml20__AbstractPropertyKind *ParentPropertyKind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPropertyKind, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPropertyKind *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPropertyKind); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPropertyKind() : NamingSystem(), IsAbstract(), RepresentativeUom(), ParentPropertyKind() { }
        virtual ~resqml20__obj_USCOREPropertyKind() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPropertyKind(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPropertyKind * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPropertyKind(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:323 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup (-47)
/* complex XML schema type 'resqml20:AbstractPropertyLookup': */
class SOAP_CMAC resqml20__AbstractPropertyLookup : public resqml20__AbstractResqmlDataObject {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractPropertyLookup, default initialized and not managed by a soap context
        virtual resqml20__AbstractPropertyLookup *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractPropertyLookup); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractPropertyLookup() { }
        virtual ~resqml20__AbstractPropertyLookup() { }
        /// Friend allocator used by soap_new_resqml20__AbstractPropertyLookup(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractPropertyLookup * SOAP_FMAC2 soap_instantiate_resqml20__AbstractPropertyLookup(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:327 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet (-49)
/* complex XML schema type 'resqml20:obj_PropertySet': */
class SOAP_CMAC resqml20__obj_USCOREPropertySet : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:TimeSetKind' of XML schema type 'resqml20:TimeSetKind'
        enum resqml20__TimeSetKind TimeSetKind;
        /// Required element 'resqml20:HasSinglePropertyKind' of XML schema type 'xsd:boolean'
        bool HasSinglePropertyKind;
        /// Required element 'resqml20:HasMultipleRealizations' of XML schema type 'xsd:boolean'
        bool HasMultipleRealizations;
        /// Optional element 'resqml20:ParentSet' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> ParentSet;
        /// Required element 'resqml20:Properties' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Properties;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPropertySet, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPropertySet *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPropertySet); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPropertySet() : TimeSetKind(), HasSinglePropertyKind(), HasMultipleRealizations(), ParentSet(), Properties() { }
        virtual ~resqml20__obj_USCOREPropertySet() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPropertySet(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPropertySet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPropertySet(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:329 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty (-50)
/* complex XML schema type 'resqml20:AbstractProperty': */
class SOAP_CMAC resqml20__AbstractProperty : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:IndexableElement' of XML schema type 'resqml20:IndexableElements'
        enum resqml20__IndexableElements IndexableElement;
        /// Optional element 'resqml20:RealizationIndex' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *RealizationIndex;
        /// Optional element 'resqml20:TimeStep' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 *TimeStep;
        /// Optional element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
        /// Optional element 'resqml20:LocalCrs' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *LocalCrs;
        /// Required element 'resqml20:PropertyKind' of XML schema type 'resqml20:AbstractPropertyKind'
        resqml20__AbstractPropertyKind *PropertyKind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractProperty, default initialized and not managed by a soap context
        virtual resqml20__AbstractProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractProperty); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractProperty() : Count(), IndexableElement(), RealizationIndex(), TimeStep(), TimeIndex(), SupportingRepresentation(), LocalCrs(), PropertyKind() { }
        virtual ~resqml20__AbstractProperty() { }
        /// Friend allocator used by soap_new_resqml20__AbstractProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractProperty * SOAP_FMAC2 soap_instantiate_resqml20__AbstractProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:409 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet (-90)
/* complex XML schema type 'resqml20:obj_RepresentationIdentitySet': */
class SOAP_CMAC resqml20__obj_USCORERepresentationIdentitySet : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:RepresentationIdentity' of XML schema type 'resqml20:RepresentationIdentity'
        std::vector<resqml20__RepresentationIdentity *> RepresentationIdentity;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERepresentationIdentitySet, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERepresentationIdentitySet *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERepresentationIdentitySet); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERepresentationIdentitySet() : RepresentationIdentity() { }
        virtual ~resqml20__obj_USCORERepresentationIdentitySet() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERepresentationIdentitySet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERepresentationIdentitySet(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:413 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation (-92)
/* complex XML schema type 'resqml20:AbstractRepresentation': */
class SOAP_CMAC resqml20__AbstractRepresentation : public resqml20__AbstractResqmlDataObject {
      public:
        /// Optional element 'resqml20:RepresentedInterpretation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *RepresentedInterpretation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractRepresentation() : RepresentedInterpretation() { }
        virtual ~resqml20__AbstractRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:433 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet (-102)
/* complex XML schema type 'resqml20:obj_LocalGridSet': */
class SOAP_CMAC resqml20__obj_USCORELocalGridSet : public resqml20__AbstractResqmlDataObject {
      public:
        /// Optional element 'resqml20:Activation' of XML schema type 'resqml20:Activation'
        resqml20__Activation *Activation;
        /// Required element 'resqml20:ChildGrid' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> ChildGrid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORELocalGridSet, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORELocalGridSet *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORELocalGridSet); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORELocalGridSet() : Activation(), ChildGrid() { }
        virtual ~resqml20__obj_USCORELocalGridSet() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORELocalGridSet(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORELocalGridSet * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalGridSet(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:495 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry (-133)
/* complex XML schema type 'resqml20:UnstructuredGridGeometry': */
class SOAP_CMAC resqml20__UnstructuredGridGeometry : public resqml20__AbstractGridGeometry {
      public:
        /// Required element 'resqml20:CellShape' of XML schema type 'resqml20:CellShape'
        enum resqml20__CellShape CellShape;
        /// Required element 'resqml20:NodeCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 NodeCount;
        /// Required element 'resqml20:FaceCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 FaceCount;
        /// Required element 'resqml20:NodesPerFace' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *NodesPerFace;
        /// Required element 'resqml20:FacesPerCell' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *FacesPerCell;
        /// Required element 'resqml20:CellFaceIsRightHanded' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *CellFaceIsRightHanded;
        /// Optional element 'resqml20:HingeNodeFaces' of XML schema type 'resqml20:UnstructuredGridHingeNodeFaces'
        resqml20__UnstructuredGridHingeNodeFaces *HingeNodeFaces;
        /// Optional element 'resqml20:SubnodeTopology' of XML schema type 'resqml20:UnstructuredSubnodeTopology'
        resqml20__UnstructuredSubnodeTopology *SubnodeTopology;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UnstructuredGridGeometry, default initialized and not managed by a soap context
        virtual resqml20__UnstructuredGridGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UnstructuredGridGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__UnstructuredGridGeometry() : CellShape(), NodeCount(), FaceCount(), NodesPerFace(), FacesPerCell(), CellFaceIsRightHanded(), HingeNodeFaces(), SubnodeTopology() { }
        virtual ~resqml20__UnstructuredGridGeometry() { }
        /// Friend allocator used by soap_new_resqml20__UnstructuredGridGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UnstructuredGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredGridGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:525 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry (-148)
/* complex XML schema type 'resqml20:AbstractColumnLayerGridGeometry': */
class SOAP_CMAC resqml20__AbstractColumnLayerGridGeometry : public resqml20__AbstractGridGeometry {
      public:
        /// Required element 'resqml20:KDirection' of XML schema type 'resqml20:KDirection'
        enum resqml20__KDirection KDirection;
        /// Required element 'resqml20:PillarGeometryIsDefined' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *PillarGeometryIsDefined;
        /// Required element 'resqml20:PillarShape' of XML schema type 'resqml20:PillarShape'
        enum resqml20__PillarShape PillarShape;
        /// Optional element 'resqml20:CellGeometryIsDefined' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *CellGeometryIsDefined;
        /// Optional element 'resqml20:NodeIsColocatedInKDirection' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *NodeIsColocatedInKDirection;
        /// Optional element 'resqml20:NodeIsColocatedOnKEdge' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *NodeIsColocatedOnKEdge;
        /// Optional element 'resqml20:SubnodeTopology' of XML schema type 'resqml20:ColumnLayerSubnodeTopology'
        resqml20__ColumnLayerSubnodeTopology *SubnodeTopology;
        /// Optional element 'resqml20:SplitCoordinateLines' of XML schema type 'resqml20:ColumnLayerSplitCoordinateLines'
        resqml20__ColumnLayerSplitCoordinateLines *SplitCoordinateLines;
        /// Optional element 'resqml20:SplitNodes' of XML schema type 'resqml20:SplitNodePatch'
        resqml20__SplitNodePatch *SplitNodes;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractColumnLayerGridGeometry, default initialized and not managed by a soap context
        virtual resqml20__AbstractColumnLayerGridGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractColumnLayerGridGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractColumnLayerGridGeometry() : KDirection(), PillarGeometryIsDefined(), PillarShape(), CellGeometryIsDefined(), NodeIsColocatedInKDirection(), NodeIsColocatedOnKEdge(), SubnodeTopology(), SplitCoordinateLines(), SplitNodes() { }
        virtual ~resqml20__AbstractColumnLayerGridGeometry() { }
        /// Friend allocator used by soap_new_resqml20__AbstractColumnLayerGridGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__AbstractColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:529 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation (-150)
/* complex XML schema type 'resqml20:AbstractFeatureInterpretation': */
class SOAP_CMAC resqml20__AbstractFeatureInterpretation : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Domain' of XML schema type 'resqml20:Domain'
        enum resqml20__Domain Domain;
        /// Required element 'resqml20:InterpretedFeature' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *InterpretedFeature;
        /// Optional element 'resqml20:HasOccuredDuring' of XML schema type 'resqml20:TimeInterval'
        resqml20__TimeInterval *HasOccuredDuring;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractFeatureInterpretation, default initialized and not managed by a soap context
        virtual resqml20__AbstractFeatureInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractFeatureInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractFeatureInterpretation() : Domain(), InterpretedFeature(), HasOccuredDuring() { }
        virtual ~resqml20__AbstractFeatureInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractFeatureInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:561 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn (-166)
/* complex XML schema type 'resqml20:obj_StratigraphicColumn': */
class SOAP_CMAC resqml20__obj_USCOREStratigraphicColumn : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Ranks' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Ranks;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStratigraphicColumn, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStratigraphicColumn *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStratigraphicColumn); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStratigraphicColumn() : Ranks() { }
        virtual ~resqml20__obj_USCOREStratigraphicColumn() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStratigraphicColumn(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:597 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn (-184)
/* complex XML schema type 'resqml20:obj_GlobalChronostratigraphicColumn': */
class SOAP_CMAC resqml20__obj_USCOREGlobalChronostratigraphicColumn : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:ChronostratigraphicColumnComponent' of XML schema type 'resqml20:ChronostratigraphicRank'
        std::vector<resqml20__ChronostratigraphicRank *> ChronostratigraphicColumnComponent;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGlobalChronostratigraphicColumn, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGlobalChronostratigraphicColumn *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGlobalChronostratigraphicColumn); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGlobalChronostratigraphicColumn() : ChronostratigraphicColumnComponent() { }
        virtual ~resqml20__obj_USCOREGlobalChronostratigraphicColumn() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:611 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature (-191)
/* complex XML schema type 'resqml20:AbstractFeature': */
class SOAP_CMAC resqml20__AbstractFeature : public resqml20__AbstractResqmlDataObject {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractFeature, default initialized and not managed by a soap context
        virtual resqml20__AbstractFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractFeature); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractFeature() { }
        virtual ~resqml20__AbstractFeature() { }
        /// Friend allocator used by soap_new_resqml20__AbstractFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:623 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs (-197)
/* complex XML schema type 'resqml20:AbstractLocal3dCrs': */
class SOAP_CMAC resqml20__AbstractLocal3dCrs : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:YOffset' of XML schema type 'xsd:double'
        double YOffset;
        /// Required element 'resqml20:ZOffset' of XML schema type 'xsd:double'
        double ZOffset;
        /// Required element 'resqml20:ArealRotation' of XML schema type 'eml20:PlaneAngleMeasure'
        eml20__PlaneAngleMeasure *ArealRotation;
        /// Required element 'resqml20:ProjectedAxisOrder' of XML schema type 'eml20:AxisOrder2d'
        enum eml20__AxisOrder2d ProjectedAxisOrder;
        /// Required element 'resqml20:ProjectedUom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom ProjectedUom;
        /// Required element 'resqml20:VerticalUom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom VerticalUom;
        /// Required element 'resqml20:XOffset' of XML schema type 'xsd:double'
        double XOffset;
        /// Required element 'resqml20:ZIncreasingDownward' of XML schema type 'xsd:boolean'
        bool ZIncreasingDownward;
        /// Required element 'resqml20:VerticalCrs' of XML schema type 'eml20:AbstractVerticalCrs'
        eml20__AbstractVerticalCrs *VerticalCrs;
        /// Required element 'resqml20:ProjectedCrs' of XML schema type 'eml20:AbstractProjectedCrs'
        eml20__AbstractProjectedCrs *ProjectedCrs;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractLocal3dCrs, default initialized and not managed by a soap context
        virtual resqml20__AbstractLocal3dCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractLocal3dCrs); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractLocal3dCrs() : YOffset(), ZOffset(), ArealRotation(), ProjectedAxisOrder(), ProjectedUom(), VerticalUom(), XOffset(), ZIncreasingDownward(), VerticalCrs(), ProjectedCrs() { }
        virtual ~resqml20__AbstractLocal3dCrs() { }
        /// Friend allocator used by soap_new_resqml20__AbstractLocal3dCrs(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractLocal3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__AbstractLocal3dCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:631 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries (-201)
/* complex XML schema type 'resqml20:obj_TimeSeries': */
class SOAP_CMAC resqml20__obj_USCORETimeSeries : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Time' of XML schema type 'resqml20:Timestamp'
        std::vector<resqml20__Timestamp *> Time;
        /// Optional element 'resqml20:TimeSeriesParentage' of XML schema type 'resqml20:TimeSeriesParentage'
        resqml20__TimeSeriesParentage *TimeSeriesParentage;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORETimeSeries, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORETimeSeries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORETimeSeries); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORETimeSeries() : Time(), TimeSeriesParentage() { }
        virtual ~resqml20__obj_USCORETimeSeries() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORETimeSeries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORETimeSeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETimeSeries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:645 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum (-208)
/* complex XML schema type 'resqml20:obj_MdDatum': */
class SOAP_CMAC resqml20__obj_USCOREMdDatum : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Location' of XML schema type 'resqml20:Point3d'
        resqml20__Point3d *Location;
        /// Required element 'resqml20:MdReference' of XML schema type 'resqml20:MdReference'
        enum resqml20__MdReference MdReference;
        /// Required element 'resqml20:LocalCrs' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *LocalCrs;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREMdDatum, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREMdDatum *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREMdDatum); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREMdDatum() : Location(), MdReference(), LocalCrs() { }
        virtual ~resqml20__obj_USCOREMdDatum() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREMdDatum(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREMdDatum * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREMdDatum(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:647 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker (-209)
/* complex XML schema type 'resqml20:WellboreMarker': */
class SOAP_CMAC resqml20__WellboreMarker : public resqml20__AbstractResqmlDataObject {
      public:
        /// Optional element 'resqml20:FluidContact' of XML schema type 'resqml20:FluidContact'
        enum resqml20__FluidContact *FluidContact;
        /// Optional element 'resqml20:FluidMarker' of XML schema type 'resqml20:FluidMarker'
        enum resqml20__FluidMarker *FluidMarker;
        /// Optional element 'resqml20:GeologicBoundaryKind' of XML schema type 'resqml20:GeologicBoundaryKind'
        enum resqml20__GeologicBoundaryKind *GeologicBoundaryKind;
        /// Optional element 'resqml20:WitsmlFormationMarker' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlFormationMarker;
        /// Optional element 'resqml20:Interpretation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Interpretation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__WellboreMarker, default initialized and not managed by a soap context
        virtual resqml20__WellboreMarker *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__WellboreMarker); }
      public:
        /// Constructor with default initializations
        resqml20__WellboreMarker() : FluidContact(), FluidMarker(), GeologicBoundaryKind(), WitsmlFormationMarker(), Interpretation() { }
        virtual ~resqml20__WellboreMarker() { }
        /// Friend allocator used by soap_new_resqml20__WellboreMarker(struct soap*, int)
        friend SOAP_FMAC1 resqml20__WellboreMarker * SOAP_FMAC2 soap_instantiate_resqml20__WellboreMarker(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:727 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity (-249)
/* complex XML schema type 'resqml20:obj_Activity': */
class SOAP_CMAC resqml20__obj_USCOREActivity : public resqml20__AbstractResqmlDataObject {
      public:
        /// Optional element 'resqml20:Parent' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Parent;
        /// Required element 'resqml20:ActivityDescriptor' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ActivityDescriptor;
        /// Required element 'resqml20:Parameter' of XML schema type 'resqml20:AbstractActivityParameter'
        std::vector<resqml20__AbstractActivityParameter *> Parameter;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREActivity, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREActivity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREActivity); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREActivity() : Parent(), ActivityDescriptor(), Parameter() { }
        virtual ~resqml20__obj_USCOREActivity() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREActivity(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREActivity * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREActivity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:745 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate (-258)
/* complex XML schema type 'resqml20:obj_ActivityTemplate': */
class SOAP_CMAC resqml20__obj_USCOREActivityTemplate : public resqml20__AbstractResqmlDataObject {
      public:
        /// Required element 'resqml20:Parameter' of XML schema type 'resqml20:ParameterTemplate'
        std::vector<resqml20__ParameterTemplate *> Parameter;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREActivityTemplate, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREActivityTemplate *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREActivityTemplate); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREActivityTemplate() : Parameter() { }
        virtual ~resqml20__obj_USCOREActivityTemplate() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREActivityTemplate(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREActivityTemplate * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREActivityTemplate(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1157 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType (-464)
/* complex XML schema type 'gml:IdentifiedObjectType': */
class SOAP_CMAC gml__IdentifiedObjectType : public gml__DefinitionType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__IdentifiedObjectType, default initialized and not managed by a soap context
        virtual gml__IdentifiedObjectType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__IdentifiedObjectType); }
      public:
        /// Constructor with default initializations
        gml__IdentifiedObjectType() { }
        virtual ~gml__IdentifiedObjectType() { }
        /// Friend allocator used by soap_new_gml__IdentifiedObjectType(struct soap*, int)
        friend SOAP_FMAC1 gml__IdentifiedObjectType * SOAP_FMAC2 soap_instantiate_gml__IdentifiedObjectType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:279 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup (-25)
/* complex XML schema type 'resqml20:obj_DoubleTableLookup': */
class SOAP_CMAC resqml20__obj_USCOREDoubleTableLookup : public resqml20__AbstractPropertyLookup {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'resqml20:DoubleLookup'
        std::vector<resqml20__DoubleLookup *> Value;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREDoubleTableLookup, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREDoubleTableLookup *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREDoubleTableLookup); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREDoubleTableLookup() : Value() { }
        virtual ~resqml20__obj_USCOREDoubleTableLookup() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREDoubleTableLookup(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREDoubleTableLookup * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDoubleTableLookup(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:289 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty (-30)
/* complex XML schema type 'resqml20:obj_PointsProperty': */
class SOAP_CMAC resqml20__obj_USCOREPointsProperty : public resqml20__AbstractProperty {
      public:
        /// Required element 'resqml20:PatchOfPoints' of XML schema type 'resqml20:PatchOfPoints'
        std::vector<resqml20__PatchOfPoints *> PatchOfPoints;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPointsProperty, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPointsProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPointsProperty); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPointsProperty() : PatchOfPoints() { }
        virtual ~resqml20__obj_USCOREPointsProperty() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPointsProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPointsProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPointsProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:311 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup (-41)
/* complex XML schema type 'resqml20:obj_StringTableLookup': */
class SOAP_CMAC resqml20__obj_USCOREStringTableLookup : public resqml20__AbstractPropertyLookup {
      public:
        /// Required element 'resqml20:Value' of XML schema type 'resqml20:StringLookup'
        std::vector<resqml20__StringLookup *> Value;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStringTableLookup, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStringTableLookup *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStringTableLookup); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStringTableLookup() : Value() { }
        virtual ~resqml20__obj_USCOREStringTableLookup() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStringTableLookup(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStringTableLookup * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStringTableLookup(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:339 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty (-55)
/* complex XML schema type 'resqml20:AbstractValuesProperty': */
class SOAP_CMAC resqml20__AbstractValuesProperty : public resqml20__AbstractProperty {
      public:
        /// Required element 'resqml20:PatchOfValues' of XML schema type 'resqml20:PatchOfValues'
        std::vector<resqml20__PatchOfValues *> PatchOfValues;
        /// Optional element 'resqml20:Facet' of XML schema type 'resqml20:PropertyKindFacet'
        std::vector<resqml20__PropertyKindFacet *> Facet;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractValuesProperty, default initialized and not managed by a soap context
        virtual resqml20__AbstractValuesProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractValuesProperty); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractValuesProperty() : PatchOfValues(), Facet() { }
        virtual ~resqml20__AbstractValuesProperty() { }
        /// Friend allocator used by soap_new_resqml20__AbstractValuesProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractValuesProperty * SOAP_FMAC2 soap_instantiate_resqml20__AbstractValuesProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:403 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation (-87)
/* complex XML schema type 'resqml20:obj_RepresentationSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCORERepresentationSetRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:IsHomogeneous' of XML schema type 'xsd:boolean'
        bool IsHomogeneous;
        /// Required element 'resqml20:Representation' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Representation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERepresentationSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERepresentationSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERepresentationSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERepresentationSetRepresentation() : IsHomogeneous(), Representation() { }
        virtual ~resqml20__obj_USCORERepresentationSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERepresentationSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERepresentationSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:405 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation (-88)
/* complex XML schema type 'resqml20:obj_RedefinedGeometryRepresentation': */
class SOAP_CMAC resqml20__obj_USCORERedefinedGeometryRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:PatchOfGeometry' of XML schema type 'resqml20:PatchOfGeometry'
        std::vector<resqml20__PatchOfGeometry *> PatchOfGeometry;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERedefinedGeometryRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERedefinedGeometryRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERedefinedGeometryRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERedefinedGeometryRepresentation() : PatchOfGeometry(), SupportingRepresentation() { }
        virtual ~resqml20__obj_USCORERedefinedGeometryRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERedefinedGeometryRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:417 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation (-94)
/* complex XML schema type 'resqml20:obj_SubRepresentation': */
class SOAP_CMAC resqml20__obj_USCORESubRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Optional element 'resqml20:AdditionalGridTopology' of XML schema type 'resqml20:AdditionalGridTopology'
        resqml20__AdditionalGridTopology *AdditionalGridTopology;
        /// Required element 'resqml20:SupportingRepresentation' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *SupportingRepresentation;
        /// Required element 'resqml20:SubRepresentationPatch' of XML schema type 'resqml20:SubRepresentationPatch'
        std::vector<resqml20__SubRepresentationPatch *> SubRepresentationPatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESubRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESubRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESubRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESubRepresentation() : AdditionalGridTopology(), SupportingRepresentation(), SubRepresentationPatch() { }
        virtual ~resqml20__obj_USCORESubRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESubRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESubRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESubRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:435 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation (-103)
/* complex XML schema type 'resqml20:AbstractGridRepresentation': */
class SOAP_CMAC resqml20__AbstractGridRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Optional element 'resqml20:CellFluidPhaseUnits' of XML schema type 'resqml20:CellFluidPhaseUnits'
        resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits;
        /// Optional element 'resqml20:ParentWindow' of XML schema type 'resqml20:AbstractParentWindow'
        resqml20__AbstractParentWindow *ParentWindow;
        /// Optional element 'resqml20:CellStratigraphicUnits' of XML schema type 'resqml20:CellStratigraphicUnits'
        resqml20__CellStratigraphicUnits *CellStratigraphicUnits;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractGridRepresentation() : CellFluidPhaseUnits(), ParentWindow(), CellStratigraphicUnits() { }
        virtual ~resqml20__AbstractGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:481 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry (-126)
/* complex XML schema type 'resqml20:UnstructuredColumnLayerGridGeometry': */
class SOAP_CMAC resqml20__UnstructuredColumnLayerGridGeometry : public resqml20__AbstractColumnLayerGridGeometry {
      public:
        /// Required element 'resqml20:ColumnShape' of XML schema type 'resqml20:ColumnShape'
        enum resqml20__ColumnShape ColumnShape;
        /// Required element 'resqml20:PillarCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 PillarCount;
        /// Required element 'resqml20:PillarsPerColumn' of XML schema type 'resqml20:ResqmlJaggedArray'
        resqml20__ResqmlJaggedArray *PillarsPerColumn;
        /// Required element 'resqml20:ColumnIsRightHanded' of XML schema type 'resqml20:AbstractBooleanArray'
        resqml20__AbstractBooleanArray *ColumnIsRightHanded;
        /// Optional element 'resqml20:ColumnEdges' of XML schema type 'resqml20:UnstructuredColumnEdges'
        resqml20__UnstructuredColumnEdges *ColumnEdges;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__UnstructuredColumnLayerGridGeometry, default initialized and not managed by a soap context
        virtual resqml20__UnstructuredColumnLayerGridGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__UnstructuredColumnLayerGridGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__UnstructuredColumnLayerGridGeometry() : ColumnShape(), PillarCount(), PillarsPerColumn(), ColumnIsRightHanded(), ColumnEdges() { }
        virtual ~resqml20__UnstructuredColumnLayerGridGeometry() { }
        /// Friend allocator used by soap_new_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__UnstructuredColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__UnstructuredColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:483 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry (-127)
/* complex XML schema type 'resqml20:IjkGridGeometry': */
class SOAP_CMAC resqml20__IjkGridGeometry : public resqml20__AbstractColumnLayerGridGeometry {
      public:
        /// Required element 'resqml20:GridIsRighthanded' of XML schema type 'xsd:boolean'
        bool GridIsRighthanded;
        /// Optional element 'resqml20:IjGaps' of XML schema type 'resqml20:IjGaps'
        resqml20__IjGaps *IjGaps;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__IjkGridGeometry, default initialized and not managed by a soap context
        virtual resqml20__IjkGridGeometry *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__IjkGridGeometry); }
      public:
        /// Constructor with default initializations
        resqml20__IjkGridGeometry() : GridIsRighthanded(), IjGaps() { }
        virtual ~resqml20__IjkGridGeometry() { }
        /// Friend allocator used by soap_new_resqml20__IjkGridGeometry(struct soap*, int)
        friend SOAP_FMAC1 resqml20__IjkGridGeometry * SOAP_FMAC2 soap_instantiate_resqml20__IjkGridGeometry(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:509 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation (-140)
/* complex XML schema type 'resqml20:obj_GridConnectionSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREGridConnectionSetRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:Count' of XML schema type 'xsd:positiveInteger'
        ULONG64 Count;
        /// Required element 'resqml20:CellIndexPairs' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CellIndexPairs;
        /// Optional element 'resqml20:GridIndexPairs' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *GridIndexPairs;
        /// Optional element 'resqml20:LocalFacePerCellIndexPairs' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *LocalFacePerCellIndexPairs;
        /// Optional element 'resqml20:ConnectionInterpretations' of XML schema type 'resqml20:ConnectionInterpretations'
        resqml20__ConnectionInterpretations *ConnectionInterpretations;
        /// Required element 'resqml20:Grid' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Grid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGridConnectionSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGridConnectionSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGridConnectionSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGridConnectionSetRepresentation() : Count(), CellIndexPairs(), GridIndexPairs(), LocalFacePerCellIndexPairs(), ConnectionInterpretations(), Grid() { }
        virtual ~resqml20__obj_USCOREGridConnectionSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGridConnectionSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:535 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation (-153)
/* complex XML schema type 'resqml20:AbstractOrganizationInterpretation': */
class SOAP_CMAC resqml20__AbstractOrganizationInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Optional element 'resqml20:ContactInterpretation' of XML schema type 'resqml20:AbstractContactInterpretationPart'
        std::vector<resqml20__AbstractContactInterpretationPart *> ContactInterpretation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractOrganizationInterpretation, default initialized and not managed by a soap context
        virtual resqml20__AbstractOrganizationInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractOrganizationInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractOrganizationInterpretation() : ContactInterpretation() { }
        virtual ~resqml20__AbstractOrganizationInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractOrganizationInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:545 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation (-158)
/* complex XML schema type 'resqml20:obj_GenericFeatureInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREGenericFeatureInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGenericFeatureInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGenericFeatureInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGenericFeatureInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGenericFeatureInterpretation() { }
        virtual ~resqml20__obj_USCOREGenericFeatureInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGenericFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:547 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation (-159)
/* complex XML schema type 'resqml20:obj_WellboreInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREWellboreInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Required element 'resqml20:IsDrilled' of XML schema type 'xsd:boolean'
        bool IsDrilled;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREWellboreInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREWellboreInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREWellboreInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREWellboreInterpretation() : IsDrilled() { }
        virtual ~resqml20__obj_USCOREWellboreInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREWellboreInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREWellboreInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:565 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation (-168)
/* complex XML schema type 'resqml20:obj_BoundaryFeatureInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREBoundaryFeatureInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREBoundaryFeatureInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREBoundaryFeatureInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREBoundaryFeatureInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREBoundaryFeatureInterpretation() { }
        virtual ~resqml20__obj_USCOREBoundaryFeatureInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBoundaryFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:569 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation (-170)
/* complex XML schema type 'resqml20:obj_EarthModelInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREEarthModelInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Optional element 'resqml20:StratigraphicOccurrences' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> StratigraphicOccurrences;
        /// Optional element 'resqml20:StratigraphicColumn' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *StratigraphicColumn;
        /// Optional element 'resqml20:Structure' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Structure;
        /// Optional element 'resqml20:Fluid' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Fluid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREEarthModelInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREEarthModelInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREEarthModelInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREEarthModelInterpretation() : StratigraphicOccurrences(), StratigraphicColumn(), Structure(), Fluid() { }
        virtual ~resqml20__obj_USCOREEarthModelInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREEarthModelInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREEarthModelInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:581 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation (-176)
/* complex XML schema type 'resqml20:obj_GeologicUnitInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREGeologicUnitInterpretation : public resqml20__AbstractFeatureInterpretation {
      public:
        /// Optional element 'resqml20:GeologicUnitComposition' of XML schema type 'resqml20:GeologicUnitComposition'
        enum resqml20__GeologicUnitComposition *GeologicUnitComposition;
        /// Optional element 'resqml20:GeologicUnitMaterialImplacement' of XML schema type 'resqml20:GeologicUnitMaterialImplacement'
        enum resqml20__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeologicUnitInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeologicUnitInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeologicUnitInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeologicUnitInterpretation() : GeologicUnitComposition(), GeologicUnitMaterialImplacement() { }
        virtual ~resqml20__obj_USCOREGeologicUnitInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeologicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:601 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature (-186)
/* complex XML schema type 'resqml20:AbstractGeologicFeature': */
class SOAP_CMAC resqml20__AbstractGeologicFeature : public resqml20__AbstractFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractGeologicFeature, default initialized and not managed by a soap context
        virtual resqml20__AbstractGeologicFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractGeologicFeature); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractGeologicFeature() { }
        virtual ~resqml20__AbstractGeologicFeature() { }
        /// Friend allocator used by soap_new_resqml20__AbstractGeologicFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractGeologicFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractGeologicFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:617 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs (-194)
/* complex XML schema type 'resqml20:obj_LocalTime3dCrs': */
class SOAP_CMAC resqml20__obj_USCORELocalTime3dCrs : public resqml20__AbstractLocal3dCrs {
      public:
        /// Required element 'resqml20:TimeUom' of XML schema type 'eml20:TimeUom'
        enum eml20__TimeUom TimeUom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORELocalTime3dCrs, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORELocalTime3dCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORELocalTime3dCrs); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORELocalTime3dCrs() : TimeUom() { }
        virtual ~resqml20__obj_USCORELocalTime3dCrs() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORELocalTime3dCrs(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORELocalTime3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalTime3dCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:629 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs (-200)
/* complex XML schema type 'resqml20:obj_LocalDepth3dCrs': */
class SOAP_CMAC resqml20__obj_USCORELocalDepth3dCrs : public resqml20__AbstractLocal3dCrs {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORELocalDepth3dCrs, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORELocalDepth3dCrs *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORELocalDepth3dCrs); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORELocalDepth3dCrs() { }
        virtual ~resqml20__obj_USCORELocalDepth3dCrs() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORELocalDepth3dCrs * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORELocalDepth3dCrs(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:639 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation (-205)
/* complex XML schema type 'resqml20:obj_DeviationSurveyRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREDeviationSurveyRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Optional element 'resqml20:WitsmlDeviationSurvey' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlDeviationSurvey;
        /// Required element 'resqml20:IsFinal' of XML schema type 'xsd:boolean'
        bool IsFinal;
        /// Required element 'resqml20:StationCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 StationCount;
        /// Required element 'resqml20:MdUom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom MdUom;
        /// Required element 'resqml20:Mds' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *Mds;
        /// Required element 'resqml20:FirstStationLocation' of XML schema type 'resqml20:Point3d'
        resqml20__Point3d *FirstStationLocation;
        /// Required element 'resqml20:AngleUom' of XML schema type 'eml20:PlaneAngleUom'
        enum eml20__PlaneAngleUom AngleUom;
        /// Required element 'resqml20:Azimuths' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *Azimuths;
        /// Required element 'resqml20:Inclinations' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *Inclinations;
        /// Required element 'resqml20:MdDatum' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *MdDatum;
        /// Optional element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREDeviationSurveyRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREDeviationSurveyRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREDeviationSurveyRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREDeviationSurveyRepresentation() : WitsmlDeviationSurvey(), IsFinal(), StationCount(), MdUom(), Mds(), FirstStationLocation(), AngleUom(), Azimuths(), Inclinations(), MdDatum(), TimeIndex() { }
        virtual ~resqml20__obj_USCOREDeviationSurveyRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDeviationSurveyRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:641 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation (-206)
/* complex XML schema type 'resqml20:obj_WellboreFrameRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREWellboreFrameRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:NodeCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 NodeCount;
        /// Required element 'resqml20:NodeMd' of XML schema type 'resqml20:AbstractDoubleArray'
        resqml20__AbstractDoubleArray *NodeMd;
        /// Optional element 'resqml20:WitsmlLogReference' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlLogReference;
        /// Optional element 'resqml20:IntervalStratigraphiUnits' of XML schema type 'resqml20:IntervalStratigraphicUnits'
        resqml20__IntervalStratigraphicUnits *IntervalStratigraphiUnits;
        /// Optional element 'resqml20:CellFluidPhaseUnits' of XML schema type 'resqml20:CellFluidPhaseUnits'
        resqml20__CellFluidPhaseUnits *CellFluidPhaseUnits;
        /// Required element 'resqml20:Trajectory' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Trajectory;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREWellboreFrameRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREWellboreFrameRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREWellboreFrameRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREWellboreFrameRepresentation() : NodeCount(), NodeMd(), WitsmlLogReference(), IntervalStratigraphiUnits(), CellFluidPhaseUnits(), Trajectory() { }
        virtual ~resqml20__obj_USCOREWellboreFrameRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:643 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation (-207)
/* complex XML schema type 'resqml20:obj_WellboreTrajectoryRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREWellboreTrajectoryRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:StartMd' of XML schema type 'xsd:double'
        double StartMd;
        /// Required element 'resqml20:FinishMd' of XML schema type 'xsd:double'
        double FinishMd;
        /// Required element 'resqml20:MdUom' of XML schema type 'eml20:LengthUom'
        enum eml20__LengthUom MdUom;
        /// Optional element 'resqml20:MdDomain' of XML schema type 'resqml20:MdDomain'
        enum resqml20__MdDomain *MdDomain;
        /// Optional element 'resqml20:WitsmlTrajectory' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *WitsmlTrajectory;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:AbstractParametricLineGeometry'
        resqml20__AbstractParametricLineGeometry *Geometry;
        /// Required element 'resqml20:MdDatum' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *MdDatum;
        /// Optional element 'resqml20:DeviationSurvey' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *DeviationSurvey;
        /// Optional element 'resqml20:ParentIntersection' of XML schema type 'resqml20:WellboreTrajectoryParentIntersection'
        resqml20__WellboreTrajectoryParentIntersection *ParentIntersection;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREWellboreTrajectoryRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREWellboreTrajectoryRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREWellboreTrajectoryRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREWellboreTrajectoryRepresentation() : StartMd(), FinishMd(), MdUom(), MdDomain(), WitsmlTrajectory(), Geometry(), MdDatum(), DeviationSurvey(), ParentIntersection() { }
        virtual ~resqml20__obj_USCOREWellboreTrajectoryRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:667 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation (-219)
/* complex XML schema type 'resqml20:obj_PointSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREPointSetRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:NodePatch' of XML schema type 'resqml20:NodePatch'
        std::vector<resqml20__NodePatch *> NodePatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPointSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPointSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPointSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPointSetRepresentation() : NodePatch() { }
        virtual ~resqml20__obj_USCOREPointSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPointSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPointSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPointSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:677 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation (-224)
/* complex XML schema type 'resqml20:obj_PolylineSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREPolylineSetRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Optional element 'resqml20:LineRole' of XML schema type 'resqml20:LineRole'
        enum resqml20__LineRole *LineRole;
        /// Required element 'resqml20:LinePatch' of XML schema type 'resqml20:PolylineSetPatch'
        std::vector<resqml20__PolylineSetPatch *> LinePatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPolylineSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPolylineSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPolylineSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPolylineSetRepresentation() : LineRole(), LinePatch() { }
        virtual ~resqml20__obj_USCOREPolylineSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPolylineSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPolylineSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:685 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation (-228)
/* complex XML schema type 'resqml20:obj_PolylineRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREPolylineRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Optional element 'resqml20:LineRole' of XML schema type 'resqml20:LineRole'
        enum resqml20__LineRole *LineRole;
        /// Required element 'resqml20:IsClosed' of XML schema type 'xsd:boolean'
        bool IsClosed;
        /// Required element 'resqml20:NodePatch' of XML schema type 'resqml20:NodePatch'
        resqml20__NodePatch *NodePatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPolylineRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPolylineRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPolylineRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPolylineRepresentation() : LineRole(), IsClosed(), NodePatch() { }
        virtual ~resqml20__obj_USCOREPolylineRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPolylineRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPolylineRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPolylineRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:691 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation (-231)
/* complex XML schema type 'resqml20:AbstractSurfaceRepresentation': */
class SOAP_CMAC resqml20__AbstractSurfaceRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:SurfaceRole' of XML schema type 'resqml20:SurfaceRole'
        enum resqml20__SurfaceRole SurfaceRole;
        /// Optional element 'resqml20:Boundaries' of XML schema type 'resqml20:PatchBoundaries'
        std::vector<resqml20__PatchBoundaries *> Boundaries;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractSurfaceRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractSurfaceRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractSurfaceRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractSurfaceRepresentation() : SurfaceRole(), Boundaries() { }
        virtual ~resqml20__AbstractSurfaceRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractSurfaceRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractSurfaceRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSurfaceRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:705 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature (-238)
/* complex XML schema type 'resqml20:AbstractTechnicalFeature': */
class SOAP_CMAC resqml20__AbstractTechnicalFeature : public resqml20__AbstractFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractTechnicalFeature, default initialized and not managed by a soap context
        virtual resqml20__AbstractTechnicalFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractTechnicalFeature); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractTechnicalFeature() { }
        virtual ~resqml20__AbstractTechnicalFeature() { }
        /// Friend allocator used by soap_new_resqml20__AbstractTechnicalFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractTechnicalFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractTechnicalFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:751 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation (-261)
/* complex XML schema type 'resqml20:obj_StreamlinesRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREStreamlinesRepresentation : public resqml20__AbstractRepresentation {
      public:
        /// Required element 'resqml20:LineCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 LineCount;
        /// Optional element 'resqml20:StreamlineWellbores' of XML schema type 'resqml20:StreamlineWellbores'
        resqml20__StreamlineWellbores *StreamlineWellbores;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:StreamlinePolylineSetPatch'
        resqml20__StreamlinePolylineSetPatch *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStreamlinesRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStreamlinesRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStreamlinesRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStreamlinesRepresentation() : LineCount(), StreamlineWellbores(), Geometry() { }
        virtual ~resqml20__obj_USCOREStreamlinesRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStreamlinesRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStreamlinesRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1155 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType (-463)
/* complex XML schema type 'gml:AbstractCRSType': */
class SOAP_CMAC gml__AbstractCRSType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XML schema type 'gml:domainOfValidity'
        std::vector<_gml__domainOfValidity *> domainOfValidity;
        /// Required element 'gml:scope' of XML schema type 'xsd:string'
        std::vector<std::string> scope;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCRSType, default initialized and not managed by a soap context
        virtual gml__AbstractCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCRSType); }
      public:
        /// Constructor with default initializations
        gml__AbstractCRSType() : domainOfValidity(), scope() { }
        virtual ~gml__AbstractCRSType() { }
        /// Friend allocator used by soap_new_gml__AbstractCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1185 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType (-478)
/* complex XML schema type 'gml:AbstractCoordinateSystemType': */
class SOAP_CMAC gml__AbstractCoordinateSystemType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:axis' of XML schema type 'gml:CoordinateSystemAxisPropertyType'
        std::vector<gml__CoordinateSystemAxisPropertyType *> axis;
        /// Optional attribute 'aggregationType' of XML schema type 'gml:AggregationType'
        enum gml__AggregationType *aggregationType;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCoordinateSystemType, default initialized and not managed by a soap context
        virtual gml__AbstractCoordinateSystemType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCoordinateSystemType); }
      public:
        /// Constructor with default initializations
        gml__AbstractCoordinateSystemType() : axis(), aggregationType() { }
        virtual ~gml__AbstractCoordinateSystemType() { }
        /// Friend allocator used by soap_new_gml__AbstractCoordinateSystemType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCoordinateSystemType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateSystemType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1189 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType (-480)
/* complex XML schema type 'gml:CoordinateSystemAxisType': */
class SOAP_CMAC gml__CoordinateSystemAxisType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:axisAbbrev' of XML schema type 'gml:CodeType'
        gml__CodeType *axisAbbrev;
        /// Required element 'gml:axisDirection' of XML schema type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *axisDirection;
        /// Optional element 'gml:minimumValue' of XML schema type 'xsd:double'
        double *minimumValue;
        /// Optional element 'gml:maximumValue' of XML schema type 'xsd:double'
        double *maximumValue;
        /// Optional element 'gml:rangeMeaning' of XML schema type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *rangeMeaning;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CoordinateSystemAxisType, default initialized and not managed by a soap context
        virtual gml__CoordinateSystemAxisType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CoordinateSystemAxisType); }
      public:
        /// Constructor with default initializations
        gml__CoordinateSystemAxisType() : axisAbbrev(), axisDirection(), minimumValue(), maximumValue(), rangeMeaning() { }
        virtual ~gml__CoordinateSystemAxisType() { }
        /// Friend allocator used by soap_new_gml__CoordinateSystemAxisType(struct soap*, int)
        friend SOAP_FMAC1 gml__CoordinateSystemAxisType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1203 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType (-487)
/* complex XML schema type 'gml:AbstractDatumType': */
class SOAP_CMAC gml__AbstractDatumType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XML schema type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XML schema type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:anchorDefinition' of XML schema type 'gml:CodeType'
        gml__CodeType *anchorDefinition;
        /// Optional element 'gml:realizationEpoch' of XML schema type 'xsd:date'
        std::string *realizationEpoch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractDatumType, default initialized and not managed by a soap context
        virtual gml__AbstractDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractDatumType); }
      public:
        /// Constructor with default initializations
        gml__AbstractDatumType() : domainOfValidity(), scope(), anchorDefinition(), realizationEpoch() { }
        virtual ~gml__AbstractDatumType() { }
        /// Friend allocator used by soap_new_gml__AbstractDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractDatumType * SOAP_FMAC2 soap_instantiate_gml__AbstractDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1207 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType (-489)
/* complex XML schema type 'gml:PrimeMeridianType': */
class SOAP_CMAC gml__PrimeMeridianType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:greenwichLongitude' of XML schema type 'gml:AngleType'
        gml__AngleType *greenwichLongitude;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__PrimeMeridianType, default initialized and not managed by a soap context
        virtual gml__PrimeMeridianType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__PrimeMeridianType); }
      public:
        /// Constructor with default initializations
        gml__PrimeMeridianType() : greenwichLongitude() { }
        virtual ~gml__PrimeMeridianType() { }
        /// Friend allocator used by soap_new_gml__PrimeMeridianType(struct soap*, int)
        friend SOAP_FMAC1 gml__PrimeMeridianType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1215 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType (-493)
/* complex XML schema type 'gml:EllipsoidType': */
class SOAP_CMAC gml__EllipsoidType : public gml__IdentifiedObjectType {
      public:
        /// Required element 'gml:semiMajorAxis' of XML schema type 'gml:MeasureType'
        gml__MeasureType *semiMajorAxis;
        /// Required element 'gml:secondDefiningParameter' of XML schema type 'gml:secondDefiningParameter'
        _gml__secondDefiningParameter *secondDefiningParameter;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidType, default initialized and not managed by a soap context
        virtual gml__EllipsoidType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidType); }
      public:
        /// Constructor with default initializations
        gml__EllipsoidType() : semiMajorAxis(), secondDefiningParameter() { }
        virtual ~gml__EllipsoidType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1227 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType (-499)
/* complex XML schema type 'gml:AbstractCoordinateOperationType': */
class SOAP_CMAC gml__AbstractCoordinateOperationType : public gml__IdentifiedObjectType {
      public:
        /// Optional element 'gml:domainOfValidity' of XML schema type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XML schema type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:operationVersion' of XML schema type 'xsd:string'
        std::string *operationVersion;
        /// Optional element 'gml:coordinateOperationAccuracy' of XML schema type 'gml:coordinateOperationAccuracy'
        std::vector<_gml__coordinateOperationAccuracy *> coordinateOperationAccuracy;
        /// Optional element 'gml:sourceCRS' of XML schema type 'gml:CRSPropertyType'
        gml__CRSPropertyType *sourceCRS;
        /// Optional element 'gml:targetCRS' of XML schema type 'gml:CRSPropertyType'
        gml__CRSPropertyType *targetCRS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractCoordinateOperationType, default initialized and not managed by a soap context
        virtual gml__AbstractCoordinateOperationType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractCoordinateOperationType); }
      public:
        /// Constructor with default initializations
        gml__AbstractCoordinateOperationType() : domainOfValidity(), scope(), operationVersion(), coordinateOperationAccuracy(), sourceCRS(), targetCRS() { }
        virtual ~gml__AbstractCoordinateOperationType() { }
        /// Friend allocator used by soap_new_gml__AbstractCoordinateOperationType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractCoordinateOperationType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateOperationType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:285 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty (-28)
/* complex XML schema type 'resqml20:obj_ContinuousProperty': */
class SOAP_CMAC resqml20__obj_USCOREContinuousProperty : public resqml20__AbstractValuesProperty {
      public:
        /// Optional element 'resqml20:MinimumValue' of XML schema type 'xsd:double'
        std::vector<double> MinimumValue;
        /// Optional element 'resqml20:MaximumValue' of XML schema type 'xsd:double'
        std::vector<double> MaximumValue;
        /// Required element 'resqml20:UOM' of XML schema type 'resqml20:ResqmlUom'
        enum resqml20__ResqmlUom UOM;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREContinuousProperty, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREContinuousProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREContinuousProperty); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREContinuousProperty() : MinimumValue(), MaximumValue(), UOM() { }
        virtual ~resqml20__obj_USCOREContinuousProperty() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREContinuousProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREContinuousProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREContinuousProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:299 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty (-35)
/* complex XML schema type 'resqml20:obj_CommentProperty': */
class SOAP_CMAC resqml20__obj_USCORECommentProperty : public resqml20__AbstractValuesProperty {
      public:
        /// Optional element 'resqml20:Language' of XML schema type 'xsd:string'
        std::string *Language;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORECommentProperty, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORECommentProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORECommentProperty); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORECommentProperty() : Language() { }
        virtual ~resqml20__obj_USCORECommentProperty() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORECommentProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORECommentProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECommentProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:301 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty (-36)
/* complex XML schema type 'resqml20:obj_DiscreteProperty': */
class SOAP_CMAC resqml20__obj_USCOREDiscreteProperty : public resqml20__AbstractValuesProperty {
      public:
        /// Optional element 'resqml20:MinimumValue' of XML schema type 'xsd:integer'
        std::vector<LONG64> MinimumValue;
        /// Optional element 'resqml20:MaximumValue' of XML schema type 'xsd:integer'
        std::vector<LONG64> MaximumValue;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREDiscreteProperty, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREDiscreteProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREDiscreteProperty); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREDiscreteProperty() : MinimumValue(), MaximumValue() { }
        virtual ~resqml20__obj_USCOREDiscreteProperty() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREDiscreteProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREDiscreteProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDiscreteProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:303 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty (-37)
/* complex XML schema type 'resqml20:obj_CategoricalProperty': */
class SOAP_CMAC resqml20__obj_USCORECategoricalProperty : public resqml20__AbstractValuesProperty {
      public:
        /// Required element 'resqml20:Lookup' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *Lookup;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORECategoricalProperty, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORECategoricalProperty *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORECategoricalProperty); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORECategoricalProperty() : Lookup() { }
        virtual ~resqml20__obj_USCORECategoricalProperty() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORECategoricalProperty(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORECategoricalProperty * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECategoricalProperty(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:419 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation (-95)
/* complex XML schema type 'resqml20:obj_UnstructuredGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREUnstructuredGridRepresentation : public resqml20__AbstractGridRepresentation {
      public:
        /// Required element 'resqml20:CellCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 CellCount;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:UnstructuredGridGeometry'
        resqml20__UnstructuredGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREUnstructuredGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREUnstructuredGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREUnstructuredGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREUnstructuredGridRepresentation() : CellCount(), Geometry() { }
        virtual ~resqml20__obj_USCOREUnstructuredGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREUnstructuredGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:423 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation (-97)
/* complex XML schema type 'resqml20:obj_GpGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREGpGridRepresentation : public resqml20__AbstractGridRepresentation {
      public:
        /// Optional element 'resqml20:ColumnLayerGrid' of XML schema type 'resqml20:GpGridColumnLayerGrid'
        std::vector<resqml20__GpGridColumnLayerGrid *> ColumnLayerGrid;
        /// Optional element 'resqml20:UnstructuredGridPatch' of XML schema type 'resqml20:GpGridUnstructuredGridPatch'
        std::vector<resqml20__GpGridUnstructuredGridPatch *> UnstructuredGridPatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGpGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGpGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGpGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGpGridRepresentation() : ColumnLayerGrid(), UnstructuredGridPatch() { }
        virtual ~resqml20__obj_USCOREGpGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGpGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGpGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGpGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:487 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation (-129)
/* complex XML schema type 'resqml20:AbstractTruncatedColumnLayerGridRepresentation': */
class SOAP_CMAC resqml20__AbstractTruncatedColumnLayerGridRepresentation : public resqml20__AbstractGridRepresentation {
      public:
        /// Required element 'resqml20:Nk' of XML schema type 'xsd:positiveInteger'
        ULONG64 Nk;
        /// Required element 'resqml20:TruncationCells' of XML schema type 'resqml20:TruncationCellPatch'
        resqml20__TruncationCellPatch *TruncationCells;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractTruncatedColumnLayerGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractTruncatedColumnLayerGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractTruncatedColumnLayerGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractTruncatedColumnLayerGridRepresentation() : Nk(), TruncationCells() { }
        virtual ~resqml20__AbstractTruncatedColumnLayerGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:503 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation (-137)
/* complex XML schema type 'resqml20:AbstractColumnLayerGridRepresentation': */
class SOAP_CMAC resqml20__AbstractColumnLayerGridRepresentation : public resqml20__AbstractGridRepresentation {
      public:
        /// Required element 'resqml20:Nk' of XML schema type 'xsd:positiveInteger'
        ULONG64 Nk;
        /// Optional element 'resqml20:IntervalStratigraphicUnits' of XML schema type 'resqml20:IntervalStratigraphicUnits'
        resqml20__IntervalStratigraphicUnits *IntervalStratigraphicUnits;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractColumnLayerGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractColumnLayerGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractColumnLayerGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractColumnLayerGridRepresentation() : Nk(), IntervalStratigraphicUnits() { }
        virtual ~resqml20__AbstractColumnLayerGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:531 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation (-151)
/* complex XML schema type 'resqml20:obj_RockFluidOrganizationInterpretation': */
class SOAP_CMAC resqml20__obj_USCORERockFluidOrganizationInterpretation : public resqml20__AbstractOrganizationInterpretation {
      public:
        /// Required element 'resqml20:RockFluidUnitIndex' of XML schema type 'resqml20:RockFluidUnitInterpretationIndex'
        resqml20__RockFluidUnitInterpretationIndex *RockFluidUnitIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERockFluidOrganizationInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERockFluidOrganizationInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERockFluidOrganizationInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERockFluidOrganizationInterpretation() : RockFluidUnitIndex() { }
        virtual ~resqml20__obj_USCORERockFluidOrganizationInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:543 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation (-157)
/* complex XML schema type 'resqml20:obj_RockFluidUnitInterpretation': */
class SOAP_CMAC resqml20__obj_USCORERockFluidUnitInterpretation : public resqml20__obj_USCOREGeologicUnitInterpretation {
      public:
        /// Optional element 'resqml20:Phase' of XML schema type 'resqml20:Phase'
        enum resqml20__Phase *Phase;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERockFluidUnitInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERockFluidUnitInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERockFluidUnitInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERockFluidUnitInterpretation() : Phase() { }
        virtual ~resqml20__obj_USCORERockFluidUnitInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:551 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation (-161)
/* complex XML schema type 'resqml20:obj_GeobodyBoundaryInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREGeobodyBoundaryInterpretation : public resqml20__obj_USCOREBoundaryFeatureInterpretation {
      public:
        /// Optional element 'resqml20:BoundaryRelation' of XML schema type 'resqml20:BoundaryRelation'
        std::vector<enum resqml20__BoundaryRelation> BoundaryRelation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeobodyBoundaryInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeobodyBoundaryInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeobodyBoundaryInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeobodyBoundaryInterpretation() : BoundaryRelation() { }
        virtual ~resqml20__obj_USCOREGeobodyBoundaryInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:553 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation (-162)
/* complex XML schema type 'resqml20:obj_StructuralOrganizationInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREStructuralOrganizationInterpretation : public resqml20__AbstractOrganizationInterpretation {
      public:
        /// Required element 'resqml20:OrderingCriteria' of XML schema type 'resqml20:OrderingCriteria'
        enum resqml20__OrderingCriteria OrderingCriteria;
        /// Optional element 'resqml20:Faults' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Faults;
        /// Optional element 'resqml20:Horizons' of XML schema type 'resqml20:HorizonInterpretationIndex'
        std::vector<resqml20__HorizonInterpretationIndex *> Horizons;
        /// Optional element 'resqml20:Sides' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Sides;
        /// Optional element 'resqml20:TopFrontier' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> TopFrontier;
        /// Optional element 'resqml20:BottomFrontier' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> BottomFrontier;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStructuralOrganizationInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStructuralOrganizationInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStructuralOrganizationInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStructuralOrganizationInterpretation() : OrderingCriteria(), Faults(), Horizons(), Sides(), TopFrontier(), BottomFrontier() { }
        virtual ~resqml20__obj_USCOREStructuralOrganizationInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStructuralOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:559 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation (-165)
/* complex XML schema type 'resqml20:obj_FaultInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREFaultInterpretation : public resqml20__obj_USCOREBoundaryFeatureInterpretation {
      public:
        /// Optional element 'resqml20:IsListric' of XML schema type 'xsd:boolean'
        bool *IsListric;
        /// Optional element 'resqml20:MaximumThrow' of XML schema type 'eml20:LengthMeasure'
        eml20__LengthMeasure *MaximumThrow;
        /// Optional element 'resqml20:MeanAzimuth' of XML schema type 'eml20:PlaneAngleMeasure'
        eml20__PlaneAngleMeasure *MeanAzimuth;
        /// Optional element 'resqml20:MeanDip' of XML schema type 'eml20:PlaneAngleMeasure'
        eml20__PlaneAngleMeasure *MeanDip;
        /// Optional element 'resqml20:ThrowInterpretation' of XML schema type 'resqml20:FaultThrow'
        std::vector<resqml20__FaultThrow *> ThrowInterpretation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREFaultInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREFaultInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREFaultInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREFaultInterpretation() : IsListric(), MaximumThrow(), MeanAzimuth(), MeanDip(), ThrowInterpretation() { }
        virtual ~resqml20__obj_USCOREFaultInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREFaultInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREFaultInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFaultInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:563 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation (-167)
/* complex XML schema type 'resqml20:obj_GeobodyInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREGeobodyInterpretation : public resqml20__obj_USCOREGeologicUnitInterpretation {
      public:
        /// Optional element 'resqml20:Geobody3dShape' of XML schema type 'resqml20:Geobody3dShape'
        enum resqml20__Geobody3dShape *Geobody3dShape;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeobodyInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeobodyInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeobodyInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeobodyInterpretation() : Geobody3dShape() { }
        virtual ~resqml20__obj_USCOREGeobodyInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeobodyInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:575 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation (-173)
/* complex XML schema type 'resqml20:AbstractStratigraphicOrganizationInterpretation': */
class SOAP_CMAC resqml20__AbstractStratigraphicOrganizationInterpretation : public resqml20__AbstractOrganizationInterpretation {
      public:
        /// Required element 'resqml20:OrderingCriteria' of XML schema type 'resqml20:OrderingCriteria'
        enum resqml20__OrderingCriteria OrderingCriteria;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractStratigraphicOrganizationInterpretation, default initialized and not managed by a soap context
        virtual resqml20__AbstractStratigraphicOrganizationInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractStratigraphicOrganizationInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractStratigraphicOrganizationInterpretation() : OrderingCriteria() { }
        virtual ~resqml20__AbstractStratigraphicOrganizationInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractStratigraphicOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:579 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation (-175)
/* complex XML schema type 'resqml20:obj_HorizonInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREHorizonInterpretation : public resqml20__obj_USCOREBoundaryFeatureInterpretation {
      public:
        /// Optional element 'resqml20:BoundaryRelation' of XML schema type 'resqml20:BoundaryRelation'
        std::vector<enum resqml20__BoundaryRelation> BoundaryRelation;
        /// Optional element 'resqml20:SequenceStratigraphySurface' of XML schema type 'resqml20:SequenceStratigraphySurface'
        enum resqml20__SequenceStratigraphySurface *SequenceStratigraphySurface;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREHorizonInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREHorizonInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREHorizonInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREHorizonInterpretation() : BoundaryRelation(), SequenceStratigraphySurface() { }
        virtual ~resqml20__obj_USCOREHorizonInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREHorizonInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREHorizonInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREHorizonInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:583 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation (-177)
/* complex XML schema type 'resqml20:obj_StratigraphicUnitInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREStratigraphicUnitInterpretation : public resqml20__obj_USCOREGeologicUnitInterpretation {
      public:
        /// Optional element 'resqml20:DepositionMode' of XML schema type 'resqml20:DepositionMode'
        enum resqml20__DepositionMode *DepositionMode;
        /// Optional element 'resqml20:MaxThickness' of XML schema type 'eml20:LengthMeasure'
        eml20__LengthMeasure *MaxThickness;
        /// Optional element 'resqml20:MinThickness' of XML schema type 'eml20:LengthMeasure'
        eml20__LengthMeasure *MinThickness;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStratigraphicUnitInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStratigraphicUnitInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStratigraphicUnitInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStratigraphicUnitInterpretation() : DepositionMode(), MaxThickness(), MinThickness() { }
        virtual ~resqml20__obj_USCOREStratigraphicUnitInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:589 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature (-180)
/* complex XML schema type 'resqml20:obj_GeologicUnitFeature': */
class SOAP_CMAC resqml20__obj_USCOREGeologicUnitFeature : public resqml20__AbstractGeologicFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeologicUnitFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeologicUnitFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeologicUnitFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeologicUnitFeature() { }
        virtual ~resqml20__obj_USCOREGeologicUnitFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeologicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeologicUnitFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:593 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature (-182)
/* complex XML schema type 'resqml20:obj_BoundaryFeature': */
class SOAP_CMAC resqml20__obj_USCOREBoundaryFeature : public resqml20__AbstractGeologicFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREBoundaryFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREBoundaryFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREBoundaryFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREBoundaryFeature() { }
        virtual ~resqml20__obj_USCOREBoundaryFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREBoundaryFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:607 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature (-189)
/* complex XML schema type 'resqml20:obj_OrganizationFeature': */
class SOAP_CMAC resqml20__obj_USCOREOrganizationFeature : public resqml20__AbstractGeologicFeature {
      public:
        /// Required element 'resqml20:OrganizationKind' of XML schema type 'resqml20:OrganizationKind'
        enum resqml20__OrganizationKind OrganizationKind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREOrganizationFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREOrganizationFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREOrganizationFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREOrganizationFeature() : OrganizationKind() { }
        virtual ~resqml20__obj_USCOREOrganizationFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREOrganizationFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREOrganizationFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREOrganizationFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:635 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation (-203)
/* complex XML schema type 'resqml20:obj_BlockedWellboreRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREBlockedWellboreRepresentation : public resqml20__obj_USCOREWellboreFrameRepresentation {
      public:
        /// Required element 'resqml20:CellCount' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 CellCount;
        /// Required element 'resqml20:CellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *CellIndices;
        /// Required element 'resqml20:GridIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *GridIndices;
        /// Required element 'resqml20:LocalFacePairPerCellIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *LocalFacePairPerCellIndices;
        /// Required element 'resqml20:Grid' of XML schema type 'eml20:DataObjectReference'
        std::vector<eml20__DataObjectReference *> Grid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREBlockedWellboreRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREBlockedWellboreRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREBlockedWellboreRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREBlockedWellboreRepresentation() : CellCount(), CellIndices(), GridIndices(), LocalFacePairPerCellIndices(), Grid() { }
        virtual ~resqml20__obj_USCOREBlockedWellboreRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREBlockedWellboreRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:649 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation (-210)
/* complex XML schema type 'resqml20:obj_WellboreMarkerFrameRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREWellboreMarkerFrameRepresentation : public resqml20__obj_USCOREWellboreFrameRepresentation {
      public:
        /// Required element 'resqml20:WellboreMarker' of XML schema type 'resqml20:WellboreMarker'
        std::vector<resqml20__WellboreMarker *> WellboreMarker;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREWellboreMarkerFrameRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREWellboreMarkerFrameRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREWellboreMarkerFrameRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREWellboreMarkerFrameRepresentation() : WellboreMarker() { }
        virtual ~resqml20__obj_USCOREWellboreMarkerFrameRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:653 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation (-212)
/* complex XML schema type 'resqml20:obj_TriangulatedSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCORETriangulatedSetRepresentation : public resqml20__AbstractSurfaceRepresentation {
      public:
        /// Required element 'resqml20:TrianglePatch' of XML schema type 'resqml20:TrianglePatch'
        std::vector<resqml20__TrianglePatch *> TrianglePatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORETriangulatedSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORETriangulatedSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORETriangulatedSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORETriangulatedSetRepresentation() : TrianglePatch() { }
        virtual ~resqml20__obj_USCORETriangulatedSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETriangulatedSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:661 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation (-216)
/* complex XML schema type 'resqml20:obj_PlaneSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREPlaneSetRepresentation : public resqml20__AbstractSurfaceRepresentation {
      public:
        /// Required element 'resqml20:Planes' of XML schema type 'resqml20:AbstractPlaneGeometry'
        std::vector<resqml20__AbstractPlaneGeometry *> Planes;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREPlaneSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREPlaneSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREPlaneSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREPlaneSetRepresentation() : Planes() { }
        virtual ~resqml20__obj_USCOREPlaneSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREPlaneSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREPlaneSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:665 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation (-218)
/* complex XML schema type 'resqml20:AbstractSurfaceFrameworkRepresentation': */
class SOAP_CMAC resqml20__AbstractSurfaceFrameworkRepresentation : public resqml20__obj_USCORERepresentationSetRepresentation {
      public:
        /// Optional element 'resqml20:ContactIdentity' of XML schema type 'resqml20:ContactIdentity'
        std::vector<resqml20__ContactIdentity *> ContactIdentity;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractSurfaceFrameworkRepresentation, default initialized and not managed by a soap context
        virtual resqml20__AbstractSurfaceFrameworkRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractSurfaceFrameworkRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractSurfaceFrameworkRepresentation() : ContactIdentity() { }
        virtual ~resqml20__AbstractSurfaceFrameworkRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:669 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation (-220)
/* complex XML schema type 'resqml20:obj_SealedVolumeFrameworkRepresentation': */
class SOAP_CMAC resqml20__obj_USCORESealedVolumeFrameworkRepresentation : public resqml20__obj_USCORERepresentationSetRepresentation {
      public:
        /// Required element 'resqml20:BasedOn' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *BasedOn;
        /// Required element 'resqml20:Shells' of XML schema type 'resqml20:VolumeShell'
        std::vector<resqml20__VolumeShell *> Shells;
        /// Required element 'resqml20:Regions' of XML schema type 'resqml20:VolumeRegion'
        std::vector<resqml20__VolumeRegion *> Regions;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESealedVolumeFrameworkRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESealedVolumeFrameworkRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESealedVolumeFrameworkRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESealedVolumeFrameworkRepresentation() : BasedOn(), Shells(), Regions() { }
        virtual ~resqml20__obj_USCORESealedVolumeFrameworkRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:687 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation (-229)
/* complex XML schema type 'resqml20:obj_Grid2dRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREGrid2dRepresentation : public resqml20__AbstractSurfaceRepresentation {
      public:
        /// Required element 'resqml20:Grid2dPatch' of XML schema type 'resqml20:Grid2dPatch'
        resqml20__Grid2dPatch *Grid2dPatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGrid2dRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGrid2dRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGrid2dRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGrid2dRepresentation() : Grid2dPatch() { }
        virtual ~resqml20__obj_USCOREGrid2dRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGrid2dRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGrid2dRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:695 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation (-233)
/* complex XML schema type 'resqml20:obj_Grid2dSetRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREGrid2dSetRepresentation : public resqml20__AbstractSurfaceRepresentation {
      public:
        /// Required element 'resqml20:Grid2dPatch' of XML schema type 'resqml20:Grid2dPatch'
        std::vector<resqml20__Grid2dPatch *> Grid2dPatch;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGrid2dSetRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGrid2dSetRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGrid2dSetRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGrid2dSetRepresentation() : Grid2dPatch() { }
        virtual ~resqml20__obj_USCOREGrid2dSetRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGrid2dSetRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:707 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature (-239)
/* complex XML schema type 'resqml20:obj_FrontierFeature': */
class SOAP_CMAC resqml20__obj_USCOREFrontierFeature : public resqml20__AbstractTechnicalFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREFrontierFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREFrontierFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREFrontierFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREFrontierFeature() { }
        virtual ~resqml20__obj_USCOREFrontierFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREFrontierFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREFrontierFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFrontierFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:713 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature (-242)
/* complex XML schema type 'resqml20:obj_WellboreFeature': */
class SOAP_CMAC resqml20__obj_USCOREWellboreFeature : public resqml20__AbstractTechnicalFeature {
      public:
        /// Optional element 'resqml20:WitsmlWellbore' of XML schema type 'resqml20:WitsmlWellboreReference'
        resqml20__WitsmlWellboreReference *WitsmlWellbore;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREWellboreFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREWellboreFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREWellboreFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREWellboreFeature() : WitsmlWellbore() { }
        virtual ~resqml20__obj_USCOREWellboreFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREWellboreFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREWellboreFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREWellboreFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:719 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature (-245)
/* complex XML schema type 'resqml20:AbstractSeismicSurveyFeature': */
class SOAP_CMAC resqml20__AbstractSeismicSurveyFeature : public resqml20__AbstractTechnicalFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__AbstractSeismicSurveyFeature, default initialized and not managed by a soap context
        virtual resqml20__AbstractSeismicSurveyFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__AbstractSeismicSurveyFeature); }
      public:
        /// Constructor with default initializations
        resqml20__AbstractSeismicSurveyFeature() { }
        virtual ~resqml20__AbstractSeismicSurveyFeature() { }
        /// Friend allocator used by soap_new_resqml20__AbstractSeismicSurveyFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__AbstractSeismicSurveyFeature * SOAP_FMAC2 soap_instantiate_resqml20__AbstractSeismicSurveyFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:749 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature (-260)
/* complex XML schema type 'resqml20:obj_StreamlinesFeature': */
class SOAP_CMAC resqml20__obj_USCOREStreamlinesFeature : public resqml20__AbstractTechnicalFeature {
      public:
        /// Required element 'resqml20:Flux' of XML schema type 'resqml20:StreamlineFlux'
        enum resqml20__StreamlineFlux Flux;
        /// Optional element 'resqml20:OtherFlux' of XML schema type 'xsd:string'
        std::string *OtherFlux;
        /// Required element 'resqml20:TimeIndex' of XML schema type 'resqml20:TimeIndex'
        resqml20__TimeIndex *TimeIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStreamlinesFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStreamlinesFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStreamlinesFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStreamlinesFeature() : Flux(), OtherFlux(), TimeIndex() { }
        virtual ~resqml20__obj_USCOREStreamlinesFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStreamlinesFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStreamlinesFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStreamlinesFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:32296 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeodeticCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeodeticCRSType (-1179)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_GeodeticCRSType
{
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_ellipsoidalCS	(1)	/**< union variant selector value for member ellipsoidalCS */
        gml__EllipsoidalCSPropertyType *ellipsoidalCS;
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_cartesianCS	(2)	/**< union variant selector value for member cartesianCS */
        gml__CartesianCSPropertyType *cartesianCS;
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_sphericalCS	(3)	/**< union variant selector value for member sphericalCS */
        gml__SphericalCSPropertyType *sphericalCS;
};
#endif

/* resqml2_0_1ForGsoap.h:1153 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType (-462)
/* complex XML schema type 'gml:GeodeticCRSType': */
class SOAP_CMAC gml__GeodeticCRSType : public gml__AbstractCRSType {
      public:
        /// Union with union _gml__union_GeodeticCRSType variant selector __union_GeodeticCRSType set to one of: SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_ellipsoidalCS SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_cartesianCS SOAP_UNION_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_sphericalCS
        int __union_GeodeticCRSType;
        union _gml__union_GeodeticCRSType union_GeodeticCRSType;
        /// Required element 'gml:geodeticDatum' of XML schema type 'gml:GeodeticDatumPropertyType'
        gml__GeodeticDatumPropertyType *geodeticDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticCRSType, default initialized and not managed by a soap context
        virtual gml__GeodeticCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticCRSType); }
      public:
        /// Constructor with default initializations
        gml__GeodeticCRSType() : __union_GeodeticCRSType(), geodeticDatum() { }
        virtual ~gml__GeodeticCRSType() { }
        /// Friend allocator used by soap_new_gml__GeodeticCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticCRSType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1183 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType (-477)
/* complex XML schema type 'gml:EllipsoidalCSType': */
class SOAP_CMAC gml__EllipsoidalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__EllipsoidalCSType, default initialized and not managed by a soap context
        virtual gml__EllipsoidalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__EllipsoidalCSType); }
      public:
        /// Constructor with default initializations
        gml__EllipsoidalCSType() { }
        virtual ~gml__EllipsoidalCSType() { }
        /// Friend allocator used by soap_new_gml__EllipsoidalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__EllipsoidalCSType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1193 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType (-482)
/* complex XML schema type 'gml:CartesianCSType': */
class SOAP_CMAC gml__CartesianCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__CartesianCSType, default initialized and not managed by a soap context
        virtual gml__CartesianCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__CartesianCSType); }
      public:
        /// Constructor with default initializations
        gml__CartesianCSType() { }
        virtual ~gml__CartesianCSType() { }
        /// Friend allocator used by soap_new_gml__CartesianCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__CartesianCSType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1197 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType (-484)
/* complex XML schema type 'gml:SphericalCSType': */
class SOAP_CMAC gml__SphericalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__SphericalCSType, default initialized and not managed by a soap context
        virtual gml__SphericalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__SphericalCSType); }
      public:
        /// Constructor with default initializations
        gml__SphericalCSType() { }
        virtual ~gml__SphericalCSType() { }
        /// Friend allocator used by soap_new_gml__SphericalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__SphericalCSType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1201 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType (-486)
/* complex XML schema type 'gml:GeodeticDatumType': */
class SOAP_CMAC gml__GeodeticDatumType : public gml__AbstractDatumType {
      public:
        /// Required element 'gml:primeMeridian' of XML schema type 'gml:PrimeMeridianPropertyType'
        gml__PrimeMeridianPropertyType *primeMeridian;
        /// Required element 'gml:ellipsoid' of XML schema type 'gml:EllipsoidPropertyType'
        gml__EllipsoidPropertyType *ellipsoid;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__GeodeticDatumType, default initialized and not managed by a soap context
        virtual gml__GeodeticDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__GeodeticDatumType); }
      public:
        /// Constructor with default initializations
        gml__GeodeticDatumType() : primeMeridian(), ellipsoid() { }
        virtual ~gml__GeodeticDatumType() { }
        /// Friend allocator used by soap_new_gml__GeodeticDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__GeodeticDatumType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1221 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType (-496)
/* complex XML schema type 'gml:AbstractGeneralDerivedCRSType': */
class SOAP_CMAC gml__AbstractGeneralDerivedCRSType : public gml__AbstractCRSType {
      public:
        /// Required element 'gml:conversion' of XML schema type 'gml:GeneralConversionPropertyType'
        gml__GeneralConversionPropertyType *conversion;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGeneralDerivedCRSType, default initialized and not managed by a soap context
        virtual gml__AbstractGeneralDerivedCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGeneralDerivedCRSType); }
      public:
        /// Constructor with default initializations
        gml__AbstractGeneralDerivedCRSType() : conversion() { }
        virtual ~gml__AbstractGeneralDerivedCRSType() { }
        /// Friend allocator used by soap_new_gml__AbstractGeneralDerivedCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralDerivedCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1225 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType (-498)
/* complex XML schema type 'gml:AbstractGeneralConversionType': */
class SOAP_CMAC gml__AbstractGeneralConversionType {
      public:
        /// Optional element 'gml:description' of XML schema type 'gml:StringOrRefType'
        gml__StringOrRefType *description;
        /// Optional element 'gml:descriptionReference' of XML schema type 'gml:ReferenceType'
        gml__ReferenceType *descriptionReference;
        /// Required element 'gml:identifier' of XML schema type 'gml:CodeWithAuthorityType'
        gml__CodeWithAuthorityType *identifier;
        /// Optional element 'gml:name' of XML schema type 'gml:CodeType'
        std::vector<gml__CodeType *> name;
        /// Optional element 'gml:remarks' of XML schema type 'xsd:string'
        std::string *remarks;
        /// Optional element 'gml:domainOfValidity' of XML schema type 'gml:domainOfValidity'
        _gml__domainOfValidity *domainOfValidity;
        /// Required element 'gml:scope' of XML schema type 'xsd:string'
        std::vector<std::string> scope;
        /// Optional element 'gml:coordinateOperationAccuracy' of XML schema type 'gml:coordinateOperationAccuracy'
        std::vector<_gml__coordinateOperationAccuracy *> coordinateOperationAccuracy;
        /// Required attribute 'gml:id' of XML schema type 'xsd:ID'
        std::string gml__id;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__AbstractGeneralConversionType, default initialized and not managed by a soap context
        virtual gml__AbstractGeneralConversionType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__AbstractGeneralConversionType); }
      public:
        /// Constructor with default initializations
        gml__AbstractGeneralConversionType() : description(), descriptionReference(), identifier(), name(), remarks(), domainOfValidity(), scope(), coordinateOperationAccuracy(), gml__id(), soap() { }
        virtual ~gml__AbstractGeneralConversionType() { }
        /// Friend allocator used by soap_new_gml__AbstractGeneralConversionType(struct soap*, int)
        friend SOAP_FMAC1 gml__AbstractGeneralConversionType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralConversionType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1233 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType (-502)
/* complex XML schema type 'gml:VerticalCRSType': */
class SOAP_CMAC gml__VerticalCRSType : public gml__AbstractCRSType {
      public:
        /// Required element 'gml:verticalCS' of XML schema type 'gml:VerticalCSPropertyType'
        gml__VerticalCSPropertyType *verticalCS;
        /// Required element 'gml:verticalDatum' of XML schema type 'gml:VerticalDatumPropertyType'
        gml__VerticalDatumPropertyType *verticalDatum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCRSType, default initialized and not managed by a soap context
        virtual gml__VerticalCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCRSType); }
      public:
        /// Constructor with default initializations
        gml__VerticalCRSType() : verticalCS(), verticalDatum() { }
        virtual ~gml__VerticalCRSType() { }
        /// Friend allocator used by soap_new_gml__VerticalCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCRSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1237 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType (-504)
/* complex XML schema type 'gml:VerticalCSType': */
class SOAP_CMAC gml__VerticalCSType : public gml__AbstractCoordinateSystemType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalCSType, default initialized and not managed by a soap context
        virtual gml__VerticalCSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalCSType); }
      public:
        /// Constructor with default initializations
        gml__VerticalCSType() { }
        virtual ~gml__VerticalCSType() { }
        /// Friend allocator used by soap_new_gml__VerticalCSType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalCSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:1241 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType (-506)
/* complex XML schema type 'gml:VerticalDatumType': */
class SOAP_CMAC gml__VerticalDatumType : public gml__AbstractDatumType {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__VerticalDatumType, default initialized and not managed by a soap context
        virtual gml__VerticalDatumType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__VerticalDatumType); }
      public:
        /// Constructor with default initializations
        gml__VerticalDatumType() { }
        virtual ~gml__VerticalDatumType() { }
        /// Friend allocator used by soap_new_gml__VerticalDatumType(struct soap*, int)
        friend SOAP_FMAC1 gml__VerticalDatumType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:441 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation (-106)
/* complex XML schema type 'resqml20:obj_UnstructuredColumnLayerGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation : public resqml20__AbstractColumnLayerGridRepresentation {
      public:
        /// Required element 'resqml20:ColumnCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 ColumnCount;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:UnstructuredColumnLayerGridGeometry'
        resqml20__UnstructuredColumnLayerGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation() : ColumnCount(), Geometry() { }
        virtual ~resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:445 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation (-108)
/* complex XML schema type 'resqml20:obj_IjkGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCOREIjkGridRepresentation : public resqml20__AbstractColumnLayerGridRepresentation {
      public:
        /// Required element 'resqml20:Ni' of XML schema type 'xsd:positiveInteger'
        ULONG64 Ni;
        /// Required element 'resqml20:Nj' of XML schema type 'xsd:positiveInteger'
        ULONG64 Nj;
        /// Optional element 'resqml20:RadialGridIsComplete' of XML schema type 'xsd:boolean'
        bool *RadialGridIsComplete;
        /// Optional element 'resqml20:KGaps' of XML schema type 'resqml20:KGaps'
        resqml20__KGaps *KGaps;
        /// Optional element 'resqml20:Geometry' of XML schema type 'resqml20:IjkGridGeometry'
        resqml20__IjkGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREIjkGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREIjkGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREIjkGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREIjkGridRepresentation() : Ni(), Nj(), RadialGridIsComplete(), KGaps(), Geometry() { }
        virtual ~resqml20__obj_USCOREIjkGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:499 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation (-135)
/* complex XML schema type 'resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation : public resqml20__AbstractTruncatedColumnLayerGridRepresentation {
      public:
        /// Required element 'resqml20:ColumnCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 ColumnCount;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:UnstructuredColumnLayerGridGeometry'
        resqml20__UnstructuredColumnLayerGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation() : ColumnCount(), Geometry() { }
        virtual ~resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:507 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation (-139)
/* complex XML schema type 'resqml20:obj_TruncatedIjkGridRepresentation': */
class SOAP_CMAC resqml20__obj_USCORETruncatedIjkGridRepresentation : public resqml20__AbstractTruncatedColumnLayerGridRepresentation {
      public:
        /// Required element 'resqml20:Ni' of XML schema type 'xsd:positiveInteger'
        ULONG64 Ni;
        /// Required element 'resqml20:Nj' of XML schema type 'xsd:positiveInteger'
        ULONG64 Nj;
        /// Required element 'resqml20:Geometry' of XML schema type 'resqml20:IjkGridGeometry'
        resqml20__IjkGridGeometry *Geometry;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORETruncatedIjkGridRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORETruncatedIjkGridRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORETruncatedIjkGridRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORETruncatedIjkGridRepresentation() : Ni(), Nj(), Geometry() { }
        virtual ~resqml20__obj_USCORETruncatedIjkGridRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETruncatedIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:573 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation (-172)
/* complex XML schema type 'resqml20:obj_StratigraphicColumnRankInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREStratigraphicColumnRankInterpretation : public resqml20__AbstractStratigraphicOrganizationInterpretation {
      public:
        /// Required element 'resqml20:Index' of XML schema type 'xsd:nonNegativeInteger'
        ULONG64 Index;
        /// Required element 'resqml20:StratigraphicUnits' of XML schema type 'resqml20:StratigraphicUnitInterpretationIndex'
        std::vector<resqml20__StratigraphicUnitInterpretationIndex *> StratigraphicUnits;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStratigraphicColumnRankInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStratigraphicColumnRankInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStratigraphicColumnRankInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStratigraphicColumnRankInterpretation() : Index(), StratigraphicUnits() { }
        virtual ~resqml20__obj_USCOREStratigraphicColumnRankInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:585 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation (-178)
/* complex XML schema type 'resqml20:obj_StratigraphicOccurrenceInterpretation': */
class SOAP_CMAC resqml20__obj_USCOREStratigraphicOccurrenceInterpretation : public resqml20__AbstractStratigraphicOrganizationInterpretation {
      public:
        /// Optional element 'resqml20:IsOccurrenceOf' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *IsOccurrenceOf;
        /// Optional element 'resqml20:GeologicUnitIndex' of XML schema type 'resqml20:GeologicUnitInterpretationIndex'
        std::vector<resqml20__GeologicUnitInterpretationIndex *> GeologicUnitIndex;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStratigraphicOccurrenceInterpretation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStratigraphicOccurrenceInterpretation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStratigraphicOccurrenceInterpretation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStratigraphicOccurrenceInterpretation() : IsOccurrenceOf(), GeologicUnitIndex() { }
        virtual ~resqml20__obj_USCOREStratigraphicOccurrenceInterpretation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:587 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature (-179)
/* complex XML schema type 'resqml20:obj_FluidBoundaryFeature': */
class SOAP_CMAC resqml20__obj_USCOREFluidBoundaryFeature : public resqml20__obj_USCOREBoundaryFeature {
      public:
        /// Required element 'resqml20:FluidContact' of XML schema type 'resqml20:FluidContact'
        enum resqml20__FluidContact FluidContact;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREFluidBoundaryFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREFluidBoundaryFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREFluidBoundaryFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREFluidBoundaryFeature() : FluidContact() { }
        virtual ~resqml20__obj_USCOREFluidBoundaryFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREFluidBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREFluidBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:591 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature (-181)
/* complex XML schema type 'resqml20:obj_RockFluidUnitFeature': */
class SOAP_CMAC resqml20__obj_USCORERockFluidUnitFeature : public resqml20__obj_USCOREGeologicUnitFeature {
      public:
        /// Required element 'resqml20:Phase' of XML schema type 'resqml20:Phase'
        enum resqml20__Phase Phase;
        /// Required element 'resqml20:FluidBoundaryBottom' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *FluidBoundaryBottom;
        /// Required element 'resqml20:FluidBoundaryTop' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *FluidBoundaryTop;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORERockFluidUnitFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORERockFluidUnitFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORERockFluidUnitFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORERockFluidUnitFeature() : Phase(), FluidBoundaryBottom(), FluidBoundaryTop() { }
        virtual ~resqml20__obj_USCORERockFluidUnitFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORERockFluidUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORERockFluidUnitFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:599 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature (-185)
/* complex XML schema type 'resqml20:obj_StratigraphicUnitFeature': */
class SOAP_CMAC resqml20__obj_USCOREStratigraphicUnitFeature : public resqml20__obj_USCOREGeologicUnitFeature {
      public:
        /// Optional element 'resqml20:ChronostratigraphicBottom' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ChronostratigraphicBottom;
        /// Optional element 'resqml20:ChronostratigraphicTop' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *ChronostratigraphicTop;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREStratigraphicUnitFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREStratigraphicUnitFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREStratigraphicUnitFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREStratigraphicUnitFeature() : ChronostratigraphicBottom(), ChronostratigraphicTop() { }
        virtual ~resqml20__obj_USCOREStratigraphicUnitFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREStratigraphicUnitFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:603 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature (-187)
/* complex XML schema type 'resqml20:obj_GeneticBoundaryFeature': */
class SOAP_CMAC resqml20__obj_USCOREGeneticBoundaryFeature : public resqml20__obj_USCOREBoundaryFeature {
      public:
        /// Required element 'resqml20:GeneticBoundaryKind' of XML schema type 'resqml20:GeneticBoundaryKind'
        enum resqml20__GeneticBoundaryKind GeneticBoundaryKind;
        /// Optional element 'resqml20:AbsoluteAge' of XML schema type 'resqml20:Timestamp'
        resqml20__Timestamp *AbsoluteAge;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeneticBoundaryFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeneticBoundaryFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeneticBoundaryFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeneticBoundaryFeature() : GeneticBoundaryKind(), AbsoluteAge() { }
        virtual ~resqml20__obj_USCOREGeneticBoundaryFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeneticBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:605 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature (-188)
/* complex XML schema type 'resqml20:obj_GeobodyFeature': */
class SOAP_CMAC resqml20__obj_USCOREGeobodyFeature : public resqml20__obj_USCOREGeologicUnitFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREGeobodyFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREGeobodyFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREGeobodyFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREGeobodyFeature() { }
        virtual ~resqml20__obj_USCOREGeobodyFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREGeobodyFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREGeobodyFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREGeobodyFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:609 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature (-190)
/* complex XML schema type 'resqml20:obj_TectonicBoundaryFeature': */
class SOAP_CMAC resqml20__obj_USCORETectonicBoundaryFeature : public resqml20__obj_USCOREBoundaryFeature {
      public:
        /// Required element 'resqml20:TectonicBoundaryKind' of XML schema type 'resqml20:TectonicBoundaryKind'
        enum resqml20__TectonicBoundaryKind TectonicBoundaryKind;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORETectonicBoundaryFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORETectonicBoundaryFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORETectonicBoundaryFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORETectonicBoundaryFeature() : TectonicBoundaryKind() { }
        virtual ~resqml20__obj_USCORETectonicBoundaryFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORETectonicBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORETectonicBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:651 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation (-211)
/* complex XML schema type 'resqml20:obj_NonSealedSurfaceFrameworkRepresentation': */
class SOAP_CMAC resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation : public resqml20__AbstractSurfaceFrameworkRepresentation {
      public:
        /// Optional element 'resqml20:NonSealedContactRepresentation' of XML schema type 'resqml20:AbstractContactRepresentationPart'
        std::vector<resqml20__AbstractContactRepresentationPart *> NonSealedContactRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation() : NonSealedContactRepresentation() { }
        virtual ~resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:681 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation (-226)
/* complex XML schema type 'resqml20:obj_SealedSurfaceFrameworkRepresentation': */
class SOAP_CMAC resqml20__obj_USCORESealedSurfaceFrameworkRepresentation : public resqml20__AbstractSurfaceFrameworkRepresentation {
      public:
        /// Optional element 'resqml20:SealedContactRepresentation' of XML schema type 'resqml20:SealedContactRepresentationPart'
        std::vector<resqml20__SealedContactRepresentationPart *> SealedContactRepresentation;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESealedSurfaceFrameworkRepresentation, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESealedSurfaceFrameworkRepresentation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESealedSurfaceFrameworkRepresentation); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESealedSurfaceFrameworkRepresentation() : SealedContactRepresentation() { }
        virtual ~resqml20__obj_USCORESealedSurfaceFrameworkRepresentation() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:709 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature (-240)
/* complex XML schema type 'resqml20:SeismicLatticeSetFeature': */
class SOAP_CMAC resqml20__SeismicLatticeSetFeature : public resqml20__AbstractSeismicSurveyFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__SeismicLatticeSetFeature, default initialized and not managed by a soap context
        virtual resqml20__SeismicLatticeSetFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__SeismicLatticeSetFeature); }
      public:
        /// Constructor with default initializations
        resqml20__SeismicLatticeSetFeature() { }
        virtual ~resqml20__SeismicLatticeSetFeature() { }
        /// Friend allocator used by soap_new_resqml20__SeismicLatticeSetFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__SeismicLatticeSetFeature * SOAP_FMAC2 soap_instantiate_resqml20__SeismicLatticeSetFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:711 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature (-241)
/* complex XML schema type 'resqml20:obj_SeismicLineSetFeature': */
class SOAP_CMAC resqml20__obj_USCORESeismicLineSetFeature : public resqml20__AbstractSeismicSurveyFeature {
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESeismicLineSetFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESeismicLineSetFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESeismicLineSetFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESeismicLineSetFeature() { }
        virtual ~resqml20__obj_USCORESeismicLineSetFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESeismicLineSetFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLineSetFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:715 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature (-243)
/* complex XML schema type 'resqml20:obj_SeismicLineFeature': */
class SOAP_CMAC resqml20__obj_USCORESeismicLineFeature : public resqml20__AbstractSeismicSurveyFeature {
      public:
        /// Required element 'resqml20:FirstTraceIndex' of XML schema type 'xsd:integer'
        LONG64 FirstTraceIndex;
        /// Required element 'resqml20:TraceCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 TraceCount;
        /// Required element 'resqml20:TraceIndexIncrement' of XML schema type 'xsd:integer'
        LONG64 TraceIndexIncrement;
        /// Optional element 'resqml20:IsPartOf' of XML schema type 'eml20:DataObjectReference'
        eml20__DataObjectReference *IsPartOf;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESeismicLineFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESeismicLineFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESeismicLineFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESeismicLineFeature() : FirstTraceIndex(), TraceCount(), TraceIndexIncrement(), IsPartOf() { }
        virtual ~resqml20__obj_USCORESeismicLineFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESeismicLineFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESeismicLineFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLineFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:717 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature (-244)
/* complex XML schema type 'resqml20:obj_SeismicLatticeFeature': */
class SOAP_CMAC resqml20__obj_USCORESeismicLatticeFeature : public resqml20__AbstractSeismicSurveyFeature {
      public:
        /// Required element 'resqml20:CrosslineCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 CrosslineCount;
        /// Required element 'resqml20:CrosslineIndexIncrement' of XML schema type 'xsd:integer'
        LONG64 CrosslineIndexIncrement;
        /// Required element 'resqml20:FirstCrosslineIndex' of XML schema type 'xsd:integer'
        LONG64 FirstCrosslineIndex;
        /// Required element 'resqml20:FirstInlineIndex' of XML schema type 'xsd:integer'
        LONG64 FirstInlineIndex;
        /// Required element 'resqml20:InlineCount' of XML schema type 'xsd:positiveInteger'
        ULONG64 InlineCount;
        /// Required element 'resqml20:InlineIndexIncrement' of XML schema type 'xsd:integer'
        LONG64 InlineIndexIncrement;
        /// Optional element 'resqml20:IsPartOf' of XML schema type 'resqml20:SeismicLatticeSetFeature'
        resqml20__SeismicLatticeSetFeature *IsPartOf;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORESeismicLatticeFeature, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORESeismicLatticeFeature *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORESeismicLatticeFeature); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORESeismicLatticeFeature() : CrosslineCount(), CrosslineIndexIncrement(), FirstCrosslineIndex(), FirstInlineIndex(), InlineCount(), InlineIndexIncrement(), IsPartOf() { }
        virtual ~resqml20__obj_USCORESeismicLatticeFeature() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORESeismicLatticeFeature * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORESeismicLatticeFeature(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:759 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries (-265)
/* complex XML schema type 'resqml20:obj_ContinuousPropertySeries': */
class SOAP_CMAC resqml20__obj_USCOREContinuousPropertySeries : public resqml20__obj_USCOREContinuousProperty {
      public:
        /// Optional element 'resqml20:RealizationIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *RealizationIndices;
        /// Optional element 'resqml20:SeriesTimeIndices' of XML schema type 'resqml20:TimeIndices'
        resqml20__TimeIndices *SeriesTimeIndices;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREContinuousPropertySeries, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREContinuousPropertySeries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREContinuousPropertySeries); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREContinuousPropertySeries() : RealizationIndices(), SeriesTimeIndices() { }
        virtual ~resqml20__obj_USCOREContinuousPropertySeries() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREContinuousPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREContinuousPropertySeries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:761 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries (-266)
/* complex XML schema type 'resqml20:obj_CategoricalPropertySeries': */
class SOAP_CMAC resqml20__obj_USCORECategoricalPropertySeries : public resqml20__obj_USCORECategoricalProperty {
      public:
        /// Optional element 'resqml20:RealizationIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *RealizationIndices;
        /// Optional element 'resqml20:SeriesTimeIndices' of XML schema type 'resqml20:TimeIndices'
        resqml20__TimeIndices *SeriesTimeIndices;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORECategoricalPropertySeries, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORECategoricalPropertySeries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORECategoricalPropertySeries); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORECategoricalPropertySeries() : RealizationIndices(), SeriesTimeIndices() { }
        virtual ~resqml20__obj_USCORECategoricalPropertySeries() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORECategoricalPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECategoricalPropertySeries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:763 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries (-267)
/* complex XML schema type 'resqml20:obj_CommentPropertySeries': */
class SOAP_CMAC resqml20__obj_USCORECommentPropertySeries : public resqml20__obj_USCORECommentProperty {
      public:
        /// Optional element 'resqml20:RealizationIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *RealizationIndices;
        /// Optional element 'resqml20:SeriesTimeIndices' of XML schema type 'resqml20:TimeIndices'
        resqml20__TimeIndices *SeriesTimeIndices;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCORECommentPropertySeries, default initialized and not managed by a soap context
        virtual resqml20__obj_USCORECommentPropertySeries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCORECommentPropertySeries); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCORECommentPropertySeries() : RealizationIndices(), SeriesTimeIndices() { }
        virtual ~resqml20__obj_USCORECommentPropertySeries() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCORECommentPropertySeries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCORECommentPropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCORECommentPropertySeries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:765 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries (-268)
/* complex XML schema type 'resqml20:obj_DiscretePropertySeries': */
class SOAP_CMAC resqml20__obj_USCOREDiscretePropertySeries : public resqml20__obj_USCOREDiscreteProperty {
      public:
        /// Optional element 'resqml20:RealizationIndices' of XML schema type 'resqml20:AbstractIntegerArray'
        resqml20__AbstractIntegerArray *RealizationIndices;
        /// Optional element 'resqml20:SeriesTimeIndices' of XML schema type 'resqml20:TimeIndices'
        resqml20__TimeIndices *SeriesTimeIndices;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type resqml20__obj_USCOREDiscretePropertySeries, default initialized and not managed by a soap context
        virtual resqml20__obj_USCOREDiscretePropertySeries *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(resqml20__obj_USCOREDiscretePropertySeries); }
      public:
        /// Constructor with default initializations
        resqml20__obj_USCOREDiscretePropertySeries() : RealizationIndices(), SeriesTimeIndices() { }
        virtual ~resqml20__obj_USCOREDiscretePropertySeries() { }
        /// Friend allocator used by soap_new_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, int)
        friend SOAP_FMAC1 resqml20__obj_USCOREDiscretePropertySeries * SOAP_FMAC2 soap_instantiate_resqml20__obj_USCOREDiscretePropertySeries(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:34022 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_ProjectedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_ProjectedCRSType (-1199)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _gml__union_ProjectedCRSType
{
        #define SOAP_UNION_gsoap_resqml2_0_1__gml__union_ProjectedCRSType_baseGeodeticCRS	(1)	/**< union variant selector value for member baseGeodeticCRS */
        gml__GeodeticCRSPropertyType *baseGeodeticCRS;
};
#endif

/* resqml2_0_1ForGsoap.h:1219 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType (-495)
/* complex XML schema type 'gml:ProjectedCRSType': */
class SOAP_CMAC gml__ProjectedCRSType : public gml__AbstractGeneralDerivedCRSType {
      public:
        /// Union with union _gml__union_ProjectedCRSType variant selector __union_ProjectedCRSType set to one of: SOAP_UNION_gsoap_resqml2_0_1__gml__union_ProjectedCRSType_baseGeodeticCRS
        int __union_ProjectedCRSType;
        union _gml__union_ProjectedCRSType union_ProjectedCRSType;
        /// Required element 'gml:cartesianCS' of XML schema type 'gml:CartesianCSPropertyType'
        gml__CartesianCSPropertyType *cartesianCS;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type gml__ProjectedCRSType, default initialized and not managed by a soap context
        virtual gml__ProjectedCRSType *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(gml__ProjectedCRSType); }
      public:
        /// Constructor with default initializations
        gml__ProjectedCRSType() : __union_ProjectedCRSType(), cartesianCS() { }
        virtual ~gml__ProjectedCRSType() { }
        /// Friend allocator used by soap_new_gml__ProjectedCRSType(struct soap*, int)
        friend SOAP_FMAC1 gml__ProjectedCRSType * SOAP_FMAC2 soap_instantiate_gml__ProjectedCRSType(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* resqml2_0_1ForGsoap.h:37242 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header (-1809547264)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* resqml2_0_1ForGsoap.h:37242 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code (-1809547265)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* resqml2_0_1ForGsoap.h:37242 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail (-1809547267)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* resqml2_0_1ForGsoap.h:37242 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason (-1809547270)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* resqml2_0_1ForGsoap.h:37242 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault (-1809547271)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__XML
#define SOAP_TYPE_gsoap_resqml2_0_1__XML (-5)

typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__QName
#define SOAP_TYPE_gsoap_resqml2_0_1__QName (-6)

typedef char *_QName;
#endif

/* resqml2_0_1ForGsoap.h:246 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer (-12)

typedef LONG64 xsd__integer;
#endif

/* resqml2_0_1ForGsoap.h:249 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger (-15)

typedef ULONG64 xsd__nonNegativeInteger;
#endif

/* resqml2_0_1ForGsoap.h:252 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger (-16)

typedef ULONG64 xsd__positiveInteger;
#endif

/* resqml2_0_1ForGsoap.h:255 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID (-18)

typedef std::string xsd__ID;
#endif

/* resqml2_0_1ForGsoap.h:258 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI (-19)

typedef std::string xsd__anyURI;
#endif

/* resqml2_0_1ForGsoap.h:261 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__date
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__date (-20)

typedef std::string xsd__date;
#endif

/* resqml2_0_1ForGsoap.h:1370 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType (-558)

typedef std::string gml__NilReasonType;
#endif

/* resqml2_0_1ForGsoap.h:1374 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration (-559)

typedef std::string gml__NilReasonEnumeration;
#endif

/* resqml2_0_1ForGsoap.h:1377 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier (-560)

typedef std::string gml__UomIdentifier;
#endif

/* resqml2_0_1ForGsoap.h:1412 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType (-561)

typedef std::string gco__Date_USCOREType;
#endif

/* resqml2_0_1ForGsoap.h:4282 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString (-602)

typedef std::string eml20__UuidString;
#endif

/* resqml2_0_1ForGsoap.h:4290 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure (-604)

typedef double eml20__Measure;
#endif

/* resqml2_0_1ForGsoap.h:4299 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__String
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__String (-605)

typedef std::string eml20__String;
#endif

/* resqml2_0_1ForGsoap.h:4316 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol (-606)

typedef std::string gml__UomSymbol;
#endif

/* resqml2_0_1ForGsoap.h:4327 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI (-607)

typedef std::string gml__UomURI;
#endif

/* resqml2_0_1ForGsoap.h:4440 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString (-611)

typedef std::string eml20__DescriptionString;
#endif

/* resqml2_0_1ForGsoap.h:4449 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum (-612)

typedef std::string eml20__TypeEnum;
#endif

/* resqml2_0_1ForGsoap.h:4459 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString (-613)

typedef std::string eml20__NameString;
#endif

/* resqml2_0_1ForGsoap.h:4470 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString (-614)

typedef std::string eml20__UidString;
#endif

/* resqml2_0_1ForGsoap.h:4480 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString (-615)

typedef std::string eml20__MaximumLengthString;
#endif

/* resqml2_0_1ForGsoap.h:4490 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum (-616)

typedef std::string eml20__UomEnum;
#endif

/* resqml2_0_1ForGsoap.h:5055 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString (-619)

typedef eml20__MaximumLengthString eml20__CommentString;
#endif

/* resqml2_0_1ForGsoap.h:34048 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity (-1201)

typedef resqml20__obj_USCOREActivity _resqml20__Activity;
#endif

/* resqml2_0_1ForGsoap.h:34051 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate (-1202)

typedef resqml20__obj_USCOREActivityTemplate _resqml20__ActivityTemplate;
#endif

/* resqml2_0_1ForGsoap.h:34054 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries (-1203)

typedef resqml20__obj_USCORECategoricalPropertySeries _resqml20__CategoricalPropertySeries;
#endif

/* resqml2_0_1ForGsoap.h:34057 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries (-1204)

typedef resqml20__obj_USCORECommentPropertySeries _resqml20__CommentPropertySeries;
#endif

/* resqml2_0_1ForGsoap.h:34060 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries (-1205)

typedef resqml20__obj_USCOREContinuousPropertySeries _resqml20__ContinuousPropertySeries;
#endif

/* resqml2_0_1ForGsoap.h:34063 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries (-1206)

typedef resqml20__obj_USCOREDiscretePropertySeries _resqml20__DiscretePropertySeries;
#endif

/* resqml2_0_1ForGsoap.h:34066 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature (-1207)

typedef resqml20__obj_USCOREStreamlinesFeature _resqml20__StreamlinesFeature;
#endif

/* resqml2_0_1ForGsoap.h:34069 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation (-1208)

typedef resqml20__obj_USCOREStreamlinesRepresentation _resqml20__StreamlinesRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34072 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs (-1209)

typedef resqml20__obj_USCORELocalDepth3dCrs _resqml20__LocalDepth3dCrs;
#endif

/* resqml2_0_1ForGsoap.h:34075 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs (-1210)

typedef resqml20__obj_USCORELocalTime3dCrs _resqml20__LocalTime3dCrs;
#endif

/* resqml2_0_1ForGsoap.h:34078 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries (-1211)

typedef resqml20__obj_USCORETimeSeries _resqml20__TimeSeries;
#endif

/* resqml2_0_1ForGsoap.h:34081 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature (-1212)

typedef resqml20__obj_USCOREFluidBoundaryFeature _resqml20__FluidBoundaryFeature;
#endif

/* resqml2_0_1ForGsoap.h:34084 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature (-1213)

typedef resqml20__obj_USCOREGeneticBoundaryFeature _resqml20__GeneticBoundaryFeature;
#endif

/* resqml2_0_1ForGsoap.h:34087 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature (-1214)

typedef resqml20__obj_USCOREGeobodyFeature _resqml20__GeobodyFeature;
#endif

/* resqml2_0_1ForGsoap.h:34090 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn (-1215)

typedef resqml20__obj_USCOREGlobalChronostratigraphicColumn _resqml20__GlobalChronostratigraphicColumn;
#endif

/* resqml2_0_1ForGsoap.h:34093 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature (-1216)

typedef resqml20__obj_USCORERockFluidUnitFeature _resqml20__RockFluidUnitFeature;
#endif

/* resqml2_0_1ForGsoap.h:34096 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature (-1217)

typedef resqml20__obj_USCOREStratigraphicUnitFeature _resqml20__StratigraphicUnitFeature;
#endif

/* resqml2_0_1ForGsoap.h:34099 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature (-1218)

typedef resqml20__obj_USCORETectonicBoundaryFeature _resqml20__TectonicBoundaryFeature;
#endif

/* resqml2_0_1ForGsoap.h:34102 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature (-1219)

typedef resqml20__obj_USCOREBoundaryFeature _resqml20__BoundaryFeature;
#endif

/* resqml2_0_1ForGsoap.h:34105 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature (-1220)

typedef resqml20__obj_USCOREGeologicUnitFeature _resqml20__GeologicUnitFeature;
#endif

/* resqml2_0_1ForGsoap.h:34108 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature (-1221)

typedef resqml20__obj_USCOREOrganizationFeature _resqml20__OrganizationFeature;
#endif

/* resqml2_0_1ForGsoap.h:34111 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature (-1222)

typedef resqml20__obj_USCOREFrontierFeature _resqml20__FrontierFeature;
#endif

/* resqml2_0_1ForGsoap.h:34114 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature (-1223)

typedef resqml20__obj_USCORESeismicLatticeFeature _resqml20__SeismicLatticeFeature;
#endif

/* resqml2_0_1ForGsoap.h:34117 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature (-1224)

typedef resqml20__obj_USCORESeismicLineFeature _resqml20__SeismicLineFeature;
#endif

/* resqml2_0_1ForGsoap.h:34120 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature (-1225)

typedef resqml20__obj_USCORESeismicLineSetFeature _resqml20__SeismicLineSetFeature;
#endif

/* resqml2_0_1ForGsoap.h:34123 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature (-1226)

typedef resqml20__obj_USCOREWellboreFeature _resqml20__WellboreFeature;
#endif

/* resqml2_0_1ForGsoap.h:34126 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation (-1227)

typedef resqml20__obj_USCOREBoundaryFeatureInterpretation _resqml20__BoundaryFeatureInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34129 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation (-1228)

typedef resqml20__obj_USCOREGenericFeatureInterpretation _resqml20__GenericFeatureInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34132 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation (-1229)

typedef resqml20__obj_USCOREGeologicUnitInterpretation _resqml20__GeologicUnitInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34135 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn (-1230)

typedef resqml20__obj_USCOREStratigraphicColumn _resqml20__StratigraphicColumn;
#endif

/* resqml2_0_1ForGsoap.h:34138 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation (-1231)

typedef resqml20__obj_USCOREStratigraphicColumnRankInterpretation _resqml20__StratigraphicColumnRankInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34141 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation (-1232)

typedef resqml20__obj_USCOREStratigraphicOccurrenceInterpretation _resqml20__StratigraphicOccurrenceInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34144 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation (-1233)

typedef resqml20__obj_USCOREStructuralOrganizationInterpretation _resqml20__StructuralOrganizationInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34147 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation (-1234)

typedef resqml20__obj_USCOREWellboreInterpretation _resqml20__WellboreInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34150 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation (-1235)

typedef resqml20__obj_USCOREEarthModelInterpretation _resqml20__EarthModelInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34153 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation (-1236)

typedef resqml20__obj_USCOREFaultInterpretation _resqml20__FaultInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34156 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation (-1237)

typedef resqml20__obj_USCOREGeobodyBoundaryInterpretation _resqml20__GeobodyBoundaryInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34159 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation (-1238)

typedef resqml20__obj_USCOREGeobodyInterpretation _resqml20__GeobodyInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34162 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation (-1239)

typedef resqml20__obj_USCORERockFluidUnitInterpretation _resqml20__RockFluidUnitInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34165 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation (-1240)

typedef resqml20__obj_USCOREHorizonInterpretation _resqml20__HorizonInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34168 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation (-1241)

typedef resqml20__obj_USCORERockFluidOrganizationInterpretation _resqml20__RockFluidOrganizationInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34171 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation (-1242)

typedef resqml20__obj_USCOREStratigraphicUnitInterpretation _resqml20__StratigraphicUnitInterpretation;
#endif

/* resqml2_0_1ForGsoap.h:34174 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation (-1243)

typedef resqml20__obj_USCORERedefinedGeometryRepresentation _resqml20__RedefinedGeometryRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34177 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet (-1244)

typedef resqml20__obj_USCORERepresentationIdentitySet _resqml20__RepresentationIdentitySet;
#endif

/* resqml2_0_1ForGsoap.h:34180 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation (-1245)

typedef resqml20__obj_USCORERepresentationSetRepresentation _resqml20__RepresentationSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34183 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation (-1246)

typedef resqml20__obj_USCORESubRepresentation _resqml20__SubRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34186 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation (-1247)

typedef resqml20__obj_USCOREGpGridRepresentation _resqml20__GpGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34189 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation (-1248)

typedef resqml20__obj_USCOREGridConnectionSetRepresentation _resqml20__GridConnectionSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34192 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation (-1249)

typedef resqml20__obj_USCOREIjkGridRepresentation _resqml20__IjkGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34195 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet (-1250)

typedef resqml20__obj_USCORELocalGridSet _resqml20__LocalGridSet;
#endif

/* resqml2_0_1ForGsoap.h:34198 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation (-1251)

typedef resqml20__obj_USCORETruncatedIjkGridRepresentation _resqml20__TruncatedIjkGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34201 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation (-1252)

typedef resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation _resqml20__TruncatedUnstructuredColumnLayerGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34204 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation (-1253)

typedef resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation _resqml20__UnstructuredColumnLayerGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34207 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation (-1254)

typedef resqml20__obj_USCOREUnstructuredGridRepresentation _resqml20__UnstructuredGridRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34210 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation (-1255)

typedef resqml20__obj_USCOREGrid2dRepresentation _resqml20__Grid2dRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34213 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation (-1256)

typedef resqml20__obj_USCOREGrid2dSetRepresentation _resqml20__Grid2dSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34216 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation (-1257)

typedef resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation _resqml20__NonSealedSurfaceFrameworkRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34219 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation (-1258)

typedef resqml20__obj_USCOREPlaneSetRepresentation _resqml20__PlaneSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34222 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation (-1259)

typedef resqml20__obj_USCOREPointSetRepresentation _resqml20__PointSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34225 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation (-1260)

typedef resqml20__obj_USCOREPolylineRepresentation _resqml20__PolylineRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34228 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation (-1261)

typedef resqml20__obj_USCOREPolylineSetRepresentation _resqml20__PolylineSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34231 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation (-1262)

typedef resqml20__obj_USCORESealedSurfaceFrameworkRepresentation _resqml20__SealedSurfaceFrameworkRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34234 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation (-1263)

typedef resqml20__obj_USCORESealedVolumeFrameworkRepresentation _resqml20__SealedVolumeFrameworkRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34237 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation (-1264)

typedef resqml20__obj_USCORETriangulatedSetRepresentation _resqml20__TriangulatedSetRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34240 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation (-1265)

typedef resqml20__obj_USCOREBlockedWellboreRepresentation _resqml20__BlockedWellboreRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34243 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation (-1266)

typedef resqml20__obj_USCOREDeviationSurveyRepresentation _resqml20__DeviationSurveyRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34246 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum (-1267)

typedef resqml20__obj_USCOREMdDatum _resqml20__MdDatum;
#endif

/* resqml2_0_1ForGsoap.h:34249 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation (-1268)

typedef resqml20__obj_USCOREWellboreFrameRepresentation _resqml20__WellboreFrameRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34252 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation (-1269)

typedef resqml20__obj_USCOREWellboreMarkerFrameRepresentation _resqml20__WellboreMarkerFrameRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34255 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation (-1270)

typedef resqml20__obj_USCOREWellboreTrajectoryRepresentation _resqml20__WellboreTrajectoryRepresentation;
#endif

/* resqml2_0_1ForGsoap.h:34258 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty (-1271)

typedef resqml20__obj_USCORECategoricalProperty _resqml20__CategoricalProperty;
#endif

/* resqml2_0_1ForGsoap.h:34261 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty (-1272)

typedef resqml20__obj_USCORECommentProperty _resqml20__CommentProperty;
#endif

/* resqml2_0_1ForGsoap.h:34264 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty (-1273)

typedef resqml20__obj_USCOREContinuousProperty _resqml20__ContinuousProperty;
#endif

/* resqml2_0_1ForGsoap.h:34267 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty (-1274)

typedef resqml20__obj_USCOREDiscreteProperty _resqml20__DiscreteProperty;
#endif

/* resqml2_0_1ForGsoap.h:34270 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup (-1275)

typedef resqml20__obj_USCOREDoubleTableLookup _resqml20__DoubleTableLookup;
#endif

/* resqml2_0_1ForGsoap.h:34273 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty (-1276)

typedef resqml20__obj_USCOREPointsProperty _resqml20__PointsProperty;
#endif

/* resqml2_0_1ForGsoap.h:34276 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind (-1277)

typedef resqml20__obj_USCOREPropertyKind _resqml20__PropertyKind;
#endif

/* resqml2_0_1ForGsoap.h:34279 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet (-1278)

typedef resqml20__obj_USCOREPropertySet _resqml20__PropertySet;
#endif

/* resqml2_0_1ForGsoap.h:34282 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup (-1279)

typedef resqml20__obj_USCOREStringTableLookup _resqml20__StringTableLookup;
#endif

/* resqml2_0_1ForGsoap.h:34301 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference (-1280)

typedef eml20__obj_USCOREEpcExternalPartReference _eml20__EpcExternalPartReference;
#endif

/* resqml2_0_1ForGsoap.h:34308 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject (-1281)

typedef eml20__AbstractObject _eml20__AbstractDataObject;
#endif

/* resqml2_0_1ForGsoap.h:34315 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject (-1282)

typedef eml20__AbstractObject _eml20__AbstractContextualObject;
#endif

/* resqml2_0_1ForGsoap.h:34334 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS (-1283)

typedef gml__GeodeticCRSType _gml__GeodeticCRS;
#endif

/* resqml2_0_1ForGsoap.h:34341 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__description
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__description (-1284)

typedef gml__StringOrRefType _gml__description;
#endif

/* resqml2_0_1ForGsoap.h:34348 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference (-1285)

typedef gml__ReferenceType _gml__descriptionReference;
#endif

/* resqml2_0_1ForGsoap.h:34355 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier (-1286)

typedef gml__CodeWithAuthorityType _gml__identifier;
#endif

/* resqml2_0_1ForGsoap.h:34362 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__name
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__name (-1287)

typedef gml__CodeType _gml__name;
#endif

/* resqml2_0_1ForGsoap.h:34365 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks (-1288)

typedef std::string _gml__remarks;
#endif

/* resqml2_0_1ForGsoap.h:34374 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition (-1289)

typedef gml__DefinitionType _gml__Definition;
#endif

/* resqml2_0_1ForGsoap.h:34381 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__scope
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__scope (-1290)

typedef std::string _gml__scope;
#endif

/* resqml2_0_1ForGsoap.h:34388 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS (-1291)

typedef gml__EllipsoidalCSPropertyType _gml__ellipsoidalCS;
#endif

/* resqml2_0_1ForGsoap.h:34395 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS (-1292)

typedef gml__EllipsoidalCSType _gml__EllipsoidalCS;
#endif

/* resqml2_0_1ForGsoap.h:34402 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axis (-1293)

typedef gml__CoordinateSystemAxisPropertyType _gml__axis;
#endif

/* resqml2_0_1ForGsoap.h:34409 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis (-1294)

typedef gml__CoordinateSystemAxisType _gml__CoordinateSystemAxis;
#endif

/* resqml2_0_1ForGsoap.h:34416 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev (-1295)

typedef gml__CodeType _gml__axisAbbrev;
#endif

/* resqml2_0_1ForGsoap.h:34425 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection (-1296)

typedef gml__CodeWithAuthorityType _gml__axisDirection;
#endif

/* resqml2_0_1ForGsoap.h:34432 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue (-1297)

typedef double _gml__minimumValue;
#endif

/* resqml2_0_1ForGsoap.h:34439 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue (-1298)

typedef double _gml__maximumValue;
#endif

/* resqml2_0_1ForGsoap.h:34446 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning (-1299)

typedef gml__CodeWithAuthorityType _gml__rangeMeaning;
#endif

/* resqml2_0_1ForGsoap.h:34453 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS (-1300)

typedef gml__CartesianCSPropertyType _gml__cartesianCS;
#endif

/* resqml2_0_1ForGsoap.h:34460 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS (-1301)

typedef gml__CartesianCSType _gml__CartesianCS;
#endif

/* resqml2_0_1ForGsoap.h:34467 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS (-1302)

typedef gml__SphericalCSPropertyType _gml__sphericalCS;
#endif

/* resqml2_0_1ForGsoap.h:34474 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS (-1303)

typedef gml__SphericalCSType _gml__SphericalCS;
#endif

/* resqml2_0_1ForGsoap.h:34481 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum (-1304)

typedef gml__GeodeticDatumPropertyType _gml__geodeticDatum;
#endif

/* resqml2_0_1ForGsoap.h:34488 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum (-1305)

typedef gml__GeodeticDatumType _gml__GeodeticDatum;
#endif

/* resqml2_0_1ForGsoap.h:34499 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition (-1306)

typedef gml__CodeType _gml__anchorDefinition;
#endif

/* resqml2_0_1ForGsoap.h:34506 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch (-1307)

typedef xsd__date _gml__realizationEpoch;
#endif

/* resqml2_0_1ForGsoap.h:34513 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian (-1308)

typedef gml__PrimeMeridianPropertyType _gml__primeMeridian;
#endif

/* resqml2_0_1ForGsoap.h:34520 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian (-1309)

typedef gml__PrimeMeridianType _gml__PrimeMeridian;
#endif

/* resqml2_0_1ForGsoap.h:34527 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude (-1310)

typedef gml__AngleType _gml__greenwichLongitude;
#endif

/* resqml2_0_1ForGsoap.h:34534 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid (-1311)

typedef gml__EllipsoidPropertyType _gml__ellipsoid;
#endif

/* resqml2_0_1ForGsoap.h:34541 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid (-1312)

typedef gml__EllipsoidType _gml__Ellipsoid;
#endif

/* resqml2_0_1ForGsoap.h:34548 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis (-1313)

typedef gml__MeasureType _gml__semiMajorAxis;
#endif

/* resqml2_0_1ForGsoap.h:34555 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS (-1314)

typedef gml__ProjectedCRSType _gml__ProjectedCRS;
#endif

/* resqml2_0_1ForGsoap.h:34562 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion (-1315)

typedef gml__GeneralConversionPropertyType _gml__conversion;
#endif

/* resqml2_0_1ForGsoap.h:34569 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion (-1316)

typedef std::string _gml__operationVersion;
#endif

/* resqml2_0_1ForGsoap.h:34576 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS (-1317)

typedef gml__CRSPropertyType _gml__sourceCRS;
#endif

/* resqml2_0_1ForGsoap.h:34583 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS (-1318)

typedef gml__CRSPropertyType _gml__targetCRS;
#endif

/* resqml2_0_1ForGsoap.h:34590 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS (-1319)

typedef gml__GeodeticCRSPropertyType _gml__baseGeodeticCRS;
#endif

/* resqml2_0_1ForGsoap.h:34597 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS (-1320)

typedef gml__VerticalCRSType _gml__VerticalCRS;
#endif

/* resqml2_0_1ForGsoap.h:34604 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS (-1321)

typedef gml__VerticalCSPropertyType _gml__verticalCS;
#endif

/* resqml2_0_1ForGsoap.h:34611 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS (-1322)

typedef gml__VerticalCSType _gml__VerticalCS;
#endif

/* resqml2_0_1ForGsoap.h:34618 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum (-1323)

typedef gml__VerticalDatumPropertyType _gml__verticalDatum;
#endif

/* resqml2_0_1ForGsoap.h:34625 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum (-1324)

typedef gml__VerticalDatumType _gml__VerticalDatum;
#endif

/* resqml2_0_1ForGsoap.h:34640 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__id
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__id (-1325)

typedef xsd__ID _gml__id;
#endif

/* resqml2_0_1ForGsoap.h:34659 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__href
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__href (-1326)

typedef xsd__anyURI _xlink__href;
#endif

/* resqml2_0_1ForGsoap.h:34662 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__role
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__role (-1327)

typedef xsd__anyURI _xlink__role;
#endif

/* resqml2_0_1ForGsoap.h:34665 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole (-1328)

typedef xsd__anyURI _xlink__arcrole;
#endif

/* resqml2_0_1ForGsoap.h:34668 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__title
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__title (-1329)

typedef std::string _xlink__title;
#endif

/* resqml2_0_1ForGsoap.h:34679 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent (-1330)

typedef gmd__EX_USCOREExtent_USCOREType _gmd__EX_USCOREExtent;
#endif

/* resqml2_0_1ForGsoap.h:34682 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent (-1331)

typedef gmd__EX_USCORETemporalExtent_USCOREType _gmd__EX_USCORETemporalExtent;
#endif

/* resqml2_0_1ForGsoap.h:34685 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent (-1332)

typedef gmd__EX_USCOREVerticalExtent_USCOREType _gmd__EX_USCOREVerticalExtent;
#endif

/* resqml2_0_1ForGsoap.h:34688 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier (-1333)

typedef gmd__MD_USCOREIdentifier_USCOREType _gmd__MD_USCOREIdentifier;
#endif

/* resqml2_0_1ForGsoap.h:34691 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation (-1334)

typedef gmd__CI_USCORECitation_USCOREType _gmd__CI_USCORECitation;
#endif

/* resqml2_0_1ForGsoap.h:34694 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate (-1335)

typedef gmd__CI_USCOREDate_USCOREType _gmd__CI_USCOREDate;
#endif

/* resqml2_0_1ForGsoap.h:34697 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode (-1336)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREDateTypeCode;
#endif

/* resqml2_0_1ForGsoap.h:34700 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty (-1337)

typedef gmd__CI_USCOREResponsibleParty_USCOREType _gmd__CI_USCOREResponsibleParty;
#endif

/* resqml2_0_1ForGsoap.h:34703 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact (-1338)

typedef gmd__CI_USCOREContact_USCOREType _gmd__CI_USCOREContact;
#endif

/* resqml2_0_1ForGsoap.h:34706 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone (-1339)

typedef gmd__CI_USCORETelephone_USCOREType _gmd__CI_USCORETelephone;
#endif

/* resqml2_0_1ForGsoap.h:34709 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress (-1340)

typedef gmd__CI_USCOREAddress_USCOREType _gmd__CI_USCOREAddress;
#endif

/* resqml2_0_1ForGsoap.h:34712 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource (-1341)

typedef gmd__CI_USCOREOnlineResource_USCOREType _gmd__CI_USCOREOnlineResource;
#endif

/* resqml2_0_1ForGsoap.h:34715 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL (-1342)

typedef xsd__anyURI _gmd__URL;
#endif

/* resqml2_0_1ForGsoap.h:34718 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode (-1343)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREOnLineFunctionCode;
#endif

/* resqml2_0_1ForGsoap.h:34721 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode (-1344)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCORERoleCode;
#endif

/* resqml2_0_1ForGsoap.h:34724 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode (-1345)

typedef gco__CodeListValue_USCOREType _gmd__CI_USCOREPresentationFormCode;
#endif

/* resqml2_0_1ForGsoap.h:34727 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries (-1346)

typedef gmd__CI_USCORESeries_USCOREType _gmd__CI_USCORESeries;
#endif

/* resqml2_0_1ForGsoap.h:34730 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode (-1347)

typedef gco__CodeListValue_USCOREType _gmd__DQ_USCOREEvaluationMethodTypeCode;
#endif

/* resqml2_0_1ForGsoap.h:34765 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString (-1348)

typedef std::string _gco__CharacterString;
#endif

/* resqml2_0_1ForGsoap.h:34768 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean (-1349)

typedef bool _gco__Boolean;
#endif

/* resqml2_0_1ForGsoap.h:34771 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Real
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Real (-1350)

typedef double _gco__Real;
#endif

/* resqml2_0_1ForGsoap.h:34774 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Date
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Date (-1351)

typedef gco__Date_USCOREType _gco__Date;
#endif

/* resqml2_0_1ForGsoap.h:34777 */
#ifndef SOAP_TYPE__gco__DateTime
#define SOAP_TYPE__gco__DateTime (-1352)

typedef xsd__dateTime _gco__DateTime;
#endif

/* resqml2_0_1ForGsoap.h:34788 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason (-1353)

typedef gml__NilReasonType _gco__nilReason;
#endif

/* resqml2_0_1ForGsoap.h:34819 */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet
#define SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet (-1354)

typedef ptm__standardEnergisticsPropertyTypeSet _ptm__standardEnergisticsPropertyTypeSet;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_byte
#define SOAP_TYPE_gsoap_resqml2_0_1_byte (-3)

#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_int
#define SOAP_TYPE_gsoap_resqml2_0_1_int (-1)

#endif

/* long has binding name 'long' for type 'xsd:long' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_long
#define SOAP_TYPE_gsoap_resqml2_0_1_long (-10)

#endif

/* xsd__integer has binding name 'xsd__integer' for type 'xsd:integer' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer (-12)

#endif

/* LONG64 has binding name 'LONG64' for type 'xsd:long' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_LONG64
#define SOAP_TYPE_gsoap_resqml2_0_1_LONG64 (-11)

#endif

/* _gco__Real has binding name '_gco__Real' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Real
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Real (-1350)

#endif

/* _gml__maximumValue has binding name '_gml__maximumValue' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue (-1298)

#endif

/* _gml__minimumValue has binding name '_gml__minimumValue' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue (-1297)

#endif

/* eml20__Measure has binding name 'eml20__Measure' for type 'eml20:Measure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Measure (-604)

#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_double
#define SOAP_TYPE_gsoap_resqml2_0_1_double (-603)

#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt
#define SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt (-13)

#endif

/* xsd__positiveInteger has binding name 'xsd__positiveInteger' for type 'xsd:positiveInteger' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger (-16)

#endif

/* xsd__nonNegativeInteger has binding name 'xsd__nonNegativeInteger' for type 'xsd:nonNegativeInteger' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger (-15)

#endif

/* ULONG64 has binding name 'ULONG64' for type 'xsd:unsignedLong' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ULONG64
#define SOAP_TYPE_gsoap_resqml2_0_1_ULONG64 (-14)

#endif

/* _gco__Boolean has binding name '_gco__Boolean' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean (-1349)

#endif

/* enum _gml__RelatedTimeType_relativePosition has binding name '_gml__RelatedTimeType_relativePosition' for type 'gml:RelatedTimeType-relativePosition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition (-1027)

#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_bool
#define SOAP_TYPE_gsoap_resqml2_0_1_bool (-845)

#endif

/* enum eml20__DigitalStorageUom has binding name 'eml20__DigitalStorageUom' for type 'eml20:DigitalStorageUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageUom (-797)

#endif

/* enum eml20__MagneticDipoleMomentUom has binding name 'eml20__MagneticDipoleMomentUom' for type 'eml20:MagneticDipoleMomentUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentUom (-796)

#endif

/* enum eml20__EnergyPerAreaUom has binding name 'eml20__EnergyPerAreaUom' for type 'eml20:EnergyPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaUom (-795)

#endif

/* enum eml20__LightExposureUom has binding name 'eml20__LightExposureUom' for type 'eml20:LightExposureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureUom (-794)

#endif

/* enum eml20__ReciprocalPressureUom has binding name 'eml20__ReciprocalPressureUom' for type 'eml20:ReciprocalPressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureUom (-793)

#endif

/* enum eml20__ForcePerLengthUom has binding name 'eml20__ForcePerLengthUom' for type 'eml20:ForcePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthUom (-792)

#endif

/* enum eml20__ElectricResistancePerLengthUom has binding name 'eml20__ElectricResistancePerLengthUom' for type 'eml20:ElectricResistancePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthUom (-791)

#endif

/* enum eml20__EnergyLengthPerAreaUom has binding name 'eml20__EnergyLengthPerAreaUom' for type 'eml20:EnergyLengthPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaUom (-790)

#endif

/* enum eml20__TimePerVolumeUom has binding name 'eml20__TimePerVolumeUom' for type 'eml20:TimePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeUom (-789)

#endif

/* enum eml20__AngularVelocityUom has binding name 'eml20__AngularVelocityUom' for type 'eml20:AngularVelocityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityUom (-788)

#endif

/* enum eml20__AreaPerAreaUom has binding name 'eml20__AreaPerAreaUom' for type 'eml20:AreaPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaUom (-787)

#endif

/* enum eml20__PressureUom has binding name 'eml20__PressureUom' for type 'eml20:PressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureUom (-786)

#endif

/* enum eml20__ReciprocalVolumeUom has binding name 'eml20__ReciprocalVolumeUom' for type 'eml20:ReciprocalVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeUom (-785)

#endif

/* enum eml20__ElectricResistanceUom has binding name 'eml20__ElectricResistanceUom' for type 'eml20:ElectricResistanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceUom (-784)

#endif

/* enum eml20__IsothermalCompressibilityUom has binding name 'eml20__IsothermalCompressibilityUom' for type 'eml20:IsothermalCompressibilityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityUom (-783)

#endif

/* enum eml20__AttenuationPerFrequencyIntervalUom has binding name 'eml20__AttenuationPerFrequencyIntervalUom' for type 'eml20:AttenuationPerFrequencyIntervalUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalUom (-782)

#endif

/* enum eml20__TemperatureIntervalPerLengthUom has binding name 'eml20__TemperatureIntervalPerLengthUom' for type 'eml20:TemperatureIntervalPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthUom (-781)

#endif

/* enum eml20__VolumePerMassUom has binding name 'eml20__VolumePerMassUom' for type 'eml20:VolumePerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassUom (-780)

#endif

/* enum eml20__EnergyPerMassPerTimeUom has binding name 'eml20__EnergyPerMassPerTimeUom' for type 'eml20:EnergyPerMassPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeUom (-779)

#endif

/* enum eml20__TimePerTimeUom has binding name 'eml20__TimePerTimeUom' for type 'eml20:TimePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeUom (-778)

#endif

/* enum eml20__DiffusionCoefficientUom has binding name 'eml20__DiffusionCoefficientUom' for type 'eml20:DiffusionCoefficientUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientUom (-777)

#endif

/* enum eml20__AnglePerVolumeUom has binding name 'eml20__AnglePerVolumeUom' for type 'eml20:AnglePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeUom (-776)

#endif

/* enum eml20__VolumePerVolumeUom has binding name 'eml20__VolumePerVolumeUom' for type 'eml20:VolumePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeUom (-775)

#endif

/* enum eml20__PressureTimePerVolumeUom has binding name 'eml20__PressureTimePerVolumeUom' for type 'eml20:PressureTimePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeUom (-774)

#endif

/* enum eml20__EnergyLengthPerTimeAreaTemperatureUom has binding name 'eml20__EnergyLengthPerTimeAreaTemperatureUom' for type 'eml20:EnergyLengthPerTimeAreaTemperatureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureUom (-773)

#endif

/* enum eml20__NormalizedPowerUom has binding name 'eml20__NormalizedPowerUom' for type 'eml20:NormalizedPowerUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerUom (-772)

#endif

/* enum eml20__VolumetricHeatTransferCoefficientUom has binding name 'eml20__VolumetricHeatTransferCoefficientUom' for type 'eml20:VolumetricHeatTransferCoefficientUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientUom (-771)

#endif

/* enum eml20__TimePerMassUom has binding name 'eml20__TimePerMassUom' for type 'eml20:TimePerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassUom (-770)

#endif

/* enum eml20__AbsorbedDoseUom has binding name 'eml20__AbsorbedDoseUom' for type 'eml20:AbsorbedDoseUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseUom (-769)

#endif

/* enum eml20__LuminousIntensityUom has binding name 'eml20__LuminousIntensityUom' for type 'eml20:LuminousIntensityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityUom (-768)

#endif

/* enum eml20__FrequencyUom has binding name 'eml20__FrequencyUom' for type 'eml20:FrequencyUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyUom (-767)

#endif

/* enum eml20__PowerPerVolumeUom has binding name 'eml20__PowerPerVolumeUom' for type 'eml20:PowerPerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeUom (-766)

#endif

/* enum eml20__MassPerTimePerAreaUom has binding name 'eml20__MassPerTimePerAreaUom' for type 'eml20:MassPerTimePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaUom (-765)

#endif

/* enum eml20__MomentumUom has binding name 'eml20__MomentumUom' for type 'eml20:MomentumUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumUom (-764)

#endif

/* enum eml20__ElectricConductanceUom has binding name 'eml20__ElectricConductanceUom' for type 'eml20:ElectricConductanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceUom (-763)

#endif

/* enum eml20__MolarEnergyUom has binding name 'eml20__MolarEnergyUom' for type 'eml20:MolarEnergyUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyUom (-762)

#endif

/* enum eml20__HeatCapacityUom has binding name 'eml20__HeatCapacityUom' for type 'eml20:HeatCapacityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityUom (-761)

#endif

/* enum eml20__AreaPerTimeUom has binding name 'eml20__AreaPerTimeUom' for type 'eml20:AreaPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeUom (-760)

#endif

/* enum eml20__PotentialDifferencePerPowerDropUom has binding name 'eml20__PotentialDifferencePerPowerDropUom' for type 'eml20:PotentialDifferencePerPowerDropUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropUom (-759)

#endif

/* enum eml20__DynamicViscosityUom has binding name 'eml20__DynamicViscosityUom' for type 'eml20:DynamicViscosityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityUom (-758)

#endif

/* enum eml20__ReciprocalMassUom has binding name 'eml20__ReciprocalMassUom' for type 'eml20:ReciprocalMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassUom (-757)

#endif

/* enum eml20__MagneticPermeabilityUom has binding name 'eml20__MagneticPermeabilityUom' for type 'eml20:MagneticPermeabilityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityUom (-756)

#endif

/* enum eml20__EnergyPerVolumeUom has binding name 'eml20__EnergyPerVolumeUom' for type 'eml20:EnergyPerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeUom (-755)

#endif

/* enum eml20__VolumePerLengthUom has binding name 'eml20__VolumePerLengthUom' for type 'eml20:VolumePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthUom (-754)

#endif

/* enum eml20__VerticalCoordinateUom has binding name 'eml20__VerticalCoordinateUom' for type 'eml20:VerticalCoordinateUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCoordinateUom (-753)

#endif

/* enum eml20__AnglePerLengthUom has binding name 'eml20__AnglePerLengthUom' for type 'eml20:AnglePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthUom (-752)

#endif

/* enum eml20__EnergyUom has binding name 'eml20__EnergyUom' for type 'eml20:EnergyUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyUom (-751)

#endif

/* enum eml20__DimensionlessUom has binding name 'eml20__DimensionlessUom' for type 'eml20:DimensionlessUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessUom (-750)

#endif

/* enum eml20__LinearAccelerationUom has binding name 'eml20__LinearAccelerationUom' for type 'eml20:LinearAccelerationUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationUom (-749)

#endif

/* enum eml20__VolumePerTimePerLengthUom has binding name 'eml20__VolumePerTimePerLengthUom' for type 'eml20:VolumePerTimePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthUom (-748)

#endif

/* enum eml20__LengthPerTemperatureUom has binding name 'eml20__LengthPerTemperatureUom' for type 'eml20:LengthPerTemperatureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureUom (-747)

#endif

/* enum eml20__ReluctanceUom has binding name 'eml20__ReluctanceUom' for type 'eml20:ReluctanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceUom (-746)

#endif

/* enum eml20__APIGravityUom has binding name 'eml20__APIGravityUom' for type 'eml20:APIGravityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityUom (-745)

#endif

/* enum eml20__ElectricChargePerVolumeUom has binding name 'eml20__ElectricChargePerVolumeUom' for type 'eml20:ElectricChargePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeUom (-744)

#endif

/* enum eml20__ForcePerVolumeUom has binding name 'eml20__ForcePerVolumeUom' for type 'eml20:ForcePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeUom (-743)

#endif

/* enum eml20__MassLengthUom has binding name 'eml20__MassLengthUom' for type 'eml20:MassLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthUom (-742)

#endif

/* enum eml20__MassPerVolumePerLengthUom has binding name 'eml20__MassPerVolumePerLengthUom' for type 'eml20:MassPerVolumePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthUom (-741)

#endif

/* enum eml20__ElectricChargePerMassUom has binding name 'eml20__ElectricChargePerMassUom' for type 'eml20:ElectricChargePerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassUom (-740)

#endif

/* enum eml20__PowerPerPowerUom has binding name 'eml20__PowerPerPowerUom' for type 'eml20:PowerPerPowerUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerUom (-739)

#endif

/* enum eml20__DoseEquivalentUom has binding name 'eml20__DoseEquivalentUom' for type 'eml20:DoseEquivalentUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentUom (-738)

#endif

/* enum eml20__HeatFlowRateUom has binding name 'eml20__HeatFlowRateUom' for type 'eml20:HeatFlowRateUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateUom (-737)

#endif

/* enum eml20__RadianceUom has binding name 'eml20__RadianceUom' for type 'eml20:RadianceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceUom (-736)

#endif

/* enum eml20__AmountOfSubstancePerAmountOfSubstanceUom has binding name 'eml20__AmountOfSubstancePerAmountOfSubstanceUom' for type 'eml20:AmountOfSubstancePerAmountOfSubstanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceUom (-735)

#endif

/* enum eml20__TemperatureIntervalPerTimeUom has binding name 'eml20__TemperatureIntervalPerTimeUom' for type 'eml20:TemperatureIntervalPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeUom (-734)

#endif

/* enum eml20__AreaPerVolumeUom has binding name 'eml20__AreaPerVolumeUom' for type 'eml20:AreaPerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeUom (-733)

#endif

/* enum eml20__IlluminanceUom has binding name 'eml20__IlluminanceUom' for type 'eml20:IlluminanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceUom (-732)

#endif

/* enum eml20__MassPerAreaUom has binding name 'eml20__MassPerAreaUom' for type 'eml20:MassPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaUom (-731)

#endif

/* enum eml20__PowerPerAreaUom has binding name 'eml20__PowerPerAreaUom' for type 'eml20:PowerPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaUom (-730)

#endif

/* enum eml20__ThermalInsulanceUom has binding name 'eml20__ThermalInsulanceUom' for type 'eml20:ThermalInsulanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceUom (-729)

#endif

/* enum eml20__ElectromagneticMomentUom has binding name 'eml20__ElectromagneticMomentUom' for type 'eml20:ElectromagneticMomentUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentUom (-728)

#endif

/* enum eml20__PermittivityUom has binding name 'eml20__PermittivityUom' for type 'eml20:PermittivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityUom (-727)

#endif

/* enum eml20__EnergyPerMassUom has binding name 'eml20__EnergyPerMassUom' for type 'eml20:EnergyPerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassUom (-726)

#endif

/* enum eml20__AmountOfSubstancePerVolumeUom has binding name 'eml20__AmountOfSubstancePerVolumeUom' for type 'eml20:AmountOfSubstancePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeUom (-725)

#endif

/* enum eml20__VolumePerTimePerPressureUom has binding name 'eml20__VolumePerTimePerPressureUom' for type 'eml20:VolumePerTimePerPressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureUom (-724)

#endif

/* enum eml20__LuminousFluxUom has binding name 'eml20__LuminousFluxUom' for type 'eml20:LuminousFluxUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxUom (-723)

#endif

/* enum eml20__PressureSquaredPerForceTimePerAreaUom has binding name 'eml20__PressureSquaredPerForceTimePerAreaUom' for type 'eml20:PressureSquaredPerForceTimePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaUom (-722)

#endif

/* enum eml20__MassPerMassUom has binding name 'eml20__MassPerMassUom' for type 'eml20:MassPerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassUom (-721)

#endif

/* enum eml20__ElectricalResistivityUom has binding name 'eml20__ElectricalResistivityUom' for type 'eml20:ElectricalResistivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityUom (-720)

#endif

/* enum eml20__MassPerLengthUom has binding name 'eml20__MassPerLengthUom' for type 'eml20:MassPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthUom (-719)

#endif

/* enum eml20__LinearThermalExpansionUom has binding name 'eml20__LinearThermalExpansionUom' for type 'eml20:LinearThermalExpansionUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionUom (-718)

#endif

/* enum eml20__ThermodynamicTemperatureUom has binding name 'eml20__ThermodynamicTemperatureUom' for type 'eml20:ThermodynamicTemperatureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureUom (-717)

#endif

/* enum eml20__AmountOfSubstancePerTimePerAreaUom has binding name 'eml20__AmountOfSubstancePerTimePerAreaUom' for type 'eml20:AmountOfSubstancePerTimePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaUom (-716)

#endif

/* enum eml20__LengthPerMassUom has binding name 'eml20__LengthPerMassUom' for type 'eml20:LengthPerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassUom (-715)

#endif

/* enum eml20__SpecificHeatCapacityUom has binding name 'eml20__SpecificHeatCapacityUom' for type 'eml20:SpecificHeatCapacityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityUom (-714)

#endif

/* enum eml20__MassUom has binding name 'eml20__MassUom' for type 'eml20:MassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassUom (-713)

#endif

/* enum eml20__ForcePerForceUom has binding name 'eml20__ForcePerForceUom' for type 'eml20:ForcePerForceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceUom (-712)

#endif

/* enum eml20__ThermalResistanceUom has binding name 'eml20__ThermalResistanceUom' for type 'eml20:ThermalResistanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceUom (-711)

#endif

/* enum eml20__AreaPerMassUom has binding name 'eml20__AreaPerMassUom' for type 'eml20:AreaPerMassUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassUom (-710)

#endif

/* enum eml20__LengthUom has binding name 'eml20__LengthUom' for type 'eml20:LengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthUom (-709)

#endif

/* enum eml20__VolumePerTimeUom has binding name 'eml20__VolumePerTimeUom' for type 'eml20:VolumePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeUom (-708)

#endif

/* enum eml20__MagneticFieldStrengthUom has binding name 'eml20__MagneticFieldStrengthUom' for type 'eml20:MagneticFieldStrengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthUom (-707)

#endif

/* enum eml20__MagneticVectorPotentialUom has binding name 'eml20__MagneticVectorPotentialUom' for type 'eml20:MagneticVectorPotentialUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialUom (-706)

#endif

/* enum eml20__LengthPerPressureUom has binding name 'eml20__LengthPerPressureUom' for type 'eml20:LengthPerPressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureUom (-705)

#endif

/* enum eml20__ElectricPotentialDifferenceUom has binding name 'eml20__ElectricPotentialDifferenceUom' for type 'eml20:ElectricPotentialDifferenceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceUom (-704)

#endif

/* enum eml20__ActivityOfRadioactivityUom has binding name 'eml20__ActivityOfRadioactivityUom' for type 'eml20:ActivityOfRadioactivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityUom (-703)

#endif

/* enum eml20__PressurePerVolumeUom has binding name 'eml20__PressurePerVolumeUom' for type 'eml20:PressurePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeUom (-702)

#endif

/* enum eml20__PowerUom has binding name 'eml20__PowerUom' for type 'eml20:PowerUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerUom (-701)

#endif

/* enum eml20__LuminousEfficacyUom has binding name 'eml20__LuminousEfficacyUom' for type 'eml20:LuminousEfficacyUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyUom (-700)

#endif

/* enum eml20__ElectricChargeUom has binding name 'eml20__ElectricChargeUom' for type 'eml20:ElectricChargeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeUom (-699)

#endif

/* enum eml20__PressurePerTimeUom has binding name 'eml20__PressurePerTimeUom' for type 'eml20:PressurePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeUom (-698)

#endif

/* enum eml20__ReciprocalAreaUom has binding name 'eml20__ReciprocalAreaUom' for type 'eml20:ReciprocalAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaUom (-697)

#endif

/* enum eml20__ReciprocalForceUom has binding name 'eml20__ReciprocalForceUom' for type 'eml20:ReciprocalForceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceUom (-696)

#endif

/* enum eml20__VolumePerTimePerPressureLengthUom has binding name 'eml20__VolumePerTimePerPressureLengthUom' for type 'eml20:VolumePerTimePerPressureLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthUom (-695)

#endif

/* enum eml20__KinematicViscosityUom has binding name 'eml20__KinematicViscosityUom' for type 'eml20:KinematicViscosityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityUom (-694)

#endif

/* enum eml20__InductanceUom has binding name 'eml20__InductanceUom' for type 'eml20:InductanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceUom (-693)

#endif

/* enum eml20__DataTransferSpeedUom has binding name 'eml20__DataTransferSpeedUom' for type 'eml20:DataTransferSpeedUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedUom (-692)

#endif

/* enum eml20__PermeabilityLengthUom has binding name 'eml20__PermeabilityLengthUom' for type 'eml20:PermeabilityLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthUom (-691)

#endif

/* enum eml20__RadiantIntensityUom has binding name 'eml20__RadiantIntensityUom' for type 'eml20:RadiantIntensityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityUom (-690)

#endif

/* enum eml20__TemperatureIntervalUom has binding name 'eml20__TemperatureIntervalUom' for type 'eml20:TemperatureIntervalUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalUom (-689)

#endif

/* enum eml20__FrequencyIntervalUom has binding name 'eml20__FrequencyIntervalUom' for type 'eml20:FrequencyIntervalUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalUom (-688)

#endif

/* enum eml20__VolumeFlowRatePerVolumeFlowRateUom has binding name 'eml20__VolumeFlowRatePerVolumeFlowRateUom' for type 'eml20:VolumeFlowRatePerVolumeFlowRateUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateUom (-687)

#endif

/* enum eml20__MolarHeatCapacityUom has binding name 'eml20__MolarHeatCapacityUom' for type 'eml20:MolarHeatCapacityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityUom (-686)

#endif

/* enum eml20__VolumePerTimePerTimeUom has binding name 'eml20__VolumePerTimePerTimeUom' for type 'eml20:VolumePerTimePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeUom (-685)

#endif

/* enum eml20__LuminanceUom has binding name 'eml20__LuminanceUom' for type 'eml20:LuminanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceUom (-684)

#endif

/* enum eml20__ReciprocalLengthUom has binding name 'eml20__ReciprocalLengthUom' for type 'eml20:ReciprocalLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthUom (-683)

#endif

/* enum eml20__LogarithmicPowerRatioPerLengthUom has binding name 'eml20__LogarithmicPowerRatioPerLengthUom' for type 'eml20:LogarithmicPowerRatioPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthUom (-682)

#endif

/* enum eml20__AreaPerAmountOfSubstanceUom has binding name 'eml20__AreaPerAmountOfSubstanceUom' for type 'eml20:AreaPerAmountOfSubstanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceUom (-681)

#endif

/* enum eml20__ThermalConductivityUom has binding name 'eml20__ThermalConductivityUom' for type 'eml20:ThermalConductivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityUom (-680)

#endif

/* enum eml20__TimeUom has binding name 'eml20__TimeUom' for type 'eml20:TimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeUom (-679)

#endif

/* enum eml20__AmountOfSubstancePerAreaUom has binding name 'eml20__AmountOfSubstancePerAreaUom' for type 'eml20:AmountOfSubstancePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaUom (-678)

#endif

/* enum eml20__ElectricFieldStrengthUom has binding name 'eml20__ElectricFieldStrengthUom' for type 'eml20:ElectricFieldStrengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthUom (-677)

#endif

/* enum eml20__ForceAreaUom has binding name 'eml20__ForceAreaUom' for type 'eml20:ForceAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaUom (-676)

#endif

/* enum eml20__SecondMomentOfAreaUom has binding name 'eml20__SecondMomentOfAreaUom' for type 'eml20:SecondMomentOfAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaUom (-675)

#endif

/* enum eml20__PermeabilityRockUom has binding name 'eml20__PermeabilityRockUom' for type 'eml20:PermeabilityRockUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockUom (-674)

#endif

/* enum eml20__VolumePerTimeLengthUom has binding name 'eml20__VolumePerTimeLengthUom' for type 'eml20:VolumePerTimeLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthUom (-673)

#endif

/* enum eml20__ThermalDiffusivityUom has binding name 'eml20__ThermalDiffusivityUom' for type 'eml20:ThermalDiffusivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityUom (-672)

#endif

/* enum eml20__ReciprocalMassTimeUom has binding name 'eml20__ReciprocalMassTimeUom' for type 'eml20:ReciprocalMassTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeUom (-671)

#endif

/* enum eml20__AngularAccelerationUom has binding name 'eml20__AngularAccelerationUom' for type 'eml20:AngularAccelerationUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationUom (-670)

#endif

/* enum eml20__PressureSquaredUom has binding name 'eml20__PressureSquaredUom' for type 'eml20:PressureSquaredUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredUom (-669)

#endif

/* enum eml20__ElectricCurrentUom has binding name 'eml20__ElectricCurrentUom' for type 'eml20:ElectricCurrentUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentUom (-668)

#endif

/* enum eml20__EnergyPerLengthUom has binding name 'eml20__EnergyPerLengthUom' for type 'eml20:EnergyPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthUom (-667)

#endif

/* enum eml20__SignalingEventPerTimeUom has binding name 'eml20__SignalingEventPerTimeUom' for type 'eml20:SignalingEventPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeUom (-666)

#endif

/* enum eml20__PlaneAngleUom has binding name 'eml20__PlaneAngleUom' for type 'eml20:PlaneAngleUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleUom (-665)

#endif

/* enum eml20__MagneticFluxDensityUom has binding name 'eml20__MagneticFluxDensityUom' for type 'eml20:MagneticFluxDensityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityUom (-664)

#endif

/* enum eml20__MassPerTimePerLengthUom has binding name 'eml20__MassPerTimePerLengthUom' for type 'eml20:MassPerTimePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthUom (-663)

#endif

/* enum eml20__ElectricChargePerAreaUom has binding name 'eml20__ElectricChargePerAreaUom' for type 'eml20:ElectricChargePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaUom (-662)

#endif

/* enum eml20__VolumePerPressureUom has binding name 'eml20__VolumePerPressureUom' for type 'eml20:VolumePerPressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureUom (-661)

#endif

/* enum eml20__TimePerLengthUom has binding name 'eml20__TimePerLengthUom' for type 'eml20:TimePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthUom (-660)

#endif

/* enum eml20__ReciprocalElectricPotentialDifferenceUom has binding name 'eml20__ReciprocalElectricPotentialDifferenceUom' for type 'eml20:ReciprocalElectricPotentialDifferenceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceUom (-659)

#endif

/* enum eml20__VolumePerAreaUom has binding name 'eml20__VolumePerAreaUom' for type 'eml20:VolumePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaUom (-658)

#endif

/* enum eml20__ForceUom has binding name 'eml20__ForceUom' for type 'eml20:ForceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceUom (-657)

#endif

/* enum eml20__ElectricCurrentDensityUom has binding name 'eml20__ElectricCurrentDensityUom' for type 'eml20:ElectricCurrentDensityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityUom (-656)

#endif

/* enum eml20__VolumetricThermalExpansionUom has binding name 'eml20__VolumetricThermalExpansionUom' for type 'eml20:VolumetricThermalExpansionUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionUom (-655)

#endif

/* enum eml20__APIGammaRayUom has binding name 'eml20__APIGammaRayUom' for type 'eml20:APIGammaRayUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayUom (-654)

#endif

/* enum eml20__AreaUom has binding name 'eml20__AreaUom' for type 'eml20:AreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaUom (-653)

#endif

/* enum eml20__LengthPerLengthUom has binding name 'eml20__LengthPerLengthUom' for type 'eml20:LengthPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthUom (-652)

#endif

/* enum eml20__TemperatureIntervalPerPressureUom has binding name 'eml20__TemperatureIntervalPerPressureUom' for type 'eml20:TemperatureIntervalPerPressureUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureUom (-651)

#endif

/* enum eml20__ReciprocalTimeUom has binding name 'eml20__ReciprocalTimeUom' for type 'eml20:ReciprocalTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeUom (-650)

#endif

/* enum eml20__APINeutronUom has binding name 'eml20__APINeutronUom' for type 'eml20:APINeutronUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronUom (-649)

#endif

/* enum eml20__DipoleMomentUom has binding name 'eml20__DipoleMomentUom' for type 'eml20:DipoleMomentUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentUom (-648)

#endif

/* enum eml20__AmountOfSubstanceUom has binding name 'eml20__AmountOfSubstanceUom' for type 'eml20:AmountOfSubstanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceUom (-647)

#endif

/* enum eml20__MolarVolumeUom has binding name 'eml20__MolarVolumeUom' for type 'eml20:MolarVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeUom (-646)

#endif

/* enum eml20__MassPerVolumeUom has binding name 'eml20__MassPerVolumeUom' for type 'eml20:MassPerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeUom (-645)

#endif

/* enum eml20__MomentOfForceUom has binding name 'eml20__MomentOfForceUom' for type 'eml20:MomentOfForceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceUom (-644)

#endif

/* enum eml20__VolumePerTimePerVolumeUom has binding name 'eml20__VolumePerTimePerVolumeUom' for type 'eml20:VolumePerTimePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeUom (-643)

#endif

/* enum eml20__SolidAngleUom has binding name 'eml20__SolidAngleUom' for type 'eml20:SolidAngleUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleUom (-642)

#endif

/* enum eml20__ForceLengthPerLengthUom has binding name 'eml20__ForceLengthPerLengthUom' for type 'eml20:ForceLengthPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthUom (-641)

#endif

/* enum eml20__LengthPerTimeUom has binding name 'eml20__LengthPerTimeUom' for type 'eml20:LengthPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeUom (-640)

#endif

/* enum eml20__QuantityOfLightUom has binding name 'eml20__QuantityOfLightUom' for type 'eml20:QuantityOfLightUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightUom (-639)

#endif

/* enum eml20__ThermalConductanceUom has binding name 'eml20__ThermalConductanceUom' for type 'eml20:ThermalConductanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceUom (-638)

#endif

/* enum eml20__VolumeUom has binding name 'eml20__VolumeUom' for type 'eml20:VolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeUom (-637)

#endif

/* enum eml20__MagneticFluxUom has binding name 'eml20__MagneticFluxUom' for type 'eml20:MagneticFluxUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxUom (-636)

#endif

/* enum eml20__MolecularWeightUom has binding name 'eml20__MolecularWeightUom' for type 'eml20:MolecularWeightUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightUom (-635)

#endif

/* enum eml20__MassPerTimeUom has binding name 'eml20__MassPerTimeUom' for type 'eml20:MassPerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeUom (-634)

#endif

/* enum eml20__LengthPerVolumeUom has binding name 'eml20__LengthPerVolumeUom' for type 'eml20:LengthPerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeUom (-633)

#endif

/* enum eml20__MagneticFluxDensityPerLengthUom has binding name 'eml20__MagneticFluxDensityPerLengthUom' for type 'eml20:MagneticFluxDensityPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthUom (-632)

#endif

/* enum eml20__CapacitanceUom has binding name 'eml20__CapacitanceUom' for type 'eml20:CapacitanceUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceUom (-631)

#endif

/* enum eml20__MomentOfInertiaUom has binding name 'eml20__MomentOfInertiaUom' for type 'eml20:MomentOfInertiaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaUom (-630)

#endif

/* enum eml20__MassPerEnergyUom has binding name 'eml20__MassPerEnergyUom' for type 'eml20:MassPerEnergyUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyUom (-629)

#endif

/* enum eml20__HeatTransferCoefficientUom has binding name 'eml20__HeatTransferCoefficientUom' for type 'eml20:HeatTransferCoefficientUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientUom (-628)

#endif

/* enum eml20__MobilityUom has binding name 'eml20__MobilityUom' for type 'eml20:MobilityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityUom (-627)

#endif

/* enum eml20__VolumePerTimePerAreaUom has binding name 'eml20__VolumePerTimePerAreaUom' for type 'eml20:VolumePerTimePerAreaUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaUom (-626)

#endif

/* enum eml20__VolumePerRotationUom has binding name 'eml20__VolumePerRotationUom' for type 'eml20:VolumePerRotationUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationUom (-625)

#endif

/* enum eml20__ElectricConductivityUom has binding name 'eml20__ElectricConductivityUom' for type 'eml20:ElectricConductivityUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityUom (-624)

#endif

/* enum eml20__AmountOfSubstancePerTimeUom has binding name 'eml20__AmountOfSubstancePerTimeUom' for type 'eml20:AmountOfSubstancePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeUom (-623)

#endif

/* enum eml20__LogarithmicPowerRatioUom has binding name 'eml20__LogarithmicPowerRatioUom' for type 'eml20:LogarithmicPowerRatioUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioUom (-622)

#endif

/* enum eml20__VerticalDirection has binding name 'eml20__VerticalDirection' for type 'eml20:VerticalDirection' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalDirection (-621)

#endif

/* enum eml20__AxisOrder2d has binding name 'eml20__AxisOrder2d' for type 'eml20:AxisOrder2d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AxisOrder2d (-620)

#endif

/* enum resqml20__OrganizationKind has binding name 'resqml20__OrganizationKind' for type 'resqml20:OrganizationKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrganizationKind (-618)

#endif

/* enum resqml20__ResqmlPropertyKind has binding name 'resqml20__ResqmlPropertyKind' for type 'resqml20:ResqmlPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlPropertyKind (-617)

#endif

/* enum _xlink__actuate has binding name '_xlink__actuate' for type 'xlink:actuate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate (-610)

#endif

/* enum _xlink__show has binding name '_xlink__show' for type 'xlink:show' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__show
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__show (-609)

#endif

/* enum gml__AggregationType has binding name 'gml__AggregationType' for type 'gml:AggregationType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType (-608)

#endif

/* enum resqml20__StreamlineFlux has binding name 'resqml20__StreamlineFlux' for type 'resqml20:StreamlineFlux' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineFlux (-601)

#endif

/* enum resqml20__ParameterKind has binding name 'resqml20__ParameterKind' for type 'resqml20:ParameterKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterKind (-600)

#endif

/* enum resqml20__LineRole has binding name 'resqml20__LineRole' for type 'resqml20:LineRole' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LineRole (-599)

#endif

/* enum resqml20__SurfaceRole has binding name 'resqml20__SurfaceRole' for type 'resqml20:SurfaceRole' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SurfaceRole (-598)

#endif

/* enum resqml20__FluidMarker has binding name 'resqml20__FluidMarker' for type 'resqml20:FluidMarker' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidMarker (-597)

#endif

/* enum resqml20__MdReference has binding name 'resqml20__MdReference' for type 'resqml20:MdReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdReference (-596)

#endif

/* enum resqml20__MdDomain has binding name 'resqml20__MdDomain' for type 'resqml20:MdDomain' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MdDomain (-595)

#endif

/* enum resqml20__WellboreFrameIndexableElements has binding name 'resqml20__WellboreFrameIndexableElements' for type 'resqml20:WellboreFrameIndexableElements' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreFrameIndexableElements (-594)

#endif

/* enum resqml20__GeologicBoundaryKind has binding name 'resqml20__GeologicBoundaryKind' for type 'resqml20:GeologicBoundaryKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicBoundaryKind (-593)

#endif

/* enum resqml20__TectonicBoundaryKind has binding name 'resqml20__TectonicBoundaryKind' for type 'resqml20:TectonicBoundaryKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TectonicBoundaryKind (-592)

#endif

/* enum resqml20__FluidContact has binding name 'resqml20__FluidContact' for type 'resqml20:FluidContact' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FluidContact (-591)

#endif

/* enum resqml20__GeneticBoundaryKind has binding name 'resqml20__GeneticBoundaryKind' for type 'resqml20:GeneticBoundaryKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeneticBoundaryKind (-590)

#endif

/* enum resqml20__Phase has binding name 'resqml20__Phase' for type 'resqml20:Phase' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Phase (-589)

#endif

/* enum resqml20__GeologicUnitMaterialImplacement has binding name 'resqml20__GeologicUnitMaterialImplacement' for type 'resqml20:GeologicUnitMaterialImplacement' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitMaterialImplacement (-588)

#endif

/* enum resqml20__ContactSide has binding name 'resqml20__ContactSide' for type 'resqml20:ContactSide' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactSide (-587)

#endif

/* enum resqml20__ContactVerb has binding name 'resqml20__ContactVerb' for type 'resqml20:ContactVerb' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactVerb (-586)

#endif

/* enum resqml20__Geobody3dShape has binding name 'resqml20__Geobody3dShape' for type 'resqml20:Geobody3dShape' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Geobody3dShape (-585)

#endif

/* enum resqml20__OrderingCriteria has binding name 'resqml20__OrderingCriteria' for type 'resqml20:OrderingCriteria' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrderingCriteria (-584)

#endif

/* enum resqml20__ContactMode has binding name 'resqml20__ContactMode' for type 'resqml20:ContactMode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactMode (-583)

#endif

/* enum resqml20__BoundaryRelation has binding name 'resqml20__BoundaryRelation' for type 'resqml20:BoundaryRelation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BoundaryRelation (-582)

#endif

/* enum resqml20__Domain has binding name 'resqml20__Domain' for type 'resqml20:Domain' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Domain (-581)

#endif

/* enum resqml20__GeologicUnitComposition has binding name 'resqml20__GeologicUnitComposition' for type 'resqml20:GeologicUnitComposition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitComposition (-580)

#endif

/* enum resqml20__DepositionMode has binding name 'resqml20__DepositionMode' for type 'resqml20:DepositionMode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DepositionMode (-579)

#endif

/* enum resqml20__ContactRelationship has binding name 'resqml20__ContactRelationship' for type 'resqml20:ContactRelationship' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRelationship (-578)

#endif

/* enum resqml20__SequenceStratigraphySurface has binding name 'resqml20__SequenceStratigraphySurface' for type 'resqml20:SequenceStratigraphySurface' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SequenceStratigraphySurface (-577)

#endif

/* enum resqml20__ThrowKind has binding name 'resqml20__ThrowKind' for type 'resqml20:ThrowKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThrowKind (-576)

#endif

/* enum resqml20__PillarShape has binding name 'resqml20__PillarShape' for type 'resqml20:PillarShape' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PillarShape (-575)

#endif

/* enum resqml20__UnstructuredCellIndexableElements has binding name 'resqml20__UnstructuredCellIndexableElements' for type 'resqml20:UnstructuredCellIndexableElements' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredCellIndexableElements (-574)

#endif

/* enum resqml20__CellShape has binding name 'resqml20__CellShape' for type 'resqml20:CellShape' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellShape (-573)

#endif

/* enum resqml20__GridGeometryAttachment has binding name 'resqml20__GridGeometryAttachment' for type 'resqml20:GridGeometryAttachment' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GridGeometryAttachment (-572)

#endif

/* enum resqml20__IjkIndexableElements has binding name 'resqml20__IjkIndexableElements' for type 'resqml20:IjkIndexableElements' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkIndexableElements (-571)

#endif

/* enum resqml20__KDirection has binding name 'resqml20__KDirection' for type 'resqml20:KDirection' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KDirection (-570)

#endif

/* enum resqml20__ColumnShape has binding name 'resqml20__ColumnShape' for type 'resqml20:ColumnShape' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnShape (-569)

#endif

/* enum resqml20__SubnodeNodeObject has binding name 'resqml20__SubnodeNodeObject' for type 'resqml20:SubnodeNodeObject' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeNodeObject (-568)

#endif

/* enum resqml20__UnstructuredColumnLayerIndexableElements has binding name 'resqml20__UnstructuredColumnLayerIndexableElements' for type 'resqml20:UnstructuredColumnLayerIndexableElements' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerIndexableElements (-567)

#endif

/* enum resqml20__IndexableElements has binding name 'resqml20__IndexableElements' for type 'resqml20:IndexableElements' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IndexableElements (-566)

#endif

/* enum resqml20__IdentityKind has binding name 'resqml20__IdentityKind' for type 'resqml20:IdentityKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IdentityKind (-565)

#endif

/* enum resqml20__ResqmlUom has binding name 'resqml20__ResqmlUom' for type 'resqml20:ResqmlUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlUom (-564)

#endif

/* enum resqml20__Facet has binding name 'resqml20__Facet' for type 'resqml20:Facet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Facet (-563)

#endif

/* enum resqml20__TimeSetKind has binding name 'resqml20__TimeSetKind' for type 'resqml20:TimeSetKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSetKind (-562)

#endif

/* _ptm__standardEnergisticsPropertyTypeSet has binding name '_ptm__standardEnergisticsPropertyTypeSet' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet
#define SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet (-1354)

#endif

/* _gco__nilReason has binding name '_gco__nilReason' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason (-1353)

#endif

/* _gco__Date has binding name '_gco__Date' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Date
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Date (-1351)

#endif

/* _gco__CharacterString has binding name '_gco__CharacterString' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString (-1348)

#endif

/* _gmd__DQ_USCOREEvaluationMethodTypeCode has binding name '_gmd__DQ_USCOREEvaluationMethodTypeCode' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode (-1347)

#endif

/* _gmd__CI_USCORESeries has binding name '_gmd__CI_USCORESeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries (-1346)

#endif

/* _gmd__CI_USCOREPresentationFormCode has binding name '_gmd__CI_USCOREPresentationFormCode' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode (-1345)

#endif

/* _gmd__CI_USCORERoleCode has binding name '_gmd__CI_USCORERoleCode' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode (-1344)

#endif

/* _gmd__CI_USCOREOnLineFunctionCode has binding name '_gmd__CI_USCOREOnLineFunctionCode' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode (-1343)

#endif

/* _gmd__URL has binding name '_gmd__URL' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL (-1342)

#endif

/* _gmd__CI_USCOREOnlineResource has binding name '_gmd__CI_USCOREOnlineResource' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource (-1341)

#endif

/* _gmd__CI_USCOREAddress has binding name '_gmd__CI_USCOREAddress' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress (-1340)

#endif

/* _gmd__CI_USCORETelephone has binding name '_gmd__CI_USCORETelephone' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone (-1339)

#endif

/* _gmd__CI_USCOREContact has binding name '_gmd__CI_USCOREContact' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact (-1338)

#endif

/* _gmd__CI_USCOREResponsibleParty has binding name '_gmd__CI_USCOREResponsibleParty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty (-1337)

#endif

/* _gmd__CI_USCOREDateTypeCode has binding name '_gmd__CI_USCOREDateTypeCode' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode (-1336)

#endif

/* _gmd__CI_USCOREDate has binding name '_gmd__CI_USCOREDate' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate (-1335)

#endif

/* _gmd__CI_USCORECitation has binding name '_gmd__CI_USCORECitation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation (-1334)

#endif

/* _gmd__MD_USCOREIdentifier has binding name '_gmd__MD_USCOREIdentifier' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier (-1333)

#endif

/* _gmd__EX_USCOREVerticalExtent has binding name '_gmd__EX_USCOREVerticalExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent (-1332)

#endif

/* _gmd__EX_USCORETemporalExtent has binding name '_gmd__EX_USCORETemporalExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent (-1331)

#endif

/* _gmd__EX_USCOREExtent has binding name '_gmd__EX_USCOREExtent' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent (-1330)

#endif

/* _xlink__title has binding name '_xlink__title' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__title
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__title (-1329)

#endif

/* _xlink__arcrole has binding name '_xlink__arcrole' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole (-1328)

#endif

/* _xlink__role has binding name '_xlink__role' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__role
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__role (-1327)

#endif

/* _xlink__href has binding name '_xlink__href' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__href
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__href (-1326)

#endif

/* _gml__id has binding name '_gml__id' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__id
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__id (-1325)

#endif

/* _gml__VerticalDatum has binding name '_gml__VerticalDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum (-1324)

#endif

/* _gml__verticalDatum has binding name '_gml__verticalDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum (-1323)

#endif

/* _gml__VerticalCS has binding name '_gml__VerticalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS (-1322)

#endif

/* _gml__verticalCS has binding name '_gml__verticalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS (-1321)

#endif

/* _gml__VerticalCRS has binding name '_gml__VerticalCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS (-1320)

#endif

/* _gml__baseGeodeticCRS has binding name '_gml__baseGeodeticCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS (-1319)

#endif

/* _gml__targetCRS has binding name '_gml__targetCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS (-1318)

#endif

/* _gml__sourceCRS has binding name '_gml__sourceCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS (-1317)

#endif

/* _gml__operationVersion has binding name '_gml__operationVersion' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion (-1316)

#endif

/* _gml__conversion has binding name '_gml__conversion' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion (-1315)

#endif

/* _gml__ProjectedCRS has binding name '_gml__ProjectedCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS (-1314)

#endif

/* _gml__semiMajorAxis has binding name '_gml__semiMajorAxis' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis (-1313)

#endif

/* _gml__Ellipsoid has binding name '_gml__Ellipsoid' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid (-1312)

#endif

/* _gml__ellipsoid has binding name '_gml__ellipsoid' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid (-1311)

#endif

/* _gml__greenwichLongitude has binding name '_gml__greenwichLongitude' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude (-1310)

#endif

/* _gml__PrimeMeridian has binding name '_gml__PrimeMeridian' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian (-1309)

#endif

/* _gml__primeMeridian has binding name '_gml__primeMeridian' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian (-1308)

#endif

/* _gml__realizationEpoch has binding name '_gml__realizationEpoch' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch (-1307)

#endif

/* _gml__anchorDefinition has binding name '_gml__anchorDefinition' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition (-1306)

#endif

/* _gml__GeodeticDatum has binding name '_gml__GeodeticDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum (-1305)

#endif

/* _gml__geodeticDatum has binding name '_gml__geodeticDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum (-1304)

#endif

/* _gml__SphericalCS has binding name '_gml__SphericalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS (-1303)

#endif

/* _gml__sphericalCS has binding name '_gml__sphericalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS (-1302)

#endif

/* _gml__CartesianCS has binding name '_gml__CartesianCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS (-1301)

#endif

/* _gml__cartesianCS has binding name '_gml__cartesianCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS (-1300)

#endif

/* _gml__rangeMeaning has binding name '_gml__rangeMeaning' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning (-1299)

#endif

/* _gml__axisDirection has binding name '_gml__axisDirection' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection (-1296)

#endif

/* _gml__axisAbbrev has binding name '_gml__axisAbbrev' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev (-1295)

#endif

/* _gml__CoordinateSystemAxis has binding name '_gml__CoordinateSystemAxis' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis (-1294)

#endif

/* _gml__axis has binding name '_gml__axis' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axis
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axis (-1293)

#endif

/* _gml__EllipsoidalCS has binding name '_gml__EllipsoidalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS (-1292)

#endif

/* _gml__ellipsoidalCS has binding name '_gml__ellipsoidalCS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS (-1291)

#endif

/* _gml__scope has binding name '_gml__scope' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__scope
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__scope (-1290)

#endif

/* _gml__Definition has binding name '_gml__Definition' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition (-1289)

#endif

/* _gml__remarks has binding name '_gml__remarks' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks (-1288)

#endif

/* _gml__name has binding name '_gml__name' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__name
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__name (-1287)

#endif

/* _gml__identifier has binding name '_gml__identifier' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier (-1286)

#endif

/* _gml__descriptionReference has binding name '_gml__descriptionReference' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference (-1285)

#endif

/* _gml__description has binding name '_gml__description' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__description
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__description (-1284)

#endif

/* _gml__GeodeticCRS has binding name '_gml__GeodeticCRS' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS (-1283)

#endif

/* _eml20__AbstractContextualObject has binding name '_eml20__AbstractContextualObject' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractContextualObject (-1282)

#endif

/* _eml20__AbstractDataObject has binding name '_eml20__AbstractDataObject' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__AbstractDataObject (-1281)

#endif

/* _eml20__EpcExternalPartReference has binding name '_eml20__EpcExternalPartReference' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference
#define SOAP_TYPE_gsoap_resqml2_0_1__eml20__EpcExternalPartReference (-1280)

#endif

/* _resqml20__StringTableLookup has binding name '_resqml20__StringTableLookup' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StringTableLookup (-1279)

#endif

/* _resqml20__PropertySet has binding name '_resqml20__PropertySet' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertySet (-1278)

#endif

/* _resqml20__PropertyKind has binding name '_resqml20__PropertyKind' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PropertyKind (-1277)

#endif

/* _resqml20__PointsProperty has binding name '_resqml20__PointsProperty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointsProperty (-1276)

#endif

/* _resqml20__DoubleTableLookup has binding name '_resqml20__DoubleTableLookup' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DoubleTableLookup (-1275)

#endif

/* _resqml20__DiscreteProperty has binding name '_resqml20__DiscreteProperty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscreteProperty (-1274)

#endif

/* _resqml20__ContinuousProperty has binding name '_resqml20__ContinuousProperty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousProperty (-1273)

#endif

/* _resqml20__CommentProperty has binding name '_resqml20__CommentProperty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentProperty (-1272)

#endif

/* _resqml20__CategoricalProperty has binding name '_resqml20__CategoricalProperty' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalProperty (-1271)

#endif

/* _resqml20__WellboreTrajectoryRepresentation has binding name '_resqml20__WellboreTrajectoryRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreTrajectoryRepresentation (-1270)

#endif

/* _resqml20__WellboreMarkerFrameRepresentation has binding name '_resqml20__WellboreMarkerFrameRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreMarkerFrameRepresentation (-1269)

#endif

/* _resqml20__WellboreFrameRepresentation has binding name '_resqml20__WellboreFrameRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFrameRepresentation (-1268)

#endif

/* _resqml20__MdDatum has binding name '_resqml20__MdDatum' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__MdDatum (-1267)

#endif

/* _resqml20__DeviationSurveyRepresentation has binding name '_resqml20__DeviationSurveyRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DeviationSurveyRepresentation (-1266)

#endif

/* _resqml20__BlockedWellboreRepresentation has binding name '_resqml20__BlockedWellboreRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BlockedWellboreRepresentation (-1265)

#endif

/* _resqml20__TriangulatedSetRepresentation has binding name '_resqml20__TriangulatedSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TriangulatedSetRepresentation (-1264)

#endif

/* _resqml20__SealedVolumeFrameworkRepresentation has binding name '_resqml20__SealedVolumeFrameworkRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedVolumeFrameworkRepresentation (-1263)

#endif

/* _resqml20__SealedSurfaceFrameworkRepresentation has binding name '_resqml20__SealedSurfaceFrameworkRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SealedSurfaceFrameworkRepresentation (-1262)

#endif

/* _resqml20__PolylineSetRepresentation has binding name '_resqml20__PolylineSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineSetRepresentation (-1261)

#endif

/* _resqml20__PolylineRepresentation has binding name '_resqml20__PolylineRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PolylineRepresentation (-1260)

#endif

/* _resqml20__PointSetRepresentation has binding name '_resqml20__PointSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PointSetRepresentation (-1259)

#endif

/* _resqml20__PlaneSetRepresentation has binding name '_resqml20__PlaneSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__PlaneSetRepresentation (-1258)

#endif

/* _resqml20__NonSealedSurfaceFrameworkRepresentation has binding name '_resqml20__NonSealedSurfaceFrameworkRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__NonSealedSurfaceFrameworkRepresentation (-1257)

#endif

/* _resqml20__Grid2dSetRepresentation has binding name '_resqml20__Grid2dSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dSetRepresentation (-1256)

#endif

/* _resqml20__Grid2dRepresentation has binding name '_resqml20__Grid2dRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Grid2dRepresentation (-1255)

#endif

/* _resqml20__UnstructuredGridRepresentation has binding name '_resqml20__UnstructuredGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredGridRepresentation (-1254)

#endif

/* _resqml20__UnstructuredColumnLayerGridRepresentation has binding name '_resqml20__UnstructuredColumnLayerGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__UnstructuredColumnLayerGridRepresentation (-1253)

#endif

/* _resqml20__TruncatedUnstructuredColumnLayerGridRepresentation has binding name '_resqml20__TruncatedUnstructuredColumnLayerGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedUnstructuredColumnLayerGridRepresentation (-1252)

#endif

/* _resqml20__TruncatedIjkGridRepresentation has binding name '_resqml20__TruncatedIjkGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TruncatedIjkGridRepresentation (-1251)

#endif

/* _resqml20__LocalGridSet has binding name '_resqml20__LocalGridSet' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalGridSet (-1250)

#endif

/* _resqml20__IjkGridRepresentation has binding name '_resqml20__IjkGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__IjkGridRepresentation (-1249)

#endif

/* _resqml20__GridConnectionSetRepresentation has binding name '_resqml20__GridConnectionSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GridConnectionSetRepresentation (-1248)

#endif

/* _resqml20__GpGridRepresentation has binding name '_resqml20__GpGridRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GpGridRepresentation (-1247)

#endif

/* _resqml20__SubRepresentation has binding name '_resqml20__SubRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SubRepresentation (-1246)

#endif

/* _resqml20__RepresentationSetRepresentation has binding name '_resqml20__RepresentationSetRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationSetRepresentation (-1245)

#endif

/* _resqml20__RepresentationIdentitySet has binding name '_resqml20__RepresentationIdentitySet' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RepresentationIdentitySet (-1244)

#endif

/* _resqml20__RedefinedGeometryRepresentation has binding name '_resqml20__RedefinedGeometryRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RedefinedGeometryRepresentation (-1243)

#endif

/* _resqml20__StratigraphicUnitInterpretation has binding name '_resqml20__StratigraphicUnitInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitInterpretation (-1242)

#endif

/* _resqml20__RockFluidOrganizationInterpretation has binding name '_resqml20__RockFluidOrganizationInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidOrganizationInterpretation (-1241)

#endif

/* _resqml20__HorizonInterpretation has binding name '_resqml20__HorizonInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__HorizonInterpretation (-1240)

#endif

/* _resqml20__RockFluidUnitInterpretation has binding name '_resqml20__RockFluidUnitInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitInterpretation (-1239)

#endif

/* _resqml20__GeobodyInterpretation has binding name '_resqml20__GeobodyInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyInterpretation (-1238)

#endif

/* _resqml20__GeobodyBoundaryInterpretation has binding name '_resqml20__GeobodyBoundaryInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyBoundaryInterpretation (-1237)

#endif

/* _resqml20__FaultInterpretation has binding name '_resqml20__FaultInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FaultInterpretation (-1236)

#endif

/* _resqml20__EarthModelInterpretation has binding name '_resqml20__EarthModelInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__EarthModelInterpretation (-1235)

#endif

/* _resqml20__WellboreInterpretation has binding name '_resqml20__WellboreInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreInterpretation (-1234)

#endif

/* _resqml20__StructuralOrganizationInterpretation has binding name '_resqml20__StructuralOrganizationInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StructuralOrganizationInterpretation (-1233)

#endif

/* _resqml20__StratigraphicOccurrenceInterpretation has binding name '_resqml20__StratigraphicOccurrenceInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicOccurrenceInterpretation (-1232)

#endif

/* _resqml20__StratigraphicColumnRankInterpretation has binding name '_resqml20__StratigraphicColumnRankInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumnRankInterpretation (-1231)

#endif

/* _resqml20__StratigraphicColumn has binding name '_resqml20__StratigraphicColumn' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicColumn (-1230)

#endif

/* _resqml20__GeologicUnitInterpretation has binding name '_resqml20__GeologicUnitInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitInterpretation (-1229)

#endif

/* _resqml20__GenericFeatureInterpretation has binding name '_resqml20__GenericFeatureInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GenericFeatureInterpretation (-1228)

#endif

/* _resqml20__BoundaryFeatureInterpretation has binding name '_resqml20__BoundaryFeatureInterpretation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeatureInterpretation (-1227)

#endif

/* _resqml20__WellboreFeature has binding name '_resqml20__WellboreFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__WellboreFeature (-1226)

#endif

/* _resqml20__SeismicLineSetFeature has binding name '_resqml20__SeismicLineSetFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineSetFeature (-1225)

#endif

/* _resqml20__SeismicLineFeature has binding name '_resqml20__SeismicLineFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLineFeature (-1224)

#endif

/* _resqml20__SeismicLatticeFeature has binding name '_resqml20__SeismicLatticeFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__SeismicLatticeFeature (-1223)

#endif

/* _resqml20__FrontierFeature has binding name '_resqml20__FrontierFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FrontierFeature (-1222)

#endif

/* _resqml20__OrganizationFeature has binding name '_resqml20__OrganizationFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__OrganizationFeature (-1221)

#endif

/* _resqml20__GeologicUnitFeature has binding name '_resqml20__GeologicUnitFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeologicUnitFeature (-1220)

#endif

/* _resqml20__BoundaryFeature has binding name '_resqml20__BoundaryFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__BoundaryFeature (-1219)

#endif

/* _resqml20__TectonicBoundaryFeature has binding name '_resqml20__TectonicBoundaryFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TectonicBoundaryFeature (-1218)

#endif

/* _resqml20__StratigraphicUnitFeature has binding name '_resqml20__StratigraphicUnitFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StratigraphicUnitFeature (-1217)

#endif

/* _resqml20__RockFluidUnitFeature has binding name '_resqml20__RockFluidUnitFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__RockFluidUnitFeature (-1216)

#endif

/* _resqml20__GlobalChronostratigraphicColumn has binding name '_resqml20__GlobalChronostratigraphicColumn' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GlobalChronostratigraphicColumn (-1215)

#endif

/* _resqml20__GeobodyFeature has binding name '_resqml20__GeobodyFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeobodyFeature (-1214)

#endif

/* _resqml20__GeneticBoundaryFeature has binding name '_resqml20__GeneticBoundaryFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__GeneticBoundaryFeature (-1213)

#endif

/* _resqml20__FluidBoundaryFeature has binding name '_resqml20__FluidBoundaryFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__FluidBoundaryFeature (-1212)

#endif

/* _resqml20__TimeSeries has binding name '_resqml20__TimeSeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__TimeSeries (-1211)

#endif

/* _resqml20__LocalTime3dCrs has binding name '_resqml20__LocalTime3dCrs' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalTime3dCrs (-1210)

#endif

/* _resqml20__LocalDepth3dCrs has binding name '_resqml20__LocalDepth3dCrs' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__LocalDepth3dCrs (-1209)

#endif

/* _resqml20__StreamlinesRepresentation has binding name '_resqml20__StreamlinesRepresentation' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesRepresentation (-1208)

#endif

/* _resqml20__StreamlinesFeature has binding name '_resqml20__StreamlinesFeature' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__StreamlinesFeature (-1207)

#endif

/* _resqml20__DiscretePropertySeries has binding name '_resqml20__DiscretePropertySeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__DiscretePropertySeries (-1206)

#endif

/* _resqml20__ContinuousPropertySeries has binding name '_resqml20__ContinuousPropertySeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ContinuousPropertySeries (-1205)

#endif

/* _resqml20__CommentPropertySeries has binding name '_resqml20__CommentPropertySeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CommentPropertySeries (-1204)

#endif

/* _resqml20__CategoricalPropertySeries has binding name '_resqml20__CategoricalPropertySeries' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__CategoricalPropertySeries (-1203)

#endif

/* _resqml20__ActivityTemplate has binding name '_resqml20__ActivityTemplate' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__ActivityTemplate (-1202)

#endif

/* _resqml20__Activity has binding name '_resqml20__Activity' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml20__Activity (-1201)

#endif

/* eml20__CommentString has binding name 'eml20__CommentString' for type 'eml20:CommentString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CommentString (-619)

#endif

/* eml20__UomEnum has binding name 'eml20__UomEnum' for type 'eml20:UomEnum' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UomEnum (-616)

#endif

/* eml20__MaximumLengthString has binding name 'eml20__MaximumLengthString' for type 'eml20:MaximumLengthString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MaximumLengthString (-615)

#endif

/* eml20__UidString has binding name 'eml20__UidString' for type 'eml20:UidString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UidString (-614)

#endif

/* eml20__NameString has binding name 'eml20__NameString' for type 'eml20:NameString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NameString (-613)

#endif

/* eml20__TypeEnum has binding name 'eml20__TypeEnum' for type 'eml20:TypeEnum' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TypeEnum (-612)

#endif

/* eml20__DescriptionString has binding name 'eml20__DescriptionString' for type 'eml20:DescriptionString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DescriptionString (-611)

#endif

/* gml__UomURI has binding name 'gml__UomURI' for type 'gml:UomURI' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI (-607)

#endif

/* gml__UomSymbol has binding name 'gml__UomSymbol' for type 'gml:UomSymbol' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol (-606)

#endif

/* eml20__String has binding name 'eml20__String' for type 'eml20:String' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__String
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__String (-605)

#endif

/* eml20__UuidString has binding name 'eml20__UuidString' for type 'eml20:UuidString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__UuidString (-602)

#endif

/* gco__Date_USCOREType has binding name 'gco__Date_USCOREType' for type 'gco:Date_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType (-561)

#endif

/* gml__UomIdentifier has binding name 'gml__UomIdentifier' for type 'gml:UomIdentifier' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier (-560)

#endif

/* gml__NilReasonEnumeration has binding name 'gml__NilReasonEnumeration' for type 'gml:NilReasonEnumeration' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration (-559)

#endif

/* gml__NilReasonType has binding name 'gml__NilReasonType' for type 'gml:NilReasonType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType (-558)

#endif

/* ptm__equivalentPropertyType has binding name 'ptm__equivalentPropertyType' for type 'ptm:equivalentPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType (-557)

#endif

/* ptm__standardEnergisticsPropertyType has binding name 'ptm__standardEnergisticsPropertyType' for type 'ptm:standardEnergisticsPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType (-556)

#endif

/* ptm__standardEnergisticsPropertyTypeSet has binding name 'ptm__standardEnergisticsPropertyTypeSet' for type 'ptm:standardEnergisticsPropertyTypeSet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet (-555)

#endif

/* gsr__SC_USCORECRS_USCOREPropertyType has binding name 'gsr__SC_USCORECRS_USCOREPropertyType' for type 'gsr:SC_CRS_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType (-554)

#endif

/* gco__DateTime_USCOREPropertyType has binding name 'gco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType (-553)

#endif

/* gco__CodeListValue_USCOREType has binding name 'gco__CodeListValue_USCOREType' for type 'gco:CodeListValue_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType (-552)

#endif

/* gco__Date_USCOREPropertyType has binding name 'gco__Date_USCOREPropertyType' for type 'gco:Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType (-551)

#endif

/* gco__Real_USCOREPropertyType has binding name 'gco__Real_USCOREPropertyType' for type 'gco:Real_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType (-550)

#endif

/* gco__Boolean_USCOREPropertyType has binding name 'gco__Boolean_USCOREPropertyType' for type 'gco:Boolean_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType (-549)

#endif

/* gco__CharacterString_USCOREPropertyType has binding name 'gco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType (-548)

#endif

/* gco__AbstractObject_USCOREType has binding name 'gco__AbstractObject_USCOREType' for type 'gco:AbstractObject_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType (-547)

#endif

/* gts__TM_USCOREPrimitive_USCOREPropertyType has binding name 'gts__TM_USCOREPrimitive_USCOREPropertyType' for type 'gts:TM_Primitive_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType (-546)

#endif

/* gmd__AbstractDQ_USCOREResult_USCOREType has binding name 'gmd__AbstractDQ_USCOREResult_USCOREType' for type 'gmd:AbstractDQ_Result_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType (-545)

#endif

/* gmd__DQ_USCOREResult_USCOREPropertyType has binding name 'gmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType (-544)

#endif

/* gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType has binding name 'gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType' for type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-543)

#endif

/* gmd__CI_USCORESeries_USCOREType has binding name 'gmd__CI_USCORESeries_USCOREType' for type 'gmd:CI_Series_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType (-542)

#endif

/* gmd__CI_USCORESeries_USCOREPropertyType has binding name 'gmd__CI_USCORESeries_USCOREPropertyType' for type 'gmd:CI_Series_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType (-541)

#endif

/* gmd__CI_USCOREPresentationFormCode_USCOREPropertyType has binding name 'gmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-540)

#endif

/* gmd__CI_USCORERoleCode_USCOREPropertyType has binding name 'gmd__CI_USCORERoleCode_USCOREPropertyType' for type 'gmd:CI_RoleCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType (-539)

#endif

/* gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType has binding name 'gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType' for type 'gmd:CI_OnLineFunctionCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-538)

#endif

/* gmd__URL_USCOREPropertyType has binding name 'gmd__URL_USCOREPropertyType' for type 'gmd:URL_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType (-537)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREType has binding name 'gmd__CI_USCOREOnlineResource_USCOREType' for type 'gmd:CI_OnlineResource_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType (-536)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREPropertyType has binding name 'gmd__CI_USCOREOnlineResource_USCOREPropertyType' for type 'gmd:CI_OnlineResource_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType (-535)

#endif

/* gmd__CI_USCOREAddress_USCOREType has binding name 'gmd__CI_USCOREAddress_USCOREType' for type 'gmd:CI_Address_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType (-534)

#endif

/* gmd__CI_USCOREAddress_USCOREPropertyType has binding name 'gmd__CI_USCOREAddress_USCOREPropertyType' for type 'gmd:CI_Address_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType (-533)

#endif

/* gmd__CI_USCORETelephone_USCOREType has binding name 'gmd__CI_USCORETelephone_USCOREType' for type 'gmd:CI_Telephone_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType (-532)

#endif

/* gmd__CI_USCORETelephone_USCOREPropertyType has binding name 'gmd__CI_USCORETelephone_USCOREPropertyType' for type 'gmd:CI_Telephone_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType (-531)

#endif

/* gmd__CI_USCOREContact_USCOREType has binding name 'gmd__CI_USCOREContact_USCOREType' for type 'gmd:CI_Contact_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType (-530)

#endif

/* gmd__CI_USCOREContact_USCOREPropertyType has binding name 'gmd__CI_USCOREContact_USCOREPropertyType' for type 'gmd:CI_Contact_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType (-529)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREType has binding name 'gmd__CI_USCOREResponsibleParty_USCOREType' for type 'gmd:CI_ResponsibleParty_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType (-528)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREPropertyType has binding name 'gmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType (-527)

#endif

/* gmd__CI_USCOREDateTypeCode_USCOREPropertyType has binding name 'gmd__CI_USCOREDateTypeCode_USCOREPropertyType' for type 'gmd:CI_DateTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType (-526)

#endif

/* gmd__CI_USCOREDate_USCOREType has binding name 'gmd__CI_USCOREDate_USCOREType' for type 'gmd:CI_Date_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType (-525)

#endif

/* gmd__CI_USCOREDate_USCOREPropertyType has binding name 'gmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType (-524)

#endif

/* gmd__CI_USCORECitation_USCOREType has binding name 'gmd__CI_USCORECitation_USCOREType' for type 'gmd:CI_Citation_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType (-523)

#endif

/* gmd__CI_USCORECitation_USCOREPropertyType has binding name 'gmd__CI_USCORECitation_USCOREPropertyType' for type 'gmd:CI_Citation_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType (-522)

#endif

/* gmd__MD_USCOREIdentifier_USCOREType has binding name 'gmd__MD_USCOREIdentifier_USCOREType' for type 'gmd:MD_Identifier_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType (-521)

#endif

/* gmd__MD_USCOREIdentifier_USCOREPropertyType has binding name 'gmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType (-520)

#endif

/* gmd__AbstractDQ_USCOREElement_USCOREType has binding name 'gmd__AbstractDQ_USCOREElement_USCOREType' for type 'gmd:AbstractDQ_Element_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType (-519)

#endif

/* gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType has binding name 'gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType' for type 'gmd:AbstractDQ_PositionalAccuracy_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType (-518)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREType has binding name 'gmd__EX_USCOREVerticalExtent_USCOREType' for type 'gmd:EX_VerticalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType (-517)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREPropertyType has binding name 'gmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType (-516)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREType has binding name 'gmd__EX_USCORETemporalExtent_USCOREType' for type 'gmd:EX_TemporalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType (-515)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREPropertyType has binding name 'gmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType (-514)

#endif

/* gmd__AbstractEX_USCOREGeographicExtent_USCOREType has binding name 'gmd__AbstractEX_USCOREGeographicExtent_USCOREType' for type 'gmd:AbstractEX_GeographicExtent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType (-513)

#endif

/* gmd__EX_USCOREGeographicExtent_USCOREPropertyType has binding name 'gmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType (-512)

#endif

/* gmd__EX_USCOREExtent_USCOREType has binding name 'gmd__EX_USCOREExtent_USCOREType' for type 'gmd:EX_Extent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType (-511)

#endif

/* _gml__coordinateOperationAccuracy has binding name '_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy (-510)

#endif

/* _gml__SecondDefiningParameter has binding name '_gml__SecondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter (-509)

#endif

/* _gml__secondDefiningParameter has binding name '_gml__secondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter (-508)

#endif

/* _gml__domainOfValidity has binding name '_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity (-507)

#endif

/* gml__VerticalDatumType has binding name 'gml__VerticalDatumType' for type 'gml:VerticalDatumType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType (-506)

#endif

/* gml__VerticalDatumPropertyType has binding name 'gml__VerticalDatumPropertyType' for type 'gml:VerticalDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType (-505)

#endif

/* gml__VerticalCSType has binding name 'gml__VerticalCSType' for type 'gml:VerticalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType (-504)

#endif

/* gml__VerticalCSPropertyType has binding name 'gml__VerticalCSPropertyType' for type 'gml:VerticalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType (-503)

#endif

/* gml__VerticalCRSType has binding name 'gml__VerticalCRSType' for type 'gml:VerticalCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType (-502)

#endif

/* gml__GeodeticCRSPropertyType has binding name 'gml__GeodeticCRSPropertyType' for type 'gml:GeodeticCRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType (-501)

#endif

/* gml__CRSPropertyType has binding name 'gml__CRSPropertyType' for type 'gml:CRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType (-500)

#endif

/* gml__AbstractCoordinateOperationType has binding name 'gml__AbstractCoordinateOperationType' for type 'gml:AbstractCoordinateOperationType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType (-499)

#endif

/* gml__AbstractGeneralConversionType has binding name 'gml__AbstractGeneralConversionType' for type 'gml:AbstractGeneralConversionType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType (-498)

#endif

/* gml__GeneralConversionPropertyType has binding name 'gml__GeneralConversionPropertyType' for type 'gml:GeneralConversionPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType (-497)

#endif

/* gml__AbstractGeneralDerivedCRSType has binding name 'gml__AbstractGeneralDerivedCRSType' for type 'gml:AbstractGeneralDerivedCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType (-496)

#endif

/* gml__ProjectedCRSType has binding name 'gml__ProjectedCRSType' for type 'gml:ProjectedCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType (-495)

#endif

/* gml__LengthType has binding name 'gml__LengthType' for type 'gml:LengthType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType (-494)

#endif

/* gml__EllipsoidType has binding name 'gml__EllipsoidType' for type 'gml:EllipsoidType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType (-493)

#endif

/* gml__EllipsoidPropertyType has binding name 'gml__EllipsoidPropertyType' for type 'gml:EllipsoidPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType (-492)

#endif

/* gml__MeasureType has binding name 'gml__MeasureType' for type 'gml:MeasureType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType (-491)

#endif

/* gml__AngleType has binding name 'gml__AngleType' for type 'gml:AngleType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType (-490)

#endif

/* gml__PrimeMeridianType has binding name 'gml__PrimeMeridianType' for type 'gml:PrimeMeridianType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType (-489)

#endif

/* gml__PrimeMeridianPropertyType has binding name 'gml__PrimeMeridianPropertyType' for type 'gml:PrimeMeridianPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType (-488)

#endif

/* gml__AbstractDatumType has binding name 'gml__AbstractDatumType' for type 'gml:AbstractDatumType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType (-487)

#endif

/* gml__GeodeticDatumType has binding name 'gml__GeodeticDatumType' for type 'gml:GeodeticDatumType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType (-486)

#endif

/* gml__GeodeticDatumPropertyType has binding name 'gml__GeodeticDatumPropertyType' for type 'gml:GeodeticDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType (-485)

#endif

/* gml__SphericalCSType has binding name 'gml__SphericalCSType' for type 'gml:SphericalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType (-484)

#endif

/* gml__SphericalCSPropertyType has binding name 'gml__SphericalCSPropertyType' for type 'gml:SphericalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType (-483)

#endif

/* gml__CartesianCSType has binding name 'gml__CartesianCSType' for type 'gml:CartesianCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType (-482)

#endif

/* gml__CartesianCSPropertyType has binding name 'gml__CartesianCSPropertyType' for type 'gml:CartesianCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType (-481)

#endif

/* gml__CoordinateSystemAxisType has binding name 'gml__CoordinateSystemAxisType' for type 'gml:CoordinateSystemAxisType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType (-480)

#endif

/* gml__CoordinateSystemAxisPropertyType has binding name 'gml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType (-479)

#endif

/* gml__AbstractCoordinateSystemType has binding name 'gml__AbstractCoordinateSystemType' for type 'gml:AbstractCoordinateSystemType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType (-478)

#endif

/* gml__EllipsoidalCSType has binding name 'gml__EllipsoidalCSType' for type 'gml:EllipsoidalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType (-477)

#endif

/* gml__EllipsoidalCSPropertyType has binding name 'gml__EllipsoidalCSPropertyType' for type 'gml:EllipsoidalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType (-476)

#endif

/* gml__TimePrimitivePropertyType has binding name 'gml__TimePrimitivePropertyType' for type 'gml:TimePrimitivePropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType (-475)

#endif

/* gml__RelatedTimeType has binding name 'gml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType (-474)

#endif

/* gml__AbstractTimeObjectType has binding name 'gml__AbstractTimeObjectType' for type 'gml:AbstractTimeObjectType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType (-473)

#endif

/* gml__AbstractTimePrimitiveType has binding name 'gml__AbstractTimePrimitiveType' for type 'gml:AbstractTimePrimitiveType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType (-472)

#endif

/* gml__CodeType has binding name 'gml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType (-471)

#endif

/* gml__CodeWithAuthorityType has binding name 'gml__CodeWithAuthorityType' for type 'gml:CodeWithAuthorityType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType (-470)

#endif

/* gml__ReferenceType has binding name 'gml__ReferenceType' for type 'gml:ReferenceType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType (-469)

#endif

/* gml__StringOrRefType has binding name 'gml__StringOrRefType' for type 'gml:StringOrRefType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType (-468)

#endif

/* gml__AbstractGMLType has binding name 'gml__AbstractGMLType' for type 'gml:AbstractGMLType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType (-467)

#endif

/* gml__DefinitionBaseType has binding name 'gml__DefinitionBaseType' for type 'gml:DefinitionBaseType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType (-466)

#endif

/* gml__DefinitionType has binding name 'gml__DefinitionType' for type 'gml:DefinitionType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType (-465)

#endif

/* gml__IdentifiedObjectType has binding name 'gml__IdentifiedObjectType' for type 'gml:IdentifiedObjectType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType (-464)

#endif

/* gml__AbstractCRSType has binding name 'gml__AbstractCRSType' for type 'gml:AbstractCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType (-463)

#endif

/* gml__GeodeticCRSType has binding name 'gml__GeodeticCRSType' for type 'gml:GeodeticCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType (-462)

#endif

/* eml20__MobilityMeasure has binding name 'eml20__MobilityMeasure' for type 'eml20:MobilityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MobilityMeasure (-461)

#endif

/* eml20__LengthPerMassMeasure has binding name 'eml20__LengthPerMassMeasure' for type 'eml20:LengthPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerMassMeasure (-460)

#endif

/* eml20__AreaMeasure has binding name 'eml20__AreaMeasure' for type 'eml20:AreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaMeasure (-459)

#endif

/* eml20__VolumePerVolumeMeasure has binding name 'eml20__VolumePerVolumeMeasure' for type 'eml20:VolumePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerVolumeMeasure (-458)

#endif

/* eml20__ElectricResistanceMeasure has binding name 'eml20__ElectricResistanceMeasure' for type 'eml20:ElectricResistanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistanceMeasure (-457)

#endif

/* eml20__AreaPerVolumeMeasure has binding name 'eml20__AreaPerVolumeMeasure' for type 'eml20:AreaPerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerVolumeMeasure (-456)

#endif

/* eml20__TimePerTimeMeasure has binding name 'eml20__TimePerTimeMeasure' for type 'eml20:TimePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerTimeMeasure (-455)

#endif

/* eml20__AmountOfSubstancePerVolumeMeasure has binding name 'eml20__AmountOfSubstancePerVolumeMeasure' for type 'eml20:AmountOfSubstancePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerVolumeMeasure (-454)

#endif

/* eml20__MassPerAreaMeasure has binding name 'eml20__MassPerAreaMeasure' for type 'eml20:MassPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerAreaMeasure (-453)

#endif

/* eml20__VolumePerPressureMeasure has binding name 'eml20__VolumePerPressureMeasure' for type 'eml20:VolumePerPressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerPressureMeasure (-452)

#endif

/* eml20__MassPerTimePerAreaMeasure has binding name 'eml20__MassPerTimePerAreaMeasure' for type 'eml20:MassPerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerAreaMeasure (-451)

#endif

/* eml20__DoseEquivalentMeasure has binding name 'eml20__DoseEquivalentMeasure' for type 'eml20:DoseEquivalentMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DoseEquivalentMeasure (-450)

#endif

/* eml20__PermeabilityRockMeasure has binding name 'eml20__PermeabilityRockMeasure' for type 'eml20:PermeabilityRockMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityRockMeasure (-449)

#endif

/* eml20__MagneticFieldStrengthMeasure has binding name 'eml20__MagneticFieldStrengthMeasure' for type 'eml20:MagneticFieldStrengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFieldStrengthMeasure (-448)

#endif

/* eml20__VolumePerTimePerPressureLengthMeasure has binding name 'eml20__VolumePerTimePerPressureLengthMeasure' for type 'eml20:VolumePerTimePerPressureLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureLengthMeasure (-447)

#endif

/* eml20__PressureMeasure has binding name 'eml20__PressureMeasure' for type 'eml20:PressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureMeasure (-446)

#endif

/* eml20__MagneticFluxDensityPerLengthMeasure has binding name 'eml20__MagneticFluxDensityPerLengthMeasure' for type 'eml20:MagneticFluxDensityPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityPerLengthMeasure (-445)

#endif

/* eml20__PowerPerAreaMeasure has binding name 'eml20__PowerPerAreaMeasure' for type 'eml20:PowerPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerAreaMeasure (-444)

#endif

/* eml20__ElectricFieldStrengthMeasure has binding name 'eml20__ElectricFieldStrengthMeasure' for type 'eml20:ElectricFieldStrengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricFieldStrengthMeasure (-443)

#endif

/* eml20__AmountOfSubstancePerAmountOfSubstanceMeasure has binding name 'eml20__AmountOfSubstancePerAmountOfSubstanceMeasure' for type 'eml20:AmountOfSubstancePerAmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAmountOfSubstanceMeasure (-442)

#endif

/* eml20__ElectricConductivityMeasure has binding name 'eml20__ElectricConductivityMeasure' for type 'eml20:ElectricConductivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductivityMeasure (-441)

#endif

/* eml20__AngularVelocityMeasure has binding name 'eml20__AngularVelocityMeasure' for type 'eml20:AngularVelocityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularVelocityMeasure (-440)

#endif

/* eml20__EnergyPerMassMeasure has binding name 'eml20__EnergyPerMassMeasure' for type 'eml20:EnergyPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassMeasure (-439)

#endif

/* eml20__EnergyLengthPerAreaMeasure has binding name 'eml20__EnergyLengthPerAreaMeasure' for type 'eml20:EnergyLengthPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerAreaMeasure (-438)

#endif

/* eml20__PlaneAngleMeasure has binding name 'eml20__PlaneAngleMeasure' for type 'eml20:PlaneAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PlaneAngleMeasure (-437)

#endif

/* eml20__ReciprocalForceMeasure has binding name 'eml20__ReciprocalForceMeasure' for type 'eml20:ReciprocalForceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalForceMeasure (-436)

#endif

/* eml20__ReciprocalMassMeasure has binding name 'eml20__ReciprocalMassMeasure' for type 'eml20:ReciprocalMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassMeasure (-435)

#endif

/* eml20__AngularAccelerationMeasure has binding name 'eml20__AngularAccelerationMeasure' for type 'eml20:AngularAccelerationMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AngularAccelerationMeasure (-434)

#endif

/* eml20__LogarithmicPowerRatioMeasure has binding name 'eml20__LogarithmicPowerRatioMeasure' for type 'eml20:LogarithmicPowerRatioMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioMeasure (-433)

#endif

/* eml20__NormalizedPowerMeasure has binding name 'eml20__NormalizedPowerMeasure' for type 'eml20:NormalizedPowerMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__NormalizedPowerMeasure (-432)

#endif

/* eml20__MassMeasure has binding name 'eml20__MassMeasure' for type 'eml20:MassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassMeasure (-431)

#endif

/* eml20__ThermalConductivityMeasure has binding name 'eml20__ThermalConductivityMeasure' for type 'eml20:ThermalConductivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductivityMeasure (-430)

#endif

/* eml20__LengthPerPressureMeasure has binding name 'eml20__LengthPerPressureMeasure' for type 'eml20:LengthPerPressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerPressureMeasure (-429)

#endif

/* eml20__AnglePerVolumeMeasure has binding name 'eml20__AnglePerVolumeMeasure' for type 'eml20:AnglePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerVolumeMeasure (-428)

#endif

/* eml20__PressureSquaredPerForceTimePerAreaMeasure has binding name 'eml20__PressureSquaredPerForceTimePerAreaMeasure' for type 'eml20:PressureSquaredPerForceTimePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredPerForceTimePerAreaMeasure (-427)

#endif

/* eml20__VolumePerTimeLengthMeasure has binding name 'eml20__VolumePerTimeLengthMeasure' for type 'eml20:VolumePerTimeLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeLengthMeasure (-426)

#endif

/* eml20__LengthPerTemperatureMeasure has binding name 'eml20__LengthPerTemperatureMeasure' for type 'eml20:LengthPerTemperatureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTemperatureMeasure (-425)

#endif

/* eml20__AmountOfSubstancePerTimeMeasure has binding name 'eml20__AmountOfSubstancePerTimeMeasure' for type 'eml20:AmountOfSubstancePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimeMeasure (-424)

#endif

/* eml20__ForcePerLengthMeasure has binding name 'eml20__ForcePerLengthMeasure' for type 'eml20:ForcePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerLengthMeasure (-423)

#endif

/* eml20__PressurePerTimeMeasure has binding name 'eml20__PressurePerTimeMeasure' for type 'eml20:PressurePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerTimeMeasure (-422)

#endif

/* eml20__MassPerVolumePerLengthMeasure has binding name 'eml20__MassPerVolumePerLengthMeasure' for type 'eml20:MassPerVolumePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumePerLengthMeasure (-421)

#endif

/* eml20__IsothermalCompressibilityMeasure has binding name 'eml20__IsothermalCompressibilityMeasure' for type 'eml20:IsothermalCompressibilityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IsothermalCompressibilityMeasure (-420)

#endif

/* eml20__ElectricPotentialDifferenceMeasure has binding name 'eml20__ElectricPotentialDifferenceMeasure' for type 'eml20:ElectricPotentialDifferenceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricPotentialDifferenceMeasure (-419)

#endif

/* eml20__DiffusionCoefficientMeasure has binding name 'eml20__DiffusionCoefficientMeasure' for type 'eml20:DiffusionCoefficientMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DiffusionCoefficientMeasure (-418)

#endif

/* eml20__APIGammaRayMeasure has binding name 'eml20__APIGammaRayMeasure' for type 'eml20:APIGammaRayMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGammaRayMeasure (-417)

#endif

/* eml20__ElectricChargePerMassMeasure has binding name 'eml20__ElectricChargePerMassMeasure' for type 'eml20:ElectricChargePerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerMassMeasure (-416)

#endif

/* eml20__ReciprocalElectricPotentialDifferenceMeasure has binding name 'eml20__ReciprocalElectricPotentialDifferenceMeasure' for type 'eml20:ReciprocalElectricPotentialDifferenceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalElectricPotentialDifferenceMeasure (-415)

#endif

/* eml20__DynamicViscosityMeasure has binding name 'eml20__DynamicViscosityMeasure' for type 'eml20:DynamicViscosityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DynamicViscosityMeasure (-414)

#endif

/* eml20__ReciprocalLengthMeasure has binding name 'eml20__ReciprocalLengthMeasure' for type 'eml20:ReciprocalLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalLengthMeasure (-413)

#endif

/* eml20__TimePerMassMeasure has binding name 'eml20__TimePerMassMeasure' for type 'eml20:TimePerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerMassMeasure (-412)

#endif

/* eml20__PressurePerVolumeMeasure has binding name 'eml20__PressurePerVolumeMeasure' for type 'eml20:PressurePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressurePerVolumeMeasure (-411)

#endif

/* eml20__VolumetricHeatTransferCoefficientMeasure has binding name 'eml20__VolumetricHeatTransferCoefficientMeasure' for type 'eml20:VolumetricHeatTransferCoefficientMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricHeatTransferCoefficientMeasure (-410)

#endif

/* eml20__ElectricChargePerVolumeMeasure has binding name 'eml20__ElectricChargePerVolumeMeasure' for type 'eml20:ElectricChargePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerVolumeMeasure (-409)

#endif

/* eml20__EnergyPerVolumeMeasure has binding name 'eml20__EnergyPerVolumeMeasure' for type 'eml20:EnergyPerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerVolumeMeasure (-408)

#endif

/* eml20__ElectromagneticMomentMeasure has binding name 'eml20__ElectromagneticMomentMeasure' for type 'eml20:ElectromagneticMomentMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectromagneticMomentMeasure (-407)

#endif

/* eml20__TimePerVolumeMeasure has binding name 'eml20__TimePerVolumeMeasure' for type 'eml20:TimePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerVolumeMeasure (-406)

#endif

/* eml20__InductanceMeasure has binding name 'eml20__InductanceMeasure' for type 'eml20:InductanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__InductanceMeasure (-405)

#endif

/* eml20__KinematicViscosityMeasure has binding name 'eml20__KinematicViscosityMeasure' for type 'eml20:KinematicViscosityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__KinematicViscosityMeasure (-404)

#endif

/* eml20__ReciprocalAreaMeasure has binding name 'eml20__ReciprocalAreaMeasure' for type 'eml20:ReciprocalAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalAreaMeasure (-403)

#endif

/* eml20__MassLengthMeasure has binding name 'eml20__MassLengthMeasure' for type 'eml20:MassLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassLengthMeasure (-402)

#endif

/* eml20__ElectricalResistivityMeasure has binding name 'eml20__ElectricalResistivityMeasure' for type 'eml20:ElectricalResistivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricalResistivityMeasure (-401)

#endif

/* eml20__CapacitanceMeasure has binding name 'eml20__CapacitanceMeasure' for type 'eml20:CapacitanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CapacitanceMeasure (-400)

#endif

/* eml20__FrequencyIntervalMeasure has binding name 'eml20__FrequencyIntervalMeasure' for type 'eml20:FrequencyIntervalMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyIntervalMeasure (-399)

#endif

/* eml20__FrequencyMeasure has binding name 'eml20__FrequencyMeasure' for type 'eml20:FrequencyMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__FrequencyMeasure (-398)

#endif

/* eml20__SignalingEventPerTimeMeasure has binding name 'eml20__SignalingEventPerTimeMeasure' for type 'eml20:SignalingEventPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SignalingEventPerTimeMeasure (-397)

#endif

/* eml20__ActivityOfRadioactivityMeasure has binding name 'eml20__ActivityOfRadioactivityMeasure' for type 'eml20:ActivityOfRadioactivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ActivityOfRadioactivityMeasure (-396)

#endif

/* eml20__MolecularWeightMeasure has binding name 'eml20__MolecularWeightMeasure' for type 'eml20:MolecularWeightMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolecularWeightMeasure (-395)

#endif

/* eml20__MassPerTimePerLengthMeasure has binding name 'eml20__MassPerTimePerLengthMeasure' for type 'eml20:MassPerTimePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimePerLengthMeasure (-394)

#endif

/* eml20__MomentOfInertiaMeasure has binding name 'eml20__MomentOfInertiaMeasure' for type 'eml20:MomentOfInertiaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfInertiaMeasure (-393)

#endif

/* eml20__PotentialDifferencePerPowerDropMeasure has binding name 'eml20__PotentialDifferencePerPowerDropMeasure' for type 'eml20:PotentialDifferencePerPowerDropMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PotentialDifferencePerPowerDropMeasure (-392)

#endif

/* eml20__SpecificHeatCapacityMeasure has binding name 'eml20__SpecificHeatCapacityMeasure' for type 'eml20:SpecificHeatCapacityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SpecificHeatCapacityMeasure (-391)

#endif

/* eml20__ReciprocalTimeMeasure has binding name 'eml20__ReciprocalTimeMeasure' for type 'eml20:ReciprocalTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalTimeMeasure (-390)

#endif

/* eml20__LogarithmicPowerRatioPerLengthMeasure has binding name 'eml20__LogarithmicPowerRatioPerLengthMeasure' for type 'eml20:LogarithmicPowerRatioPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LogarithmicPowerRatioPerLengthMeasure (-389)

#endif

/* eml20__ThermalDiffusivityMeasure has binding name 'eml20__ThermalDiffusivityMeasure' for type 'eml20:ThermalDiffusivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalDiffusivityMeasure (-388)

#endif

/* eml20__PowerPerVolumeMeasure has binding name 'eml20__PowerPerVolumeMeasure' for type 'eml20:PowerPerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerVolumeMeasure (-387)

#endif

/* eml20__MomentumMeasure has binding name 'eml20__MomentumMeasure' for type 'eml20:MomentumMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentumMeasure (-386)

#endif

/* eml20__VolumeFlowRatePerVolumeFlowRateMeasure has binding name 'eml20__VolumeFlowRatePerVolumeFlowRateMeasure' for type 'eml20:VolumeFlowRatePerVolumeFlowRateMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeFlowRatePerVolumeFlowRateMeasure (-385)

#endif

/* eml20__AreaPerTimeMeasure has binding name 'eml20__AreaPerTimeMeasure' for type 'eml20:AreaPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerTimeMeasure (-384)

#endif

/* eml20__LuminousEfficacyMeasure has binding name 'eml20__LuminousEfficacyMeasure' for type 'eml20:LuminousEfficacyMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousEfficacyMeasure (-383)

#endif

/* eml20__QuantityOfLightMeasure has binding name 'eml20__QuantityOfLightMeasure' for type 'eml20:QuantityOfLightMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__QuantityOfLightMeasure (-382)

#endif

/* eml20__VolumePerAreaMeasure has binding name 'eml20__VolumePerAreaMeasure' for type 'eml20:VolumePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerAreaMeasure (-381)

#endif

/* eml20__MagneticFluxDensityMeasure has binding name 'eml20__MagneticFluxDensityMeasure' for type 'eml20:MagneticFluxDensityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxDensityMeasure (-380)

#endif

/* eml20__SecondMomentOfAreaMeasure has binding name 'eml20__SecondMomentOfAreaMeasure' for type 'eml20:SecondMomentOfAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SecondMomentOfAreaMeasure (-379)

#endif

/* eml20__LengthPerVolumeMeasure has binding name 'eml20__LengthPerVolumeMeasure' for type 'eml20:LengthPerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerVolumeMeasure (-378)

#endif

/* eml20__MolarEnergyMeasure has binding name 'eml20__MolarEnergyMeasure' for type 'eml20:MolarEnergyMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarEnergyMeasure (-377)

#endif

/* eml20__LuminousIntensityMeasure has binding name 'eml20__LuminousIntensityMeasure' for type 'eml20:LuminousIntensityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousIntensityMeasure (-376)

#endif

/* eml20__ElectricChargeMeasure has binding name 'eml20__ElectricChargeMeasure' for type 'eml20:ElectricChargeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargeMeasure (-375)

#endif

/* eml20__DigitalStorageMeasure has binding name 'eml20__DigitalStorageMeasure' for type 'eml20:DigitalStorageMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DigitalStorageMeasure (-374)

#endif

/* eml20__MolarHeatCapacityMeasure has binding name 'eml20__MolarHeatCapacityMeasure' for type 'eml20:MolarHeatCapacityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarHeatCapacityMeasure (-373)

#endif

/* eml20__ForcePerVolumeMeasure has binding name 'eml20__ForcePerVolumeMeasure' for type 'eml20:ForcePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerVolumeMeasure (-372)

#endif

/* eml20__LuminanceMeasure has binding name 'eml20__LuminanceMeasure' for type 'eml20:LuminanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminanceMeasure (-371)

#endif

/* eml20__MomentOfForceMeasure has binding name 'eml20__MomentOfForceMeasure' for type 'eml20:MomentOfForceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MomentOfForceMeasure (-370)

#endif

/* eml20__TimeMeasure has binding name 'eml20__TimeMeasure' for type 'eml20:TimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimeMeasure (-369)

#endif

/* eml20__VolumePerTimePerPressureMeasure has binding name 'eml20__VolumePerTimePerPressureMeasure' for type 'eml20:VolumePerTimePerPressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerPressureMeasure (-368)

#endif

/* eml20__VolumePerTimePerVolumeMeasure has binding name 'eml20__VolumePerTimePerVolumeMeasure' for type 'eml20:VolumePerTimePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerVolumeMeasure (-367)

#endif

/* eml20__VolumeMeasure has binding name 'eml20__VolumeMeasure' for type 'eml20:VolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumeMeasure (-366)

#endif

/* eml20__VolumePerLengthMeasure has binding name 'eml20__VolumePerLengthMeasure' for type 'eml20:VolumePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerLengthMeasure (-365)

#endif

/* eml20__APIGravityMeasure has binding name 'eml20__APIGravityMeasure' for type 'eml20:APIGravityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APIGravityMeasure (-364)

#endif

/* eml20__MagneticPermeabilityMeasure has binding name 'eml20__MagneticPermeabilityMeasure' for type 'eml20:MagneticPermeabilityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticPermeabilityMeasure (-363)

#endif

/* eml20__MassPerEnergyMeasure has binding name 'eml20__MassPerEnergyMeasure' for type 'eml20:MassPerEnergyMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerEnergyMeasure (-362)

#endif

/* eml20__MagneticDipoleMomentMeasure has binding name 'eml20__MagneticDipoleMomentMeasure' for type 'eml20:MagneticDipoleMomentMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticDipoleMomentMeasure (-361)

#endif

/* eml20__DataTransferSpeedMeasure has binding name 'eml20__DataTransferSpeedMeasure' for type 'eml20:DataTransferSpeedMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataTransferSpeedMeasure (-360)

#endif

/* eml20__MassPerMassMeasure has binding name 'eml20__MassPerMassMeasure' for type 'eml20:MassPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerMassMeasure (-359)

#endif

/* eml20__ElectricCurrentDensityMeasure has binding name 'eml20__ElectricCurrentDensityMeasure' for type 'eml20:ElectricCurrentDensityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentDensityMeasure (-358)

#endif

/* eml20__EnergyPerMassPerTimeMeasure has binding name 'eml20__EnergyPerMassPerTimeMeasure' for type 'eml20:EnergyPerMassPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerMassPerTimeMeasure (-357)

#endif

/* eml20__AreaPerMassMeasure has binding name 'eml20__AreaPerMassMeasure' for type 'eml20:AreaPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerMassMeasure (-356)

#endif

/* eml20__RadianceMeasure has binding name 'eml20__RadianceMeasure' for type 'eml20:RadianceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadianceMeasure (-355)

#endif

/* eml20__DipoleMomentMeasure has binding name 'eml20__DipoleMomentMeasure' for type 'eml20:DipoleMomentMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DipoleMomentMeasure (-354)

#endif

/* eml20__PressureTimePerVolumeMeasure has binding name 'eml20__PressureTimePerVolumeMeasure' for type 'eml20:PressureTimePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureTimePerVolumeMeasure (-353)

#endif

/* eml20__PermittivityMeasure has binding name 'eml20__PermittivityMeasure' for type 'eml20:PermittivityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermittivityMeasure (-352)

#endif

/* eml20__ThermodynamicTemperatureMeasure has binding name 'eml20__ThermodynamicTemperatureMeasure' for type 'eml20:ThermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermodynamicTemperatureMeasure (-351)

#endif

/* eml20__ReluctanceMeasure has binding name 'eml20__ReluctanceMeasure' for type 'eml20:ReluctanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReluctanceMeasure (-350)

#endif

/* eml20__AreaPerAreaMeasure has binding name 'eml20__AreaPerAreaMeasure' for type 'eml20:AreaPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAreaMeasure (-349)

#endif

/* eml20__EnergyPerAreaMeasure has binding name 'eml20__EnergyPerAreaMeasure' for type 'eml20:EnergyPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerAreaMeasure (-348)

#endif

/* eml20__MassPerLengthMeasure has binding name 'eml20__MassPerLengthMeasure' for type 'eml20:MassPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerLengthMeasure (-347)

#endif

/* eml20__LengthPerTimeMeasure has binding name 'eml20__LengthPerTimeMeasure' for type 'eml20:LengthPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerTimeMeasure (-346)

#endif

/* eml20__AnglePerLengthMeasure has binding name 'eml20__AnglePerLengthMeasure' for type 'eml20:AnglePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AnglePerLengthMeasure (-345)

#endif

/* eml20__ThermalResistanceMeasure has binding name 'eml20__ThermalResistanceMeasure' for type 'eml20:ThermalResistanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalResistanceMeasure (-344)

#endif

/* eml20__AttenuationPerFrequencyIntervalMeasure has binding name 'eml20__AttenuationPerFrequencyIntervalMeasure' for type 'eml20:AttenuationPerFrequencyIntervalMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AttenuationPerFrequencyIntervalMeasure (-343)

#endif

/* eml20__TemperatureIntervalPerPressureMeasure has binding name 'eml20__TemperatureIntervalPerPressureMeasure' for type 'eml20:TemperatureIntervalPerPressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerPressureMeasure (-342)

#endif

/* eml20__AbsorbedDoseMeasure has binding name 'eml20__AbsorbedDoseMeasure' for type 'eml20:AbsorbedDoseMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbsorbedDoseMeasure (-341)

#endif

/* eml20__ElectricResistancePerLengthMeasure has binding name 'eml20__ElectricResistancePerLengthMeasure' for type 'eml20:ElectricResistancePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricResistancePerLengthMeasure (-340)

#endif

/* eml20__HeatCapacityMeasure has binding name 'eml20__HeatCapacityMeasure' for type 'eml20:HeatCapacityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatCapacityMeasure (-339)

#endif

/* eml20__LuminousFluxMeasure has binding name 'eml20__LuminousFluxMeasure' for type 'eml20:LuminousFluxMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LuminousFluxMeasure (-338)

#endif

/* eml20__ElectricCurrentMeasure has binding name 'eml20__ElectricCurrentMeasure' for type 'eml20:ElectricCurrentMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricCurrentMeasure (-337)

#endif

/* eml20__LightExposureMeasure has binding name 'eml20__LightExposureMeasure' for type 'eml20:LightExposureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LightExposureMeasure (-336)

#endif

/* eml20__ElectricChargePerAreaMeasure has binding name 'eml20__ElectricChargePerAreaMeasure' for type 'eml20:ElectricChargePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricChargePerAreaMeasure (-335)

#endif

/* eml20__VolumePerRotationMeasure has binding name 'eml20__VolumePerRotationMeasure' for type 'eml20:VolumePerRotationMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerRotationMeasure (-334)

#endif

/* eml20__PowerMeasure has binding name 'eml20__PowerMeasure' for type 'eml20:PowerMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerMeasure (-333)

#endif

/* eml20__EnergyLengthPerTimeAreaTemperatureMeasure has binding name 'eml20__EnergyLengthPerTimeAreaTemperatureMeasure' for type 'eml20:EnergyLengthPerTimeAreaTemperatureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyLengthPerTimeAreaTemperatureMeasure (-332)

#endif

/* eml20__SolidAngleMeasure has binding name 'eml20__SolidAngleMeasure' for type 'eml20:SolidAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__SolidAngleMeasure (-331)

#endif

/* eml20__ThermalConductanceMeasure has binding name 'eml20__ThermalConductanceMeasure' for type 'eml20:ThermalConductanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalConductanceMeasure (-330)

#endif

/* eml20__TemperatureIntervalPerTimeMeasure has binding name 'eml20__TemperatureIntervalPerTimeMeasure' for type 'eml20:TemperatureIntervalPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerTimeMeasure (-329)

#endif

/* eml20__EnergyPerLengthMeasure has binding name 'eml20__EnergyPerLengthMeasure' for type 'eml20:EnergyPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyPerLengthMeasure (-328)

#endif

/* eml20__LinearThermalExpansionMeasure has binding name 'eml20__LinearThermalExpansionMeasure' for type 'eml20:LinearThermalExpansionMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearThermalExpansionMeasure (-327)

#endif

/* eml20__ForcePerForceMeasure has binding name 'eml20__ForcePerForceMeasure' for type 'eml20:ForcePerForceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForcePerForceMeasure (-326)

#endif

/* eml20__ReciprocalVolumeMeasure has binding name 'eml20__ReciprocalVolumeMeasure' for type 'eml20:ReciprocalVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalVolumeMeasure (-325)

#endif

/* eml20__ReciprocalMassTimeMeasure has binding name 'eml20__ReciprocalMassTimeMeasure' for type 'eml20:ReciprocalMassTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalMassTimeMeasure (-324)

#endif

/* eml20__TimePerLengthMeasure has binding name 'eml20__TimePerLengthMeasure' for type 'eml20:TimePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TimePerLengthMeasure (-323)

#endif

/* eml20__AmountOfSubstanceMeasure has binding name 'eml20__AmountOfSubstanceMeasure' for type 'eml20:AmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstanceMeasure (-322)

#endif

/* eml20__AmountOfSubstancePerAreaMeasure has binding name 'eml20__AmountOfSubstancePerAreaMeasure' for type 'eml20:AmountOfSubstancePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerAreaMeasure (-321)

#endif

/* eml20__TemperatureIntervalPerLengthMeasure has binding name 'eml20__TemperatureIntervalPerLengthMeasure' for type 'eml20:TemperatureIntervalPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalPerLengthMeasure (-320)

#endif

/* eml20__MassPerVolumeMeasure has binding name 'eml20__MassPerVolumeMeasure' for type 'eml20:MassPerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerVolumeMeasure (-319)

#endif

/* eml20__LengthMeasure has binding name 'eml20__LengthMeasure' for type 'eml20:LengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthMeasure (-318)

#endif

/* eml20__AreaPerAmountOfSubstanceMeasure has binding name 'eml20__AreaPerAmountOfSubstanceMeasure' for type 'eml20:AreaPerAmountOfSubstanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AreaPerAmountOfSubstanceMeasure (-317)

#endif

/* eml20__ReciprocalPressureMeasure has binding name 'eml20__ReciprocalPressureMeasure' for type 'eml20:ReciprocalPressureMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ReciprocalPressureMeasure (-316)

#endif

/* eml20__ElectricConductanceMeasure has binding name 'eml20__ElectricConductanceMeasure' for type 'eml20:ElectricConductanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ElectricConductanceMeasure (-315)

#endif

/* eml20__MolarVolumeMeasure has binding name 'eml20__MolarVolumeMeasure' for type 'eml20:MolarVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MolarVolumeMeasure (-314)

#endif

/* eml20__VolumePerMassMeasure has binding name 'eml20__VolumePerMassMeasure' for type 'eml20:VolumePerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerMassMeasure (-313)

#endif

/* eml20__MassPerTimeMeasure has binding name 'eml20__MassPerTimeMeasure' for type 'eml20:MassPerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MassPerTimeMeasure (-312)

#endif

/* eml20__HeatFlowRateMeasure has binding name 'eml20__HeatFlowRateMeasure' for type 'eml20:HeatFlowRateMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatFlowRateMeasure (-311)

#endif

/* eml20__VolumetricThermalExpansionMeasure has binding name 'eml20__VolumetricThermalExpansionMeasure' for type 'eml20:VolumetricThermalExpansionMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumetricThermalExpansionMeasure (-310)

#endif

/* eml20__MagneticFluxMeasure has binding name 'eml20__MagneticFluxMeasure' for type 'eml20:MagneticFluxMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticFluxMeasure (-309)

#endif

/* eml20__VolumePerTimeMeasure has binding name 'eml20__VolumePerTimeMeasure' for type 'eml20:VolumePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimeMeasure (-308)

#endif

/* eml20__LinearAccelerationMeasure has binding name 'eml20__LinearAccelerationMeasure' for type 'eml20:LinearAccelerationMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LinearAccelerationMeasure (-307)

#endif

/* eml20__MagneticVectorPotentialMeasure has binding name 'eml20__MagneticVectorPotentialMeasure' for type 'eml20:MagneticVectorPotentialMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__MagneticVectorPotentialMeasure (-306)

#endif

/* eml20__APINeutronMeasure has binding name 'eml20__APINeutronMeasure' for type 'eml20:APINeutronMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__APINeutronMeasure (-305)

#endif

/* eml20__HeatTransferCoefficientMeasure has binding name 'eml20__HeatTransferCoefficientMeasure' for type 'eml20:HeatTransferCoefficientMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__HeatTransferCoefficientMeasure (-304)

#endif

/* eml20__DimensionlessMeasure has binding name 'eml20__DimensionlessMeasure' for type 'eml20:DimensionlessMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DimensionlessMeasure (-303)

#endif

/* eml20__PowerPerPowerMeasure has binding name 'eml20__PowerPerPowerMeasure' for type 'eml20:PowerPerPowerMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PowerPerPowerMeasure (-302)

#endif

/* eml20__RadiantIntensityMeasure has binding name 'eml20__RadiantIntensityMeasure' for type 'eml20:RadiantIntensityMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__RadiantIntensityMeasure (-301)

#endif

/* eml20__ForceMeasure has binding name 'eml20__ForceMeasure' for type 'eml20:ForceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceMeasure (-300)

#endif

/* eml20__IlluminanceMeasure has binding name 'eml20__IlluminanceMeasure' for type 'eml20:IlluminanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__IlluminanceMeasure (-299)

#endif

/* eml20__EnergyMeasure has binding name 'eml20__EnergyMeasure' for type 'eml20:EnergyMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__EnergyMeasure (-298)

#endif

/* eml20__ForceAreaMeasure has binding name 'eml20__ForceAreaMeasure' for type 'eml20:ForceAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceAreaMeasure (-297)

#endif

/* eml20__ThermalInsulanceMeasure has binding name 'eml20__ThermalInsulanceMeasure' for type 'eml20:ThermalInsulanceMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ThermalInsulanceMeasure (-296)

#endif

/* eml20__PermeabilityLengthMeasure has binding name 'eml20__PermeabilityLengthMeasure' for type 'eml20:PermeabilityLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PermeabilityLengthMeasure (-295)

#endif

/* eml20__VolumePerTimePerTimeMeasure has binding name 'eml20__VolumePerTimePerTimeMeasure' for type 'eml20:VolumePerTimePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerTimeMeasure (-294)

#endif

/* eml20__VolumePerTimePerLengthMeasure has binding name 'eml20__VolumePerTimePerLengthMeasure' for type 'eml20:VolumePerTimePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerLengthMeasure (-293)

#endif

/* eml20__TemperatureIntervalMeasure has binding name 'eml20__TemperatureIntervalMeasure' for type 'eml20:TemperatureIntervalMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__TemperatureIntervalMeasure (-292)

#endif

/* eml20__LengthPerLengthMeasure has binding name 'eml20__LengthPerLengthMeasure' for type 'eml20:LengthPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__LengthPerLengthMeasure (-291)

#endif

/* eml20__VolumePerTimePerAreaMeasure has binding name 'eml20__VolumePerTimePerAreaMeasure' for type 'eml20:VolumePerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VolumePerTimePerAreaMeasure (-290)

#endif

/* eml20__AmountOfSubstancePerTimePerAreaMeasure has binding name 'eml20__AmountOfSubstancePerTimePerAreaMeasure' for type 'eml20:AmountOfSubstancePerTimePerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AmountOfSubstancePerTimePerAreaMeasure (-289)

#endif

/* eml20__ForceLengthPerLengthMeasure has binding name 'eml20__ForceLengthPerLengthMeasure' for type 'eml20:ForceLengthPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ForceLengthPerLengthMeasure (-288)

#endif

/* eml20__PressureSquaredMeasure has binding name 'eml20__PressureSquaredMeasure' for type 'eml20:PressureSquaredMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__PressureSquaredMeasure (-287)

#endif

/* eml20__DataObjectReference has binding name 'eml20__DataObjectReference' for type 'eml20:DataObjectReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__DataObjectReference (-286)

#endif

/* eml20__obj_USCOREEpcExternalPartReference has binding name 'eml20__obj_USCOREEpcExternalPartReference' for type 'eml20:obj_EpcExternalPartReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__obj_USCOREEpcExternalPartReference (-285)

#endif

/* eml20__Hdf5Dataset has binding name 'eml20__Hdf5Dataset' for type 'eml20:Hdf5Dataset' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Hdf5Dataset (-284)

#endif

/* eml20__ProjectedUnknownCrs has binding name 'eml20__ProjectedUnknownCrs' for type 'eml20:ProjectedUnknownCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedUnknownCrs (-283)

#endif

/* eml20__GmlProjectedCrsDefinition has binding name 'eml20__GmlProjectedCrsDefinition' for type 'eml20:GmlProjectedCrsDefinition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlProjectedCrsDefinition (-282)

#endif

/* eml20__ProjectedCrsEpsgCode has binding name 'eml20__ProjectedCrsEpsgCode' for type 'eml20:ProjectedCrsEpsgCode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrsEpsgCode (-281)

#endif

/* eml20__AbstractProjectedCrs has binding name 'eml20__AbstractProjectedCrs' for type 'eml20:AbstractProjectedCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractProjectedCrs (-280)

#endif

/* eml20__AbstractVerticalCrs has binding name 'eml20__AbstractVerticalCrs' for type 'eml20:AbstractVerticalCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractVerticalCrs (-279)

#endif

/* eml20__VerticalCrs has binding name 'eml20__VerticalCrs' for type 'eml20:VerticalCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrs (-278)

#endif

/* eml20__ProjectedCrs has binding name 'eml20__ProjectedCrs' for type 'eml20:ProjectedCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ProjectedCrs (-277)

#endif

/* eml20__VerticalUnknownCrs has binding name 'eml20__VerticalUnknownCrs' for type 'eml20:VerticalUnknownCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalUnknownCrs (-276)

#endif

/* eml20__GmlVerticalCrsDefinition has binding name 'eml20__GmlVerticalCrsDefinition' for type 'eml20:GmlVerticalCrsDefinition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__GmlVerticalCrsDefinition (-275)

#endif

/* eml20__VerticalCrsEpsgCode has binding name 'eml20__VerticalCrsEpsgCode' for type 'eml20:VerticalCrsEpsgCode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__VerticalCrsEpsgCode (-274)

#endif

/* eml20__ObjectAlias has binding name 'eml20__ObjectAlias' for type 'eml20:ObjectAlias' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__ObjectAlias (-273)

#endif

/* eml20__AbstractObject has binding name 'eml20__AbstractObject' for type 'eml20:AbstractObject' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractObject (-272)

#endif

/* eml20__Citation has binding name 'eml20__Citation' for type 'eml20:Citation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__Citation (-271)

#endif

/* eml20__CustomData has binding name 'eml20__CustomData' for type 'eml20:CustomData' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__CustomData (-270)

#endif

/* eml20__AbstractCitedDataObject has binding name 'eml20__AbstractCitedDataObject' for type 'eml20:AbstractCitedDataObject' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1_eml20__AbstractCitedDataObject (-269)

#endif

/* resqml20__obj_USCOREDiscretePropertySeries has binding name 'resqml20__obj_USCOREDiscretePropertySeries' for type 'resqml20:obj_DiscretePropertySeries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscretePropertySeries (-268)

#endif

/* resqml20__obj_USCORECommentPropertySeries has binding name 'resqml20__obj_USCORECommentPropertySeries' for type 'resqml20:obj_CommentPropertySeries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentPropertySeries (-267)

#endif

/* resqml20__obj_USCORECategoricalPropertySeries has binding name 'resqml20__obj_USCORECategoricalPropertySeries' for type 'resqml20:obj_CategoricalPropertySeries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalPropertySeries (-266)

#endif

/* resqml20__obj_USCOREContinuousPropertySeries has binding name 'resqml20__obj_USCOREContinuousPropertySeries' for type 'resqml20:obj_ContinuousPropertySeries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousPropertySeries (-265)

#endif

/* resqml20__TimeIndices has binding name 'resqml20__TimeIndices' for type 'resqml20:TimeIndices' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndices (-264)

#endif

/* resqml20__IntervalGridCells has binding name 'resqml20__IntervalGridCells' for type 'resqml20:IntervalGridCells' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalGridCells (-263)

#endif

/* resqml20__StreamlineWellbores has binding name 'resqml20__StreamlineWellbores' for type 'resqml20:StreamlineWellbores' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlineWellbores (-262)

#endif

/* resqml20__obj_USCOREStreamlinesRepresentation has binding name 'resqml20__obj_USCOREStreamlinesRepresentation' for type 'resqml20:obj_StreamlinesRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesRepresentation (-261)

#endif

/* resqml20__obj_USCOREStreamlinesFeature has binding name 'resqml20__obj_USCOREStreamlinesFeature' for type 'resqml20:obj_StreamlinesFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStreamlinesFeature (-260)

#endif

/* resqml20__StreamlinePolylineSetPatch has binding name 'resqml20__StreamlinePolylineSetPatch' for type 'resqml20:StreamlinePolylineSetPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StreamlinePolylineSetPatch (-259)

#endif

/* resqml20__obj_USCOREActivityTemplate has binding name 'resqml20__obj_USCOREActivityTemplate' for type 'resqml20:obj_ActivityTemplate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivityTemplate (-258)

#endif

/* resqml20__AbstractActivityParameter has binding name 'resqml20__AbstractActivityParameter' for type 'resqml20:AbstractActivityParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractActivityParameter (-257)

#endif

/* resqml20__TimeIndexParameter has binding name 'resqml20__TimeIndexParameter' for type 'resqml20:TimeIndexParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameter (-256)

#endif

/* resqml20__AbstractParameterKey has binding name 'resqml20__AbstractParameterKey' for type 'resqml20:AbstractParameterKey' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParameterKey (-255)

#endif

/* resqml20__FloatingPointQuantityParameter has binding name 'resqml20__FloatingPointQuantityParameter' for type 'resqml20:FloatingPointQuantityParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FloatingPointQuantityParameter (-254)

#endif

/* resqml20__TimeIndexParameterKey has binding name 'resqml20__TimeIndexParameterKey' for type 'resqml20:TimeIndexParameterKey' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndexParameterKey (-253)

#endif

/* resqml20__IntegerQuantityParameter has binding name 'resqml20__IntegerQuantityParameter' for type 'resqml20:IntegerQuantityParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerQuantityParameter (-252)

#endif

/* resqml20__ParameterTemplate has binding name 'resqml20__ParameterTemplate' for type 'resqml20:ParameterTemplate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParameterTemplate (-251)

#endif

/* resqml20__StringParameter has binding name 'resqml20__StringParameter' for type 'resqml20:StringParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringParameter (-250)

#endif

/* resqml20__obj_USCOREActivity has binding name 'resqml20__obj_USCOREActivity' for type 'resqml20:obj_Activity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREActivity (-249)

#endif

/* resqml20__ObjectParameterKey has binding name 'resqml20__ObjectParameterKey' for type 'resqml20:ObjectParameterKey' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ObjectParameterKey (-248)

#endif

/* resqml20__DataObjectParameter has binding name 'resqml20__DataObjectParameter' for type 'resqml20:DataObjectParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DataObjectParameter (-247)

#endif

/* resqml20__WitsmlWellboreReference has binding name 'resqml20__WitsmlWellboreReference' for type 'resqml20:WitsmlWellboreReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WitsmlWellboreReference (-246)

#endif

/* resqml20__AbstractSeismicSurveyFeature has binding name 'resqml20__AbstractSeismicSurveyFeature' for type 'resqml20:AbstractSeismicSurveyFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicSurveyFeature (-245)

#endif

/* resqml20__obj_USCORESeismicLatticeFeature has binding name 'resqml20__obj_USCORESeismicLatticeFeature' for type 'resqml20:obj_SeismicLatticeFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLatticeFeature (-244)

#endif

/* resqml20__obj_USCORESeismicLineFeature has binding name 'resqml20__obj_USCORESeismicLineFeature' for type 'resqml20:obj_SeismicLineFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineFeature (-243)

#endif

/* resqml20__obj_USCOREWellboreFeature has binding name 'resqml20__obj_USCOREWellboreFeature' for type 'resqml20:obj_WellboreFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFeature (-242)

#endif

/* resqml20__obj_USCORESeismicLineSetFeature has binding name 'resqml20__obj_USCORESeismicLineSetFeature' for type 'resqml20:obj_SeismicLineSetFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESeismicLineSetFeature (-241)

#endif

/* resqml20__SeismicLatticeSetFeature has binding name 'resqml20__SeismicLatticeSetFeature' for type 'resqml20:SeismicLatticeSetFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SeismicLatticeSetFeature (-240)

#endif

/* resqml20__obj_USCOREFrontierFeature has binding name 'resqml20__obj_USCOREFrontierFeature' for type 'resqml20:obj_FrontierFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFrontierFeature (-239)

#endif

/* resqml20__AbstractTechnicalFeature has binding name 'resqml20__AbstractTechnicalFeature' for type 'resqml20:AbstractTechnicalFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTechnicalFeature (-238)

#endif

/* resqml20__ContactRepresentationReference has binding name 'resqml20__ContactRepresentationReference' for type 'resqml20:ContactRepresentationReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactRepresentationReference (-237)

#endif

/* resqml20__ContactIdentity has binding name 'resqml20__ContactIdentity' for type 'resqml20:ContactIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactIdentity (-236)

#endif

/* resqml20__OrientedMacroFace has binding name 'resqml20__OrientedMacroFace' for type 'resqml20:OrientedMacroFace' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OrientedMacroFace (-235)

#endif

/* resqml20__PolylineSetPatch has binding name 'resqml20__PolylineSetPatch' for type 'resqml20:PolylineSetPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PolylineSetPatch (-234)

#endif

/* resqml20__obj_USCOREGrid2dSetRepresentation has binding name 'resqml20__obj_USCOREGrid2dSetRepresentation' for type 'resqml20:obj_Grid2dSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dSetRepresentation (-233)

#endif

/* resqml20__Grid2dPatch has binding name 'resqml20__Grid2dPatch' for type 'resqml20:Grid2dPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Grid2dPatch (-232)

#endif

/* resqml20__AbstractSurfaceRepresentation has binding name 'resqml20__AbstractSurfaceRepresentation' for type 'resqml20:AbstractSurfaceRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceRepresentation (-231)

#endif

/* resqml20__PatchBoundaries has binding name 'resqml20__PatchBoundaries' for type 'resqml20:PatchBoundaries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchBoundaries (-230)

#endif

/* resqml20__obj_USCOREGrid2dRepresentation has binding name 'resqml20__obj_USCOREGrid2dRepresentation' for type 'resqml20:obj_Grid2dRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGrid2dRepresentation (-229)

#endif

/* resqml20__obj_USCOREPolylineRepresentation has binding name 'resqml20__obj_USCOREPolylineRepresentation' for type 'resqml20:obj_PolylineRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineRepresentation (-228)

#endif

/* resqml20__TrianglePatch has binding name 'resqml20__TrianglePatch' for type 'resqml20:TrianglePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TrianglePatch (-227)

#endif

/* resqml20__obj_USCORESealedSurfaceFrameworkRepresentation has binding name 'resqml20__obj_USCORESealedSurfaceFrameworkRepresentation' for type 'resqml20:obj_SealedSurfaceFrameworkRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedSurfaceFrameworkRepresentation (-226)

#endif

/* resqml20__NodePatch has binding name 'resqml20__NodePatch' for type 'resqml20:NodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodePatch (-225)

#endif

/* resqml20__obj_USCOREPolylineSetRepresentation has binding name 'resqml20__obj_USCOREPolylineSetRepresentation' for type 'resqml20:obj_PolylineSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPolylineSetRepresentation (-224)

#endif

/* resqml20__VolumeShell has binding name 'resqml20__VolumeShell' for type 'resqml20:VolumeShell' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeShell (-223)

#endif

/* resqml20__VolumeRegion has binding name 'resqml20__VolumeRegion' for type 'resqml20:VolumeRegion' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VolumeRegion (-222)

#endif

/* resqml20__EdgePatch has binding name 'resqml20__EdgePatch' for type 'resqml20:EdgePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__EdgePatch (-221)

#endif

/* resqml20__obj_USCORESealedVolumeFrameworkRepresentation has binding name 'resqml20__obj_USCORESealedVolumeFrameworkRepresentation' for type 'resqml20:obj_SealedVolumeFrameworkRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESealedVolumeFrameworkRepresentation (-220)

#endif

/* resqml20__obj_USCOREPointSetRepresentation has binding name 'resqml20__obj_USCOREPointSetRepresentation' for type 'resqml20:obj_PointSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointSetRepresentation (-219)

#endif

/* resqml20__AbstractSurfaceFrameworkRepresentation has binding name 'resqml20__AbstractSurfaceFrameworkRepresentation' for type 'resqml20:AbstractSurfaceFrameworkRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSurfaceFrameworkRepresentation (-218)

#endif

/* resqml20__AbstractContactRepresentationPart has binding name 'resqml20__AbstractContactRepresentationPart' for type 'resqml20:AbstractContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactRepresentationPart (-217)

#endif

/* resqml20__obj_USCOREPlaneSetRepresentation has binding name 'resqml20__obj_USCOREPlaneSetRepresentation' for type 'resqml20:obj_PlaneSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPlaneSetRepresentation (-216)

#endif

/* resqml20__ContactPatch has binding name 'resqml20__ContactPatch' for type 'resqml20:ContactPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactPatch (-215)

#endif

/* resqml20__SealedContactRepresentationPart has binding name 'resqml20__SealedContactRepresentationPart' for type 'resqml20:SealedContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SealedContactRepresentationPart (-214)

#endif

/* resqml20__NonSealedContactRepresentationPart has binding name 'resqml20__NonSealedContactRepresentationPart' for type 'resqml20:NonSealedContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NonSealedContactRepresentationPart (-213)

#endif

/* resqml20__obj_USCORETriangulatedSetRepresentation has binding name 'resqml20__obj_USCORETriangulatedSetRepresentation' for type 'resqml20:obj_TriangulatedSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETriangulatedSetRepresentation (-212)

#endif

/* resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation has binding name 'resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation' for type 'resqml20:obj_NonSealedSurfaceFrameworkRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORENonSealedSurfaceFrameworkRepresentation (-211)

#endif

/* resqml20__obj_USCOREWellboreMarkerFrameRepresentation has binding name 'resqml20__obj_USCOREWellboreMarkerFrameRepresentation' for type 'resqml20:obj_WellboreMarkerFrameRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreMarkerFrameRepresentation (-210)

#endif

/* resqml20__WellboreMarker has binding name 'resqml20__WellboreMarker' for type 'resqml20:WellboreMarker' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreMarker (-209)

#endif

/* resqml20__obj_USCOREMdDatum has binding name 'resqml20__obj_USCOREMdDatum' for type 'resqml20:obj_MdDatum' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREMdDatum (-208)

#endif

/* resqml20__obj_USCOREWellboreTrajectoryRepresentation has binding name 'resqml20__obj_USCOREWellboreTrajectoryRepresentation' for type 'resqml20:obj_WellboreTrajectoryRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreTrajectoryRepresentation (-207)

#endif

/* resqml20__obj_USCOREWellboreFrameRepresentation has binding name 'resqml20__obj_USCOREWellboreFrameRepresentation' for type 'resqml20:obj_WellboreFrameRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreFrameRepresentation (-206)

#endif

/* resqml20__obj_USCOREDeviationSurveyRepresentation has binding name 'resqml20__obj_USCOREDeviationSurveyRepresentation' for type 'resqml20:obj_DeviationSurveyRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDeviationSurveyRepresentation (-205)

#endif

/* resqml20__WellboreTrajectoryParentIntersection has binding name 'resqml20__WellboreTrajectoryParentIntersection' for type 'resqml20:WellboreTrajectoryParentIntersection' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__WellboreTrajectoryParentIntersection (-204)

#endif

/* resqml20__obj_USCOREBlockedWellboreRepresentation has binding name 'resqml20__obj_USCOREBlockedWellboreRepresentation' for type 'resqml20:obj_BlockedWellboreRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBlockedWellboreRepresentation (-203)

#endif

/* resqml20__AbstractResqmlDataObject has binding name 'resqml20__AbstractResqmlDataObject' for type 'resqml20:AbstractResqmlDataObject' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractResqmlDataObject (-202)

#endif

/* resqml20__obj_USCORETimeSeries has binding name 'resqml20__obj_USCORETimeSeries' for type 'resqml20:obj_TimeSeries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETimeSeries (-201)

#endif

/* resqml20__obj_USCORELocalDepth3dCrs has binding name 'resqml20__obj_USCORELocalDepth3dCrs' for type 'resqml20:obj_LocalDepth3dCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalDepth3dCrs (-200)

#endif

/* resqml20__NameValuePair has binding name 'resqml20__NameValuePair' for type 'resqml20:NameValuePair' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NameValuePair (-199)

#endif

/* resqml20__ResqmlJaggedArray has binding name 'resqml20__ResqmlJaggedArray' for type 'resqml20:ResqmlJaggedArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ResqmlJaggedArray (-198)

#endif

/* resqml20__AbstractLocal3dCrs has binding name 'resqml20__AbstractLocal3dCrs' for type 'resqml20:AbstractLocal3dCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractLocal3dCrs (-197)

#endif

/* resqml20__Timestamp has binding name 'resqml20__Timestamp' for type 'resqml20:Timestamp' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Timestamp (-196)

#endif

/* resqml20__TimeIndex has binding name 'resqml20__TimeIndex' for type 'resqml20:TimeIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeIndex (-195)

#endif

/* resqml20__obj_USCORELocalTime3dCrs has binding name 'resqml20__obj_USCORELocalTime3dCrs' for type 'resqml20:obj_LocalTime3dCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalTime3dCrs (-194)

#endif

/* resqml20__TimeSeriesParentage has binding name 'resqml20__TimeSeriesParentage' for type 'resqml20:TimeSeriesParentage' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeSeriesParentage (-193)

#endif

/* resqml20__Point3d has binding name 'resqml20__Point3d' for type 'resqml20:Point3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3d (-192)

#endif

/* resqml20__AbstractFeature has binding name 'resqml20__AbstractFeature' for type 'resqml20:AbstractFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeature (-191)

#endif

/* resqml20__obj_USCORETectonicBoundaryFeature has binding name 'resqml20__obj_USCORETectonicBoundaryFeature' for type 'resqml20:obj_TectonicBoundaryFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETectonicBoundaryFeature (-190)

#endif

/* resqml20__obj_USCOREOrganizationFeature has binding name 'resqml20__obj_USCOREOrganizationFeature' for type 'resqml20:obj_OrganizationFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREOrganizationFeature (-189)

#endif

/* resqml20__obj_USCOREGeobodyFeature has binding name 'resqml20__obj_USCOREGeobodyFeature' for type 'resqml20:obj_GeobodyFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyFeature (-188)

#endif

/* resqml20__obj_USCOREGeneticBoundaryFeature has binding name 'resqml20__obj_USCOREGeneticBoundaryFeature' for type 'resqml20:obj_GeneticBoundaryFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeneticBoundaryFeature (-187)

#endif

/* resqml20__AbstractGeologicFeature has binding name 'resqml20__AbstractGeologicFeature' for type 'resqml20:AbstractGeologicFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeologicFeature (-186)

#endif

/* resqml20__obj_USCOREStratigraphicUnitFeature has binding name 'resqml20__obj_USCOREStratigraphicUnitFeature' for type 'resqml20:obj_StratigraphicUnitFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitFeature (-185)

#endif

/* resqml20__obj_USCOREGlobalChronostratigraphicColumn has binding name 'resqml20__obj_USCOREGlobalChronostratigraphicColumn' for type 'resqml20:obj_GlobalChronostratigraphicColumn' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGlobalChronostratigraphicColumn (-184)

#endif

/* resqml20__ChronostratigraphicRank has binding name 'resqml20__ChronostratigraphicRank' for type 'resqml20:ChronostratigraphicRank' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ChronostratigraphicRank (-183)

#endif

/* resqml20__obj_USCOREBoundaryFeature has binding name 'resqml20__obj_USCOREBoundaryFeature' for type 'resqml20:obj_BoundaryFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeature (-182)

#endif

/* resqml20__obj_USCORERockFluidUnitFeature has binding name 'resqml20__obj_USCORERockFluidUnitFeature' for type 'resqml20:obj_RockFluidUnitFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitFeature (-181)

#endif

/* resqml20__obj_USCOREGeologicUnitFeature has binding name 'resqml20__obj_USCOREGeologicUnitFeature' for type 'resqml20:obj_GeologicUnitFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitFeature (-180)

#endif

/* resqml20__obj_USCOREFluidBoundaryFeature has binding name 'resqml20__obj_USCOREFluidBoundaryFeature' for type 'resqml20:obj_FluidBoundaryFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFluidBoundaryFeature (-179)

#endif

/* resqml20__obj_USCOREStratigraphicOccurrenceInterpretation has binding name 'resqml20__obj_USCOREStratigraphicOccurrenceInterpretation' for type 'resqml20:obj_StratigraphicOccurrenceInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicOccurrenceInterpretation (-178)

#endif

/* resqml20__obj_USCOREStratigraphicUnitInterpretation has binding name 'resqml20__obj_USCOREStratigraphicUnitInterpretation' for type 'resqml20:obj_StratigraphicUnitInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicUnitInterpretation (-177)

#endif

/* resqml20__obj_USCOREGeologicUnitInterpretation has binding name 'resqml20__obj_USCOREGeologicUnitInterpretation' for type 'resqml20:obj_GeologicUnitInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeologicUnitInterpretation (-176)

#endif

/* resqml20__obj_USCOREHorizonInterpretation has binding name 'resqml20__obj_USCOREHorizonInterpretation' for type 'resqml20:obj_HorizonInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREHorizonInterpretation (-175)

#endif

/* resqml20__RockFluidUnitInterpretationIndex has binding name 'resqml20__RockFluidUnitInterpretationIndex' for type 'resqml20:RockFluidUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RockFluidUnitInterpretationIndex (-174)

#endif

/* resqml20__AbstractStratigraphicOrganizationInterpretation has binding name 'resqml20__AbstractStratigraphicOrganizationInterpretation' for type 'resqml20:AbstractStratigraphicOrganizationInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractStratigraphicOrganizationInterpretation (-173)

#endif

/* resqml20__obj_USCOREStratigraphicColumnRankInterpretation has binding name 'resqml20__obj_USCOREStratigraphicColumnRankInterpretation' for type 'resqml20:obj_StratigraphicColumnRankInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumnRankInterpretation (-172)

#endif

/* resqml20__FaultThrow has binding name 'resqml20__FaultThrow' for type 'resqml20:FaultThrow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__FaultThrow (-171)

#endif

/* resqml20__obj_USCOREEarthModelInterpretation has binding name 'resqml20__obj_USCOREEarthModelInterpretation' for type 'resqml20:obj_EarthModelInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREEarthModelInterpretation (-170)

#endif

/* resqml20__AbstractContactInterpretationPart has binding name 'resqml20__AbstractContactInterpretationPart' for type 'resqml20:AbstractContactInterpretationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractContactInterpretationPart (-169)

#endif

/* resqml20__obj_USCOREBoundaryFeatureInterpretation has binding name 'resqml20__obj_USCOREBoundaryFeatureInterpretation' for type 'resqml20:obj_BoundaryFeatureInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREBoundaryFeatureInterpretation (-168)

#endif

/* resqml20__obj_USCOREGeobodyInterpretation has binding name 'resqml20__obj_USCOREGeobodyInterpretation' for type 'resqml20:obj_GeobodyInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyInterpretation (-167)

#endif

/* resqml20__obj_USCOREStratigraphicColumn has binding name 'resqml20__obj_USCOREStratigraphicColumn' for type 'resqml20:obj_StratigraphicColumn' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStratigraphicColumn (-166)

#endif

/* resqml20__obj_USCOREFaultInterpretation has binding name 'resqml20__obj_USCOREFaultInterpretation' for type 'resqml20:obj_FaultInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREFaultInterpretation (-165)

#endif

/* resqml20__HorizonInterpretationIndex has binding name 'resqml20__HorizonInterpretationIndex' for type 'resqml20:HorizonInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizonInterpretationIndex (-164)

#endif

/* resqml20__MultipleContactInterpretationPart has binding name 'resqml20__MultipleContactInterpretationPart' for type 'resqml20:MultipleContactInterpretationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__MultipleContactInterpretationPart (-163)

#endif

/* resqml20__obj_USCOREStructuralOrganizationInterpretation has binding name 'resqml20__obj_USCOREStructuralOrganizationInterpretation' for type 'resqml20:obj_StructuralOrganizationInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStructuralOrganizationInterpretation (-162)

#endif

/* resqml20__obj_USCOREGeobodyBoundaryInterpretation has binding name 'resqml20__obj_USCOREGeobodyBoundaryInterpretation' for type 'resqml20:obj_GeobodyBoundaryInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGeobodyBoundaryInterpretation (-161)

#endif

/* resqml20__GeologicUnitInterpretationIndex has binding name 'resqml20__GeologicUnitInterpretationIndex' for type 'resqml20:GeologicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GeologicUnitInterpretationIndex (-160)

#endif

/* resqml20__obj_USCOREWellboreInterpretation has binding name 'resqml20__obj_USCOREWellboreInterpretation' for type 'resqml20:obj_WellboreInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREWellboreInterpretation (-159)

#endif

/* resqml20__obj_USCOREGenericFeatureInterpretation has binding name 'resqml20__obj_USCOREGenericFeatureInterpretation' for type 'resqml20:obj_GenericFeatureInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGenericFeatureInterpretation (-158)

#endif

/* resqml20__obj_USCORERockFluidUnitInterpretation has binding name 'resqml20__obj_USCORERockFluidUnitInterpretation' for type 'resqml20:obj_RockFluidUnitInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidUnitInterpretation (-157)

#endif

/* resqml20__ContactElementReference has binding name 'resqml20__ContactElementReference' for type 'resqml20:ContactElementReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ContactElementReference (-156)

#endif

/* resqml20__StratigraphicUnitInterpretationIndex has binding name 'resqml20__StratigraphicUnitInterpretationIndex' for type 'resqml20:StratigraphicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StratigraphicUnitInterpretationIndex (-155)

#endif

/* resqml20__BinaryContactInterpretationPart has binding name 'resqml20__BinaryContactInterpretationPart' for type 'resqml20:BinaryContactInterpretationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BinaryContactInterpretationPart (-154)

#endif

/* resqml20__AbstractOrganizationInterpretation has binding name 'resqml20__AbstractOrganizationInterpretation' for type 'resqml20:AbstractOrganizationInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractOrganizationInterpretation (-153)

#endif

/* resqml20__TimeInterval has binding name 'resqml20__TimeInterval' for type 'resqml20:TimeInterval' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TimeInterval (-152)

#endif

/* resqml20__obj_USCORERockFluidOrganizationInterpretation has binding name 'resqml20__obj_USCORERockFluidOrganizationInterpretation' for type 'resqml20:obj_RockFluidOrganizationInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERockFluidOrganizationInterpretation (-151)

#endif

/* resqml20__AbstractFeatureInterpretation has binding name 'resqml20__AbstractFeatureInterpretation' for type 'resqml20:AbstractFeatureInterpretation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractFeatureInterpretation (-150)

#endif

/* resqml20__AbstractParentWindow has binding name 'resqml20__AbstractParentWindow' for type 'resqml20:AbstractParentWindow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParentWindow (-149)

#endif

/* resqml20__AbstractColumnLayerGridGeometry has binding name 'resqml20__AbstractColumnLayerGridGeometry' for type 'resqml20:AbstractColumnLayerGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridGeometry (-148)

#endif

/* resqml20__Intervals has binding name 'resqml20__Intervals' for type 'resqml20:Intervals' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Intervals (-147)

#endif

/* resqml20__OverlapVolume has binding name 'resqml20__OverlapVolume' for type 'resqml20:OverlapVolume' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__OverlapVolume (-146)

#endif

/* resqml20__VariableSubnodePatch has binding name 'resqml20__VariableSubnodePatch' for type 'resqml20:VariableSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__VariableSubnodePatch (-145)

#endif

/* resqml20__ColumnLayerSplitColumnEdges has binding name 'resqml20__ColumnLayerSplitColumnEdges' for type 'resqml20:ColumnLayerSplitColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitColumnEdges (-144)

#endif

/* resqml20__CellOverlap has binding name 'resqml20__CellOverlap' for type 'resqml20:CellOverlap' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellOverlap (-143)

#endif

/* resqml20__UnstructuredGridHingeNodeFaces has binding name 'resqml20__UnstructuredGridHingeNodeFaces' for type 'resqml20:UnstructuredGridHingeNodeFaces' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridHingeNodeFaces (-142)

#endif

/* resqml20__AbstractGridGeometry has binding name 'resqml20__AbstractGridGeometry' for type 'resqml20:AbstractGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridGeometry (-141)

#endif

/* resqml20__obj_USCOREGridConnectionSetRepresentation has binding name 'resqml20__obj_USCOREGridConnectionSetRepresentation' for type 'resqml20:obj_GridConnectionSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGridConnectionSetRepresentation (-140)

#endif

/* resqml20__obj_USCORETruncatedIjkGridRepresentation has binding name 'resqml20__obj_USCORETruncatedIjkGridRepresentation' for type 'resqml20:obj_TruncatedIjkGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedIjkGridRepresentation (-139)

#endif

/* resqml20__GpGridIjkGridPatch has binding name 'resqml20__GpGridIjkGridPatch' for type 'resqml20:GpGridIjkGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridIjkGridPatch (-138)

#endif

/* resqml20__AbstractColumnLayerGridRepresentation has binding name 'resqml20__AbstractColumnLayerGridRepresentation' for type 'resqml20:AbstractColumnLayerGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractColumnLayerGridRepresentation (-137)

#endif

/* resqml20__CellParentWindow has binding name 'resqml20__CellParentWindow' for type 'resqml20:CellParentWindow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellParentWindow (-136)

#endif

/* resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation has binding name 'resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation' for type 'resqml20:obj_TruncatedUnstructuredColumnLayerGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation (-135)

#endif

/* resqml20__Edges has binding name 'resqml20__Edges' for type 'resqml20:Edges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Edges (-134)

#endif

/* resqml20__UnstructuredGridGeometry has binding name 'resqml20__UnstructuredGridGeometry' for type 'resqml20:UnstructuredGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredGridGeometry (-133)

#endif

/* resqml20__NodesPerCell has binding name 'resqml20__NodesPerCell' for type 'resqml20:NodesPerCell' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__NodesPerCell (-132)

#endif

/* resqml20__CellFluidPhaseUnits has binding name 'resqml20__CellFluidPhaseUnits' for type 'resqml20:CellFluidPhaseUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellFluidPhaseUnits (-131)

#endif

/* resqml20__SplitEdges has binding name 'resqml20__SplitEdges' for type 'resqml20:SplitEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitEdges (-130)

#endif

/* resqml20__AbstractTruncatedColumnLayerGridRepresentation has binding name 'resqml20__AbstractTruncatedColumnLayerGridRepresentation' for type 'resqml20:AbstractTruncatedColumnLayerGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractTruncatedColumnLayerGridRepresentation (-129)

#endif

/* resqml20__ConnectionInterpretations has binding name 'resqml20__ConnectionInterpretations' for type 'resqml20:ConnectionInterpretations' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ConnectionInterpretations (-128)

#endif

/* resqml20__IjkGridGeometry has binding name 'resqml20__IjkGridGeometry' for type 'resqml20:IjkGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkGridGeometry (-127)

#endif

/* resqml20__UnstructuredColumnLayerGridGeometry has binding name 'resqml20__UnstructuredColumnLayerGridGeometry' for type 'resqml20:UnstructuredColumnLayerGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnLayerGridGeometry (-126)

#endif

/* resqml20__Activation has binding name 'resqml20__Activation' for type 'resqml20:Activation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Activation (-125)

#endif

/* resqml20__Regrid has binding name 'resqml20__Regrid' for type 'resqml20:Regrid' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Regrid (-124)

#endif

/* resqml20__IntervalStratigraphicUnits has binding name 'resqml20__IntervalStratigraphicUnits' for type 'resqml20:IntervalStratigraphicUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntervalStratigraphicUnits (-123)

#endif

/* resqml20__GpGridUnstructuredGridPatch has binding name 'resqml20__GpGridUnstructuredGridPatch' for type 'resqml20:GpGridUnstructuredGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredGridPatch (-122)

#endif

/* resqml20__TruncationCellPatch has binding name 'resqml20__TruncationCellPatch' for type 'resqml20:TruncationCellPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TruncationCellPatch (-121)

#endif

/* resqml20__IjSplitColumnEdges has binding name 'resqml20__IjSplitColumnEdges' for type 'resqml20:IjSplitColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjSplitColumnEdges (-120)

#endif

/* resqml20__AdditionalGridPoints has binding name 'resqml20__AdditionalGridPoints' for type 'resqml20:AdditionalGridPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridPoints (-119)

#endif

/* resqml20__UnstructuredColumnEdges has binding name 'resqml20__UnstructuredColumnEdges' for type 'resqml20:UnstructuredColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredColumnEdges (-118)

#endif

/* resqml20__ColumnLayerSubnodeTopology has binding name 'resqml20__ColumnLayerSubnodeTopology' for type 'resqml20:ColumnLayerSubnodeTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSubnodeTopology (-117)

#endif

/* resqml20__SubnodePatch has binding name 'resqml20__SubnodePatch' for type 'resqml20:SubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodePatch (-116)

#endif

/* resqml20__KGaps has binding name 'resqml20__KGaps' for type 'resqml20:KGaps' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__KGaps (-115)

#endif

/* resqml20__UniformSubnodePatch has binding name 'resqml20__UniformSubnodePatch' for type 'resqml20:UniformSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UniformSubnodePatch (-114)

#endif

/* resqml20__ColumnLayerSplitCoordinateLines has binding name 'resqml20__ColumnLayerSplitCoordinateLines' for type 'resqml20:ColumnLayerSplitCoordinateLines' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerSplitCoordinateLines (-113)

#endif

/* resqml20__GpGridColumnLayerGrid has binding name 'resqml20__GpGridColumnLayerGrid' for type 'resqml20:GpGridColumnLayerGrid' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridColumnLayerGrid (-112)

#endif

/* resqml20__GpGridUnstructuredColumnLayerGridPatch has binding name 'resqml20__GpGridUnstructuredColumnLayerGridPatch' for type 'resqml20:GpGridUnstructuredColumnLayerGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__GpGridUnstructuredColumnLayerGridPatch (-111)

#endif

/* resqml20__UnstructuredSubnodeTopology has binding name 'resqml20__UnstructuredSubnodeTopology' for type 'resqml20:UnstructuredSubnodeTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__UnstructuredSubnodeTopology (-110)

#endif

/* resqml20__ColumnLayerParentWindow has binding name 'resqml20__ColumnLayerParentWindow' for type 'resqml20:ColumnLayerParentWindow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnLayerParentWindow (-109)

#endif

/* resqml20__obj_USCOREIjkGridRepresentation has binding name 'resqml20__obj_USCOREIjkGridRepresentation' for type 'resqml20:obj_IjkGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREIjkGridRepresentation (-108)

#endif

/* resqml20__IjGaps has binding name 'resqml20__IjGaps' for type 'resqml20:IjGaps' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjGaps (-107)

#endif

/* resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation has binding name 'resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation' for type 'resqml20:obj_UnstructuredColumnLayerGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredColumnLayerGridRepresentation (-106)

#endif

/* resqml20__SplitFaces has binding name 'resqml20__SplitFaces' for type 'resqml20:SplitFaces' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitFaces (-105)

#endif

/* resqml20__SubnodeTopology has binding name 'resqml20__SubnodeTopology' for type 'resqml20:SubnodeTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubnodeTopology (-104)

#endif

/* resqml20__AbstractGridRepresentation has binding name 'resqml20__AbstractGridRepresentation' for type 'resqml20:AbstractGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGridRepresentation (-103)

#endif

/* resqml20__obj_USCORELocalGridSet has binding name 'resqml20__obj_USCORELocalGridSet' for type 'resqml20:obj_LocalGridSet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORELocalGridSet (-102)

#endif

/* resqml20__CellStratigraphicUnits has binding name 'resqml20__CellStratigraphicUnits' for type 'resqml20:CellStratigraphicUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__CellStratigraphicUnits (-101)

#endif

/* resqml20__ColumnSubnodePatch has binding name 'resqml20__ColumnSubnodePatch' for type 'resqml20:ColumnSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ColumnSubnodePatch (-100)

#endif

/* resqml20__IjkParentWindow has binding name 'resqml20__IjkParentWindow' for type 'resqml20:IjkParentWindow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IjkParentWindow (-99)

#endif

/* resqml20__SplitNodePatch has binding name 'resqml20__SplitNodePatch' for type 'resqml20:SplitNodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SplitNodePatch (-98)

#endif

/* resqml20__obj_USCOREGpGridRepresentation has binding name 'resqml20__obj_USCOREGpGridRepresentation' for type 'resqml20:obj_GpGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREGpGridRepresentation (-97)

#endif

/* resqml20__AdditionalGridTopology has binding name 'resqml20__AdditionalGridTopology' for type 'resqml20:AdditionalGridTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AdditionalGridTopology (-96)

#endif

/* resqml20__obj_USCOREUnstructuredGridRepresentation has binding name 'resqml20__obj_USCOREUnstructuredGridRepresentation' for type 'resqml20:obj_UnstructuredGridRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREUnstructuredGridRepresentation (-95)

#endif

/* resqml20__obj_USCORESubRepresentation has binding name 'resqml20__obj_USCORESubRepresentation' for type 'resqml20:obj_SubRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORESubRepresentation (-94)

#endif

/* resqml20__PatchOfGeometry has binding name 'resqml20__PatchOfGeometry' for type 'resqml20:PatchOfGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfGeometry (-93)

#endif

/* resqml20__AbstractRepresentation has binding name 'resqml20__AbstractRepresentation' for type 'resqml20:AbstractRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractRepresentation (-92)

#endif

/* resqml20__ElementIdentity has binding name 'resqml20__ElementIdentity' for type 'resqml20:ElementIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIdentity (-91)

#endif

/* resqml20__obj_USCORERepresentationIdentitySet has binding name 'resqml20__obj_USCORERepresentationIdentitySet' for type 'resqml20:obj_RepresentationIdentitySet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationIdentitySet (-90)

#endif

/* resqml20__RepresentationIdentity has binding name 'resqml20__RepresentationIdentity' for type 'resqml20:RepresentationIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__RepresentationIdentity (-89)

#endif

/* resqml20__obj_USCORERedefinedGeometryRepresentation has binding name 'resqml20__obj_USCORERedefinedGeometryRepresentation' for type 'resqml20:obj_RedefinedGeometryRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERedefinedGeometryRepresentation (-88)

#endif

/* resqml20__obj_USCORERepresentationSetRepresentation has binding name 'resqml20__obj_USCORERepresentationSetRepresentation' for type 'resqml20:obj_RepresentationSetRepresentation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORERepresentationSetRepresentation (-87)

#endif

/* resqml20__SubRepresentationPatch has binding name 'resqml20__SubRepresentationPatch' for type 'resqml20:SubRepresentationPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__SubRepresentationPatch (-86)

#endif

/* resqml20__ElementIndices has binding name 'resqml20__ElementIndices' for type 'resqml20:ElementIndices' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ElementIndices (-85)

#endif

/* resqml20__Patch has binding name 'resqml20__Patch' for type 'resqml20:Patch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch (-84)

#endif

/* resqml20__Patch1d has binding name 'resqml20__Patch1d' for type 'resqml20:Patch1d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Patch1d (-83)

#endif

/* resqml20__Seismic2dCoordinates has binding name 'resqml20__Seismic2dCoordinates' for type 'resqml20:Seismic2dCoordinates' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic2dCoordinates (-82)

#endif

/* resqml20__AbstractSeismicCoordinates has binding name 'resqml20__AbstractSeismicCoordinates' for type 'resqml20:AbstractSeismicCoordinates' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractSeismicCoordinates (-81)

#endif

/* resqml20__Seismic3dCoordinates has binding name 'resqml20__Seismic3dCoordinates' for type 'resqml20:Seismic3dCoordinates' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Seismic3dCoordinates (-80)

#endif

/* resqml20__Point3dFromRepresentationLatticeArray has binding name 'resqml20__Point3dFromRepresentationLatticeArray' for type 'resqml20:Point3dFromRepresentationLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dFromRepresentationLatticeArray (-79)

#endif

/* resqml20__AbstractParametricLineGeometry has binding name 'resqml20__AbstractParametricLineGeometry' for type 'resqml20:AbstractParametricLineGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineGeometry (-78)

#endif

/* resqml20__AbstractPlaneGeometry has binding name 'resqml20__AbstractPlaneGeometry' for type 'resqml20:AbstractPlaneGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPlaneGeometry (-77)

#endif

/* resqml20__TiltedPlaneGeometry has binding name 'resqml20__TiltedPlaneGeometry' for type 'resqml20:TiltedPlaneGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__TiltedPlaneGeometry (-76)

#endif

/* resqml20__ParametricLineIntersections has binding name 'resqml20__ParametricLineIntersections' for type 'resqml20:ParametricLineIntersections' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineIntersections (-75)

#endif

/* resqml20__AbstractParametricLineArray has binding name 'resqml20__AbstractParametricLineArray' for type 'resqml20:AbstractParametricLineArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractParametricLineArray (-74)

#endif

/* resqml20__Point3dParametricArray has binding name 'resqml20__Point3dParametricArray' for type 'resqml20:Point3dParametricArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dParametricArray (-73)

#endif

/* resqml20__ParametricLineArray has binding name 'resqml20__ParametricLineArray' for type 'resqml20:ParametricLineArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineArray (-72)

#endif

/* resqml20__ParametricLineFromRepresentationGeometry has binding name 'resqml20__ParametricLineFromRepresentationGeometry' for type 'resqml20:ParametricLineFromRepresentationGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationGeometry (-71)

#endif

/* resqml20__ThreePoint3d has binding name 'resqml20__ThreePoint3d' for type 'resqml20:ThreePoint3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ThreePoint3d (-70)

#endif

/* resqml20__Point3dHdf5Array has binding name 'resqml20__Point3dHdf5Array' for type 'resqml20:Point3dHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dHdf5Array (-69)

#endif

/* resqml20__AbstractGeometry has binding name 'resqml20__AbstractGeometry' for type 'resqml20:AbstractGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractGeometry (-68)

#endif

/* resqml20__AbstractPoint3dArray has binding name 'resqml20__AbstractPoint3dArray' for type 'resqml20:AbstractPoint3dArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPoint3dArray (-67)

#endif

/* resqml20__PointGeometry has binding name 'resqml20__PointGeometry' for type 'resqml20:PointGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PointGeometry (-66)

#endif

/* resqml20__HorizontalPlaneGeometry has binding name 'resqml20__HorizontalPlaneGeometry' for type 'resqml20:HorizontalPlaneGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__HorizontalPlaneGeometry (-65)

#endif

/* resqml20__Point3dZValueArray has binding name 'resqml20__Point3dZValueArray' for type 'resqml20:Point3dZValueArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dZValueArray (-64)

#endif

/* resqml20__Point3dLatticeArray has binding name 'resqml20__Point3dLatticeArray' for type 'resqml20:Point3dLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dLatticeArray (-63)

#endif

/* resqml20__ParametricLineFromRepresentationLatticeArray has binding name 'resqml20__ParametricLineFromRepresentationLatticeArray' for type 'resqml20:ParametricLineFromRepresentationLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineFromRepresentationLatticeArray (-62)

#endif

/* resqml20__ParametricLineGeometry has binding name 'resqml20__ParametricLineGeometry' for type 'resqml20:ParametricLineGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__ParametricLineGeometry (-61)

#endif

/* resqml20__Point2dHdf5Array has binding name 'resqml20__Point2dHdf5Array' for type 'resqml20:Point2dHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point2dHdf5Array (-60)

#endif

/* resqml20__Point3dOffset has binding name 'resqml20__Point3dOffset' for type 'resqml20:Point3dOffset' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__Point3dOffset (-59)

#endif

/* resqml20__BooleanArrayFromDiscretePropertyArray has binding name 'resqml20__BooleanArrayFromDiscretePropertyArray' for type 'resqml20:BooleanArrayFromDiscretePropertyArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromDiscretePropertyArray (-58)

#endif

/* resqml20__DoubleLookup has binding name 'resqml20__DoubleLookup' for type 'resqml20:DoubleLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLookup (-57)

#endif

/* resqml20__LocalPropertyKind has binding name 'resqml20__LocalPropertyKind' for type 'resqml20:LocalPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__LocalPropertyKind (-56)

#endif

/* resqml20__AbstractValuesProperty has binding name 'resqml20__AbstractValuesProperty' for type 'resqml20:AbstractValuesProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValuesProperty (-55)

#endif

/* resqml20__StandardPropertyKind has binding name 'resqml20__StandardPropertyKind' for type 'resqml20:StandardPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StandardPropertyKind (-54)

#endif

/* resqml20__PropertyValuesPatch has binding name 'resqml20__PropertyValuesPatch' for type 'resqml20:PropertyValuesPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyValuesPatch (-53)

#endif

/* resqml20__AbstractBooleanArray has binding name 'resqml20__AbstractBooleanArray' for type 'resqml20:AbstractBooleanArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractBooleanArray (-52)

#endif

/* resqml20__AbstractIntegerArray has binding name 'resqml20__AbstractIntegerArray' for type 'resqml20:AbstractIntegerArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractIntegerArray (-51)

#endif

/* resqml20__AbstractProperty has binding name 'resqml20__AbstractProperty' for type 'resqml20:AbstractProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractProperty (-50)

#endif

/* resqml20__obj_USCOREPropertySet has binding name 'resqml20__obj_USCOREPropertySet' for type 'resqml20:obj_PropertySet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertySet (-49)

#endif

/* resqml20__IntegerRangeArray has binding name 'resqml20__IntegerRangeArray' for type 'resqml20:IntegerRangeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerRangeArray (-48)

#endif

/* resqml20__AbstractPropertyLookup has binding name 'resqml20__AbstractPropertyLookup' for type 'resqml20:AbstractPropertyLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyLookup (-47)

#endif

/* resqml20__AbstractValueArray has binding name 'resqml20__AbstractValueArray' for type 'resqml20:AbstractValueArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractValueArray (-46)

#endif

/* resqml20__PatchOfValues has binding name 'resqml20__PatchOfValues' for type 'resqml20:PatchOfValues' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfValues (-45)

#endif

/* resqml20__AbstractPropertyKind has binding name 'resqml20__AbstractPropertyKind' for type 'resqml20:AbstractPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractPropertyKind (-44)

#endif

/* resqml20__BooleanHdf5Array has binding name 'resqml20__BooleanHdf5Array' for type 'resqml20:BooleanHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanHdf5Array (-43)

#endif

/* resqml20__StringHdf5Array has binding name 'resqml20__StringHdf5Array' for type 'resqml20:StringHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringHdf5Array (-42)

#endif

/* resqml20__obj_USCOREStringTableLookup has binding name 'resqml20__obj_USCOREStringTableLookup' for type 'resqml20:obj_StringTableLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREStringTableLookup (-41)

#endif

/* resqml20__obj_USCOREPropertyKind has binding name 'resqml20__obj_USCOREPropertyKind' for type 'resqml20:obj_PropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPropertyKind (-40)

#endif

/* resqml20__IntegerLatticeArray has binding name 'resqml20__IntegerLatticeArray' for type 'resqml20:IntegerLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerLatticeArray (-39)

#endif

/* resqml20__AbstractDoubleArray has binding name 'resqml20__AbstractDoubleArray' for type 'resqml20:AbstractDoubleArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__AbstractDoubleArray (-38)

#endif

/* resqml20__obj_USCORECategoricalProperty has binding name 'resqml20__obj_USCORECategoricalProperty' for type 'resqml20:obj_CategoricalProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECategoricalProperty (-37)

#endif

/* resqml20__obj_USCOREDiscreteProperty has binding name 'resqml20__obj_USCOREDiscreteProperty' for type 'resqml20:obj_DiscreteProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDiscreteProperty (-36)

#endif

/* resqml20__obj_USCORECommentProperty has binding name 'resqml20__obj_USCORECommentProperty' for type 'resqml20:obj_CommentProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCORECommentProperty (-35)

#endif

/* resqml20__PatchOfPoints has binding name 'resqml20__PatchOfPoints' for type 'resqml20:PatchOfPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PatchOfPoints (-34)

#endif

/* resqml20__DoubleHdf5Array has binding name 'resqml20__DoubleHdf5Array' for type 'resqml20:DoubleHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleHdf5Array (-33)

#endif

/* resqml20__DoubleConstantArray has binding name 'resqml20__DoubleConstantArray' for type 'resqml20:DoubleConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleConstantArray (-32)

#endif

/* resqml20__DoubleLatticeArray has binding name 'resqml20__DoubleLatticeArray' for type 'resqml20:DoubleLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__DoubleLatticeArray (-31)

#endif

/* resqml20__obj_USCOREPointsProperty has binding name 'resqml20__obj_USCOREPointsProperty' for type 'resqml20:obj_PointsProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREPointsProperty (-30)

#endif

/* resqml20__StringLookup has binding name 'resqml20__StringLookup' for type 'resqml20:StringLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__StringLookup (-29)

#endif

/* resqml20__obj_USCOREContinuousProperty has binding name 'resqml20__obj_USCOREContinuousProperty' for type 'resqml20:obj_ContinuousProperty' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREContinuousProperty (-28)

#endif

/* resqml20__IntegerHdf5Array has binding name 'resqml20__IntegerHdf5Array' for type 'resqml20:IntegerHdf5Array' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerHdf5Array (-27)

#endif

/* resqml20__PropertyKindFacet has binding name 'resqml20__PropertyKindFacet' for type 'resqml20:PropertyKindFacet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__PropertyKindFacet (-26)

#endif

/* resqml20__obj_USCOREDoubleTableLookup has binding name 'resqml20__obj_USCOREDoubleTableLookup' for type 'resqml20:obj_DoubleTableLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__obj_USCOREDoubleTableLookup (-25)

#endif

/* resqml20__IntegerConstantArray has binding name 'resqml20__IntegerConstantArray' for type 'resqml20:IntegerConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerConstantArray (-24)

#endif

/* resqml20__BooleanConstantArray has binding name 'resqml20__BooleanConstantArray' for type 'resqml20:BooleanConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanConstantArray (-23)

#endif

/* resqml20__BooleanArrayFromIndexArray has binding name 'resqml20__BooleanArrayFromIndexArray' for type 'resqml20:BooleanArrayFromIndexArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__BooleanArrayFromIndexArray (-22)

#endif

/* resqml20__IntegerArrayFromBooleanMaskArray has binding name 'resqml20__IntegerArrayFromBooleanMaskArray' for type 'resqml20:IntegerArrayFromBooleanMaskArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml20__IntegerArrayFromBooleanMaskArray (-21)

#endif

/* xsd__date has binding name 'xsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__date
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__date (-20)

#endif

/* xsd__anyURI has binding name 'xsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI (-19)

#endif

/* xsd__ID has binding name 'xsd__ID' for type 'xsd:ID' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID (-18)

#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__string
#define SOAP_TYPE_gsoap_resqml2_0_1_std__string (-17)

#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault (-1809547271)

#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason (-1809547270)

#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail (-1809547267)

#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code (-1809547265)

#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header (-1809547264)

#endif

/* _gco__DateTime has binding name '_gco__DateTime' for type '' */
#ifndef SOAP_TYPE__gco__DateTime
#define SOAP_TYPE__gco__DateTime (-1352)

#endif

/* xsd__dateTime has binding name 'xsd__dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

#endif

/* struct tm has binding name 'tm' for type 'tm' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_tm
#define SOAP_TYPE_gsoap_resqml2_0_1_tm (-8)

#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason (-1809547273)

#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail (-1809547272)

#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code (-1809547266)

#endif

/* gml__GeodeticCRSPropertyType * has binding name 'PointerTogml__GeodeticCRSPropertyType' for type 'gml:GeodeticCRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSPropertyType (-1200)

#endif

/* resqml20__TimeIndices * has binding name 'PointerToresqml20__TimeIndices' for type 'resqml20:TimeIndices' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndices (-1198)

#endif

/* resqml20__SeismicLatticeSetFeature * has binding name 'PointerToresqml20__SeismicLatticeSetFeature' for type 'resqml20:SeismicLatticeSetFeature' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SeismicLatticeSetFeature
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SeismicLatticeSetFeature (-1197)

#endif

/* resqml20__SealedContactRepresentationPart * has binding name 'PointerToresqml20__SealedContactRepresentationPart' for type 'resqml20:SealedContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SealedContactRepresentationPart (-1195)

#endif

/* resqml20__AbstractContactRepresentationPart * has binding name 'PointerToresqml20__AbstractContactRepresentationPart' for type 'resqml20:AbstractContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactRepresentationPart (-1193)

#endif

/* resqml20__GeologicUnitInterpretationIndex * has binding name 'PointerToresqml20__GeologicUnitInterpretationIndex' for type 'resqml20:GeologicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitInterpretationIndex (-1191)

#endif

/* resqml20__StratigraphicUnitInterpretationIndex * has binding name 'PointerToresqml20__StratigraphicUnitInterpretationIndex' for type 'resqml20:StratigraphicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StratigraphicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StratigraphicUnitInterpretationIndex (-1189)

#endif

/* gml__VerticalDatumPropertyType * has binding name 'PointerTogml__VerticalDatumPropertyType' for type 'gml:VerticalDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumPropertyType (-1188)

#endif

/* gml__VerticalCSPropertyType * has binding name 'PointerTogml__VerticalCSPropertyType' for type 'gml:VerticalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSPropertyType (-1187)

#endif

/* gml__GeneralConversionPropertyType * has binding name 'PointerTogml__GeneralConversionPropertyType' for type 'gml:GeneralConversionPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeneralConversionPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeneralConversionPropertyType (-1186)

#endif

/* gml__EllipsoidPropertyType * has binding name 'PointerTogml__EllipsoidPropertyType' for type 'gml:EllipsoidPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidPropertyType (-1185)

#endif

/* gml__PrimeMeridianPropertyType * has binding name 'PointerTogml__PrimeMeridianPropertyType' for type 'gml:PrimeMeridianPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianPropertyType (-1184)

#endif

/* gml__GeodeticDatumPropertyType * has binding name 'PointerTogml__GeodeticDatumPropertyType' for type 'gml:GeodeticDatumPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumPropertyType (-1183)

#endif

/* gml__SphericalCSPropertyType * has binding name 'PointerTogml__SphericalCSPropertyType' for type 'gml:SphericalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSPropertyType (-1182)

#endif

/* gml__CartesianCSPropertyType * has binding name 'PointerTogml__CartesianCSPropertyType' for type 'gml:CartesianCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSPropertyType (-1181)

#endif

/* gml__EllipsoidalCSPropertyType * has binding name 'PointerTogml__EllipsoidalCSPropertyType' for type 'gml:EllipsoidalCSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSPropertyType (-1180)

#endif

/* resqml20__WitsmlWellboreReference * has binding name 'PointerToresqml20__WitsmlWellboreReference' for type 'resqml20:WitsmlWellboreReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WitsmlWellboreReference
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WitsmlWellboreReference (-1178)

#endif

/* resqml20__Grid2dPatch * has binding name 'PointerToresqml20__Grid2dPatch' for type 'resqml20:Grid2dPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Grid2dPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Grid2dPatch (-1176)

#endif

/* resqml20__VolumeRegion * has binding name 'PointerToresqml20__VolumeRegion' for type 'resqml20:VolumeRegion' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeRegion
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeRegion (-1174)

#endif

/* resqml20__ContactIdentity * has binding name 'PointerToresqml20__ContactIdentity' for type 'resqml20:ContactIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactIdentity (-1172)

#endif

/* resqml20__AbstractPlaneGeometry * has binding name 'PointerToresqml20__AbstractPlaneGeometry' for type 'resqml20:AbstractPlaneGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPlaneGeometry (-1170)

#endif

/* resqml20__TrianglePatch * has binding name 'PointerToresqml20__TrianglePatch' for type 'resqml20:TrianglePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TrianglePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TrianglePatch (-1168)

#endif

/* resqml20__WellboreMarker * has binding name 'PointerToresqml20__WellboreMarker' for type 'resqml20:WellboreMarker' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreMarker (-1166)

#endif

/* enum resqml20__DepositionMode * has binding name 'PointerToresqml20__DepositionMode' for type 'resqml20:DepositionMode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DepositionMode
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DepositionMode (-1165)

#endif

/* enum resqml20__SequenceStratigraphySurface * has binding name 'PointerToresqml20__SequenceStratigraphySurface' for type 'resqml20:SequenceStratigraphySurface' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SequenceStratigraphySurface
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SequenceStratigraphySurface (-1164)

#endif

/* enum resqml20__Geobody3dShape * has binding name 'PointerToresqml20__Geobody3dShape' for type 'resqml20:Geobody3dShape' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Geobody3dShape
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Geobody3dShape (-1163)

#endif

/* resqml20__FaultThrow * has binding name 'PointerToresqml20__FaultThrow' for type 'resqml20:FaultThrow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FaultThrow
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FaultThrow (-1161)

#endif

/* eml20__LengthMeasure * has binding name 'PointerToeml20__LengthMeasure' for type 'eml20:LengthMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthMeasure (-1160)

#endif

/* resqml20__HorizonInterpretationIndex * has binding name 'PointerToresqml20__HorizonInterpretationIndex' for type 'resqml20:HorizonInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__HorizonInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__HorizonInterpretationIndex (-1158)

#endif

/* enum resqml20__Phase * has binding name 'PointerToresqml20__Phase' for type 'resqml20:Phase' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Phase
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Phase (-1156)

#endif

/* resqml20__RockFluidUnitInterpretationIndex * has binding name 'PointerToresqml20__RockFluidUnitInterpretationIndex' for type 'resqml20:RockFluidUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RockFluidUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RockFluidUnitInterpretationIndex (-1155)

#endif

/* resqml20__GpGridUnstructuredGridPatch * has binding name 'PointerToresqml20__GpGridUnstructuredGridPatch' for type 'resqml20:GpGridUnstructuredGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredGridPatch (-1153)

#endif

/* resqml20__GpGridColumnLayerGrid * has binding name 'PointerToresqml20__GpGridColumnLayerGrid' for type 'resqml20:GpGridColumnLayerGrid' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridColumnLayerGrid
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridColumnLayerGrid (-1151)

#endif

/* gml__CRSPropertyType * has binding name 'PointerTogml__CRSPropertyType' for type 'gml:CRSPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CRSPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CRSPropertyType (-1148)

#endif

/* _gml__coordinateOperationAccuracy * has binding name 'PointerTo_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__coordinateOperationAccuracy (-1146)

#endif

/* _gml__secondDefiningParameter * has binding name 'PointerTo_gml__secondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__secondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__secondDefiningParameter (-1145)

#endif

/* gml__AngleType * has binding name 'PointerTogml__AngleType' for type 'gml:AngleType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AngleType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AngleType (-1144)

#endif

/* std::string * has binding name 'PointerToxsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__date
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__date (-1143)

#endif

/* double * has binding name 'PointerTodouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTodouble
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTodouble (-1142)

#endif

/* enum gml__AggregationType * has binding name 'PointerTogml__AggregationType' for type 'gml:AggregationType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AggregationType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AggregationType (-1141)

#endif

/* gml__CoordinateSystemAxisPropertyType * has binding name 'PointerTogml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisPropertyType (-1139)

#endif

/* _gml__domainOfValidity * has binding name 'PointerTo_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__domainOfValidity
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__domainOfValidity (-1137)

#endif

/* resqml20__StreamlinePolylineSetPatch * has binding name 'PointerToresqml20__StreamlinePolylineSetPatch' for type 'resqml20:StreamlinePolylineSetPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlinePolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlinePolylineSetPatch (-1136)

#endif

/* resqml20__StreamlineWellbores * has binding name 'PointerToresqml20__StreamlineWellbores' for type 'resqml20:StreamlineWellbores' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlineWellbores
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StreamlineWellbores (-1135)

#endif

/* resqml20__PatchBoundaries * has binding name 'PointerToresqml20__PatchBoundaries' for type 'resqml20:PatchBoundaries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchBoundaries
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchBoundaries (-1133)

#endif

/* resqml20__PolylineSetPatch * has binding name 'PointerToresqml20__PolylineSetPatch' for type 'resqml20:PolylineSetPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PolylineSetPatch (-1131)

#endif

/* enum resqml20__LineRole * has binding name 'PointerToresqml20__LineRole' for type 'resqml20:LineRole' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__LineRole
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__LineRole (-1130)

#endif

/* resqml20__NodePatch * has binding name 'PointerToresqml20__NodePatch' for type 'resqml20:NodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodePatch (-1128)

#endif

/* resqml20__WellboreTrajectoryParentIntersection * has binding name 'PointerToresqml20__WellboreTrajectoryParentIntersection' for type 'resqml20:WellboreTrajectoryParentIntersection' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreTrajectoryParentIntersection
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__WellboreTrajectoryParentIntersection (-1127)

#endif

/* resqml20__AbstractParametricLineGeometry * has binding name 'PointerToresqml20__AbstractParametricLineGeometry' for type 'resqml20:AbstractParametricLineGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineGeometry (-1126)

#endif

/* enum resqml20__MdDomain * has binding name 'PointerToresqml20__MdDomain' for type 'resqml20:MdDomain' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__MdDomain
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__MdDomain (-1125)

#endif

/* resqml20__IntervalStratigraphicUnits * has binding name 'PointerToresqml20__IntervalStratigraphicUnits' for type 'resqml20:IntervalStratigraphicUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalStratigraphicUnits (-1124)

#endif

/* enum resqml20__GeologicUnitMaterialImplacement * has binding name 'PointerToresqml20__GeologicUnitMaterialImplacement' for type 'resqml20:GeologicUnitMaterialImplacement' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitMaterialImplacement
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitMaterialImplacement (-1123)

#endif

/* enum resqml20__GeologicUnitComposition * has binding name 'PointerToresqml20__GeologicUnitComposition' for type 'resqml20:GeologicUnitComposition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitComposition
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicUnitComposition (-1122)

#endif

/* resqml20__AbstractContactInterpretationPart * has binding name 'PointerToresqml20__AbstractContactInterpretationPart' for type 'resqml20:AbstractContactInterpretationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractContactInterpretationPart (-1120)

#endif

/* resqml20__ConnectionInterpretations * has binding name 'PointerToresqml20__ConnectionInterpretations' for type 'resqml20:ConnectionInterpretations' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ConnectionInterpretations
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ConnectionInterpretations (-1119)

#endif

/* resqml20__IjGaps * has binding name 'PointerToresqml20__IjGaps' for type 'resqml20:IjGaps' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjGaps (-1118)

#endif

/* resqml20__CellStratigraphicUnits * has binding name 'PointerToresqml20__CellStratigraphicUnits' for type 'resqml20:CellStratigraphicUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellStratigraphicUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellStratigraphicUnits (-1117)

#endif

/* resqml20__AbstractParentWindow * has binding name 'PointerToresqml20__AbstractParentWindow' for type 'resqml20:AbstractParentWindow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParentWindow
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParentWindow (-1116)

#endif

/* resqml20__CellFluidPhaseUnits * has binding name 'PointerToresqml20__CellFluidPhaseUnits' for type 'resqml20:CellFluidPhaseUnits' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellFluidPhaseUnits
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellFluidPhaseUnits (-1115)

#endif

/* resqml20__SubRepresentationPatch * has binding name 'PointerToresqml20__SubRepresentationPatch' for type 'resqml20:SubRepresentationPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SubRepresentationPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SubRepresentationPatch (-1113)

#endif

/* resqml20__PatchOfGeometry * has binding name 'PointerToresqml20__PatchOfGeometry' for type 'resqml20:PatchOfGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfGeometry (-1111)

#endif

/* resqml20__PropertyKindFacet * has binding name 'PointerToresqml20__PropertyKindFacet' for type 'resqml20:PropertyKindFacet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PropertyKindFacet
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PropertyKindFacet (-1109)

#endif

/* resqml20__PatchOfValues * has binding name 'PointerToresqml20__PatchOfValues' for type 'resqml20:PatchOfValues' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfValues
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfValues (-1107)

#endif

/* resqml20__StringLookup * has binding name 'PointerToresqml20__StringLookup' for type 'resqml20:StringLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StringLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__StringLookup (-1105)

#endif

/* resqml20__PatchOfPoints * has binding name 'PointerToresqml20__PatchOfPoints' for type 'resqml20:PatchOfPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PatchOfPoints (-1103)

#endif

/* resqml20__DoubleLookup * has binding name 'PointerToresqml20__DoubleLookup' for type 'resqml20:DoubleLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleLookup (-1101)

#endif

/* resqml20__ParameterTemplate * has binding name 'PointerToresqml20__ParameterTemplate' for type 'resqml20:ParameterTemplate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParameterTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParameterTemplate (-1099)

#endif

/* enum resqml20__GeologicBoundaryKind * has binding name 'PointerToresqml20__GeologicBoundaryKind' for type 'resqml20:GeologicBoundaryKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicBoundaryKind
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GeologicBoundaryKind (-1098)

#endif

/* enum resqml20__FluidMarker * has binding name 'PointerToresqml20__FluidMarker' for type 'resqml20:FluidMarker' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidMarker (-1097)

#endif

/* enum resqml20__FluidContact * has binding name 'PointerToresqml20__FluidContact' for type 'resqml20:FluidContact' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidContact
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__FluidContact (-1096)

#endif

/* resqml20__TimeSeriesParentage * has binding name 'PointerToresqml20__TimeSeriesParentage' for type 'resqml20:TimeSeriesParentage' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeSeriesParentage
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeSeriesParentage (-1095)

#endif

/* resqml20__Timestamp * has binding name 'PointerToresqml20__Timestamp' for type 'resqml20:Timestamp' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Timestamp
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Timestamp (-1093)

#endif

/* eml20__PlaneAngleMeasure * has binding name 'PointerToeml20__PlaneAngleMeasure' for type 'eml20:PlaneAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__PlaneAngleMeasure
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__PlaneAngleMeasure (-1092)

#endif

/* resqml20__ChronostratigraphicRank * has binding name 'PointerToresqml20__ChronostratigraphicRank' for type 'resqml20:ChronostratigraphicRank' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ChronostratigraphicRank
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ChronostratigraphicRank (-1090)

#endif

/* resqml20__ColumnLayerSplitCoordinateLines * has binding name 'PointerToresqml20__ColumnLayerSplitCoordinateLines' for type 'resqml20:ColumnLayerSplitCoordinateLines' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitCoordinateLines
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitCoordinateLines (-1089)

#endif

/* resqml20__UnstructuredGridHingeNodeFaces * has binding name 'PointerToresqml20__UnstructuredGridHingeNodeFaces' for type 'resqml20:UnstructuredGridHingeNodeFaces' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridHingeNodeFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridHingeNodeFaces (-1088)

#endif

/* resqml20__Activation * has binding name 'PointerToresqml20__Activation' for type 'resqml20:Activation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Activation
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Activation (-1087)

#endif

/* resqml20__RepresentationIdentity * has binding name 'PointerToresqml20__RepresentationIdentity' for type 'resqml20:RepresentationIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RepresentationIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__RepresentationIdentity (-1085)

#endif

/* resqml20__AbstractPropertyKind * has binding name 'PointerToresqml20__AbstractPropertyKind' for type 'resqml20:AbstractPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPropertyKind (-1084)

#endif

/* gml__RelatedTimeType * has binding name 'PointerTogml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__RelatedTimeType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__RelatedTimeType (-1082)

#endif

/* eml20__AbstractVerticalCrs * has binding name 'PointerToeml20__AbstractVerticalCrs' for type 'eml20:AbstractVerticalCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractVerticalCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractVerticalCrs (-1081)

#endif

/* enum eml20__LengthUom * has binding name 'PointerToeml20__LengthUom' for type 'eml20:LengthUom' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthUom
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__LengthUom (-1080)

#endif

/* eml20__AbstractProjectedCrs * has binding name 'PointerToeml20__AbstractProjectedCrs' for type 'eml20:AbstractProjectedCrs' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractProjectedCrs
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__AbstractProjectedCrs (-1079)

#endif

/* resqml20__EdgePatch * has binding name 'PointerToresqml20__EdgePatch' for type 'resqml20:EdgePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__EdgePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__EdgePatch (-1077)

#endif

/* resqml20__NameValuePair * has binding name 'PointerToresqml20__NameValuePair' for type 'resqml20:NameValuePair' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NameValuePair
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NameValuePair (-1075)

#endif

/* resqml20__AdditionalGridPoints * has binding name 'PointerToresqml20__AdditionalGridPoints' for type 'resqml20:AdditionalGridPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridPoints (-1073)

#endif

/* resqml20__ElementIndices * has binding name 'PointerToresqml20__ElementIndices' for type 'resqml20:ElementIndices' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIndices (-1071)

#endif

/* resqml20__ThreePoint3d * has binding name 'PointerToresqml20__ThreePoint3d' for type 'resqml20:ThreePoint3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ThreePoint3d
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ThreePoint3d (-1069)

#endif

/* resqml20__IntegerConstantArray * has binding name 'PointerToresqml20__IntegerConstantArray' for type 'resqml20:IntegerConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerConstantArray (-1067)

#endif

/* resqml20__DoubleConstantArray * has binding name 'PointerToresqml20__DoubleConstantArray' for type 'resqml20:DoubleConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__DoubleConstantArray (-1065)

#endif

/* gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType' for type 'gmd:CI_OnLineFunctionCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType (-1064)

#endif

/* gmd__URL_USCOREPropertyType * has binding name 'PointerTogmd__URL_USCOREPropertyType' for type 'gmd:URL_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__URL_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__URL_USCOREPropertyType (-1063)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType' for type 'gmd:CI_OnlineResource_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType (-1062)

#endif

/* gmd__CI_USCOREAddress_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREAddress_USCOREPropertyType' for type 'gmd:CI_Address_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType (-1061)

#endif

/* gmd__CI_USCORETelephone_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORETelephone_USCOREPropertyType' for type 'gmd:CI_Telephone_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType (-1060)

#endif

/* gmd__CI_USCORERoleCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORERoleCode_USCOREPropertyType' for type 'gmd:CI_RoleCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType (-1059)

#endif

/* gmd__CI_USCOREContact_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREContact_USCOREPropertyType' for type 'gmd:CI_Contact_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType (-1058)

#endif

/* gmd__CI_USCOREDateTypeCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType' for type 'gmd:CI_DateTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType (-1057)

#endif

/* gmd__CI_USCORESeries_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORESeries_USCOREPropertyType' for type 'gmd:CI_Series_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType (-1056)

#endif

/* gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-1054)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType (-1052)

#endif

/* gco__Date_USCOREPropertyType * has binding name 'PointerTogco__Date_USCOREPropertyType' for type 'gco:Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREPropertyType (-1050)

#endif

/* gmd__CI_USCOREDate_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType (-1048)

#endif

/* gmd__DQ_USCOREResult_USCOREPropertyType * has binding name 'PointerTogmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType (-1046)

#endif

/* gco__DateTime_USCOREPropertyType * has binding name 'PointerTogco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__DateTime_USCOREPropertyType (-1044)

#endif

/* gmd__CI_USCORECitation_USCOREPropertyType * has binding name 'PointerTogmd__CI_USCORECitation_USCOREPropertyType' for type 'gmd:CI_Citation_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType (-1043)

#endif

/* gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * has binding name 'PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType' for type 'gmd:DQ_EvaluationMethodTypeCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType (-1042)

#endif

/* gmd__MD_USCOREIdentifier_USCOREPropertyType * has binding name 'PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType (-1041)

#endif

/* gsr__SC_USCORECRS_USCOREPropertyType * has binding name 'PointerTogsr__SC_USCORECRS_USCOREPropertyType' for type 'gsr:SC_CRS_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType (-1039)

#endif

/* gco__Real_USCOREPropertyType * has binding name 'PointerTogco__Real_USCOREPropertyType' for type 'gco:Real_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Real_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Real_USCOREPropertyType (-1038)

#endif

/* gts__TM_USCOREPrimitive_USCOREPropertyType * has binding name 'PointerTogts__TM_USCOREPrimitive_USCOREPropertyType' for type 'gts:TM_Primitive_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType (-1037)

#endif

/* gco__Boolean_USCOREPropertyType * has binding name 'PointerTogco__Boolean_USCOREPropertyType' for type 'gco:Boolean_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Boolean_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Boolean_USCOREPropertyType (-1036)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType (-1034)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType (-1032)

#endif

/* gmd__EX_USCOREGeographicExtent_USCOREPropertyType * has binding name 'PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType (-1030)

#endif

/* gco__CharacterString_USCOREPropertyType * has binding name 'PointerTogco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CharacterString_USCOREPropertyType (-1029)

#endif

/* enum _gml__RelatedTimeType_relativePosition * has binding name 'PointerTo_gml__RelatedTimeType_relativePosition' for type 'gml:RelatedTimeType-relativePosition' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__RelatedTimeType_relativePosition
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__RelatedTimeType_relativePosition (-1028)

#endif

/* gml__ProjectedCRSType * has binding name 'PointerTogml__ProjectedCRSType' for type 'gml:ProjectedCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ProjectedCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ProjectedCRSType (-1026)

#endif

/* gml__VerticalCRSType * has binding name 'PointerTogml__VerticalCRSType' for type 'gml:VerticalCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCRSType (-1025)

#endif

/* resqml20__IntervalGridCells * has binding name 'PointerToresqml20__IntervalGridCells' for type 'resqml20:IntervalGridCells' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalGridCells
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntervalGridCells (-1024)

#endif

/* resqml20__PointGeometry * has binding name 'PointerToresqml20__PointGeometry' for type 'resqml20:PointGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PointGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__PointGeometry (-1023)

#endif

/* resqml20__ContactPatch * has binding name 'PointerToresqml20__ContactPatch' for type 'resqml20:ContactPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactPatch (-1021)

#endif

/* enum resqml20__ContactMode * has binding name 'PointerToresqml20__ContactMode' for type 'resqml20:ContactMode' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactMode
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactMode (-1019)

#endif

/* enum resqml20__ContactSide * has binding name 'PointerToresqml20__ContactSide' for type 'resqml20:ContactSide' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactSide
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactSide (-1018)

#endif

/* resqml20__ContactElementReference * has binding name 'PointerToresqml20__ContactElementReference' for type 'resqml20:ContactElementReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactElementReference
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ContactElementReference (-1017)

#endif

/* resqml20__IjkGridGeometry * has binding name 'PointerToresqml20__IjkGridGeometry' for type 'resqml20:IjkGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjkGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjkGridGeometry (-1016)

#endif

/* resqml20__UnstructuredGridGeometry * has binding name 'PointerToresqml20__UnstructuredGridGeometry' for type 'resqml20:UnstructuredGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredGridGeometry (-1015)

#endif

/* resqml20__ColumnSubnodePatch * has binding name 'PointerToresqml20__ColumnSubnodePatch' for type 'resqml20:ColumnSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnSubnodePatch (-1013)

#endif

/* resqml20__TruncationCellPatch * has binding name 'PointerToresqml20__TruncationCellPatch' for type 'resqml20:TruncationCellPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TruncationCellPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TruncationCellPatch (-1012)

#endif

/* resqml20__UnstructuredColumnLayerGridGeometry * has binding name 'PointerToresqml20__UnstructuredColumnLayerGridGeometry' for type 'resqml20:UnstructuredColumnLayerGridGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnLayerGridGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnLayerGridGeometry (-1011)

#endif

/* resqml20__NodesPerCell * has binding name 'PointerToresqml20__NodesPerCell' for type 'resqml20:NodesPerCell' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodesPerCell
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__NodesPerCell (-1010)

#endif

/* resqml20__Edges * has binding name 'PointerToresqml20__Edges' for type 'resqml20:Edges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Edges
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Edges (-1009)

#endif

/* resqml20__Regrid * has binding name 'PointerToresqml20__Regrid' for type 'resqml20:Regrid' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Regrid
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Regrid (-1008)

#endif

/* resqml20__AbstractParametricLineArray * has binding name 'PointerToresqml20__AbstractParametricLineArray' for type 'resqml20:AbstractParametricLineArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParametricLineArray (-1007)

#endif

/* resqml20__ParametricLineIntersections * has binding name 'PointerToresqml20__ParametricLineIntersections' for type 'resqml20:ParametricLineIntersections' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParametricLineIntersections
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ParametricLineIntersections (-1006)

#endif

/* resqml20__AbstractSeismicCoordinates * has binding name 'PointerToresqml20__AbstractSeismicCoordinates' for type 'resqml20:AbstractSeismicCoordinates' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractSeismicCoordinates
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractSeismicCoordinates (-1005)

#endif

/* resqml20__Point3dOffset * has binding name 'PointerToresqml20__Point3dOffset' for type 'resqml20:Point3dOffset' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3dOffset
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3dOffset (-1003)

#endif

/* resqml20__IntegerLatticeArray * has binding name 'PointerToresqml20__IntegerLatticeArray' for type 'resqml20:IntegerLatticeArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerLatticeArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IntegerLatticeArray (-1002)

#endif

/* eml20__Hdf5Dataset * has binding name 'PointerToeml20__Hdf5Dataset' for type 'eml20:Hdf5Dataset' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Hdf5Dataset
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Hdf5Dataset (-1001)

#endif

/* ptm__equivalentPropertyType * has binding name 'PointerToptm__equivalentPropertyType' for type 'ptm:equivalentPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType (-999)

#endif

/* enum resqml20__ResqmlPropertyKind * has binding name 'PointerToresqml20__ResqmlPropertyKind' for type 'resqml20:ResqmlPropertyKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlPropertyKind
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlPropertyKind (-998)

#endif

/* bool * has binding name 'PointerTobool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool (-997)

#endif

/* ptm__standardEnergisticsPropertyType * has binding name 'PointerToptm__standardEnergisticsPropertyType' for type 'ptm:standardEnergisticsPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType (-995)

#endif

/* struct __gsr__SC_USCORECRS_USCOREPropertyType_sequence * has binding name 'PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence' for type '-gsr:SC_CRS_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence (-994)

#endif

/* struct __gco__DateTime_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__DateTime_USCOREPropertyType_sequence' for type '-gco:DateTime_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence (-991)

#endif

/* std::string * has binding name 'PointerTogco__Date_USCOREType' for type 'gco:Date_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREType (-989)

#endif

/* struct __gco__Real_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__Real_USCOREPropertyType_sequence' for type '-gco:Real_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Real_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Real_USCOREPropertyType_sequence (-987)

#endif

/* struct __gco__Boolean_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__Boolean_USCOREPropertyType_sequence' for type '-gco:Boolean_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence (-985)

#endif

/* struct __gco__CharacterString_USCOREPropertyType_sequence * has binding name 'PointerTo__gco__CharacterString_USCOREPropertyType_sequence' for type '-gco:CharacterString_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence (-983)

#endif

/* std::string * has binding name 'PointerToxsd__ID' for type 'xsd:ID' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__ID
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__ID (-980)

#endif

/* struct __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * has binding name 'PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence' for type '-gts:TM_Primitive_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence (-979)

#endif

/* struct __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence' for type '-gmd:DQ_Result_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence (-976)

#endif

/* struct __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence' for type '-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence (-973)

#endif

/* struct __gmd__CI_USCORESeries_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence' for type '-gmd:CI_Series_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence (-971)

#endif

/* gmd__CI_USCORESeries_USCOREType * has binding name 'PointerTogmd__CI_USCORESeries_USCOREType' for type 'gmd:CI_Series_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREType (-970)

#endif

/* struct __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence' for type '-gmd:CI_PresentationFormCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence (-968)

#endif

/* struct __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence' for type '-gmd:CI_RoleCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence (-966)

#endif

/* struct __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence' for type '-gmd:CI_OnLineFunctionCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence (-964)

#endif

/* struct __gmd__URL_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__URL_USCOREPropertyType_sequence' for type '-gmd:URL_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__URL_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__URL_USCOREPropertyType_sequence (-962)

#endif

/* struct __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence' for type '-gmd:CI_OnlineResource_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence (-960)

#endif

/* gmd__CI_USCOREOnlineResource_USCOREType * has binding name 'PointerTogmd__CI_USCOREOnlineResource_USCOREType' for type 'gmd:CI_OnlineResource_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType (-959)

#endif

/* struct __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence' for type '-gmd:CI_Address_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence (-957)

#endif

/* gmd__CI_USCOREAddress_USCOREType * has binding name 'PointerTogmd__CI_USCOREAddress_USCOREType' for type 'gmd:CI_Address_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREType (-956)

#endif

/* struct __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence' for type '-gmd:CI_Telephone_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence (-954)

#endif

/* gmd__CI_USCORETelephone_USCOREType * has binding name 'PointerTogmd__CI_USCORETelephone_USCOREType' for type 'gmd:CI_Telephone_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREType (-953)

#endif

/* struct __gmd__CI_USCOREContact_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence' for type '-gmd:CI_Contact_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence (-951)

#endif

/* gmd__CI_USCOREContact_USCOREType * has binding name 'PointerTogmd__CI_USCOREContact_USCOREType' for type 'gmd:CI_Contact_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREType (-950)

#endif

/* struct __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence' for type '-gmd:CI_ResponsibleParty_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence (-948)

#endif

/* gmd__CI_USCOREResponsibleParty_USCOREType * has binding name 'PointerTogmd__CI_USCOREResponsibleParty_USCOREType' for type 'gmd:CI_ResponsibleParty_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType (-947)

#endif

/* struct __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence' for type '-gmd:CI_DateTypeCode_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence (-945)

#endif

/* gco__CodeListValue_USCOREType * has binding name 'PointerTogco__CodeListValue_USCOREType' for type 'gco:CodeListValue_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CodeListValue_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CodeListValue_USCOREType (-944)

#endif

/* struct __gmd__CI_USCOREDate_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence' for type '-gmd:CI_Date_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence (-942)

#endif

/* gmd__CI_USCOREDate_USCOREType * has binding name 'PointerTogmd__CI_USCOREDate_USCOREType' for type 'gmd:CI_Date_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREType (-941)

#endif

/* struct __gmd__CI_USCORECitation_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence' for type '-gmd:CI_Citation_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence (-939)

#endif

/* gmd__CI_USCORECitation_USCOREType * has binding name 'PointerTogmd__CI_USCORECitation_USCOREType' for type 'gmd:CI_Citation_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREType (-938)

#endif

/* struct __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence' for type '-gmd:MD_Identifier_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence (-936)

#endif

/* gmd__MD_USCOREIdentifier_USCOREType * has binding name 'PointerTogmd__MD_USCOREIdentifier_USCOREType' for type 'gmd:MD_Identifier_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREType (-935)

#endif

/* struct __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence' for type '-gmd:EX_VerticalExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence (-933)

#endif

/* gmd__EX_USCOREVerticalExtent_USCOREType * has binding name 'PointerTogmd__EX_USCOREVerticalExtent_USCOREType' for type 'gmd:EX_VerticalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType (-932)

#endif

/* struct __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence' for type '-gmd:EX_TemporalExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence (-930)

#endif

/* gmd__EX_USCORETemporalExtent_USCOREType * has binding name 'PointerTogmd__EX_USCORETemporalExtent_USCOREType' for type 'gmd:EX_TemporalExtent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType (-929)

#endif

/* struct __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * has binding name 'PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence' for type '-gmd:EX_GeographicExtent_PropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence (-927)

#endif

/* struct __gml__coordinateOperationAccuracy_sequence * has binding name 'PointerTo__gml__coordinateOperationAccuracy_sequence' for type '-gml:coordinateOperationAccuracy-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__coordinateOperationAccuracy_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__coordinateOperationAccuracy_sequence (-924)

#endif

/* gml__LengthType * has binding name 'PointerTogml__LengthType' for type 'gml:LengthType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__LengthType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__LengthType (-921)

#endif

/* gml__MeasureType * has binding name 'PointerTogml__MeasureType' for type 'gml:MeasureType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__MeasureType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__MeasureType (-920)

#endif

/* _gml__SecondDefiningParameter * has binding name 'PointerTo_gml__SecondDefiningParameter' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__SecondDefiningParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__SecondDefiningParameter (-918)

#endif

/* struct __gml__domainOfValidity_sequence * has binding name 'PointerTo__gml__domainOfValidity_sequence' for type '-gml:domainOfValidity-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__domainOfValidity_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__domainOfValidity_sequence (-917)

#endif

/* gmd__EX_USCOREExtent_USCOREType * has binding name 'PointerTogmd__EX_USCOREExtent_USCOREType' for type 'gmd:EX_Extent_Type' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREExtent_USCOREType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREExtent_USCOREType (-916)

#endif

/* struct __gml__VerticalDatumPropertyType_sequence * has binding name 'PointerTo__gml__VerticalDatumPropertyType_sequence' for type '-gml:VerticalDatumPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalDatumPropertyType_sequence (-914)

#endif

/* gml__VerticalDatumType * has binding name 'PointerTogml__VerticalDatumType' for type 'gml:VerticalDatumType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumType (-913)

#endif

/* struct __gml__VerticalCSPropertyType_sequence * has binding name 'PointerTo__gml__VerticalCSPropertyType_sequence' for type '-gml:VerticalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalCSPropertyType_sequence (-911)

#endif

/* gml__VerticalCSType * has binding name 'PointerTogml__VerticalCSType' for type 'gml:VerticalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSType (-910)

#endif

/* struct __gml__GeodeticCRSPropertyType_sequence * has binding name 'PointerTo__gml__GeodeticCRSPropertyType_sequence' for type '-gml:GeodeticCRSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticCRSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticCRSPropertyType_sequence (-908)

#endif

/* gml__GeodeticCRSType * has binding name 'PointerTogml__GeodeticCRSType' for type 'gml:GeodeticCRSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSType (-907)

#endif

/* struct __gml__CRSPropertyType_sequence * has binding name 'PointerTo__gml__CRSPropertyType_sequence' for type '-gml:CRSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CRSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CRSPropertyType_sequence (-905)

#endif

/* struct __gml__GeneralConversionPropertyType_sequence * has binding name 'PointerTo__gml__GeneralConversionPropertyType_sequence' for type '-gml:GeneralConversionPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeneralConversionPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeneralConversionPropertyType_sequence (-902)

#endif

/* struct __gml__EllipsoidPropertyType_sequence * has binding name 'PointerTo__gml__EllipsoidPropertyType_sequence' for type '-gml:EllipsoidPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidPropertyType_sequence (-899)

#endif

/* gml__EllipsoidType * has binding name 'PointerTogml__EllipsoidType' for type 'gml:EllipsoidType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidType (-898)

#endif

/* struct __gml__PrimeMeridianPropertyType_sequence * has binding name 'PointerTo__gml__PrimeMeridianPropertyType_sequence' for type '-gml:PrimeMeridianPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__PrimeMeridianPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__PrimeMeridianPropertyType_sequence (-896)

#endif

/* gml__PrimeMeridianType * has binding name 'PointerTogml__PrimeMeridianType' for type 'gml:PrimeMeridianType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianType (-895)

#endif

/* struct __gml__GeodeticDatumPropertyType_sequence * has binding name 'PointerTo__gml__GeodeticDatumPropertyType_sequence' for type '-gml:GeodeticDatumPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticDatumPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticDatumPropertyType_sequence (-893)

#endif

/* gml__GeodeticDatumType * has binding name 'PointerTogml__GeodeticDatumType' for type 'gml:GeodeticDatumType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumType (-892)

#endif

/* struct __gml__SphericalCSPropertyType_sequence * has binding name 'PointerTo__gml__SphericalCSPropertyType_sequence' for type '-gml:SphericalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__SphericalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__SphericalCSPropertyType_sequence (-890)

#endif

/* gml__SphericalCSType * has binding name 'PointerTogml__SphericalCSType' for type 'gml:SphericalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSType (-889)

#endif

/* struct __gml__CartesianCSPropertyType_sequence * has binding name 'PointerTo__gml__CartesianCSPropertyType_sequence' for type '-gml:CartesianCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CartesianCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CartesianCSPropertyType_sequence (-887)

#endif

/* gml__CartesianCSType * has binding name 'PointerTogml__CartesianCSType' for type 'gml:CartesianCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSType (-886)

#endif

/* struct __gml__CoordinateSystemAxisPropertyType_sequence * has binding name 'PointerTo__gml__CoordinateSystemAxisPropertyType_sequence' for type '-gml:CoordinateSystemAxisPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence (-884)

#endif

/* gml__CoordinateSystemAxisType * has binding name 'PointerTogml__CoordinateSystemAxisType' for type 'gml:CoordinateSystemAxisType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisType (-883)

#endif

/* struct __gml__EllipsoidalCSPropertyType_sequence * has binding name 'PointerTo__gml__EllipsoidalCSPropertyType_sequence' for type '-gml:EllipsoidalCSPropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence (-881)

#endif

/* gml__EllipsoidalCSType * has binding name 'PointerTogml__EllipsoidalCSType' for type 'gml:EllipsoidalCSType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSType (-880)

#endif

/* struct __gml__TimePrimitivePropertyType_sequence * has binding name 'PointerTo__gml__TimePrimitivePropertyType_sequence' for type '-gml:TimePrimitivePropertyType-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__TimePrimitivePropertyType_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__TimePrimitivePropertyType_sequence (-878)

#endif

/* enum _xlink__actuate * has binding name 'PointerTo_xlink__actuate' for type 'xlink:actuate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__actuate
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__actuate (-875)

#endif

/* enum _xlink__show * has binding name 'PointerTo_xlink__show' for type 'xlink:show' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__show
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__show (-874)

#endif

/* std::string * has binding name 'PointerToxsd__anyURI' for type 'xsd:anyURI' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__anyURI
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__anyURI (-873)

#endif

/* std::string * has binding name 'PointerTogml__NilReasonType' for type 'gml:NilReasonType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__NilReasonType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__NilReasonType (-872)

#endif

/* gml__CodeType * has binding name 'PointerTogml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeType (-870)

#endif

/* gml__CodeWithAuthorityType * has binding name 'PointerTogml__CodeWithAuthorityType' for type 'gml:CodeWithAuthorityType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeWithAuthorityType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeWithAuthorityType (-869)

#endif

/* gml__ReferenceType * has binding name 'PointerTogml__ReferenceType' for type 'gml:ReferenceType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ReferenceType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ReferenceType (-868)

#endif

/* gml__StringOrRefType * has binding name 'PointerTogml__StringOrRefType' for type 'gml:StringOrRefType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__StringOrRefType
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__StringOrRefType (-867)

#endif

/* std::string * has binding name 'PointerToeml20__DescriptionString' for type 'eml20:DescriptionString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DescriptionString
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DescriptionString (-866)

#endif

/* eml20__CustomData * has binding name 'PointerToeml20__CustomData' for type 'eml20:CustomData' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CustomData
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CustomData (-865)

#endif

/* eml20__ObjectAlias * has binding name 'PointerToeml20__ObjectAlias' for type 'eml20:ObjectAlias' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__ObjectAlias
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__ObjectAlias (-863)

#endif

/* eml20__Citation * has binding name 'PointerToeml20__Citation' for type 'eml20:Citation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Citation
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__Citation (-862)

#endif

/* std::string * has binding name 'PointerToeml20__CommentString' for type 'eml20:CommentString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CommentString
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__CommentString (-861)

#endif

/* struct tm * has binding name 'PointerToxsd__dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__dateTime
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__dateTime (-860)

#endif

/* std::string * has binding name 'PointerToeml20__NameString' for type 'eml20:NameString' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__NameString
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__NameString (-859)

#endif

/* resqml20__AbstractParameterKey * has binding name 'PointerToresqml20__AbstractParameterKey' for type 'resqml20:AbstractParameterKey' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractParameterKey (-856)

#endif

/* resqml20__AbstractActivityParameter * has binding name 'PointerToresqml20__AbstractActivityParameter' for type 'resqml20:AbstractActivityParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractActivityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractActivityParameter (-854)

#endif

/* std::string * has binding name 'PointerTostd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string (-853)

#endif

/* resqml20__OrientedMacroFace * has binding name 'PointerToresqml20__OrientedMacroFace' for type 'resqml20:OrientedMacroFace' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OrientedMacroFace
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OrientedMacroFace (-849)

#endif

/* resqml20__VolumeShell * has binding name 'PointerToresqml20__VolumeShell' for type 'resqml20:VolumeShell' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeShell
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VolumeShell (-847)

#endif

/* LONG64 * has binding name 'PointerToLONG64' for type 'xsd:long' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64 (-846)

#endif

/* resqml20__TimeInterval * has binding name 'PointerToresqml20__TimeInterval' for type 'resqml20:TimeInterval' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeInterval
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeInterval (-844)

#endif

/* resqml20__CellOverlap * has binding name 'PointerToresqml20__CellOverlap' for type 'resqml20:CellOverlap' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellOverlap
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__CellOverlap (-842)

#endif

/* struct __resqml20__OverlapVolume_sequence * has binding name 'PointerTo__resqml20__OverlapVolume_sequence' for type '-resqml20:OverlapVolume-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__OverlapVolume_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__OverlapVolume_sequence (-841)

#endif

/* struct __resqml20__CellOverlap_sequence * has binding name 'PointerTo__resqml20__CellOverlap_sequence' for type '-resqml20:CellOverlap-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__CellOverlap_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__CellOverlap_sequence (-839)

#endif

/* resqml20__OverlapVolume * has binding name 'PointerToresqml20__OverlapVolume' for type 'resqml20:OverlapVolume' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OverlapVolume
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__OverlapVolume (-838)

#endif

/* resqml20__Intervals * has binding name 'PointerToresqml20__Intervals' for type 'resqml20:Intervals' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Intervals
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Intervals (-835)

#endif

/* struct __resqml20__KGaps_sequence * has binding name 'PointerTo__resqml20__KGaps_sequence' for type '-resqml20:KGaps-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__KGaps_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__KGaps_sequence (-834)

#endif

/* resqml20__AbstractBooleanArray * has binding name 'PointerToresqml20__AbstractBooleanArray' for type 'resqml20:AbstractBooleanArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractBooleanArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractBooleanArray (-833)

#endif

/* resqml20__GpGridUnstructuredColumnLayerGridPatch * has binding name 'PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch' for type 'resqml20:GpGridUnstructuredColumnLayerGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridUnstructuredColumnLayerGridPatch (-830)

#endif

/* resqml20__GpGridIjkGridPatch * has binding name 'PointerToresqml20__GpGridIjkGridPatch' for type 'resqml20:GpGridIjkGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridIjkGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__GpGridIjkGridPatch (-828)

#endif

/* resqml20__KGaps * has binding name 'PointerToresqml20__KGaps' for type 'resqml20:KGaps' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__KGaps
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__KGaps (-827)

#endif

/* struct __resqml20__IjGaps_sequence * has binding name 'PointerTo__resqml20__IjGaps_sequence' for type '-resqml20:IjGaps-sequence' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__IjGaps_sequence
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml20__IjGaps_sequence (-826)

#endif

/* resqml20__ResqmlJaggedArray * has binding name 'PointerToresqml20__ResqmlJaggedArray' for type 'resqml20:ResqmlJaggedArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlJaggedArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ResqmlJaggedArray (-825)

#endif

/* resqml20__UniformSubnodePatch * has binding name 'PointerToresqml20__UniformSubnodePatch' for type 'resqml20:UniformSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UniformSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UniformSubnodePatch (-822)

#endif

/* resqml20__VariableSubnodePatch * has binding name 'PointerToresqml20__VariableSubnodePatch' for type 'resqml20:VariableSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VariableSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__VariableSubnodePatch (-820)

#endif

/* resqml20__ColumnLayerSubnodeTopology * has binding name 'PointerToresqml20__ColumnLayerSubnodeTopology' for type 'resqml20:ColumnLayerSubnodeTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSubnodeTopology (-819)

#endif

/* resqml20__UnstructuredSubnodeTopology * has binding name 'PointerToresqml20__UnstructuredSubnodeTopology' for type 'resqml20:UnstructuredSubnodeTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredSubnodeTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredSubnodeTopology (-818)

#endif

/* resqml20__IjSplitColumnEdges * has binding name 'PointerToresqml20__IjSplitColumnEdges' for type 'resqml20:IjSplitColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__IjSplitColumnEdges (-817)

#endif

/* resqml20__SplitFaces * has binding name 'PointerToresqml20__SplitFaces' for type 'resqml20:SplitFaces' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitFaces
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitFaces (-816)

#endif

/* resqml20__UnstructuredColumnEdges * has binding name 'PointerToresqml20__UnstructuredColumnEdges' for type 'resqml20:UnstructuredColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__UnstructuredColumnEdges (-815)

#endif

/* resqml20__ColumnLayerSplitColumnEdges * has binding name 'PointerToresqml20__ColumnLayerSplitColumnEdges' for type 'resqml20:ColumnLayerSplitColumnEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitColumnEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ColumnLayerSplitColumnEdges (-814)

#endif

/* resqml20__SplitNodePatch * has binding name 'PointerToresqml20__SplitNodePatch' for type 'resqml20:SplitNodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitNodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitNodePatch (-813)

#endif

/* resqml20__SplitEdges * has binding name 'PointerToresqml20__SplitEdges' for type 'resqml20:SplitEdges' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitEdges
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__SplitEdges (-812)

#endif

/* resqml20__AbstractGeometry * has binding name 'PointerToresqml20__AbstractGeometry' for type 'resqml20:AbstractGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractGeometry (-811)

#endif

/* resqml20__AdditionalGridTopology * has binding name 'PointerToresqml20__AdditionalGridTopology' for type 'resqml20:AdditionalGridTopology' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridTopology
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AdditionalGridTopology (-810)

#endif

/* resqml20__ElementIdentity * has binding name 'PointerToresqml20__ElementIdentity' for type 'resqml20:ElementIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__ElementIdentity (-808)

#endif

/* resqml20__AbstractIntegerArray * has binding name 'PointerToresqml20__AbstractIntegerArray' for type 'resqml20:AbstractIntegerArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractIntegerArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractIntegerArray (-807)

#endif

/* eml20__DataObjectReference * has binding name 'PointerToeml20__DataObjectReference' for type 'eml20:DataObjectReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DataObjectReference
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml20__DataObjectReference (-805)

#endif

/* resqml20__TimeIndex * has binding name 'PointerToresqml20__TimeIndex' for type 'resqml20:TimeIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__TimeIndex (-804)

#endif

/* resqml20__AbstractDoubleArray * has binding name 'PointerToresqml20__AbstractDoubleArray' for type 'resqml20:AbstractDoubleArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractDoubleArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractDoubleArray (-803)

#endif

/* resqml20__Point3d * has binding name 'PointerToresqml20__Point3d' for type 'resqml20:Point3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3d
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__Point3d (-802)

#endif

/* resqml20__AbstractValueArray * has binding name 'PointerToresqml20__AbstractValueArray' for type 'resqml20:AbstractValueArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractValueArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractValueArray (-801)

#endif

/* resqml20__AbstractPoint3dArray * has binding name 'PointerToresqml20__AbstractPoint3dArray' for type 'resqml20:AbstractPoint3dArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPoint3dArray
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml20__AbstractPoint3dArray (-800)

#endif

/* ULONG64 * has binding name 'PointerToxsd__nonNegativeInteger' for type 'xsd:nonNegativeInteger' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger (-799)

#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__QName
#define SOAP_TYPE_gsoap_resqml2_0_1__QName (-6)

#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1__XML
#define SOAP_TYPE_gsoap_resqml2_0_1__XML (-5)

#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_string
#define SOAP_TYPE_gsoap_resqml2_0_1_string (-4)

#endif

/* std::vector<resqml20__SealedContactRepresentationPart *>  has binding name 'std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart' for type 'resqml20:SealedContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SealedContactRepresentationPart (-1196)

#endif

/* std::vector<resqml20__AbstractContactRepresentationPart *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart' for type 'resqml20:AbstractContactRepresentationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactRepresentationPart (-1194)

#endif

/* std::vector<resqml20__GeologicUnitInterpretationIndex *>  has binding name 'std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex' for type 'resqml20:GeologicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GeologicUnitInterpretationIndex (-1192)

#endif

/* std::vector<resqml20__StratigraphicUnitInterpretationIndex *>  has binding name 'std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex' for type 'resqml20:StratigraphicUnitInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StratigraphicUnitInterpretationIndex (-1190)

#endif

/* std::vector<resqml20__Grid2dPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__Grid2dPatch' for type 'resqml20:Grid2dPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Grid2dPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Grid2dPatch (-1177)

#endif

/* std::vector<resqml20__VolumeRegion *>  has binding name 'std__vectorTemplateOfPointerToresqml20__VolumeRegion' for type 'resqml20:VolumeRegion' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeRegion
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeRegion (-1175)

#endif

/* std::vector<resqml20__ContactIdentity *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ContactIdentity' for type 'resqml20:ContactIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactIdentity (-1173)

#endif

/* std::vector<resqml20__AbstractPlaneGeometry *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry' for type 'resqml20:AbstractPlaneGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractPlaneGeometry (-1171)

#endif

/* std::vector<resqml20__TrianglePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__TrianglePatch' for type 'resqml20:TrianglePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__TrianglePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__TrianglePatch (-1169)

#endif

/* std::vector<resqml20__WellboreMarker *>  has binding name 'std__vectorTemplateOfPointerToresqml20__WellboreMarker' for type 'resqml20:WellboreMarker' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__WellboreMarker
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__WellboreMarker (-1167)

#endif

/* std::vector<resqml20__FaultThrow *>  has binding name 'std__vectorTemplateOfPointerToresqml20__FaultThrow' for type 'resqml20:FaultThrow' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__FaultThrow
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__FaultThrow (-1162)

#endif

/* std::vector<resqml20__HorizonInterpretationIndex *>  has binding name 'std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex' for type 'resqml20:HorizonInterpretationIndex' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__HorizonInterpretationIndex (-1159)

#endif

/* std::vector<enum resqml20__BoundaryRelation>  has binding name 'std__vectorTemplateOfresqml20__BoundaryRelation' for type 'resqml20:BoundaryRelation' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__BoundaryRelation
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__BoundaryRelation (-1157)

#endif

/* std::vector<resqml20__GpGridUnstructuredGridPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch' for type 'resqml20:GpGridUnstructuredGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredGridPatch (-1154)

#endif

/* std::vector<resqml20__GpGridColumnLayerGrid *>  has binding name 'std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid' for type 'resqml20:GpGridColumnLayerGrid' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridColumnLayerGrid (-1152)

#endif

/* std::vector<LONG64>  has binding name 'std__vectorTemplateOfxsd__integer' for type 'xsd:integer' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer (-1150)

#endif

/* std::vector<double>  has binding name 'std__vectorTemplateOfdouble' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble (-1149)

#endif

/* std::vector<_gml__coordinateOperationAccuracy *>  has binding name 'std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy (-1147)

#endif

/* std::vector<gml__CoordinateSystemAxisPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType' for type 'gml:CoordinateSystemAxisPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType (-1140)

#endif

/* std::vector<_gml__domainOfValidity *>  has binding name 'std__vectorTemplateOfPointerTo_gml__domainOfValidity' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity (-1138)

#endif

/* std::vector<resqml20__PatchBoundaries *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PatchBoundaries' for type 'resqml20:PatchBoundaries' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchBoundaries
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchBoundaries (-1134)

#endif

/* std::vector<resqml20__PolylineSetPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PolylineSetPatch' for type 'resqml20:PolylineSetPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PolylineSetPatch (-1132)

#endif

/* std::vector<resqml20__NodePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__NodePatch' for type 'resqml20:NodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NodePatch (-1129)

#endif

/* std::vector<resqml20__AbstractContactInterpretationPart *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart' for type 'resqml20:AbstractContactInterpretationPart' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractContactInterpretationPart (-1121)

#endif

/* std::vector<resqml20__SubRepresentationPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch' for type 'resqml20:SubRepresentationPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__SubRepresentationPatch (-1114)

#endif

/* std::vector<resqml20__PatchOfGeometry *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PatchOfGeometry' for type 'resqml20:PatchOfGeometry' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfGeometry (-1112)

#endif

/* std::vector<resqml20__PropertyKindFacet *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PropertyKindFacet' for type 'resqml20:PropertyKindFacet' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PropertyKindFacet (-1110)

#endif

/* std::vector<resqml20__PatchOfValues *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PatchOfValues' for type 'resqml20:PatchOfValues' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfValues
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfValues (-1108)

#endif

/* std::vector<resqml20__StringLookup *>  has binding name 'std__vectorTemplateOfPointerToresqml20__StringLookup' for type 'resqml20:StringLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StringLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__StringLookup (-1106)

#endif

/* std::vector<resqml20__PatchOfPoints *>  has binding name 'std__vectorTemplateOfPointerToresqml20__PatchOfPoints' for type 'resqml20:PatchOfPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__PatchOfPoints (-1104)

#endif

/* std::vector<resqml20__DoubleLookup *>  has binding name 'std__vectorTemplateOfPointerToresqml20__DoubleLookup' for type 'resqml20:DoubleLookup' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleLookup
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleLookup (-1102)

#endif

/* std::vector<resqml20__ParameterTemplate *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ParameterTemplate' for type 'resqml20:ParameterTemplate' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ParameterTemplate
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ParameterTemplate (-1100)

#endif

/* std::vector<resqml20__Timestamp *>  has binding name 'std__vectorTemplateOfPointerToresqml20__Timestamp' for type 'resqml20:Timestamp' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Timestamp
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Timestamp (-1094)

#endif

/* std::vector<resqml20__ChronostratigraphicRank *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank' for type 'resqml20:ChronostratigraphicRank' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ChronostratigraphicRank (-1091)

#endif

/* std::vector<resqml20__RepresentationIdentity *>  has binding name 'std__vectorTemplateOfPointerToresqml20__RepresentationIdentity' for type 'resqml20:RepresentationIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__RepresentationIdentity (-1086)

#endif

/* std::vector<gml__RelatedTimeType *>  has binding name 'std__vectorTemplateOfPointerTogml__RelatedTimeType' for type 'gml:RelatedTimeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__RelatedTimeType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__RelatedTimeType (-1083)

#endif

/* std::vector<resqml20__EdgePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__EdgePatch' for type 'resqml20:EdgePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__EdgePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__EdgePatch (-1078)

#endif

/* std::vector<resqml20__NameValuePair *>  has binding name 'std__vectorTemplateOfPointerToresqml20__NameValuePair' for type 'resqml20:NameValuePair' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NameValuePair
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__NameValuePair (-1076)

#endif

/* std::vector<resqml20__AdditionalGridPoints *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints' for type 'resqml20:AdditionalGridPoints' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AdditionalGridPoints (-1074)

#endif

/* std::vector<resqml20__ElementIndices *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ElementIndices' for type 'resqml20:ElementIndices' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIndices
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIndices (-1072)

#endif

/* std::vector<resqml20__ThreePoint3d *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ThreePoint3d' for type 'resqml20:ThreePoint3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ThreePoint3d
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ThreePoint3d (-1070)

#endif

/* std::vector<resqml20__IntegerConstantArray *>  has binding name 'std__vectorTemplateOfPointerToresqml20__IntegerConstantArray' for type 'resqml20:IntegerConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__IntegerConstantArray (-1068)

#endif

/* std::vector<resqml20__DoubleConstantArray *>  has binding name 'std__vectorTemplateOfPointerToresqml20__DoubleConstantArray' for type 'resqml20:DoubleConstantArray' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__DoubleConstantArray (-1066)

#endif

/* std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType' for type 'gmd:CI_PresentationFormCode_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType (-1055)

#endif

/* std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType' for type 'gmd:CI_ResponsibleParty_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType (-1053)

#endif

/* std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType' for type 'gmd:MD_Identifier_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType (-1051)

#endif

/* std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType' for type 'gmd:CI_Date_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType (-1049)

#endif

/* std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType' for type 'gmd:DQ_Result_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType (-1047)

#endif

/* std::vector<gco__DateTime_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType' for type 'gco:DateTime_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType (-1045)

#endif

/* std::vector<gco__CharacterString_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType' for type 'gco:CharacterString_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType (-1040)

#endif

/* std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType' for type 'gmd:EX_VerticalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType (-1035)

#endif

/* std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType' for type 'gmd:EX_TemporalExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType (-1033)

#endif

/* std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  has binding name 'std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType' for type 'gmd:EX_GeographicExtent_PropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType (-1031)

#endif

/* std::vector<resqml20__ContactPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ContactPatch' for type 'resqml20:ContactPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ContactPatch (-1022)

#endif

/* std::vector<ULONG64>  has binding name 'std__vectorTemplateOfxsd__nonNegativeInteger' for type 'xsd:nonNegativeInteger' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger (-1020)

#endif

/* std::vector<resqml20__ColumnSubnodePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch' for type 'resqml20:ColumnSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ColumnSubnodePatch (-1014)

#endif

/* std::vector<resqml20__Point3dOffset *>  has binding name 'std__vectorTemplateOfPointerToresqml20__Point3dOffset' for type 'resqml20:Point3dOffset' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3dOffset
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3dOffset (-1004)

#endif

/* std::vector<ptm__equivalentPropertyType *>  has binding name 'std__vectorTemplateOfPointerToptm__equivalentPropertyType' for type 'ptm:equivalentPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType (-1000)

#endif

/* std::vector<ptm__standardEnergisticsPropertyType *>  has binding name 'std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType' for type 'ptm:standardEnergisticsPropertyType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType (-996)

#endif

/* std::vector<gml__CodeType *>  has binding name 'std__vectorTemplateOfPointerTogml__CodeType' for type 'gml:CodeType' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CodeType
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CodeType (-871)

#endif

/* std::vector<eml20__ObjectAlias *>  has binding name 'std__vectorTemplateOfPointerToeml20__ObjectAlias' for type 'eml20:ObjectAlias' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__ObjectAlias
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__ObjectAlias (-864)

#endif

/* std::vector<char *>  has binding name 'std__vectorTemplateOf_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML (-858)

#endif

/* std::vector<resqml20__AbstractParameterKey *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AbstractParameterKey' for type 'resqml20:AbstractParameterKey' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractParameterKey (-857)

#endif

/* std::vector<resqml20__AbstractActivityParameter *>  has binding name 'std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter' for type 'resqml20:AbstractActivityParameter' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__AbstractActivityParameter (-855)

#endif

/* std::vector<enum resqml20__ParameterKind>  has binding name 'std__vectorTemplateOfresqml20__ParameterKind' for type 'resqml20:ParameterKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ParameterKind
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ParameterKind (-852)

#endif

/* std::vector<std::string>  has binding name 'std__vectorTemplateOfstd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string (-851)

#endif

/* std::vector<resqml20__OrientedMacroFace *>  has binding name 'std__vectorTemplateOfPointerToresqml20__OrientedMacroFace' for type 'resqml20:OrientedMacroFace' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__OrientedMacroFace (-850)

#endif

/* std::vector<resqml20__VolumeShell *>  has binding name 'std__vectorTemplateOfPointerToresqml20__VolumeShell' for type 'resqml20:VolumeShell' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeShell
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VolumeShell (-848)

#endif

/* std::vector<enum resqml20__ThrowKind>  has binding name 'std__vectorTemplateOfresqml20__ThrowKind' for type 'resqml20:ThrowKind' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ThrowKind
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml20__ThrowKind (-843)

#endif

/* std::vector<eml20__DataObjectReference *>  has binding name 'std__vectorTemplateOfPointerToeml20__DataObjectReference' for type 'eml20:DataObjectReference' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__DataObjectReference
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml20__DataObjectReference (-836)

#endif

/* std::vector<resqml20__GpGridUnstructuredColumnLayerGridPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch' for type 'resqml20:GpGridUnstructuredColumnLayerGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridUnstructuredColumnLayerGridPatch (-831)

#endif

/* std::vector<resqml20__GpGridIjkGridPatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch' for type 'resqml20:GpGridIjkGridPatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__GpGridIjkGridPatch (-829)

#endif

/* std::vector<resqml20__UniformSubnodePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch' for type 'resqml20:UniformSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__UniformSubnodePatch (-823)

#endif

/* std::vector<resqml20__VariableSubnodePatch *>  has binding name 'std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch' for type 'resqml20:VariableSubnodePatch' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__VariableSubnodePatch (-821)

#endif

/* std::vector<resqml20__ElementIdentity *>  has binding name 'std__vectorTemplateOfPointerToresqml20__ElementIdentity' for type 'resqml20:ElementIdentity' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIdentity
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__ElementIdentity (-809)

#endif

/* std::vector<resqml20__Point3d *>  has binding name 'std__vectorTemplateOfPointerToresqml20__Point3d' for type 'resqml20:Point3d' */
#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3d
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml20__Point3d (-806)

#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace gsoap_resqml2_0_1


#endif

/* End of gsoap_resqml2_0_1Stub.h */
