/* gsoap_witsml1_4Stub.h
   Generated by gSOAP 2.8.122E for witsml1_4ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use and protected by law.
**  REDISTRIBUTION, RESALE OR ANY OTHER FORM OF SHARING IS STRICTLY PROHIBITED.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_witsml14	"http://www.witsml.org/schemas/1series"
#define SOAP_NAMESPACE_OF_abstract	"http://www.energistics.org/schemas/abstract"
#include <time.h>

#ifndef gsoap_witsml1_4Stub_H
#define gsoap_witsml1_4Stub_H
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 208122
# error "GSOAP VERSION 208122 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


namespace gsoap_witsml1_4 {

/******************************************************************************\
 *                                                                            *
 * Enumeration Types                                                          *
 *                                                                            *
\******************************************************************************/


/* witsml1_4ForGsoap.h:914 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PercentUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PercentUom (-168)

/* witsml14:PercentUom */
enum class witsml14__PercentUom {
	_x0025 = 0
};
#endif

/* witsml1_4ForGsoap.h:925 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasuredDepthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasuredDepthUom (-169)

/* witsml14:MeasuredDepthUom */
enum class witsml14__MeasuredDepthUom {
	m = 'm',
	ft = 'n',
	ftUS = 'o'
};
#endif

/* witsml1_4ForGsoap.h:950 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellVerticalCoordinateUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellVerticalCoordinateUom (-170)

/* witsml14:WellVerticalCoordinateUom */
enum class witsml14__WellVerticalCoordinateUom {
	m = 'm',
	ft = 'n',
	ftUS = 'o',
	ftBr_x002865_x0029 = 'p'
};
#endif

/* witsml1_4ForGsoap.h:976 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AccelerationLinearUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AccelerationLinearUom (-171)

/* witsml14:AccelerationLinearUom */
enum class witsml14__AccelerationLinearUom {
	m_x002fs2 = 0,
	cm_x002fs2 = 1,
	ft_x002fs2 = 2,
	Gal = 3,
	mgn = 4,
	gn = 5,
	mGal = 6
};
#endif

/* witsml1_4ForGsoap.h:989 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerLengthUom (-172)

/* witsml14:AnglePerLengthUom */
enum class witsml14__AnglePerLengthUom {
	rad_x002fm = 0,
	dega_x002f30ft = 1,
	dega_x002fft = 2,
	dega_x002f100ft = 3,
	dega_x002fm = 4,
	dega_x002f30m = 5,
	rad_x002fft = 6
};
#endif

/* witsml1_4ForGsoap.h:1002 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerTimeUom (-173)

/* witsml14:AnglePerTimeUom */
enum class witsml14__AnglePerTimeUom {
	rad_x002fs = 0,
	c_x002fs = 1,
	dega_x002fh = 2,
	dega_x002fmin = 3,
	dega_x002fs = 4,
	rev_x002fs = 5,
	rpm = 6
};
#endif

/* witsml1_4ForGsoap.h:1015 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaUom (-174)

/* witsml14:AreaUom */
enum class witsml14__AreaUom {
	b = 'b',
	m2 = 'c',
	acre = 'd',
	cm2 = 'e',
	ft2 = 'f',
	ha = 'g',
	in2 = 'h',
	km2 = 'i',
	mi2 = 'j',
	miUS2 = 'k',
	mm2 = 'l',
	um2 = 'm',
	yd2 = 'n'
};
#endif

/* witsml1_4ForGsoap.h:1034 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaPerAreaUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaPerAreaUom (-175)

/* witsml14:AreaPerAreaUom */
enum class witsml14__AreaPerAreaUom {
	Euc = 0,
	_x0025 = 1,
	in2_x002fft2 = 2,
	in2_x002fin2 = 3,
	m2_x002fm2 = 4,
	mm2_x002fmm2 = 5
};
#endif

/* witsml1_4ForGsoap.h:1046 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__CompressibilityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__CompressibilityUom (-176)

/* witsml14:CompressibilityUom */
enum class witsml14__CompressibilityUom {
	_1_x002fpsi = 0,
	_1_x002fupsi = 1,
	_1_x002fPa = 2,
	_1_x002fbar = 3,
	_1_x002fkPa = 4,
	_1_x002fpPa = 5
};
#endif

/* witsml1_4ForGsoap.h:1058 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DensityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DensityUom (-177)

/* witsml14:DensityUom */
enum class witsml14__DensityUom {
	kg_x002fm3 = 0,
	_10Mg_x002fm3 = 1,
	dAPI = 2,
	g_x002fcm3 = 3,
	g_x002fdm3 = 4,
	g_x002fgalUK = 5,
	g_x002fgalUS = 6,
	g_x002fL = 7,
	g_x002fm3 = 8,
	grain_x002fft3 = 9,
	grain_x002fgalUS = 10,
	grain_x002f100ft3 = 11,
	kg_x002fdm3 = 12,
	kg_x002fL = 13,
	Mg_x002fm3 = 14,
	lbm_x002f10bbl = 15,
	lbm_x002fbbl = 16,
	lbm_x002fft3 = 17,
	lbm_x002fgalUK = 18,
	lbm_x002f1000galUK = 19,
	lbm_x002fgalUS = 20,
	lbm_x002f1000galUS = 21,
	lbm_x002fin3 = 22,
	lbm_x002fMbbl = 23,
	mg_x002fdm3 = 24,
	mg_x002fgalUS = 25,
	mg_x002fL = 26,
	mg_x002fm3 = 27,
	ug_x002fcm3 = 28
};
#endif

/* witsml1_4ForGsoap.h:1093 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DimensionlessUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DimensionlessUom (-178)

/* witsml14:DimensionlessUom */
enum class witsml14__DimensionlessUom {
	Euc = 0,
	_x0025 = 1,
	cEuc = 2,
	mEuc = 3,
	nEuc = 4,
	uEuc = 5
};
#endif

/* witsml1_4ForGsoap.h:1105 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DynamicViscosityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DynamicViscosityUom (-179)

/* witsml14:DynamicViscosityUom */
enum class witsml14__DynamicViscosityUom {
	P = 'P',
	Pa_x002es = 'Q',
	cP = 'R',
	psi_x002es = 'S',
	dyne_x002es_x002fcm2 = 'T',
	kgf_x002es_x002fm2 = 'U',
	lbf_x002es_x002fft2 = 'V',
	lbf_x002es_x002fin2 = 'W',
	mPa_x002es = 'X',
	N_x002es_x002fm2 = 'Y'
};
#endif

/* witsml1_4ForGsoap.h:1121 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricCurrentUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricCurrentUom (-180)

/* witsml14:ElectricCurrentUom */
enum class witsml14__ElectricCurrentUom {
	A = 'A',
	MA = 'B',
	kA = 'C',
	mA = 'D',
	nA = 'E',
	pA = 'F',
	uA = 'G'
};
#endif

/* witsml1_4ForGsoap.h:1134 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricPotentialUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricPotentialUom (-181)

/* witsml14:ElectricPotentialUom */
enum class witsml14__ElectricPotentialUom {
	V = 'V',
	kV = 'W',
	mV = 'X',
	MV = 'Y',
	uV = 'Z'
};
#endif

/* witsml1_4ForGsoap.h:1145 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__EquivalentPerMassUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__EquivalentPerMassUom (-182)

/* witsml14:EquivalentPerMassUom */
enum class witsml14__EquivalentPerMassUom {
	eq_x002fkg = 0,
	meq_x002fg = 1,
	meq_x002f100g = 2
};
#endif

/* witsml1_4ForGsoap.h:1154 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForceUom (-183)

/* witsml14:ForceUom */
enum class witsml14__ForceUom {
	N = 'N',
	daN = 'O',
	dyne = 'P',
	gf = 'Q',
	kdyne = 'R',
	kgf = 'S',
	klbf = 'T',
	kN = 'U',
	lbf = 'V',
	Mgf = 'W',
	mN = 'X',
	MN = 'Y',
	ozf = 'Z',
	pdl = 91,
	tonfUK = 92,
	tonfUS = 93,
	uN = 94
};
#endif

/* witsml1_4ForGsoap.h:1177 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerLengthUom (-184)

/* witsml14:ForcePerLengthUom */
enum class witsml14__ForcePerLengthUom {
	N_x002f30m = 0,
	N_x002fm = 1,
	dyne_x002fcm = 2,
	kN_x002fm = 3,
	kgf_x002fcm = 4,
	lbf_x002f100ft = 5,
	lbf_x002f30m = 6,
	lbf_x002fft = 7,
	lbf_x002fin = 8,
	mN_x002fkm = 9,
	mN_x002fm = 10,
	pdl_x002fcm = 11,
	tonfUK_x002fft = 12,
	tonfUS_x002fft = 13
};
#endif

/* witsml1_4ForGsoap.h:1197 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerVolumeUom (-185)

/* witsml14:ForcePerVolumeUom */
enum class witsml14__ForcePerVolumeUom {
	N_x002fm3 = 0,
	atm_x002f100m = 1,
	atm_x002fm = 2,
	bar_x002fkm = 3,
	bar_x002fm = 4,
	GPa_x002fcm = 5,
	kPa_x002f100m = 6,
	kPa_x002fm = 7,
	lbf_x002fft3 = 8,
	lbf_x002fgalUS = 9,
	MPa_x002fm = 10,
	psi_x002fft = 11,
	psi_x002f100ft = 12,
	psi_x002fkft = 13,
	psi_x002fm = 14,
	Pa_x002fm = 15,
	atm_x002fft = 16
};
#endif

/* witsml1_4ForGsoap.h:1220 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__IlluminanceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__IlluminanceUom (-186)

/* witsml14:IlluminanceUom */
enum class witsml14__IlluminanceUom {
	lx = 0,
	lm_x002fm2 = 1,
	footcandle = 2,
	klx = 3
};
#endif

/* witsml1_4ForGsoap.h:1230 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthUom (-187)

/* witsml14:LengthUom */
enum class witsml14__LengthUom {
	m = 'm',
	angstrom = 'n',
	chBnA = 'o',
	chBnB = 'p',
	chCla = 'q',
	chSe = 'r',
	chUS = 's',
	cm = 't',
	dm = 'u',
	fathom = 'v',
	fm = 'w',
	ft = 'x',
	ftBnA = 'y',
	ftBnB = 'z',
	ftBr_x002865_x0029 = 123,
	ftCla = 124,
	ftGC = 125,
	ftInd = 126,
	ftInd_x002837_x0029 = 127,
	ftInd_x002862_x0029 = 128,
	ftInd_x002875_x0029 = 129,
	ftMA = 130,
	ftSe = 131,
	ftUS = 132,
	in = 133,
	in_x002f10 = 134,
	in_x002f16 = 135,
	in_x002f32 = 136,
	in_x002f64 = 137,
	inUS = 138,
	km = 139,
	lkBnA = 140,
	lkBnB = 141,
	lkCla = 142,
	lkSe = 143,
	lkUS = 144,
	mGer = 145,
	mi = 146,
	mil = 147,
	miUS = 148,
	mm = 149,
	Mm = 150,
	nautmi = 151,
	nm = 152,
	pm = 153,
	um = 154,
	yd = 155,
	ydBnA = 156,
	ydBnB = 157,
	ydCla = 158,
	ydIm = 159,
	ydInd = 160,
	ydInd_x002837_x0029 = 161,
	ydInd_x002862_x0029 = 162,
	ydInd_x002875_x0029 = 163,
	ydSe = 164
};
#endif

/* witsml1_4ForGsoap.h:1292 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthPerLengthUom (-188)

/* witsml14:LengthPerLengthUom */
enum class witsml14__LengthPerLengthUom {
	_x0025 = 0,
	ft_x002f100ft = 1,
	ft_x002fft = 2,
	ft_x002fin = 3,
	ft_x002fm = 4,
	ft_x002fmi = 5,
	km_x002fcm = 6,
	m_x002f30m = 7,
	m_x002fcm = 8,
	m_x002fkm = 9,
	m_x002fm = 10,
	mi_x002fin = 11
};
#endif

/* witsml1_4ForGsoap.h:1310 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MagneticInductionUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MagneticInductionUom (-189)

/* witsml14:MagneticInductionUom */
enum class witsml14__MagneticInductionUom {
	T = 'T',
	gauss = 'U',
	mT = 'V',
	mgauss = 'W',
	nT = 'X',
	uT = 'Y'
};
#endif

/* witsml1_4ForGsoap.h:1322 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassConcentrationUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassConcentrationUom (-190)

/* witsml14:MassConcentrationUom */
enum class witsml14__MassConcentrationUom {
	Euc = 0,
	_x0025 = 1,
	g_x002fkg = 2,
	kg_x002fkg = 3,
	kg_x002fsack94 = 4,
	mg_x002fkg = 5,
	permil = 6,
	ppdk = 7,
	ppk = 8,
	ppm = 9
};
#endif

/* witsml1_4ForGsoap.h:1338 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassUom (-191)

/* witsml14:MassUom */
enum class witsml14__MassUom {
	g = 'g',
	t = 't',
	kg = 'u',
	ag = 'v',
	ct = 'w',
	cwtUK = 'x',
	cwtUS = 'y',
	grain = 'z',
	klbm = 123,
	lbm = 124,
	Mg = 125,
	mg = 126,
	oz_x0028av_x0029 = 127,
	oz_x0028troy_x0029 = 128,
	ozm = 129,
	sack94 = 130,
	tonUK = 131,
	tonUS = 132,
	ug = 133
};
#endif

/* witsml1_4ForGsoap.h:1363 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassPerLengthUom (-192)

/* witsml14:MassPerLengthUom */
enum class witsml14__MassPerLengthUom {
	kg_x002fm = 0,
	klbm_x002fin = 1,
	lbm_x002fft = 2,
	Mg_x002fin = 3,
	kg_x002em_x002fcm2 = 4
};
#endif

/* witsml1_4ForGsoap.h:1374 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MomentOfForceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MomentOfForceUom (-193)

/* witsml14:MomentOfForceUom */
enum class witsml14__MomentOfForceUom {
	J = 'J',
	dN_x002em = 'K',
	daN_x002em = 'L',
	ft_x002elbf = 'M',
	kft_x002elbf = 'N',
	kgf_x002em = 'O',
	kN_x002em = 'P',
	lbf_x002eft = 'Q',
	lbf_x002ein = 'R',
	lbm_x002eft2_x002fs2 = 'S',
	N_x002em = 'T',
	pdl_x002eft = 'U',
	tonfUS_x002eft = 'V',
	tonfUS_x002emi = 'W'
};
#endif

/* witsml1_4ForGsoap.h:1394 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PerLengthUom (-194)

/* witsml14:PerLengthUom */
enum class witsml14__PerLengthUom {
	_1_x002fm = 0,
	_1_x002fangstrom = 1,
	_1_x002fcm = 2,
	_1_x002fft = 3,
	_1_x002fin = 4,
	_1_x002fmi = 5,
	_1_x002fmm = 6,
	_1_x002fnm = 7,
	_1_x002fyd = 8
};
#endif

/* witsml1_4ForGsoap.h:1409 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PermeabilityRockUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PermeabilityRockUom (-195)

/* witsml14:PermeabilityRockUom */
enum class witsml14__PermeabilityRockUom {
	D = 'D',
	mD = 'E'
};
#endif

/* witsml1_4ForGsoap.h:1417 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PlaneAngleUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PlaneAngleUom (-196)

/* witsml14:PlaneAngleUom */
enum class witsml14__PlaneAngleUom {
	c = 'c',
	rad = 'd',
	ccgr = 'e',
	cgr = 'f',
	dega = 'g',
	gon = 'h',
	gr = 'i',
	Grad = 'j',
	krad = 'k',
	mila = 'l',
	mina = 'm',
	mrad = 'n',
	Mrad = 'o',
	mseca = 'p',
	seca = 'q',
	urad = 'r'
};
#endif

/* witsml1_4ForGsoap.h:1439 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PowerUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PowerUom (-197)

/* witsml14:PowerUom */
enum class witsml14__PowerUom {
	W = 'W',
	ch = 'X',
	CV = 'Y',
	ehp = 'Z',
	GW = 91,
	hhp = 92,
	hp = 93,
	kcal_x002fh = 94,
	kW = 95,
	MJ_x002fa = 96,
	MW = 'a',
	mW = 'b',
	nW = 'c',
	ton_x0020of_x0020refrig = 'd',
	TW = 'e',
	uW = 'f'
};
#endif

/* witsml1_4ForGsoap.h:1461 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PressureUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PressureUom (-198)

/* witsml14:PressureUom */
enum class witsml14__PressureUom {
	Pa = 0,
	at = 1,
	atm = 2,
	bar = 3,
	cmH2O_x00284degC_x0029 = 4,
	dyne_x002fcm2 = 5,
	GPa = 6,
	hbar = 7,
	inH2O_x002839_x002e2F_x0029 = 8,
	inH2O_x002860F_x0029 = 9,
	inHg_x002832F_x0029 = 10,
	inHg_x002860F_x0029 = 11,
	kgf_x002fcm2 = 12,
	kgf_x002fmm2 = 13,
	kN_x002fm2 = 14,
	kPa = 15,
	kpsi = 16,
	lbf_x002fft2 = 17,
	lbf_x002f100ft2 = 18,
	lbf_x002fin2 = 19,
	mbar = 20,
	mmHg_x00280C_x0029 = 21,
	mPa = 22,
	MPa = 23,
	Mpsi = 24,
	N_x002fm2 = 25,
	N_x002fmm2 = 26,
	Pa_x0028g_x0029 = 27,
	pPa = 28,
	psi = 29,
	psia = 30,
	psig = 31,
	tonfUS_x002fft2 = 32,
	tonfUS_x002fin2 = 33,
	torr = 34,
	ubar = 35,
	umHg_x00280C_x0029 = 36,
	uPa = 37,
	upsi = 38
};
#endif

/* witsml1_4ForGsoap.h:1506 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RelativePowerUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RelativePowerUom (-199)

/* witsml14:RelativePowerUom */
enum class witsml14__RelativePowerUom {
	_x0025 = 0,
	Btu_x002fbhp_x002ehr = 1,
	W_x002fkW = 2,
	W_x002fW = 3
};
#endif

/* witsml1_4ForGsoap.h:1516 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificHeatCapacityUom (-200)

/* witsml14:SpecificHeatCapacityUom */
enum class witsml14__SpecificHeatCapacityUom {
	J_x002fkg_x002eK = 0,
	Btu_x002flbm_x002edegF = 1,
	Btu_x002flbm_x002edegR = 2,
	cal_x002fg_x002eK = 3,
	J_x002fg_x002eK = 4,
	kcal_x002fkg_x002edegC = 5,
	kJ_x002fkg_x002eK = 6,
	kW_x002eh_x002fkg_x002edegC = 7
};
#endif

/* witsml1_4ForGsoap.h:1530 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificVolumeUom (-201)

/* witsml14:SpecificVolumeUom */
enum class witsml14__SpecificVolumeUom {
	m3_x002fkg = 0,
	bbl_x002ftonUK = 1,
	bbl_x002ftonUS = 2,
	cm3_x002fg = 3,
	dm3_x002fkg = 4,
	dm3_x002ft = 5,
	ft3_x002fkg = 6,
	ft3_x002flbm = 7,
	ft3_x002fsack94 = 8,
	galUS_x002fsack94 = 9,
	galUK_x002flbm = 10,
	galUS_x002flbm = 11,
	galUS_x002ftonUK = 12,
	galUS_x002ftonUS = 13,
	L_x002f100kg = 14,
	L_x002fkg = 15,
	L_x002ft = 16,
	L_x002ftonUK = 17,
	m3_x002fg = 18,
	m3_x002ft = 19,
	m3_x002ftonUK = 20,
	m3_x002ftonUS = 21
};
#endif

/* witsml1_4ForGsoap.h:1558 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumeUom (-202)

/* witsml14:StandardVolumeUom */
enum class witsml14__StandardVolumeUom {
	scm_x002815C_x0029 = 0,
	scm_x00280C_x0029 = 1,
	Gsm3 = 2,
	ksm3 = 3,
	MMscf_x002860F_x0029 = 4,
	MMscm_x002815C_x0029 = 5,
	MMstb_x002860F_x0029 = 6,
	Mscf_x002860F_x0029 = 7,
	Mstb_x002860F_x0029 = 8,
	scf_x002860F_x0029 = 9,
	stb_x002860F_x0029 = 10
};
#endif

/* witsml1_4ForGsoap.h:1575 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumePerTimeUom (-203)

/* witsml14:StandardVolumePerTimeUom */
enum class witsml14__StandardVolumePerTimeUom {
	scf_x002860F_x0029_x002fd = 0,
	scm_x002815C_x0029_x002fs = 1,
	scm_x002815C_x0029_x002fd = 2,
	stb_x002860F_x0029_x002fd = 3,
	ksm3_x002fd = 4,
	Mscm_x002815C_x0029_x002fd = 5,
	MMscm_x002815C_x0029_x002fd = 6,
	Mstb_x002860F_x0029_x002fd = 7,
	MMstb_x002860F_x0029_x002fd = 8,
	Mscf_x002860F_x0029_x002fd = 9,
	MMscf_x002860F_x0029_x002fd = 10
};
#endif

/* witsml1_4ForGsoap.h:1592 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalConductivityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalConductivityUom (-204)

/* witsml14:ThermalConductivityUom */
enum class witsml14__ThermalConductivityUom {
	W_x002fm_x002eK = 0,
	Btu_x002fhr_x002eft_x002edegF = 1,
	cal_x002fh_x002ecm_x002edegC = 2,
	kcal_x002fh_x002em_x002edegC = 3,
	cal_x002fs_x002ecm_x002edegC = 4
};
#endif

/* witsml1_4ForGsoap.h:1603 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalVolumetricExpansionUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalVolumetricExpansionUom (-205)

/* witsml14:ThermalVolumetricExpansionUom */
enum class witsml14__ThermalVolumetricExpansionUom {
	_1_x002fK = 0,
	ppm_x002fdegC = 1,
	ppm_x002fdegF = 2,
	_1_x002fdegC = 3,
	_1_x002fdegF = 4,
	_1_x002fdegR = 5
};
#endif

/* witsml1_4ForGsoap.h:1615 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermodynamicTemperatureUom (-206)

/* witsml14:ThermodynamicTemperatureUom */
enum class witsml14__ThermodynamicTemperatureUom {
	K = 'K',
	degC = 'L',
	degF = 'M',
	degR = 'N'
};
#endif

/* witsml1_4ForGsoap.h:1625 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TimeUom (-207)

/* witsml14:TimeUom */
enum class witsml14__TimeUom {
	s = 's',
	a = 'a',
	d = 'd',
	h = 'h',
	cs = 't',
	Ga = 'u',
	_100s = 'v',
	Ma = 'w',
	min_ = 'x',
	ms = 'y',
	ms_x002f2 = 'z',
	ns = 123,
	ps = 124,
	us = 125,
	wk = 126,
	_100ka = 127
};
#endif

/* witsml1_4ForGsoap.h:1647 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VelocityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VelocityUom (-208)

/* witsml14:VelocityUom */
enum class witsml14__VelocityUom {
	m_x002fs = 0,
	cm_x002fa = 1,
	cm_x002fs = 2,
	dm_x002fs = 3,
	ft_x002fd = 4,
	ft_x002fh = 5,
	ft_x002fmin = 6,
	ft_x002fms = 7,
	ft_x002fs = 8,
	ft_x002fus = 9,
	in_x002fa = 10,
	in_x002fmin = 11,
	in_x002fs = 12,
	kft_x002fh = 13,
	kft_x002fs = 14,
	km_x002fh = 15,
	km_x002fs = 16,
	knot = 17,
	m_x002fd = 18,
	m_x002fh = 19,
	m_x002fmin = 20,
	m_x002fms = 21,
	mi_x002fh = 22,
	mil_x002fyr = 23,
	mm_x002fa = 24,
	mm_x002fs = 25,
	nm_x002fs = 26,
	um_x002fs = 27
};
#endif

/* witsml1_4ForGsoap.h:1681 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeUom (-209)

/* witsml14:VolumeUom */
enum class witsml14__VolumeUom {
	L = 'L',
	m3 = 'M',
	acre_x002eft = 'N',
	bbl = 'O',
	bcf = 'P',
	cm3 = 'Q',
	dm3 = 'R',
	flozUK = 'S',
	flozUS = 'T',
	ft3 = 'U',
	galUK = 'V',
	galUS = 'W',
	ha_x002em = 'X',
	hL = 'Y',
	in3 = 'Z',
	_1000ft3 = 91,
	km3 = 92,
	Mbbl = 93,
	Mcf = 94,
	M_x0028ft3_x0029 = 95,
	mi3 = 96,
	mL = 'a',
	M_x0028m3_x0029 = 'b',
	mm3 = 'c',
	MMbbl = 'd',
	ptUK = 'e',
	ptUS = 'f',
	qtUK = 'g',
	qtUS = 'h',
	tcf = 'i',
	um2_x002em = 'j',
	yd3 = 'k'
};
#endif

/* witsml1_4ForGsoap.h:1719 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeFlowRateUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeFlowRateUom (-210)

/* witsml14:VolumeFlowRateUom */
enum class witsml14__VolumeFlowRateUom {
	m3_x002fs = 0,
	bbl_x002fd = 1,
	bbl_x002fhr = 2,
	bbl_x002fmin = 3,
	cm3_x002f30min = 4,
	cm3_x002fh = 5,
	cm3_x002fmin = 6,
	cm3_x002fs = 7,
	dm3_x002fs = 8,
	ft3_x002fd = 9,
	ft3_x002fh = 10,
	ft3_x002fmin = 11,
	ft3_x002fs = 12,
	galUK_x002fd = 13,
	galUK_x002fhr = 14,
	galUK_x002fmin = 15,
	galUS_x002fd = 16,
	galUS_x002fhr = 17,
	galUS_x002fmin = 18,
	kbbl_x002fd = 19,
	_1000ft3_x002fd = 20,
	_1000m3_x002fd = 21,
	_1000m3_x002fh = 22,
	L_x002fh = 23,
	L_x002fmin = 24,
	L_x002fs = 25,
	m3_x002fd = 26,
	m3_x002fh = 27,
	m3_x002fmin = 28,
	Mbbl_x002fd = 29,
	M_x0028ft3_x0029_x002fd = 30,
	M_x0028m3_x0029_x002fd = 31
};
#endif

/* witsml1_4ForGsoap.h:1757 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerLengthUom (-211)

/* witsml14:VolumePerLengthUom */
enum class witsml14__VolumePerLengthUom {
	bblPft = 0,
	bblPin = 1,
	bblPmi = 2,
	dm3P100km = 3,
	dm3Pkm_x0028100_x0029 = 4,
	dm3Pm = 5,
	ft3Pft = 6,
	galUKPmi = 7,
	galUSPft = 8,
	galUSPmi = 9,
	in3Pft = 10,
	LP100km = 11,
	LPkm_x0028100_x0029 = 12,
	LPm = 13,
	m3Pkm = 14,
	m3Pm = 15
};
#endif

/* witsml1_4ForGsoap.h:1779 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerVolumeUom (-212)

/* witsml14:VolumePerVolumeUom */
enum class witsml14__VolumePerVolumeUom {
	Euc = 0,
	_x0025 = 1,
	permil = 2,
	ppdk = 3,
	ppk = 4,
	ppm = 5,
	bbl_x002facre_x002eft = 6,
	bbl_x002fbbl = 7,
	bbl_x002fft3 = 8,
	bbl_x002f100bbl = 9,
	bbl_x002fk_x0028ft3_x0029 = 10,
	bbl_x002fM_x0028ft3_x0029 = 11,
	cm3_x002fcm3 = 12,
	cm3_x002fm3 = 13,
	dm3_x002fm3 = 14,
	ft3_x002fbbl = 15,
	ft3_x002fft3 = 16,
	galUS_x002fkgalUS = 17,
	galUK_x002fkgalUK = 18,
	galUK_x002fft3 = 19,
	galUK_x002fMbbl = 20,
	galUS_x002fbbl = 21,
	galUS_x002f10bbl = 22,
	galUS_x002fft3 = 23,
	galUS_x002fMbbl = 24,
	_1000ft3_x002fbbl = 25,
	ksm3_x002fsm3 = 26,
	L_x002f10bbl = 27,
	L_x002fm3 = 28,
	m3_x002fha_x002em = 29,
	m3_x002fm3 = 30,
	M_x0028ft3_x0029_x002facre_x002eft = 31,
	mL_x002fgalUK = 32,
	mL_x002fgalUS = 33,
	mL_x002fmL = 34,
	MMbbl_x002facre_x002eft = 35,
	MMscf60_x002fstb60 = 36,
	Mscf60_x002fstb60 = 37,
	ptUK_x002fMbbl = 38,
	ptUS_x002f10bbl = 39,
	pu = 40,
	scm15_x002fstb60 = 41,
	sm3_x002fksm3 = 42,
	sm3_x002fsm3 = 43,
	stb60_x002fMMscf60 = 44,
	stb60_x002fMMscm15 = 45,
	stb60_x002fMscf60 = 46,
	stb60_x002fMscm15 = 47,
	stb60_x002fscm15 = 48
};
#endif

/* witsml1_4ForGsoap.h:1842 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityClassType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityClassType (-214)

/* witsml14:ActivityClassType */
enum class witsml14__ActivityClassType {
	planned = 0,
	unplanned = 1,
	downtime = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:1876 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AuthorizationStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AuthorizationStatus (-216)

/* witsml14:AuthorizationStatus */
enum class witsml14__AuthorizationStatus {
	draft = 0,
	authorized = 1,
	superceded = 2,
	withdrawn = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:1909 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AziRef (-217)

/* witsml14:AziRef */
enum class witsml14__AziRef {
	magnetic_x0020north = 0,
	grid_x0020north = 1,
	true_x0020north = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:1937 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BearingType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BearingType (-218)

/* witsml14:BearingType */
enum class witsml14__BearingType {
	oil_x0020seal = 0,
	mud_x0020lube = 1,
	other = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:1966 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitDullCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitDullCode (-219)

/* witsml14:BitDullCode */
enum class witsml14__BitDullCode {
	BC = 0,
	BT = 1,
	BU = 2,
	CC = 3,
	CD = 4,
	CI = 5,
	CR = 6,
	CT = 7,
	ER = 8,
	FC = 9,
	HC = 10,
	JD = 11,
	LC = 12,
	LN = 13,
	LT = 14,
	NO = 15,
	OC = 16,
	PB = 17,
	PN = 18,
	RG = 19,
	RO = 20,
	SD = 21,
	SS = 22,
	TR = 23,
	WO = 24,
	WT = 25,
	unknown = 26
};
#endif

/* witsml1_4ForGsoap.h:2113 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitReasonPulled
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitReasonPulled (-220)

/* witsml14:BitReasonPulled */
enum class witsml14__BitReasonPulled {
	BHA = 0,
	CM = 1,
	CP = 2,
	DMF = 3,
	DP = 4,
	DST = 5,
	DTF = 6,
	FM = 7,
	HP = 8,
	HR = 9,
	LOG = 10,
	PP = 11,
	PR = 12,
	RIG = 13,
	TD = 14,
	TQ = 15,
	TW = 16,
	WC = 17,
	unknown = 18
};
#endif

/* witsml1_4ForGsoap.h:2220 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitType (-221)

/* witsml14:BitType */
enum class witsml14__BitType {
	diamond = 0,
	diamond_x0020core = 1,
	insert_x0020roller_x0020cone = 2,
	PDC = 3,
	PDC_x0020core = 4,
	roller_x0020cone = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:2263 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BhaStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BhaStatus (-222)

/* witsml14:BhaStatus */
enum class witsml14__BhaStatus {
	final_ = 0,
	progress = 1,
	plan = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:2288 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeShapeType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeShapeType (-223)

/* witsml14:BladeShapeType */
enum class witsml14__BladeShapeType {
	dynamic = 0,
	melon = 1,
	spiral = 2,
	straight = 3,
	variable = 4,
	unknown = 5
};
#endif

/* witsml1_4ForGsoap.h:2321 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeType (-224)

/* witsml14:BladeType */
enum class witsml14__BladeType {
	clamp_on = 0,
	integral = 1,
	sleeve = 2,
	welded = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:2350 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BopType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BopType (-225)

/* witsml14:BopType */
enum class witsml14__BopType {
	annular_x0020preventer = 0,
	shear_x0020ram = 1,
	blind_x0020ram = 2,
	pipe_x0020ram = 3,
	drilling_x0020spool = 4,
	flexible_x0020joint = 5,
	connector = 6,
	unknown = 7
};
#endif

/* witsml1_4ForGsoap.h:2395 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BoxPinConfig
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BoxPinConfig (-226)

/* witsml14:BoxPinConfig */
enum class witsml14__BoxPinConfig {
	bottom_x0020box_x002c_x0020top_x0020box = 0,
	bottom_x0020box_x002c_x0020top_x0020pin = 1,
	bottom_x0020pin_x0020top_x0020box = 2,
	bottom_x0020pin = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:2428 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__CementJobType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__CementJobType (-227)

/* witsml14:CementJobType */
enum class witsml14__CementJobType {
	primary = 0,
	plug = 1,
	squeeze = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:2453 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ChangeInfoType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ChangeInfoType (-228)

/* witsml14:ChangeInfoType */
enum class witsml14__ChangeInfoType {
	add = 0,
	update = 1,
	delete_ = 2
};
#endif

/* witsml1_4ForGsoap.h:2478 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ChronostratigraphyUnit (-229)

/* witsml14:ChronostratigraphyUnit */
enum class witsml14__ChronostratigraphyUnit {
	era = 0,
	period = 1,
	epoch = 2,
	stage = 3
};
#endif

/* witsml1_4ForGsoap.h:2517 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ConnectionPosition
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ConnectionPosition (-230)

/* witsml14:ConnectionPosition */
enum class witsml14__ConnectionPosition {
	both = 0,
	bottom = 1,
	top = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:2549 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DeflectionMethod
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DeflectionMethod (-231)

/* witsml14:DeflectionMethod */
enum class witsml14__DeflectionMethod {
	point_x0020bit = 0,
	push_x0020bit = 1
};
#endif

/* witsml1_4ForGsoap.h:2569 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DerrickType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DerrickType (-232)

/* witsml14:DerrickType */
enum class witsml14__DerrickType {
	double_ = 0,
	quadruple = 1,
	slant = 2,
	triple = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:2602 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DrawWorksType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DrawWorksType (-233)

/* witsml14:DrawWorksType */
enum class witsml14__DrawWorksType {
	mechanical = 0,
	standard_x0020electric = 1,
	diesel_x0020electric = 2,
	ram_x0020rig = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:2635 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DriveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DriveType (-234)

/* witsml14:DriveType */
enum class witsml14__DriveType {
	coiled_x0020tubing = 0,
	rotary_x0020kelly_x0020drive = 1,
	top_x0020drive = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:2663 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__EastOrWest (-235)

/* witsml14:EastOrWest */
enum class witsml14__EastOrWest {
	east = 0,
	west = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:2691 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElevCodeEnum (-236)

/* witsml14:ElevCodeEnum */
enum class witsml14__ElevCodeEnum {
	CF = 0,
	CV = 1,
	DF = 2,
	GL = 3,
	KB = 4,
	RB = 5,
	RT = 6,
	SF = 7,
	LAT = 8,
	SL = 9,
	MHHW = 10,
	MHW = 11,
	MLLW = 12,
	MLW = 13,
	MTL = 14,
	KO = 15,
	unknown = 16
};
#endif

/* witsml1_4ForGsoap.h:2789 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Ellipsoid (-237)

/* witsml14:Ellipsoid */
enum class witsml14__Ellipsoid {
	AGD66 = 0,
	AIRY_USCOREMOD = 1,
	AIRY30 = 2,
	AIRY49 = 3,
	AUST_USCORENAT = 4,
	BESL_DHD = 5,
	BESL_NGL = 6,
	BESL_RT9 = 7,
	BESS41 = 8,
	BESSNAM = 9,
	BOGOTA = 10,
	CL58 = 11,
	CL58_1 = 12,
	CL66 = 13,
	CL66_M = 14,
	CL80 = 15,
	CL80_A = 16,
	CL80_B = 17,
	CL80_I = 18,
	CL80_J = 19,
	CL80_M = 20,
	CL80_P = 21,
	CMPOINCH = 22,
	DAN = 23,
	DELA = 24,
	ED50 = 25,
	EGYPT07 = 26,
	EVER = 27,
	EVER48 = 28,
	EVER56 = 29,
	EVER69 = 30,
	EVER_BR = 31,
	EVERMOD = 32,
	EVER_P = 33,
	EVER_TM = 34,
	EVTM = 35,
	FISC60 = 36,
	FISC60MOD = 37,
	FISC68 = 38,
	FISCMOD = 39,
	GDA94 = 40,
	GRS67 = 41,
	GRS80 = 42,
	HAY09 = 43,
	HEIS = 44,
	HEL06 = 45,
	HEL07 = 46,
	HOUG = 47,
	IAG_75 = 48,
	INDIAN75 = 49,
	INDO_74 = 50,
	INT24 = 51,
	IUGG67 = 52,
	IUGG75 = 53,
	JEFF48 = 54,
	KAU63 = 55,
	KRSV = 56,
	MERIT83 = 57,
	NAD27 = 58,
	NAHRAN = 59,
	NEWINT67 = 60,
	NWL_10D = 61,
	NWL_9D = 62,
	OSGB36 = 63,
	OSU86F = 64,
	OSU91A = 'A',
	PLESSIS_1817 = 'B',
	PSAD56 = 'C',
	PTNOIRE = 'D',
	SA69 = 'E',
	SPHR = 'F',
	STRU = 'G',
	WALB = 'H',
	WAR24 = 'I',
	WGS60 = 'J',
	WGS66 = 'K',
	WGS72 = 'L',
	WGS84 = 'M',
	unknown = 'N'
};
#endif

/* witsml1_4ForGsoap.h:3196 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorTermSource
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorTermSource (-238)

/* witsml14:ErrorTermSource */
enum class witsml14__ErrorTermSource {
	sensor = 0,
	azimuth_x0020reference = 1,
	magnetic = 2,
	alignment = 3,
	misalignment = 4,
	depth = 5,
	reference = 6,
	unknown = 7
};
#endif

/* witsml1_4ForGsoap.h:3250 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorPropagationMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorPropagationMode (-239)

/* witsml14:ErrorPropagationMode */
enum class witsml14__ErrorPropagationMode {
	B = 'B',
	R = 'R',
	S = 'S',
	W = 'W',
	G = 'G',
	unknown = 'X'
};
#endif

/* witsml1_4ForGsoap.h:3292 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorModelMisalignmentMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorModelMisalignmentMode (-240)

/* witsml14:ErrorModelMisalignmentMode */
enum class witsml14__ErrorModelMisalignmentMode {
	_1 = 1,
	_2 = 2,
	_3 = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:3329 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__GasPeakType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__GasPeakType (-242)

/* witsml14:GasPeakType */
enum class witsml14__GasPeakType {
	circulating_x0020background_x0020gas = 0,
	connection_x0020gas = 1,
	drilling_x0020background_x0020gas = 2,
	drilling_x0020gas_x0020peak = 3,
	flow_x0020check_x0020gas = 4,
	no_x0020readings = 5,
	other = 6,
	shut_x0020down_x0020gas = 7,
	trip_x0020gas = 8,
	unknown = 9
};
#endif

/* witsml1_4ForGsoap.h:3382 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__GeodeticDatum (-243)

/* witsml14:GeodeticDatum */
enum class witsml14__GeodeticDatum {
	ADND = 0,
	ARC50 = 1,
	AUSG = 2,
	CAA = 3,
	CHAS = 4,
	CORAL = 5,
	ED50 = 6,
	ED87 = 7,
	ERIN65 = 8,
	GD49 = 9,
	GHANA = 10,
	GUAM63 = 11,
	HJRS55 = 12,
	HTS = 13,
	INCH = 14,
	INDIA1 = 15,
	INDIA2 = 16,
	INDNS74 = 17,
	LIB64 = 18,
	LUZON = 19,
	MRCH = 20,
	NAD27 = 21,
	NAD83 = 22,
	NGRA = 23,
	None = 24,
	NPRM = 25,
	OSGB36 = 26,
	POTS1 = 27,
	PULK1 = 28,
	PULK2 = 29,
	QRNQ = 30,
	SA56 = 31,
	SRL60 = 32,
	TNRV25 = 33,
	TOKYO = 34,
	UserDefined = 35,
	VROL = 36,
	WGS72 = 37,
	WGS84 = 38,
	YACR = 39,
	unknown = 40
};
#endif

/* witsml1_4ForGsoap.h:3594 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Hemispheres (-244)

/* witsml14:Hemispheres */
enum class witsml14__Hemispheres {
	northern = 0,
	southern = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:3617 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleCasingType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleCasingType (-245)

/* witsml14:HoleCasingType */
enum class witsml14__HoleCasingType {
	blow_x0020out_x0020preventer = 0,
	casing = 1,
	conductor = 2,
	curved_x0020conductor = 3,
	liner = 4,
	open_x0020hole = 5,
	riser = 6,
	tubing = 7,
	unknown = 8
};
#endif

/* witsml1_4ForGsoap.h:3662 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleOpenerType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleOpenerType (-246)

/* witsml14:HoleOpenerType */
enum class witsml14__HoleOpenerType {
	under_reamer = 0,
	fixed_x0020blade = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:3683 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__InnerBarrelType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__InnerBarrelType (-247)

/* witsml14:InnerBarrelType */
enum class witsml14__InnerBarrelType {
	undifferented = 0,
	aluminum = 1,
	gel = 2,
	fiberglass = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:3720 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ItemState (-248)

/* witsml14:ItemState */
enum class witsml14__ItemState {
	actual = 0,
	model = 1,
	plan = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:3748 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__JarType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__JarType (-249)

/* witsml14:JarType */
enum class witsml14__JarType {
	mechanical = 0,
	hydraulic = 1,
	hydro_x0020mechanical = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:3773 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__JarAction
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__JarAction (-250)

/* witsml14:JarAction */
enum class witsml14__JarAction {
	up = 0,
	down = 1,
	both = 2,
	vibrating = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:3806 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologySource
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologySource (-251)

/* witsml14:LithologySource */
enum class witsml14__LithologySource {
	interpreted = 0,
	core = 1,
	cuttings = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:3849 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithostratigraphyUnit (-253)

/* witsml14:LithostratigraphyUnit */
enum class witsml14__LithostratigraphyUnit {
	group = 0,
	formation = 1,
	member = 2,
	bed = 3
};
#endif

/* witsml1_4ForGsoap.h:3897 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogDataType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogDataType (-254)

/* witsml14:LogDataType */
enum class witsml14__LogDataType {
	byte = 0,
	date_x0020time = 1,
	double_ = 2,
	float_ = 3,
	int_ = 4,
	long_ = 5,
	short_ = 6,
	string = 7,
	string40 = 8,
	string16 = 9,
	unknown = 10
};
#endif

/* witsml1_4ForGsoap.h:3975 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexDirection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexDirection (-255)

/* witsml14:LogIndexDirection */
enum class witsml14__LogIndexDirection {
	decreasing = 0,
	increasing = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:4002 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexType (-256)

/* witsml14:LogIndexType */
enum class witsml14__LogIndexType {
	date_x0020time = 0,
	elapsed_x0020time = 1,
	length = 2,
	measured_x0020depth = 3,
	vertical_x0020depth = 4,
	other = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:4045 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceOrigin
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceOrigin (-257)

/* witsml14:LogTraceOrigin */
enum class witsml14__LogTraceOrigin {
	realtime = 0,
	modeled = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:4068 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceState
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceState (-258)

/* witsml14:LogTraceState */
enum class witsml14__LogTraceState {
	depth_x0020adjusted = 0,
	edited = 1,
	joined = 2,
	processed = 3,
	raw = 4,
	unknown = 5
};
#endif

/* witsml1_4ForGsoap.h:4101 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MaterialType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MaterialType (-259)

/* witsml14:MaterialType */
enum class witsml14__MaterialType {
	aluminum = 0,
	beryllium_x0020copper = 1,
	chrome_x0020alloy = 2,
	composite = 3,
	other = 4,
	non_magnetic_x0020steel = 5,
	plastic = 6,
	steel = 7,
	steel_x0020alloy = 8,
	titanium = 9,
	unknown = 10
};
#endif

/* witsml1_4ForGsoap.h:4177 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasurementType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasurementType (-262)

/* witsml14:MeasurementType */
enum class witsml14__MeasurementType {
	acceleration = 0,
	acoustic_x0020caliper = 1,
	acoustic_x0020casing_x0020collar_x0020locator = 2,
	acoustic_x0020impedance = 3,
	acoustic_x0020porosity = 4,
	acoustic_x0020velocity = 5,
	acoustic_x0020wave_x0020matrix_x0020travel_x0020time = 6,
	acoustic_x0020wave_x0020travel_x0020time = 7,
	amplitude = 8,
	amplitude_x0020of_x0020acoustic_x0020wave = 9,
	amplitude_x0020of_x0020E_M_x0020wave = 10,
	amplitude_x0020ratio = 11,
	area = 12,
	attenuation = 13,
	attenuation_x0020of_x0020acoustic_x0020wave = 14,
	attenuation_x0020of_x0020E_M_x0020wave = 15,
	auxiliary = 16,
	average_x0020porosity = 17,
	azimuth = 18,
	barite_x0020mud_x0020correction = 19,
	bed_x0020thickness_x0020correction = 20,
	bit_x0020size = 21,
	blocked = 22,
	borehole_x0020environment_x0020correction = 23,
	borehole_x0020fluid_x0020composition_x0020correction = 24,
	borehole_x0020fluid_x0020correction = 25,
	borehole_x0020size_x0020correction = 26,
	bromide_x0020mud_x0020correction = 27,
	bulk_x0020compressibility = 28,
	bulk_x0020density = 29,
	bulk_x0020volume = 30,
	bulk_x0020volume_x0020gas = 31,
	bulk_x0020volume_x0020hydrocarbon = 32,
	bulk_x0020volume_x0020oil = 33,
	bulk_x0020volume_x0020water = 34,
	C_x002fO_x0020ratio = 35,
	caliper = 36,
	cased_x0020hole_x0020correction = 37,
	casing_x0020collar_x0020locator = 38,
	casing_x0020correction = 39,
	casing_x0020diameter_x0020correction = 40,
	casing_x0020inspection = 41,
	casing_x0020thickness_x0020correction = 42,
	casing_x0020weight_x0020correction = 43,
	cement_x0020correction = 44,
	cement_x0020density_x0020correction = 45,
	cement_x0020evaluation = 46,
	cement_x0020thickness_x0020correction = 47,
	cement_x0020type_x0020correction = 48,
	CH_x0020density_x0020porosity = 49,
	CH_x0020dolomite_x0020density_x0020porosity = 50,
	CH_x0020dolomite_x0020neutron_x0020porosity = 51,
	CH_x0020limestone_x0020density_x0020porosity = 52,
	CH_x0020limestone_x0020neutron_x0020porosity = 53,
	CH_x0020neutron_x0020porosity = 54,
	CH_x0020sandstone_x0020density_x0020porosity = 55,
	CH_x0020sandstone_x0020neutron_x0020porosity = 56,
	compressional_x0020wave_x0020dolomite_x0020porosity = 57,
	compressional_x0020wave_x0020limestone_x0020porosity = 58,
	compressional_x0020wave_x0020matrix_x0020travel_x0020time = 59,
	compressional_x0020wave_x0020sandstone_x0020porosity = 60,
	compressional_x0020wave_x0020travel_x0020time = 61,
	conductivity = 62,
	conductivity_x0020from_x0020attenuation = 63,
	conductivity_x0020from_x0020phase_x0020shift = 64,
	connate_x0020water_x0020conductivity = 'A',
	connate_x0020water_x0020resistivity = 'B',
	conventional_x0020core_x0020porosity = 'C',
	core_x0020matrix_x0020density = 'D',
	core_x0020permeability = 'E',
	core_x0020porosity = 'F',
	corrected = 'G',
	count_x0020rate = 'H',
	count_x0020rate_x0020ratio = 'I',
	cross_x0020plot_x0020porosity = 'J',
	decay_x0020time = 'K',
	deep_x0020conductivity = 'L',
	deep_x0020induction_x0020conductivity = 'M',
	deep_x0020induction_x0020resistivity = 'N',
	deep_x0020laterolog_x0020conductivity = 'O',
	deep_x0020laterolog_x0020resistivity = 'P',
	deep_x0020resistivity = 'Q',
	density = 'R',
	density_x0020porosity = 'S',
	depth = 'T',
	depth_x0020adjusted = 'U',
	depth_x0020derived_x0020from_x0020velocity = 'V',
	deviation = 'W',
	dielectric = 'X',
	diffusion_x0020correction = 'Y',
	dip = 'Z',
	dipmeter = 91,
	dipmeter_x0020conductivity = 92,
	dipmeter_x0020resistivity = 93,
	dolomite_x0020acoustic_x0020porosity = 94,
	dolomite_x0020density_x0020porosity = 95,
	dolomite_x0020neutron_x0020porosity = 96,
	edited = 'a',
	effective_x0020porosity = 'b',
	electric_x0020current = 'c',
	electric_x0020potential = 'd',
	electromagnetic_x0020wave_x0020matrix_x0020travel_x0020time = 'e',
	electromagnetic_x0020wave_x0020travel_x0020time = 'f',
	element = 'g',
	elemental_x0020ratio = 'h',
	enhanced = 'i',
	filtered = 'j',
	flowmeter = 'k',
	fluid_x0020density = 'l',
	fluid_x0020velocity = 'm',
	fluid_x0020viscosity = 'n',
	flushed_x0020zone_x0020conductivity = 'o',
	flushed_x0020zone_x0020resistivity = 'p',
	flushed_x0020zone_x0020saturation = 'q',
	force = 'r',
	formation_x0020density_x0020correction = 's',
	formation_x0020properties_x0020correction = 't',
	formation_x0020salinity_x0020correction = 'u',
	formation_x0020saturation_x0020correction = 'v',
	formation_x0020volume_x0020factor_x0020correction = 'w',
	formation_x0020water_x0020density_x0020correction = 'x',
	formation_x0020water_x0020saturation_x0020correction = 'y',
	free_x0020fluid_x0020index = 'z',
	friction_x0020effect_x0020correction = 123,
	gamma_x0020ray = 124,
	gamma_x0020ray_x0020minus_x0020uranium = 125,
	gas_x0020saturation = 126,
	gradiomanometer = 127,
	high_x0020frequency_x0020conductivity = 128,
	high_x0020frequency_x0020electromagnetic = 129,
	high_x0020frequency_x0020electromagnetic_x0020porosity = 130,
	high_x0020frequency_x0020E_M_x0020phase_x0020shift = 131,
	high_x0020frequency_x0020resistivity = 132,
	hydrocarbon_x0020correction = 133,
	hydrocarbon_x0020density_x0020correction = 134,
	hydrocarbon_x0020gravity_x0020correction = 135,
	hydrocarbon_x0020saturation = 136,
	hydrocarbon_x0020viscosity_x0020correction = 137,
	image = 138,
	interpretation_x0020variable = 139,
	iron_x0020mud_x0020correction = 140,
	joined = 141,
	KCl_x0020mud_x0020correction = 142,
	length = 143,
	limestone_x0020acoustic_x0020porosity = 144,
	limestone_x0020density_x0020porosity = 145,
	limestone_x0020neutron_x0020porosity = 146,
	lithology_x0020correction = 147,
	log_x0020derived_x0020permeability = 148,
	log_x0020matrix_x0020density = 149,
	magnetic_x0020casing_x0020collar_x0020locator = 150,
	matrix_x0020density = 151,
	matrix_x0020travel_x0020time = 152,
	measured_x0020depth = 153,
	mechanical_x0020caliper = 154,
	mechanical_x0020casing_x0020collar_x0020locator = 155,
	medium_x0020conductivity = 156,
	medium_x0020induction_x0020conductivity = 157,
	medium_x0020induction_x0020resistivity = 158,
	medium_x0020laterolog_x0020conductivity = 159,
	medium_x0020laterolog_x0020resistivity = 160,
	medium_x0020resistivity = 161,
	micro_x0020conductivity = 162,
	micro_x0020inverse_x0020conductivity = 163,
	micro_x0020inverse_x0020resistivity = 164,
	micro_x0020laterolog_x0020conductivity = 165,
	micro_x0020laterolog_x0020resistivity = 166,
	micro_x0020normal_x0020conductivity = 167,
	micro_x0020normal_x0020resistivity = 168,
	micro_x0020resistivity = 169,
	micro_x0020spherically_x0020focused_x0020conductivity = 170,
	micro_x0020spherically_x0020focused_x0020resistivity = 171,
	mineral = 172,
	mud_x0020cake_x0020conductivity = 173,
	mud_x0020cake_x0020correction = 174,
	mud_x0020cake_x0020density_x0020correction = 175,
	mud_x0020cake_x0020resistivity = 176,
	mud_x0020cake_x0020resistivity_x0020correction = 177,
	mud_x0020cake_x0020thickness_x0020correction = 178,
	mud_x0020composition_x0020correction = 179,
	mud_x0020conductivity = 180,
	mud_x0020filtrate_x0020conductivity = 181,
	mud_x0020filtrate_x0020correction = 182,
	mud_x0020filtrate_x0020density_x0020correction = 183,
	mud_x0020filtrate_x0020resistivity = 184,
	mud_x0020filtrate_x0020resistivity_x0020correction = 185,
	mud_x0020filtrate_x0020salinity_x0020correction = 186,
	mud_x0020resistivity = 187,
	mud_x0020salinity_x0020correction = 188,
	mud_x0020viscosity_x0020correction = 189,
	mud_x0020weight_x0020correction = 190,
	neutron_x0020die_x0020away_x0020time = 191,
	neutron_x0020porosity = 192,
	nuclear_x0020caliper = 193,
	nuclear_x0020magnetic_x0020decay_x0020time = 194,
	nuclear_x0020magnetism_x0020log_x0020permeability = 195,
	nuclear_x0020magnetism_x0020porosity = 196,
	OH_x0020density_x0020porosity = 197,
	OH_x0020dolomite_x0020density_x0020porosity = 198,
	OH_x0020dolomite_x0020neutron_x0020porosity = 199,
	OH_x0020limestone_x0020density_x0020porosity = 200,
	OH_x0020limestone_x0020neutron_x0020porosity = 201,
	OH_x0020neutron_x0020porosity = 202,
	OH_x0020sandstone_x0020density_x0020porosity = 203,
	OH_x0020sandstone_x0020neutron_x0020porosity = 204,
	oil_x0020based_x0020mud_x0020correction = 205,
	oil_x0020saturation = 206,
	perforating = 207,
	permeability = 208,
	phase_x0020shift = 209,
	photoelectric_x0020absorption = 210,
	photoelectric_x0020absorption_x0020correction = 211,
	physical_x0020measurement_x0020correction = 212,
	plane_x0020angle = 213,
	porosity = 214,
	porosity_x0020correction = 215,
	potassium = 216,
	pressure = 217,
	pressure_x0020correction = 218,
	processed = 219,
	pulsed_x0020neutron_x0020porosity = 220,
	quality = 221,
	ratio = 222,
	raw = 223,
	relative_x0020bearing = 224,
	resistivity = 225,
	resistivity_x0020factor_x0020correction = 226,
	resistivity_x0020from_x0020attenuation = 227,
	resistivity_x0020from_x0020phase_x0020shift = 228,
	resistivity_x0020phase_x0020shift = 229,
	resistivity_x0020ratio = 230,
	salinity = 231,
	sampling = 232,
	sandstone_x0020acoustic_x0020porosity = 233,
	sandstone_x0020density_x0020porosity = 234,
	sandstone_x0020neutron_x0020porosity = 235,
	saturation = 236,
	shale_x0020volume = 237,
	shallow_x0020conductivity = 238,
	shallow_x0020induction_x0020conductivity = 239,
	shallow_x0020induction_x0020resistivity = 240,
	shallow_x0020laterolog_x0020conductivity = 241,
	shallow_x0020laterolog_x0020resistivity = 242,
	shallow_x0020resistivity = 243,
	shear_x0020wave_x0020dolomite_x0020porosity = 244,
	shear_x0020wave_x0020limestone_x0020porosity = 245,
	shear_x0020wave_x0020matrix_x0020travel_x0020time = 246,
	shear_x0020wave_x0020sandstone_x0020porosity = 247,
	shear_x0020wave_x0020travel_x0020time = 248,
	shifted = 249,
	sidewall_x0020core_x0020porosity = 250,
	sigma = 251,
	sigma_x0020formation = 252,
	sigma_x0020gas = 253,
	sigma_x0020hydrocarbon = 254,
	sigma_x0020matrix = 255,
	sigma_x0020oil = 256,
	sigma_x0020water = 257,
	slippage_x0020velocity_x0020correction = 258,
	smoothed = 259,
	spectral_x0020gamma_x0020ray = 260,
	spherically_x0020focused_x0020conductivity = 261,
	spherically_x0020focused_x0020resistivity = 262,
	spontaneous_x0020potential = 263,
	spreading_x0020loss_x0020correction = 264,
	synthetic_x0020well_x0020log_x0020trace = 265,
	temperature = 266,
	temperature_x0020correction = 267,
	tension = 268,
	Th_x002fK_x0020ratio = 269,
	thorium = 270,
	time = 271,
	tool_x0020diameter_x0020correction = 272,
	tool_x0020eccentricity_x0020correction = 273,
	total_x0020gamma_x0020ray = 274,
	total_x0020porosity = 275,
	tracer_x0020survey = 276,
	travel_x0020time = 277,
	true_x0020conductivity = 278,
	true_x0020resistivity = 279,
	true_x0020vertical_x0020depth = 280,
	tube_x0020wave_x0020dolomite_x0020porosity = 281,
	tube_x0020wave_x0020limestone_x0020porosity = 282,
	tube_x0020wave_x0020matrix_x0020travel_x0020time = 283,
	tube_x0020wave_x0020sandstone_x0020porosity = 284,
	tube_x0020wave_x0020travel_x0020time = 285,
	uranium = 286,
	velocity = 287,
	volume = 288,
	water_x0020based_x0020fluid_x0020correction = 289,
	water_x0020holdup_x0020correction = 290,
	water_x0020saturated_x0020conductivity = 291,
	water_x0020saturated_x0020resistivity = 292,
	water_x0020saturation = 293,
	unknown = 294
};
#endif

/* witsml1_4ForGsoap.h:5656 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageProbability
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageProbability (-263)

/* witsml14:MessageProbability */
enum class witsml14__MessageProbability {
	low = 0,
	medium = 1,
	high = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:5681 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageSeverity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageSeverity (-264)

/* witsml14:MessageSeverity */
enum class witsml14__MessageSeverity {
	catastrophic = 0,
	major = 1,
	minor = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:5710 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageType (-265)

/* witsml14:MessageType */
enum class witsml14__MessageType {
	alarm = 0,
	event = 1,
	informational = 2,
	warning = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:5747 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudClass (-266)

/* witsml14:MudClass */
enum class witsml14__MudClass {
	water_x0020based = 0,
	oil_x0020based = 1,
	other = 2,
	pneumatic = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:5788 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudLogParameterType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudLogParameterType (-267)

/* witsml14:MudLogParameterType */
enum class witsml14__MudLogParameterType {
	bit_x0020parameters = 0,
	bit_x0020type_x0020comment = 1,
	casing_x0020point_x0020comment = 2,
	chromatograph_x0020comment = 3,
	circulation_x0020system_x0020comment = 4,
	core_x0020interval_x0020comment = 5,
	cuttings_x0020gas = 6,
	direct_x0020fracture_x0020pressure = 7,
	direct_x0020pore_x0020pressure_x0020measurements = 8,
	drilling_x0020data_x0020comment = 9,
	fracture_x0020PG_x0020estimate_x0020most_x0020likely = 10,
	gas_x0020peaks_x0020comment = 11,
	gas_x0020ratio_x0020comment = 12,
	general_x0020engineering_x0020comment = 13,
	kicks_x0020and_x0020flows = 14,
	lithlog_x0020comment = 15,
	lost_x0020returns = 16,
	LWD_x0020comment = 17,
	marker_x0020or_x0020formation_x0020top_x0020comment = 18,
	midnight_x0020depth_x0020date = 19,
	mud_x0020check_x0020comment = 20,
	mud_x0020data_x0020comment = 21,
	mudlog_x0020comment = 22,
	overburden_x0020gradient = 23,
	overpull_x0020on_x0020connection = 24,
	overpull_x0020on_x0020trip = 25,
	pore_x0020PG_x0020estimate_x0020most_x0020likely = 26,
	pore_x0020pressure_x0020estimate_x0020while_x0020drilling = 27,
	pressure_x0020data_x0020comment = 28,
	shale_x0020density_x0020comment = 29,
	short_x0020trip_x0020comment = 30,
	show_x0020report_x0020comment = 31,
	sidewall_x0020core_x0020comment = 32,
	sliding_x0020Interval = 33,
	steam_x0020still_x0020results_x0020comment = 34,
	survey_x0020comment = 35,
	temperature_x0020data_x0020comment = 36,
	temperature_x0020trend_x0020comment = 37,
	wireline_x0020log_x0020comment = 38,
	unknown = 39
};
#endif

/* witsml1_4ForGsoap.h:6006 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NADTypes (-269)

/* witsml14:NADTypes */
enum class witsml14__NADTypes {
	NAD27 = 0,
	NAD83 = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:6054 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NorthOrSouth (-273)

/* witsml14:NorthOrSouth */
enum class witsml14__NorthOrSouth {
	north = 0,
	south = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:6077 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NozzleType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NozzleType (-274)

/* witsml14:NozzleType */
enum class witsml14__NozzleType {
	extended = 0,
	normal = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:6098 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__OpsReportVersion
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__OpsReportVersion (-275)

/* witsml14:OpsReportVersion */
enum class witsml14__OpsReportVersion {
	preliminary = 0,
	normal = 1,
	final_ = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:6132 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PIDXCommodityCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PIDXCommodityCode (-276)

/* witsml14:PIDXCommodityCode */
enum class witsml14__PIDXCommodityCode : int64_t {
	_71131001 = 71131001LL,
	_71131002 = 71131002LL,
	_71131003 = 71131003LL,
	_71131004 = 71131004LL,
	_71131005 = 71131005LL,
	_71131006 = 71131006LL,
	_71131007 = 71131007LL,
	_71131008 = 71131008LL,
	_71131009 = 71131009LL,
	_71131010 = 71131010LL,
	_71131011 = 71131011LL,
	_71131012 = 71131012LL,
	_71131013 = 71131013LL,
	_71131014 = 71131014LL,
	_71131015 = 71131015LL,
	_71131016 = 71131016LL,
	_71131018 = 71131018LL,
	_71131019 = 71131019LL
};
#endif

/* witsml1_4ForGsoap.h:6228 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PitType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PitType (-277)

/* witsml14:PitType */
enum class witsml14__PitType {
	bulk = 0,
	chemical = 1,
	drilling = 2,
	mix = 3,
	mud_x0020cleaning = 4,
	sand_x0020trap = 5,
	slug = 6,
	storage = 7,
	surge_x0020tank = 8,
	trip_x0020tank = 9,
	unknown = 10
};
#endif

/* witsml1_4ForGsoap.h:6287 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PrimitiveType (-278)

/* witsml14:PrimitiveType */
enum class witsml14__PrimitiveType {
	string = 0,
	boolean = 1,
	float_ = 2,
	double_ = 3,
	duration = 4,
	dateTime = 5,
	time = 6,
	date = 7,
	gYearMonth = 8,
	gYear = 9,
	gMonthDay = 10,
	gDay = 11,
	gMonth = 12,
	base64Binary = 13,
	anyURI = 14,
	unknown = 15
};
#endif

/* witsml1_4ForGsoap.h:6320 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Projection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Projection (-279)

/* witsml14:Projection */
enum class witsml14__Projection {
	Albers_x0020equal_x0020area = 0,
	azimuthal_x0020equidistant = 1,
	Cassini = 2,
	equidistant_x0020conic = 3,
	equirectangular = 4,
	gnomonic = 5,
	Lambert_x0020azimuthal = 6,
	Lambert_x0020conformal_x0020conic = 7,
	Mercator = 8,
	Miller = 9,
	oblique_x0020Mercator = 10,
	orthographic = 11,
	perspective = 12,
	polar_x0020stereographic = 13,
	polyconic = 14,
	sinusoidal = 15,
	state_x0020plane = 16,
	stereographic = 17,
	transverse_x0020Mercator = 18,
	universal_x0020transverse_x0020Mercator = 19,
	user_x0020defined = 20,
	Van_x0020der_x0020Grinten = 21,
	unknown = 22
};
#endif

/* witsml1_4ForGsoap.h:6442 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ProjectionVariantsObliqueMercator (-280)

/* witsml14:ProjectionVariantsObliqueMercator */
enum class witsml14__ProjectionVariantsObliqueMercator {
	default_ = 0,
	rectified = 1,
	rectified_x0020skew = 2,
	rectified_x0020skew_x0020center_x0020origin = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:6471 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PresTestType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PresTestType (-281)

/* witsml14:PresTestType */
enum class witsml14__PresTestType {
	leak_x0020off_x0020test = 0,
	formation_x0020integrity_x0020test = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:6498 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PrincipalMeridian (-282)

/* witsml14:PrincipalMeridian */
enum class witsml14__PrincipalMeridian {
	_1st_x0020Principal_x0020Meridian = 0,
	_2nd_x0020Principal_x0020Meridian = 1,
	_3rd_x0020Principal_x0020Meridian = 2,
	_4th_x0020Principal_x0020Meridian = 3,
	_5th_x0020Principal_x0020Meridian = 4,
	_6th_x0020Principal_x0020Meridian = 5,
	Black_x0020Hills_x0020Meridian = 6,
	Boise_x0020Meridian = 7,
	Choctaw_x0020Meridian = 8,
	Chickasaw_x0020Meridian = 9,
	Cimarron_x0020Meridian = 10,
	Copper_x0020River_x0020Meridian = 11,
	Fairbanks_x0020Meridian = 12,
	Gila_x0020and_x0020Salt_x0020River_x0020Meridian = 13,
	Humboldt_x0020Meridian = 14,
	Huntsville_x0020Meridian = 15,
	Indian_x0020Meridian = 16,
	Kateel_x0020River_x0020Meridian = 17,
	Lousiana_x0020Meridian = 18,
	Michigan_x0020Meridian = 19,
	Mount_x0020Diablo_x0020Meridian = 20,
	New_x0020Mexico_x0020Meridian = 21,
	Saint_x0020Stephens_x0020Meridian = 22,
	Saint_x0020Helena_x0020Meridian = 23,
	Salt_x0020Lake_x0020Meridian = 24,
	San_x0020Bernardo_x0020Meridian = 25,
	Seward_x0020Meridian = 26,
	Tallahassee_x0020Meridian = 27,
	Uintah_x0020Meridian = 28,
	Umiat_x0020Meridian = 29,
	Ute_x0020Meridian = 30,
	Washington_x0020Meridian = 31,
	Williamette_x0020Meridian = 32,
	Wind_x0020River_x0020Meridian = 33,
	unknown = 34
};
#endif

/* witsml1_4ForGsoap.h:6685 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpType (-283)

/* witsml14:PumpType */
enum class witsml14__PumpType {
	centrifugal = 0,
	duplex = 1,
	triplex = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:6713 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpOpType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpOpType (-284)

/* witsml14:PumpOpType */
enum class witsml14__PumpOpType {
	drilling = 0,
	reaming = 1,
	circulating = 2,
	slow_x0020pump = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:6751 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ReadingKind
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ReadingKind (-286)

/* witsml14:ReadingKind */
enum class witsml14__ReadingKind {
	measured = 0,
	estimated = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:6778 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RigType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RigType (-287)

/* witsml14:RigType */
enum class witsml14__RigType {
	barge = 0,
	coiled_x0020tubing = 1,
	floater = 2,
	jackup = 3,
	land = 4,
	platform = 5,
	semi_submersible = 6,
	unknown = 7
};
#endif

/* witsml1_4ForGsoap.h:6830 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskAffectedPersonnel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskAffectedPersonnel (-288)

/* witsml14:RiskAffectedPersonnel */
enum class witsml14__RiskAffectedPersonnel {
	cementer = 0,
	company_x0020man = 1,
	contractor = 2,
	directional_x0020driller = 3,
	driller = 4,
	drilling_x0020engineer = 5,
	drilling_x0020superintendent = 6,
	drilling_x0020team = 7,
	facility_x0020engineer = 8,
	field_x0020service_x0020manager = 9,
	foreman = 10,
	general_x0020service_x0020supervisor = 11,
	geologist = 12,
	member = 13,
	mud_x0020engineer = 14,
	mud_x0020logger = 15,
	MWD_x0020or_x0020LWD_x0020engineer = 16,
	perform_x0020engineer = 17,
	petrophysicist = 18,
	production_x0020engineer = 19,
	remotely_x0020operated_x0020vehicle_x0020engineer = 20,
	safety_x0020manger = 21,
	sales_x0020engineer = 22,
	service_x0020supervisor = 23,
	technical_x0020support = 24,
	tool_x0020pusher = 25,
	wireline_x0020engineer = 26
};
#endif

/* witsml1_4ForGsoap.h:6949 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskCategory (-289)

/* witsml14:RiskCategory */
enum class witsml14__RiskCategory {
	hydraulics = 0,
	mechanical = 1,
	time_x0020related = 2,
	wellbore_x0020stability = 3,
	directional_x0020drilling = 4,
	bit = 5,
	equipment_x0020failure = 6,
	completion = 7,
	casing = 8,
	other = 9,
	HSE = 10,
	unknown = 11
};
#endif

/* witsml1_4ForGsoap.h:7011 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskSubCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskSubCategory (-290)

/* witsml14:RiskSubCategory */
enum class witsml14__RiskSubCategory {
	gas_x0020kick = 0,
	shallow_x0020water_x0020influx = 1,
	other_x0020influx_x0020or_x0020kicks = 2,
	loss_x0020circulation = 3,
	poor_x0020hole_x0020cleaning = 4,
	good_x0020hole_x0020cleaning_x0020at_x0020high_x0020ROP = 5,
	high_x0020mud_x0020weight = 6,
	special_x0020additives_x0020needed = 7,
	gumbo_x0020problems = 8,
	high_x0020ECD_x0020__x0020rheology_x0020related = 9,
	excessive_x0020circulation = 10,
	performing_x0020a_x0020kill = 11,
	mud_x0020weight_x0020change = 12,
	excessive_x0020pipe_x0020cement_x0020scaling = 13,
	pit_x0020gain_x0020or_x0020loss = 14,
	mud_x0020stability_x0020problems = 15,
	shallow_x0020gas_x0020flow = 16,
	twist_x0020off = 17,
	stuck_x0020pipe = 18,
	wireline_x0020stuck_x0020in_x0020hole = 19,
	stick_x0020and_x0020slip = 20,
	vibration_x0020__x0020axial = 21,
	vibration_x0020__x0020torsional = 22,
	vibration_x0020__x0020transverse = 23,
	vibration_x0020unknown_x0020or_x0020rough_x0020drilling = 24,
	uneven_x0020wear_x0020of_x0020BHA = 25,
	uneven_x0020wear_x0020of_x0020drillstring = 26,
	excessive_x0020torque = 27,
	excessive_x0020drag = 28,
	reaming_x0020greater_x0020than_x00202_x0020hours = 29,
	washouts = 30,
	tight_x0020hole_x0020or_x0020overPull = 31,
	failed_x0020inspections_x0020or_x0020fatigue_x0020wear = 32,
	mechanical = 33,
	drilling_x0020greater_x0020than_x00201000_x0020feet_x002fday = 34,
	drilling_x0020greater_x0020than_x00202000_x0020feet_x002fday = 35,
	drilling_x0020less_x0020than_x002020_x0020feet_x002fday = 36,
	trips_x0020greater_x0020than_x002024_x0020hours = 37,
	excessive_x0020time_x0020for_x0020BHA_x0020makeup = 38,
	waiting_x0020on_x0020decisions = 39,
	waiting_x0020on_x0020weather = 40,
	waiting_x0020on_x0020tools = 41,
	sloughing_x0020or_x0020packoffs = 42,
	ballooning = 43,
	fracture_x0020problems = 44,
	unstable_x0020zones = 45,
	formation_x0020integrity_x0020test = 46,
	leak_off_x0020test = 47,
	tectonics = 48,
	pore_x0020pressure = 49,
	breakouts = 50,
	bed_x0020parallel = 51,
	wellbore_x0020stability = 52,
	excessive_x0020doglegs = 53,
	sidetrack = 54,
	BHA_x0020change_x0020for_x0020directional = 55,
	wrong_x0020total_x0020flow_x0020area = 56,
	well_x0020collision_x0020__x0020actual = 57,
	well_x0020collision_x0020__x0020technical = 58,
	geosteering = 59,
	abnormal_x0020tendency_x0020changes = 60,
	resurveying = 61,
	in_field_x0020referencing_x0020_x0028IFR_x0029_x0020actions = 62,
	bit_x0020or_x0020BHA_x0020performance = 63,
	drilling_x0020optimization = 64,
	bit_x0020balling = 'A',
	lost_x0020cones_x0020or_x0020broken_x0020cutters = 'B',
	excessive_x0020bit_x0020wear_x0020or_x0020gauge = 'C',
	low_x0020rate_x0020of_x0020bit_x0020penetration = 'D',
	high_x0020rate_x0020of_x0020bit_x0020penetration = 'E',
	downhole_x0020tool = 'F',
	surface_x0020system = 'G',
	motor_x0020or_x0020rotary_x0020steerable_x0020system_x0020failure = 'H',
	topdrive_x0020failure = 'I',
	hoisting_x0020equipment_x0020failure = 'J',
	circulating_x0020equipment_x0020failure = 'K',
	electrical_x0020system_x0020failure = 'L',
	blow_x0020out_x0020preventer_x0020events = 'M',
	surface_x0020instrumentation_x0020problems = 'N',
	rig_x0020communications = 'O',
	completion_x0020equipment_x0020failure = 'P',
	miscellaneous_x0020rig_x0020equipment = 'Q',
	tool_x0020or_x0020equipment_x0020failure = 'R',
	squeeze_x0020jobs = 'S',
	casing_x0020surge_x0020losses = 'T',
	stuck_x0020casing_x0020or_x0020completion = 'U',
	shoe_x0020failures = 'V',
	early_x0020cement_x0020setup = 'W',
	casing_x0020collapse = 'X',
	milling = 'Y',
	excessive_x0020casing_x0020wear_x0020or_x0020cuttings = 'Z',
	excessive_x0020formation_x0020damage_x0020or_x0020skin = 91,
	casing_x0020rotation_x0020or_x0020reciprocation_x0020rqd = 92,
	broaching = 93,
	completion_x0020or_x0020casing = 94,
	stratigraphy = 95,
	fishing = 96,
	junk_x0020in_x0020hole = 'a',
	delay_x0020due_x0020to_x0020political_x0020unrest = 'b',
	rig_x0020move = 'c',
	gas_x0020hydrates = 'd',
	pending_x0020analysis = 'e',
	riser_x0020disconnect = 'f',
	other = 'g',
	personnel = 'h',
	environmental = 'i',
	automotive = 'j',
	asset = 'k',
	information = 'l',
	time = 'm',
	HSE = 'n'
};
#endif

/* witsml1_4ForGsoap.h:7480 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskType (-291)

/* witsml14:RiskType */
enum class witsml14__RiskType {
	risk = 0,
	event = 1,
	near_x0020miss = 2,
	best_x0020practice = 3,
	lessons_x0020learned = 4,
	other = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:7521 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ScrType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ScrType (-292)

/* witsml14:ScrType */
enum class witsml14__ScrType {
	string_x0020annulus = 0,
	string_x0020kill_x0020line = 1,
	string_x0020choke_x0020line = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:7546 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowFluorescence
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowFluorescence (-293)

/* witsml14:ShowFluorescence */
enum class witsml14__ShowFluorescence {
	faint = 0,
	bright = 1,
	none = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:7571 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowLevel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowLevel (-294)

/* witsml14:ShowLevel */
enum class witsml14__ShowLevel {
	blooming = 0,
	streaming = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:7592 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowRating
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowRating (-295)

/* witsml14:ShowRating */
enum class witsml14__ShowRating {
	none = 0,
	very_x0020poor = 1,
	poor = 2,
	fair = 3,
	good = 4,
	very_x0020good = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:7629 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowSpeed
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowSpeed (-296)

/* witsml14:ShowSpeed */
enum class witsml14__ShowSpeed {
	slow = 0,
	moderately_x0020fast = 1,
	fast = 2,
	instantaneous = 3,
	none = 4,
	unknown = 5
};
#endif

/* witsml1_4ForGsoap.h:7662 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StateDetailActivity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StateDetailActivity (-297)

/* witsml14:StateDetailActivity */
enum class witsml14__StateDetailActivity {
	injury = 0,
	operation_x0020failed = 1,
	kick = 2,
	circulation_x0020loss = 3,
	mud_x0020loss = 4,
	stuck_x0020equipment = 5,
	equipment_x0020failure = 6,
	equipment_x0020hang = 7,
	success = 8,
	unknown = 9
};
#endif

/* witsml1_4ForGsoap.h:7724 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAdditiveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAdditiveType (-298)

/* witsml14:StimAdditiveType */
enum class witsml14__StimAdditiveType {
	abrasive = 0,
	accelerator = 1,
	acid_x0020inhibitor_x002fretarder = 2,
	acid_x0020material = 3,
	acid_x0020soluble_x0020additive = 4,
	acid_x0020source = 5,
	activator = 6,
	additive_x0020material = 7,
	alcohol = 8,
	anti_Sludge = 9,
	anti_sulfide_x0020cracker = 10,
	aromatic_x0020solvent = 11,
	biocide = 12,
	borehole_x0020stabilizer = 13,
	breaker = 14,
	bridging_x0020agent = 15,
	buffer = 16,
	calcium_x0020remover = 17,
	carrying_x0020agent = 18,
	catalyst = 19,
	clay = 20,
	clay_x0020control = 21,
	conductivity_x0020enhancer = 22,
	conformance_x0020control = 23,
	conformance_x0020caterial = 24,
	corrosion_x0020inhibitor = 25,
	crosslink_x0020enhancer = 26,
	crosslinker = 27,
	curing_x0020agent = 28,
	defoamer = 29,
	demulsifier = 30,
	diluent = 31,
	dispersant = 32,
	diverter = 33,
	elastomeric_x0020additive = 34,
	emulsifier = 35,
	epoxy_x0020resin = 36,
	expoxy_x0020resin_x0020agent = 37,
	expander = 38,
	filtration_x0020control = 39,
	flocculant = 40,
	fluid_x0020loss_x0020control = 41,
	flush_x002fspacer_x0020additive = 42,
	foamer = 43,
	formation_x0020sealer = 44,
	free_x0020water_x0020control = 45,
	friction_x0020reducer = 46,
	gas = 47,
	gas_x0020migration_x0020control = 48,
	gel_x0020stabilizer = 49,
	gelling_x0020agent = 50,
	H2S_x0020scavenger = 51,
	intensifier = 52,
	iron_x0020control = 53,
	lost_x0020circulation_x0020additive = 54,
	low_x0020fluid_x0020loss_x0020control = 55,
	lubricant = 56,
	misc_x0020additive = 57,
	mixing_x0020fluid = 58,
	mud_x0020removal_x0020additive = 59,
	mud_x0020thinner = 60,
	mutual_x0020solvent = 61,
	oxydizer = 62,
	oxygen_x0020scavenger = 63,
	parafin_x0020control = 64,
	penetrating_x0020agent = 'A',
	polymer = 'B',
	proppant_x0020stabilizer = 'C',
	radioactive_x0020tracer = 'D',
	raw_x0020acid = 'E',
	relative_x0020perm_x0020modifier = 'F',
	retarder = 'G',
	salt = 'H',
	sand = 'I',
	sand_x0020control_x0020material = 'J',
	scale_x0020control_x0020additive = 'K',
	stabilizer = 'L',
	strength_x0020retrogression = 'M',
	sulfide_x0020scavenger = 'N',
	surfactant = 'O',
	suspension_x0020agent = 'P',
	tactifier = 'Q',
	viscosifier = 'R',
	water_x0020additive = 'S',
	water_x0020management_x0020material = 'T',
	pH_x0020control = 'U',
	unknown = 'V'
};
#endif

/* witsml1_4ForGsoap.h:8190 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAnalysisMethod
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAnalysisMethod (-299)

/* witsml14:StimAnalysisMethod */
enum class witsml14__StimAnalysisMethod {
	average = 0,
	delta_x0020pressure_x0020over_x0020g_time = 1,
	delta_x0020pressure_x0020over_x0020linear_x0020time = 2,
	delta_x0020pressure_x0020over_x0020radial_x0020time = 3,
	gdk_x00202_d = 4,
	horner = 5,
	linear = 6,
	log_log = 7,
	nolte = 8,
	pdl_x0020coefficient = 9,
	perkins_x0020and_x0020kern_x00202_d = 10,
	radial_x00202_d = 11,
	square_x0020root = 12,
	third_party_x0020software = 13,
	other = 14,
	unknown = 15
};
#endif

/* witsml1_4ForGsoap.h:8281 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidSubtype
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidSubtype (-300)

/* witsml14:StimFluidSubtype */
enum class witsml14__StimFluidSubtype {
	acid = 0,
	base = 1,
	carbon_x0020dioxide = 2,
	carbon_x0020dioxide_x0020and_x0020nitrogen = 3,
	carbon_x0020dioxide_x0020and_x0020water = 4,
	condensate = 5,
	cross_linked_x0020gel = 6,
	crude_x0020oil = 7,
	diesel = 8,
	foam = 9,
	fracturing_x0020oil = 10,
	fresh_x0020water = 11,
	gelled_x0020acid = 12,
	gelled_x0020condensate = 13,
	gelled_x0020crude = 14,
	gelled_x0020diesel = 15,
	gelled_x0020oil = 16,
	gelled_x0020salt_x0020water = 17,
	hot_x0020condensate = 18,
	hot_x0020fresh_x0020water = 19,
	hot_x0020oil = 20,
	hot_x0020salt_x0020water = 21,
	hybrid = 22,
	linear_x0020gel = 23,
	liquefied_x0020petroleum_x0020gas = 24,
	nitrogen = 25,
	oil = 26,
	produced_x0020water = 27,
	salt_x0020water = 28,
	slick_x0020water = 29,
	other = 30
};
#endif

/* witsml1_4ForGsoap.h:8446 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidType (-301)

/* witsml14:StimFluidType */
enum class witsml14__StimFluidType {
	acid_based = 0,
	gas = 1,
	oil_based = 2,
	water_based = 3
};
#endif

/* witsml1_4ForGsoap.h:8479 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimProppantType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimProppantType (-302)

/* witsml14:StimProppantType */
enum class witsml14__StimProppantType {
	sand = 0,
	manmade_x0020proppant = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:8506 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageFlowPathType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageFlowPathType (-303)

/* witsml14:StimStageFlowPathType */
enum class witsml14__StimStageFlowPathType {
	annulus = 0,
	casing = 1,
	coiled_x0020tubing = 2,
	drill_x0020pipe = 3,
	open_x0020hole = 4,
	tubing = 5,
	tubing_x0020and_x0020annulus = 6,
	unknown = 7
};
#endif

/* witsml1_4ForGsoap.h:8558 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageType (-304)

/* witsml14:StimStageType */
enum class witsml14__StimStageType {
	acid = 0,
	acid_x0020spearhead = 1,
	acid_x0020ball_x0020out = 2,
	acid_x0020breakdown = 3,
	ball_x0020out = 4,
	breakdown = 5,
	chemical_x0020wash = 6,
	circulate = 7,
	displacement = 8,
	diverter = 9,
	fluid_x0020efficiency_x0020test = 10,
	flowback = 11,
	flush = 12,
	foamed_x0020acid = 13,
	hydrajet = 14,
	load_x0020well = 15,
	load_x0020annulus = 16,
	overflush = 17,
	pad = 18,
	pump_in = 19,
	pre_Job = 20,
	pre_flush = 21,
	pre_pad = 22,
	shut_in = 23,
	shut_in_x0020for_x0020FET_x0020analysis = 24,
	proppant_x0020laden_x0020fluid = 25,
	slurry = 26,
	sand_x0020slug = 27,
	spacer = 28,
	spot_x0020acid = 29,
	step_x0020rate_x0020test = 30,
	treatment = 31,
	other = 32,
	unknown = 33
};
#endif

/* witsml1_4ForGsoap.h:8745 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SupportCraft
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SupportCraft (-305)

/* witsml14:SupportCraft */
enum class witsml14__SupportCraft {
	barge = 0,
	standby_x0020boat = 1,
	helicopter = 2,
	supply_x0020boat = 3,
	truck = 4,
	crew_x0020vehicle = 5,
	tug_x0020boat = 6,
	unknown = 7
};
#endif

/* witsml1_4ForGsoap.h:8790 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SurfEquipType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SurfEquipType (-306)

/* witsml14:SurfEquipType */
enum class witsml14__SurfEquipType {
	IADC = 0,
	custom = 1,
	coiled_x0020tubing = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:8819 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SurveyToolOperatingMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SurveyToolOperatingMode (-307)

/* witsml14:SurveyToolOperatingMode */
enum class witsml14__SurveyToolOperatingMode {
	stationary = 0,
	continuous_x0020XY = 1,
	continuous_x0020Z = 2,
	continuous_x0020XYZ = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:8855 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetCategory (-308)

/* witsml14:TargetCategory */
enum class witsml14__TargetCategory {
	geological = 0,
	unknown = 1
};
#endif

/* witsml1_4ForGsoap.h:8876 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetScope
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetScope (-309)

/* witsml14:TargetScope */
enum class witsml14__TargetScope {
	_3D_x0020volume = 0,
	ellipsoid = 1,
	elliptical = 2,
	hardLine = 3,
	irregular = 4,
	lease_x0020line = 5,
	line = 6,
	plane = 7,
	point = 8,
	rectangular = 9,
	unknown = 10
};
#endif

/* witsml1_4ForGsoap.h:8943 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetSectionScope
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetSectionScope (-310)

/* witsml14:TargetSectionScope */
enum class witsml14__TargetSectionScope {
	arc = 0,
	line = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:8979 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationStatus (-312)

/* witsml14:TrajStationStatus */
enum class witsml14__TrajStationStatus {
	open = 0,
	rejected = 1,
	position = 2,
	unknown = 3
};
#endif

/* witsml1_4ForGsoap.h:9011 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationType (-313)

/* witsml14:TrajStationType */
enum class witsml14__TrajStationType {
	azimuth_x0020on_x0020plane = 0,
	buildrate_x0020to_x0020delta_MD = 1,
	buildrate_x0020to_x0020INCL = 2,
	buildrate_x0020to_x0020MD = 3,
	buildrate_x0020and_x0020turnrate_x0020to_x0020AZI = 4,
	buildrate_x0020and_x0020turnrate_x0020to_x0020delta_MD = 5,
	buildrate_x0020and_x0020turnrate_x0020to_x0020INCL = 6,
	buildrate_x0020and_x0020turnrate_x0020to_x0020INCL_x0020and_x0020AZI = 7,
	buildrate_x0020and_x0020turnrate_x0020to_x0020MD = 8,
	buildrate_x0020and_x0020turnrate_x0020to_x0020TVD = 9,
	buildrate_x0020TVD = 10,
	casing_x0020MD = 11,
	casing_x0020TVD = 12,
	DLS = 13,
	DLS_x0020to_x0020AZI_x0020and_x0020MD = 14,
	DLS_x0020to_x0020AZI_TVD = 15,
	DLS_x0020to_x0020INCL = 16,
	DLS_x0020to_x0020INCL_x0020and_x0020AZI = 17,
	DLS_x0020to_x0020INCL_x0020and_x0020MD = 18,
	DLS_x0020to_x0020INCL_x0020and_x0020TVD = 19,
	DLS_x0020to_x0020NS_x002c_x0020EW_x0020and_x0020TVD = 20,
	DLS_x0020and_x0020toolface_x0020to_x0020AZI = 21,
	DLS_x0020and_x0020toolface_x0020to_x0020delta_MD = 22,
	DLS_x0020and_x0020toolface_x0020to_x0020INCL = 23,
	DLS_x0020and_x0020toolface_x0020to_x0020INCL_AZI = 24,
	DLS_x0020and_x0020toolface_x0020to_x0020MD = 25,
	DLS_x0020and_x0020toolface_x0020to_x0020TVD = 26,
	formation_x0020MD = 27,
	formation_x0020TVD = 28,
	gyro_x0020inertial = 29,
	gyro_x0020MWD = 30,
	gyro_x0020north_x0020seeking = 31,
	hold_x0020to_x0020delta_MD = 32,
	hold_x0020to_x0020MD = 33,
	hold_x0020to_x0020TVD = 34,
	INCL_x002c_x0020AZI_x0020and_x0020TVD = 35,
	magnetic_x0020multi_shot = 36,
	magnetic_x0020MWD = 37,
	magnetic_x0020single_x0020shot = 38,
	marker_x0020MD = 39,
	marker_x0020TVD = 40,
	NS_x002c_x0020EW_x0020and_x0020TVD = 41,
	target_x0020center = 42,
	target_x0020offset = 43,
	tie_x0020in_x0020point = 44,
	turnrate_x0020to_x0020AZI = 45,
	turnrate_x0020to_x0020delta_MD = 46,
	turnrate_x0020to_x0020MD = 47,
	turnrate_x0020to_x0020TVD = 48,
	unknown = 49
};
#endif

/* witsml1_4ForGsoap.h:9269 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularAssembly
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularAssembly (-314)

/* witsml14:TubularAssembly */
enum class witsml14__TubularAssembly {
	drilling = 0,
	directional_x0020drilling = 1,
	fishing = 2,
	condition_x0020mud = 3,
	tubing_x0020conveyed_x0020logging = 4,
	cementing = 5,
	casing = 6,
	clean_x0020out = 7,
	completion_x0020or_x0020testing = 8,
	coring = 9,
	hole_x0020opening_x0020or_x0020underreaming = 10,
	milling_x0020or_x0020dressing_x0020or_x0020cutting = 11,
	wiper_x0020or_x0020check_x0020or_x0020reaming = 12,
	unknown = 13
};
#endif

/* witsml1_4ForGsoap.h:9334 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularComponent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularComponent (-315)

/* witsml14:TubularComponent */
enum class witsml14__TubularComponent {
	non_magnetic_x0020stabilizer = 0,
	non_magnetic_x0020collar = 1,
	stabilizer = 2,
	adjustable_x0020kickoff = 3,
	accelerator = 4,
	rotary_x0020steering_x0020tool = 5,
	sub_bar_x0020catcher = 6,
	sub_bent = 7,
	bit_x0020core_x0020diamond = 8,
	bit_x0020core_x0020PDC = 9,
	bit_x0020diamond_x0020fixed_x0020cut = 10,
	bit_x0020insert_x0020roller_x0020cone = 11,
	bit_x0020mill_x0020tooth_x0020roller_x0020cone = 12,
	bit_x0020PDC_x0020fixed_x0020cutter = 13,
	sub_bit = 14,
	bridge_x0020plug = 15,
	bullnose = 16,
	bull_x0020plug = 17,
	sub_bumper = 18,
	casing = 19,
	casing_x0020cutter = 20,
	hanger_x0020casing_x0020subsea = 21,
	hanger_x0020casing_x0020surface = 22,
	casing_x0020head = 23,
	catch_x0020assembly = 24,
	sub_catcher = 25,
	sub_circulation = 26,
	coiled_x0020tubing_x0020in_x0020hole = 27,
	coiled_x0020tubing_x0020on_x0020coil = 28,
	drill_x0020pipe_x0020compressive = 29,
	sub_cone = 30,
	core_x0020barrel = 31,
	core_x0020orientation_x0020barrel = 32,
	sub_crossover = 33,
	casing_x0020crossover = 34,
	sub_dart = 35,
	die_x0020collar = 36,
	die_x0020collar_x0020LH = 37,
	directional_x0020guidance_x0020system = 38,
	drill_x0020collar = 39,
	drill_x0020pipe = 40,
	drill_x0020pipe_x0020LH = 41,
	drill_x0020stem_x0020test_x0020BHA = 42,
	drive_x0020pipe = 43,
	dual_x0020catch_x0020assembly = 44,
	extension_x0020bowl_x0020overshot = 45,
	extension_x0020sub_overshot = 46,
	float_x0020collar = 47,
	float_x0020shoe = 48,
	sub_float = 49,
	flow_x0020head = 50,
	guide_x0020shoe = 51,
	MWD_x0020hang_x0020off_x0020sub = 52,
	heavy_x0020weight_x0020drill_x0020pipe = 53,
	heavy_x0020weight_x0020drill_x0020pipe_x0020LH = 54,
	riser_x0020high_x0020pressure = 55,
	bit_x0020hole_x0020opener = 56,
	casing_x0020inflatable_x0020packer = 57,
	motor_x0020instrumented = 58,
	jar = 59,
	sub_jetting = 60,
	junk_x0020basket = 61,
	junk_x0020basket_x0020reverse_x0020circulation = 62,
	sub_junk = 63,
	kelly = 64,
	keyseat_x0020wiper_x0020tool = 'A',
	landing_x0020float_x0020collar = 'B',
	lead_x0020impression_x0020block = 'C',
	liner = 'D',
	hanger_x0020liner = 'E',
	magnet = 'F',
	riser_x0020marine = 'G',
	mill_x0020dress = 'H',
	mill_x0020flat_x0020bottom = 'I',
	mill_x0020hollow = 'J',
	mill_x0020polish = 'K',
	mill_x0020section = 'L',
	mill_x0020taper = 'M',
	mill_x0020washover = 'N',
	mill_x0020packer_x0020picker_x0020assembly = 'O',
	millout_x0020extension = 'P',
	multilateral_x0020hanger_x0020running_x0020tool = 'Q',
	hanger_x0020mud_x0020line = 'R',
	motor = 'S',
	mule_x0020shoe = 'T',
	logging_x0020while_x0020drilling_x0020tool = 'U',
	stabilizer_x0020near_x0020bit_x0020roller_x0020reamer = 'V',
	stabilizer_x0020near_x0020bit = 'W',
	stabilizer_x0020non_rotating = 'X',
	sub_orienting = 'Y',
	other = 'Z',
	overshot = 91,
	overshot_x0020LH = 92,
	oversize_x0020lip_x0020guide_x0020overshot = 93,
	packer = 94,
	polished_x0020bore_x0020receptacle = 95,
	mill_x0020pilot = 96,
	pipe_x0020cutter = 'a',
	ported_x0020stinger = 'b',
	sub_ported = 'c',
	prepacked_x0020screens = 'd',
	sub_pressure_x0020relief = 'e',
	riser_x0020production = 'f',
	MWD_x0020pulser = 'g',
	sub_pump_x0020out = 'h',
	sub_restrictor = 'i',
	packer_x0020retrieve_x0020TT_x0020squeeze = 'j',
	reversing_x0020tool = 'k',
	stabilizer_x0020string_x0020roller_x0020reamer = 'l',
	packer_x0020RTTS = 'm',
	running_x0020tool = 'n',
	safety_x0020joint = 'o',
	safety_x0020joint_x0020LH = 'p',
	sub_saver = 'q',
	scab_x0020liner_x0020bit_x0020guide = 'r',
	scraper = 's',
	scratchers = 't',
	casing_x0020shoe_x0020screw_in = 'u',
	sub_shock = 'v',
	drill_x0020collar_x0020short = 'w',
	sub_side_x0020entry = 'x',
	slotted_x0020liner = 'y',
	spear = 'z',
	stage_x0020cement_x0020collar = 123,
	motor_x0020steerable = 124,
	packer_x0020storm_x0020valve_x0020RTTS = 125,
	stabilizer_x0020string = 126,
	surface_x0020pipe = 127,
	taper_x0020tap = 128,
	taper_x0020tap_x0020LH = 129,
	tubing_conveyed_x0020perforating_x0020gun = 130,
	thruster = 131,
	tieback_x0020polished_x0020bore_x0020receptacle = 132,
	tieback_x0020stinger = 133,
	tubing = 134,
	hanger_x0020tubing = 135,
	turbine = 136,
	bit_x0020under_x0020reamer = 137,
	stabilizer_x0020variable_x0020blade = 138,
	washover_x0020pipe = 139,
	mill_x0020watermelon = 140,
	whipstock = 141,
	whipstock_x0020anchor = 142,
	stabilizer_x0020turbo_x0020back = 143,
	stabilizer_x0020inline = 144,
	stabilizer_x0020steerable = 145,
	sub_stop = 146,
	sub_filter = 147,
	mill_x0020casing_x0020cutting = 148,
	reamer = 149,
	unknown = 150
};
#endif

/* witsml1_4ForGsoap.h:10097 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellControlIncidentType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellControlIncidentType (-317)

/* witsml14:WellControlIncidentType */
enum class witsml14__WellControlIncidentType {
	shallow_x0020gas_x0020kick = 0,
	water_x0020kick = 1,
	oil_x0020kick = 2,
	gas_x0020kick = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:10135 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellDirection (-318)

/* witsml14:WellDirection */
enum class witsml14__WellDirection {
	huff_n_puff = 0,
	injector = 1,
	producer = 2,
	uncertain = 3,
	unknown = 4
};
#endif

/* witsml1_4ForGsoap.h:10172 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellFluid (-319)

/* witsml14:WellFluid */
enum class witsml14__WellFluid {
	air = 0,
	condensate = 1,
	dry = 2,
	gas = 3,
	gas_water = 4,
	non_x0020HC_x0020gas = 5,
	non_x0020HC_x0020gas_x0020_x002d__x0020CO2 = 6,
	oil = 7,
	oil_gas = 8,
	oil_water = 9,
	steam = 10,
	water = 11,
	water_x0020_x002d__x0020brine = 12,
	water_x0020_x002d__x0020fresh_x0020water = 13,
	unknown = 14
};
#endif

/* witsml1_4ForGsoap.h:10255 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellKillingProcedureType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellKillingProcedureType (-320)

/* witsml14:WellKillingProcedureType */
enum class witsml14__WellKillingProcedureType {
	drillers_x0020method = 0,
	wait_x0020and_x0020weight = 1,
	bullheading = 2,
	lubricate_x0020and_x0020bleed = 3,
	forward_x0020circulation = 4,
	reverse_x0020circulation = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:10302 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellNamingSystem
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellNamingSystem (-321)

/* witsml14:WellNamingSystem */
enum class witsml14__WellNamingSystem {
	DTI = 0,
	API = 1,
	NPD_x0020code = 2,
	NPD_x0020number = 3,
	local_x0020field = 4,
	prospect = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:10343 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellTestType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellTestType (-322)

/* witsml14:WellTestType */
enum class witsml14__WellTestType {
	drill_x0020stem_x0020test = 0,
	production_x0020test = 1,
	unknown = 2
};
#endif

/* witsml1_4ForGsoap.h:10370 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreShape (-323)

/* witsml14:WellboreShape */
enum class witsml14__WellboreShape {
	build_x0020and_x0020hold = 0,
	deviated = 1,
	double_x0020kickoff = 2,
	horizontal = 3,
	S_shaped = 4,
	vertical = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:10417 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreType (-324)

/* witsml14:WellboreType */
enum class witsml14__WellboreType {
	bypass = 0,
	initial = 1,
	redrill = 2,
	reentry = 3,
	respud = 4,
	sidetrack = 5,
	unknown = 6
};
#endif

/* witsml1_4ForGsoap.h:10464 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellPurpose (-325)

/* witsml14:WellPurpose */
enum class witsml14__WellPurpose {
	appraisal = 0,
	appraisal_x0020_x002d__x0020confirmation_x0020appraisal = 1,
	appraisal_x0020_x002d__x0020exploratory_x0020appraisal = 2,
	exploration = 3,
	exploration_x0020_x002d__x0020deeper_pool_x0020wildcat = 4,
	exploration_x0020_x002d__x0020new_field_x0020wildcat = 5,
	exploration_x0020_x002d__x0020new_pool_x0020wildcat = 6,
	exploration_x0020_x002d__x0020outpost_x0020wildcat = 7,
	exploration_x0020_x002d__x0020shallower_pool_x0020wildcat = 8,
	development = 9,
	development_x0020_x002d__x0020infill_x0020development = 10,
	development_x0020_x002d__x0020injector = 11,
	development_x0020_x002d__x0020producer = 12,
	fluid_x0020storage = 13,
	fluid_x0020storage_x0020_x002d__x0020gas_x0020storage = 14,
	general_x0020srvc = 15,
	general_x0020srvc_x0020_x002d__x0020borehole_x0020re_acquisition = 16,
	general_x0020srvc_x0020_x002d__x0020observation = 17,
	general_x0020srvc_x0020_x002d__x0020relief = 18,
	general_x0020srvc_x0020_x002d__x0020research = 19,
	general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020drill_x0020test = 20,
	general_x0020srvc_x0020_x002d__x0020research_x0020_x002d__x0020strat_x0020test = 21,
	general_x0020srvc_x0020_x002d__x0020waste_x0020disposal = 22,
	mineral = 23,
	unknown = 24
};
#endif

/* witsml1_4ForGsoap.h:10601 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellStatus (-326)

/* witsml14:WellStatus */
enum class witsml14__WellStatus {
	abandoned = 0,
	active = 1,
	active_x0020_x002d__x0020injecting = 2,
	active_x0020_x002d__x0020producing = 3,
	completed = 4,
	drilling = 5,
	partially_x0020plugged = 6,
	permitted = 7,
	plugged_x0020and_x0020abandoned = 8,
	proposed = 9,
	sold = 10,
	suspended = 11,
	temporarily_x0020abandoned = 12,
	testing = 13,
	tight = 14,
	working_x0020over = 15,
	unknown = 16
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/* custom/struct_tm.h:67 */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

typedef struct tm xsd__dateTime;
#endif

/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct __witsml14__obj_USCOREwell_sequence;	/* witsml1_4ForGsoap.h:10751 */
class witsml14__obj_USCOREwell;	/* witsml1_4ForGsoap.h:157 */
class witsml14__cs_USCOREdocumentInfo;	/* witsml1_4ForGsoap.h:159 */
class witsml14__cs_USCOREdocumentFileCreation;	/* witsml1_4ForGsoap.h:161 */
class witsml14__cs_USCOREdocumentSecurityInfo;	/* witsml1_4ForGsoap.h:297 */
class witsml14__cs_USCOREextensionNameValue;	/* witsml1_4ForGsoap.h:299 */
class witsml14__cs_USCOREdocumentAudit;	/* witsml1_4ForGsoap.h:301 */
class witsml14__cs_USCOREdocumentEvent;	/* witsml1_4ForGsoap.h:303 */
class witsml14__cs_USCORElocation;	/* witsml1_4ForGsoap.h:305 */
union _witsml14__union_cs_USCOREwellDatum;	/* witsml1_4ForGsoap.h:11518 */
class witsml14__cs_USCOREwellDatum;	/* witsml1_4ForGsoap.h:307 */
class witsml14__cs_USCORErefWellWellbore;	/* witsml1_4ForGsoap.h:309 */
class witsml14__cs_USCORErefWellWellboreRig;	/* witsml1_4ForGsoap.h:311 */
class witsml14__cs_USCOREpublicLandSurveySystem;	/* witsml1_4ForGsoap.h:313 */
class witsml14__cs_USCOREreferencePoint;	/* witsml1_4ForGsoap.h:315 */
union _witsml14__union_cs_USCOREwellCRS;	/* witsml1_4ForGsoap.h:11886 */
class witsml14__cs_USCOREwellCRS;	/* witsml1_4ForGsoap.h:317 */
class witsml14__cs_USCOREgeodeticModel;	/* witsml1_4ForGsoap.h:319 */
class witsml14__cs_USCOREprojectionx;	/* witsml1_4ForGsoap.h:321 */
union _witsml14__union_cs_USCORElocalCRS;	/* witsml1_4ForGsoap.h:12265 */
class witsml14__cs_USCORElocalCRS;	/* witsml1_4ForGsoap.h:323 */
class witsml14__cs_USCOREcommonData;	/* witsml1_4ForGsoap.h:325 */
class witsml14__cs_USCOREextensionAny;	/* witsml1_4ForGsoap.h:327 */
class witsml14__cs_USCOREcustomData;	/* witsml1_4ForGsoap.h:329 */
struct __witsml14__obj_USCOREwellbore_sequence;	/* witsml1_4ForGsoap.h:12520 */
class witsml14__obj_USCOREwellbore;	/* witsml1_4ForGsoap.h:333 */
struct __witsml14__obj_USCOREtrajectory_sequence;	/* witsml1_4ForGsoap.h:12736 */
class witsml14__obj_USCOREtrajectory;	/* witsml1_4ForGsoap.h:337 */
class witsml14__cs_USCOREtrajectoryStation;	/* witsml1_4ForGsoap.h:339 */
class witsml14__cs_USCOREstnTrajRawData;	/* witsml1_4ForGsoap.h:341 */
class witsml14__cs_USCOREstnTrajCorUsed;	/* witsml1_4ForGsoap.h:343 */
class witsml14__cs_USCOREstnTrajValid;	/* witsml1_4ForGsoap.h:345 */
class witsml14__cs_USCOREstnTrajMatrixCov;	/* witsml1_4ForGsoap.h:347 */
class witsml14__cs_USCORErefWellboreTrajectoryStation;	/* witsml1_4ForGsoap.h:349 */
class witsml14__cs_USCORErefWellboreTrajectory;	/* witsml1_4ForGsoap.h:351 */
class abstract__abstractObject;	/* witsml1_4ForGsoap.h:353 */
class witsml14__obj_USCOREwells;	/* witsml1_4ForGsoap.h:155 */
class witsml14__obj_USCOREwellbores;	/* witsml1_4ForGsoap.h:331 */
class witsml14__obj_USCOREtrajectorys;	/* witsml1_4ForGsoap.h:335 */
class witsml14__cost;	/* witsml1_4ForGsoap.h:207 */
class witsml14__abstractMeasure;	/* witsml1_4ForGsoap.h:295 */
class witsml14__timestampedTimeZone;	/* witsml1_4ForGsoap.h:163 */
class witsml14__yAxisAzimuth;	/* witsml1_4ForGsoap.h:165 */
class witsml14__volumePerVolumeMeasurePercent;	/* witsml1_4ForGsoap.h:167 */
class witsml14__measureOrQuantity;	/* witsml1_4ForGsoap.h:169 */
class witsml14__genericMeasure;	/* witsml1_4ForGsoap.h:171 */
class witsml14__ratioGenericMeasure;	/* witsml1_4ForGsoap.h:173 */
class witsml14__refNameString;	/* witsml1_4ForGsoap.h:175 */
class witsml14__refObjectString;	/* witsml1_4ForGsoap.h:177 */
class witsml14__refPositiveCount;	/* witsml1_4ForGsoap.h:179 */
class witsml14__extensionvalue;	/* witsml1_4ForGsoap.h:183 */
class witsml14__nameStruct;	/* witsml1_4ForGsoap.h:185 */
class witsml14__shortNameStruct;	/* witsml1_4ForGsoap.h:187 */
class witsml14__wellKnownNameStruct;	/* witsml1_4ForGsoap.h:189 */
class witsml14__objectSequence;	/* witsml1_4ForGsoap.h:191 */
class witsml14__lithostratigraphyStruct;	/* witsml1_4ForGsoap.h:193 */
class witsml14__chronostratigraphyStruct;	/* witsml1_4ForGsoap.h:195 */
class witsml14__measuredDepthCoord;	/* witsml1_4ForGsoap.h:197 */
class witsml14__wellVerticalDepthCoord;	/* witsml1_4ForGsoap.h:199 */
class witsml14__wellElevationCoord;	/* witsml1_4ForGsoap.h:201 */
class witsml14__footageNorthSouth;	/* witsml1_4ForGsoap.h:203 */
class witsml14__footageEastWest;	/* witsml1_4ForGsoap.h:205 */
class witsml14__indexedObject;	/* witsml1_4ForGsoap.h:209 */
class witsml14__accelerationLinearMeasure;	/* witsml1_4ForGsoap.h:211 */
class witsml14__anglePerLengthMeasure;	/* witsml1_4ForGsoap.h:213 */
class witsml14__anglePerTimeMeasure;	/* witsml1_4ForGsoap.h:215 */
class witsml14__areaMeasure;	/* witsml1_4ForGsoap.h:217 */
class witsml14__areaPerAreaMeasure;	/* witsml1_4ForGsoap.h:219 */
class witsml14__compressibilityMeasure;	/* witsml1_4ForGsoap.h:221 */
class witsml14__densityMeasure;	/* witsml1_4ForGsoap.h:223 */
class witsml14__dimensionlessMeasure;	/* witsml1_4ForGsoap.h:225 */
class witsml14__dynamicViscosityMeasure;	/* witsml1_4ForGsoap.h:227 */
class witsml14__electricCurrentMeasure;	/* witsml1_4ForGsoap.h:229 */
class witsml14__electricPotentialMeasure;	/* witsml1_4ForGsoap.h:231 */
class witsml14__equivalentPerMassMeasure;	/* witsml1_4ForGsoap.h:233 */
class witsml14__forceMeasure;	/* witsml1_4ForGsoap.h:235 */
class witsml14__forcePerLengthMeasure;	/* witsml1_4ForGsoap.h:237 */
class witsml14__forcePerVolumeMeasure;	/* witsml1_4ForGsoap.h:239 */
class witsml14__illuminanceMeasure;	/* witsml1_4ForGsoap.h:241 */
class witsml14__lengthMeasure;	/* witsml1_4ForGsoap.h:243 */
class witsml14__lengthPerLengthMeasure;	/* witsml1_4ForGsoap.h:245 */
class witsml14__magneticInductionMeasure;	/* witsml1_4ForGsoap.h:247 */
class witsml14__massConcentrationMeasure;	/* witsml1_4ForGsoap.h:249 */
class witsml14__massMeasure;	/* witsml1_4ForGsoap.h:251 */
class witsml14__massPerLengthMeasure;	/* witsml1_4ForGsoap.h:253 */
class witsml14__momentOfForceMeasure;	/* witsml1_4ForGsoap.h:255 */
class witsml14__perLengthMeasure;	/* witsml1_4ForGsoap.h:257 */
class witsml14__permeabilityRockMeasure;	/* witsml1_4ForGsoap.h:259 */
class witsml14__planeAngleMeasure;	/* witsml1_4ForGsoap.h:261 */
class witsml14__powerMeasure;	/* witsml1_4ForGsoap.h:263 */
class witsml14__pressureMeasure;	/* witsml1_4ForGsoap.h:265 */
class witsml14__relativePowerMeasure;	/* witsml1_4ForGsoap.h:267 */
class witsml14__specificHeatCapacityMeasure;	/* witsml1_4ForGsoap.h:269 */
class witsml14__specificVolumeMeasure;	/* witsml1_4ForGsoap.h:271 */
class witsml14__standardVolumeMeasure;	/* witsml1_4ForGsoap.h:273 */
class witsml14__standardVolumePerTimeMeasure;	/* witsml1_4ForGsoap.h:275 */
class witsml14__thermalConductivityMeasure;	/* witsml1_4ForGsoap.h:277 */
class witsml14__thermalVolumetricExpansionMeasure;	/* witsml1_4ForGsoap.h:279 */
class witsml14__thermodynamicTemperatureMeasure;	/* witsml1_4ForGsoap.h:281 */
class witsml14__timeMeasure;	/* witsml1_4ForGsoap.h:283 */
class witsml14__velocityMeasure;	/* witsml1_4ForGsoap.h:285 */
class witsml14__volumeMeasure;	/* witsml1_4ForGsoap.h:287 */
class witsml14__volumeFlowRateMeasure;	/* witsml1_4ForGsoap.h:289 */
class witsml14__volumePerLengthMeasure;	/* witsml1_4ForGsoap.h:291 */
class witsml14__volumePerVolumeMeasure;	/* witsml1_4ForGsoap.h:293 */
class witsml14__timestampedCommentString;	/* witsml1_4ForGsoap.h:181 */

/* custom/struct_tm.h:57 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_tm
#define SOAP_TYPE_gsoap_witsml1_4_tm (-8)
#if 0 /* Volatile: declared external of the data binding interface and not redeclared here */
struct SOAP_CMAC tm {
      public:
        /** Required element 'tm-sec' of XML schema type 'xsd:int' */
        int tm_sec;
        /** Required element 'tm-min' of XML schema type 'xsd:int' */
        int tm_min;
        /** Required element 'tm-hour' of XML schema type 'xsd:int' */
        int tm_hour;
        /** Required element 'tm-mday' of XML schema type 'xsd:int' */
        int tm_mday;
        /** Required element 'tm-mon' of XML schema type 'xsd:int' */
        int tm_mon;
        /** Required element 'tm-year' of XML schema type 'xsd:int' */
        int tm_year;
        /** Required element 'tm-isdst' of XML schema type 'xsd:int' */
        int tm_isdst;
};
#endif
#endif

/* witsml1_4ForGsoap.h:10751 */
#ifndef SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwell_sequence
#define SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwell_sequence (-328)
/* Wrapper: */
struct SOAP_CMAC __witsml14__obj_USCOREwell_sequence {
      public:
        /** Optional element 'witsml14:nameLegal' of XML schema type 'witsml14:nameString' */
        std::string *nameLegal;
        /** Optional element 'witsml14:numLicense' of XML schema type 'witsml14:nameString' */
        std::string *numLicense;
        /** Optional element 'witsml14:numGovt' of XML schema type 'witsml14:nameString' */
        std::string *numGovt;
        /** Optional element 'witsml14:dTimLicense' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimLicense;
        /** Optional element 'witsml14:field' of XML schema type 'witsml14:nameString' */
        std::string *field;
        /** Optional element 'witsml14:country' of XML schema type 'witsml14:str32' */
        std::string *country;
        /** Optional element 'witsml14:state' of XML schema type 'witsml14:str32' */
        std::string *state;
        /** Optional element 'witsml14:county' of XML schema type 'witsml14:str32' */
        std::string *county;
        /** Optional element 'witsml14:region' of XML schema type 'witsml14:str32' */
        std::string *region;
        /** Optional element 'witsml14:district' of XML schema type 'witsml14:str32' */
        std::string *district;
        /** Optional element 'witsml14:block' of XML schema type 'witsml14:str32' */
        std::string *block;
        /** Required element 'witsml14:timeZone' of XML schema type 'witsml14:timeZone' */
        std::string timeZone;
        /** Optional element 'witsml14:operator' of XML schema type 'witsml14:nameString' */
        std::string *operator_;
        /** Optional element 'witsml14:operatorDiv' of XML schema type 'witsml14:nameString' */
        std::string *operatorDiv;
        /** Optional element 'witsml14:pcInterest' of XML schema type 'witsml14:dimensionlessMeasure' */
        witsml14__dimensionlessMeasure *pcInterest;
        /** Optional element 'witsml14:numAPI' of XML schema type 'witsml14:str32' */
        std::string *numAPI;
        /** Optional element 'witsml14:statusWell' of XML schema type 'witsml14:WellStatus' */
        witsml14__WellStatus *statusWell;
        /** Optional element 'witsml14:purposeWell' of XML schema type 'witsml14:WellPurpose' */
        witsml14__WellPurpose *purposeWell;
        /** Optional element 'witsml14:fluidWell' of XML schema type 'witsml14:WellFluid' */
        witsml14__WellFluid *fluidWell;
        /** Optional element 'witsml14:directionWell' of XML schema type 'witsml14:WellDirection' */
        witsml14__WellDirection *directionWell;
        /** Optional element 'witsml14:dTimSpud' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimSpud;
        /** Optional element 'witsml14:dTimPa' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimPa;
        /** Optional element 'witsml14:wellheadElevation' of XML schema type 'witsml14:wellElevationCoord' */
        witsml14__wellElevationCoord *wellheadElevation;
        /** Optional element 'witsml14:wellDatum' of XML schema type 'witsml14:cs_wellDatum' */
        std::vector<witsml14__cs_USCOREwellDatum *> wellDatum;
        /** Optional element 'witsml14:groundElevation' of XML schema type 'witsml14:wellElevationCoord' */
        witsml14__wellElevationCoord *groundElevation;
        /** Optional element 'witsml14:waterDepth' of XML schema type 'witsml14:lengthMeasure' */
        witsml14__lengthMeasure *waterDepth;
        /** Optional element 'witsml14:wellLocation' of XML schema type 'witsml14:cs_location' */
        std::vector<witsml14__cs_USCORElocation *> wellLocation;
        /** Optional element 'witsml14:wellPublicLandSurveySystemLocation' of XML schema type 'witsml14:cs_publicLandSurveySystem' */
        witsml14__cs_USCOREpublicLandSurveySystem *wellPublicLandSurveySystemLocation;
        /** Optional element 'witsml14:referencePoint' of XML schema type 'witsml14:cs_referencePoint' */
        std::vector<witsml14__cs_USCOREreferencePoint *> referencePoint;
        /** Optional element 'witsml14:wellCRS' of XML schema type 'witsml14:cs_wellCRS' */
        std::vector<witsml14__cs_USCOREwellCRS *> wellCRS;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwell_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwell_sequence; }
        /** Constructor with member initializations */
        __witsml14__obj_USCOREwell_sequence() : nameLegal(), numLicense(), numGovt(), dTimLicense(), field(), country(), state(), county(), region(), district(), block(), timeZone(), operator_(), operatorDiv(), pcInterest(), numAPI(), statusWell(), purposeWell(), fluidWell(), directionWell(), dTimSpud(), dTimPa(), wellheadElevation(), wellDatum(), groundElevation(), waterDepth(), wellLocation(), wellPublicLandSurveySystemLocation(), referencePoint(), wellCRS() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __witsml14__obj_USCOREwell_sequence * SOAP_FMAC2 soap_instantiate___witsml14__obj_USCOREwell_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:157 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell (-13)
/* complex XML schema type 'witsml14:obj_well': */
class SOAP_CMAC witsml14__obj_USCOREwell {
      public:
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        struct __witsml14__obj_USCOREwell_sequence *__obj_USCOREwell_sequence;
        /// Optional element 'witsml14:commonData' of XML schema type 'witsml14:cs_commonData'
        witsml14__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml14:customData' of XML schema type 'witsml14:cs_customData'
        witsml14__cs_USCOREcustomData *customData;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREwell, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREwell *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREwell); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREwell() : name(), __obj_USCOREwell_sequence(), commonData(), customData(), uid(), soap() { }
        virtual ~witsml14__obj_USCOREwell() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREwell(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREwell * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREwell(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:159 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo (-14)
/* complex XML schema type 'witsml14:cs_documentInfo': */
class SOAP_CMAC witsml14__cs_USCOREdocumentInfo {
      public:
        /// Required element 'witsml14:documentName' of XML schema type 'witsml14:nameStruct'
        witsml14__nameStruct *documentName;
        /// Optional element 'witsml14:documentAlias' of XML schema type 'witsml14:nameStruct'
        std::vector<witsml14__nameStruct *> documentAlias;
        /// Optional element 'witsml14:documentDate' of XML schema type 'witsml14:timestamp'
        struct tm *documentDate;
        /// Optional element 'witsml14:documentClass' of XML schema type 'witsml14:nameStruct'
        std::vector<witsml14__nameStruct *> documentClass;
        /// Optional element 'witsml14:fileCreationInformation' of XML schema type 'witsml14:cs_documentFileCreation'
        witsml14__cs_USCOREdocumentFileCreation *fileCreationInformation;
        /// Sequence of 0 to 5 elements 'witsml14:securityInformation' of XML schema type 'witsml14:cs_documentSecurityInfo'
        std::vector<witsml14__cs_USCOREdocumentSecurityInfo *> securityInformation;
        /// Optional element 'witsml14:disclaimer' of XML schema type 'witsml14:commentString'
        std::string *disclaimer;
        /// Optional element 'witsml14:auditTrail' of XML schema type 'witsml14:cs_documentAudit'
        witsml14__cs_USCOREdocumentAudit *auditTrail;
        /// Optional element 'witsml14:owner' of XML schema type 'witsml14:nameString'
        std::string *owner;
        /// Optional element 'witsml14:comment' of XML schema type 'witsml14:commentString'
        std::string *comment;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREdocumentInfo, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREdocumentInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREdocumentInfo); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREdocumentInfo() : documentName(), documentAlias(), documentDate(), documentClass(), fileCreationInformation(), securityInformation(), disclaimer(), auditTrail(), owner(), comment(), soap() { }
        virtual ~witsml14__cs_USCOREdocumentInfo() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREdocumentInfo(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREdocumentInfo * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREdocumentInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:161 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation (-15)
/* complex XML schema type 'witsml14:cs_documentFileCreation': */
class SOAP_CMAC witsml14__cs_USCOREdocumentFileCreation {
      public:
        /// Typedef witsml14__timestamp with custom serializer for struct tm
        struct tm fileCreationDate;
        /// Optional element 'witsml14:softwareName' of XML schema type 'witsml14:nameString'
        std::string *softwareName;
        /// Optional element 'witsml14:fileCreator' of XML schema type 'witsml14:nameString'
        std::string *fileCreator;
        /// Optional element 'witsml14:comment' of XML schema type 'witsml14:commentString'
        std::string *comment;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREdocumentFileCreation, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREdocumentFileCreation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREdocumentFileCreation); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREdocumentFileCreation() : fileCreationDate(), softwareName(), fileCreator(), comment(), soap() { }
        virtual ~witsml14__cs_USCOREdocumentFileCreation() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREdocumentFileCreation(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREdocumentFileCreation * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREdocumentFileCreation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:297 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo (-83)
/* complex XML schema type 'witsml14:cs_documentSecurityInfo': */
class SOAP_CMAC witsml14__cs_USCOREdocumentSecurityInfo {
      public:
        /// Optional element 'witsml14:class' of XML schema type 'witsml14:kindString'
        std::string *class_;
        /// Optional element 'witsml14:securitySystem' of XML schema type 'witsml14:kindString'
        std::string *securitySystem;
        /// Optional element 'witsml14:endDate' of XML schema type 'witsml14:timestamp'
        struct tm *endDate;
        /// Optional element 'witsml14:comment' of XML schema type 'witsml14:commentString'
        std::string *comment;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREdocumentSecurityInfo, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREdocumentSecurityInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREdocumentSecurityInfo); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREdocumentSecurityInfo() : class_(), securitySystem(), endDate(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREdocumentSecurityInfo() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREdocumentSecurityInfo(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREdocumentSecurityInfo * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREdocumentSecurityInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:299 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue (-84)
/* complex XML schema type 'witsml14:cs_extensionNameValue': */
class SOAP_CMAC witsml14__cs_USCOREextensionNameValue {
      public:
        /// Required element 'witsml14:name' of XML schema type 'witsml14:ExtensionName'
        std::string name;
        /// Required element 'witsml14:value' of XML schema type 'witsml14:extensionvalue'
        witsml14__extensionvalue *value;
        /// Required element 'witsml14:dataType' of XML schema type 'witsml14:PrimitiveType'
        witsml14__PrimitiveType dataType;
        /// Optional element 'witsml14:dTim' of XML schema type 'witsml14:timestamp'
        struct tm *dTim;
        /// Optional element 'witsml14:md' of XML schema type 'witsml14:measuredDepthCoord'
        witsml14__measuredDepthCoord *md;
        /// Optional element 'witsml14:index' of XML schema type 'witsml14:positiveCount'
        short *index;
        /// Optional element 'witsml14:measureClass' of XML schema type 'witsml14:MeasureClass'
        std::string *measureClass;
        /// Optional element 'witsml14:description' of XML schema type 'witsml14:descriptionString'
        std::string *description;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREextensionNameValue, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREextensionNameValue *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREextensionNameValue); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREextensionNameValue() : name(), value(), dataType(), dTim(), md(), index(), measureClass(), description(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREextensionNameValue() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREextensionNameValue(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREextensionNameValue * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREextensionNameValue(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:301 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit (-85)
/* complex XML schema type 'witsml14:cs_documentAudit': */
class SOAP_CMAC witsml14__cs_USCOREdocumentAudit {
      public:
        /// Required element 'witsml14:event' of XML schema type 'witsml14:cs_documentEvent'
        std::vector<witsml14__cs_USCOREdocumentEvent *> event;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREdocumentAudit, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREdocumentAudit *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREdocumentAudit); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREdocumentAudit() : event(), soap() { }
        virtual ~witsml14__cs_USCOREdocumentAudit() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREdocumentAudit(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREdocumentAudit * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREdocumentAudit(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:303 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent (-86)
/* complex XML schema type 'witsml14:cs_documentEvent': */
class SOAP_CMAC witsml14__cs_USCOREdocumentEvent {
      public:
        /// Typedef witsml14__timestamp with custom serializer for struct tm
        struct tm eventDate;
        /// Optional element 'witsml14:eventType' of XML schema type 'witsml14:nameString'
        std::string *eventType;
        /// Optional element 'witsml14:responsibleParty' of XML schema type 'witsml14:nameString'
        std::string *responsibleParty;
        /// Optional element 'witsml14:comment' of XML schema type 'witsml14:commentString'
        std::string *comment;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREdocumentEvent, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREdocumentEvent *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREdocumentEvent); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREdocumentEvent() : eventDate(), eventType(), responsibleParty(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREdocumentEvent() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREdocumentEvent(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREdocumentEvent * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREdocumentEvent(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:305 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation (-87)
/* complex XML schema type 'witsml14:cs_location': */
class SOAP_CMAC witsml14__cs_USCORElocation {
      public:
        /// Optional element 'witsml14:wellCRS' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellCRS;
        /// Optional element 'witsml14:latitude' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *latitude;
        /// Optional element 'witsml14:longitude' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *longitude;
        /// Optional element 'witsml14:easting' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *easting;
        /// Optional element 'witsml14:northing' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *northing;
        /// Optional element 'witsml14:westing' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *westing;
        /// Optional element 'witsml14:southing' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *southing;
        /// Optional element 'witsml14:projectedX' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *projectedX;
        /// Optional element 'witsml14:projectedY' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *projectedY;
        /// Optional element 'witsml14:localX' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *localX;
        /// Optional element 'witsml14:localY' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *localY;
        /// Optional element 'witsml14:original' of XML schema type 'witsml14:logicalBoolean'
        bool *original;
        /// Optional element 'witsml14:description' of XML schema type 'witsml14:descriptionString'
        std::string *description;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORElocation, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORElocation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORElocation); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORElocation() : wellCRS(), latitude(), longitude(), easting(), northing(), westing(), southing(), projectedX(), projectedY(), localX(), localY(), original(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCORElocation() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORElocation(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORElocation * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORElocation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:11518 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum (-374)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml14__union_cs_USCOREwellDatum
{
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum_datumName	(1)	/**< union variant selector value for member datumName */
        witsml14__wellKnownNameStruct *datumName;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum_datumCRS	(2)	/**< union variant selector value for member datumCRS */
        witsml14__refNameString *datumCRS;
};
#endif

/* witsml1_4ForGsoap.h:307 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum (-88)
/* complex XML schema type 'witsml14:cs_wellDatum': */
class SOAP_CMAC witsml14__cs_USCOREwellDatum {
      public:
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        /// Optional element 'witsml14:code' of XML schema type 'witsml14:ElevCodeEnum'
        witsml14__ElevCodeEnum *code;
        /// Union with union _witsml14__union_cs_USCOREwellDatum variant selector __union_cs_USCOREwellDatum set to one of: SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum_datumName SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellDatum_datumCRS
        int __union_cs_USCOREwellDatum;
        union _witsml14__union_cs_USCOREwellDatum union_cs_USCOREwellDatum;
        /// Optional element 'witsml14:kind' of XML schema type 'witsml14:kindString'
        std::vector<std::string> kind;
        /// Optional element 'witsml14:wellbore' of XML schema type 'witsml14:cs_refWellWellbore'
        witsml14__cs_USCORErefWellWellbore *wellbore;
        /// Optional element 'witsml14:rig' of XML schema type 'witsml14:cs_refWellWellboreRig'
        witsml14__cs_USCORErefWellWellboreRig *rig;
        /// Optional element 'witsml14:elevation' of XML schema type 'witsml14:wellElevationCoord'
        witsml14__wellElevationCoord *elevation;
        /// Optional element 'witsml14:measuredDepth' of XML schema type 'witsml14:measuredDepthCoord'
        witsml14__measuredDepthCoord *measuredDepth;
        /// Optional element 'witsml14:horizontalLocation' of XML schema type 'witsml14:cs_location'
        witsml14__cs_USCORElocation *horizontalLocation;
        /// Optional element 'witsml14:comment' of XML schema type 'witsml14:commentString'
        std::string *comment;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Required attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREwellDatum, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREwellDatum *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREwellDatum); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREwellDatum() : name(), code(), __union_cs_USCOREwellDatum(), kind(), wellbore(), rig(), elevation(), measuredDepth(), horizontalLocation(), comment(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREwellDatum() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREwellDatum(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREwellDatum * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREwellDatum(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:309 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore (-89)
/* complex XML schema type 'witsml14:cs_refWellWellbore': */
class SOAP_CMAC witsml14__cs_USCORErefWellWellbore {
      public:
        /// Required element 'witsml14:wellboreReference' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellboreReference;
        /// Optional element 'witsml14:wellParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORErefWellWellbore, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORErefWellWellbore *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORErefWellWellbore); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORErefWellWellbore() : wellboreReference(), wellParent(), soap() { }
        virtual ~witsml14__cs_USCORErefWellWellbore() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORErefWellWellbore(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORErefWellWellbore * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORErefWellWellbore(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:311 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig (-90)
/* complex XML schema type 'witsml14:cs_refWellWellboreRig': */
class SOAP_CMAC witsml14__cs_USCORErefWellWellboreRig {
      public:
        /// Required element 'witsml14:rigReference' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *rigReference;
        /// Optional element 'witsml14:wellboreParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellboreParent;
        /// Optional element 'witsml14:wellParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORErefWellWellboreRig, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORErefWellWellboreRig *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORErefWellWellboreRig); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORErefWellWellboreRig() : rigReference(), wellboreParent(), wellParent(), soap() { }
        virtual ~witsml14__cs_USCORErefWellWellboreRig() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORErefWellWellboreRig(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORErefWellWellboreRig * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORErefWellWellboreRig(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:313 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem (-91)
/* complex XML schema type 'witsml14:cs_publicLandSurveySystem': */
class SOAP_CMAC witsml14__cs_USCOREpublicLandSurveySystem {
      public:
        /// Optional element 'witsml14:principalMeridian' of XML schema type 'witsml14:PrincipalMeridian'
        witsml14__PrincipalMeridian *principalMeridian;
        /// Optional element 'witsml14:range' of XML schema type 'witsml14:positiveCount'
        short *range;
        /// Optional element 'witsml14:rangeDir' of XML schema type 'witsml14:EastOrWest'
        witsml14__EastOrWest *rangeDir;
        /// Optional element 'witsml14:township' of XML schema type 'witsml14:positiveCount'
        short *township;
        /// Optional element 'witsml14:townshipDir' of XML schema type 'witsml14:NorthOrSouth'
        witsml14__NorthOrSouth *townshipDir;
        /// Optional element 'witsml14:section' of XML schema type 'witsml14:sectionNumber'
        std::string *section;
        /// Optional element 'witsml14:quarterSection' of XML schema type 'witsml14:publicLandSurveySystemQuarterSection'
        std::string *quarterSection;
        /// Optional element 'witsml14:quarterTownship' of XML schema type 'witsml14:publicLandSurveySystemQuarterTownship'
        std::string *quarterTownship;
        /// Optional element 'witsml14:footageNS' of XML schema type 'witsml14:footageNorthSouth'
        witsml14__footageNorthSouth *footageNS;
        /// Optional element 'witsml14:footageEW' of XML schema type 'witsml14:footageEastWest'
        witsml14__footageEastWest *footageEW;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREpublicLandSurveySystem, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREpublicLandSurveySystem *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREpublicLandSurveySystem); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREpublicLandSurveySystem() : principalMeridian(), range(), rangeDir(), township(), townshipDir(), section(), quarterSection(), quarterTownship(), footageNS(), footageEW(), soap() { }
        virtual ~witsml14__cs_USCOREpublicLandSurveySystem() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREpublicLandSurveySystem(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREpublicLandSurveySystem * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREpublicLandSurveySystem(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:315 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint (-92)
/* complex XML schema type 'witsml14:cs_referencePoint': */
class SOAP_CMAC witsml14__cs_USCOREreferencePoint {
      public:
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        /// Optional element 'witsml14:type' of XML schema type 'witsml14:kindString'
        std::string *type;
        /// Optional element 'witsml14:elevation' of XML schema type 'witsml14:wellElevationCoord'
        witsml14__wellElevationCoord *elevation;
        /// Optional element 'witsml14:measuredDepth' of XML schema type 'witsml14:measuredDepthCoord'
        witsml14__measuredDepthCoord *measuredDepth;
        /// Required element 'witsml14:location' of XML schema type 'witsml14:cs_location'
        std::vector<witsml14__cs_USCORElocation *> location;
        /// Optional element 'witsml14:description' of XML schema type 'witsml14:commentString'
        std::string *description;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREreferencePoint, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREreferencePoint *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREreferencePoint); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREreferencePoint() : name(), type(), elevation(), measuredDepth(), location(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREreferencePoint() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREreferencePoint(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREreferencePoint * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREreferencePoint(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:11886 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS (-387)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml14__union_cs_USCOREwellCRS
{
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_mapProjection	(1)	/**< union variant selector value for member mapProjection */
        witsml14__cs_USCOREprojectionx *mapProjection;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_geographic	(2)	/**< union variant selector value for member geographic */
        witsml14__cs_USCOREgeodeticModel *geographic;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_mapProjectionCRS	(3)	/**< union variant selector value for member mapProjectionCRS */
        witsml14__refNameString *mapProjectionCRS;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_geodeticCRS	(4)	/**< union variant selector value for member geodeticCRS */
        witsml14__refNameString *geodeticCRS;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_localCRS	(5)	/**< union variant selector value for member localCRS */
        witsml14__cs_USCORElocalCRS *localCRS;
};
#endif

/* witsml1_4ForGsoap.h:317 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS (-93)
/* complex XML schema type 'witsml14:cs_wellCRS': */
class SOAP_CMAC witsml14__cs_USCOREwellCRS {
      public:
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        /// Union with union _witsml14__union_cs_USCOREwellCRS variant selector __union_cs_USCOREwellCRS set to one of: SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_mapProjection SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_geographic SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_mapProjectionCRS SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_geodeticCRS SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCOREwellCRS_localCRS
        int __union_cs_USCOREwellCRS;
        union _witsml14__union_cs_USCOREwellCRS union_cs_USCOREwellCRS;
        /// Optional element 'witsml14:description' of XML schema type 'witsml14:descriptionString'
        std::string *description;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREwellCRS, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREwellCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREwellCRS); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREwellCRS() : name(), __union_cs_USCOREwellCRS(), description(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREwellCRS() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREwellCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREwellCRS * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREwellCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:319 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel (-94)
/* complex XML schema type 'witsml14:cs_geodeticModel': */
class SOAP_CMAC witsml14__cs_USCOREgeodeticModel {
      public:
        /// Optional element 'witsml14:nameCRS' of XML schema type 'witsml14:wellKnownNameStruct'
        witsml14__wellKnownNameStruct *nameCRS;
        /// Optional element 'witsml14:geodeticDatumCode' of XML schema type 'witsml14:GeodeticDatum'
        witsml14__GeodeticDatum *geodeticDatumCode;
        /// Optional element 'witsml14:xTranslation' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *xTranslation;
        /// Optional element 'witsml14:yTranslation' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *yTranslation;
        /// Optional element 'witsml14:zTranslation' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *zTranslation;
        /// Optional element 'witsml14:xRotation' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *xRotation;
        /// Optional element 'witsml14:yRotation' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *yRotation;
        /// Optional element 'witsml14:zRotation' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *zRotation;
        /// Optional element 'witsml14:scaleFactor' of XML schema type 'witsml14:unitlessQuantity'
        double *scaleFactor;
        /// Optional element 'witsml14:ellipsoidCode' of XML schema type 'witsml14:Ellipsoid'
        witsml14__Ellipsoid *ellipsoidCode;
        /// Optional element 'witsml14:ellipsoidSemiMajorAxis' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *ellipsoidSemiMajorAxis;
        /// Optional element 'witsml14:ellipsoidInverseFlattening' of XML schema type 'witsml14:unitlessQuantity'
        double *ellipsoidInverseFlattening;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREgeodeticModel, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREgeodeticModel *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREgeodeticModel); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREgeodeticModel() : nameCRS(), geodeticDatumCode(), xTranslation(), yTranslation(), zTranslation(), xRotation(), yRotation(), zRotation(), scaleFactor(), ellipsoidCode(), ellipsoidSemiMajorAxis(), ellipsoidInverseFlattening(), soap() { }
        virtual ~witsml14__cs_USCOREgeodeticModel() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREgeodeticModel(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREgeodeticModel * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREgeodeticModel(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:321 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx (-95)
/* complex XML schema type 'witsml14:cs_projectionx': */
class SOAP_CMAC witsml14__cs_USCOREprojectionx {
      public:
        /// Optional element 'witsml14:nameCRS' of XML schema type 'witsml14:wellKnownNameStruct'
        witsml14__wellKnownNameStruct *nameCRS;
        /// Optional element 'witsml14:projectionCode' of XML schema type 'witsml14:Projection'
        witsml14__Projection *projectionCode;
        /// Optional element 'witsml14:projectedFrom' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *projectedFrom;
        /// Optional element 'witsml14:stdParallel1' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *stdParallel1;
        /// Optional element 'witsml14:stdParallel2' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *stdParallel2;
        /// Optional element 'witsml14:centralMeridian' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *centralMeridian;
        /// Optional element 'witsml14:originLatitude' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *originLatitude;
        /// Optional element 'witsml14:originLongitude' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *originLongitude;
        /// Optional element 'witsml14:latitude1' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *latitude1;
        /// Optional element 'witsml14:longitude1' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *longitude1;
        /// Optional element 'witsml14:latitude2' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *latitude2;
        /// Optional element 'witsml14:longitude2' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *longitude2;
        /// Optional element 'witsml14:latitudeForScale' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *latitudeForScale;
        /// Optional element 'witsml14:longitudeForScale' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *longitudeForScale;
        /// Optional element 'witsml14:trueScaleLatitude' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *trueScaleLatitude;
        /// Optional element 'witsml14:spheroidRadius' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *spheroidRadius;
        /// Optional element 'witsml14:scaleFactor' of XML schema type 'witsml14:unitlessQuantity'
        double *scaleFactor;
        /// Optional element 'witsml14:methodVariant' of XML schema type 'witsml14:ProjectionVariantsObliqueMercator'
        witsml14__ProjectionVariantsObliqueMercator *methodVariant;
        /// Optional element 'witsml14:perspectiveHeight' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *perspectiveHeight;
        /// Optional element 'witsml14:zone' of XML schema type 'witsml14:geodeticZoneString'
        std::string *zone;
        /// Optional element 'witsml14:NADType' of XML schema type 'witsml14:NADTypes'
        witsml14__NADTypes *NADType;
        /// Optional element 'witsml14:falseEasting' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *falseEasting;
        /// Optional element 'witsml14:falseNorthing' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *falseNorthing;
        /// Optional element 'witsml14:bearing' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *bearing;
        /// Optional element 'witsml14:hemisphere' of XML schema type 'witsml14:Hemispheres'
        witsml14__Hemispheres *hemisphere;
        /// Optional element 'witsml14:description' of XML schema type 'witsml14:commentString'
        std::string *description;
        /// Optional element 'witsml14:parameter' of XML schema type 'witsml14:indexedObject'
        std::vector<witsml14__indexedObject *> parameter;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREprojectionx, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREprojectionx *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREprojectionx); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREprojectionx() : nameCRS(), projectionCode(), projectedFrom(), stdParallel1(), stdParallel2(), centralMeridian(), originLatitude(), originLongitude(), latitude1(), longitude1(), latitude2(), longitude2(), latitudeForScale(), longitudeForScale(), trueScaleLatitude(), spheroidRadius(), scaleFactor(), methodVariant(), perspectiveHeight(), zone(), NADType(), falseEasting(), falseNorthing(), bearing(), hemisphere(), description(), parameter(), soap() { }
        virtual ~witsml14__cs_USCOREprojectionx() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREprojectionx(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREprojectionx * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREprojectionx(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:12265 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS (-401)
/* union serializable only when used as a member of a struct or class with a union variant selector */
union _witsml14__union_cs_USCORElocalCRS
{
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_usesWellAsOrigin	(1)	/**< union variant selector value for member usesWellAsOrigin */
        bool *usesWellAsOrigin;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_origin	(2)	/**< union variant selector value for member origin */
        witsml14__refNameString *origin;
        #define SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_originDescription	(3)	/**< union variant selector value for member originDescription */
        std::string *originDescription;
};
#endif

/* witsml1_4ForGsoap.h:323 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS (-96)
/* complex XML schema type 'witsml14:cs_localCRS': */
class SOAP_CMAC witsml14__cs_USCORElocalCRS {
      public:
        /// Union with union _witsml14__union_cs_USCORElocalCRS variant selector __union_cs_USCORElocalCRS set to one of: SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_usesWellAsOrigin SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_origin SOAP_UNION_gsoap_witsml1_4__witsml14__union_cs_USCORElocalCRS_originDescription
        int __union_cs_USCORElocalCRS;
        union _witsml14__union_cs_USCORElocalCRS union_cs_USCORElocalCRS;
        /// Optional element 'witsml14:yAxisAzimuth' of XML schema type 'witsml14:yAxisAzimuth'
        witsml14__yAxisAzimuth *yAxisAzimuth;
        /// Optional element 'witsml14:magneticDeclination' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *magneticDeclination;
        /// Optional element 'witsml14:gridConvergence' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *gridConvergence;
        /// Optional element 'witsml14:yAxisDescription' of XML schema type 'witsml14:commentString'
        std::string *yAxisDescription;
        /// Optional element 'witsml14:xRotationCounterClockwise' of XML schema type 'witsml14:logicalBoolean'
        bool *xRotationCounterClockwise;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORElocalCRS, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORElocalCRS *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORElocalCRS); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORElocalCRS() : __union_cs_USCORElocalCRS(), yAxisAzimuth(), magneticDeclination(), gridConvergence(), yAxisDescription(), xRotationCounterClockwise(), soap() { }
        virtual ~witsml14__cs_USCORElocalCRS() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORElocalCRS(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORElocalCRS * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORElocalCRS(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:325 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData (-97)
/* complex XML schema type 'witsml14:cs_commonData': */
class SOAP_CMAC witsml14__cs_USCOREcommonData {
      public:
        /// Optional element 'witsml14:sourceName' of XML schema type 'witsml14:nameString'
        std::string *sourceName;
        /// Optional element 'witsml14:dTimCreation' of XML schema type 'witsml14:timestamp'
        struct tm *dTimCreation;
        /// Optional element 'witsml14:dTimLastChange' of XML schema type 'witsml14:timestamp'
        struct tm *dTimLastChange;
        /// Optional element 'witsml14:itemState' of XML schema type 'witsml14:ItemState'
        witsml14__ItemState *itemState;
        /// Optional element 'witsml14:serviceCategory' of XML schema type 'witsml14:kindString'
        std::string *serviceCategory;
        /// Optional element 'witsml14:comments' of XML schema type 'witsml14:commentString'
        std::string *comments;
        /// Optional element 'witsml14:acquisitionTimeZone' of XML schema type 'witsml14:timestampedTimeZone'
        std::vector<witsml14__timestampedTimeZone *> acquisitionTimeZone;
        /// Optional element 'witsml14:defaultDatum' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *defaultDatum;
        /// Optional element 'witsml14:privateGroupOnly' of XML schema type 'xsd:boolean'
        bool *privateGroupOnly;
        /// Optional element 'witsml14:extensionAny' of XML schema type 'witsml14:cs_extensionAny'
        witsml14__cs_USCOREextensionAny *extensionAny;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREcommonData, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREcommonData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREcommonData); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREcommonData() : sourceName(), dTimCreation(), dTimLastChange(), itemState(), serviceCategory(), comments(), acquisitionTimeZone(), defaultDatum(), privateGroupOnly(), extensionAny(), extensionNameValue(), soap() { }
        virtual ~witsml14__cs_USCOREcommonData() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREcommonData(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREcommonData * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREcommonData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:327 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny (-98)
/* complex XML schema type 'witsml14:cs_extensionAny': */
class SOAP_CMAC witsml14__cs_USCOREextensionAny {
      public:
        std::vector<char *> __any;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREextensionAny, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREextensionAny *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREextensionAny); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREextensionAny() : __any(), soap() { }
        virtual ~witsml14__cs_USCOREextensionAny() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREextensionAny(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREextensionAny * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREextensionAny(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:329 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData (-99)
/* complex XML schema type 'witsml14:cs_customData': */
class SOAP_CMAC witsml14__cs_USCOREcustomData {
      public:
        std::vector<char *> __any;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREcustomData, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREcustomData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREcustomData); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREcustomData() : __any(), soap() { }
        virtual ~witsml14__cs_USCOREcustomData() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREcustomData(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREcustomData * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREcustomData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:12520 */
#ifndef SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwellbore_sequence
#define SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwellbore_sequence (-409)
/* Wrapper: */
struct SOAP_CMAC __witsml14__obj_USCOREwellbore_sequence {
      public:
        /** Optional element 'witsml14:parentWellbore' of XML schema type 'witsml14:refNameString' */
        witsml14__refNameString *parentWellbore;
        /** Optional element 'witsml14:number' of XML schema type 'witsml14:str32' */
        std::string *number;
        /** Optional element 'witsml14:suffixAPI' of XML schema type 'witsml14:nameString' */
        std::string *suffixAPI;
        /** Optional element 'witsml14:numGovt' of XML schema type 'witsml14:nameString' */
        std::string *numGovt;
        /** Optional element 'witsml14:statusWellbore' of XML schema type 'witsml14:WellStatus' */
        witsml14__WellStatus *statusWellbore;
        /** Optional element 'witsml14:isActive' of XML schema type 'witsml14:logicalBoolean' */
        bool *isActive;
        /** Optional element 'witsml14:purposeWellbore' of XML schema type 'witsml14:WellPurpose' */
        witsml14__WellPurpose *purposeWellbore;
        /** Optional element 'witsml14:typeWellbore' of XML schema type 'witsml14:WellboreType' */
        witsml14__WellboreType *typeWellbore;
        /** Optional element 'witsml14:shape' of XML schema type 'witsml14:WellboreShape' */
        witsml14__WellboreShape *shape;
        /** Optional element 'witsml14:dTimKickoff' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimKickoff;
        /** Optional element 'witsml14:achievedTD' of XML schema type 'witsml14:logicalBoolean' */
        bool *achievedTD;
        /** Optional element 'witsml14:md' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *md;
        /** Optional element 'witsml14:tvd' of XML schema type 'witsml14:wellVerticalDepthCoord' */
        witsml14__wellVerticalDepthCoord *tvd;
        /** Optional element 'witsml14:mdBit' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdBit;
        /** Optional element 'witsml14:tvdBit' of XML schema type 'witsml14:wellVerticalDepthCoord' */
        witsml14__wellVerticalDepthCoord *tvdBit;
        /** Optional element 'witsml14:mdKickoff' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdKickoff;
        /** Optional element 'witsml14:tvdKickoff' of XML schema type 'witsml14:wellVerticalDepthCoord' */
        witsml14__wellVerticalDepthCoord *tvdKickoff;
        /** Optional element 'witsml14:mdPlanned' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdPlanned;
        /** Optional element 'witsml14:tvdPlanned' of XML schema type 'witsml14:wellVerticalDepthCoord' */
        witsml14__wellVerticalDepthCoord *tvdPlanned;
        /** Optional element 'witsml14:mdSubSeaPlanned' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdSubSeaPlanned;
        /** Optional element 'witsml14:tvdSubSeaPlanned' of XML schema type 'witsml14:wellVerticalDepthCoord' */
        witsml14__wellVerticalDepthCoord *tvdSubSeaPlanned;
        /** Optional element 'witsml14:dayTarget' of XML schema type 'witsml14:timeMeasure' */
        witsml14__timeMeasure *dayTarget;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwellbore_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREwellbore_sequence; }
        /** Constructor with member initializations */
        __witsml14__obj_USCOREwellbore_sequence() : parentWellbore(), number(), suffixAPI(), numGovt(), statusWellbore(), isActive(), purposeWellbore(), typeWellbore(), shape(), dTimKickoff(), achievedTD(), md(), tvd(), mdBit(), tvdBit(), mdKickoff(), tvdKickoff(), mdPlanned(), tvdPlanned(), mdSubSeaPlanned(), tvdSubSeaPlanned(), dayTarget() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __witsml14__obj_USCOREwellbore_sequence * SOAP_FMAC2 soap_instantiate___witsml14__obj_USCOREwellbore_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:333 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore (-101)
/* complex XML schema type 'witsml14:obj_wellbore': */
class SOAP_CMAC witsml14__obj_USCOREwellbore {
      public:
        /// Required element 'witsml14:nameWell' of XML schema type 'witsml14:nameString'
        std::string nameWell;
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        struct __witsml14__obj_USCOREwellbore_sequence *__obj_USCOREwellbore_sequence;
        /// Optional element 'witsml14:commonData' of XML schema type 'witsml14:cs_commonData'
        witsml14__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml14:customData' of XML schema type 'witsml14:cs_customData'
        witsml14__cs_USCOREcustomData *customData;
        /// Optional attribute 'uidWell' of XML schema type 'witsml14:uidParentString'
        std::string *uidWell;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREwellbore, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREwellbore *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREwellbore); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREwellbore() : nameWell(), name(), __obj_USCOREwellbore_sequence(), commonData(), customData(), uidWell(), uid(), soap() { }
        virtual ~witsml14__obj_USCOREwellbore() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREwellbore(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREwellbore * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREwellbore(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:12736 */
#ifndef SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREtrajectory_sequence
#define SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREtrajectory_sequence (-416)
/* Wrapper: */
struct SOAP_CMAC __witsml14__obj_USCOREtrajectory_sequence {
      public:
        /** Optional element 'witsml14:objectGrowing' of XML schema type 'witsml14:logicalBoolean' */
        bool *objectGrowing;
        /** Optional element 'witsml14:parentTrajectory' of XML schema type 'witsml14:cs_refWellboreTrajectory' */
        witsml14__cs_USCORErefWellboreTrajectory *parentTrajectory;
        /** Optional element 'witsml14:dTimTrajStart' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimTrajStart;
        /** Optional element 'witsml14:dTimTrajEnd' of XML schema type 'witsml14:timestamp' */
        struct tm *dTimTrajEnd;
        /** Optional element 'witsml14:mdMn' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdMn;
        /** Optional element 'witsml14:mdMx' of XML schema type 'witsml14:measuredDepthCoord' */
        witsml14__measuredDepthCoord *mdMx;
        /** Optional element 'witsml14:serviceCompany' of XML schema type 'witsml14:nameString' */
        std::string *serviceCompany;
        /** Optional element 'witsml14:magDeclUsed' of XML schema type 'witsml14:planeAngleMeasure' */
        witsml14__planeAngleMeasure *magDeclUsed;
        /** Optional element 'witsml14:gridCorUsed' of XML schema type 'witsml14:planeAngleMeasure' */
        witsml14__planeAngleMeasure *gridCorUsed;
        /** Optional element 'witsml14:gridConUsed' of XML schema type 'witsml14:planeAngleMeasure' */
        witsml14__planeAngleMeasure *gridConUsed;
        /** Optional element 'witsml14:aziVertSect' of XML schema type 'witsml14:planeAngleMeasure' */
        witsml14__planeAngleMeasure *aziVertSect;
        /** Optional element 'witsml14:dispNsVertSectOrig' of XML schema type 'witsml14:lengthMeasure' */
        witsml14__lengthMeasure *dispNsVertSectOrig;
        /** Optional element 'witsml14:dispEwVertSectOrig' of XML schema type 'witsml14:lengthMeasure' */
        witsml14__lengthMeasure *dispEwVertSectOrig;
        /** Optional element 'witsml14:definitive' of XML schema type 'witsml14:logicalBoolean' */
        bool *definitive;
        /** Optional element 'witsml14:memory' of XML schema type 'witsml14:logicalBoolean' */
        bool *memory;
        /** Optional element 'witsml14:finalTraj' of XML schema type 'witsml14:logicalBoolean' */
        bool *finalTraj;
        /** Optional element 'witsml14:aziRef' of XML schema type 'witsml14:AziRef' */
        witsml14__AziRef *aziRef;
        /** Optional element 'witsml14:trajectoryStation' of XML schema type 'witsml14:cs_trajectoryStation' */
        std::vector<witsml14__cs_USCOREtrajectoryStation *> trajectoryStation;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREtrajectory_sequence */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4___witsml14__obj_USCOREtrajectory_sequence; }
        /** Constructor with member initializations */
        __witsml14__obj_USCOREtrajectory_sequence() : objectGrowing(), parentTrajectory(), dTimTrajStart(), dTimTrajEnd(), mdMn(), mdMx(), serviceCompany(), magDeclUsed(), gridCorUsed(), gridConUsed(), aziVertSect(), dispNsVertSectOrig(), dispEwVertSectOrig(), definitive(), memory(), finalTraj(), aziRef(), trajectoryStation() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __witsml14__obj_USCOREtrajectory_sequence * SOAP_FMAC2 soap_instantiate___witsml14__obj_USCOREtrajectory_sequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:337 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory (-103)
/* complex XML schema type 'witsml14:obj_trajectory': */
class SOAP_CMAC witsml14__obj_USCOREtrajectory {
      public:
        /// Required element 'witsml14:nameWell' of XML schema type 'witsml14:nameString'
        std::string nameWell;
        /// Required element 'witsml14:nameWellbore' of XML schema type 'witsml14:nameString'
        std::string nameWellbore;
        /// Required element 'witsml14:name' of XML schema type 'witsml14:nameString'
        std::string name;
        struct __witsml14__obj_USCOREtrajectory_sequence *__obj_USCOREtrajectory_sequence;
        /// Optional element 'witsml14:commonData' of XML schema type 'witsml14:cs_commonData'
        witsml14__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml14:customData' of XML schema type 'witsml14:cs_customData'
        witsml14__cs_USCOREcustomData *customData;
        /// Optional attribute 'uidWell' of XML schema type 'witsml14:uidParentString'
        std::string *uidWell;
        /// Optional attribute 'uidWellbore' of XML schema type 'witsml14:uidParentString'
        std::string *uidWellbore;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREtrajectory, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREtrajectory *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREtrajectory); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREtrajectory() : nameWell(), nameWellbore(), name(), __obj_USCOREtrajectory_sequence(), commonData(), customData(), uidWell(), uidWellbore(), uid(), soap() { }
        virtual ~witsml14__obj_USCOREtrajectory() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREtrajectory(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREtrajectory * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREtrajectory(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:339 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation (-104)
/* complex XML schema type 'witsml14:cs_trajectoryStation': */
class SOAP_CMAC witsml14__cs_USCOREtrajectoryStation {
      public:
        /// Optional element 'witsml14:target' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *target;
        /// Optional element 'witsml14:dTimStn' of XML schema type 'witsml14:timestamp'
        struct tm *dTimStn;
        /// Required element 'witsml14:typeTrajStation' of XML schema type 'witsml14:TrajStationType'
        witsml14__TrajStationType typeTrajStation;
        /// Optional element 'witsml14:typeSurveyTool' of XML schema type 'witsml14:TypeSurveyTool'
        std::string *typeSurveyTool;
        /// Optional element 'witsml14:calcAlgorithm' of XML schema type 'witsml14:TrajStnCalcAlgorithm'
        std::string *calcAlgorithm;
        /// Required element 'witsml14:md' of XML schema type 'witsml14:measuredDepthCoord'
        witsml14__measuredDepthCoord *md;
        /// Optional element 'witsml14:tvd' of XML schema type 'witsml14:wellVerticalDepthCoord'
        witsml14__wellVerticalDepthCoord *tvd;
        /// Optional element 'witsml14:incl' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *incl;
        /// Optional element 'witsml14:azi' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *azi;
        /// Optional element 'witsml14:mtf' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *mtf;
        /// Optional element 'witsml14:gtf' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *gtf;
        /// Optional element 'witsml14:dispNs' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *dispNs;
        /// Optional element 'witsml14:dispEw' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *dispEw;
        /// Optional element 'witsml14:vertSect' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *vertSect;
        /// Optional element 'witsml14:dls' of XML schema type 'witsml14:anglePerLengthMeasure'
        witsml14__anglePerLengthMeasure *dls;
        /// Optional element 'witsml14:rateTurn' of XML schema type 'witsml14:anglePerLengthMeasure'
        witsml14__anglePerLengthMeasure *rateTurn;
        /// Optional element 'witsml14:rateBuild' of XML schema type 'witsml14:anglePerLengthMeasure'
        witsml14__anglePerLengthMeasure *rateBuild;
        /// Optional element 'witsml14:mdDelta' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *mdDelta;
        /// Optional element 'witsml14:tvdDelta' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *tvdDelta;
        /// Optional element 'witsml14:modelToolError' of XML schema type 'witsml14:commentString'
        std::string *modelToolError;
        /// Optional element 'witsml14:iscwsaToolErrorModel' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *iscwsaToolErrorModel;
        /// Optional element 'witsml14:gravTotalUncert' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTotalUncert;
        /// Optional element 'witsml14:dipAngleUncert' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *dipAngleUncert;
        /// Optional element 'witsml14:magTotalUncert' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTotalUncert;
        /// Optional element 'witsml14:gravAccelCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *gravAccelCorUsed;
        /// Optional element 'witsml14:magXAxialCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *magXAxialCorUsed;
        /// Optional element 'witsml14:sagCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *sagCorUsed;
        /// Optional element 'witsml14:magDrlstrCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *magDrlstrCorUsed;
        /// Optional element 'witsml14:infieldRefCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *infieldRefCorUsed;
        /// Optional element 'witsml14:interpolatedInfieldRefCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *interpolatedInfieldRefCorUsed;
        /// Optional element 'witsml14:inHoleRefCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *inHoleRefCorUsed;
        /// Optional element 'witsml14:axialMagInterferenceCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *axialMagInterferenceCorUsed;
        /// Optional element 'witsml14:cosagCorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *cosagCorUsed;
        /// Optional element 'witsml14:MSACorUsed' of XML schema type 'witsml14:logicalBoolean'
        bool *MSACorUsed;
        /// Optional element 'witsml14:gravTotalFieldReference' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTotalFieldReference;
        /// Optional element 'witsml14:magTotalFieldReference' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTotalFieldReference;
        /// Optional element 'witsml14:magDipAngleReference' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *magDipAngleReference;
        /// Optional element 'witsml14:magModelUsed' of XML schema type 'witsml14:nameString'
        std::string *magModelUsed;
        /// Optional element 'witsml14:magModelValid' of XML schema type 'witsml14:nameString'
        std::string *magModelValid;
        /// Optional element 'witsml14:geoModelUsed' of XML schema type 'witsml14:nameString'
        std::string *geoModelUsed;
        /// Optional element 'witsml14:statusTrajStation' of XML schema type 'witsml14:TrajStationStatus'
        witsml14__TrajStationStatus *statusTrajStation;
        /// Optional element 'witsml14:rawData' of XML schema type 'witsml14:cs_stnTrajRawData'
        witsml14__cs_USCOREstnTrajRawData *rawData;
        /// Optional element 'witsml14:corUsed' of XML schema type 'witsml14:cs_stnTrajCorUsed'
        witsml14__cs_USCOREstnTrajCorUsed *corUsed;
        /// Optional element 'witsml14:valid' of XML schema type 'witsml14:cs_stnTrajValid'
        witsml14__cs_USCOREstnTrajValid *valid;
        /// Optional element 'witsml14:matrixCov' of XML schema type 'witsml14:cs_stnTrajMatrixCov'
        witsml14__cs_USCOREstnTrajMatrixCov *matrixCov;
        /// Optional element 'witsml14:location' of XML schema type 'witsml14:cs_location'
        std::vector<witsml14__cs_USCORElocation *> location;
        /// Optional element 'witsml14:sourceStation' of XML schema type 'witsml14:cs_refWellboreTrajectoryStation'
        witsml14__cs_USCORErefWellboreTrajectoryStation *sourceStation;
        /// Optional element 'witsml14:commonData' of XML schema type 'witsml14:cs_commonData'
        witsml14__cs_USCOREcommonData *commonData;
        /// Optional element 'witsml14:extensionNameValue' of XML schema type 'witsml14:cs_extensionNameValue'
        std::vector<witsml14__cs_USCOREextensionNameValue *> extensionNameValue;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREtrajectoryStation, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREtrajectoryStation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREtrajectoryStation); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREtrajectoryStation() : target(), dTimStn(), typeTrajStation(), typeSurveyTool(), calcAlgorithm(), md(), tvd(), incl(), azi(), mtf(), gtf(), dispNs(), dispEw(), vertSect(), dls(), rateTurn(), rateBuild(), mdDelta(), tvdDelta(), modelToolError(), iscwsaToolErrorModel(), gravTotalUncert(), dipAngleUncert(), magTotalUncert(), gravAccelCorUsed(), magXAxialCorUsed(), sagCorUsed(), magDrlstrCorUsed(), infieldRefCorUsed(), interpolatedInfieldRefCorUsed(), inHoleRefCorUsed(), axialMagInterferenceCorUsed(), cosagCorUsed(), MSACorUsed(), gravTotalFieldReference(), magTotalFieldReference(), magDipAngleReference(), magModelUsed(), magModelValid(), geoModelUsed(), statusTrajStation(), rawData(), corUsed(), valid(), matrixCov(), location(), sourceStation(), commonData(), extensionNameValue(), uid(), soap() { }
        virtual ~witsml14__cs_USCOREtrajectoryStation() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREtrajectoryStation(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREtrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREtrajectoryStation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:341 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData (-105)
/* complex XML schema type 'witsml14:cs_stnTrajRawData': */
class SOAP_CMAC witsml14__cs_USCOREstnTrajRawData {
      public:
        /// Optional element 'witsml14:gravAxialRaw' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravAxialRaw;
        /// Optional element 'witsml14:gravTran1Raw' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTran1Raw;
        /// Optional element 'witsml14:gravTran2Raw' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTran2Raw;
        /// Optional element 'witsml14:magAxialRaw' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magAxialRaw;
        /// Optional element 'witsml14:magTran1Raw' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran1Raw;
        /// Optional element 'witsml14:magTran2Raw' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran2Raw;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREstnTrajRawData, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREstnTrajRawData *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREstnTrajRawData); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREstnTrajRawData() : gravAxialRaw(), gravTran1Raw(), gravTran2Raw(), magAxialRaw(), magTran1Raw(), magTran2Raw(), soap() { }
        virtual ~witsml14__cs_USCOREstnTrajRawData() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREstnTrajRawData(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREstnTrajRawData * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREstnTrajRawData(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:343 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed (-106)
/* complex XML schema type 'witsml14:cs_stnTrajCorUsed': */
class SOAP_CMAC witsml14__cs_USCOREstnTrajCorUsed {
      public:
        /// Optional element 'witsml14:gravAxialAccelCor' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravAxialAccelCor;
        /// Optional element 'witsml14:gravTran1AccelCor' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTran1AccelCor;
        /// Optional element 'witsml14:gravTran2AccelCor' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTran2AccelCor;
        /// Optional element 'witsml14:magAxialDrlstrCor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magAxialDrlstrCor;
        /// Optional element 'witsml14:magTran1DrlstrCor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran1DrlstrCor;
        /// Optional element 'witsml14:magTran2DrlstrCor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran2DrlstrCor;
        /// Optional element 'witsml14:magTran1MSACor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran1MSACor;
        /// Optional element 'witsml14:magTran2MSACor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTran2MSACor;
        /// Optional element 'witsml14:magAxialMSACor' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magAxialMSACor;
        /// Optional element 'witsml14:sagIncCor' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *sagIncCor;
        /// Optional element 'witsml14:sagAziCor' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *sagAziCor;
        /// Optional element 'witsml14:stnMagDeclUsed' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *stnMagDeclUsed;
        /// Optional element 'witsml14:stnGridCorUsed' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *stnGridCorUsed;
        /// Optional element 'witsml14:stnGridConUsed' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *stnGridConUsed;
        /// Optional element 'witsml14:dirSensorOffset' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *dirSensorOffset;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREstnTrajCorUsed, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREstnTrajCorUsed *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREstnTrajCorUsed); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREstnTrajCorUsed() : gravAxialAccelCor(), gravTran1AccelCor(), gravTran2AccelCor(), magAxialDrlstrCor(), magTran1DrlstrCor(), magTran2DrlstrCor(), magTran1MSACor(), magTran2MSACor(), magAxialMSACor(), sagIncCor(), sagAziCor(), stnMagDeclUsed(), stnGridCorUsed(), stnGridConUsed(), dirSensorOffset(), soap() { }
        virtual ~witsml14__cs_USCOREstnTrajCorUsed() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREstnTrajCorUsed(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREstnTrajCorUsed * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREstnTrajCorUsed(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:345 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid (-107)
/* complex XML schema type 'witsml14:cs_stnTrajValid': */
class SOAP_CMAC witsml14__cs_USCOREstnTrajValid {
      public:
        /// Optional element 'witsml14:magTotalFieldCalc' of XML schema type 'witsml14:magneticInductionMeasure'
        witsml14__magneticInductionMeasure *magTotalFieldCalc;
        /// Optional element 'witsml14:magDipAngleCalc' of XML schema type 'witsml14:planeAngleMeasure'
        witsml14__planeAngleMeasure *magDipAngleCalc;
        /// Optional element 'witsml14:gravTotalFieldCalc' of XML schema type 'witsml14:accelerationLinearMeasure'
        witsml14__accelerationLinearMeasure *gravTotalFieldCalc;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREstnTrajValid, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREstnTrajValid *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREstnTrajValid); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREstnTrajValid() : magTotalFieldCalc(), magDipAngleCalc(), gravTotalFieldCalc(), soap() { }
        virtual ~witsml14__cs_USCOREstnTrajValid() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREstnTrajValid(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREstnTrajValid * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREstnTrajValid(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:347 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov (-108)
/* complex XML schema type 'witsml14:cs_stnTrajMatrixCov': */
class SOAP_CMAC witsml14__cs_USCOREstnTrajMatrixCov {
      public:
        /// Optional element 'witsml14:varianceNN' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceNN;
        /// Optional element 'witsml14:varianceNE' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceNE;
        /// Optional element 'witsml14:varianceNVert' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceNVert;
        /// Optional element 'witsml14:varianceEE' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceEE;
        /// Optional element 'witsml14:varianceEVert' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceEVert;
        /// Optional element 'witsml14:varianceVertVert' of XML schema type 'witsml14:areaMeasure'
        witsml14__areaMeasure *varianceVertVert;
        /// Optional element 'witsml14:biasN' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *biasN;
        /// Optional element 'witsml14:biasE' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *biasE;
        /// Optional element 'witsml14:biasVert' of XML schema type 'witsml14:lengthMeasure'
        witsml14__lengthMeasure *biasVert;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCOREstnTrajMatrixCov, default initialized and not managed by a soap context
        virtual witsml14__cs_USCOREstnTrajMatrixCov *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCOREstnTrajMatrixCov); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCOREstnTrajMatrixCov() : varianceNN(), varianceNE(), varianceNVert(), varianceEE(), varianceEVert(), varianceVertVert(), biasN(), biasE(), biasVert(), soap() { }
        virtual ~witsml14__cs_USCOREstnTrajMatrixCov() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCOREstnTrajMatrixCov(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCOREstnTrajMatrixCov * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCOREstnTrajMatrixCov(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:349 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation (-109)
/* complex XML schema type 'witsml14:cs_refWellboreTrajectoryStation': */
class SOAP_CMAC witsml14__cs_USCORErefWellboreTrajectoryStation {
      public:
        /// Required element 'witsml14:stationReference' of XML schema type 'witsml14:refString'
        std::string stationReference;
        /// Required element 'witsml14:trajectoryParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *trajectoryParent;
        /// Optional element 'witsml14:wellboreParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellboreParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORErefWellboreTrajectoryStation, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORErefWellboreTrajectoryStation *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORErefWellboreTrajectoryStation); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORErefWellboreTrajectoryStation() : stationReference(), trajectoryParent(), wellboreParent(), soap() { }
        virtual ~witsml14__cs_USCORErefWellboreTrajectoryStation() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORErefWellboreTrajectoryStation(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORErefWellboreTrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORErefWellboreTrajectoryStation(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:351 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory (-110)
/* complex XML schema type 'witsml14:cs_refWellboreTrajectory': */
class SOAP_CMAC witsml14__cs_USCORErefWellboreTrajectory {
      public:
        /// Required element 'witsml14:trajectoryReference' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *trajectoryReference;
        /// Optional element 'witsml14:wellboreParent' of XML schema type 'witsml14:refNameString'
        witsml14__refNameString *wellboreParent;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cs_USCORErefWellboreTrajectory, default initialized and not managed by a soap context
        virtual witsml14__cs_USCORErefWellboreTrajectory *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cs_USCORErefWellboreTrajectory); }
      public:
        /// Constructor with default initializations
        witsml14__cs_USCORErefWellboreTrajectory() : trajectoryReference(), wellboreParent(), soap() { }
        virtual ~witsml14__cs_USCORErefWellboreTrajectory() { }
        /// Friend allocator used by soap_new_witsml14__cs_USCORErefWellboreTrajectory(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cs_USCORErefWellboreTrajectory * SOAP_FMAC2 soap_instantiate_witsml14__cs_USCORErefWellboreTrajectory(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:353 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject
#define SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject (-111)
/* complex XML schema type 'abstract:abstractObject': */
class SOAP_CMAC abstract__abstractObject {
      public:
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type abstract__abstractObject, default initialized and not managed by a soap context
        virtual abstract__abstractObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(abstract__abstractObject); }
      public:
        /// Constructor with default initializations
        abstract__abstractObject() : soap() { }
        virtual ~abstract__abstractObject() { }
        /// Friend allocator used by soap_new_abstract__abstractObject(struct soap*, int)
        friend SOAP_FMAC1 abstract__abstractObject * SOAP_FMAC2 soap_instantiate_abstract__abstractObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:155 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells (-12)
/* complex XML schema type 'witsml14:obj_wells': */
class SOAP_CMAC witsml14__obj_USCOREwells : public abstract__abstractObject {
      public:
        /// Optional element 'witsml14:documentInfo' of XML schema type 'witsml14:cs_documentInfo'
        witsml14__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml14:well' of XML schema type 'witsml14:obj_well'
        std::vector<witsml14__obj_USCOREwell *> well;
        /// Required attribute 'version' of XML schema type 'witsml14:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREwells, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREwells *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREwells); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREwells() : documentInfo(), well(), version() { }
        virtual ~witsml14__obj_USCOREwells() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREwells(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREwells * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREwells(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:331 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores (-100)
/* complex XML schema type 'witsml14:obj_wellbores': */
class SOAP_CMAC witsml14__obj_USCOREwellbores : public abstract__abstractObject {
      public:
        /// Optional element 'witsml14:documentInfo' of XML schema type 'witsml14:cs_documentInfo'
        witsml14__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml14:wellbore' of XML schema type 'witsml14:obj_wellbore'
        std::vector<witsml14__obj_USCOREwellbore *> wellbore;
        /// Required attribute 'version' of XML schema type 'witsml14:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREwellbores, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREwellbores *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREwellbores); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREwellbores() : documentInfo(), wellbore(), version() { }
        virtual ~witsml14__obj_USCOREwellbores() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREwellbores(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREwellbores * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREwellbores(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:335 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys (-102)
/* complex XML schema type 'witsml14:obj_trajectorys': */
class SOAP_CMAC witsml14__obj_USCOREtrajectorys : public abstract__abstractObject {
      public:
        /// Optional element 'witsml14:documentInfo' of XML schema type 'witsml14:cs_documentInfo'
        witsml14__cs_USCOREdocumentInfo *documentInfo;
        /// Required element 'witsml14:trajectory' of XML schema type 'witsml14:obj_trajectory'
        std::vector<witsml14__obj_USCOREtrajectory *> trajectory;
        /// Required attribute 'version' of XML schema type 'witsml14:schemaVersionString'
        std::string version;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__obj_USCOREtrajectorys, default initialized and not managed by a soap context
        virtual witsml14__obj_USCOREtrajectorys *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__obj_USCOREtrajectorys); }
      public:
        /// Constructor with default initializations
        witsml14__obj_USCOREtrajectorys() : documentInfo(), trajectory(), version() { }
        virtual ~witsml14__obj_USCOREtrajectorys() { }
        /// Friend allocator used by soap_new_witsml14__obj_USCOREtrajectorys(struct soap*, int)
        friend SOAP_FMAC1 witsml14__obj_USCOREtrajectorys * SOAP_FMAC2 soap_instantiate_witsml14__obj_USCOREtrajectorys(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:207 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cost
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cost (-38)
/* simple XML schema type 'witsml14:cost': */
class SOAP_CMAC witsml14__cost {
      public:
        /// Simple content of XML schema type 'witsml14:abstractDouble' wrapped by this struct
        double __item;
        /// Optional attribute 'currency' of XML schema type 'witsml14:kindString'
        std::string *currency;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__cost
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__cost; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__cost, default initialized and not managed by a soap context
        virtual witsml14__cost *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__cost); }
      public:
        /// Constructor with default initializations
        witsml14__cost() : __item(), currency(), soap() { }
        virtual ~witsml14__cost() { }
        /// Friend allocator used by soap_new_witsml14__cost(struct soap*, int)
        friend SOAP_FMAC1 witsml14__cost * SOAP_FMAC2 soap_instantiate_witsml14__cost(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:295 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure (-82)
/* simple XML schema type 'witsml14:abstractMeasure': */
class SOAP_CMAC witsml14__abstractMeasure {
      public:
        /// Simple content of XML schema type 'witsml14:abstractDouble' wrapped by this struct
        double __item;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__abstractMeasure, default initialized and not managed by a soap context
        virtual witsml14__abstractMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__abstractMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__abstractMeasure() : __item(), soap() { }
        virtual ~witsml14__abstractMeasure() { }
        /// Friend allocator used by soap_new_witsml14__abstractMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__abstractMeasure * SOAP_FMAC2 soap_instantiate_witsml14__abstractMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:163 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone (-16)
/* simple XML schema type 'witsml14:timestampedTimeZone': */
class SOAP_CMAC witsml14__timestampedTimeZone {
      public:
        /// Simple content of XML schema type 'witsml14:abstractTimeZone' wrapped by this struct
        std::string __item;
        /// Optional attribute 'dTim' of XML schema type 'witsml14:timestamp'
        struct tm *dTim;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__timestampedTimeZone, default initialized and not managed by a soap context
        virtual witsml14__timestampedTimeZone *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__timestampedTimeZone); }
      public:
        /// Constructor with default initializations
        witsml14__timestampedTimeZone() : __item(), dTim(), soap() { }
        virtual ~witsml14__timestampedTimeZone() { }
        /// Friend allocator used by soap_new_witsml14__timestampedTimeZone(struct soap*, int)
        friend SOAP_FMAC1 witsml14__timestampedTimeZone * SOAP_FMAC2 soap_instantiate_witsml14__timestampedTimeZone(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:165 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth (-17)
/* simple XML schema type 'witsml14:yAxisAzimuth': */
class SOAP_CMAC witsml14__yAxisAzimuth : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PlaneAngleUom'
        witsml14__PlaneAngleUom uom;
        /// Optional attribute 'northDirection' of XML schema type 'witsml14:AziRef'
        witsml14__AziRef *northDirection;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__yAxisAzimuth, default initialized and not managed by a soap context
        virtual witsml14__yAxisAzimuth *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__yAxisAzimuth); }
      public:
        /// Constructor with default initializations
        witsml14__yAxisAzimuth() : uom(), northDirection() { }
        virtual ~witsml14__yAxisAzimuth() { }
        /// Friend allocator used by soap_new_witsml14__yAxisAzimuth(struct soap*, int)
        friend SOAP_FMAC1 witsml14__yAxisAzimuth * SOAP_FMAC2 soap_instantiate_witsml14__yAxisAzimuth(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:167 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent (-18)
/* simple XML schema type 'witsml14:volumePerVolumeMeasurePercent': */
class SOAP_CMAC witsml14__volumePerVolumeMeasurePercent : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PercentUom'
        witsml14__PercentUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__volumePerVolumeMeasurePercent, default initialized and not managed by a soap context
        virtual witsml14__volumePerVolumeMeasurePercent *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__volumePerVolumeMeasurePercent); }
      public:
        /// Constructor with default initializations
        witsml14__volumePerVolumeMeasurePercent() : uom() { }
        virtual ~witsml14__volumePerVolumeMeasurePercent() { }
        /// Friend allocator used by soap_new_witsml14__volumePerVolumeMeasurePercent(struct soap*, int)
        friend SOAP_FMAC1 witsml14__volumePerVolumeMeasurePercent * SOAP_FMAC2 soap_instantiate_witsml14__volumePerVolumeMeasurePercent(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:169 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity (-19)
/* simple XML schema type 'witsml14:measureOrQuantity': */
class SOAP_CMAC witsml14__measureOrQuantity : public witsml14__abstractMeasure {
      public:
        /// Optional attribute 'uom' of XML schema type 'witsml14:uomString'
        std::string *uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__measureOrQuantity, default initialized and not managed by a soap context
        virtual witsml14__measureOrQuantity *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__measureOrQuantity); }
      public:
        /// Constructor with default initializations
        witsml14__measureOrQuantity() : uom() { }
        virtual ~witsml14__measureOrQuantity() { }
        /// Friend allocator used by soap_new_witsml14__measureOrQuantity(struct soap*, int)
        friend SOAP_FMAC1 witsml14__measureOrQuantity * SOAP_FMAC2 soap_instantiate_witsml14__measureOrQuantity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:171 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure (-20)
/* simple XML schema type 'witsml14:genericMeasure': */
class SOAP_CMAC witsml14__genericMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:uomString'
        std::string uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__genericMeasure, default initialized and not managed by a soap context
        virtual witsml14__genericMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__genericMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__genericMeasure() : uom() { }
        virtual ~witsml14__genericMeasure() { }
        /// Friend allocator used by soap_new_witsml14__genericMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__genericMeasure * SOAP_FMAC2 soap_instantiate_witsml14__genericMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:173 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure (-21)
/* simple XML schema type 'witsml14:ratioGenericMeasure': */
class SOAP_CMAC witsml14__ratioGenericMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:uomString'
        std::string uom;
        /// Optional attribute 'numerator' of XML schema type 'witsml14:unitlessQuantity'
        double *numerator;
        /// Optional attribute 'denominator' of XML schema type 'witsml14:unitlessQuantity'
        double *denominator;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__ratioGenericMeasure, default initialized and not managed by a soap context
        virtual witsml14__ratioGenericMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__ratioGenericMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__ratioGenericMeasure() : uom(), numerator(), denominator() { }
        virtual ~witsml14__ratioGenericMeasure() { }
        /// Friend allocator used by soap_new_witsml14__ratioGenericMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__ratioGenericMeasure * SOAP_FMAC2 soap_instantiate_witsml14__ratioGenericMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:175 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString (-22)
/* simple XML schema type 'witsml14:refNameString': */
class SOAP_CMAC witsml14__refNameString {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Optional attribute 'uidRef' of XML schema type 'witsml14:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__refNameString, default initialized and not managed by a soap context
        virtual witsml14__refNameString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__refNameString); }
      public:
        /// Constructor with default initializations
        witsml14__refNameString() : __item(), uidRef(), soap() { }
        virtual ~witsml14__refNameString() { }
        /// Friend allocator used by soap_new_witsml14__refNameString(struct soap*, int)
        friend SOAP_FMAC1 witsml14__refNameString * SOAP_FMAC2 soap_instantiate_witsml14__refNameString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:177 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString (-23)
/* simple XML schema type 'witsml14:refObjectString': */
class SOAP_CMAC witsml14__refObjectString {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Required attribute 'object' of XML schema type 'witsml14:nameString'
        std::string object;
        /// Optional attribute 'uidRef' of XML schema type 'witsml14:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__refObjectString, default initialized and not managed by a soap context
        virtual witsml14__refObjectString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__refObjectString); }
      public:
        /// Constructor with default initializations
        witsml14__refObjectString() : __item(), object(), uidRef(), soap() { }
        virtual ~witsml14__refObjectString() { }
        /// Friend allocator used by soap_new_witsml14__refObjectString(struct soap*, int)
        friend SOAP_FMAC1 witsml14__refObjectString * SOAP_FMAC2 soap_instantiate_witsml14__refObjectString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:179 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount (-24)
/* simple XML schema type 'witsml14:refPositiveCount': */
class SOAP_CMAC witsml14__refPositiveCount {
      public:
        /// Simple content of XML schema type 'witsml14:abstractPositiveCount' wrapped by this struct
        short __item;
        /// Optional attribute 'uidRef' of XML schema type 'witsml14:refString'
        std::string *uidRef;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__refPositiveCount, default initialized and not managed by a soap context
        virtual witsml14__refPositiveCount *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__refPositiveCount); }
      public:
        /// Constructor with default initializations
        witsml14__refPositiveCount() : __item(), uidRef(), soap() { }
        virtual ~witsml14__refPositiveCount() { }
        /// Friend allocator used by soap_new_witsml14__refPositiveCount(struct soap*, int)
        friend SOAP_FMAC1 witsml14__refPositiveCount * SOAP_FMAC2 soap_instantiate_witsml14__refPositiveCount(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:183 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue (-26)
/* simple XML schema type 'witsml14:extensionvalue': */
class SOAP_CMAC witsml14__extensionvalue {
      public:
        /// Simple content of XML schema type 'witsml14:abstractMaximumLengthString' wrapped by this struct
        std::string __item;
        /// Optional attribute 'uom' of XML schema type 'witsml14:uomString'
        std::string *uom;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__extensionvalue, default initialized and not managed by a soap context
        virtual witsml14__extensionvalue *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__extensionvalue); }
      public:
        /// Constructor with default initializations
        witsml14__extensionvalue() : __item(), uom(), soap() { }
        virtual ~witsml14__extensionvalue() { }
        /// Friend allocator used by soap_new_witsml14__extensionvalue(struct soap*, int)
        friend SOAP_FMAC1 witsml14__extensionvalue * SOAP_FMAC2 soap_instantiate_witsml14__extensionvalue(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:185 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct (-27)
/* simple XML schema type 'witsml14:nameStruct': */
class SOAP_CMAC witsml14__nameStruct {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Optional attribute 'namingSystem' of XML schema type 'witsml14:nameString'
        std::string *namingSystem;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__nameStruct, default initialized and not managed by a soap context
        virtual witsml14__nameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__nameStruct); }
      public:
        /// Constructor with default initializations
        witsml14__nameStruct() : __item(), namingSystem(), soap() { }
        virtual ~witsml14__nameStruct() { }
        /// Friend allocator used by soap_new_witsml14__nameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml14__nameStruct * SOAP_FMAC2 soap_instantiate_witsml14__nameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:187 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct (-28)
/* simple XML schema type 'witsml14:shortNameStruct': */
class SOAP_CMAC witsml14__shortNameStruct {
      public:
        /// Simple content of XML schema type 'witsml14:abstractString32' wrapped by this struct
        std::string __item;
        /// Optional attribute 'namingSystem' of XML schema type 'witsml14:nameString'
        std::string *namingSystem;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__shortNameStruct, default initialized and not managed by a soap context
        virtual witsml14__shortNameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__shortNameStruct); }
      public:
        /// Constructor with default initializations
        witsml14__shortNameStruct() : __item(), namingSystem(), soap() { }
        virtual ~witsml14__shortNameStruct() { }
        /// Friend allocator used by soap_new_witsml14__shortNameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml14__shortNameStruct * SOAP_FMAC2 soap_instantiate_witsml14__shortNameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:189 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct (-29)
/* simple XML schema type 'witsml14:wellKnownNameStruct': */
class SOAP_CMAC witsml14__wellKnownNameStruct {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Required attribute 'namingSystem' of XML schema type 'witsml14:nameString'
        std::string namingSystem;
        /// Optional attribute 'code' of XML schema type 'witsml14:kindString'
        std::string *code;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__wellKnownNameStruct, default initialized and not managed by a soap context
        virtual witsml14__wellKnownNameStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__wellKnownNameStruct); }
      public:
        /// Constructor with default initializations
        witsml14__wellKnownNameStruct() : __item(), namingSystem(), code(), soap() { }
        virtual ~witsml14__wellKnownNameStruct() { }
        /// Friend allocator used by soap_new_witsml14__wellKnownNameStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml14__wellKnownNameStruct * SOAP_FMAC2 soap_instantiate_witsml14__wellKnownNameStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:191 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence (-30)
/* simple XML schema type 'witsml14:objectSequence': */
class SOAP_CMAC witsml14__objectSequence {
      public:
        /// Simple content of XML schema type 'witsml14:abstractPositiveCount' wrapped by this struct
        short __item;
        /// Optional attribute 'description' of XML schema type 'witsml14:descriptionString'
        std::string *description;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__objectSequence, default initialized and not managed by a soap context
        virtual witsml14__objectSequence *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__objectSequence); }
      public:
        /// Constructor with default initializations
        witsml14__objectSequence() : __item(), description(), soap() { }
        virtual ~witsml14__objectSequence() { }
        /// Friend allocator used by soap_new_witsml14__objectSequence(struct soap*, int)
        friend SOAP_FMAC1 witsml14__objectSequence * SOAP_FMAC2 soap_instantiate_witsml14__objectSequence(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:193 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct (-31)
/* simple XML schema type 'witsml14:lithostratigraphyStruct': */
class SOAP_CMAC witsml14__lithostratigraphyStruct {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Optional attribute 'kind' of XML schema type 'witsml14:LithostratigraphyUnit'
        witsml14__LithostratigraphyUnit *kind;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__lithostratigraphyStruct, default initialized and not managed by a soap context
        virtual witsml14__lithostratigraphyStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__lithostratigraphyStruct); }
      public:
        /// Constructor with default initializations
        witsml14__lithostratigraphyStruct() : __item(), kind(), soap() { }
        virtual ~witsml14__lithostratigraphyStruct() { }
        /// Friend allocator used by soap_new_witsml14__lithostratigraphyStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml14__lithostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml14__lithostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:195 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct (-32)
/* simple XML schema type 'witsml14:chronostratigraphyStruct': */
class SOAP_CMAC witsml14__chronostratigraphyStruct {
      public:
        /// Simple content of XML schema type 'witsml14:abstractNameString' wrapped by this struct
        std::string __item;
        /// Optional attribute 'kind' of XML schema type 'witsml14:ChronostratigraphyUnit'
        witsml14__ChronostratigraphyUnit *kind;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__chronostratigraphyStruct, default initialized and not managed by a soap context
        virtual witsml14__chronostratigraphyStruct *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__chronostratigraphyStruct); }
      public:
        /// Constructor with default initializations
        witsml14__chronostratigraphyStruct() : __item(), kind(), soap() { }
        virtual ~witsml14__chronostratigraphyStruct() { }
        /// Friend allocator used by soap_new_witsml14__chronostratigraphyStruct(struct soap*, int)
        friend SOAP_FMAC1 witsml14__chronostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml14__chronostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:197 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord (-33)
/* simple XML schema type 'witsml14:measuredDepthCoord': */
class SOAP_CMAC witsml14__measuredDepthCoord : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MeasuredDepthUom'
        witsml14__MeasuredDepthUom uom;
        /// Optional attribute 'datum' of XML schema type 'witsml14:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__measuredDepthCoord, default initialized and not managed by a soap context
        virtual witsml14__measuredDepthCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__measuredDepthCoord); }
      public:
        /// Constructor with default initializations
        witsml14__measuredDepthCoord() : uom(), datum() { }
        virtual ~witsml14__measuredDepthCoord() { }
        /// Friend allocator used by soap_new_witsml14__measuredDepthCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml14__measuredDepthCoord * SOAP_FMAC2 soap_instantiate_witsml14__measuredDepthCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:199 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord (-34)
/* simple XML schema type 'witsml14:wellVerticalDepthCoord': */
class SOAP_CMAC witsml14__wellVerticalDepthCoord : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:WellVerticalCoordinateUom'
        witsml14__WellVerticalCoordinateUom uom;
        /// Optional attribute 'datum' of XML schema type 'witsml14:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__wellVerticalDepthCoord, default initialized and not managed by a soap context
        virtual witsml14__wellVerticalDepthCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__wellVerticalDepthCoord); }
      public:
        /// Constructor with default initializations
        witsml14__wellVerticalDepthCoord() : uom(), datum() { }
        virtual ~witsml14__wellVerticalDepthCoord() { }
        /// Friend allocator used by soap_new_witsml14__wellVerticalDepthCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml14__wellVerticalDepthCoord * SOAP_FMAC2 soap_instantiate_witsml14__wellVerticalDepthCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:201 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord (-35)
/* simple XML schema type 'witsml14:wellElevationCoord': */
class SOAP_CMAC witsml14__wellElevationCoord : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:WellVerticalCoordinateUom'
        witsml14__WellVerticalCoordinateUom uom;
        /// Optional attribute 'datum' of XML schema type 'witsml14:refWellDatum'
        std::string *datum;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__wellElevationCoord, default initialized and not managed by a soap context
        virtual witsml14__wellElevationCoord *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__wellElevationCoord); }
      public:
        /// Constructor with default initializations
        witsml14__wellElevationCoord() : uom(), datum() { }
        virtual ~witsml14__wellElevationCoord() { }
        /// Friend allocator used by soap_new_witsml14__wellElevationCoord(struct soap*, int)
        friend SOAP_FMAC1 witsml14__wellElevationCoord * SOAP_FMAC2 soap_instantiate_witsml14__wellElevationCoord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:203 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth (-36)
/* simple XML schema type 'witsml14:footageNorthSouth': */
class SOAP_CMAC witsml14__footageNorthSouth : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:LengthUom'
        witsml14__LengthUom uom;
        /// Required attribute 'ref' of XML schema type 'witsml14:NorthOrSouth'
        witsml14__NorthOrSouth ref;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__footageNorthSouth, default initialized and not managed by a soap context
        virtual witsml14__footageNorthSouth *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__footageNorthSouth); }
      public:
        /// Constructor with default initializations
        witsml14__footageNorthSouth() : uom(), ref() { }
        virtual ~witsml14__footageNorthSouth() { }
        /// Friend allocator used by soap_new_witsml14__footageNorthSouth(struct soap*, int)
        friend SOAP_FMAC1 witsml14__footageNorthSouth * SOAP_FMAC2 soap_instantiate_witsml14__footageNorthSouth(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:205 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest (-37)
/* simple XML schema type 'witsml14:footageEastWest': */
class SOAP_CMAC witsml14__footageEastWest : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:LengthUom'
        witsml14__LengthUom uom;
        /// Required attribute 'ref' of XML schema type 'witsml14:EastOrWest'
        witsml14__EastOrWest ref;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__footageEastWest, default initialized and not managed by a soap context
        virtual witsml14__footageEastWest *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__footageEastWest); }
      public:
        /// Constructor with default initializations
        witsml14__footageEastWest() : uom(), ref() { }
        virtual ~witsml14__footageEastWest() { }
        /// Friend allocator used by soap_new_witsml14__footageEastWest(struct soap*, int)
        friend SOAP_FMAC1 witsml14__footageEastWest * SOAP_FMAC2 soap_instantiate_witsml14__footageEastWest(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:209 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject (-39)
/* simple XML schema type 'witsml14:indexedObject': */
class SOAP_CMAC witsml14__indexedObject {
      public:
        /// Simple content of XML schema type 'witsml14:abstractTypeEnum' wrapped by this struct
        std::string __item;
        /// Required attribute 'index' of XML schema type 'witsml14:positiveCount'
        short index;
        /// Optional attribute 'name' of XML schema type 'witsml14:kindString'
        std::string *name;
        /// Optional attribute 'uom' of XML schema type 'witsml14:uomString'
        std::string *uom;
        /// Optional attribute 'description' of XML schema type 'witsml14:descriptionString'
        std::string *description;
        /// Optional attribute 'uid' of XML schema type 'witsml14:uidString'
        std::string *uid;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__indexedObject, default initialized and not managed by a soap context
        virtual witsml14__indexedObject *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__indexedObject); }
      public:
        /// Constructor with default initializations
        witsml14__indexedObject() : __item(), index(), name(), uom(), description(), uid(), soap() { }
        virtual ~witsml14__indexedObject() { }
        /// Friend allocator used by soap_new_witsml14__indexedObject(struct soap*, int)
        friend SOAP_FMAC1 witsml14__indexedObject * SOAP_FMAC2 soap_instantiate_witsml14__indexedObject(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:211 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure (-40)
/* simple XML schema type 'witsml14:accelerationLinearMeasure': */
class SOAP_CMAC witsml14__accelerationLinearMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:AccelerationLinearUom'
        witsml14__AccelerationLinearUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__accelerationLinearMeasure, default initialized and not managed by a soap context
        virtual witsml14__accelerationLinearMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__accelerationLinearMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__accelerationLinearMeasure() : uom() { }
        virtual ~witsml14__accelerationLinearMeasure() { }
        /// Friend allocator used by soap_new_witsml14__accelerationLinearMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__accelerationLinearMeasure * SOAP_FMAC2 soap_instantiate_witsml14__accelerationLinearMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:213 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure (-41)
/* simple XML schema type 'witsml14:anglePerLengthMeasure': */
class SOAP_CMAC witsml14__anglePerLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:AnglePerLengthUom'
        witsml14__AnglePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__anglePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__anglePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__anglePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__anglePerLengthMeasure() : uom() { }
        virtual ~witsml14__anglePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__anglePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__anglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__anglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:215 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure (-42)
/* simple XML schema type 'witsml14:anglePerTimeMeasure': */
class SOAP_CMAC witsml14__anglePerTimeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:AnglePerTimeUom'
        witsml14__AnglePerTimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__anglePerTimeMeasure, default initialized and not managed by a soap context
        virtual witsml14__anglePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__anglePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__anglePerTimeMeasure() : uom() { }
        virtual ~witsml14__anglePerTimeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__anglePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__anglePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__anglePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:217 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure (-43)
/* simple XML schema type 'witsml14:areaMeasure': */
class SOAP_CMAC witsml14__areaMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:AreaUom'
        witsml14__AreaUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__areaMeasure, default initialized and not managed by a soap context
        virtual witsml14__areaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__areaMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__areaMeasure() : uom() { }
        virtual ~witsml14__areaMeasure() { }
        /// Friend allocator used by soap_new_witsml14__areaMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__areaMeasure * SOAP_FMAC2 soap_instantiate_witsml14__areaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:219 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure (-44)
/* simple XML schema type 'witsml14:areaPerAreaMeasure': */
class SOAP_CMAC witsml14__areaPerAreaMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:AreaPerAreaUom'
        witsml14__AreaPerAreaUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__areaPerAreaMeasure, default initialized and not managed by a soap context
        virtual witsml14__areaPerAreaMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__areaPerAreaMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__areaPerAreaMeasure() : uom() { }
        virtual ~witsml14__areaPerAreaMeasure() { }
        /// Friend allocator used by soap_new_witsml14__areaPerAreaMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__areaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_witsml14__areaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:221 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure (-45)
/* simple XML schema type 'witsml14:compressibilityMeasure': */
class SOAP_CMAC witsml14__compressibilityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:CompressibilityUom'
        witsml14__CompressibilityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__compressibilityMeasure, default initialized and not managed by a soap context
        virtual witsml14__compressibilityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__compressibilityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__compressibilityMeasure() : uom() { }
        virtual ~witsml14__compressibilityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__compressibilityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__compressibilityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__compressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:223 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure (-46)
/* simple XML schema type 'witsml14:densityMeasure': */
class SOAP_CMAC witsml14__densityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:DensityUom'
        witsml14__DensityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__densityMeasure, default initialized and not managed by a soap context
        virtual witsml14__densityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__densityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__densityMeasure() : uom() { }
        virtual ~witsml14__densityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__densityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__densityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__densityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:225 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure (-47)
/* simple XML schema type 'witsml14:dimensionlessMeasure': */
class SOAP_CMAC witsml14__dimensionlessMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:DimensionlessUom'
        witsml14__DimensionlessUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__dimensionlessMeasure, default initialized and not managed by a soap context
        virtual witsml14__dimensionlessMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__dimensionlessMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__dimensionlessMeasure() : uom() { }
        virtual ~witsml14__dimensionlessMeasure() { }
        /// Friend allocator used by soap_new_witsml14__dimensionlessMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__dimensionlessMeasure * SOAP_FMAC2 soap_instantiate_witsml14__dimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:227 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure (-48)
/* simple XML schema type 'witsml14:dynamicViscosityMeasure': */
class SOAP_CMAC witsml14__dynamicViscosityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:DynamicViscosityUom'
        witsml14__DynamicViscosityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__dynamicViscosityMeasure, default initialized and not managed by a soap context
        virtual witsml14__dynamicViscosityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__dynamicViscosityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__dynamicViscosityMeasure() : uom() { }
        virtual ~witsml14__dynamicViscosityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__dynamicViscosityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__dynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__dynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:229 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure (-49)
/* simple XML schema type 'witsml14:electricCurrentMeasure': */
class SOAP_CMAC witsml14__electricCurrentMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ElectricCurrentUom'
        witsml14__ElectricCurrentUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__electricCurrentMeasure, default initialized and not managed by a soap context
        virtual witsml14__electricCurrentMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__electricCurrentMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__electricCurrentMeasure() : uom() { }
        virtual ~witsml14__electricCurrentMeasure() { }
        /// Friend allocator used by soap_new_witsml14__electricCurrentMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__electricCurrentMeasure * SOAP_FMAC2 soap_instantiate_witsml14__electricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:231 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure (-50)
/* simple XML schema type 'witsml14:electricPotentialMeasure': */
class SOAP_CMAC witsml14__electricPotentialMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ElectricPotentialUom'
        witsml14__ElectricPotentialUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__electricPotentialMeasure, default initialized and not managed by a soap context
        virtual witsml14__electricPotentialMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__electricPotentialMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__electricPotentialMeasure() : uom() { }
        virtual ~witsml14__electricPotentialMeasure() { }
        /// Friend allocator used by soap_new_witsml14__electricPotentialMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__electricPotentialMeasure * SOAP_FMAC2 soap_instantiate_witsml14__electricPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:233 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure (-51)
/* simple XML schema type 'witsml14:equivalentPerMassMeasure': */
class SOAP_CMAC witsml14__equivalentPerMassMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:EquivalentPerMassUom'
        witsml14__EquivalentPerMassUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__equivalentPerMassMeasure, default initialized and not managed by a soap context
        virtual witsml14__equivalentPerMassMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__equivalentPerMassMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__equivalentPerMassMeasure() : uom() { }
        virtual ~witsml14__equivalentPerMassMeasure() { }
        /// Friend allocator used by soap_new_witsml14__equivalentPerMassMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__equivalentPerMassMeasure * SOAP_FMAC2 soap_instantiate_witsml14__equivalentPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:235 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure (-52)
/* simple XML schema type 'witsml14:forceMeasure': */
class SOAP_CMAC witsml14__forceMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ForceUom'
        witsml14__ForceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__forceMeasure, default initialized and not managed by a soap context
        virtual witsml14__forceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__forceMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__forceMeasure() : uom() { }
        virtual ~witsml14__forceMeasure() { }
        /// Friend allocator used by soap_new_witsml14__forceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__forceMeasure * SOAP_FMAC2 soap_instantiate_witsml14__forceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:237 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure (-53)
/* simple XML schema type 'witsml14:forcePerLengthMeasure': */
class SOAP_CMAC witsml14__forcePerLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ForcePerLengthUom'
        witsml14__ForcePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__forcePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__forcePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__forcePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__forcePerLengthMeasure() : uom() { }
        virtual ~witsml14__forcePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__forcePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__forcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__forcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:239 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure (-54)
/* simple XML schema type 'witsml14:forcePerVolumeMeasure': */
class SOAP_CMAC witsml14__forcePerVolumeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ForcePerVolumeUom'
        witsml14__ForcePerVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__forcePerVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml14__forcePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__forcePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__forcePerVolumeMeasure() : uom() { }
        virtual ~witsml14__forcePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__forcePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__forcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__forcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:241 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure (-55)
/* simple XML schema type 'witsml14:illuminanceMeasure': */
class SOAP_CMAC witsml14__illuminanceMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:IlluminanceUom'
        witsml14__IlluminanceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__illuminanceMeasure, default initialized and not managed by a soap context
        virtual witsml14__illuminanceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__illuminanceMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__illuminanceMeasure() : uom() { }
        virtual ~witsml14__illuminanceMeasure() { }
        /// Friend allocator used by soap_new_witsml14__illuminanceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__illuminanceMeasure * SOAP_FMAC2 soap_instantiate_witsml14__illuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:243 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure (-56)
/* simple XML schema type 'witsml14:lengthMeasure': */
class SOAP_CMAC witsml14__lengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:LengthUom'
        witsml14__LengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__lengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__lengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__lengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__lengthMeasure() : uom() { }
        virtual ~witsml14__lengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__lengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__lengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__lengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:245 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure (-57)
/* simple XML schema type 'witsml14:lengthPerLengthMeasure': */
class SOAP_CMAC witsml14__lengthPerLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:LengthPerLengthUom'
        witsml14__LengthPerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__lengthPerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__lengthPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__lengthPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__lengthPerLengthMeasure() : uom() { }
        virtual ~witsml14__lengthPerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__lengthPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__lengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__lengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:247 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure (-58)
/* simple XML schema type 'witsml14:magneticInductionMeasure': */
class SOAP_CMAC witsml14__magneticInductionMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MagneticInductionUom'
        witsml14__MagneticInductionUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__magneticInductionMeasure, default initialized and not managed by a soap context
        virtual witsml14__magneticInductionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__magneticInductionMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__magneticInductionMeasure() : uom() { }
        virtual ~witsml14__magneticInductionMeasure() { }
        /// Friend allocator used by soap_new_witsml14__magneticInductionMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__magneticInductionMeasure * SOAP_FMAC2 soap_instantiate_witsml14__magneticInductionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:249 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure (-59)
/* simple XML schema type 'witsml14:massConcentrationMeasure': */
class SOAP_CMAC witsml14__massConcentrationMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MassConcentrationUom'
        witsml14__MassConcentrationUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__massConcentrationMeasure, default initialized and not managed by a soap context
        virtual witsml14__massConcentrationMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__massConcentrationMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__massConcentrationMeasure() : uom() { }
        virtual ~witsml14__massConcentrationMeasure() { }
        /// Friend allocator used by soap_new_witsml14__massConcentrationMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__massConcentrationMeasure * SOAP_FMAC2 soap_instantiate_witsml14__massConcentrationMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:251 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure (-60)
/* simple XML schema type 'witsml14:massMeasure': */
class SOAP_CMAC witsml14__massMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MassUom'
        witsml14__MassUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__massMeasure, default initialized and not managed by a soap context
        virtual witsml14__massMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__massMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__massMeasure() : uom() { }
        virtual ~witsml14__massMeasure() { }
        /// Friend allocator used by soap_new_witsml14__massMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__massMeasure * SOAP_FMAC2 soap_instantiate_witsml14__massMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:253 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure (-61)
/* simple XML schema type 'witsml14:massPerLengthMeasure': */
class SOAP_CMAC witsml14__massPerLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MassPerLengthUom'
        witsml14__MassPerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__massPerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__massPerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__massPerLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__massPerLengthMeasure() : uom() { }
        virtual ~witsml14__massPerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__massPerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__massPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__massPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:255 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure (-62)
/* simple XML schema type 'witsml14:momentOfForceMeasure': */
class SOAP_CMAC witsml14__momentOfForceMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:MomentOfForceUom'
        witsml14__MomentOfForceUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__momentOfForceMeasure, default initialized and not managed by a soap context
        virtual witsml14__momentOfForceMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__momentOfForceMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__momentOfForceMeasure() : uom() { }
        virtual ~witsml14__momentOfForceMeasure() { }
        /// Friend allocator used by soap_new_witsml14__momentOfForceMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__momentOfForceMeasure * SOAP_FMAC2 soap_instantiate_witsml14__momentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:257 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure (-63)
/* simple XML schema type 'witsml14:perLengthMeasure': */
class SOAP_CMAC witsml14__perLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PerLengthUom'
        witsml14__PerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__perLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__perLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__perLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__perLengthMeasure() : uom() { }
        virtual ~witsml14__perLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__perLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__perLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__perLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:259 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure (-64)
/* simple XML schema type 'witsml14:permeabilityRockMeasure': */
class SOAP_CMAC witsml14__permeabilityRockMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PermeabilityRockUom'
        witsml14__PermeabilityRockUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__permeabilityRockMeasure, default initialized and not managed by a soap context
        virtual witsml14__permeabilityRockMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__permeabilityRockMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__permeabilityRockMeasure() : uom() { }
        virtual ~witsml14__permeabilityRockMeasure() { }
        /// Friend allocator used by soap_new_witsml14__permeabilityRockMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__permeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_witsml14__permeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:261 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure (-65)
/* simple XML schema type 'witsml14:planeAngleMeasure': */
class SOAP_CMAC witsml14__planeAngleMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PlaneAngleUom'
        witsml14__PlaneAngleUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__planeAngleMeasure, default initialized and not managed by a soap context
        virtual witsml14__planeAngleMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__planeAngleMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__planeAngleMeasure() : uom() { }
        virtual ~witsml14__planeAngleMeasure() { }
        /// Friend allocator used by soap_new_witsml14__planeAngleMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__planeAngleMeasure * SOAP_FMAC2 soap_instantiate_witsml14__planeAngleMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:263 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure (-66)
/* simple XML schema type 'witsml14:powerMeasure': */
class SOAP_CMAC witsml14__powerMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PowerUom'
        witsml14__PowerUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__powerMeasure, default initialized and not managed by a soap context
        virtual witsml14__powerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__powerMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__powerMeasure() : uom() { }
        virtual ~witsml14__powerMeasure() { }
        /// Friend allocator used by soap_new_witsml14__powerMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__powerMeasure * SOAP_FMAC2 soap_instantiate_witsml14__powerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:265 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure (-67)
/* simple XML schema type 'witsml14:pressureMeasure': */
class SOAP_CMAC witsml14__pressureMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:PressureUom'
        witsml14__PressureUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__pressureMeasure, default initialized and not managed by a soap context
        virtual witsml14__pressureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__pressureMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__pressureMeasure() : uom() { }
        virtual ~witsml14__pressureMeasure() { }
        /// Friend allocator used by soap_new_witsml14__pressureMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__pressureMeasure * SOAP_FMAC2 soap_instantiate_witsml14__pressureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:267 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure (-68)
/* simple XML schema type 'witsml14:relativePowerMeasure': */
class SOAP_CMAC witsml14__relativePowerMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:RelativePowerUom'
        witsml14__RelativePowerUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__relativePowerMeasure, default initialized and not managed by a soap context
        virtual witsml14__relativePowerMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__relativePowerMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__relativePowerMeasure() : uom() { }
        virtual ~witsml14__relativePowerMeasure() { }
        /// Friend allocator used by soap_new_witsml14__relativePowerMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__relativePowerMeasure * SOAP_FMAC2 soap_instantiate_witsml14__relativePowerMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:269 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure (-69)
/* simple XML schema type 'witsml14:specificHeatCapacityMeasure': */
class SOAP_CMAC witsml14__specificHeatCapacityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:SpecificHeatCapacityUom'
        witsml14__SpecificHeatCapacityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__specificHeatCapacityMeasure, default initialized and not managed by a soap context
        virtual witsml14__specificHeatCapacityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__specificHeatCapacityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__specificHeatCapacityMeasure() : uom() { }
        virtual ~witsml14__specificHeatCapacityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__specificHeatCapacityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__specificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__specificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:271 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure (-70)
/* simple XML schema type 'witsml14:specificVolumeMeasure': */
class SOAP_CMAC witsml14__specificVolumeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:SpecificVolumeUom'
        witsml14__SpecificVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__specificVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml14__specificVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__specificVolumeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__specificVolumeMeasure() : uom() { }
        virtual ~witsml14__specificVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__specificVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__specificVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__specificVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:273 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure (-71)
/* simple XML schema type 'witsml14:standardVolumeMeasure': */
class SOAP_CMAC witsml14__standardVolumeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:StandardVolumeUom'
        witsml14__StandardVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__standardVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml14__standardVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__standardVolumeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__standardVolumeMeasure() : uom() { }
        virtual ~witsml14__standardVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__standardVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__standardVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__standardVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:275 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure (-72)
/* simple XML schema type 'witsml14:standardVolumePerTimeMeasure': */
class SOAP_CMAC witsml14__standardVolumePerTimeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:StandardVolumePerTimeUom'
        witsml14__StandardVolumePerTimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__standardVolumePerTimeMeasure, default initialized and not managed by a soap context
        virtual witsml14__standardVolumePerTimeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__standardVolumePerTimeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__standardVolumePerTimeMeasure() : uom() { }
        virtual ~witsml14__standardVolumePerTimeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__standardVolumePerTimeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__standardVolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__standardVolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:277 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure (-73)
/* simple XML schema type 'witsml14:thermalConductivityMeasure': */
class SOAP_CMAC witsml14__thermalConductivityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ThermalConductivityUom'
        witsml14__ThermalConductivityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__thermalConductivityMeasure, default initialized and not managed by a soap context
        virtual witsml14__thermalConductivityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__thermalConductivityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__thermalConductivityMeasure() : uom() { }
        virtual ~witsml14__thermalConductivityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__thermalConductivityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__thermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__thermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:279 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure (-74)
/* simple XML schema type 'witsml14:thermalVolumetricExpansionMeasure': */
class SOAP_CMAC witsml14__thermalVolumetricExpansionMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ThermalVolumetricExpansionUom'
        witsml14__ThermalVolumetricExpansionUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__thermalVolumetricExpansionMeasure, default initialized and not managed by a soap context
        virtual witsml14__thermalVolumetricExpansionMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__thermalVolumetricExpansionMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__thermalVolumetricExpansionMeasure() : uom() { }
        virtual ~witsml14__thermalVolumetricExpansionMeasure() { }
        /// Friend allocator used by soap_new_witsml14__thermalVolumetricExpansionMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__thermalVolumetricExpansionMeasure * SOAP_FMAC2 soap_instantiate_witsml14__thermalVolumetricExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:281 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure (-75)
/* simple XML schema type 'witsml14:thermodynamicTemperatureMeasure': */
class SOAP_CMAC witsml14__thermodynamicTemperatureMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:ThermodynamicTemperatureUom'
        witsml14__ThermodynamicTemperatureUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__thermodynamicTemperatureMeasure, default initialized and not managed by a soap context
        virtual witsml14__thermodynamicTemperatureMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__thermodynamicTemperatureMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__thermodynamicTemperatureMeasure() : uom() { }
        virtual ~witsml14__thermodynamicTemperatureMeasure() { }
        /// Friend allocator used by soap_new_witsml14__thermodynamicTemperatureMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__thermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_witsml14__thermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:283 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure (-76)
/* simple XML schema type 'witsml14:timeMeasure': */
class SOAP_CMAC witsml14__timeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:TimeUom'
        witsml14__TimeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__timeMeasure, default initialized and not managed by a soap context
        virtual witsml14__timeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__timeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__timeMeasure() : uom() { }
        virtual ~witsml14__timeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__timeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__timeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__timeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:285 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure (-77)
/* simple XML schema type 'witsml14:velocityMeasure': */
class SOAP_CMAC witsml14__velocityMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:VelocityUom'
        witsml14__VelocityUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__velocityMeasure, default initialized and not managed by a soap context
        virtual witsml14__velocityMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__velocityMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__velocityMeasure() : uom() { }
        virtual ~witsml14__velocityMeasure() { }
        /// Friend allocator used by soap_new_witsml14__velocityMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__velocityMeasure * SOAP_FMAC2 soap_instantiate_witsml14__velocityMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:287 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure (-78)
/* simple XML schema type 'witsml14:volumeMeasure': */
class SOAP_CMAC witsml14__volumeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:VolumeUom'
        witsml14__VolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__volumeMeasure, default initialized and not managed by a soap context
        virtual witsml14__volumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__volumeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__volumeMeasure() : uom() { }
        virtual ~witsml14__volumeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__volumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__volumeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__volumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:289 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure (-79)
/* simple XML schema type 'witsml14:volumeFlowRateMeasure': */
class SOAP_CMAC witsml14__volumeFlowRateMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:VolumeFlowRateUom'
        witsml14__VolumeFlowRateUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__volumeFlowRateMeasure, default initialized and not managed by a soap context
        virtual witsml14__volumeFlowRateMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__volumeFlowRateMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__volumeFlowRateMeasure() : uom() { }
        virtual ~witsml14__volumeFlowRateMeasure() { }
        /// Friend allocator used by soap_new_witsml14__volumeFlowRateMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__volumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_witsml14__volumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:291 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure (-80)
/* simple XML schema type 'witsml14:volumePerLengthMeasure': */
class SOAP_CMAC witsml14__volumePerLengthMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:VolumePerLengthUom'
        witsml14__VolumePerLengthUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__volumePerLengthMeasure, default initialized and not managed by a soap context
        virtual witsml14__volumePerLengthMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__volumePerLengthMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__volumePerLengthMeasure() : uom() { }
        virtual ~witsml14__volumePerLengthMeasure() { }
        /// Friend allocator used by soap_new_witsml14__volumePerLengthMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__volumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml14__volumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:293 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure (-81)
/* simple XML schema type 'witsml14:volumePerVolumeMeasure': */
class SOAP_CMAC witsml14__volumePerVolumeMeasure : public witsml14__abstractMeasure {
      public:
        /// Required attribute 'uom' of XML schema type 'witsml14:VolumePerVolumeUom'
        witsml14__VolumePerVolumeUom uom;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__volumePerVolumeMeasure, default initialized and not managed by a soap context
        virtual witsml14__volumePerVolumeMeasure *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__volumePerVolumeMeasure); }
      public:
        /// Constructor with default initializations
        witsml14__volumePerVolumeMeasure() : uom() { }
        virtual ~witsml14__volumePerVolumeMeasure() { }
        /// Friend allocator used by soap_new_witsml14__volumePerVolumeMeasure(struct soap*, int)
        friend SOAP_FMAC1 witsml14__volumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml14__volumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:181 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString (-25)
/* simple XML schema type 'witsml14:timestampedCommentString': */
class SOAP_CMAC witsml14__timestampedCommentString {
      public:
        /// Simple content of XML schema type 'witsml14:abstractCommentString' wrapped by this struct
        std::string __item;
        /// Required attribute 'dTim' of XML schema type 'witsml14:timestamp'
        /// Typedef witsml14__timestamp with custom serializer for struct tm
        struct tm dTim;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString
        virtual long soap_type(void) const { return SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type witsml14__timestampedCommentString, default initialized and not managed by a soap context
        virtual witsml14__timestampedCommentString *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(witsml14__timestampedCommentString); }
      public:
        /// Constructor with default initializations
        witsml14__timestampedCommentString() : __item(), dTim(), soap() { }
        virtual ~witsml14__timestampedCommentString() { }
        /// Friend allocator used by soap_new_witsml14__timestampedCommentString(struct soap*, int)
        friend SOAP_FMAC1 witsml14__timestampedCommentString * SOAP_FMAC2 soap_instantiate_witsml14__timestampedCommentString(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* witsml1_4ForGsoap.h:15808 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header (-1350922240)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4ForGsoap.h:15808 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code (-1350922241)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4ForGsoap.h:15808 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail (-1350922243)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4ForGsoap.h:15808 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason (-1350922246)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* witsml1_4ForGsoap.h:15808 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault (-1350922247)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__XML
#define SOAP_TYPE_gsoap_witsml1_4__XML (-5)

typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__QName
#define SOAP_TYPE_gsoap_witsml1_4__QName (-6)

typedef char *_QName;
#endif

/* witsml1_4ForGsoap.h:145 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_xsd__date
#define SOAP_TYPE_gsoap_witsml1_4_xsd__date (-11)

typedef std::string xsd__date;
#endif

/* witsml1_4ForGsoap.h:370 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__listOfString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__listOfString (-112)

typedef std::string witsml14__listOfString;
#endif

/* witsml1_4ForGsoap.h:389 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractBoolean
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractBoolean (-114)

typedef bool witsml14__abstractBoolean;
#endif

/* witsml1_4ForGsoap.h:400 */
#ifndef SOAP_TYPE_witsml14__abstractDateTime
#define SOAP_TYPE_witsml14__abstractDateTime (-115)

typedef struct tm witsml14__abstractDateTime;
#endif

/* witsml1_4ForGsoap.h:411 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDate
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDate (-116)

typedef std::string witsml14__abstractDate;
#endif

/* witsml1_4ForGsoap.h:421 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDouble
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDouble (-118)

typedef double witsml14__abstractDouble;
#endif

/* witsml1_4ForGsoap.h:431 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractShort
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractShort (-120)

typedef short witsml14__abstractShort;
#endif

/* witsml1_4ForGsoap.h:441 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractInt
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractInt (-121)

typedef int witsml14__abstractInt;
#endif

/* witsml1_4ForGsoap.h:457 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString (-122)

typedef std::string witsml14__abstractString;
#endif

/* witsml1_4ForGsoap.h:471 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUncollapsedString (-123)

typedef std::string witsml14__abstractUncollapsedString;
#endif

/* witsml1_4ForGsoap.h:487 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__date
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__date (-124)

typedef witsml14__abstractDate witsml14__date;
#endif

/* witsml1_4ForGsoap.h:498 */
#ifndef SOAP_TYPE_witsml14__timestamp
#define SOAP_TYPE_witsml14__timestamp (-125)

typedef struct tm witsml14__timestamp;
#endif

/* witsml1_4ForGsoap.h:508 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__calendarYear
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__calendarYear (-126)

typedef int witsml14__calendarYear;
#endif

/* witsml1_4ForGsoap.h:516 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__logicalBoolean (-127)

typedef witsml14__abstractBoolean witsml14__logicalBoolean;
#endif

/* witsml1_4ForGsoap.h:524 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__unitlessQuantity (-128)

typedef witsml14__abstractDouble witsml14__unitlessQuantity;
#endif

/* witsml1_4ForGsoap.h:533 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__shortDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__shortDescriptionString (-129)

typedef std::string witsml14__shortDescriptionString;
#endif

/* witsml1_4ForGsoap.h:545 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__schemaVersionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__schemaVersionString (-130)

typedef std::string witsml14__schemaVersionString;
#endif

/* witsml1_4ForGsoap.h:554 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uncollapsedString (-131)

typedef std::string witsml14__uncollapsedString;
#endif

/* witsml1_4ForGsoap.h:564 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcBearingWearCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcBearingWearCode (-132)

typedef std::string witsml14__iadcBearingWearCode;
#endif

/* witsml1_4ForGsoap.h:574 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__geodeticZoneString (-133)

typedef std::string witsml14__geodeticZoneString;
#endif

/* witsml1_4ForGsoap.h:584 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__sectionNumber (-134)

typedef std::string witsml14__sectionNumber;
#endif

/* witsml1_4ForGsoap.h:595 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterTownship (-135)

typedef std::string witsml14__publicLandSurveySystemQuarterTownship;
#endif

/* witsml1_4ForGsoap.h:606 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterSection (-136)

typedef std::string witsml14__publicLandSurveySystemQuarterSection;
#endif

/* witsml1_4ForGsoap.h:615 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__gtZeroAndLeOne
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__gtZeroAndLeOne (-137)

typedef double witsml14__gtZeroAndLeOne;
#endif

/* witsml1_4ForGsoap.h:629 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nonNegativeCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nonNegativeCount (-138)

typedef witsml14__abstractShort witsml14__nonNegativeCount;
#endif

/* witsml1_4ForGsoap.h:642 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveBigCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveBigCount (-139)

typedef int witsml14__positiveBigCount;
#endif

/* witsml1_4ForGsoap.h:650 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__integerCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__integerCount (-140)

typedef witsml14__abstractInt witsml14__integerCount;
#endif

/* witsml1_4ForGsoap.h:659 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__beaufortScaleIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__beaufortScaleIntegerCode (-141)

typedef witsml14__abstractShort witsml14__beaufortScaleIntegerCode;
#endif

/* witsml1_4ForGsoap.h:668 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__pumpActionIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__pumpActionIntegerCode (-142)

typedef witsml14__abstractShort witsml14__pumpActionIntegerCode;
#endif

/* witsml1_4ForGsoap.h:677 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcIntegerCode (-143)

typedef witsml14__abstractShort witsml14__iadcIntegerCode;
#endif

/* witsml1_4ForGsoap.h:686 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__levelIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__levelIntegerCode (-144)

typedef witsml14__abstractShort witsml14__levelIntegerCode;
#endif

/* witsml1_4ForGsoap.h:691 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str2
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str2 (-145)

typedef std::string witsml14__str2;
#endif

/* witsml1_4ForGsoap.h:696 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str16
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str16 (-146)

typedef std::string witsml14__str16;
#endif

/* witsml1_4ForGsoap.h:710 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMaximumLengthString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMaximumLengthString (-147)

typedef std::string witsml14__abstractMaximumLengthString;
#endif

/* witsml1_4ForGsoap.h:723 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractPositiveCount (-148)

typedef witsml14__abstractShort witsml14__abstractPositiveCount;
#endif

/* witsml1_4ForGsoap.h:734 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTimeZone (-149)

typedef std::string witsml14__abstractTimeZone;
#endif

/* witsml1_4ForGsoap.h:744 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractNameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractNameString (-150)

typedef std::string witsml14__abstractNameString;
#endif

/* witsml1_4ForGsoap.h:755 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUidString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUidString (-151)

typedef std::string witsml14__abstractUidString;
#endif

/* witsml1_4ForGsoap.h:764 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDescriptionString (-152)

typedef std::string witsml14__abstractDescriptionString;
#endif

/* witsml1_4ForGsoap.h:773 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString32
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString32 (-153)

typedef std::string witsml14__abstractString32;
#endif

/* witsml1_4ForGsoap.h:785 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTypeEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTypeEnum (-154)

typedef std::string witsml14__abstractTypeEnum;
#endif

/* witsml1_4ForGsoap.h:795 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUomEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUomEnum (-155)

typedef std::string witsml14__abstractUomEnum;
#endif

/* witsml1_4ForGsoap.h:811 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timeZone (-156)

typedef witsml14__abstractTimeZone witsml14__timeZone;
#endif

/* witsml1_4ForGsoap.h:819 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uidString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uidString (-157)

typedef witsml14__abstractUidString witsml14__uidString;
#endif

/* witsml1_4ForGsoap.h:829 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uidParentString (-158)

typedef witsml14__abstractUidString witsml14__uidParentString;
#endif

/* witsml1_4ForGsoap.h:838 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refString (-159)

typedef witsml14__abstractUidString witsml14__refString;
#endif

/* witsml1_4ForGsoap.h:850 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refWellDatum (-160)

typedef witsml14__abstractUidString witsml14__refWellDatum;
#endif

/* witsml1_4ForGsoap.h:859 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nameString (-161)

typedef witsml14__abstractNameString witsml14__nameString;
#endif

/* witsml1_4ForGsoap.h:867 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__descriptionString (-162)

typedef witsml14__abstractDescriptionString witsml14__descriptionString;
#endif

/* witsml1_4ForGsoap.h:876 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__encodedValueString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__encodedValueString (-163)

typedef witsml14__abstractString32 witsml14__encodedValueString;
#endif

/* witsml1_4ForGsoap.h:884 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__kindString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__kindString (-164)

typedef witsml14__abstractTypeEnum witsml14__kindString;
#endif

/* witsml1_4ForGsoap.h:892 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uomString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uomString (-165)

typedef witsml14__abstractUomEnum witsml14__uomString;
#endif

/* witsml1_4ForGsoap.h:905 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveCount (-166)

typedef witsml14__abstractPositiveCount witsml14__positiveCount;
#endif

/* witsml1_4ForGsoap.h:909 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str32
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str32 (-167)

typedef witsml14__abstractString32 witsml14__str32;
#endif

/* witsml1_4ForGsoap.h:1837 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractCommentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractCommentString (-213)

typedef witsml14__abstractMaximumLengthString witsml14__abstractCommentString;
#endif

/* witsml1_4ForGsoap.h:1871 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityCode (-215)

typedef witsml14__abstractTypeEnum witsml14__ActivityCode;
#endif

/* witsml1_4ForGsoap.h:3324 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ExtensionName
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ExtensionName (-241)

typedef witsml14__abstractTypeEnum witsml14__ExtensionName;
#endif

/* witsml1_4ForGsoap.h:3840 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologyType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologyType (-252)

typedef witsml14__abstractTypeEnum witsml14__LithologyType;
#endif

/* witsml1_4ForGsoap.h:4158 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MatrixCementType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MatrixCementType (-260)

typedef witsml14__abstractTypeEnum witsml14__MatrixCementType;
#endif

/* witsml1_4ForGsoap.h:4167 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasureClass (-261)

typedef witsml14__abstractTypeEnum witsml14__MeasureClass;
#endif

/* witsml1_4ForGsoap.h:6001 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudSubClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudSubClass (-268)

typedef witsml14__abstractTypeEnum witsml14__MudSubClass;
#endif

/* witsml1_4ForGsoap.h:6031 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagLocation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagLocation (-270)

typedef witsml14__abstractTypeEnum witsml14__NameTagLocation;
#endif

/* witsml1_4ForGsoap.h:6040 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagNumberingScheme
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagNumberingScheme (-271)

typedef witsml14__abstractTypeEnum witsml14__NameTagNumberingScheme;
#endif

/* witsml1_4ForGsoap.h:6049 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagTechnology
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagTechnology (-272)

typedef witsml14__abstractTypeEnum witsml14__NameTagTechnology;
#endif

/* witsml1_4ForGsoap.h:6746 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__QualifierType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__QualifierType (-285)

typedef witsml14__abstractTypeEnum witsml14__QualifierType;
#endif

/* witsml1_4ForGsoap.h:8970 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStnCalcAlgorithm (-311)

typedef witsml14__abstractTypeEnum witsml14__TrajStnCalcAlgorithm;
#endif

/* witsml1_4ForGsoap.h:10092 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TypeSurveyTool (-316)

typedef witsml14__abstractTypeEnum witsml14__TypeSurveyTool;
#endif

/* witsml1_4ForGsoap.h:10705 */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__commentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__commentString (-327)

typedef witsml14__abstractCommentString witsml14__commentString;
#endif

/* witsml1_4ForGsoap.h:15660 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__wells
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__wells (-446)

typedef witsml14__obj_USCOREwells _witsml14__wells;
#endif

/* witsml1_4ForGsoap.h:15668 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__wellbores
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__wellbores (-447)

typedef witsml14__obj_USCOREwellbores _witsml14__wellbores;
#endif

/* witsml1_4ForGsoap.h:15676 */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__trajectorys
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__trajectorys (-448)

typedef witsml14__obj_USCOREtrajectorys _witsml14__trajectorys;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_byte
#define SOAP_TYPE_gsoap_witsml1_4_byte (-3)

#endif

/* witsml14__positiveCount has binding name 'witsml14__positiveCount' for type 'witsml14:positiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveCount (-166)

#endif

/* witsml14__abstractPositiveCount has binding name 'witsml14__abstractPositiveCount' for type 'witsml14:abstractPositiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractPositiveCount (-148)

#endif

/* witsml14__levelIntegerCode has binding name 'witsml14__levelIntegerCode' for type 'witsml14:levelIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__levelIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__levelIntegerCode (-144)

#endif

/* witsml14__iadcIntegerCode has binding name 'witsml14__iadcIntegerCode' for type 'witsml14:iadcIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcIntegerCode (-143)

#endif

/* witsml14__pumpActionIntegerCode has binding name 'witsml14__pumpActionIntegerCode' for type 'witsml14:pumpActionIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__pumpActionIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__pumpActionIntegerCode (-142)

#endif

/* witsml14__beaufortScaleIntegerCode has binding name 'witsml14__beaufortScaleIntegerCode' for type 'witsml14:beaufortScaleIntegerCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__beaufortScaleIntegerCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__beaufortScaleIntegerCode (-141)

#endif

/* witsml14__nonNegativeCount has binding name 'witsml14__nonNegativeCount' for type 'witsml14:nonNegativeCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nonNegativeCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nonNegativeCount (-138)

#endif

/* witsml14__abstractShort has binding name 'witsml14__abstractShort' for type 'witsml14:abstractShort' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractShort
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractShort (-120)

#endif

/* short has binding name 'short' for type 'xsd:short' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_short
#define SOAP_TYPE_gsoap_witsml1_4_short (-119)

#endif

/* witsml14__integerCount has binding name 'witsml14__integerCount' for type 'witsml14:integerCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__integerCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__integerCount (-140)

#endif

/* witsml14__positiveBigCount has binding name 'witsml14__positiveBigCount' for type 'witsml14:positiveBigCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveBigCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__positiveBigCount (-139)

#endif

/* witsml14__calendarYear has binding name 'witsml14__calendarYear' for type 'witsml14:calendarYear' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__calendarYear
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__calendarYear (-126)

#endif

/* witsml14__abstractInt has binding name 'witsml14__abstractInt' for type 'witsml14:abstractInt' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractInt
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractInt (-121)

#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_int
#define SOAP_TYPE_gsoap_witsml1_4_int (-1)

#endif

/* witsml14__gtZeroAndLeOne has binding name 'witsml14__gtZeroAndLeOne' for type 'witsml14:gtZeroAndLeOne' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__gtZeroAndLeOne
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__gtZeroAndLeOne (-137)

#endif

/* witsml14__unitlessQuantity has binding name 'witsml14__unitlessQuantity' for type 'witsml14:unitlessQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__unitlessQuantity (-128)

#endif

/* witsml14__abstractDouble has binding name 'witsml14__abstractDouble' for type 'witsml14:abstractDouble' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDouble
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDouble (-118)

#endif

/* double has binding name 'double' for type 'xsd:double' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_double
#define SOAP_TYPE_gsoap_witsml1_4_double (-117)

#endif

/* witsml14__logicalBoolean has binding name 'witsml14__logicalBoolean' for type 'witsml14:logicalBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__logicalBoolean (-127)

#endif

/* witsml14__abstractBoolean has binding name 'witsml14__abstractBoolean' for type 'witsml14:abstractBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractBoolean
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractBoolean (-114)

#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_bool
#define SOAP_TYPE_gsoap_witsml1_4_bool (-113)

#endif

/* witsml14__WellStatus has binding name 'witsml14__WellStatus' for type 'witsml14:WellStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellStatus (-326)

#endif

/* witsml14__WellPurpose has binding name 'witsml14__WellPurpose' for type 'witsml14:WellPurpose' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellPurpose (-325)

#endif

/* witsml14__WellboreType has binding name 'witsml14__WellboreType' for type 'witsml14:WellboreType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreType (-324)

#endif

/* witsml14__WellboreShape has binding name 'witsml14__WellboreShape' for type 'witsml14:WellboreShape' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellboreShape (-323)

#endif

/* witsml14__WellTestType has binding name 'witsml14__WellTestType' for type 'witsml14:WellTestType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellTestType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellTestType (-322)

#endif

/* witsml14__WellNamingSystem has binding name 'witsml14__WellNamingSystem' for type 'witsml14:WellNamingSystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellNamingSystem
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellNamingSystem (-321)

#endif

/* witsml14__WellKillingProcedureType has binding name 'witsml14__WellKillingProcedureType' for type 'witsml14:WellKillingProcedureType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellKillingProcedureType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellKillingProcedureType (-320)

#endif

/* witsml14__WellFluid has binding name 'witsml14__WellFluid' for type 'witsml14:WellFluid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellFluid (-319)

#endif

/* witsml14__WellDirection has binding name 'witsml14__WellDirection' for type 'witsml14:WellDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellDirection (-318)

#endif

/* witsml14__WellControlIncidentType has binding name 'witsml14__WellControlIncidentType' for type 'witsml14:WellControlIncidentType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellControlIncidentType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellControlIncidentType (-317)

#endif

/* witsml14__TubularComponent has binding name 'witsml14__TubularComponent' for type 'witsml14:TubularComponent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularComponent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularComponent (-315)

#endif

/* witsml14__TubularAssembly has binding name 'witsml14__TubularAssembly' for type 'witsml14:TubularAssembly' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularAssembly
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TubularAssembly (-314)

#endif

/* witsml14__TrajStationType has binding name 'witsml14__TrajStationType' for type 'witsml14:TrajStationType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationType (-313)

#endif

/* witsml14__TrajStationStatus has binding name 'witsml14__TrajStationStatus' for type 'witsml14:TrajStationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStationStatus (-312)

#endif

/* witsml14__TargetSectionScope has binding name 'witsml14__TargetSectionScope' for type 'witsml14:TargetSectionScope' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetSectionScope
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetSectionScope (-310)

#endif

/* witsml14__TargetScope has binding name 'witsml14__TargetScope' for type 'witsml14:TargetScope' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetScope
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetScope (-309)

#endif

/* witsml14__TargetCategory has binding name 'witsml14__TargetCategory' for type 'witsml14:TargetCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TargetCategory (-308)

#endif

/* witsml14__SurveyToolOperatingMode has binding name 'witsml14__SurveyToolOperatingMode' for type 'witsml14:SurveyToolOperatingMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SurveyToolOperatingMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SurveyToolOperatingMode (-307)

#endif

/* witsml14__SurfEquipType has binding name 'witsml14__SurfEquipType' for type 'witsml14:SurfEquipType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SurfEquipType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SurfEquipType (-306)

#endif

/* witsml14__SupportCraft has binding name 'witsml14__SupportCraft' for type 'witsml14:SupportCraft' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SupportCraft
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SupportCraft (-305)

#endif

/* witsml14__StimStageType has binding name 'witsml14__StimStageType' for type 'witsml14:StimStageType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageType (-304)

#endif

/* witsml14__StimStageFlowPathType has binding name 'witsml14__StimStageFlowPathType' for type 'witsml14:StimStageFlowPathType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageFlowPathType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimStageFlowPathType (-303)

#endif

/* witsml14__StimProppantType has binding name 'witsml14__StimProppantType' for type 'witsml14:StimProppantType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimProppantType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimProppantType (-302)

#endif

/* witsml14__StimFluidType has binding name 'witsml14__StimFluidType' for type 'witsml14:StimFluidType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidType (-301)

#endif

/* witsml14__StimFluidSubtype has binding name 'witsml14__StimFluidSubtype' for type 'witsml14:StimFluidSubtype' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidSubtype
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimFluidSubtype (-300)

#endif

/* witsml14__StimAnalysisMethod has binding name 'witsml14__StimAnalysisMethod' for type 'witsml14:StimAnalysisMethod' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAnalysisMethod
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAnalysisMethod (-299)

#endif

/* witsml14__StimAdditiveType has binding name 'witsml14__StimAdditiveType' for type 'witsml14:StimAdditiveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAdditiveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StimAdditiveType (-298)

#endif

/* witsml14__StateDetailActivity has binding name 'witsml14__StateDetailActivity' for type 'witsml14:StateDetailActivity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StateDetailActivity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StateDetailActivity (-297)

#endif

/* witsml14__ShowSpeed has binding name 'witsml14__ShowSpeed' for type 'witsml14:ShowSpeed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowSpeed
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowSpeed (-296)

#endif

/* witsml14__ShowRating has binding name 'witsml14__ShowRating' for type 'witsml14:ShowRating' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowRating
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowRating (-295)

#endif

/* witsml14__ShowLevel has binding name 'witsml14__ShowLevel' for type 'witsml14:ShowLevel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowLevel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowLevel (-294)

#endif

/* witsml14__ShowFluorescence has binding name 'witsml14__ShowFluorescence' for type 'witsml14:ShowFluorescence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowFluorescence
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ShowFluorescence (-293)

#endif

/* witsml14__ScrType has binding name 'witsml14__ScrType' for type 'witsml14:ScrType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ScrType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ScrType (-292)

#endif

/* witsml14__RiskType has binding name 'witsml14__RiskType' for type 'witsml14:RiskType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskType (-291)

#endif

/* witsml14__RiskSubCategory has binding name 'witsml14__RiskSubCategory' for type 'witsml14:RiskSubCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskSubCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskSubCategory (-290)

#endif

/* witsml14__RiskCategory has binding name 'witsml14__RiskCategory' for type 'witsml14:RiskCategory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskCategory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskCategory (-289)

#endif

/* witsml14__RiskAffectedPersonnel has binding name 'witsml14__RiskAffectedPersonnel' for type 'witsml14:RiskAffectedPersonnel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskAffectedPersonnel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RiskAffectedPersonnel (-288)

#endif

/* witsml14__RigType has binding name 'witsml14__RigType' for type 'witsml14:RigType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RigType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RigType (-287)

#endif

/* witsml14__ReadingKind has binding name 'witsml14__ReadingKind' for type 'witsml14:ReadingKind' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ReadingKind
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ReadingKind (-286)

#endif

/* witsml14__PumpOpType has binding name 'witsml14__PumpOpType' for type 'witsml14:PumpOpType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpOpType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpOpType (-284)

#endif

/* witsml14__PumpType has binding name 'witsml14__PumpType' for type 'witsml14:PumpType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PumpType (-283)

#endif

/* witsml14__PrincipalMeridian has binding name 'witsml14__PrincipalMeridian' for type 'witsml14:PrincipalMeridian' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PrincipalMeridian (-282)

#endif

/* witsml14__PresTestType has binding name 'witsml14__PresTestType' for type 'witsml14:PresTestType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PresTestType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PresTestType (-281)

#endif

/* witsml14__ProjectionVariantsObliqueMercator has binding name 'witsml14__ProjectionVariantsObliqueMercator' for type 'witsml14:ProjectionVariantsObliqueMercator' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ProjectionVariantsObliqueMercator (-280)

#endif

/* witsml14__Projection has binding name 'witsml14__Projection' for type 'witsml14:Projection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Projection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Projection (-279)

#endif

/* witsml14__PrimitiveType has binding name 'witsml14__PrimitiveType' for type 'witsml14:PrimitiveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PrimitiveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PrimitiveType (-278)

#endif

/* witsml14__PitType has binding name 'witsml14__PitType' for type 'witsml14:PitType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PitType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PitType (-277)

#endif

/* witsml14__PIDXCommodityCode has binding name 'witsml14__PIDXCommodityCode' for type 'witsml14:PIDXCommodityCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PIDXCommodityCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PIDXCommodityCode (-276)

#endif

/* witsml14__OpsReportVersion has binding name 'witsml14__OpsReportVersion' for type 'witsml14:OpsReportVersion' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__OpsReportVersion
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__OpsReportVersion (-275)

#endif

/* witsml14__NozzleType has binding name 'witsml14__NozzleType' for type 'witsml14:NozzleType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NozzleType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NozzleType (-274)

#endif

/* witsml14__NorthOrSouth has binding name 'witsml14__NorthOrSouth' for type 'witsml14:NorthOrSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NorthOrSouth (-273)

#endif

/* witsml14__NADTypes has binding name 'witsml14__NADTypes' for type 'witsml14:NADTypes' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NADTypes (-269)

#endif

/* witsml14__MudLogParameterType has binding name 'witsml14__MudLogParameterType' for type 'witsml14:MudLogParameterType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudLogParameterType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudLogParameterType (-267)

#endif

/* witsml14__MudClass has binding name 'witsml14__MudClass' for type 'witsml14:MudClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudClass (-266)

#endif

/* witsml14__MessageType has binding name 'witsml14__MessageType' for type 'witsml14:MessageType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageType (-265)

#endif

/* witsml14__MessageSeverity has binding name 'witsml14__MessageSeverity' for type 'witsml14:MessageSeverity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageSeverity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageSeverity (-264)

#endif

/* witsml14__MessageProbability has binding name 'witsml14__MessageProbability' for type 'witsml14:MessageProbability' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageProbability
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MessageProbability (-263)

#endif

/* witsml14__MeasurementType has binding name 'witsml14__MeasurementType' for type 'witsml14:MeasurementType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasurementType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasurementType (-262)

#endif

/* witsml14__MaterialType has binding name 'witsml14__MaterialType' for type 'witsml14:MaterialType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MaterialType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MaterialType (-259)

#endif

/* witsml14__LogTraceState has binding name 'witsml14__LogTraceState' for type 'witsml14:LogTraceState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceState
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceState (-258)

#endif

/* witsml14__LogTraceOrigin has binding name 'witsml14__LogTraceOrigin' for type 'witsml14:LogTraceOrigin' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceOrigin
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogTraceOrigin (-257)

#endif

/* witsml14__LogIndexType has binding name 'witsml14__LogIndexType' for type 'witsml14:LogIndexType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexType (-256)

#endif

/* witsml14__LogIndexDirection has binding name 'witsml14__LogIndexDirection' for type 'witsml14:LogIndexDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexDirection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogIndexDirection (-255)

#endif

/* witsml14__LogDataType has binding name 'witsml14__LogDataType' for type 'witsml14:LogDataType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LogDataType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LogDataType (-254)

#endif

/* witsml14__LithostratigraphyUnit has binding name 'witsml14__LithostratigraphyUnit' for type 'witsml14:LithostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithostratigraphyUnit (-253)

#endif

/* witsml14__LithologySource has binding name 'witsml14__LithologySource' for type 'witsml14:LithologySource' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologySource
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologySource (-251)

#endif

/* witsml14__JarAction has binding name 'witsml14__JarAction' for type 'witsml14:JarAction' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__JarAction
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__JarAction (-250)

#endif

/* witsml14__JarType has binding name 'witsml14__JarType' for type 'witsml14:JarType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__JarType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__JarType (-249)

#endif

/* witsml14__ItemState has binding name 'witsml14__ItemState' for type 'witsml14:ItemState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ItemState (-248)

#endif

/* witsml14__InnerBarrelType has binding name 'witsml14__InnerBarrelType' for type 'witsml14:InnerBarrelType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__InnerBarrelType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__InnerBarrelType (-247)

#endif

/* witsml14__HoleOpenerType has binding name 'witsml14__HoleOpenerType' for type 'witsml14:HoleOpenerType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleOpenerType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleOpenerType (-246)

#endif

/* witsml14__HoleCasingType has binding name 'witsml14__HoleCasingType' for type 'witsml14:HoleCasingType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleCasingType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__HoleCasingType (-245)

#endif

/* witsml14__Hemispheres has binding name 'witsml14__Hemispheres' for type 'witsml14:Hemispheres' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Hemispheres (-244)

#endif

/* witsml14__GeodeticDatum has binding name 'witsml14__GeodeticDatum' for type 'witsml14:GeodeticDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__GeodeticDatum (-243)

#endif

/* witsml14__GasPeakType has binding name 'witsml14__GasPeakType' for type 'witsml14:GasPeakType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__GasPeakType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__GasPeakType (-242)

#endif

/* witsml14__ErrorModelMisalignmentMode has binding name 'witsml14__ErrorModelMisalignmentMode' for type 'witsml14:ErrorModelMisalignmentMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorModelMisalignmentMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorModelMisalignmentMode (-240)

#endif

/* witsml14__ErrorPropagationMode has binding name 'witsml14__ErrorPropagationMode' for type 'witsml14:ErrorPropagationMode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorPropagationMode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorPropagationMode (-239)

#endif

/* witsml14__ErrorTermSource has binding name 'witsml14__ErrorTermSource' for type 'witsml14:ErrorTermSource' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorTermSource
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ErrorTermSource (-238)

#endif

/* witsml14__Ellipsoid has binding name 'witsml14__Ellipsoid' for type 'witsml14:Ellipsoid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__Ellipsoid (-237)

#endif

/* witsml14__ElevCodeEnum has binding name 'witsml14__ElevCodeEnum' for type 'witsml14:ElevCodeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElevCodeEnum (-236)

#endif

/* witsml14__EastOrWest has binding name 'witsml14__EastOrWest' for type 'witsml14:EastOrWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__EastOrWest (-235)

#endif

/* witsml14__DriveType has binding name 'witsml14__DriveType' for type 'witsml14:DriveType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DriveType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DriveType (-234)

#endif

/* witsml14__DrawWorksType has binding name 'witsml14__DrawWorksType' for type 'witsml14:DrawWorksType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DrawWorksType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DrawWorksType (-233)

#endif

/* witsml14__DerrickType has binding name 'witsml14__DerrickType' for type 'witsml14:DerrickType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DerrickType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DerrickType (-232)

#endif

/* witsml14__DeflectionMethod has binding name 'witsml14__DeflectionMethod' for type 'witsml14:DeflectionMethod' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DeflectionMethod
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DeflectionMethod (-231)

#endif

/* witsml14__ConnectionPosition has binding name 'witsml14__ConnectionPosition' for type 'witsml14:ConnectionPosition' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ConnectionPosition
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ConnectionPosition (-230)

#endif

/* witsml14__ChronostratigraphyUnit has binding name 'witsml14__ChronostratigraphyUnit' for type 'witsml14:ChronostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ChronostratigraphyUnit (-229)

#endif

/* witsml14__ChangeInfoType has binding name 'witsml14__ChangeInfoType' for type 'witsml14:ChangeInfoType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ChangeInfoType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ChangeInfoType (-228)

#endif

/* witsml14__CementJobType has binding name 'witsml14__CementJobType' for type 'witsml14:CementJobType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__CementJobType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__CementJobType (-227)

#endif

/* witsml14__BoxPinConfig has binding name 'witsml14__BoxPinConfig' for type 'witsml14:BoxPinConfig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BoxPinConfig
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BoxPinConfig (-226)

#endif

/* witsml14__BopType has binding name 'witsml14__BopType' for type 'witsml14:BopType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BopType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BopType (-225)

#endif

/* witsml14__BladeType has binding name 'witsml14__BladeType' for type 'witsml14:BladeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeType (-224)

#endif

/* witsml14__BladeShapeType has binding name 'witsml14__BladeShapeType' for type 'witsml14:BladeShapeType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeShapeType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BladeShapeType (-223)

#endif

/* witsml14__BhaStatus has binding name 'witsml14__BhaStatus' for type 'witsml14:BhaStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BhaStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BhaStatus (-222)

#endif

/* witsml14__BitType has binding name 'witsml14__BitType' for type 'witsml14:BitType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitType (-221)

#endif

/* witsml14__BitReasonPulled has binding name 'witsml14__BitReasonPulled' for type 'witsml14:BitReasonPulled' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitReasonPulled
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitReasonPulled (-220)

#endif

/* witsml14__BitDullCode has binding name 'witsml14__BitDullCode' for type 'witsml14:BitDullCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BitDullCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BitDullCode (-219)

#endif

/* witsml14__BearingType has binding name 'witsml14__BearingType' for type 'witsml14:BearingType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__BearingType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__BearingType (-218)

#endif

/* witsml14__AziRef has binding name 'witsml14__AziRef' for type 'witsml14:AziRef' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AziRef (-217)

#endif

/* witsml14__AuthorizationStatus has binding name 'witsml14__AuthorizationStatus' for type 'witsml14:AuthorizationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AuthorizationStatus
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AuthorizationStatus (-216)

#endif

/* witsml14__ActivityClassType has binding name 'witsml14__ActivityClassType' for type 'witsml14:ActivityClassType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityClassType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityClassType (-214)

#endif

/* witsml14__VolumePerVolumeUom has binding name 'witsml14__VolumePerVolumeUom' for type 'witsml14:VolumePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerVolumeUom (-212)

#endif

/* witsml14__VolumePerLengthUom has binding name 'witsml14__VolumePerLengthUom' for type 'witsml14:VolumePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumePerLengthUom (-211)

#endif

/* witsml14__VolumeFlowRateUom has binding name 'witsml14__VolumeFlowRateUom' for type 'witsml14:VolumeFlowRateUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeFlowRateUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeFlowRateUom (-210)

#endif

/* witsml14__VolumeUom has binding name 'witsml14__VolumeUom' for type 'witsml14:VolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VolumeUom (-209)

#endif

/* witsml14__VelocityUom has binding name 'witsml14__VelocityUom' for type 'witsml14:VelocityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__VelocityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__VelocityUom (-208)

#endif

/* witsml14__TimeUom has binding name 'witsml14__TimeUom' for type 'witsml14:TimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TimeUom (-207)

#endif

/* witsml14__ThermodynamicTemperatureUom has binding name 'witsml14__ThermodynamicTemperatureUom' for type 'witsml14:ThermodynamicTemperatureUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermodynamicTemperatureUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermodynamicTemperatureUom (-206)

#endif

/* witsml14__ThermalVolumetricExpansionUom has binding name 'witsml14__ThermalVolumetricExpansionUom' for type 'witsml14:ThermalVolumetricExpansionUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalVolumetricExpansionUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalVolumetricExpansionUom (-205)

#endif

/* witsml14__ThermalConductivityUom has binding name 'witsml14__ThermalConductivityUom' for type 'witsml14:ThermalConductivityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalConductivityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ThermalConductivityUom (-204)

#endif

/* witsml14__StandardVolumePerTimeUom has binding name 'witsml14__StandardVolumePerTimeUom' for type 'witsml14:StandardVolumePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumePerTimeUom (-203)

#endif

/* witsml14__StandardVolumeUom has binding name 'witsml14__StandardVolumeUom' for type 'witsml14:StandardVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__StandardVolumeUom (-202)

#endif

/* witsml14__SpecificVolumeUom has binding name 'witsml14__SpecificVolumeUom' for type 'witsml14:SpecificVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificVolumeUom (-201)

#endif

/* witsml14__SpecificHeatCapacityUom has binding name 'witsml14__SpecificHeatCapacityUom' for type 'witsml14:SpecificHeatCapacityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificHeatCapacityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__SpecificHeatCapacityUom (-200)

#endif

/* witsml14__RelativePowerUom has binding name 'witsml14__RelativePowerUom' for type 'witsml14:RelativePowerUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__RelativePowerUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__RelativePowerUom (-199)

#endif

/* witsml14__PressureUom has binding name 'witsml14__PressureUom' for type 'witsml14:PressureUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PressureUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PressureUom (-198)

#endif

/* witsml14__PowerUom has binding name 'witsml14__PowerUom' for type 'witsml14:PowerUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PowerUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PowerUom (-197)

#endif

/* witsml14__PlaneAngleUom has binding name 'witsml14__PlaneAngleUom' for type 'witsml14:PlaneAngleUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PlaneAngleUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PlaneAngleUom (-196)

#endif

/* witsml14__PermeabilityRockUom has binding name 'witsml14__PermeabilityRockUom' for type 'witsml14:PermeabilityRockUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PermeabilityRockUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PermeabilityRockUom (-195)

#endif

/* witsml14__PerLengthUom has binding name 'witsml14__PerLengthUom' for type 'witsml14:PerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PerLengthUom (-194)

#endif

/* witsml14__MomentOfForceUom has binding name 'witsml14__MomentOfForceUom' for type 'witsml14:MomentOfForceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MomentOfForceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MomentOfForceUom (-193)

#endif

/* witsml14__MassPerLengthUom has binding name 'witsml14__MassPerLengthUom' for type 'witsml14:MassPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassPerLengthUom (-192)

#endif

/* witsml14__MassUom has binding name 'witsml14__MassUom' for type 'witsml14:MassUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassUom (-191)

#endif

/* witsml14__MassConcentrationUom has binding name 'witsml14__MassConcentrationUom' for type 'witsml14:MassConcentrationUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MassConcentrationUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MassConcentrationUom (-190)

#endif

/* witsml14__MagneticInductionUom has binding name 'witsml14__MagneticInductionUom' for type 'witsml14:MagneticInductionUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MagneticInductionUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MagneticInductionUom (-189)

#endif

/* witsml14__LengthPerLengthUom has binding name 'witsml14__LengthPerLengthUom' for type 'witsml14:LengthPerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthPerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthPerLengthUom (-188)

#endif

/* witsml14__LengthUom has binding name 'witsml14__LengthUom' for type 'witsml14:LengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LengthUom (-187)

#endif

/* witsml14__IlluminanceUom has binding name 'witsml14__IlluminanceUom' for type 'witsml14:IlluminanceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__IlluminanceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__IlluminanceUom (-186)

#endif

/* witsml14__ForcePerVolumeUom has binding name 'witsml14__ForcePerVolumeUom' for type 'witsml14:ForcePerVolumeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerVolumeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerVolumeUom (-185)

#endif

/* witsml14__ForcePerLengthUom has binding name 'witsml14__ForcePerLengthUom' for type 'witsml14:ForcePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForcePerLengthUom (-184)

#endif

/* witsml14__ForceUom has binding name 'witsml14__ForceUom' for type 'witsml14:ForceUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ForceUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ForceUom (-183)

#endif

/* witsml14__EquivalentPerMassUom has binding name 'witsml14__EquivalentPerMassUom' for type 'witsml14:EquivalentPerMassUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__EquivalentPerMassUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__EquivalentPerMassUom (-182)

#endif

/* witsml14__ElectricPotentialUom has binding name 'witsml14__ElectricPotentialUom' for type 'witsml14:ElectricPotentialUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricPotentialUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricPotentialUom (-181)

#endif

/* witsml14__ElectricCurrentUom has binding name 'witsml14__ElectricCurrentUom' for type 'witsml14:ElectricCurrentUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricCurrentUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ElectricCurrentUom (-180)

#endif

/* witsml14__DynamicViscosityUom has binding name 'witsml14__DynamicViscosityUom' for type 'witsml14:DynamicViscosityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DynamicViscosityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DynamicViscosityUom (-179)

#endif

/* witsml14__DimensionlessUom has binding name 'witsml14__DimensionlessUom' for type 'witsml14:DimensionlessUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DimensionlessUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DimensionlessUom (-178)

#endif

/* witsml14__DensityUom has binding name 'witsml14__DensityUom' for type 'witsml14:DensityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__DensityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__DensityUom (-177)

#endif

/* witsml14__CompressibilityUom has binding name 'witsml14__CompressibilityUom' for type 'witsml14:CompressibilityUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__CompressibilityUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__CompressibilityUom (-176)

#endif

/* witsml14__AreaPerAreaUom has binding name 'witsml14__AreaPerAreaUom' for type 'witsml14:AreaPerAreaUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaPerAreaUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaPerAreaUom (-175)

#endif

/* witsml14__AreaUom has binding name 'witsml14__AreaUom' for type 'witsml14:AreaUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AreaUom (-174)

#endif

/* witsml14__AnglePerTimeUom has binding name 'witsml14__AnglePerTimeUom' for type 'witsml14:AnglePerTimeUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerTimeUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerTimeUom (-173)

#endif

/* witsml14__AnglePerLengthUom has binding name 'witsml14__AnglePerLengthUom' for type 'witsml14:AnglePerLengthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerLengthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AnglePerLengthUom (-172)

#endif

/* witsml14__AccelerationLinearUom has binding name 'witsml14__AccelerationLinearUom' for type 'witsml14:AccelerationLinearUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__AccelerationLinearUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__AccelerationLinearUom (-171)

#endif

/* witsml14__WellVerticalCoordinateUom has binding name 'witsml14__WellVerticalCoordinateUom' for type 'witsml14:WellVerticalCoordinateUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__WellVerticalCoordinateUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__WellVerticalCoordinateUom (-170)

#endif

/* witsml14__MeasuredDepthUom has binding name 'witsml14__MeasuredDepthUom' for type 'witsml14:MeasuredDepthUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasuredDepthUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasuredDepthUom (-169)

#endif

/* witsml14__PercentUom has binding name 'witsml14__PercentUom' for type 'witsml14:PercentUom' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__PercentUom
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__PercentUom (-168)

#endif

/* _witsml14__trajectorys has binding name '_witsml14__trajectorys' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__trajectorys
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__trajectorys (-448)

#endif

/* _witsml14__wellbores has binding name '_witsml14__wellbores' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__wellbores
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__wellbores (-447)

#endif

/* _witsml14__wells has binding name '_witsml14__wells' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4__witsml14__wells
#define SOAP_TYPE_gsoap_witsml1_4__witsml14__wells (-446)

#endif

/* witsml14__commentString has binding name 'witsml14__commentString' for type 'witsml14:commentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__commentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__commentString (-327)

#endif

/* witsml14__TypeSurveyTool has binding name 'witsml14__TypeSurveyTool' for type 'witsml14:TypeSurveyTool' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TypeSurveyTool (-316)

#endif

/* witsml14__TrajStnCalcAlgorithm has binding name 'witsml14__TrajStnCalcAlgorithm' for type 'witsml14:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__TrajStnCalcAlgorithm (-311)

#endif

/* witsml14__QualifierType has binding name 'witsml14__QualifierType' for type 'witsml14:QualifierType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__QualifierType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__QualifierType (-285)

#endif

/* witsml14__NameTagTechnology has binding name 'witsml14__NameTagTechnology' for type 'witsml14:NameTagTechnology' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagTechnology
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagTechnology (-272)

#endif

/* witsml14__NameTagNumberingScheme has binding name 'witsml14__NameTagNumberingScheme' for type 'witsml14:NameTagNumberingScheme' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagNumberingScheme
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagNumberingScheme (-271)

#endif

/* witsml14__NameTagLocation has binding name 'witsml14__NameTagLocation' for type 'witsml14:NameTagLocation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagLocation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__NameTagLocation (-270)

#endif

/* witsml14__MudSubClass has binding name 'witsml14__MudSubClass' for type 'witsml14:MudSubClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MudSubClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MudSubClass (-268)

#endif

/* witsml14__MeasureClass has binding name 'witsml14__MeasureClass' for type 'witsml14:MeasureClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MeasureClass (-261)

#endif

/* witsml14__MatrixCementType has binding name 'witsml14__MatrixCementType' for type 'witsml14:MatrixCementType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__MatrixCementType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__MatrixCementType (-260)

#endif

/* witsml14__LithologyType has binding name 'witsml14__LithologyType' for type 'witsml14:LithologyType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologyType
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__LithologyType (-252)

#endif

/* witsml14__ExtensionName has binding name 'witsml14__ExtensionName' for type 'witsml14:ExtensionName' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ExtensionName
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ExtensionName (-241)

#endif

/* witsml14__ActivityCode has binding name 'witsml14__ActivityCode' for type 'witsml14:ActivityCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ActivityCode (-215)

#endif

/* witsml14__abstractCommentString has binding name 'witsml14__abstractCommentString' for type 'witsml14:abstractCommentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractCommentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractCommentString (-213)

#endif

/* witsml14__str32 has binding name 'witsml14__str32' for type 'witsml14:str32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str32
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str32 (-167)

#endif

/* witsml14__uomString has binding name 'witsml14__uomString' for type 'witsml14:uomString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uomString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uomString (-165)

#endif

/* witsml14__kindString has binding name 'witsml14__kindString' for type 'witsml14:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__kindString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__kindString (-164)

#endif

/* witsml14__encodedValueString has binding name 'witsml14__encodedValueString' for type 'witsml14:encodedValueString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__encodedValueString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__encodedValueString (-163)

#endif

/* witsml14__descriptionString has binding name 'witsml14__descriptionString' for type 'witsml14:descriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__descriptionString (-162)

#endif

/* witsml14__nameString has binding name 'witsml14__nameString' for type 'witsml14:nameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nameString (-161)

#endif

/* witsml14__refWellDatum has binding name 'witsml14__refWellDatum' for type 'witsml14:refWellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refWellDatum (-160)

#endif

/* witsml14__refString has binding name 'witsml14__refString' for type 'witsml14:refString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refString (-159)

#endif

/* witsml14__uidParentString has binding name 'witsml14__uidParentString' for type 'witsml14:uidParentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uidParentString (-158)

#endif

/* witsml14__uidString has binding name 'witsml14__uidString' for type 'witsml14:uidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uidString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uidString (-157)

#endif

/* witsml14__timeZone has binding name 'witsml14__timeZone' for type 'witsml14:timeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timeZone (-156)

#endif

/* witsml14__abstractUomEnum has binding name 'witsml14__abstractUomEnum' for type 'witsml14:abstractUomEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUomEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUomEnum (-155)

#endif

/* witsml14__abstractTypeEnum has binding name 'witsml14__abstractTypeEnum' for type 'witsml14:abstractTypeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTypeEnum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTypeEnum (-154)

#endif

/* witsml14__abstractString32 has binding name 'witsml14__abstractString32' for type 'witsml14:abstractString32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString32
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString32 (-153)

#endif

/* witsml14__abstractDescriptionString has binding name 'witsml14__abstractDescriptionString' for type 'witsml14:abstractDescriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDescriptionString (-152)

#endif

/* witsml14__abstractUidString has binding name 'witsml14__abstractUidString' for type 'witsml14:abstractUidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUidString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUidString (-151)

#endif

/* witsml14__abstractNameString has binding name 'witsml14__abstractNameString' for type 'witsml14:abstractNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractNameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractNameString (-150)

#endif

/* witsml14__abstractTimeZone has binding name 'witsml14__abstractTimeZone' for type 'witsml14:abstractTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractTimeZone (-149)

#endif

/* witsml14__abstractMaximumLengthString has binding name 'witsml14__abstractMaximumLengthString' for type 'witsml14:abstractMaximumLengthString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMaximumLengthString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMaximumLengthString (-147)

#endif

/* witsml14__str16 has binding name 'witsml14__str16' for type 'witsml14:str16' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str16
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str16 (-146)

#endif

/* witsml14__str2 has binding name 'witsml14__str2' for type 'witsml14:str2' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__str2
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__str2 (-145)

#endif

/* witsml14__publicLandSurveySystemQuarterSection has binding name 'witsml14__publicLandSurveySystemQuarterSection' for type 'witsml14:publicLandSurveySystemQuarterSection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterSection (-136)

#endif

/* witsml14__publicLandSurveySystemQuarterTownship has binding name 'witsml14__publicLandSurveySystemQuarterTownship' for type 'witsml14:publicLandSurveySystemQuarterTownship' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__publicLandSurveySystemQuarterTownship (-135)

#endif

/* witsml14__sectionNumber has binding name 'witsml14__sectionNumber' for type 'witsml14:sectionNumber' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__sectionNumber (-134)

#endif

/* witsml14__geodeticZoneString has binding name 'witsml14__geodeticZoneString' for type 'witsml14:geodeticZoneString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__geodeticZoneString (-133)

#endif

/* witsml14__iadcBearingWearCode has binding name 'witsml14__iadcBearingWearCode' for type 'witsml14:iadcBearingWearCode' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcBearingWearCode
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__iadcBearingWearCode (-132)

#endif

/* witsml14__uncollapsedString has binding name 'witsml14__uncollapsedString' for type 'witsml14:uncollapsedString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__uncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__uncollapsedString (-131)

#endif

/* witsml14__schemaVersionString has binding name 'witsml14__schemaVersionString' for type 'witsml14:schemaVersionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__schemaVersionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__schemaVersionString (-130)

#endif

/* witsml14__shortDescriptionString has binding name 'witsml14__shortDescriptionString' for type 'witsml14:shortDescriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__shortDescriptionString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__shortDescriptionString (-129)

#endif

/* witsml14__date has binding name 'witsml14__date' for type 'witsml14:date' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__date
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__date (-124)

#endif

/* witsml14__abstractUncollapsedString has binding name 'witsml14__abstractUncollapsedString' for type 'witsml14:abstractUncollapsedString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUncollapsedString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractUncollapsedString (-123)

#endif

/* witsml14__abstractString has binding name 'witsml14__abstractString' for type 'witsml14:abstractString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractString (-122)

#endif

/* witsml14__abstractDate has binding name 'witsml14__abstractDate' for type 'witsml14:abstractDate' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDate
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractDate (-116)

#endif

/* witsml14__listOfString has binding name 'witsml14__listOfString' for type 'witsml14:listOfString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__listOfString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__listOfString (-112)

#endif

/* abstract__abstractObject has binding name 'abstract__abstractObject' for type 'abstract:abstractObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject
#define SOAP_TYPE_gsoap_witsml1_4_abstract__abstractObject (-111)

#endif

/* witsml14__cs_USCORErefWellboreTrajectory has binding name 'witsml14__cs_USCORErefWellboreTrajectory' for type 'witsml14:cs_refWellboreTrajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectory (-110)

#endif

/* witsml14__cs_USCORErefWellboreTrajectoryStation has binding name 'witsml14__cs_USCORErefWellboreTrajectoryStation' for type 'witsml14:cs_refWellboreTrajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellboreTrajectoryStation (-109)

#endif

/* witsml14__cs_USCOREstnTrajMatrixCov has binding name 'witsml14__cs_USCOREstnTrajMatrixCov' for type 'witsml14:cs_stnTrajMatrixCov' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajMatrixCov (-108)

#endif

/* witsml14__cs_USCOREstnTrajValid has binding name 'witsml14__cs_USCOREstnTrajValid' for type 'witsml14:cs_stnTrajValid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajValid (-107)

#endif

/* witsml14__cs_USCOREstnTrajCorUsed has binding name 'witsml14__cs_USCOREstnTrajCorUsed' for type 'witsml14:cs_stnTrajCorUsed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajCorUsed (-106)

#endif

/* witsml14__cs_USCOREstnTrajRawData has binding name 'witsml14__cs_USCOREstnTrajRawData' for type 'witsml14:cs_stnTrajRawData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREstnTrajRawData (-105)

#endif

/* witsml14__cs_USCOREtrajectoryStation has binding name 'witsml14__cs_USCOREtrajectoryStation' for type 'witsml14:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREtrajectoryStation (-104)

#endif

/* witsml14__obj_USCOREtrajectory has binding name 'witsml14__obj_USCOREtrajectory' for type 'witsml14:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectory (-103)

#endif

/* witsml14__obj_USCOREtrajectorys has binding name 'witsml14__obj_USCOREtrajectorys' for type 'witsml14:obj_trajectorys' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREtrajectorys (-102)

#endif

/* witsml14__obj_USCOREwellbore has binding name 'witsml14__obj_USCOREwellbore' for type 'witsml14:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbore (-101)

#endif

/* witsml14__obj_USCOREwellbores has binding name 'witsml14__obj_USCOREwellbores' for type 'witsml14:obj_wellbores' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwellbores (-100)

#endif

/* witsml14__cs_USCOREcustomData has binding name 'witsml14__cs_USCOREcustomData' for type 'witsml14:cs_customData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcustomData (-99)

#endif

/* witsml14__cs_USCOREextensionAny has binding name 'witsml14__cs_USCOREextensionAny' for type 'witsml14:cs_extensionAny' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionAny (-98)

#endif

/* witsml14__cs_USCOREcommonData has binding name 'witsml14__cs_USCOREcommonData' for type 'witsml14:cs_commonData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREcommonData (-97)

#endif

/* witsml14__cs_USCORElocalCRS has binding name 'witsml14__cs_USCORElocalCRS' for type 'witsml14:cs_localCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocalCRS (-96)

#endif

/* witsml14__cs_USCOREprojectionx has binding name 'witsml14__cs_USCOREprojectionx' for type 'witsml14:cs_projectionx' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREprojectionx (-95)

#endif

/* witsml14__cs_USCOREgeodeticModel has binding name 'witsml14__cs_USCOREgeodeticModel' for type 'witsml14:cs_geodeticModel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREgeodeticModel (-94)

#endif

/* witsml14__cs_USCOREwellCRS has binding name 'witsml14__cs_USCOREwellCRS' for type 'witsml14:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellCRS (-93)

#endif

/* witsml14__cs_USCOREreferencePoint has binding name 'witsml14__cs_USCOREreferencePoint' for type 'witsml14:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREreferencePoint (-92)

#endif

/* witsml14__cs_USCOREpublicLandSurveySystem has binding name 'witsml14__cs_USCOREpublicLandSurveySystem' for type 'witsml14:cs_publicLandSurveySystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREpublicLandSurveySystem (-91)

#endif

/* witsml14__cs_USCORErefWellWellboreRig has binding name 'witsml14__cs_USCORErefWellWellboreRig' for type 'witsml14:cs_refWellWellboreRig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellboreRig (-90)

#endif

/* witsml14__cs_USCORErefWellWellbore has binding name 'witsml14__cs_USCORErefWellWellbore' for type 'witsml14:cs_refWellWellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORErefWellWellbore (-89)

#endif

/* witsml14__cs_USCOREwellDatum has binding name 'witsml14__cs_USCOREwellDatum' for type 'witsml14:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREwellDatum (-88)

#endif

/* witsml14__cs_USCORElocation has binding name 'witsml14__cs_USCORElocation' for type 'witsml14:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCORElocation (-87)

#endif

/* witsml14__cs_USCOREdocumentEvent has binding name 'witsml14__cs_USCOREdocumentEvent' for type 'witsml14:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentEvent (-86)

#endif

/* witsml14__cs_USCOREdocumentAudit has binding name 'witsml14__cs_USCOREdocumentAudit' for type 'witsml14:cs_documentAudit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentAudit (-85)

#endif

/* witsml14__cs_USCOREextensionNameValue has binding name 'witsml14__cs_USCOREextensionNameValue' for type 'witsml14:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREextensionNameValue (-84)

#endif

/* witsml14__cs_USCOREdocumentSecurityInfo has binding name 'witsml14__cs_USCOREdocumentSecurityInfo' for type 'witsml14:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentSecurityInfo (-83)

#endif

/* witsml14__abstractMeasure has binding name 'witsml14__abstractMeasure' for type 'witsml14:abstractMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__abstractMeasure (-82)

#endif

/* witsml14__volumePerVolumeMeasure has binding name 'witsml14__volumePerVolumeMeasure' for type 'witsml14:volumePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasure (-81)

#endif

/* witsml14__volumePerLengthMeasure has binding name 'witsml14__volumePerLengthMeasure' for type 'witsml14:volumePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerLengthMeasure (-80)

#endif

/* witsml14__volumeFlowRateMeasure has binding name 'witsml14__volumeFlowRateMeasure' for type 'witsml14:volumeFlowRateMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeFlowRateMeasure (-79)

#endif

/* witsml14__volumeMeasure has binding name 'witsml14__volumeMeasure' for type 'witsml14:volumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumeMeasure (-78)

#endif

/* witsml14__velocityMeasure has binding name 'witsml14__velocityMeasure' for type 'witsml14:velocityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__velocityMeasure (-77)

#endif

/* witsml14__timeMeasure has binding name 'witsml14__timeMeasure' for type 'witsml14:timeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timeMeasure (-76)

#endif

/* witsml14__thermodynamicTemperatureMeasure has binding name 'witsml14__thermodynamicTemperatureMeasure' for type 'witsml14:thermodynamicTemperatureMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermodynamicTemperatureMeasure (-75)

#endif

/* witsml14__thermalVolumetricExpansionMeasure has binding name 'witsml14__thermalVolumetricExpansionMeasure' for type 'witsml14:thermalVolumetricExpansionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalVolumetricExpansionMeasure (-74)

#endif

/* witsml14__thermalConductivityMeasure has binding name 'witsml14__thermalConductivityMeasure' for type 'witsml14:thermalConductivityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__thermalConductivityMeasure (-73)

#endif

/* witsml14__standardVolumePerTimeMeasure has binding name 'witsml14__standardVolumePerTimeMeasure' for type 'witsml14:standardVolumePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumePerTimeMeasure (-72)

#endif

/* witsml14__standardVolumeMeasure has binding name 'witsml14__standardVolumeMeasure' for type 'witsml14:standardVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__standardVolumeMeasure (-71)

#endif

/* witsml14__specificVolumeMeasure has binding name 'witsml14__specificVolumeMeasure' for type 'witsml14:specificVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__specificVolumeMeasure (-70)

#endif

/* witsml14__specificHeatCapacityMeasure has binding name 'witsml14__specificHeatCapacityMeasure' for type 'witsml14:specificHeatCapacityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__specificHeatCapacityMeasure (-69)

#endif

/* witsml14__relativePowerMeasure has binding name 'witsml14__relativePowerMeasure' for type 'witsml14:relativePowerMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__relativePowerMeasure (-68)

#endif

/* witsml14__pressureMeasure has binding name 'witsml14__pressureMeasure' for type 'witsml14:pressureMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__pressureMeasure (-67)

#endif

/* witsml14__powerMeasure has binding name 'witsml14__powerMeasure' for type 'witsml14:powerMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__powerMeasure (-66)

#endif

/* witsml14__planeAngleMeasure has binding name 'witsml14__planeAngleMeasure' for type 'witsml14:planeAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__planeAngleMeasure (-65)

#endif

/* witsml14__permeabilityRockMeasure has binding name 'witsml14__permeabilityRockMeasure' for type 'witsml14:permeabilityRockMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__permeabilityRockMeasure (-64)

#endif

/* witsml14__perLengthMeasure has binding name 'witsml14__perLengthMeasure' for type 'witsml14:perLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__perLengthMeasure (-63)

#endif

/* witsml14__momentOfForceMeasure has binding name 'witsml14__momentOfForceMeasure' for type 'witsml14:momentOfForceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__momentOfForceMeasure (-62)

#endif

/* witsml14__massPerLengthMeasure has binding name 'witsml14__massPerLengthMeasure' for type 'witsml14:massPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massPerLengthMeasure (-61)

#endif

/* witsml14__massMeasure has binding name 'witsml14__massMeasure' for type 'witsml14:massMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massMeasure (-60)

#endif

/* witsml14__massConcentrationMeasure has binding name 'witsml14__massConcentrationMeasure' for type 'witsml14:massConcentrationMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__massConcentrationMeasure (-59)

#endif

/* witsml14__magneticInductionMeasure has binding name 'witsml14__magneticInductionMeasure' for type 'witsml14:magneticInductionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__magneticInductionMeasure (-58)

#endif

/* witsml14__lengthPerLengthMeasure has binding name 'witsml14__lengthPerLengthMeasure' for type 'witsml14:lengthPerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthPerLengthMeasure (-57)

#endif

/* witsml14__lengthMeasure has binding name 'witsml14__lengthMeasure' for type 'witsml14:lengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lengthMeasure (-56)

#endif

/* witsml14__illuminanceMeasure has binding name 'witsml14__illuminanceMeasure' for type 'witsml14:illuminanceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__illuminanceMeasure (-55)

#endif

/* witsml14__forcePerVolumeMeasure has binding name 'witsml14__forcePerVolumeMeasure' for type 'witsml14:forcePerVolumeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerVolumeMeasure (-54)

#endif

/* witsml14__forcePerLengthMeasure has binding name 'witsml14__forcePerLengthMeasure' for type 'witsml14:forcePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forcePerLengthMeasure (-53)

#endif

/* witsml14__forceMeasure has binding name 'witsml14__forceMeasure' for type 'witsml14:forceMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__forceMeasure (-52)

#endif

/* witsml14__equivalentPerMassMeasure has binding name 'witsml14__equivalentPerMassMeasure' for type 'witsml14:equivalentPerMassMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__equivalentPerMassMeasure (-51)

#endif

/* witsml14__electricPotentialMeasure has binding name 'witsml14__electricPotentialMeasure' for type 'witsml14:electricPotentialMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__electricPotentialMeasure (-50)

#endif

/* witsml14__electricCurrentMeasure has binding name 'witsml14__electricCurrentMeasure' for type 'witsml14:electricCurrentMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__electricCurrentMeasure (-49)

#endif

/* witsml14__dynamicViscosityMeasure has binding name 'witsml14__dynamicViscosityMeasure' for type 'witsml14:dynamicViscosityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__dynamicViscosityMeasure (-48)

#endif

/* witsml14__dimensionlessMeasure has binding name 'witsml14__dimensionlessMeasure' for type 'witsml14:dimensionlessMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__dimensionlessMeasure (-47)

#endif

/* witsml14__densityMeasure has binding name 'witsml14__densityMeasure' for type 'witsml14:densityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__densityMeasure (-46)

#endif

/* witsml14__compressibilityMeasure has binding name 'witsml14__compressibilityMeasure' for type 'witsml14:compressibilityMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__compressibilityMeasure (-45)

#endif

/* witsml14__areaPerAreaMeasure has binding name 'witsml14__areaPerAreaMeasure' for type 'witsml14:areaPerAreaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__areaPerAreaMeasure (-44)

#endif

/* witsml14__areaMeasure has binding name 'witsml14__areaMeasure' for type 'witsml14:areaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__areaMeasure (-43)

#endif

/* witsml14__anglePerTimeMeasure has binding name 'witsml14__anglePerTimeMeasure' for type 'witsml14:anglePerTimeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerTimeMeasure (-42)

#endif

/* witsml14__anglePerLengthMeasure has binding name 'witsml14__anglePerLengthMeasure' for type 'witsml14:anglePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__anglePerLengthMeasure (-41)

#endif

/* witsml14__accelerationLinearMeasure has binding name 'witsml14__accelerationLinearMeasure' for type 'witsml14:accelerationLinearMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__accelerationLinearMeasure (-40)

#endif

/* witsml14__indexedObject has binding name 'witsml14__indexedObject' for type 'witsml14:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__indexedObject (-39)

#endif

/* witsml14__cost has binding name 'witsml14__cost' for type 'witsml14:cost' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cost
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cost (-38)

#endif

/* witsml14__footageEastWest has binding name 'witsml14__footageEastWest' for type 'witsml14:footageEastWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__footageEastWest (-37)

#endif

/* witsml14__footageNorthSouth has binding name 'witsml14__footageNorthSouth' for type 'witsml14:footageNorthSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__footageNorthSouth (-36)

#endif

/* witsml14__wellElevationCoord has binding name 'witsml14__wellElevationCoord' for type 'witsml14:wellElevationCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellElevationCoord (-35)

#endif

/* witsml14__wellVerticalDepthCoord has binding name 'witsml14__wellVerticalDepthCoord' for type 'witsml14:wellVerticalDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellVerticalDepthCoord (-34)

#endif

/* witsml14__measuredDepthCoord has binding name 'witsml14__measuredDepthCoord' for type 'witsml14:measuredDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__measuredDepthCoord (-33)

#endif

/* witsml14__chronostratigraphyStruct has binding name 'witsml14__chronostratigraphyStruct' for type 'witsml14:chronostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__chronostratigraphyStruct (-32)

#endif

/* witsml14__lithostratigraphyStruct has binding name 'witsml14__lithostratigraphyStruct' for type 'witsml14:lithostratigraphyStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__lithostratigraphyStruct (-31)

#endif

/* witsml14__objectSequence has binding name 'witsml14__objectSequence' for type 'witsml14:objectSequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__objectSequence (-30)

#endif

/* witsml14__wellKnownNameStruct has binding name 'witsml14__wellKnownNameStruct' for type 'witsml14:wellKnownNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__wellKnownNameStruct (-29)

#endif

/* witsml14__shortNameStruct has binding name 'witsml14__shortNameStruct' for type 'witsml14:shortNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__shortNameStruct (-28)

#endif

/* witsml14__nameStruct has binding name 'witsml14__nameStruct' for type 'witsml14:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__nameStruct (-27)

#endif

/* witsml14__extensionvalue has binding name 'witsml14__extensionvalue' for type 'witsml14:extensionvalue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__extensionvalue (-26)

#endif

/* witsml14__timestampedCommentString has binding name 'witsml14__timestampedCommentString' for type 'witsml14:timestampedCommentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedCommentString (-25)

#endif

/* witsml14__refPositiveCount has binding name 'witsml14__refPositiveCount' for type 'witsml14:refPositiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refPositiveCount (-24)

#endif

/* witsml14__refObjectString has binding name 'witsml14__refObjectString' for type 'witsml14:refObjectString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refObjectString (-23)

#endif

/* witsml14__refNameString has binding name 'witsml14__refNameString' for type 'witsml14:refNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__refNameString (-22)

#endif

/* witsml14__ratioGenericMeasure has binding name 'witsml14__ratioGenericMeasure' for type 'witsml14:ratioGenericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__ratioGenericMeasure (-21)

#endif

/* witsml14__genericMeasure has binding name 'witsml14__genericMeasure' for type 'witsml14:genericMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__genericMeasure (-20)

#endif

/* witsml14__measureOrQuantity has binding name 'witsml14__measureOrQuantity' for type 'witsml14:measureOrQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__measureOrQuantity (-19)

#endif

/* witsml14__volumePerVolumeMeasurePercent has binding name 'witsml14__volumePerVolumeMeasurePercent' for type 'witsml14:volumePerVolumeMeasurePercent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__volumePerVolumeMeasurePercent (-18)

#endif

/* witsml14__yAxisAzimuth has binding name 'witsml14__yAxisAzimuth' for type 'witsml14:yAxisAzimuth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__yAxisAzimuth (-17)

#endif

/* witsml14__timestampedTimeZone has binding name 'witsml14__timestampedTimeZone' for type 'witsml14:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__timestampedTimeZone (-16)

#endif

/* witsml14__cs_USCOREdocumentFileCreation has binding name 'witsml14__cs_USCOREdocumentFileCreation' for type 'witsml14:cs_documentFileCreation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentFileCreation (-15)

#endif

/* witsml14__cs_USCOREdocumentInfo has binding name 'witsml14__cs_USCOREdocumentInfo' for type 'witsml14:cs_documentInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__cs_USCOREdocumentInfo (-14)

#endif

/* witsml14__obj_USCOREwell has binding name 'witsml14__obj_USCOREwell' for type 'witsml14:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwell (-13)

#endif

/* witsml14__obj_USCOREwells has binding name 'witsml14__obj_USCOREwells' for type 'witsml14:obj_wells' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells
#define SOAP_TYPE_gsoap_witsml1_4_witsml14__obj_USCOREwells (-12)

#endif

/* xsd__date has binding name 'xsd__date' for type 'xsd:date' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_xsd__date
#define SOAP_TYPE_gsoap_witsml1_4_xsd__date (-11)

#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__string
#define SOAP_TYPE_gsoap_witsml1_4_std__string (-10)

#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Fault (-1350922247)

#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Reason (-1350922246)

#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Detail (-1350922243)

#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Code (-1350922241)

#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header
#define SOAP_TYPE_gsoap_witsml1_4_SOAP_ENV__Header (-1350922240)

#endif

/* witsml14__timestamp has binding name 'witsml14__timestamp' for type 'witsml14:timestamp' */
#ifndef SOAP_TYPE_witsml14__timestamp
#define SOAP_TYPE_witsml14__timestamp (-125)

#endif

/* witsml14__abstractDateTime has binding name 'witsml14__abstractDateTime' for type 'witsml14:abstractDateTime' */
#ifndef SOAP_TYPE_witsml14__abstractDateTime
#define SOAP_TYPE_witsml14__abstractDateTime (-115)

#endif

/* xsd__dateTime has binding name 'xsd__dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (-9)

#endif

/* struct tm has binding name 'tm' for type 'tm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_tm
#define SOAP_TYPE_gsoap_witsml1_4_tm (-8)

#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Reason (-1350922249)

#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Detail (-1350922248)

#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Code
#define SOAP_TYPE_gsoap_witsml1_4_PointerToSOAP_ENV__Code (-1350922242)

#endif

/* std::string * has binding name 'PointerTowitsml14__refWellDatum' for type 'witsml14:refWellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refWellDatum
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refWellDatum (-445)

#endif

/* witsml14__ChronostratigraphyUnit * has binding name 'PointerTowitsml14__ChronostratigraphyUnit' for type 'witsml14:ChronostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ChronostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ChronostratigraphyUnit (-444)

#endif

/* witsml14__LithostratigraphyUnit * has binding name 'PointerTowitsml14__LithostratigraphyUnit' for type 'witsml14:LithostratigraphyUnit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__LithostratigraphyUnit
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__LithostratigraphyUnit (-443)

#endif

/* std::string * has binding name 'PointerTowitsml14__refString' for type 'witsml14:refString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refString (-442)

#endif

/* std::string * has binding name 'PointerTowitsml14__uomString' for type 'witsml14:uomString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uomString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uomString (-441)

#endif

/* witsml14__obj_USCOREtrajectory * has binding name 'PointerTowitsml14__obj_USCOREtrajectory' for type 'witsml14:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREtrajectory (-439)

#endif

/* witsml14__obj_USCOREwellbore * has binding name 'PointerTowitsml14__obj_USCOREwellbore' for type 'witsml14:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREwellbore (-437)

#endif

/* witsml14__obj_USCOREwell * has binding name 'PointerTowitsml14__obj_USCOREwell' for type 'witsml14:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__obj_USCOREwell (-435)

#endif

/* witsml14__cs_USCOREdocumentInfo * has binding name 'PointerTowitsml14__cs_USCOREdocumentInfo' for type 'witsml14:cs_documentInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentInfo
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentInfo (-434)

#endif

/* witsml14__areaMeasure * has binding name 'PointerTowitsml14__areaMeasure' for type 'witsml14:areaMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__areaMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__areaMeasure (-433)

#endif

/* witsml14__cs_USCORErefWellboreTrajectoryStation * has binding name 'PointerTowitsml14__cs_USCORErefWellboreTrajectoryStation' for type 'witsml14:cs_refWellboreTrajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellboreTrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellboreTrajectoryStation (-432)

#endif

/* witsml14__cs_USCOREstnTrajMatrixCov * has binding name 'PointerTowitsml14__cs_USCOREstnTrajMatrixCov' for type 'witsml14:cs_stnTrajMatrixCov' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajMatrixCov
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajMatrixCov (-431)

#endif

/* witsml14__cs_USCOREstnTrajValid * has binding name 'PointerTowitsml14__cs_USCOREstnTrajValid' for type 'witsml14:cs_stnTrajValid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajValid
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajValid (-430)

#endif

/* witsml14__cs_USCOREstnTrajCorUsed * has binding name 'PointerTowitsml14__cs_USCOREstnTrajCorUsed' for type 'witsml14:cs_stnTrajCorUsed' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajCorUsed
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajCorUsed (-429)

#endif

/* witsml14__cs_USCOREstnTrajRawData * has binding name 'PointerTowitsml14__cs_USCOREstnTrajRawData' for type 'witsml14:cs_stnTrajRawData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajRawData
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREstnTrajRawData (-428)

#endif

/* witsml14__TrajStationStatus * has binding name 'PointerTowitsml14__TrajStationStatus' for type 'witsml14:TrajStationStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TrajStationStatus
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TrajStationStatus (-427)

#endif

/* witsml14__magneticInductionMeasure * has binding name 'PointerTowitsml14__magneticInductionMeasure' for type 'witsml14:magneticInductionMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__magneticInductionMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__magneticInductionMeasure (-426)

#endif

/* witsml14__accelerationLinearMeasure * has binding name 'PointerTowitsml14__accelerationLinearMeasure' for type 'witsml14:accelerationLinearMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__accelerationLinearMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__accelerationLinearMeasure (-425)

#endif

/* witsml14__anglePerLengthMeasure * has binding name 'PointerTowitsml14__anglePerLengthMeasure' for type 'witsml14:anglePerLengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__anglePerLengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__anglePerLengthMeasure (-424)

#endif

/* std::string * has binding name 'PointerTowitsml14__TrajStnCalcAlgorithm' for type 'witsml14:TrajStnCalcAlgorithm' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TrajStnCalcAlgorithm
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TrajStnCalcAlgorithm (-423)

#endif

/* std::string * has binding name 'PointerTowitsml14__TypeSurveyTool' for type 'witsml14:TypeSurveyTool' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TypeSurveyTool
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__TypeSurveyTool (-422)

#endif

/* struct __witsml14__obj_USCOREtrajectory_sequence * has binding name 'PointerTo__witsml14__obj_USCOREtrajectory_sequence' for type '-witsml14:obj_trajectory-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREtrajectory_sequence
#define SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREtrajectory_sequence (-421)

#endif

/* witsml14__cs_USCOREtrajectoryStation * has binding name 'PointerTowitsml14__cs_USCOREtrajectoryStation' for type 'witsml14:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREtrajectoryStation (-419)

#endif

/* witsml14__AziRef * has binding name 'PointerTowitsml14__AziRef' for type 'witsml14:AziRef' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__AziRef
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__AziRef (-418)

#endif

/* witsml14__cs_USCORErefWellboreTrajectory * has binding name 'PointerTowitsml14__cs_USCORErefWellboreTrajectory' for type 'witsml14:cs_refWellboreTrajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellboreTrajectory
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellboreTrajectory (-417)

#endif

/* std::string * has binding name 'PointerTowitsml14__uidParentString' for type 'witsml14:uidParentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uidParentString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uidParentString (-415)

#endif

/* struct __witsml14__obj_USCOREwellbore_sequence * has binding name 'PointerTo__witsml14__obj_USCOREwellbore_sequence' for type '-witsml14:obj_wellbore-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREwellbore_sequence
#define SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREwellbore_sequence (-414)

#endif

/* witsml14__timeMeasure * has binding name 'PointerTowitsml14__timeMeasure' for type 'witsml14:timeMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timeMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timeMeasure (-413)

#endif

/* witsml14__wellVerticalDepthCoord * has binding name 'PointerTowitsml14__wellVerticalDepthCoord' for type 'witsml14:wellVerticalDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellVerticalDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellVerticalDepthCoord (-412)

#endif

/* witsml14__WellboreShape * has binding name 'PointerTowitsml14__WellboreShape' for type 'witsml14:WellboreShape' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellboreShape
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellboreShape (-411)

#endif

/* witsml14__WellboreType * has binding name 'PointerTowitsml14__WellboreType' for type 'witsml14:WellboreType' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellboreType
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellboreType (-410)

#endif

/* witsml14__cs_USCOREextensionAny * has binding name 'PointerTowitsml14__cs_USCOREextensionAny' for type 'witsml14:cs_extensionAny' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREextensionAny
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREextensionAny (-407)

#endif

/* bool * has binding name 'PointerTobool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTobool
#define SOAP_TYPE_gsoap_witsml1_4_PointerTobool (-406)

#endif

/* witsml14__timestampedTimeZone * has binding name 'PointerTowitsml14__timestampedTimeZone' for type 'witsml14:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timestampedTimeZone (-404)

#endif

/* witsml14__ItemState * has binding name 'PointerTowitsml14__ItemState' for type 'witsml14:ItemState' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ItemState
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ItemState (-403)

#endif

/* witsml14__yAxisAzimuth * has binding name 'PointerTowitsml14__yAxisAzimuth' for type 'witsml14:yAxisAzimuth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__yAxisAzimuth
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__yAxisAzimuth (-402)

#endif

/* witsml14__indexedObject * has binding name 'PointerTowitsml14__indexedObject' for type 'witsml14:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__indexedObject (-399)

#endif

/* witsml14__Hemispheres * has binding name 'PointerTowitsml14__Hemispheres' for type 'witsml14:Hemispheres' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Hemispheres
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Hemispheres (-398)

#endif

/* witsml14__NADTypes * has binding name 'PointerTowitsml14__NADTypes' for type 'witsml14:NADTypes' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__NADTypes
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__NADTypes (-397)

#endif

/* std::string * has binding name 'PointerTowitsml14__geodeticZoneString' for type 'witsml14:geodeticZoneString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__geodeticZoneString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__geodeticZoneString (-396)

#endif

/* witsml14__ProjectionVariantsObliqueMercator * has binding name 'PointerTowitsml14__ProjectionVariantsObliqueMercator' for type 'witsml14:ProjectionVariantsObliqueMercator' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ProjectionVariantsObliqueMercator
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ProjectionVariantsObliqueMercator (-395)

#endif

/* witsml14__Projection * has binding name 'PointerTowitsml14__Projection' for type 'witsml14:Projection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Projection
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Projection (-394)

#endif

/* witsml14__Ellipsoid * has binding name 'PointerTowitsml14__Ellipsoid' for type 'witsml14:Ellipsoid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Ellipsoid
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__Ellipsoid (-393)

#endif

/* double * has binding name 'PointerTowitsml14__unitlessQuantity' for type 'witsml14:unitlessQuantity' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__unitlessQuantity
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__unitlessQuantity (-392)

#endif

/* witsml14__GeodeticDatum * has binding name 'PointerTowitsml14__GeodeticDatum' for type 'witsml14:GeodeticDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__GeodeticDatum
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__GeodeticDatum (-391)

#endif

/* witsml14__cs_USCORElocalCRS * has binding name 'PointerTowitsml14__cs_USCORElocalCRS' for type 'witsml14:cs_localCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORElocalCRS
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORElocalCRS (-390)

#endif

/* witsml14__cs_USCOREgeodeticModel * has binding name 'PointerTowitsml14__cs_USCOREgeodeticModel' for type 'witsml14:cs_geodeticModel' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREgeodeticModel
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREgeodeticModel (-389)

#endif

/* witsml14__cs_USCOREprojectionx * has binding name 'PointerTowitsml14__cs_USCOREprojectionx' for type 'witsml14:cs_projectionx' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREprojectionx
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREprojectionx (-388)

#endif

/* witsml14__footageEastWest * has binding name 'PointerTowitsml14__footageEastWest' for type 'witsml14:footageEastWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__footageEastWest
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__footageEastWest (-386)

#endif

/* witsml14__footageNorthSouth * has binding name 'PointerTowitsml14__footageNorthSouth' for type 'witsml14:footageNorthSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__footageNorthSouth
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__footageNorthSouth (-385)

#endif

/* std::string * has binding name 'PointerTowitsml14__publicLandSurveySystemQuarterTownship' for type 'witsml14:publicLandSurveySystemQuarterTownship' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__publicLandSurveySystemQuarterTownship
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__publicLandSurveySystemQuarterTownship (-384)

#endif

/* std::string * has binding name 'PointerTowitsml14__publicLandSurveySystemQuarterSection' for type 'witsml14:publicLandSurveySystemQuarterSection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__publicLandSurveySystemQuarterSection
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__publicLandSurveySystemQuarterSection (-383)

#endif

/* std::string * has binding name 'PointerTowitsml14__sectionNumber' for type 'witsml14:sectionNumber' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__sectionNumber
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__sectionNumber (-382)

#endif

/* witsml14__NorthOrSouth * has binding name 'PointerTowitsml14__NorthOrSouth' for type 'witsml14:NorthOrSouth' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__NorthOrSouth
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__NorthOrSouth (-381)

#endif

/* witsml14__EastOrWest * has binding name 'PointerTowitsml14__EastOrWest' for type 'witsml14:EastOrWest' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__EastOrWest
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__EastOrWest (-380)

#endif

/* witsml14__PrincipalMeridian * has binding name 'PointerTowitsml14__PrincipalMeridian' for type 'witsml14:PrincipalMeridian' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__PrincipalMeridian
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__PrincipalMeridian (-379)

#endif

/* witsml14__cs_USCORErefWellWellboreRig * has binding name 'PointerTowitsml14__cs_USCORErefWellWellboreRig' for type 'witsml14:cs_refWellWellboreRig' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellWellboreRig
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellWellboreRig (-378)

#endif

/* witsml14__cs_USCORErefWellWellbore * has binding name 'PointerTowitsml14__cs_USCORErefWellWellbore' for type 'witsml14:cs_refWellWellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellWellbore
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORErefWellWellbore (-377)

#endif

/* witsml14__wellKnownNameStruct * has binding name 'PointerTowitsml14__wellKnownNameStruct' for type 'witsml14:wellKnownNameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellKnownNameStruct
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellKnownNameStruct (-375)

#endif

/* witsml14__ElevCodeEnum * has binding name 'PointerTowitsml14__ElevCodeEnum' for type 'witsml14:ElevCodeEnum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ElevCodeEnum
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__ElevCodeEnum (-373)

#endif

/* bool * has binding name 'PointerTowitsml14__logicalBoolean' for type 'witsml14:logicalBoolean' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__logicalBoolean
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__logicalBoolean (-372)

#endif

/* witsml14__planeAngleMeasure * has binding name 'PointerTowitsml14__planeAngleMeasure' for type 'witsml14:planeAngleMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__planeAngleMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__planeAngleMeasure (-371)

#endif

/* witsml14__refNameString * has binding name 'PointerTowitsml14__refNameString' for type 'witsml14:refNameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refNameString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__refNameString (-370)

#endif

/* witsml14__cs_USCOREdocumentEvent * has binding name 'PointerTowitsml14__cs_USCOREdocumentEvent' for type 'witsml14:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentEvent (-368)

#endif

/* std::string * has binding name 'PointerTowitsml14__descriptionString' for type 'witsml14:descriptionString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__descriptionString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__descriptionString (-367)

#endif

/* std::string * has binding name 'PointerTowitsml14__MeasureClass' for type 'witsml14:MeasureClass' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__MeasureClass
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__MeasureClass (-366)

#endif

/* short * has binding name 'PointerTowitsml14__positiveCount' for type 'witsml14:positiveCount' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__positiveCount
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__positiveCount (-365)

#endif

/* witsml14__measuredDepthCoord * has binding name 'PointerTowitsml14__measuredDepthCoord' for type 'witsml14:measuredDepthCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__measuredDepthCoord
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__measuredDepthCoord (-364)

#endif

/* witsml14__extensionvalue * has binding name 'PointerTowitsml14__extensionvalue' for type 'witsml14:extensionvalue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__extensionvalue
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__extensionvalue (-363)

#endif

/* witsml14__cs_USCOREextensionNameValue * has binding name 'PointerTowitsml14__cs_USCOREextensionNameValue' for type 'witsml14:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREextensionNameValue (-361)

#endif

/* std::string * has binding name 'PointerTowitsml14__kindString' for type 'witsml14:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__kindString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__kindString (-360)

#endif

/* witsml14__cs_USCOREdocumentAudit * has binding name 'PointerTowitsml14__cs_USCOREdocumentAudit' for type 'witsml14:cs_documentAudit' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentAudit
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentAudit (-359)

#endif

/* std::string * has binding name 'PointerTowitsml14__commentString' for type 'witsml14:commentString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__commentString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__commentString (-358)

#endif

/* witsml14__cs_USCOREdocumentSecurityInfo * has binding name 'PointerTowitsml14__cs_USCOREdocumentSecurityInfo' for type 'witsml14:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentSecurityInfo (-356)

#endif

/* witsml14__cs_USCOREdocumentFileCreation * has binding name 'PointerTowitsml14__cs_USCOREdocumentFileCreation' for type 'witsml14:cs_documentFileCreation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentFileCreation
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREdocumentFileCreation (-355)

#endif

/* witsml14__nameStruct * has binding name 'PointerTowitsml14__nameStruct' for type 'witsml14:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__nameStruct (-353)

#endif

/* std::string * has binding name 'PointerTowitsml14__uidString' for type 'witsml14:uidString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uidString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__uidString (-351)

#endif

/* witsml14__cs_USCOREcustomData * has binding name 'PointerTowitsml14__cs_USCOREcustomData' for type 'witsml14:cs_customData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREcustomData
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREcustomData (-350)

#endif

/* witsml14__cs_USCOREcommonData * has binding name 'PointerTowitsml14__cs_USCOREcommonData' for type 'witsml14:cs_commonData' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREcommonData
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREcommonData (-349)

#endif

/* struct __witsml14__obj_USCOREwell_sequence * has binding name 'PointerTo__witsml14__obj_USCOREwell_sequence' for type '-witsml14:obj_well-sequence' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREwell_sequence
#define SOAP_TYPE_gsoap_witsml1_4_PointerTo__witsml14__obj_USCOREwell_sequence (-348)

#endif

/* witsml14__cs_USCOREwellCRS * has binding name 'PointerTowitsml14__cs_USCOREwellCRS' for type 'witsml14:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREwellCRS (-346)

#endif

/* witsml14__cs_USCOREreferencePoint * has binding name 'PointerTowitsml14__cs_USCOREreferencePoint' for type 'witsml14:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREreferencePoint (-344)

#endif

/* witsml14__cs_USCOREpublicLandSurveySystem * has binding name 'PointerTowitsml14__cs_USCOREpublicLandSurveySystem' for type 'witsml14:cs_publicLandSurveySystem' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREpublicLandSurveySystem
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREpublicLandSurveySystem (-343)

#endif

/* witsml14__cs_USCORElocation * has binding name 'PointerTowitsml14__cs_USCORElocation' for type 'witsml14:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCORElocation (-341)

#endif

/* witsml14__lengthMeasure * has binding name 'PointerTowitsml14__lengthMeasure' for type 'witsml14:lengthMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__lengthMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__lengthMeasure (-340)

#endif

/* witsml14__cs_USCOREwellDatum * has binding name 'PointerTowitsml14__cs_USCOREwellDatum' for type 'witsml14:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__cs_USCOREwellDatum (-338)

#endif

/* witsml14__wellElevationCoord * has binding name 'PointerTowitsml14__wellElevationCoord' for type 'witsml14:wellElevationCoord' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellElevationCoord
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__wellElevationCoord (-337)

#endif

/* witsml14__WellDirection * has binding name 'PointerTowitsml14__WellDirection' for type 'witsml14:WellDirection' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellDirection
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellDirection (-336)

#endif

/* witsml14__WellFluid * has binding name 'PointerTowitsml14__WellFluid' for type 'witsml14:WellFluid' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellFluid
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellFluid (-335)

#endif

/* witsml14__WellPurpose * has binding name 'PointerTowitsml14__WellPurpose' for type 'witsml14:WellPurpose' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellPurpose
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellPurpose (-334)

#endif

/* witsml14__WellStatus * has binding name 'PointerTowitsml14__WellStatus' for type 'witsml14:WellStatus' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellStatus
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__WellStatus (-333)

#endif

/* witsml14__dimensionlessMeasure * has binding name 'PointerTowitsml14__dimensionlessMeasure' for type 'witsml14:dimensionlessMeasure' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__dimensionlessMeasure
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__dimensionlessMeasure (-332)

#endif

/* std::string * has binding name 'PointerTowitsml14__str32' for type 'witsml14:str32' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__str32
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__str32 (-331)

#endif

/* struct tm * has binding name 'PointerTowitsml14__timestamp' for type 'witsml14:timestamp' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timestamp
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__timestamp (-330)

#endif

/* std::string * has binding name 'PointerTowitsml14__nameString' for type 'witsml14:nameString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__nameString
#define SOAP_TYPE_gsoap_witsml1_4_PointerTowitsml14__nameString (-329)

#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE_gsoap_witsml1_4__QName
#define SOAP_TYPE_gsoap_witsml1_4__QName (-6)

#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4__XML
#define SOAP_TYPE_gsoap_witsml1_4__XML (-5)

#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_string
#define SOAP_TYPE_gsoap_witsml1_4_string (-4)

#endif

/* std::vector<witsml14__obj_USCOREtrajectory *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__obj_USCOREtrajectory' for type 'witsml14:obj_trajectory' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREtrajectory
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREtrajectory (-440)

#endif

/* std::vector<witsml14__obj_USCOREwellbore *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__obj_USCOREwellbore' for type 'witsml14:obj_wellbore' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREwellbore
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREwellbore (-438)

#endif

/* std::vector<witsml14__obj_USCOREwell *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__obj_USCOREwell' for type 'witsml14:obj_well' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREwell
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__obj_USCOREwell (-436)

#endif

/* std::vector<witsml14__cs_USCOREtrajectoryStation *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREtrajectoryStation' for type 'witsml14:cs_trajectoryStation' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREtrajectoryStation
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREtrajectoryStation (-420)

#endif

/* std::vector<char *>  has binding name 'std__vectorTemplateOf_XML' for type '' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOf_XML
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOf_XML (-408)

#endif

/* std::vector<witsml14__timestampedTimeZone *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__timestampedTimeZone' for type 'witsml14:timestampedTimeZone' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__timestampedTimeZone
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__timestampedTimeZone (-405)

#endif

/* std::vector<witsml14__indexedObject *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__indexedObject' for type 'witsml14:indexedObject' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__indexedObject
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__indexedObject (-400)

#endif

/* std::vector<std::string>  has binding name 'std__vectorTemplateOfwitsml14__kindString' for type 'witsml14:kindString' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfwitsml14__kindString
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfwitsml14__kindString (-376)

#endif

/* std::vector<witsml14__cs_USCOREdocumentEvent *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentEvent' for type 'witsml14:cs_documentEvent' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentEvent
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentEvent (-369)

#endif

/* std::vector<witsml14__cs_USCOREextensionNameValue *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREextensionNameValue' for type 'witsml14:cs_extensionNameValue' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREextensionNameValue
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREextensionNameValue (-362)

#endif

/* std::vector<witsml14__cs_USCOREdocumentSecurityInfo *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentSecurityInfo' for type 'witsml14:cs_documentSecurityInfo' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentSecurityInfo
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREdocumentSecurityInfo (-357)

#endif

/* std::vector<witsml14__nameStruct *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__nameStruct' for type 'witsml14:nameStruct' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__nameStruct
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__nameStruct (-354)

#endif

/* std::vector<witsml14__cs_USCOREwellCRS *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellCRS' for type 'witsml14:cs_wellCRS' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellCRS
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellCRS (-347)

#endif

/* std::vector<witsml14__cs_USCOREreferencePoint *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREreferencePoint' for type 'witsml14:cs_referencePoint' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREreferencePoint
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREreferencePoint (-345)

#endif

/* std::vector<witsml14__cs_USCORElocation *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCORElocation' for type 'witsml14:cs_location' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCORElocation
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCORElocation (-342)

#endif

/* std::vector<witsml14__cs_USCOREwellDatum *>  has binding name 'std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellDatum' for type 'witsml14:cs_wellDatum' */
#ifndef SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellDatum
#define SOAP_TYPE_gsoap_witsml1_4_std__vectorTemplateOfPointerTowitsml14__cs_USCOREwellDatum (-339)

#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace gsoap_witsml1_4


#endif

/* End of gsoap_witsml1_4Stub.h */
