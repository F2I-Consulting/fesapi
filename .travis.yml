language: cpp

matrix:
    include:
        - os: linux
          name: "FesapiCpp with dynamic HDF5 (gcc 4.8.4)"
          sudo: required
          dist: trusty
          compiler: gcc
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-linux
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example
        - os: linux
          name: "FesapiCpp with dynamic HDF5 (clang 5.0.0)"
          sudo: required
          dist: trusty
          compiler: clang
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-linux
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example
        - os: linux
          name: "FesapiCpp with static HDF5"
          sudo: required
          dist: trusty
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-linux
                  -DHDF5_USE_STATIC_LIBRARIES:BOOL=TRUE
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example 
        - os: linux
          name: "FesapiCpp with dynamic HDF5 and Java wrapper"
          sudo: required
          dist: trusty
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-linux
                  -DWITH_JAVA_WRAPPING:BOOL=TRUE
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example
        - os: osx
          name: "FesapiCpp with dynamic HDF5"
          osx_image: xcode10
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-osx\;$(brew --prefix hdf5@1.8);
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example  
        - os: osx
          name: "FesapiCpp with static HDF5"
          osx_image: xcode10
          script:
            - cmake --version
            - mkdir ../build
            - cd ../build
            - cmake $TRAVIS_BUILD_DIR
                  -DCMAKE_PREFIX_PATH:PATH=$TRAVIS_BUILD_DIR/../dependencies/Minizip-osx\;$(brew --prefix hdf5@1.8);
                  -DHDF5_USE_STATIC_LIBRARIES:BOOL=TRUE
            - cmake --build .
            - sudo cmake --build . --target install
            - /usr/local/bin/example  
addons:
  apt:
    sources:
      - sourceline: ppa:dluxen/cmake-backports
      #- sourceline: ppa:nschloe/hdf5-backports
    packages:
      - uuid-dev
      - cmake3 #3.12.2
      - libhdf5-dev #1.8.11
      #- libhdf5-dev-1.8.16  
      - zlib1g-dev
      - swig
  homebrew:
    packages:
      - ossp-uuid
      - hdf5@1.8 #1.8.21

branches:
  only:
  - geosiris

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get purge cmake; fi
  - sudo rm -rf /usr/local/cmake-*
  - mkdir ../dependencies
  - cd ../dependencies
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://github.com/untereiner/Minizip/releases/download/1.2/Minizip-linux.zip;
      unzip Minizip-linux.zip -d Minizip-linux;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      wget https://github.com/untereiner/Minizip/releases/download/1.2/Minizip-osx.zip;
      unzip Minizip-osx.zip -d Minizip-osx;
    fi